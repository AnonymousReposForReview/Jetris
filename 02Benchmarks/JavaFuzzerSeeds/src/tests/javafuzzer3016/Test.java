package tests.javafuzzer3016;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:46:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=51429L;
    public static double dFld=-116.6246;
    public static byte byFld=27;
    public static volatile short sFld=-1961;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6232);
    }

    public static long fMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long fMeth1_check_sum = 0;

    public static float fMeth1(long l) {

        int i7=0, i8=-148, i9=8, i10=32341, i11=-44896, i12=242, i13=26007, i14=146, i15=-91;
        float f1=20.721F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3922663652L);

        i7 -= (int)Test.instanceCount;
        for (i8 = 1; i8 < 323; ++i8) {
            for (i10 = i8; i10 < 5; i10++) {
                switch ((i8 % 8) + 75) {
                case 75:
                    Test.dFld *= Test.byFld;
                    for (i12 = 1; i12 > 1; --i12) {
                        lArr[i8] = i10;
                        if (i9 != 0) {
                        }
                        i7 = i9;
                        try {
                            i11 = (i7 / i7);
                            Test.iArrFld[i8 - 1] = (Test.iArrFld[i12] / -43);
                            i7 = (-1413047293 % i12);
                        } catch (ArithmeticException a_e) {}
                        l = i8;
                    }
                    break;
                case 76:
                    for (i14 = 1; i14 < 1; i14++) {
                        Test.sFld += (short)i11;
                        lArr = lArr;
                        f1 += (((i14 * i15) + l) - i12);
                    }
                    break;
                case 77:
                    i7 *= i13;
                case 78:
                    l += i7;
                    break;
                case 79:
                    f1 -= (float)Test.dFld;
                    break;
                case 80:
                    l += (-896 + (i10 * i10));
                    break;
                case 81:
                    Test.sFld = (short)i15;
                    break;
                case 82:
                    Test.instanceCount *= (long)-2.394F;
                    break;
                }
            }
        }
        long meth_res = l + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
        fMeth1_check_sum += meth_res;
        return (float)meth_res;
    }

    public static short sMeth(int i5, int i6, boolean b) {


        i5 = (int)Test.instanceCount;
        fMeth1(-63726L);
        long meth_res = i5 + i6 + (b ? 1 : 0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static float fMeth() {

        int i4=-11, i16=-198, i17=2, i18=11474, i19=9, i20=17693;
        boolean b1=false;
        long l1=48L;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.73687);

        for (double d : dArr) {
            i4 = (int)(++Test.instanceCount);
        }
        i4 += (Short.reverseBytes(sMeth(i4, i4, b1)) * 25);
        i16 = 1;
        while (++i16 < 171) {
            Test.iArrFld[i16] = i4;
            for (i17 = 1; 9 > i17; ++i17) {
                i19 = 1;
                while (++i19 < 2) {
                    Test.iArrFld[i17 + 1] *= (int)Test.instanceCount;
                    Test.iArrFld[i16] -= (int)Test.instanceCount;
                    if (i18 != 0) {
                    }
                    switch (((i19 % 7) * 5) + 3) {
                    case 6:
                    case 29:
                        i18 >>>= i20;
                        if (b1) continue;
                        b1 = b1;
                        i20 += i19;
                        break;
                    case 23:
                        Test.dFld *= 12333;
                        break;
                    case 26:
                        i20 -= (int)-7830953683418629619L;
                        break;
                    case 19:
                        i20 = i19;
                        break;
                    case 18:
                        Test.sFld += (short)(i19 ^ l1);
                        break;
                    case 9:
                        i18 = (int)Test.dFld;
                    default:
                        Test.iArrFld[i17 + 1] = (int)l1;
                    }
                }
            }
        }
        long meth_res = i4 + (b1 ? 1 : 0) + i16 + i17 + i18 + i19 + i20 + l1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i1=30312, i2=2, i3=2, i21=-212, i22=3, i23=-10240, i24=14, i25=19245;
        float f=2.582F;
        long l2=1494536858L;

        for (i = 4; i < 328; ++i) {
            for (i2 = 1; i2 < 78; i2++) {
                Test.iArrFld[i] = (i3 + ((i3 * i) - i1));
                i1 = i1;
                Test.instanceCount += (i2 * i2);
                i1 += (i2 - i1);
                f = fMeth();
                if (bFld) break;
                Test.byFld -= (byte)i;
            }
            switch (((i % 10) * 5) + 84) {
            case 130:
            case 89:
                i3 = (int)Test.instanceCount;
                for (i21 = 1; i21 < 78; i21++) {
                    i23 = 1;
                    do {
                        Test.dFld += i2;
                        i3 += i23;
                    } while (++i23 < 2);
                    if (bFld) break;
                    i1 = i22;
                    i22 += i21;
                    i3 += i21;
                    i1 += (((i21 * f) + i3) - i21);
                    i1 = i1;
                    for (i24 = 1; i24 < 2; ++i24) {
                        Test.iArrFld[i] >>= (int)Test.instanceCount;
                        i3 = i22;
                    }
                    if (bFld) break;
                }
                l2 = 1;
                do {
                    if (false) break;
                    f += (l2 - Test.instanceCount);
                    Test.instanceCount *= (long)2.763F;
                } while (++l2 < 78);
            case 111:
                i3 = -19113;
                break;
            case 112:
                if (bFld) continue;
                break;
            case 116:
                Test.sFld -= (short)i3;
                break;
            case 96:
                Test.dFld = l2;
                break;
            case 108:
            case 106:
                i22 = i1;
            case 122:
                Test.byFld += (byte)(i * i);
                break;
            case 93:
                i22 -= i2;
                break;
            default:
                i3 *= (int)f;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  sMeth ->  sMeth fMeth mainTest
//DEBUG  fMeth1 ->  fMeth1 sMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
