package tests.javafuzzer1414;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:55:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-813143928L;
    public static byte byFld=-12;
    public short sFld=4552;
    public static boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.636F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        int i8=-30941, i9=27934, i10=-152, i11=35813, iArr1[]=new int[N];
        boolean b=false, bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -1);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 81957444627185374L);

        for (int i7 : iArr1) {
            i8 = 1;
            do {
                Test.fArrFld[i8] = 43335;
                i9 = 1;
                while (--i9 > 0) {
                    i7 <<= i8;
                    Test.instanceCount += i9;
                    bArr[i9 + 1] = b;
                }
                i7 += i7;
                for (i10 = 1; i10 < 1; i10++) {
                    iArr1[i8 + 1] += (int)832175928286648966L;
                }
                i11 = i6;
                Test.byFld += (byte)i10;
                i6 >>= i9;
                i11 <<= (int)-223L;
                lArr[i8 + 1] = 11;
            } while (++i8 < 4);
        }
        long meth_res = i6 + i8 + i9 + (b ? 1 : 0) + i10 + i11 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i4, int i5) {

        float f=-104.590F;
        double d1=-1.62833, d2=-116.53706;
        int i12=2883, iArr2[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -31);
        FuzzerUtils.init(lArr1, -7040L);

        iMeth(i4);
        i5 *= i5;
        i4 += (int)f;
        i4 <<= (int)Test.instanceCount;
        for (d1 = 10; d1 < 322; ++d1) {
            Test.instanceCount += i5;
            Test.instanceCount = -40;
            switch ((((i4 >>> 1) % 7) * 5) + 40) {
            case 55:
                i5 = (int)d1;
                i4 = 50;
                break;
            case 67:
                iArr2[(int)(d1 + 1)] *= i5;
                f += (float)d1;
                lArr1[(int)(d1 + 1)] >>= Test.byFld;
            case 48:
                lArr1[(int)(d1)] = i4;
                i12 += (int)(d1 * d1);
                break;
            case 64:
                d2 -= i4;
                break;
            case 50:
            case 74:
                i12 >>= i5;
                break;
            case 52:
                i5 >>= (int)Test.instanceCount;
                break;
            default:
                iArr2[(int)(d1 + 1)] *= (int)f;
            }
        }
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i12 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i3, short s) {

        int i13=-241, i14=-13186, i15=-35038, i16=0, iArr[]=new int[N];
        boolean b1=true;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(iArr, -21580);
        FuzzerUtils.init(sArr, (short)4108);

        iArr = (iArr = (iArr = (iArr = FuzzerUtils.int1array(N, (int)5))));
        vMeth1(i3, i3);
        for (i13 = 15; i13 < 386; i13++) {
            for (i15 = 1; 5 > i15; i15++) {
                float f1=0.256F;
                i16 += i15;
                try {
                    i3 = (192 % i16);
                    i14 = (-121 / i16);
                    i3 = (i15 % -84);
                } catch (ArithmeticException a_e) {}
                f1 += ((long)i15 | (long)Test.byFld);
            }
            i3 = i14;
            Test.instanceCount *= i3;
            i16 = i16;
            sArr[i13 + 1][(-50071 >>> 1) % N] = (short)i13;
            i14 += (i13 | s);
            if (b1) break;
        }
        b1 = b1;
        i3 -= i16;
        vMeth_check_sum += i3 + s + i13 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=8, i1=-170, i17=-12, i18=-96, i19=-6, iArr3[][]=new int[N][N];
        double d=2.130045;
        float f2=23.804F;

        FuzzerUtils.init(iArr3, 1);

        for (i = 8; i < 214; i++) {
            int i2=0;
            d -= ((i1 - i) - (i2 = (int)(-3129827995446480593L - (i1 *= (int)Test.instanceCount))));
            i1 = (i1++);
            vMeth(i2, sFld);
            i17 = 122;
            while (--i17 > 0) {
                for (i18 = 1; i18 < 1; i18++) {
                    Test.instanceCount += (long)f2;
                    i1 = (int)Test.instanceCount;
                    f2 = f2;
                    lArrFld[i + 1] += i17;
                    i2 += i19;
                    i1 += (-250 + (i18 * i18));
                    i19 = i2;
                    switch (((i17 % 7) * 5) + 61) {
                    case 81:
                        Test.bFld = Test.bFld;
                        iArr3[i18 + 1] = iArr3[i - 1];
                    case 80:
                    case 96:
                        f2 = i;
                        iArr3[i18 + 1][i - 1] *= i18;
                        break;
                    case 83:
                        lArrFld[i17] = -210L;
                        i19 += (int)Test.instanceCount;
                        iArr3[i18 + 1][i + 1] %= (int)(i18 | 1);
                        i2 >>= i17;
                        break;
                    case 86:
                        i1 >>= i19;
                        break;
                    case 69:
                        switch (((241 >>> 1) % 4) + 119) {
                        case 119:
                            i19 += i18;
                            Test.bFld = true;
                            break;
                        case 120:
                            lArrFld[i18 - 1] -= i2;
                            byArrFld[i - 1] = Test.byFld;
                            i2 -= (int)f2;
                            lArrFld = lArrFld;
                            break;
                        case 121:
                            i2 = i2;
                            break;
                        case 122:
                            i1 *= i1;
                            break;
                        }
                        break;
                    case 89:
                        Test.instanceCount -= Test.instanceCount;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
