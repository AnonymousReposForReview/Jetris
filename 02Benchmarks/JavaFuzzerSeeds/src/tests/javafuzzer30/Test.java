package tests.javafuzzer30;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:25:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-43270L;
    public static float fFld=-2.602F;
    public static int iFld=8;
    public static byte byFld=38;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 206);
        FuzzerUtils.init(Test.dArrFld, 0.66408);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        double d2=34.96356;
        int i7=-51911, i8=-11816, i9=48771, i10=-209;
        float f=-1.35F, fArr1[]=new float[N];
        boolean b=true;
        short s=-8663;

        FuzzerUtils.init(fArr1, 67.910F);

        Test.iArrFld[(i6 >>> 1) % N] -= (int)d2;
        for (i7 = 5; i7 < 260; ++i7) {
            i6 -= Test.iFld;
            f = 1;
            do {
                Test.iFld = (int)Test.instanceCount;
                b = false;
                for (i9 = (int)(f); 1 > i9; i9++) {
                    s ^= (short)i6;
                    i6 *= -108;
                    Test.iFld <<= i6;
                    b = b;
                    Test.iFld = i6;
                    if (b) continue;
                }
                fArr1[(i6 >>> 1) % N] -= i7;
                Test.instanceCount += (long)((long)f ^ i6);
            } while (++f < 6);
        }
        long meth_res = i6 + Double.doubleToLongBits(d2) + i7 + i8 + Float.floatToIntBits(f) + (b ? 1 : 0) + i9 + i10 +
            s + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, double d1) {

        int i2=-4, i3=-39535, i4=45463, i5=6;
        long l=22690L, l1=-124L;
        boolean bArr[]=new boolean[N];
        float fArr[]=new float[N];
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr, 2.132F);
        FuzzerUtils.init(byArr1, (byte)-41);

        Test.iArrFld[(i1 >>> 1) % N] -= (int)(++Test.fFld);
        i1 *= -5;
        bArr[(i1 >>> 1) % N] = bArr[(i1 >>> 1) % N];
        Test.instanceCount += (long)((Test.iFld / ((long)(d1) | 1)) * fArr[(11 >>> 1) % N]);
        for (i2 = 18; i2 < 339; ++i2) {
            l = 1;
            do {
                for (i4 = 1; i4 < 1; ++i4) {
                    Test.iFld -= (iMeth(i1) * i1);
                    Test.instanceCount >>= i1;
                    Test.iArrFld[i2 - 1] += (int)Test.fFld;
                    Test.byFld += (byte)i4;
                }
                i3 += i3;
                i5 -= (int)Test.instanceCount;
                byArr1[(int)(l - 1)] ^= (byte)l1;
                Test.iFld = -15483;
            } while (++l < 5);
        }
        vMeth1_check_sum += i1 + Double.doubleToLongBits(d1) + i2 + i3 + l + i4 + i5 + l1 + FuzzerUtils.checkSum(bArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr1);
    }

    public static void vMeth(double d, int i, byte by) {

        int i11=-6, i12=0, i13=-9, i14=5, i15=-84;
        boolean b1=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)95);

        i = (--byArr[(i >>> 1) % N]);
        vMeth1(28815, d);
        i11 = 1;
        while (++i11 < 138) {
            for (i12 = 1; i12 < 11; ++i12) {
                if (b1) break;
                Test.instanceCount = i13;
                i = (int)Test.instanceCount;
                Test.instanceCount -= i13;
                Test.instanceCount = Test.instanceCount;
                Test.iFld *= (int)1.90043;
                for (i14 = 1; i14 < 2; i14++) {
                    i15 <<= i15;
                    Test.iFld -= (int)Test.instanceCount;
                    b1 = b1;
                    if (b1) break;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + by + i11 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        double d3=109.53112;
        byte by1=120;
        int i16=-48799, i17=20584, i18=11569, i19=6, i20=-14521, i21=1;
        long l2=27L, l3=-127L;
        boolean b3=true;

        vMeth(d3, Test.iFld, by1);
        for (i16 = 7; i16 < 166; i16++) {
            if (b3) {
                for (i18 = 158; i18 > 7; i18 -= 3) {
                    boolean b2=false;
                    switch (((i19 >>> 1) % 8) + 106) {
                    case 106:
                        i19 = i17;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += (i18 ^ Test.instanceCount);
                        break;
                    case 107:
                        Test.instanceCount = i16;
                        break;
                    case 108:
                        Test.iFld += (i18 * i18);
                        for (i20 = 1; i20 < 4; i20++) {
                            switch ((((i16 >>> 1) % 1) * 5) + 16) {
                            case 17:
                                l2 += (16144 + (i20 * i20));
                                break;
                            }
                            Test.fFld = -5590713243373971742L;
                            Test.iFld -= (int)l3;
                            lArrFld = lArrFld;
                            Test.fFld += i20;
                            Test.instanceCount += i20;
                        }
                        Test.dArrFld[i16] -= d3;
                        break;
                    case 109:
                        Test.iArrFld[i18 - 1] = i19;
                        i21 += (i18 ^ i19);
                        l3 += (((i18 * i19) + i21) - by1);
                    case 110:
                        l2 += (i18 - i19);
                        Test.byFld = (byte)i16;
                        break;
                    case 111:
                        lArrFld[i18 - 1] ^= 7;
                        b2 = b2;
                    case 112:
                        Test.iFld >>= -237;
                        Test.instanceCount = (long)Test.fFld;
                        i19 = (int)l2;
                        break;
                    case 113:
                        i19 -= -46;
                        break;
                    default:
                        i17 %= (int)(i18 | 1);
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
