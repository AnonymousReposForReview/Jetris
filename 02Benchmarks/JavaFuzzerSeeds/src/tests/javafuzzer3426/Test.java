package tests.javafuzzer3426;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:05:40 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-59174L;
    public static long lFld=-518956830456040763L;
    public float fFld=-1.876F;
    public double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1) {

        int i2=1904, i3=-6, i4=-8, i5=36, i6=-16145, i7=7, i8=-10426, iArr[]=new int[N];
        long l1=432873948952947042L;

        FuzzerUtils.init(iArr, 59808);

        i2 += i2;
        for (i3 = 13; i3 < 384; i3++) {
            for (i5 = 5; i5 > 1; i5--) {
                iArr = iArr;
                i2 *= i7;
                switch (((i5 % 2) * 5) + 106) {
                case 110:
                    iArr = iArr;
                    break;
                case 113:
                    Test.instanceCount = i6;
                    for (l1 = 2; l1 > i5; l1--) {
                        boolean b=false;
                        if (b) {
                            i6 = (int)l1;
                            i6 += i6;
                            i2 += (int)(((l1 * Test.lFld) + i4) - i2);
                        } else if (b) {
                            Test.lFld += (l1 * i5);
                            Test.lFld -= i7;
                        } else if (b) {
                            i8 = i5;
                        }
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i2 + i3 + i4 + i5 + i6 + i7 + l1 + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        double d2=48.49993;
        int i9=45876, i10=13, i11=54379, iArr1[]=new int[N];
        byte by=-78;
        float f=1.520F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.419F);
        FuzzerUtils.init(iArr1, -2);

        vMeth1(d2);
        i9 = 1;
        while (++i9 < 166) {
            i10 ^= (int)Test.lFld;
            if (i9 != 0) {
                vMeth_check_sum += Double.doubleToLongBits(d2) + i9 + i10 + i11 + by + Float.floatToIntBits(f) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
                return;
            }
            i10 -= 14;
            d2 *= Test.instanceCount;
            i11 = 1;
            while (++i11 < 10) {
                fArr[i11 + 1] = -33495L;
                iArr1[i11 - 1] >>>= i9;
                i10 += by;
                Test.lFld += -12551;
                Test.instanceCount = i11;
                f = -169;
                i10 += i11;
                Test.instanceCount += (i11 * Test.lFld);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d2) + i9 + i10 + i11 + by + Float.floatToIntBits(f) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, int i1) {

        short s=31855;
        int i12=-11622, i13=-12, i14=50516, i15=11, iArr2[]=new int[N];
        float f1=-2.356F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -1.1022F);
        FuzzerUtils.init(iArr2, 26529);

        vMeth();
        s = (short)65;
        i1 = (int)Test.lFld;
        i1 = i1;
        fArr1[(i1 >>> 1) % N] += 221;
        try {
            Test.instanceCount = i12;
            for (f1 = 15; f1 < (398 + 400); ++f1) {
                i1 *= (int)-21423L;
                i12 -= i1;
                i14 = 1;
                while (++i14 < 4) {
                    i15 = 1;
                    while (++i15 < 1) {
                        boolean b1=true;
                        if (b1) break;
                        i13 -= 103;
                        i13 = s;
                    }
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            iArr2[(i14 >>> 1) % N] /= (int)(i1 | 1);
        }
        long meth_res = l + i1 + s + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.60228, d3=-34.47213;
        int i=65005, i16=13, i17=31302, i18=8, i19=20553, i20=-31155, i21=-78;
        byte by1=-90;
        short s1=-30889;
        boolean b2=false, bArr[]=new boolean[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr, 34938L);

        for (d = 1; 158 > d; ++d) {
            i >>= (iMeth(Test.instanceCount, i16) - i);
            Test.instanceCount = by1;
            Test.lFld += (long)d;
            i17 = 1;
            while (++i17 < 160) {
                d3 -= 53;
            }
            i = i16;
            for (i18 = 1; i18 < 160; ++i18) {
                fFld += Test.lFld;
                i16 *= -7;
                i16 *= i17;
                s1 = (short)fFld;
                switch (((i16 >>> 1) % 2) + 46) {
                case 46:
                    Test.lFld >>= i19;
                case 47:
                    bArr[i18 - 1] = b2;
                    lArr[i18][(int)(d + 1)] = Test.lFld;
                    break;
                }
                i19 *= i19;
                i <<= 56668;
                dArrFld[i18] = -4;
                for (i20 = 2; i20 > 1; i20 -= 3) {
                    switch (((i20 % 3) * 5) + 36) {
                    case 40:
                        i16 = i16;
                        if (b2) {
                            if (true) continue;
                            if (b2) {
                                i16 = (int)d3;
                                if (b2) break;
                                Test.instanceCount = i18;
                                Test.lFld = i21;
                            } else if (b2) {
                                Test.instanceCount = i16;
                            } else {
                                Test.lFld -= i16;
                            }
                        } else if (b2) {
                            i19 *= (int)Test.instanceCount;
                        } else if (b2) {
                            lArr[(int)(d)][i18 - 1] += (long)d3;
                        }
                    case 46:
                        i21 *= (int)fFld;
                        break;
                    case 38:
                        iArrFld[i20] = i;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
