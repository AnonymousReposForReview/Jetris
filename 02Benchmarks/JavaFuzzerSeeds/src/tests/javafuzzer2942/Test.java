package tests.javafuzzer2942;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:25:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1739793500981167567L;
    public static byte byFld=117;
    public static boolean bFld=false;
    public static double dFld=27.84955;
    public static float fFld=0.663F;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 117.785F);
        FuzzerUtils.init(Test.iArrFld, -14);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=0, i7=4, i8=25, i9=-3449, i10=-4279;
        double d=0.72996, d1=-2.45653;

        i6 = (int)d;
        for (i7 = 2; 165 > i7; i7++) {
            Test.instanceCount *= i6;
        }
        d1 = 1;
        while (++d1 < 293) {
            switch ((((i8 >>> 1) % 2) * 5) + 36) {
            case 40:
                for (i9 = (int)(d1); i9 < 6; ++i9) {
                    Test.byFld -= (byte)Test.instanceCount;
                    switch ((int)(((d1 % 1) * 5) + 70)) {
                    case 75:
                        i6 += (i9 * i8);
                        i10 = (int)Test.instanceCount;
                        break;
                    }
                }
                break;
            case 43:
                i6 += (int)d1;
                switch (((i8 >>> 1) % 2) + 127) {
                case 127:
                    Test.instanceCount = i10;
                    break;
                case 128:
                    i8 = i10;
                    i8 += (int)(((d1 * i10) + i10) - Test.instanceCount);
                    break;
                }
            default:
                if (i9 != 0) {
                    vMeth2_check_sum += i6 + Double.doubleToLongBits(d) + i7 + i8 + Double.doubleToLongBits(d1) + i9 +
                        i10;
                    return;
                }
            }
        }
        vMeth2_check_sum += i6 + Double.doubleToLongBits(d) + i7 + i8 + Double.doubleToLongBits(d1) + i9 + i10;
    }

    public static void vMeth1(int i4, int i5, long l) {

        float f=49.71F;
        int i11=-9761, i12=67, i13=-14, i14=1, i15=-8305, i16=-65, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, -1);

        i5 = (int)(Math.min(Test.instanceCount--, Test.instanceCount) + (3 - Math.abs(-8)));
        Test.instanceCount = (i5--);
        vMeth2();
        f = i4;
        i5 |= i5;
        iArr1[(i4 >>> 1) % N][(i5 >>> 1) % N] |= (int)Test.instanceCount;
        for (i11 = 1; i11 < 205; ++i11) {
            for (i13 = 1; 8 > i13; ++i13) {
                Test.byFld += (byte)i11;
                Test.instanceCount >>= i4;
                i4 += (((i13 * i12) + i11) - l);
                for (i15 = 1; 2 > i15; i15++) {
                    i12 = (int)l;
                    if (Test.bFld) continue;
                    i4 *= (int)Test.dFld;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + l + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i3) {

        int i17=-21841, i18=16998, i19=-57, i20=-1, i21=234, i22=-3, i23=-63;
        short s1=14652;
        long l1=-14L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5L);

        vMeth1(i3, i3, Test.instanceCount);
        i3 = (int)Test.dFld;
        for (i17 = 162; 8 < i17; i17--) {
            Test.instanceCount += i17;
            Test.instanceCount = Test.instanceCount;
            Test.fArrFld[i17] = Test.instanceCount;
        }
        for (i19 = 4; i19 < 126; ++i19) {
            i3 -= i18;
            i3 = (int)10L;
        }
        s1 %= (short)((long)(Test.dFld) | 1);
        for (l1 = 7; l1 < 335; l1++) {
            switch ((int)(((l1 % 4) * 5) + 46)) {
            case 58:
                for (i22 = 1; i22 < 5; i22++) {
                    i3 += i22;
                    i20 = s1;
                }
                break;
            case 53:
                Test.iArrFld[(int)(l1)] = (int)-21411L;
                break;
            case 60:
                i18 += (int)(((l1 * Test.fFld) + Test.fFld) - i22);
                break;
            case 47:
                i23 += (int)l1;
            default:
                lArr[(int)(l1)] <<= 45;
            }
        }
        vMeth_check_sum += i3 + i17 + i18 + i19 + i20 + s1 + l1 + i21 + i22 + i23 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=247, i1=-13, i2=137, i24=-238, i25=12594, i26=210, i27=-6, i28=10, i29=-27805, i30=25384, iArr[]=new
            int[N];
        short s=27962;
        double d2=1.76189;

        FuzzerUtils.init(iArr, -11);

        iArr[(i >>> 1) % N] = (int)(((i - 0.570F) + (++i)) - (++s));
        for (i1 = 8; i1 < 219; ++i1) {
            vMeth(i2);
            for (i24 = 2; 119 > i24; i24++) {
                for (d2 = 2; d2 > 1; d2 -= 3) {
                    Test.fFld += Test.instanceCount;
                    i2 = i1;
                    i26 = i;
                    i25 = i2;
                    try {
                        i25 = (iArr[(int)(d2 - 1)] % i24);
                        i26 = (194 % i24);
                        iArr[(int)(d2 + 1)] = (iArr[i1 - 1] % Test.iArrFld[(int)(d2 - 1)]);
                    } catch (ArithmeticException a_e) {}
                    Test.fArrFld[i24 + 1] += i26;
                    i = i24;
                    i25 -= i24;
                    Test.iArrFld[(int)(d2 + 1)] -= (int)Test.instanceCount;
                }
                Test.instanceCount = Test.byFld;
                for (i27 = i24; i27 < 2; i27++) {
                    i25 = i27;
                    i ^= (int)Test.instanceCount;
                    i26 += i1;
                    Test.instanceCount += i27;
                }
                iArr[i1 - 1] -= (int)-50406L;
                Test.instanceCount -= (long)1.83137;
            }
            Test.instanceCount = i27;
            Test.bArrFld = Test.bArrFld;
            switch (((i2 >>> 1) % 7) + 94) {
            case 94:
                Test.instanceCount += (-1737 + (i1 * i1));
                for (i29 = 3; i29 < 119; ++i29) {
                    int i31=-7;
                    if (Test.bFld) break;
                    if (Test.bFld) continue;
                    i28 += (((i29 * Test.fFld) + i1) - i31);
                }
                break;
            case 95:
                i >>= -71;
            case 96:
                i28 = i30;
                break;
            case 97:
                i26 = 30774;
                break;
            case 98:
                Test.fFld = i2;
                break;
            case 99:
                i = i1;
                break;
            case 100:
                i26 -= i24;
                break;
            default:
                i28 -= i30;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
