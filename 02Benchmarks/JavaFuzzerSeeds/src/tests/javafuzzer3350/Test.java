package tests.javafuzzer3350;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:37:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2049939364215455992L;
    public static double dFld=0.112183;
    public static int iFld=11;
    public static byte byFld=124;
    public static long lArrFld[]=new long[N];
    public static volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 153L);
        FuzzerUtils.init(Test.sArrFld, (short)22724);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l2) {

        int i6=5, i7=8, i8=0, i9=28590, i10=-51364, i11=-26999, iArr1[]=new int[N];
        float f1=-67.374F;
        byte by=107;

        FuzzerUtils.init(iArr1, -3);

        switch (((Test.iFld >>> 1) % 1) + 77) {
        case 77:
            Test.iFld >>= Test.iFld;
            for (i6 = 11; i6 < 187; ++i6) {
                for (i8 = 9; i6 < i8; --i8) {
                    i9 -= (int)f1;
                    iArr1[i6 + 1] >>= i7;
                    i9 >>>= i8;
                    i9 += i8;
                    i9 = i9;
                    l2 <<= i9;
                    by = (byte)Test.iFld;
                }
                for (i10 = 1; i10 < 9; i10 += 2) {
                    i9 <<= i8;
                    by += (byte)Test.dFld;
                    i7 = i11;
                }
            }
        }
        long meth_res = l2 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + by + i10 + i11 +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l1) {

        float f=1.904F;
        int i5=30788, i12=-131, i13=11, i14=206, i15=-36, i16=-6070;
        long l3=144L;

        for (f = 9; f < 355; f++) {
            Test.dFld = (iMeth1(l1) - Test.iFld);
            i5 = Test.iFld;
        }
        for (i12 = 18; 359 > i12; ++i12) {
            for (l3 = 1; l3 < 5; l3++) {
                for (i15 = 1; 2 > i15; i15++) {
                    Test.iFld *= (int)-1.56126;
                    i5 = (int)l1;
                    i13 = (int)Test.dFld;
                    Test.lArrFld[(int)(l3 - 1)] += -102;
                    i5 >>= -6;
                    Test.instanceCount += (126 + (i15 * i15));
                    Test.iFld = (int)Test.dFld;
                }
                i13 = i12;
                i16 = Test.iFld;
            }
        }
        vMeth_check_sum += l1 + Float.floatToIntBits(f) + i5 + i12 + i13 + l3 + i14 + i15 + i16;
    }

    public static int iMeth(long l) {

        int i3=82, i4=14, i17=-2, i18=222, i19=54681, iArr2[][]=new int[N][N];
        float f2=-1.268F;
        boolean bArr[]=new boolean[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, 31);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, -46.52788);

        for (i3 = 1; i3 < 394; ++i3) {
            vMeth(l);
            i4 += (i3 | i4);
            i17 = 1;
            while (++i17 < 4) {
                boolean b=true;
                iArr2[i17 - 1][i3 + 1] <<= (int)Test.instanceCount;
                Test.instanceCount = (long)-63.697F;
                i4 -= i17;
                bArr[i3 + 1] = b;
                Test.instanceCount += i3;
                i4 += -31304;
                dArr[i17] *= 13307;
            }
            i4 += (int)f2;
            for (i18 = i3; i18 < 4; i18++) {
                i19 += (((i18 * i18) + f2) - i19);
                Test.dFld += -65420;
            }
        }
        long meth_res = l + i3 + i4 + i17 + Float.floatToIntBits(f2) + i18 + i19 + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=45, i1=11, i20=-198, i21=-6, i22=176, i23=23832, i24=-224, i25=11, i26=0, i27=-21257, i28=219, iArr[]=new
            int[N];
        boolean b1=false;
        float f3=-118.623F;

        FuzzerUtils.init(iArr, -10887);

        for (i = 7; 261 > i; ++i) {
            switch ((i % 6) + 89) {
            case 89:
                if (b1) {
                    Test.instanceCount = (++i1);
                    iMeth(Test.instanceCount);
                    for (i20 = 5; i20 < 99; i20++) {
                        i1 |= (int)Test.instanceCount;
                    }
                } else {
                    for (i22 = 1; i22 < 99; ++i22) {
                        i1 += (int)Test.instanceCount;
                        i21 -= (int)f3;
                        iArr[i - 1] += 0;
                        for (i24 = 2; i24 > 1; --i24) {
                            iArr[i22 - 1] += i24;
                            try {
                                Test.iFld = (i23 % i23);
                                i21 = (i20 / i1);
                                i21 = (-69 / i23);
                            } catch (ArithmeticException a_e) {}
                        }
                        Test.iFld = i;
                        iArr[i - 1] = Test.byFld;
                        f3 += f3;
                        i21 = (int)f3;
                        for (i26 = 1; i26 < 2; i26 += 2) {
                            i27 += Test.iFld;
                            i25 += (int)f3;
                            f3 += (float)Test.dFld;
                            i1 -= i24;
                            Test.iFld -= i21;
                            i23 += (i26 * i1);
                            iArr[i26 + 1] -= i21;
                            Test.sArrFld[i22 - 1] >>= (short)i23;
                            i25 |= i28;
                        }
                    }
                    i23 += i;
                }
                try {
                    iArr[i] = (i22 % -9209);
                    i28 = (-46805 / i24);
                    i1 = (i25 / Test.iFld);
                } catch (ArithmeticException a_e) {}
                break;
            case 90:
                i28 = Test.iFld;
                break;
            case 91:
                i28 += (i + i21);
                break;
            case 92:
                Test.iFld -= 63578;
                break;
            case 93:
                Test.instanceCount += Test.instanceCount;
            case 94:
                i1 += i;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
