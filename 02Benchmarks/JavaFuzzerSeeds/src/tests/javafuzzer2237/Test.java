package tests.javafuzzer2237;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:46:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public int iFld=31;
    public static volatile float fFld=66.924F;
    public double dFld=-2.4005;
    public byte byFld=84;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 183L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=94, i7=23, i8=42456, i9=54110, i10=-33904, i11=11, i12=-21, iArr1[]=new int[N];
        double d=1.53817;
        byte by=-57;
        boolean b=false;

        FuzzerUtils.init(iArr1, 63058);

        i5 += (int)Test.fFld;
        for (i6 = 262; 6 < i6; i6 -= 3) {
            iArr1[i6 - 1] = i6;
            i4 *= 43394;
            Test.instanceCount >>= i5;
            i8 -= 21305;
        }
        d += -3914762323L;
        iArr1[(i7 >>> 1) % N] |= by;
        i8 <<= (int)Test.instanceCount;
        try {
            b = true;
            for (i9 = 4; i9 < 138; ++i9) {
                for (i11 = 1; i11 < 12; i11++) {
                    if (i4 != 0) {
                        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + by + (b ? 1 : 0) + i9
                            + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    iArr1[i11] = i9;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i12 = (int)Test.fFld;
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + by + (b ? 1 : 0) + i9 + i10 + i11 +
            i12 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i3) {

        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 119.647F);

        vMeth1(iFld, iFld);
        Test.fFld += (float)2.57442;
        iFld = (int)dFld;
        fArr[(i3 >>> 1) % N] -= i3;
        vMeth_check_sum += i3 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public long lMeth(int i2) {

        int i13=-69;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-69);

        vMeth(7);
        iFld += i2;
        byArr[(-165 >>> 1) % N] = (byte)iFld;
        for (long l : Test.lArrFld) {
            i2 = -29953;
            if (iFld != 0) {
            }
            byFld += (byte)i2;
            iArrFld = FuzzerUtils.int1array(N, (int)215);
            iFld += (int)Test.fFld;
            try {
                i2 = (i2 / 87);
                iArrFld[(i2 >>> 1) % N] = (iArrFld[(i2 >>> 1) % N] / -116);
                iFld = (33235 % i2);
            } catch (ArithmeticException a_e) {}
            i13 = 1;
            while (++i13 < 4) {
                switch (((iFld >>> 1) % 7) + 111) {
                case 111:
                    iArrFld[i13] = 28;
                case 112:
                    iArrFld[i13 - 1] += (int)Test.fFld;
                    iArrFld[i13 + 1] ^= i13;
                case 113:
                    dFld += Test.fFld;
                    break;
                case 114:
                    i2 += (int)Test.fFld;
                case 115:
                    Test.instanceCount += 7904021996582909359L;
                case 116:
                    byFld >>>= (byte)-51243;
                    break;
                case 117:
                    iArrFld[i13] += -52766;
                    break;
                }
            }
        }
        long meth_res = i2 + i13 + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=83.116F;
        int i=-245, i1=55573, iArr[]=new int[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(iArr, -44);
        FuzzerUtils.init(dArr, 107.122605);

        iArr[(iFld >>> 1) % N] -= (int)((iFld--) * (f -= (float)dArr[(iFld >>> 1) % N][(iFld >>> 1) % N]));
        for (i = 14; i < 278; i++) {
            iFld = (int)lMeth(iFld);
            Test.instanceCount = i;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
