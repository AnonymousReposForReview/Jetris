package tests.javafuzzer544;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:26:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-76L;
    public static volatile int iFld=6;
    public static double dFld=-127.118507;
    public static boolean bFld=false;
    public static byte byFld=-11;
    public volatile float fFld=0.240F;
    public static volatile long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3668040221L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i=-64172, i1=-10, i2=62725, i3=1721, i4=232, iArr[]=new int[N];
        short s=-27765;
        float f2=0.292F, f3=95.292F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.52F);
        FuzzerUtils.init(iArr, 5);

        i = 1;
        while (++i < 365) {
            for (i1 = 1; i1 < 5; ++i1) {
                i3 = 1;
                do {
                    float f1=2.36F;
                    s += (short)(((i3 * f1) + Test.instanceCount) - Test.instanceCount);
                    fArr[i1 + 1] -= (float)-2.124117;
                } while (++i3 < 2);
                Test.iFld += (int)Test.dFld;
            }
            i4 = 1;
            while (++i4 < 5) {
                if (Test.bFld) break;
                Test.instanceCount += i4;
                i2 += (-225 + (i4 * i4));
                f2 = 1;
                while (++f2 < 1) {
                    f3 -= Test.instanceCount;
                }
                i2 = i3;
                Test.instanceCount += 218;
                iArr = iArr;
            }
        }
        long meth_res = i + i1 + i2 + i3 + s + i4 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        float f=-113.387F, fArr1[]=new float[N];
        int i5=-2590, i6=-6, i7=-62667, i8=9, i9=6, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 10);
        FuzzerUtils.init(fArr1, 0.802F);

        Test.iFld = (int)(((-36389 * (--f)) - iMeth()) * Test.iFld);
        for (i5 = 7; 137 > i5; ++i5) {
            i6 = (int)Test.instanceCount;
            try {
                i6 = (i5 % 666314514);
                iArr1[i5] = (i5 % iArr1[i5 - 1]);
                Test.iFld = (342998715 % iArr1[i5 + 1]);
            } catch (ArithmeticException a_e) {}
        }
        i7 = 1;
        do {
            i6 = 199;
            Test.lArrFld[(2 >>> 1) % N] -= i7;
        } while (++i7 < 206);
        for (float f4 : fArr1) {
            fArr1[(Test.iFld >>> 1) % N] += 247;
            Test.iFld <<= (int)Test.instanceCount;
        }
        i6 = (int)4916297231000631766L;
        Test.iFld = i7;
        for (i8 = 11; i8 < 322; i8 += 2) {
            Test.instanceCount *= Test.instanceCount;
            Test.byFld += (byte)i8;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void vMeth(long l) {

        float f5=-91.45F;
        int i11=41759;
        short s1=29587, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-5861);

        vMeth1();
        Test.iFld *= (int)Test.dFld;
        for (int i10 : iArrFld) {
            for (f5 = 1; f5 < 4; ++f5) {
                Test.byFld = (byte)Test.iFld;
                iArrFld[(int)(f5 + 1)] *= (int)f5;
                i10 >>= 3;
                l *= Test.iFld;
                iArrFld[(int)(f5)] <<= i10;
                if (Test.bFld) {
                    s1 = (short)4;
                    sArr[(int)(f5 - 1)] -= (short)-2.320F;
                    i10 <<= (int)10L;
                    if (i10 != 0) {
                        vMeth_check_sum += l + Float.floatToIntBits(f5) + i11 + s1 + FuzzerUtils.checkSum(sArr);
                        return;
                    }
                } else if (Test.bFld) {
                    i11 += s1;
                } else {
                    i10 *= i11;
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f5) + i11 + s1 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i12=-8, i13=6, i14=50082, i15=10, i16=157, i17=-55009, i18=-3, i19=14, i20=21, i21=8;

        vMeth(-6575156532641076145L);
        Test.iFld ^= Test.iFld;
        Test.lArrFld[(Test.iFld >>> 1) % N] = (long)fFld;
        for (i12 = 16; i12 < 370; i12 += 2) {
            Test.iFld = (int)-5L;
            try {
                i13 = (i13 / -30106);
                i13 = (1392795975 % i13);
                iArrFld[i12 - 1] = (i12 / 210);
            } catch (ArithmeticException a_e) {}
            for (i14 = 3; 142 > i14; ++i14) {
                iArrFld[i14 - 1] -= i14;
                for (i16 = 2; i16 > 1; i16--) {
                    i13 = i13;
                    iArrFld[i14] -= (int)Test.instanceCount;
                    i13 = i16;
                    i17 += (int)fFld;
                }
                switch (((i16 >>> 1) % 3) + 82) {
                case 82:
                    Test.byFld <<= (byte)Test.iFld;
                    Test.bFld = Test.bFld;
                    for (i18 = 1; 2 > i18; ++i18) {
                        fFld += i18;
                        fFld -= i13;
                        iArrFld[i12 - 1] = i18;
                        iArrFld[i14 - 1] <<= i19;
                        i15 %= (int)(Test.instanceCount | 1);
                    }
                    break;
                case 83:
                    for (i20 = 1; 2 > i20; ++i20) {
                        i17 >>>= -153;
                        Test.iFld -= (int)Test.instanceCount;
                        i19 = i20;
                        switch ((i12 % 1) + 71) {
                        case 71:
                            i21 -= (int)Test.instanceCount;
                            break;
                        default:
                            Test.iFld += (int)Test.dFld;
                        }
                    }
                    break;
                case 84:
                    i17 += (((i14 * i15) + i12) - i15);
                    break;
                default:
                    Test.dFld -= -52574;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
