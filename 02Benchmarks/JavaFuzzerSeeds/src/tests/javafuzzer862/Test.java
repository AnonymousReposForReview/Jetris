package tests.javafuzzer862;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:55:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=62148L;
    public int iFld=-1;
    public static volatile short sFld=-15974;
    public static volatile double dFld=-2.63308;
    public static int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
        FuzzerUtils.init(Test.dArrFld, -42.128879);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        int i7=2, i8=32175, i9=22452;
        long l=0L;
        float f=0.345F;
        double d=-1.110037, d1=-2.94997;
        short s=9614;

        for (i7 = 18; i7 < 289; ++i7) {
            l = 1;
            while (++l < 6) {
                Test.instanceCount += 67;
                i8 += (int)l;
                Test.instanceCount += (170L + (l * l));
                Test.instanceCount += l;
                i6 += 11;
                i5 -= (int)f;
                d -= s;
            }
            if (i8 != 0) {
                vMeth1_check_sum += i5 + i6 + i7 + i8 + l + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + s +
                    Double.doubleToLongBits(d1) + i9;
                return;
            }
            for (d1 = i7; d1 < 6; d1++) {
                Test.dArrFld[(int)(d1)] = f;
            }
            i5 += (i7 * Test.instanceCount);
        }
        Test.iArrFld[(-231 >>> 1) % N] = i9;
        vMeth1_check_sum += i5 + i6 + i7 + i8 + l + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + s +
            Double.doubleToLongBits(d1) + i9;
    }

    public static int iMeth(int i2) {

        int i3=-54870, i4=-187, i10=-4562, i11=58, i12=-64156, i13=40647;
        double d2=31.31401;

        for (i3 = 7; i3 < 173; i3++) {
            Test.iArrFld[i3 + 1] = (++i4);
            vMeth1(i3, i3);
        }
        i10 = 1;
        while (++i10 < 271) {
            i11 = 6;
            do {
                i4 += (i11 | Test.sFld);
            } while ((i11 -= 2) > 0);
            i4 += i10;
            for (i12 = 6; i12 > 1; i12 -= 2) {
                i13 |= i2;
                i4 += (int)1.130199;
                Test.iArrFld[(i3 >>> 1) % N] -= (int)-1064721767L;
                i4 >>= i11;
                Test.instanceCount *= (long)d2;
                i2 -= i4;
                Test.iArrFld[i10 + 1] -= i13;
            }
        }
        long meth_res = i2 + i3 + i4 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-243, i1=10, i14=209, i15=-56858;
        float f1=2.898F;
        boolean b=false;

        Test.instanceCount += (iFld--);
        for (i = 16; i < 320; ++i) {
            i1 = (iMeth(i1) * 37302);
            iFld = (int)-3615096988951870344L;
            for (i14 = 1; i14 < 5; ++i14) {
                f1 *= i15;
                i15 -= (int)Test.dFld;
                switch ((i % 9) + 75) {
                case 75:
                    Test.instanceCount = Test.sFld;
                    Test.instanceCount = i14;
                    if (i1 != 0) {
                        vMeth_check_sum += i + i1 + i14 + i15 + Float.floatToIntBits(f1) + (b ? 1 : 0);
                        return;
                    }
                    i15 += (((i14 * Test.instanceCount) + i14) - i1);
                    break;
                case 76:
                    Test.iArrFld[i] = (int)-27.13801;
                    break;
                case 77:
                    i1 = i1;
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 78:
                    f1 += Test.instanceCount;
                case 79:
                    iFld += (int)f1;
                    break;
                case 80:
                    i15 += i14;
                case 81:
                    Test.dArrFld[i + 1] = i14;
                    break;
                case 82:
                    i15 = i1;
                    break;
                case 83:
                    b = false;
                    break;
                }
            }
        }
        vMeth_check_sum += i + i1 + i14 + i15 + Float.floatToIntBits(f1) + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        byte by=-85;
        double d3=-1.96785;
        int i16=149, i17=-6, i18=0, i19=-41458, i20=-26208, i21=-122, i22=-6761, i23=-221;
        boolean b1=false, bArr[]=new boolean[N];
        float f2=66.968F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1210872917159320352L);
        FuzzerUtils.init(bArr, true);

        by = by;
        vMeth();
        for (d3 = 9; d3 < 234; d3++) {
            Test.instanceCount += i16;
            for (i17 = 5; i17 < 112; ++i17) {
                if (b1) break;
                Test.sFld -= (short)-209;
                lArr[i17] -= i17;
                for (i19 = 2; 1 < i19; i19--) {
                    i18 >>= i17;
                    Test.iArrFld = Test.iArrFld;
                    iFld = (int)7880974876914489093L;
                    i18 += i19;
                }
                i21 = 1;
                do {
                    Test.iArrFld[i21 - 1] >>= iFld;
                    Test.instanceCount >>>= i16;
                    Test.instanceCount += (i21 | i16);
                    i16 += i21;
                    bArr[(int)(d3)] = b1;
                    try {
                        Test.iArrFld[i21 + 1] = (Test.iArrFld[i21 + 1] / i18);
                        iFld = (Test.iArrFld[i17 - 1] % -8151);
                        Test.iArrFld[(int)(d3 - 1)] = (i18 % 29874);
                    } catch (ArithmeticException a_e) {}
                    i16 = (int)f2;
                } while (++i21 < 2);
                Test.iArrFld[i17 + 1] <<= (int)Test.instanceCount;
                i18 += (i17 + i16);
                i16 += (((i17 * i17) + i18) - i17);
                for (i22 = 1; i22 < 2; i22++) {
                    i20 *= (int)f2;
                    i23 -= iFld;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)6);
                    i23 += (i22 | Test.sFld);
                    lArr[(int)(d3)] -= i21;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
