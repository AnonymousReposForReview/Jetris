package tests.javafuzzer662;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-833714250L;
    public static int iFld1=61413;
    public static float fFld=78.127F;
    public short sFld=290;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        short s=10361;
        double d1=0.68189;
        int i8=11966, i9=-5480, i10=8, iArr1[]=new int[N];
        float f1=-105.484F;
        byte by2=-54;
        boolean b=true;

        FuzzerUtils.init(iArr1, -64581);

        s = (short)Test.instanceCount;
        Test.instanceCount <<= i7;
        i7 %= 51723;
        d1 -= Test.instanceCount;
        s = s;
        if (b) {
            if (false) {
                for (i8 = 7; i8 < 142; ++i8) {
                    Test.iFld1 >>>= (int)Test.instanceCount;
                    i7 = (int)d1;
                    i7 = (int)-14L;
                    for (f1 = 1; f1 < 12; ++f1) {
                        iArr1[i8 + 1] = i9;
                        i10 -= (int)Test.instanceCount;
                        i7 = i9;
                    }
                }
            } else if (b) {
                i10 >>= by2;
            } else {
                Test.instanceCount += i8;
            }
        }
        vMeth2_check_sum += i7 + s + Double.doubleToLongBits(d1) + i8 + i9 + Float.floatToIntBits(f1) + i10 + by2 + (b
            ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, double d) {

        boolean b1=true;
        int i11=1, i12=35, i13=24858, i14=26607, i15=-4, i16=-78, i17=22654, i18=31170, iArr2[]=new int[N];
        short s1=-27945;

        FuzzerUtils.init(iArr2, 166);

        Test.iFld1 &= 14;
        vMeth2(Test.iFld1);
        l += (long)Test.fFld;
        b1 = b1;
        for (i11 = 6; i11 < 256; ++i11) {
            for (i13 = i11; i13 < 7; i13++) {
                s1 <<= (short)2600204957842963327L;
                Test.iFld1 += (i13 * i13);
                i14 += i15;
                i16 = 1;
                while (++i16 < 1) {
                    Test.instanceCount = i17;
                    if (true) break;
                    i12 -= (int)21050L;
                    i18 += Test.iFld1;
                }
            }
        }
        iArr2[(i14 >>> 1) % N] >>>= i17;
        vMeth1_check_sum += l + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i11 + i12 + i13 + i14 + s1 + i15 + i16 +
            i17 + i18 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(float f, byte by1, int i4) {

        int i5=-12, i6=50500, i19=-4, i20=-224, i21=231, iArr[]=new int[N];
        double d2=-2.42136;
        boolean b2=true;

        FuzzerUtils.init(iArr, -62144);

        Test.instanceCount <<= i4;
        for (i5 = 10; 172 > i5; ++i5) {
            Test.instanceCount = (((i6 >>> 12) - (-(i5 - i5))) + ((i5 + i6) + iArr[i5 + 1]));
            vMeth1(Test.instanceCount, d2);
            i19 = 10;
            do {
                for (i20 = 1; i20 < 1; ++i20) {
                    short s2=15611;
                    d2 = Test.instanceCount;
                    if (b2) {
                        i4 *= 5;
                        Test.iFld1 = 57273;
                    } else {
                        i6 += i5;
                        s2 = (short)1.250F;
                    }
                    i4 = (int)Test.instanceCount;
                    Test.iFld1 = i6;
                }
                Test.iFld1 = i5;
            } while (--i19 > 0);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + by1 + i4 + i5 + i6 + Double.doubleToLongBits(d2) + i19 + i20 + i21
            + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr3) {

        int i=1, i1=-5, i2=0, i3=188, i22=-189, i23=3443, i24=2, i25=2564, i26=49434, iArr3[]=new int[N];
        byte by3=-46;
        double d3=0.123760;
        boolean b3=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr3, -180);
        FuzzerUtils.init(fArr, -2.864F);

        for (i = 5; i < 341; i++) {
            Test.instanceCount = (((Test.instanceCount - Test.instanceCount) - (--i1)) - -32283);
        }
        for (i2 = 5; i2 < 307; ++i2) {
            vMeth(-25.967F, by3, 28991);
            iArr3[i2] *= by3;
        }
        i22 = 1;
        do {
            Test.iFld1 = by3;
        } while (++i22 < 274);
        Test.instanceCount = i;
        i1 <<= (int)Test.instanceCount;
        for (float f2 : fArr) {
            for (i23 = 1; i23 < 63; ++i23) {
                Test.fFld = -56863;
                i25 = 1;
                do {
                    d3 += i23;
                    switch ((((i24 >>> 1) % 10) * 5) + 37) {
                    case 63:
                        Test.instanceCount = (long)f2;
                        break;
                    case 41:
                        Test.iFld1 = (int)39.243F;
                        i26 = -6;
                        break;
                    case 68:
                        Test.instanceCount -= Test.instanceCount;
                        if (b3) {
                            Test.instanceCount *= -3;
                            i3 = 28690;
                        } else if (b3) {
                            i24 += (-52174 + (i25 * i25));
                            Test.fFld *= Test.instanceCount;
                            Test.instanceCount = 0;
                        }
                        f2 += i23;
                        i3 <<= 7;
                        break;
                    case 47:
                        iArr3[i25] = i23;
                        i1 -= sFld;
                        i3 -= i24;
                        break;
                    case 85:
                        d3 = 3;
                    case 43:
                        i26 = i2;
                        break;
                    case 69:
                        if (b3) break;
                        break;
                    case 73:
                        Test.instanceCount = i22;
                        break;
                    case 39:
                        by3 += (byte)i24;
                        break;
                    case 76:
                        i1 = (int)Test.instanceCount;
                        break;
                    default:
                        Test.fFld += i25;
                    }
                } while ((i25 += 2) < 2);
            }
        }


    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
