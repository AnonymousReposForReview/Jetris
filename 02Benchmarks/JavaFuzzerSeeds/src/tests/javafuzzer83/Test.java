package tests.javafuzzer83;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:07:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7744571109969291422L;
    public static float fFld=21.502F;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 44631L);
        FuzzerUtils.init(Test.iArrFld, 52857);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(float f, int i5) {

        int i6=53044, i7=207, i8=-11, i9=25, i10=-48, i11=10, i12=-126;
        boolean b=true;
        short s1=-18536;
        byte by=-26;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.30218);

        dArr[(i5 >>> 1) % N] += Test.instanceCount;
        for (i6 = 8; i6 < 190; i6 += 3) {
            if (b) break;
            i5 = (int)50769L;
            i5 += (-2 + (i6 * i6));
        }
        i8 = 1;
        while ((i8 += 3) < 161) {
            i7 = (int)Test.instanceCount;
            for (i9 = 1; i9 < 29; ++i9) {
                s1 = (short)i10;
                for (i11 = 1; i11 < 2; ++i11) {
                    i12 <<= i11;
                    i12 += (i11 + i5);
                    if (b) continue;
                }
                by += (byte)i9;
                b = b;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 + s1 + i11 + i12 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i3, int i4) {

        byte by1=63;
        int i13=-22978, i14=13197, i15=-39, i16=-56162, i17=175, iArr[]=new int[N];
        short s2=-16987;
        boolean b1=true;

        FuzzerUtils.init(iArr, -7);

        Test.lArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] = (lMeth1(64.112F, i4) + by1);
        i13 = 1;
        do {
            iArr[i13 - 1] <<= i3;
            i3 += (int)10L;
            for (i14 = i13; i14 < 5; i14++) {
                i15 <<= i3;
                Test.instanceCount -= 35L;
                i4 += (((i14 * i13) + Test.instanceCount) - s2);
                i15 %= 50582;
                Test.instanceCount += (((i14 * i13) + i3) - i4);
            }
            if (b1) {
                i3 = i13;
                for (i16 = 1; 5 > i16; i16++) {
                    i3 += (i16 - i16);
                    Test.lArrFld[i13 - 1][i16] += i15;
                }
            } else if (b1) {
                i4 -= 4;
            } else {
                i3 = i15;
            }
        } while (++i13 < 319);
        long meth_res = i3 + i4 + by1 + i13 + i14 + i15 + s2 + i16 + i17 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i=-99, i1=-222, i2=-11, iArr1[]=new int[N];
        short s=-19113;
        double d=0.6433;
        boolean b2=false;

        FuzzerUtils.init(iArr1, -19310);

        for (i = 17; i < 272; ++i) {
            if (b2) {
                i2 = 1;
                do {
                    s += (short)(i2 * i1);
                    if ((Test.lArrFld[i][i - 1]--) != ((i1 - (d - Test.instanceCount)) + (lMeth(23315, i1) * i1)))
                        break;
                    Test.lArrFld[i + 1][i2] >>>= i;
                    Test.fFld *= i1;
                    i1 >>= i1;
                    i1 = i2;
                    i1 <<= (int)-1L;
                    if (i != 0) {
                        vMeth_check_sum += i + i1 + i2 + s + Double.doubleToLongBits(d) + (b2 ? 1 : 0) +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                } while (++i2 < 6);
                i1 += i;
                Test.instanceCount *= i1;
                try {
                    i1 = (i % i1);
                    i1 = (2061297233 / iArr1[i - 1]);
                    i1 = (i1 / i);
                } catch (ArithmeticException a_e) {}
            }
            Test.instanceCount = i1;
        }
        vMeth_check_sum += i + i1 + i2 + s + Double.doubleToLongBits(d) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=38532;

        vMeth();
        Test.iArrFld[(-44082 >>> 1) % N] *= i18;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
