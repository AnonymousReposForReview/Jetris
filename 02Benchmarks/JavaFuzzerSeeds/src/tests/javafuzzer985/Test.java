package tests.javafuzzer985;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:23:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2511003776495043537L;
    public double dFld=2.33975;
    public static short sFld=25589;
    public static float fFld=0.866F;
    public static int iFld=-164;
    public static int iFld1=-75;
    public static int iFld2=17;
    public static double dArrFld[]=new double[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -83.107046);
        FuzzerUtils.init(Test.lArrFld, 14L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i18, int i19, int i20) {

        int i21=-4398, i22=-54522, i23=-190, i24=54522, i25=-12759, iArr2[]=new int[N];
        long l=7714443223703029651L;

        FuzzerUtils.init(iArr2, -9);

        iArr2 = FuzzerUtils.int1array(N, (int)-8093);
        i19 >>= i18;
        for (i21 = 5; i21 < 187; i21++) {
            iArr2[i21] = (int)Test.instanceCount;
            switch ((i21 % 2) + 99) {
            case 99:
                for (l = i21; l < 9; ++l) {
                    i23 += i23;
                    Test.instanceCount ^= i21;
                    Test.instanceCount -= i20;
                }
                i19 += i19;
                break;
            case 100:
                Test.instanceCount += Test.instanceCount;
                for (i24 = 9; 1 < i24; i24 -= 3) {
                    Test.dArrFld[i21] = i19;
                    Test.instanceCount += (((i24 * i24) + i25) - Test.instanceCount);
                    i25 += (((i24 * i23) + i21) - Test.fFld);
                }
                break;
            }
        }
        long meth_res = i18 + i19 + i20 + i21 + i22 + l + i23 + i24 + i25 + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i13, float f2) {

        int i14=222, i15=9, i16=59180, i17=81, i26=-5, i27=14, i28=-109, iArr1[]=new int[N];
        double d1=-111.8587;

        FuzzerUtils.init(iArr1, 178);

        for (i14 = 6; i14 < 208; i14++) {
            for (i16 = i14; i16 < 8; i16++) {
                iArr1[i16 - 1] -= (iArr1[i14]--);
                Test.instanceCount += (i16 ^ i14);
                if (i17 != 0) {
                    vMeth_check_sum += i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i26 + i27 +
                        Double.doubleToLongBits(d1) + i28 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                i17 >>= (((i15++) + (Test.sFld + i13)) + iMeth1(i17, i15, i16));
                for (i26 = 1; i26 < 1; i26++) {
                    i27 = Test.iFld;
                    i27 *= i26;
                    i17 += (i26 ^ i16);
                    Test.lArrFld[i14 + 1] = (long)d1;
                }
                i28 = 1;
                do {
                    if (i26 != 0) {
                        vMeth_check_sum += i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i26 + i27 +
                            Double.doubleToLongBits(d1) + i28 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    Test.instanceCount -= i14;
                    Test.iFld *= i13;
                } while (++i28 < 1);
            }
        }
        vMeth_check_sum += i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i26 + i27 +
            Double.doubleToLongBits(d1) + i28 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i11=98, i12=185, iArr3[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr3, 45613);

        for (i11 = 4; i11 < 239; i11++) {
            Test.sFld += (short)(i11 * i11);
            vMeth(i12, Test.fFld);
            i12 *= Test.iFld;
            Test.fFld += (((i11 * i11) + Test.iFld) - Test.instanceCount);
            if (b) break;
            try {
                Test.iFld = (iArr3[i11] / Test.iFld);
                i12 = (10754 % Test.iFld);
                Test.iFld = (iArr3[i11] / Test.iFld1);
            } catch (ArithmeticException a_e) {}
            Test.iFld += (109 + (i11 * i11));
            iArr3[i11 + 1] *= Test.sFld;
        }
        Test.iFld1 &= (int)1L;
        long meth_res = i11 + i12 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i1=23006, i2=-5, i3=39646, i4=-10484, i5=40, i6=-3, i7=-11, i8=27, i9=135, i10=241, iArr[]=new int[N];
        float f=-71.532F, f1=43.114F;
        byte by=-17;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr, 57222L);

        for (i1 = 12; i1 < 206; ++i1) {
            for (i3 = 3; i3 < 129; ++i3) {
                dFld *= (iArr[i3 + 1] = (int)((Test.instanceCount - i1) - (i4 - i2)));
            }
        }
        lArr[(i3 >>> 1) % N][(i2 >>> 1) % N] = (long)(i3 % (((long)(-Float.intBitsToFloat(i1))) | 1));
        i2 = (int)((Test.instanceCount / ((i4 - i1) | 1)) + (--Test.instanceCount));
        i2 = iArr[(i2 >>> 1) % N];
        i4 = (int)((i4--) * (f++));
        for (i5 = 4; 121 > i5; i5++) {
            for (f1 = 3; f1 < 214; f1++) {
                iArr[i5] = (by = (byte)i2);
                i6 += (int)Test.instanceCount;
                for (i8 = (int)(f1); 2 > i8; i8++) {
                    f += (float)0.26237;
                }
                i10 = 1;
                do {
                    double d2=-101.78579;
                    i7 = i2;
                    i7 = (int)(((i2 + Test.instanceCount) - (32409L + (i4 - i5))) + i8);
                    i4 >>= (iMeth() - -254);
                    if (true) {
                        Test.iFld = (int)Test.instanceCount;
                        Test.instanceCount *= i5;
                        switch ((i5 % 1) + 114) {
                        case 114:
                            Test.iFld1 += 6;
                            Test.instanceCount += (((i10 * i9) + Test.instanceCount) - Test.iFld);
                            Test.lArrFld = lArr[i10];
                            break;
                        }
                        Test.iFld1 += (int)f1;
                    } else {
                        Test.iFld2 += Test.iFld1;
                        by = (byte)205L;
                    }
                    f += (float)d2;
                    iArr = iArr;
                    Test.lArrFld[(int)(f1 - 1)] *= Test.instanceCount;
                } while (++i10 < 2);
            }
        }

    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
