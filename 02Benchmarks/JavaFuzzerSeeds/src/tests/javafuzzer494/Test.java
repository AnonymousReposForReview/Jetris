package tests.javafuzzer494;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:41:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-38325L;
    public static byte byFld=-39;
    public static float fFld=109.173F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -15351);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static int iMeth(long l, int i2, int i3) {

        float f=0.746F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 0L);

        f += (i3 + ((++Test.iArrFld[(i3 >>> 1) % N]) + lArr[(-12214 >>> 1) % N]));
        long meth_res = l + i2 + i3 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i4) {

        short s=3043;
        float f1=0.305F;
        double d1=0.106818;
        int i5=0, i6=9093, i7=-9, i8=4, i9=252, i10=-41;
        byte by=4;

        i4 = iMeth(-10L, -6, i4);
        i4 -= i4;
        i4 ^= i4;
        Test.instanceCount >>= i4;
        i4 = s;
        i4 = (int)f1;
        for (d1 = 19; d1 < 368; ++d1) {
            for (i6 = 1; 5 > i6; ++i6) {
                if (false) continue;
            }
            Test.instanceCount += (long)(d1 * d1);
            i8 = 1;
            while (++i8 < 5) {
                Test.iArrFld[(int)(d1 + 1)] <<= s;
                for (i9 = 1; i9 < 1; ++i9) {
                    by -= (byte)i7;
                    i7 -= i10;
                }
            }
        }
        long meth_res = i4 + s + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8 + i9 + i10
            + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(double d) {

        int i1=11, i11=19110, i12=-181, iArr1[]=new int[N];
        float f2=72.690F;
        boolean b=false;

        FuzzerUtils.init(iArr1, 57525);

        iArr1[(i1 >>> 1) % N] += Integer.reverseBytes(iMeth(i1 * 14, ++i1, i1));
        lMeth(-51206);
        i1 = Test.byFld;
        Test.instanceCount += (long)f2;
        i1 = i1;
        i11 = 1;
        do {
            i12 = 1;
            while (++i12 < 6) {
                if (true) continue;
                b = b;
                i1 += (int)135L;
                i1 = (int)d;
                i1 *= (int)f2;
                Test.instanceCount |= i11;
                i1 *= i12;
            }
            i1 <<= i12;
        } while (++i11 < 259);
        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + Float.floatToIntBits(f2) + i11 + i12 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-7, iArr[]=new int[N];
        double d2=39.114119;

        FuzzerUtils.init(iArr, 6);

        Test.instanceCount >>>= (i -= (iArr[(i >>> 1) % N]++));
        vMeth(d2);
        Test.fFld *= i;
        i |= -52029;
        Test.instanceCount = i;
        Test.instanceCount = i;
        Test.fFld = -231;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
