package tests.javafuzzer949;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:54:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1419047079L;
    public static int iFld=-5872;
    public static float fFld=2.152F;
    public static int iFld1=-10;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -58.807F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10, int i11) {

        int i12=-12, i13=7, i14=-13, iArr[]=new int[N];
        double d=0.83340;
        float f=2.944F;

        FuzzerUtils.init(iArr, -12);

        i12 = 1;
        do {
            Test.instanceCount -= 8260351128902701906L;
        } while (++i12 < 186);
        for (d = 19; 313 > d; ++d) {
            iArr[(int)(d - 1)] = Test.iFld;
            i13 = (int)f;
        }
        i14 = 1;
        do {
            i10 = -13484;
        } while (++i14 < 258);
        i13 >>= i13;
        vMeth2_check_sum += i10 + i11 + i12 + Double.doubleToLongBits(d) + i13 + Float.floatToIntBits(f) + i14 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i6, int i7) {

        int i8=-7, i9=-6, i15=51965, i16=68, i17=2466, i18=135, i19=17, i20=146, i21=9839, iArr1[]=new int[N];
        boolean b=false;
        byte by=64;
        short s=31415;

        FuzzerUtils.init(iArr1, -192);

        for (i8 = 1; i8 < 160; ++i8) {
            vMeth2(i6, -10);
            if (b) break;
            Test.iFld += (((i8 * i7) + by) - Test.fFld);
            for (i15 = 1; 10 > i15; ++i15) {
                s = (short)Test.instanceCount;
                for (i17 = i8; i17 < 2; i17++) {
                    i19 -= Test.iFld;
                    iArr1[i8 + 1] -= i18;
                    Test.instanceCount += i19;
                    Test.instanceCount -= Test.instanceCount;
                }
                Test.fFld = i9;
                for (i20 = 1; 2 > i20; ++i20) {
                    iArr1[i20] = 14;
                    i7 += (((i20 * by) + i19) - Test.fFld);
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + (b ? 1 : 0) + by + i15 + i16 + s + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i5) {


        vMeth1(Test.iFld, 252);
        vMeth_check_sum += i5;
    }

    public void mainTest(String[] strArr1) {

        int i=-23893, i1=10, i2=-18718, i3=-11, i4=-110, i22=1, i23=5, i24=39, i25=-118, i26=-35962, i27=222,
            i28=-4083, i29=-85, iArr2[][]=new int[N][N];
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1524796610L);
        FuzzerUtils.init(iArr2, 13);

        i &= Test.iFld;
        lArr = lArr;
        for (i1 = 2; 124 > i1; ++i1) {
            for (i3 = 9; i3 < 205; i3++) {
                vMeth(31041);
            }
            for (i22 = i1; i22 < 205; i22++) {
                if (b1) {
                    Test.instanceCount += (i22 - Test.instanceCount);
                }
                Test.iFld = (int)Test.instanceCount;
            }
        }
        i = i4;
        iArr2[(i2 >>> 1) % N][(13 >>> 1) % N] *= i;
        i -= (int)Test.instanceCount;
        for (i24 = 4; i24 < 121; ++i24) {
            Test.fArrFld[i24 - 1] += Test.fFld;
            if (b1) {
                for (i26 = i24; i26 < 214; ++i26) {
                    Test.instanceCount -= i2;
                    i += (i26 * i26);
                    Test.iFld <<= Test.iFld1;
                    Test.fFld += Test.fFld;
                }
                Test.iFld1 >>= i;
                i4 += (int)Test.instanceCount;
            } else {
                i23 -= -3;
            }
            i27 = -112;
            i2 += (int)Test.instanceCount;
            for (i28 = 13; 214 > i28; i28++) {
                i = i2;
            }
            Test.fFld -= i24;
            i25 += i23;
        }
        i23 -= i4;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
