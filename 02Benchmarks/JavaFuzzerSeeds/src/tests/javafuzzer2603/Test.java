package tests.javafuzzer2603;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:14:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8718883275681249193L;
    public static float fFld=46.245F;
    public static boolean bFld=false;
    public short sFld=30088;
    public float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13644);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l2, float f) {

        int i1=14, i2=16826, i3=-34708, i4=33816, i5=90, iArr[]=new int[N];
        long l3=-12240L;
        short s=22587;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -3.58303);
        FuzzerUtils.init(iArr, -122);

        for (i1 = 12; i1 < 352; i1 += 2) {
            i2 += (int)Test.instanceCount;
            l2 >>= l2;
            l3 = 1;
            while (++l3 < 9) {
                for (i3 = 1; i3 < 1; i3++) {
                    i2 += i1;
                    f -= 0;
                    i2 -= i5;
                    dArr[(int)(l3)] += f;
                    switch (((i1 % 2) * 5) + 120) {
                    case 125:
                        try {
                            i2 = (iArr[i1] / 20381);
                            i2 = (204 % i1);
                            i2 = (27569 / i5);
                        } catch (ArithmeticException a_e) {}
                        i4 *= s;
                        break;
                    case 121:
                        dArr[i3 - 1] -= i4;
                        f = l3;
                        i2 += (166 + (i3 * i3));
                    }
                }
            }
        }
        vMeth2_check_sum += l2 + Float.floatToIntBits(f) + i1 + i2 + l3 + i3 + i4 + i5 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, int i, long l1) {

        int i6=241, i7=-40034, i8=10, i9=-9, i10=-2, i11=-5, i12=-11, iArr1[]=new int[N];
        boolean b=true;
        long l4=-35542L;
        double d1=0.61430;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 26);
        FuzzerUtils.init(fArr, 102.559F);

        vMeth2(Test.instanceCount, Test.fFld);
        Test.instanceCount = (long)2.966F;
        iArr1[(23 >>> 1) % N] = 127;
        Test.fFld -= Test.instanceCount;
        for (i6 = 1; i6 < 174; ++i6) {
            b = b;
            for (i8 = 1; i8 < 9; ++i8) {
                byte by=94;
                for (l4 = i8; l4 < 2; l4++) {
                    i9 *= i6;
                }
                for (i11 = 1; i11 < 2; i11++) {
                    fArr = fArr;
                    l *= i6;
                }
                d1 *= 98;
                by += (byte)(((i8 * i10) + i7) - Test.fFld);
                i7 += (i8 * Test.fFld);
            }
        }
        vMeth1_check_sum += l + i + l1 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + l4 + i10 + i11 + i12 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        double d=-1.120871;
        int i14=116, i15=39048, i16=195, iArr2[]=new int[N];
        byte by1=-104;
        short s1=15415;
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, -239);
        FuzzerUtils.init(fArr1, -1.551F);

        d = 1;
        while (++d < 246) {
            int i13=7;
            vMeth1(Test.instanceCount, i13, Test.instanceCount);
            switch (((i13 >>> 1) % 1) + 81) {
            case 81:
                for (i14 = 1; i14 < 7; ++i14) {
                    i15 += by1;
                    s1 <<= (short)Test.instanceCount;
                    i16 = 1;
                    while (++i16 < 2) {
                        i13 += i16;
                        i13 *= i15;
                    }
                    i13 = (int)-2196559936527464620L;
                    i15 += (((i14 * Test.instanceCount) + Test.instanceCount) - Test.fFld);
                }
                break;
            }
            Test.instanceCount = 20;
            s1 *= (short)Test.instanceCount;
            i13 -= i16;
            fArr1[(int)(d)] *= i13;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i14 + i15 + by1 + s1 + i16 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i18=84, i19=21563, i20=-1, i21=49979, i22=-29082;
        long l5=-14L;
        float f1=28.54F;
        double d2=1.127875, dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 23.84693);

        vMeth();
        for (i18 = 17; i18 < 341; ++i18) {
            l5 = 1;
            while (++l5 < 78) {
                i19 = i19;
                Test.instanceCount = l5;
                Test.instanceCount <<= i18;
                i19 = (int)l5;
                Test.instanceCount += l5;
                for (f1 = 1; f1 > 1; f1--) {
                    fArrFld[(int)(l5)] = Test.fFld;
                    Test.instanceCount = 12;
                    if (Test.bFld) continue;
                    i19 = 28;
                    Test.iArrFld[(int)(f1 + 1)] *= i18;
                    i19 += (int)f1;
                    if (Test.bFld) break;
                    i19 += 15489;
                }
            }
            Test.instanceCount += (((i18 * i19) + i18) - i18);
            if (true) {
                for (i21 = i18; i21 < 78; ++i21) {
                    d2 /= (i19 | 1);
                    i22 *= -128;
                    i19 = i21;
                    Test.fFld = l5;
                    if (Test.bFld) {
                        dArr1[i18] += i20;
                        Test.fFld += f1;
                        i22 = i20;
                        i20 >>= i21;
                    }
                    i22 |= sFld;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
