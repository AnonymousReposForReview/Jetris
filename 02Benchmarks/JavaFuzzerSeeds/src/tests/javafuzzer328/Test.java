package tests.javafuzzer328;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:00:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1380786014L;
    public static boolean bFld=false;
    public static long lFld=61364L;
    public static volatile float fFld=-2.52F;
    public static byte byFld=-11;
    public static int iFld=22176;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 9485L);
        FuzzerUtils.init(Test.iArrFld, -7);
        FuzzerUtils.init(Test.dArrFld, 2.50368);
        FuzzerUtils.init(Test.fArrFld, 0.98F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i6, byte by) {

        int i7=73, i8=-217, i9=-43949, iArr[]=new int[N];
        double d=101.128947;

        FuzzerUtils.init(iArr, -11);

        if (Test.bFld) {
            i7 = 1;
            do {
                if (Test.bFld) {
                    Test.lArrFld[i7] += i7;
                    Test.instanceCount /= (Test.instanceCount | 1);
                } else {
                    i6 -= i7;
                }
                Test.iArrFld[i7 + 1] += i7;
                Test.lArrFld[i7 - 1] -= i7;
                for (i8 = 1; i8 < 5; i8++) {
                    if (Test.bFld) break;
                    iArr[i8] >>= i6;
                }
                i9 += (i7 * Test.instanceCount);
                i6 -= (int)Test.lFld;
                Test.lArrFld[i7] |= Test.instanceCount;
                i9 -= (int)-3.62974;
            } while (++i7 < 365);
        } else if (Test.bFld) {
            i6 += (int)d;
        } else if (Test.bFld) {
            i6 *= i7;
        } else {
            i6 -= i9;
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i6 + by + i7 + i8 + i9 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i3) {

        int i4=19183, i5=0, i10=-75, i11=5, i12=27;
        byte by1=-52;
        double d1=0.119640;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 69.426F);

        for (i4 = 2; i4 < 202; ++i4) {
            i3 += (++i3);
            i5 *= Integer.reverseBytes(i5);
            vMeth2(Test.fFld, 56284, by1);
            for (i10 = 1; i10 < 8; ++i10) {
                Test.iArrFld[i4 + 1] = -9792;
                for (d1 = 1; d1 < 2; d1++) {
                    fArr[(int)(d1)] -= Test.lFld;
                    switch (((i4 % 2) * 5) + 69) {
                    case 70:
                        Test.lArrFld[(int)(d1 + 1)] -= i5;
                        Test.dArrFld[(int)(d1)] -= i4;
                        if (i3 != 0) {
                            vMeth1_check_sum += i3 + i4 + i5 + by1 + i10 + i11 + Double.doubleToLongBits(d1) + i12 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                        Test.lFld <<= Test.instanceCount;
                    case 73:
                        Test.instanceCount = -153;
                        i11 <<= 158;
                    default:
                        if (i10 != 0) {
                            vMeth1_check_sum += i3 + i4 + i5 + by1 + i10 + i11 + Double.doubleToLongBits(d1) + i12 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                    }
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + by1 + i10 + i11 + Double.doubleToLongBits(d1) + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i) {

        int i1=0, i2=-26907, i14=-11;
        float f=0.733F;
        double d2=2.62111;
        boolean b=false;

        for (i1 = 12; i1 < 268; i1++) {
            i2 += (int)f;
            vMeth1(i2);
            Test.fFld -= i1;
        }
        for (int i13 : Test.iArrFld) {
            i2 ^= i2;
            i13 = Test.byFld;
            Test.instanceCount += 4;
            d2 -= i13;
            i14 = 1;
            do {
                i2 += i14;
                b = Test.bFld;
                i2 += i14;
                Test.iArrFld[i14 - 1] = i2;
                Test.lArrFld[i14] -= i;
            } while (++i14 < 4);
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i14 + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i15=-123, i16=-3466, i17=-240, i18=167, i19=1, i20=-52768, i21=0, i22=8, i23=82;
        short s=14010;

        vMeth(i15);
        i15 = i15;
        for (i16 = 13; i16 < 263; ++i16) {
            for (i18 = 6; i18 < 101; ++i18) {
                switch ((i18 % 2) + 111) {
                case 111:
                    i15 = (int)1.104730;
                    for (i20 = 1; i20 < 2; i20++) {
                        i21 = Test.byFld;
                        i17 *= i21;
                        Test.iArrFld[i20 - 1] = i17;
                        i17 -= 12;
                        Test.byFld += (byte)i15;
                        Test.lFld = 33663;
                    }
                    for (i22 = 1; i22 < 2; ++i22) {
                        if (Test.bFld) {
                            switch (((i16 % 10) * 5) + 117) {
                            case 130:
                                Test.fArrFld[i18 - 1] += Test.instanceCount;
                            case 139:
                                Test.byFld <<= (byte)-117;
                                Test.instanceCount -= i18;
                                Test.fFld += (((i22 * i21) + Test.lFld) - s);
                                Test.iArrFld[i18] -= i22;
                            case 144:
                                Test.fFld += (i22 * i19);
                                Test.byFld -= (byte)Test.fFld;
                                break;
                            case 159:
                                Test.iArrFld[i18 + 1] *= Test.iFld;
                            case 126:
                                if (Test.bFld) {
                                    i15 = i18;
                                    Test.lFld = (long)-1.792F;
                                    Test.iArrFld[i16] += (int)2.70513;
                                    Test.fFld = -30652;
                                } else {
                                    i19 <<= i17;
                                }
                                break;
                            case 133:
                                s *= (short)Test.fFld;
                                break;
                            case 149:
                                Test.iArrFld[i22] <<= Test.iFld;
                            case 156:
                                i23 -= i16;
                                break;
                            case 138:
                                Test.iArrFld[i16] = -10;
                                break;
                            case 132:
                                Test.iArrFld[i22 + 1] %= -4;
                                break;
                            default:
                                Test.iArrFld[i22] *= 25952;
                            }
                        } else {
                            i17 += (int)11.43814;
                        }
                    }
                    break;
                case 112:
                    Test.instanceCount = i20;
                    break;
                default:
                    Test.lFld -= Test.instanceCount;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
