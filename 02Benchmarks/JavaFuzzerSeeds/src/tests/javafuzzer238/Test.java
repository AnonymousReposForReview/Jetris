package tests.javafuzzer238;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:44:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5122644505557573098L;
    public static int iFld=-46567;
    public static float fFld=0.1001F;
    public byte byFld=106;
    public static volatile long lFld=-230L;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -163);
        FuzzerUtils.init(Test.fArrFld, -82.629F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, double d) {

        int i8=-23489, i9=-158, i10=-25228, i11=-20955;
        double d1=-97.32804;
        byte by=36;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6L);

        i8 = 144;
        do {
            d1 = 1;
            do {
                lArr[(int)(d1)] += Test.instanceCount;
                Test.iFld &= 6;
                by >>>= (byte)Test.iFld;
                i7 = 128;
                Test.instanceCount <<= Test.instanceCount;
                Test.iFld -= (int)Test.instanceCount;
                Test.iArrFld[(int)(d1 - 1)] >>>= (int)Test.instanceCount;
                Test.iFld = Test.iFld;
                Test.iFld = (int)Test.instanceCount;
            } while (++d1 < 11);
            i9 = 1;
            while (++i9 < 11) {
                for (i10 = 1; 1 > i10; i10++) {
                    Test.iFld |= i8;
                    i7 -= 12;
                }
            }
        } while (--i8 > 0);
        vMeth1_check_sum += i7 + Double.doubleToLongBits(d) + i8 + Double.doubleToLongBits(d1) + by + i9 + i10 + i11 +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l1, int i5, int i6) {

        double d2=2.29941, dArr[]=new double[N];
        float f=1.732F, f1=0.768F;
        int i12=-121, i13=-13, i14=66, i15=64;
        short s=-9277;

        FuzzerUtils.init(dArr, 2.125013);

        vMeth1(Test.iFld, d2);
        i5 = (int)f;
        d2 = Test.iFld;
        i12 = 1;
        do {
            Test.iFld += Test.iFld;
            dArr[i12 - 1] *= d2;
        } while (++i12 < 313);
        i6 = i12;
        i5 <<= i5;
        for (i13 = 398; i13 > 9; i13 -= 2) {
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-9);
        }
        for (f1 = 10; f1 < 178; f1++) {
            Test.iFld -= (int)Test.instanceCount;
            s = (short)57906;
            Test.iArrFld[(int)(f1 + 1)] >>= (int)Test.instanceCount;
            Test.iArrFld[(int)(f1)] = i14;
        }
        long meth_res = l1 + i5 + i6 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f) + i12 + i13 + i14 +
            Float.floatToIntBits(f1) + i15 + s + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, long l, int i4) {

        int i17=13, i18=-178, i19=13, i20=100;
        float f2=0.819F;
        double d3=0.82677, dArr1[][]=new double[N][N];
        boolean b=false;

        FuzzerUtils.init(dArr1, 51.68932);

        i4 = (int)Float.intBitsToFloat(iMeth(l, i4, Test.iFld));
        l += l;
        for (int i16 : Test.iArrFld) {
            i3 += i4;
            Test.iFld = i4;
        }
        for (i17 = 5; i17 < 201; i17++) {
            for (i19 = 1; i19 < 8; ++i19) {
                i4 &= i19;
                f2 = (float)d3;
                i3 = (int)Test.instanceCount;
                dArr1[i19 - 1][i19] = f2;
                i20 = i3;
                i18 -= (int)l;
                if (b) continue;
                i4 = (int)l;
            }
        }
        vMeth_check_sum += i3 + l + i4 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d3)
            + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=38441, i1=-33343, i2=5, i21=10675, i22=61446, i23=-150, i24=252, i25=0, iArr[]=new int[N];
        long l2=30L;
        short s1=-825;
        boolean b1=true;
        double d4=84.103790;

        FuzzerUtils.init(iArr, 2);

        iArr[(Test.iFld >>> 1) % N] <<= (iArr[(Test.iFld >>> 1) % N]--);
        i = 1;
        do {
            for (i1 = 4; i1 < 156; ++i1) {
                iArr = (iArr = (iArr = (iArr = iArr)));
            }
            vMeth(i2, Test.instanceCount, i2);
            if (b1) {
                Test.iFld += (i - i2);
                i2 |= -41;
                Test.iFld |= 65281;
            } else if (b1) {
                iArr[i - 1] = (int)Test.fFld;
                i21 = 1;
                while (++i21 < 156) {
                    i2 += i21;
                    iArr[i - 1] = i;
                    for (i22 = 1; i22 < 1; i22++) {
                        l2 = i21;
                    }
                    for (i24 = 1; i24 > 1; --i24) {
                        Test.instanceCount = Test.iFld;
                        switch (((i21 % 10) * 5) + 21) {
                        case 47:
                            Test.instanceCount += (i24 * i24);
                            Test.iFld = i24;
                            i23 += i24;
                            byFld = (byte)s1;
                            break;
                        case 69:
                            Test.fArrFld[i][i - 1] -= i1;
                            Test.fArrFld[i24 + 1][i24 - 1] += 2;
                            Test.iFld *= (int)Test.instanceCount;
                            break;
                        case 65:
                            byFld <<= (byte)l2;
                            i23 *= i2;
                            break;
                        case 41:
                            b1 = b1;
                            if (b1) continue;
                            break;
                        case 46:
                            d4 *= l2;
                        case 68:
                            Test.iFld = i21;
                            break;
                        case 37:
                            d4 *= Test.fFld;
                        case 61:
                            l2 += (((i24 * i21) + i23) - Test.lFld);
                            break;
                        case 28:
                            Test.lFld &= i2;
                        case 26:
                            i2 = (int)Test.lFld;
                            break;
                        }
                    }
                }
            }
        } while (++i < 161);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
