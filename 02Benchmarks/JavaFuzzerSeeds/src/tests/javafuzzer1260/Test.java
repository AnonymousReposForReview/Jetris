package tests.javafuzzer1260;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:31:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2550L;
    public double dFld=-47.2221;
    public static boolean bFld=true;
    public static short sFld=18040;
    public static int iFld=5;
    public static int iFld1=65;
    public static volatile int iFld2=209;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, int i9, int i10) {

        int i11=179, i12=-158, i13=-10, i14=-28867, i15=-1, i16=0;
        double d=0.112442;
        boolean b=false;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -5L);

        lArr = lArr;
        for (i11 = 18; i11 < 366; i11++) {
            d = i12;
            if (b) {
                for (i13 = 1; 5 > i13; i13++) {
                    for (i15 = i13; i15 < 2; i15++) {
                        i10 += (int)Test.instanceCount;
                        i12 += (i15 * i15);
                        i12 -= (int)Test.instanceCount;
                    }
                    f1 -= i12;
                    f1 += i16;
                    Test.instanceCount = i9;
                    i9 *= (int)d;
                    Test.instanceCount += i15;
                    i16 += (i13 | Test.instanceCount);
                }
            } else {
                lArr[i11 + 1][i11 - 1] = i13;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + i13 + i14 + i15
            + i16 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i5=57598, i6=40573, i7=-41799, i8=-177, iArr1[]=new int[N];
        float f2=-1.219F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(lArr1, -1285160188L);

        for (int i4 : iArr1) {
            for (i5 = 1; i5 < 4; ++i5) {
                for (i7 = i5; i7 < 2; i7++) {
                    switch ((((Math.min(i5, i6) >>> 1) % 5) * 5) + 19) {
                    case 33:
                        Test.instanceCount >>= Test.instanceCount;
                        break;
                    case 37:
                        i6 += (i7 - i7);
                    case 27:
                        i4 = iMeth(f2, i8, i6);
                        break;
                    case 25:
                        i8 *= i4;
                        Test.instanceCount = i8;
                        Test.instanceCount = i7;
                        lArr1[i5] -= Test.instanceCount;
                        break;
                    case 38:
                        iArr1[i7] -= -7045;
                        break;
                    default:
                        if (Test.bFld) break;
                        Test.instanceCount = i4;
                    }
                    Test.instanceCount -= i8;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(float f, long l, int i3) {

        int i17=14, i18=-14, i19=-29184;

        vMeth1();
        i3 += (int)Test.instanceCount;
        i17 = 1;
        do {
            i18 = 1;
            do {
                i3 += (int)2.928F;
                switch (((i18 % 1) * 5) + 80) {
                case 83:
                    Test.bFld = true;
                    i3 <<= i17;
                    i3 += i17;
                    Test.bFld = Test.bFld;
                    break;
                default:
                    f = Test.sFld;
                    i3 = i3;
                    i19 = 1;
                    do {
                        i3 *= i17;
                        Test.iFld = (int)465207149872124748L;
                    } while (++i19 < 1);
                }
            } while (++i18 < 5);
        } while (++i17 < 321);
        vMeth_check_sum += Float.floatToIntBits(f) + l + i3 + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i=-47, i1=143, i2=-6, i20=69, i21=-38709, i22=-58904, i23=-12, i24=-4015, iArr[][]=new int[N][N];
        float f3=-117.164F;

        FuzzerUtils.init(iArr, 9);

        iArr[(i >>> 1) % N][(i >>> 1) % N] >>= (int)((Math.max(Test.instanceCount, -669944622606072094L) * i) - (i -
            (dFld - i)));
        i = (--i);
        for (i1 = 3; i1 < 216; i1++) {
            vMeth(f3, 8970575800539583930L, i);
            for (i20 = 1; i20 < 118; ++i20) {
                if (true) break;
                i22 = 1;
                while (++i22 < 2) {
                    i2 >>= i2;
                    i21 += (int)Test.instanceCount;
                    i21 = (int)-40915L;
                    i = (int)Test.instanceCount;
                    iArr[i22 - 1][i1] += Test.iFld1;
                    iArr[i1 - 1][i20 + 1] = i2;
                    i = i20;
                    if (Test.bFld) continue;
                    i <<= -3;
                }
                i2 += (i20 | Test.iFld);
                for (i23 = 2; 1 < i23; --i23) {
                    Test.iFld -= i1;
                    i21 -= Test.iFld2;
                    Test.instanceCount >>= 7;
                }
                i2 *= (int)2.9123;
                Test.bFld = Test.bFld;
                if (true) continue;
                Test.iFld1 /= (int)((long)(f3) | 1);
                switch (((i20 % 5) * 5) + 85) {
                case 110:
                    Test.iFld2 = -10;
                    break;
                case 105:
                case 94:
                    iArr[i20 + 1][i1 - 1] -= -9;
                case 87:
                    Test.iFld1 = (int)dFld;
                    dFld = i2;
                    break;
                case 106:
                    iArr[i1 + 1][i1] *= i2;
                    break;
                default:
                    iArr[i20][i1 - 1] = i20;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
