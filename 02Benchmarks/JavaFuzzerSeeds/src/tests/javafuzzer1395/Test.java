package tests.javafuzzer1395;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:36:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=26035L;
    public static double dFld=121.126369;
    public static float fFld=112.684F;
    public static short sFld=-3286;
    public int iFld=-27;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, 1.4397);
        FuzzerUtils.init(Test.iArrFld, 230);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=63726, i8=-18209, i9=-31533, i10=129, i11=-122, i12=-41083, i13=-9, iArr[]=new int[N];
        boolean b=true;
        float f1=-11.192F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)25520);
        FuzzerUtils.init(iArr, 204);

        i7 = 1;
        do {
            for (i8 = 1; i8 < 12; ++i8) {
                for (i10 = 1; i10 < 2; ++i10) {
                    b = true;
                    i11 += (189 + (i10 * i10));
                    Test.dArrFld[i7] = i11;
                }
                for (i12 = 1; i12 < 2; ++i12) {
                    if (b) continue;
                    i13 -= i11;
                    Test.dFld = 223;
                    Test.instanceCount *= (long)Test.dFld;
                    if (i11 != 0) {
                        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 +
                            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
                if (false) {
                    f1 *= i7;
                    sArr[i8] *= (short)i11;
                } else if (false) {
                    i9 += (i8 * i8);
                } else {
                    iArr[i7 + 1] &= i13;
                }
            }
        } while (++i7 < 136);
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5, int i6, double d1) {

        int i14=-129, i15=-192, i16=221, i17=196, i18=14;
        float f2=120.270F;
        short s=-11394;
        boolean b1=false;

        vMeth2();
        for (i14 = 4; 173 > i14; ++i14) {
            i15 = -106;
            f2 += (i14 - s);
            for (i16 = 1; i16 < 9; ++i16) {
                i18 = 1;
                while (++i18 < 2) {
                    Test.instanceCount = i17;
                    i17 <<= i15;
                    i5 -= i5;
                    Test.instanceCount = (long)d1;
                    if (b1) break;
                    i15 += 10378;
                    Test.instanceCount *= -42;
                    i5 += i18;
                }
                i6 += (int)(-6504899760435226592L + (i16 * i16));
            }
        }
        vMeth1_check_sum += i5 + i6 + Double.doubleToLongBits(d1) + i14 + i15 + Float.floatToIntBits(f2) + s + i16 +
            i17 + i18 + (b1 ? 1 : 0);
    }

    public static void vMeth(float f, int i) {

        double d=0.61376;
        int i1=16139, i2=41306, i3=-4324, i4=-6, i19=-14, i20=8, i21=28451, i22=183;
        byte by=9;
        short s1=11695;
        boolean b2=false;

        if (b2) {
            f -= 13;
            d -= 856;
            for (i1 = 8; i1 < 368; ++i1) {
                i += (4739 + (i1 * i1));
                for (i3 = 1; 5 > i3; i3++) {
                    vMeth1(i4, i, d);
                }
            }
        } else if (b2) {
            for (i19 = 11; i19 < 282; ++i19) {
                by += (byte)i3;
            }
            i2 -= s1;
            for (i21 = 16; i21 < 398; i21 += 2) {
                i2 = 4;
                f -= i;
                i22 = (int)-3L;
            }
        }
        Test.iArrFld[(i3 >>> 1) % N] = i;
        vMeth_check_sum += Float.floatToIntBits(f) + i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i19 + i20 +
            by + s1 + i21 + i22 + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i24=52958, i25=1, i26=17491, i27=50685, i28=7, i29=18657, i30=-6100, i31=-3, i32=41399, i33=3;
        long l=5001573775109344675L, l1=-10L;
        float f3=-23.218F;
        byte by1=104;

        vMeth(Test.fFld, i24);
        for (l = 7; 183 > l; ++l) {
            switch (((i25 >>> 1) % 2) + 43) {
            case 43:
                for (i26 = 1; i26 < 143; i26++) {
                    Test.fFld = 5;
                    Test.sFld -= (short)i26;
                }
                i24 = i27;
                Test.instanceCount += i24;
                break;
            case 44:
                Test.iArrFld[(int)(l)] = i27;
                try {
                    Test.iArrFld[(int)(l)] = (i24 % i25);
                    Test.iArrFld[(int)(l - 1)] = (-21643 / i24);
                    i25 = (i24 / i24);
                } catch (ArithmeticException a_e) {}
                break;
            }
            for (f3 = l; f3 < 143; f3++) {
                Test.iArrFld[(int)(f3 + 1)] -= i28;
                for (i29 = 1; 1 > i29; ++i29) {
                    lArrFld = lArrFld;
                    lArrFld[(int)(l)][(int)(l - 1)] -= 17241;
                }
                i27 *= Test.sFld;
                for (i31 = 1; i31 < 1; ++i31) {
                    Test.iArrFld[(int)(l)] = (int)l;
                    switch ((((i27 >>> 1) % 2) * 5) + 115) {
                    case 117:
                        Test.instanceCount += Test.instanceCount;
                        break;
                    case 125:
                        i33 += (i31 * i31);
                        break;
                    }
                    i28 = 1;
                    Test.instanceCount = (long)Test.fFld;
                    i32 = (int)l;
                    Test.instanceCount *= by1;
                    i24 <<= i32;
                    i24 = (int)f3;
                }
                i25 = 9;
                i27 *= (int)l1;
                iFld ^= (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
