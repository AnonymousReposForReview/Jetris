package tests.javafuzzer851;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:54:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1129969908908856903L;
    public static boolean bFld=false;
    public static double dFld=103.48407;
    public long lArrFld[]=new long[N];
    public static long lArrFld1[]=new long[N];
    public int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld1, -3105635485626970479L);
        FuzzerUtils.init(Test.fArrFld, 1.94F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(double d) {

        double d1=-2.88245;
        int i6=-64739, i7=-8, i8=11, i9=-227, i10=59587, i11=-183, iArr[]=new int[N];
        float f1=-1.278F;

        FuzzerUtils.init(iArr, -5);

        d1 -= i6;
        for (i7 = 286; i7 > 4; i7--) {
            switch (((i7 % 1) * 5) + 80) {
            case 84:
                f1 *= (float)d;
                i6 += (i7 * i7);
                for (i9 = 1; 6 > i9; i9++) {
                    i11 = 2;
                    while (--i11 > 0) {
                        Test.instanceCount = -59;
                        i6 -= i7;
                        i6 = -127;
                        i8 <<= i9;
                        if (i7 != 0) {
                        }
                        iArr[i9] -= (int)f1;
                        if (Test.bFld) continue;
                        iArr[i7 + 1] += i7;
                    }
                }
                break;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i6 + i7 + i8 +
            Float.floatToIntBits(f1) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(boolean b, int i4, int i5) {

        double d2=-70.41858;
        float f2=16.816F;
        int i12=15251, i13=104, i14=-3, i15=-51724, i16=-8487, i17=-7, iArr1[]=new int[N];
        byte by=15;

        FuzzerUtils.init(iArr1, -35233);

        fMeth(d2);
        for (f2 = 12; f2 < 347; f2++) {
            Test.lArrFld1[(int)(f2 - 1)] = by;
            i4 = (int)127L;
            for (i13 = 1; i13 < 5; i13++) {
                switch ((int)((f2 % 5) + 54)) {
                case 54:
                    for (i15 = 1; i15 < 2; i15++) {
                        i12 += (i15 * Test.instanceCount);
                        i4 *= i12;
                    }
                    i4 += (i13 + Test.instanceCount);
                    i4 <<= i4;
                    break;
                case 55:
                    Test.instanceCount -= Test.instanceCount;
                    iArr1[(int)(f2 - 1)] += i16;
                    i5 -= i12;
                case 56:
                    i4 = -62;
                    break;
                case 57:
                    i4 = i17;
                case 58:
                    i14 *= -9;
                default:
                    by = (byte)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + i12 + by +
            i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2) {

        int i3=9139, i18=-219, i19=-8, i20=-36670, i21=43485, iArr2[]=new int[N];
        float f3=-40.329F;
        short s=8529;

        FuzzerUtils.init(iArr2, 201);

        i3 = 252;
        while ((i3 -= 2) > 0) {
            vMeth1(Test.bFld, i3, i2);
            f3 += 8;
            if (Test.bFld) {
                for (i18 = i3; i18 < 12; ++i18) {
                    Test.instanceCount |= i19;
                    i2 += (i18 * i18);
                    if (i19 != 0) {
                        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f3) + i18 + i19 + s + i20 + i21 +
                            FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                }
                Test.instanceCount <<= 25;
                if (i2 != 0) {
                    vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f3) + i18 + i19 + s + i20 + i21 +
                        FuzzerUtils.checkSum(iArr2);
                    return;
                }
            }
            i19 -= s;
            for (i20 = 1; i20 < 12; ++i20) {
                Test.lArrFld1[i20] *= (long)1.82F;
                iArr2[i20] -= -140;
                Test.dFld -= f3;
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f3) + i18 + i19 + s + i20 + i21 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=-140, i22=2, i23=-12, i24=-36376, i25=-14, i26=9, i27=-21962, i28=98, i29=-14, i30=-12, i31=-13;
        float f=104.934F;

        for (i = 3; i < 185; i++) {
            Test.instanceCount += (((28114 - (-15220 - Test.instanceCount)) + 77) + ((~(long)(-107 + (f + i))) -
                lArrFld[i - 1]));
            vMeth(i);
        }
        for (i22 = 17; 337 > i22; i22++) {
            i24 = 1;
            while (++i24 < 79) {
                Test.dFld *= i1;
            }
            Test.instanceCount |= 12;
            for (i25 = i22; i25 < 79; i25++) {
                switch (((i25 >>> 1) % 1) + 113) {
                case 113:
                    if (Test.bFld) {
                        i1 += (44812 + (i25 * i25));
                        for (i27 = 1; i27 < 1; ++i27) {
                            i28 <<= i;
                            f *= i26;
                            i29 |= i29;
                        }
                        i28 -= i26;
                        iArrFld[i25] = i27;
                    } else if (Test.bFld) {
                        i26 -= i;
                        if (Test.bFld) {
                            i28 = i23;
                        } else if (Test.bFld) {
                            if (Test.bFld) {
                                i23 += (i25 | i26);
                            } else {
                                f += f;
                                iArrFld[i25 + 1] = (int)Test.dFld;
                            }
                            f *= 0;
                            f *= i22;
                            for (i30 = 1; i30 < 1; i30++) {
                                i31 += i25;
                                i1 >>= 11605;
                                f -= 227L;
                            }
                        } else if (Test.bFld) {
                            i23 -= (int)1L;
                        }
                    } else if (Test.bFld) {
                        Test.fArrFld[i25] *= i1;
                    } else {
                        i31 += (-23893 + (i25 * i25));
                    }
                default:
                    Test.dFld = f;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
