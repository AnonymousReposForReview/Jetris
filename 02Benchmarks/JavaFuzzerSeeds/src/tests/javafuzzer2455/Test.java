package tests.javafuzzer2455;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:01:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6395003352081111115L;
    public static double dFld=10.96417;
    public static int iFld=103;
    public volatile short sFld=26937;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 43768);
        FuzzerUtils.init(Test.sArrFld, (short)-30687);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth() {

        int i6=-3, i7=-4556, i8=-8, i9=-514, i10=-3, i11=65344, i12=-230, i13=-118, iArr[]=new int[N];
        float f=-40.372F;

        FuzzerUtils.init(iArr, 130);

        Test.instanceCount = i6;
        iArr[(i6 >>> 1) % N] = 17543;
        for (i7 = 15; i7 < 331; ++i7) {
            for (i9 = 1; i9 < 5; ++i9) {
                for (i11 = 1; 2 > i11; ++i11) {
                    i8 = i7;
                }
                Test.dFld *= -38712;
                switch ((i9 % 2) + 50) {
                case 50:
                    Test.instanceCount -= (long)f;
                    i12 = i10;
                case 51:
                    iArr[i7] = i10;
                    i12 += (((i9 * Test.instanceCount) + i12) - i6);
                    i13 = 1;
                    while (++i13 < 2) {
                        if (i8 != 0) {
                        }
                        i10 += i13;
                    }
                    break;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 +
            FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static int iMeth(int i3) {

        int i4=-9, i5=-12, i14=-10, i15=-36659, i16=-1;
        short s=-14868;
        byte by=-30;
        float f1=-49.585F;

        for (i4 = 10; i4 < 166; i4++) {
            i5 <<= (((s++) * sMeth()) - i5);
            switch ((i4 % 3) + 18) {
            case 18:
                i5 = (int)Test.instanceCount;
                switch (((-21935 >>> 1) % 2) + 86) {
                case 86:
                    for (i14 = 1; 10 > i14; ++i14) {
                        i3 += i3;
                        i5 <<= (int)Test.instanceCount;
                        s += (short)i15;
                        i16 = 1;
                        do {
                            by += (byte)(i16 + i4);
                            s = (short)i4;
                            Test.iArrFld[i16 - 1] += (int)Test.dFld;
                            i3 += (i16 * i16);
                            i15 += (i16 * i16);
                        } while (++i16 < 2);
                    }
                    break;
                case 87:
                    i3 = by;
                default:
                    f1 *= i16;
                }
                break;
            case 19:
                Test.iArrFld[i4] *= (int)-16809L;
                break;
            case 20:
                Test.instanceCount = i3;
                break;
            default:
                i5 = i4;
            }
        }
        long meth_res = i3 + i4 + i5 + s + i14 + i15 + i16 + by + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=234, i1=-36906, i2=-10, i17=-136, i18=-12, i19=48, i20=53672;
        byte by1=-20;
        float f2=0.706F;
        long lArr[][]=new long[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -1035955211L);
        FuzzerUtils.init(dArr, -2.59479);

        lArr[(i >>> 1) % N] = (lArr[(i >>> 1) % N] = (lArr[(i >>> 1) % N] = (lArr[(i >>> 1) % N] = lArr[(60696 >>> 1) %
            N])));
        for (i1 = 13; 327 > i1; i1++) {
            Test.instanceCount <<= (long)((-(dArr[i1]++)) + Math.abs(-iMeth(i)));
            lArr[i1 - 1][i1 + 1] = i2;
            i2 += (i1 | Test.instanceCount);
            if (i != 0) {
                vMeth_check_sum += i + i1 + i2 + i17 + i18 + by1 + Float.floatToIntBits(f2) + i19 + i20 +
                    FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            i2 += (int)Test.instanceCount;
            for (i17 = 1; i17 < 5; i17++) {
                i18 += (int)(-76.1016F + (i17 * i17));
                switch (((i1 % 7) * 5) + 89) {
                case 118:
                    Test.sArrFld[i1] >>= (short)Test.instanceCount;
                    break;
                case 123:
                case 120:
                    by1 = (byte)f2;
                    for (i19 = 1; i19 < 2; ++i19) {
                        if (false) continue;
                        i18 += (int)(50.803F + (i19 * i19));
                    }
                    break;
                case 106:
                    i20 ^= i2;
                    break;
                case 105:
                    lArr[i1 - 1][i17 - 1] *= i19;
                    break;
                case 115:
                    Test.dFld += Test.instanceCount;
                    break;
                case 121:
                    Test.instanceCount = i17;
                    break;
                default:
                    Test.instanceCount -= i18;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i17 + i18 + by1 + Float.floatToIntBits(f2) + i19 + i20 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=124, i22=-42790, i23=-60767, i25=8, i26=-244, i27=-219, i28=-207;
        float f3=0.949F;
        double d=-103.10537;

        vMeth();
        Test.iArrFld[(i21 >>> 1) % N] = Test.iFld;
        for (i22 = 3; i22 < 157; i22++) {
            boolean b=true;
            switch (((i21 >>> 1) % 5) + 106) {
            case 106:
                if (b) continue;
                break;
            case 107:
                Test.instanceCount += (i22 + f3);
                Test.iFld += (i22 ^ i21);
                if (b) {
                    i23 += (i22 * Test.instanceCount);
                    switch ((i22 % 2) + 18) {
                    case 18:
                    case 19:
                        Test.iFld <<= (int)Test.instanceCount;
                        i23 = Test.iFld;
                        break;
                    }
                    Test.instanceCount -= i21;
                    for (i25 = 6; i25 < 163; i25++) {
                        i26 += (i25 * Test.iFld);
                        i23 = -64724;
                    }
                }
                i26 -= (int)f3;
                break;
            case 108:
                i27 = 1;
                while (++i27 < 163) {
                    i26 += Test.iFld;
                    for (d = 1; 1 > d; ++d) {
                        Test.instanceCount <<= Test.instanceCount;
                        i21 = i26;
                        Test.instanceCount = -7;
                        f3 -= 6;
                        switch (((i27 % 4) * 5) + 35) {
                        case 51:
                            f3 -= sFld;
                            Test.iFld -= i27;
                            Test.iFld >>= i22;
                            Test.iArrFld[i22 - 1] = -13;
                            break;
                        case 36:
                        case 42:
                            i28 *= i25;
                            break;
                        case 53:
                            i21 += (int)(d * d);
                            break;
                        }
                    }
                }
                break;
            case 109:
                f3 = f3;
                break;
            case 110:
                Test.iFld >>= (int)Test.instanceCount;
            default:
                fArrFld[i22] = -5;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
