package tests.javafuzzer232;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:35:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static float fFld=2.908F;
    public boolean bFld=true;
    public static short sArrFld[][]=new short[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-6193);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10) {

        int i11=-121, i12=-139, i13=-25, i14=-87;
        byte by=-79;
        double d=0.75780;

        Test.instanceCount += i10;
        for (i11 = 286; i11 > 7; --i11) {
            i10 *= i10;
            for (i13 = 1; i13 < 6; ++i13) {
                by *= (byte)Test.fFld;
                d = 242;
                Test.instanceCount = 86;
                i14 *= 0;
                i12 <<= i10;
            }
            i14 = i10;
            i14 = (int)Test.instanceCount;
            i14 = i12;
            Test.instanceCount -= by;
            i12 += (int)Test.instanceCount;
            i10 += i12;
        }
        vMeth2_check_sum += i10 + i11 + i12 + i13 + i14 + by + Double.doubleToLongBits(d);
    }

    public static void vMeth1(int i6, float f1, int i7) {

        int i8=-182, i15=233, i16=13, i17=-60285, iArr[]=new int[N];
        double d1=-2.26151;
        byte by1=-70;

        FuzzerUtils.init(iArr, -14826);

        i8 = 1;
        do {
            i7 += (i8 | i6);
            i6 = (i7 &= Short.reverseBytes((short)(-10985)));
            vMeth2(i8);
            for (i15 = 1; i15 < 5; i15++) {
                iArr[i15] = i7;
                i17 = 1;
                do {
                    i7 += -31463;
                    d1 += by1;
                    Test.fFld = Test.instanceCount;
                    i16 *= -8;
                    Test.instanceCount >>= -2250447919395058877L;
                    iArr[i8] += i6;
                    iArr[i17] |= i15;
                } while (++i17 < 2);
                Test.instanceCount = i7;
            }
        } while (++i8 < 313);
        vMeth1_check_sum += i6 + Float.floatToIntBits(f1) + i7 + i8 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            by1 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i5) {


        vMeth1(i5, Test.fFld, i5);
        vMeth_check_sum += i5;
    }

    public void mainTest(String[] strArr1) {

        int i=18271, i1=108, i2=-57970, i3=5, i4=-1, iArr1[]=new int[N];
        float f=54.649F;
        byte by2=41;
        double d2=2.29270;

        FuzzerUtils.init(iArr1, 4061);

        for (i = 8; i < 259; ++i) {
            i3 = 1;
            do {
                for (f = 1; f > 1; --f) {
                    switch ((i % 8) + 77) {
                    case 77:
                        try {
                            i1 = (-1200513817 / i4);
                            i1 = (i1 % -173);
                            i4 = (-2 % i4);
                        } catch (ArithmeticException a_e) {}
                        vMeth(i2);
                        if (bFld) continue;
                        i2 = by2;
                        break;
                    case 78:
                        iArr1[(int)(f)] &= -8589;
                        i1 += (int)f;
                    case 79:
                        Test.instanceCount = Test.instanceCount;
                        i4 += i2;
                        Test.sArrFld[i + 1] = Test.sArrFld[(int)(f - 1)];
                        i2 -= i1;
                        break;
                    case 80:
                        by2 = (byte)Test.instanceCount;
                        Test.instanceCount *= i1;
                        i1 >>= i1;
                        Test.instanceCount = i1;
                        break;
                    case 81:
                        d2 *= i4;
                        if (bFld) continue;
                        try {
                            i2 = (i3 % 666856852);
                            i1 = (i4 % -50292);
                            i4 = (-42310 / i3);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 82:
                        lArrFld[(int)(f)] = -13;
                        switch ((int)((f % 2) + 24)) {
                        case 24:
                            iArr1[(int)(f - 1)] *= (int)Test.fFld;
                            break;
                        case 25:
                            i2 <<= i2;
                            by2 %= (byte)(i1 | 1);
                            i1 = i4;
                            break;
                        default:
                            lArrFld[i] -= i1;
                        }
                        i4 = i3;
                        Test.instanceCount = Test.instanceCount;
                    case 83:
                        i1 += (int)(f + f);
                    case 84:
                        i2 = i3;
                        break;
                    }
                }
            } while (++i3 < 100);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
