package tests.javafuzzer2587;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:56:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4738L;
    public static byte byFld=75;
    public volatile double dFld=88.15796;
    public volatile boolean bFld=false;
    public static short sFld=-26675;
    public int iFld=0;
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 28428L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth1(int i1, int i2, float f) {

        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -60890L);

        lArr[(i2 >>> 1) % N] &= lArr[(i2 >>> 1) % N];
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1() {

        int i7=-22830, i8=57258, i9=-45038, i10=8, i11=210, iArr1[][]=new int[N][N];
        float f1=2.379F;

        FuzzerUtils.init(iArr1, -5);

        Test.instanceCount = -9L;
        for (i7 = 1; 156 > i7; i7++) {
            iArr1 = iArr1;
            Test.instanceCount += (i7 ^ Test.instanceCount);
            Test.instanceCount -= 9;
            i8 = -65;
            i8 = (int)Test.instanceCount;
        }
        f1 = i7;
        i9 = 130;
        i8 *= (int)Test.instanceCount;
        for (i10 = 5; i10 < 318; i10++) {
            i8 = -16410;
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i3) {

        int i4=38499, i5=53, i6=-48931, iArr[]=new int[N];
        short s=-29458;
        boolean b=true;
        float f2=0.979F;
        double d1=-5.11727;

        FuzzerUtils.init(iArr, 129);

        i3 = (int)(i3 += (int)(Test.instanceCount++));
        iArr[(-43704 >>> 1) % N] ^= (--i3);
        switch ((((((int)(Test.instanceCount * Test.instanceCount)) >>> 1) % 2) * 5) + 48) {
        case 54:
            for (i4 = 16; 278 > i4; i4 += 3) {
                i6 = 1;
                while (++i6 < 18) {
                    Test.instanceCount += i6;
                    i5 = (--i5);
                    i3 *= (int)((iMeth1() - i4) - Test.instanceCount);
                    switch (((i6 % 2) * 5) + 59) {
                    case 69:
                        if (b) {
                            i5 = s;
                            i5 = i3;
                            i5 ^= i6;
                            i5 >>= (int)Test.instanceCount;
                        }
                        if (b) continue;
                        break;
                    case 63:
                        f2 -= i3;
                        break;
                    }
                }
            }
        case 56:
            f2 -= (float)d1;
            break;
        default:
            i3 += -4;
        }
        long meth_res = i3 + i4 + i5 + i6 + s + (b ? 1 : 0) + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-12, i12=185, i13=27440, i14=-221, i15=-134, i16=-209, i17=-9, iArr2[][]=new int[N][N];
        double d=-1.114994;
        byte by=-97, byArr[]=new byte[N];
        float f3=71.16F;

        FuzzerUtils.init(iArr2, -8);
        FuzzerUtils.init(byArr, (byte)-75);

        Test.instanceCount -= (--Test.instanceCount);
        i *= (int)((i - (i / (i | 1))) * Test.instanceCount);
        Test.instanceCount += (long)((i - (Test.instanceCount++)) - (Math.min(i, i) - (i + d)));
        vMeth1((int)((iMeth(i) + -3380974102253898396L) * -146), i, 120.19F);
        for (i12 = 11; i12 < 186; ++i12) {
            iArr2 = FuzzerUtils.int2array(N, (int)-14);
        }
        for (i14 = 5; i14 < 305; ++i14) {
            i13 += i14;
        }
        by = (byte)-4299;
        byArr = byArr;
        for (i16 = 12; i16 < 232; i16++) {
            i >>= -7328;
            f3 = i12;
            i &= i;
            Test.lArrFld[i16 + 1][i16 + 1] *= Test.instanceCount;
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + by + i16 + i17 +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-164, i19=-6, i20=217, i21=-18581, i22=8, i23=61894, iArr3[]=new int[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr3, 6);
        FuzzerUtils.init(fArr, 49.94F);

        vMeth();
        iArr3[(i18 >>> 1) % N] += i18;
        i18 *= i18;
        i18 |= i18;
        Test.instanceCount <<= Test.byFld;
        dFld = i18;
        iArr3 = iArr3;
        Test.instanceCount <<= i18;
        for (i19 = 10; i19 < 199; i19++) {
            for (i21 = 8; i21 < 133; ++i21) {
                i23 = 1;
                while (++i23 < 2) {
                    float f4=0.381F;
                    if (bFld) continue;
                    i20 = (int)Test.instanceCount;
                    if (bFld) continue;
                    switch ((((i22 >>> 1) % 6) * 5) + 71) {
                    case 95:
                        if (bFld) {
                            iArr3[i21] >>= Test.byFld;
                            Test.byFld = (byte)29514;
                        } else {
                            i18 += -6;
                            Test.byFld = (byte)i23;
                            i20 += (i23 * i23);
                        }
                        dFld *= Test.sFld;
                        i18 += i21;
                        switch ((i21 % 2) + 29) {
                        case 29:
                            iFld -= i19;
                            break;
                        case 30:
                            Test.instanceCount = iFld;
                            break;
                        }
                        break;
                    case 93:
                        i22 = iFld;
                        iArr3[i19 + 1] = i22;
                        i22 <<= i18;
                        f4 = i22;
                        break;
                    case 83:
                        Test.instanceCount += i23;
                        break;
                    case 94:
                        fArr[i21][i21] = -13;
                        break;
                    case 92:
                        f4 += (-6 + (i23 * i23));
                        break;
                    case 88:
                        i22 += (((i23 * Test.instanceCount) + i21) - i20);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
