package tests.javafuzzer408;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:18:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-34931L;
    public static byte byFld=-22;
    public static boolean bFld=true;
    public short sFld=26519;
    public int iFld=137;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public static byte byArrFld[][]=new byte[N][N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 52);
        FuzzerUtils.init(Test.lArrFld, 2276542691008673870L);
        FuzzerUtils.init(Test.byArrFld, (byte)-29);
        FuzzerUtils.init(Test.fArrFld, 100.987F);
        FuzzerUtils.init(Test.lArrFld1, 28406L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i3, float f) {


        l1 = (long)-66.129823;
        vMeth_check_sum += l1 + i3 + Float.floatToIntBits(f);
    }

    public static int iMeth() {

        int i1=10, i2=0, i4=56340, i5=-4;
        float f1=52.727F, f2=1.673F, f3=0.364F;
        boolean b=false;
        double d=-1.20112, dArr[]=new double[N];
        short s=24992;
        long lArr[]=new long[N], lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(dArr, -2.74113);
        FuzzerUtils.init(lArr1, 0L);

        for (i1 = 12; i1 < 242; ++i1) {
            vMeth(Test.instanceCount, i2, f1);
            i2 += (i1 + f1);
            i2 = (int)f1;
        }
        i2 = i1;
        switch ((((i2 >>> 1) % 9) * 5) + 118) {
        case 136:
            for (f2 = 1; 201 > f2; f2++) {
                i4 |= -206;
                Test.iArrFld[(int)(f2 + 1)] += i2;
                if (b) break;
                for (f3 = 1; f3 < 8; ++f3) {
                    switch ((int)(((f3 % 2) * 5) + 86)) {
                    case 91:
                        d -= s;
                        Test.instanceCount -= -1177952279L;
                        Test.instanceCount -= i5;
                    case 87:
                        lArr[(int)(f2 - 1)] >>= i1;
                        break;
                    default:
                        i4 <<= i1;
                    }
                }
            }
        case 119:
            Test.instanceCount -= i4;
        case 144:
            lArr1 = lArr1;
            break;
        case 139:
            Test.iArrFld[(i1 >>> 1) % N] -= (int)Test.instanceCount;
            break;
        case 128:
            i5 = -24066;
            break;
        case 120:
            Test.iArrFld[(i1 >>> 1) % N] -= i1;
            break;
        case 126:
            Test.byFld &= (byte)i5;
            break;
        case 148:
            d += s;
            break;
        case 150:
            i5 <<= i4;
            break;
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i4 + (b ? 1 : 0) +
            Float.floatToIntBits(f3) + i5 + Double.doubleToLongBits(d) + s + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(long l, int i) {

        float f4=104.548F;

        i = (int)((iMeth() * f4) - 40093);
        vSmallMeth_check_sum += l + i + Float.floatToIntBits(f4);
    }

    public void mainTest(String[] strArr1) {

        int i6=-59392, i7=57485, i8=55, i9=4, i10=-20204, i11=7, i12=-1, i13=-117;
        float f5=0.520F;
        double d2=42.46194;

        for (int smallinvoc=0; smallinvoc<659; smallinvoc++) vSmallMeth(Test.instanceCount, i6);
        i7 = 1;
        while (++i7 < 177) {
            i6 += (i7 | i7);
            for (i8 = 4; i8 < 142; ++i8) {
                if (Test.bFld) continue;
                Test.lArrFld = FuzzerUtils.long1array(N, (long)9909L);
                for (i10 = 1; i10 < 2; ++i10) {
                    i6 = i9;
                }
                Test.iArrFld[i8 + 1] *= i10;
                Test.instanceCount *= Test.byFld;
                f5 = 5;
                i6 += (51629 + (i8 * i8));
                for (i12 = 1; i12 < 2; i12++) {
                    i9 -= i12;
                    switch (i12 + 98) {
                    case 98:
                        Test.iArrFld[i8] = (int)f5;
                        i11 *= (int)Test.instanceCount;
                        sFld -= (short)-113.36374;
                    case 99:
                        Test.instanceCount = Test.instanceCount;
                        i9 += (int)-70.872F;
                        if (Test.bFld) break;
                    case 100:
                        switch ((i7 % 10) + 91) {
                        case 91:
                            i11 = (int)f5;
                            i11 *= i11;
                            Test.iArrFld[i8] <<= 43236;
                            Test.iArrFld[i8 + 1] -= i11;
                        case 92:
                            d2 -= d2;
                            break;
                        case 93:
                            f5 += 6L;
                            try {
                                i11 = (i11 % -63559);
                                i11 = (i8 % Test.iArrFld[i12 + 1]);
                                i6 = (52476491 % i10);
                            } catch (ArithmeticException a_e) {}
                            d2 = d2;
                            break;
                        case 94:
                            Test.byFld = (byte)Test.instanceCount;
                        case 95:
                            Test.byArrFld[i12][i12] = (byte)i9;
                            break;
                        case 96:
                            iFld >>= i7;
                            break;
                        case 97:
                            d2 *= Test.instanceCount;
                            break;
                        case 98:
                            i13 += (i12 + i10);
                            break;
                        case 99:
                            Test.instanceCount <<= i6;
                            break;
                        case 100:
                            Test.iArrFld[i8 - 1] = i6;
                            break;
                        }
                    case 101:
                        i6 = Test.byFld;
                        break;
                    case 102:
                    case 103:
                        if (Test.bFld) continue;
                    case 104:
                        Test.iArrFld[i12 - 1] += i6;
                        break;
                    case 105:
                        d2 -= 215L;
                        break;
                    case 106:
                        Test.lArrFld[i8] = 12;
                        break;
                    case 107:
                        Test.iArrFld[i8] <<= i7;
                    case 108:
                        Test.bFld = Test.bFld;
                        break;
                    case 109:
                    case 110:
                        iFld -= 8;
                        break;
                    case 111:
                        d2 = f5;
                        break;
                    case 112:
                        Test.byFld = (byte)14303;
                        break;
                    case 113:
                        i9 %= (int)(i8 | 1);
                        break;
                    case 114:
                        i11 |= -31110;
                        break;
                    case 115:
                        iFld = i7;
                        break;
                    case 116:
                        iFld += (i12 * i12);
                        break;
                    case 117:
                        iFld = (int)-6880056689933418552L;
                        break;
                    case 118:
                        i9 = (int)Test.instanceCount;
                    case 119:
                        Test.iArrFld[i8] = (int)f5;
                    case 120:
                        Test.instanceCount += (i12 * i12);
                        break;
                    case 121:
                        i6 *= i13;
                    case 122:
                        iFld = -4;
                    case 123:
                        i11 += (((i12 * i11) + Test.byFld) - i10);
                        break;
                    case 124:
                        i11 += (int)f5;
                    case 125:
                        Test.fArrFld[(i10 >>> 1) % N] -= i9;
                        break;
                    case 126:
                        if (Test.bFld) continue;
                        break;
                    case 127:
                    case 128:
                        if (Test.bFld) break;
                        break;
                    case 129:
                        Test.instanceCount += (((i12 * i13) + Test.instanceCount) - Test.instanceCount);
                        break;
                    case 130:
                        i11 = i11;
                        break;
                    case 131:
                        iFld >>= (int)-51707L;
                        break;
                    case 132:
                        Test.bFld = Test.bFld;
                        break;
                    case 133:
                        Test.iArrFld[i7] >>= 10;
                    case 134:
                        i6 += (i12 + i11);
                        break;
                    case 135:
                        Test.iArrFld[i7] %= (int)(iFld | 1);
                    case 136:
                        Test.lArrFld[i8] = i7;
                    case 137:
                        i13 += (i12 ^ Test.instanceCount);
                        break;
                    case 138:
                        Test.instanceCount *= iFld;
                        break;
                    case 139:
                        Test.instanceCount <<= Test.instanceCount;
                        break;
                    case 140:
                        Test.iArrFld = Test.iArrFld;
                    case 141:
                        iFld += (-101 + (i12 * i12));
                        break;
                    case 142:
                        if (Test.bFld) break;
                    case 143:
                        iFld -= sFld;
                    case 144:
                        i9 = i10;
                    case 145:
                        i13 = (int)Test.instanceCount;
                        break;
                    case 146:
                        Test.instanceCount += (i12 * i12);
                        break;
                    case 147:
                        d2 = i9;
                        break;
                    case 148:
                        i6 = i11;
                    case 149:
                        d2 = Test.instanceCount;
                    case 150:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 151:
                        if (false) continue;
                        break;
                    case 152:
                        sFld += (short)i13;
                        break;
                    case 153:
                        Test.fArrFld[i7 - 1] -= i7;
                        break;
                    case 154:
                        try {
                            i6 = (Test.iArrFld[i12] % i12);
                            i13 = (2026676293 % iFld);
                            Test.iArrFld[i8] = (i10 / 1357341579);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 155:
                        Test.lArrFld1[i12 + 1] >>>= -112;
                        break;
                    case 156:
                        i6 = (int)f5;
                        break;
                    case 157:
                        i9 *= i7;
                    case 158:
                        i11 += i11;
                        break;
                    case 159:
                        Test.instanceCount <<= i11;
                        break;
                    case 160:
                        i6 = i6;
                        break;
                    case 161:
                        Test.instanceCount = (long)d2;
                        break;
                    case 162:
                        Test.instanceCount += (((i12 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    case 163:
                        Test.iArrFld[i7] >>>= i10;
                        break;
                    case 164:
                    case 165:
                        Test.byFld += (byte)27516;
                        break;
                    case 166:
                        Test.iArrFld[i12] ^= -193;
                        break;
                    case 167:
                        i6 += (115 + (i12 * i12));
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
