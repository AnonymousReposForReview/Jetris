package tests.javafuzzer1461;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:03:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-144L;
    public long lFld=0L;
    public static byte byFld=-35;
    public static boolean bFld=true;
    public static short sFld=7094;
    public static int iArrFld[]=new int[N];
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -15919);
        FuzzerUtils.init(Test.byArrFld, (byte)-49);
    }

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i4) {

        float f=-2.992F;
        int i5=7, i6=-2, i7=45012, i8=54, i9=184, iArr1[]=new int[N];
        long l=6858224642907425488L;
        short s=-15533;

        FuzzerUtils.init(iArr1, 54392);

        iArr1 = Test.iArrFld;
        Test.byFld -= (byte)f;
        for (i5 = 3; i5 < 194; ++i5) {
            for (l = i5; l < 8; l++) {
                for (i8 = 1; i8 < 1; ++i8) {
                    i9 += (i8 * l);
                    i4 += -4;
                    if (Test.bFld) {
                        Test.instanceCount = i9;
                        Test.instanceCount >>= Test.byFld;
                    } else {
                        i7 += i8;
                    }
                    i7 -= s;
                    i9 -= (int)f;
                    i7 = (int)l;
                }
                Test.iArrFld[(int)(l)] += i4;
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f) + i5 + i6 + l + i7 + i8 + i9 + s + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i3=-14, i10=1, i11=-26521, i12=-10;
        double d1=37.126748;
        float f1=-38.344F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9549L);

        i3 = (i3--);
        i3 -= (int)1.75557;
        i3 = (i3--);
        vMeth(i3);
        for (i10 = 270; i10 > 16; i10--) {
            i12 = 1;
            while (++i12 < 6) {
                Test.byArrFld[i12] |= (byte)Test.instanceCount;
                i3 |= i10;
                Test.iArrFld[i10 - 1] = 163;
                Test.iArrFld[i10 + 1] -= i3;
                Test.sFld >>= (short)-12;
                Test.iArrFld[i10 + 1] -= (int)d1;
                try {
                    i11 = (i12 / i11);
                    i3 = (-47 / i12);
                    i11 = (i10 % 4594);
                } catch (ArithmeticException a_e) {}
                f1 *= i11;
                lArr = lArr;
            }
        }
        long meth_res = i3 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth() {

        int i2=161, i13=246, i14=171, i15=-4, i16=-6, i17=-59054, i18=5;
        float f2=110.411F;
        double d2=0.98018;

        Test.instanceCount *= (((i2 + -16381) - (Test.instanceCount * i2)) - iMeth());
        f2 -= (float)d2;
        if (Test.bFld) {
            i2 -= Test.sFld;
        } else if (Test.bFld) {
            for (i13 = 10; i13 < 350; ++i13) {
                for (i15 = 1; i15 < 5; i15 += 2) {
                    for (i17 = 3; i17 > 1; i17--) {
                        i2 = i2;
                        f2 = i15;
                        i16 *= (int)f2;
                        i18 &= -107;
                        Test.instanceCount -= -190;
                        Test.bFld = Test.bFld;
                        i14 += Test.byFld;
                    }
                    f2 += Test.sFld;
                }
            }
        } else {
            f2 += f2;
        }
        long meth_res = i2 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + i17 + i18;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-84, i1=41886, i19=0, i20=-13, i21=-47494, i22=-9053, i23=-7, iArr[]=new int[N];
        double d=2.52888;
        float f3=-124.708F;

        FuzzerUtils.init(iArr, -3);

        i = 1;
        while (++i < 225) {
            i1 = (int)(-(iArr[i + 1] + (d + Test.instanceCount)));
            Test.instanceCount -= (long)(((i1 >>> lFld) - (i1 * lFld)) + (fMeth() - i));
            i1 = 8;
            for (i19 = 112; i19 > 2; i19--) {
                for (i21 = 1; 2 > i21; i21++) {
                    Test.instanceCount += Test.instanceCount;
                }
                for (f3 = i19; f3 < 2; f3++) {
                    Test.byFld += (byte)(-117 + (f3 * f3));
                    lFld += (long)f3;
                    if (Test.bFld) {
                        Test.instanceCount -= Test.instanceCount;
                        i20 = i21;
                        i22 = i20;
                    } else {
                        i23 *= i23;
                        switch ((i % 1) + 91) {
                        case 91:
                            if (true) break;
                            i23 >>= i19;
                            switch ((i % 5) + 71) {
                            case 71:
                                d -= i20;
                                i1 += (int)lFld;
                                i23 += Test.sFld;
                                break;
                            case 72:
                                i1 += (int)(-63578L + (f3 * f3));
                                Test.instanceCount = lFld;
                                Test.iArrFld[i19] = i20;
                            case 73:
                                i20 -= 92;
                                break;
                            case 74:
                                i22 = i19;
                                i23 *= i;
                                i23 = (int)d;
                                break;
                            case 75:
                                i20 <<= (int)-622601925L;
                                break;
                            default:
                                i22 = 32682;
                            }
                        }
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
