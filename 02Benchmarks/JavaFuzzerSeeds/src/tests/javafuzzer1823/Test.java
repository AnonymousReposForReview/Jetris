package tests.javafuzzer1823;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:56:35 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-42948L;
    public static boolean bFld=false;
    public static volatile double dFld=0.96151;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
        FuzzerUtils.init(Test.fArrFld, 0.542F);
        FuzzerUtils.init(Test.lArrFld, 8967342732799321702L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i10=2, i11=-6, i12=129, i13=-43, i14=-162, i15=14, i16=140, i17=-21396;
        short s=15761;
        float f=-2.135F, f1=12.484F;
        byte by=-46, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)19);

        byArr[(i10 >>> 1) % N] = (byte)s;
        for (f = 3; f < 220; f++) {
            try {
                i10 = (Test.iArrFld[(int)(f - 1)] % -1515333106);
                i10 = (i10 / i10);
                i11 = (5742 / i11);
            } catch (ArithmeticException a_e) {}
        }
        for (i12 = 4; 166 > i12; ++i12) {
            s += (short)(((i12 * i11) + Test.instanceCount) - i11);
            Test.instanceCount += (6273258115093140299L + (i12 * i12));
            for (i14 = 1; i14 < 10; i14++) {
                by >>= (byte)i12;
                i13 >>>= i15;
                i15 *= i14;
                f1 *= -63316;
                i11 = i10;
            }
            for (i16 = 1; 10 > i16; ++i16) {
                i13 = (int)Test.instanceCount;
            }
            Test.iArrFld[i12] += (int)Test.instanceCount;
        }
        long meth_res = i10 + s + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + by + Float.floatToIntBits(f1)
            + i16 + i17 + FuzzerUtils.checkSum(byArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1(int i6) {

        int i7=0, i8=-23, i9=-4, i18=197, i19=-18234, i20=-12313;
        long l=2988917516L;
        double d=-1.50128;

        i7 = 1;
        while (++i7 < 332) {
            for (i8 = i7; i8 < 5; ++i8) {
                i6 *= Test.iArrFld[i8 + 1];
                i6 = (int)(-3903462666L - ((i6 + Test.instanceCount) + dMeth()));
                i6 = i9;
                i6 = i18;
                for (i19 = 1; i19 < 1; i19 += 3) {
                    l += i19;
                    i20 -= (int)d;
                    i6 -= (int)1.129001;
                    Test.fArrFld[i19] *= -44;
                    i6 = (int)Test.instanceCount;
                    Test.instanceCount += -215L;
                    Test.iArrFld[i7 + 1] <<= 58;
                    Test.lArrFld[i7 - 1] += i20;
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i18 + i19 + i20 + l + Double.doubleToLongBits(d);
    }

    public static void vMeth() {

        int i=-14643, i1=114, i2=3, i3=-3, i4=51367, i5=-237, i21=-4, i22=-4;
        byte by1=-117;
        double d1=-53.127293;

        for (i = 143; i > 4; i -= 3) {
            for (i2 = 33; 2 < i2; i2--) {
                for (i4 = i; i4 < 2; ++i4) {
                    vMeth1(4);
                    i3 = i3;
                    if (Test.bFld) break;
                }
                i1 ^= -171;
                i5 += i2;
                if (Test.bFld) continue;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.iArrFld[i2 + 1] = i3;
                    i22 -= i5;
                    i5 = by1;
                    Test.iArrFld[i2] *= (int)d1;
                    Test.instanceCount = i1;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i21 + i22 + by1 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i23=-11;

        vMeth();
        i23 += (int)Test.dFld;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
