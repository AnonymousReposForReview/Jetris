package tests.javafuzzer1653;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:47:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-137L;
    public static int iFld=52071;

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l, int i1) {

        int i2=-6, i3=114, i4=-14, i5=-12, iArr1[]=new int[N];
        short s=-4696, sArr[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(sArr, (short)-3203);
        FuzzerUtils.init(iArr1, -9);
        FuzzerUtils.init(lArr1, -156L);

        sArr[(i1 >>> 1) % N] = (short)i1;
        for (i2 = 8; 177 > i2; ++i2) {
            i1 = -49159;
            iArr1[i2 + 1] *= i2;
        }
        i4 = 368;
        while (--i4 > 0) {
            i1 <<= i4;
            Test.instanceCount += 50661;
            i3 += i3;
        }
        i1 |= 30016;
        i1 = i2;
        s -= s;
        i5 = 365;
        while ((i5 -= 3) > 0) {
            iArr1 = iArr1;
        }
        iArr1[(Test.iFld >>> 1) % N] = (int)Test.instanceCount;
        lArr1[(i5 >>> 1) % N] *= -29L;
        vMeth_check_sum += l + i1 + i2 + i3 + i4 + s + i5 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth() {

        int i6=5, i7=-3, i8=-12, i9=250, i10=-8, i11=15478, iArr2[]=new int[N];
        double d=102.93676;
        float f1=-25.237F, fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 12);
        FuzzerUtils.init(fArr, 50.194F);

        vMeth(Test.instanceCount, 193);
        for (i6 = 8; i6 < 313; ++i6) {
            for (i8 = 1; i8 < 5; ++i8) {
                iArr2 = iArr2;
                for (i10 = 1; i10 < 2; i10++) {
                    switch (((i10 >>> 1) % 2) + 98) {
                    case 98:
                        i9 = i8;
                        switch (((12 >>> 1) % 1) + 107) {
                        case 107:
                            i9 = i11;
                            d -= i11;
                            break;
                        default:
                            fArr[i8 - 1] *= -53259;
                            i9 += i10;
                            i11 = -13;
                            i7 <<= i10;
                        }
                        i9 += (5 + (i10 * i10));
                    case 99:
                        Test.iFld -= (int)f1;
                        break;
                    }
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i) {

        float f=40.592F;
        long l1=-86L, l2=-9145890442020868036L, lArr[]=new long[N];
        int i12=10, i13=211, i14=55120, i15=-5111, iArr[]=new int[N];
        byte by=92;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 3631);
        FuzzerUtils.init(lArr, 4262498380971778455L);
        FuzzerUtils.init(dArr, 0.30396);

        f *= (((8 >> (iArr[(i >>> 1) % N]--)) + (i + -2666364253131684575L)) + (lArr[(i >>> 1) % N] - iMeth()));
        for (l1 = 3; 205 > l1; l1++) {
            iArr[(int)(l1 - 1)] += i;
            Test.iFld = (int)l1;
            for (i13 = 1; i13 < 8; i13++) {
                for (l2 = 1; 2 > l2; ++l2) {
                    switch ((((i12 >>> 1) % 2) * 5) + 71) {
                    case 77:
                        by += (byte)i15;
                        f = (float)-88.129003;
                        iArr[i13] = (int)1065633290L;
                        Test.instanceCount += (long)(34.35F + (l2 * l2));
                        break;
                    case 79:
                        Test.instanceCount <<= l2;
                        break;
                    default:
                        dArr[i13] = 6;
                    }
                    i14 += (int)(l2 * l2);
                    i = 116;
                }
            }
        }
        long meth_res = i + Float.floatToIntBits(f) + l1 + i12 + i13 + i14 + l2 + i15 + by + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=-14, i17=13, i18=241;
        double d1=-63.53351;

        dMeth(Test.iFld);
        Test.iFld += 1;
        i16 = 1;
        while (++i16 < 250) {
            Test.iFld = Test.iFld;
            for (i17 = i16; i17 < 101; ++i17) {
                Test.instanceCount <<= i16;
                Test.instanceCount = i18;
                i18 -= (int)d1;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
