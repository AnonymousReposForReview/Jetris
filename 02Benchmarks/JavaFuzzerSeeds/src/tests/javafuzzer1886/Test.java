package tests.javafuzzer1886;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:22:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-62440L;
    public static volatile double dFld=-92.80606;
    public static float fFld=-2.278F;
    public static boolean bFld=false;
    public static byte byFld=-25;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1414410558L);
        FuzzerUtils.init(Test.iArrFld, 10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth1(boolean b, int i2) {

        short s=5608;
        float f1=-2.544F;

        s -= (short)(-((++f1) * (-Math.min(i2, i2))));
        vMeth1_check_sum += (b ? 1 : 0) + i2 + s + Float.floatToIntBits(f1);
    }

    public static long lMeth(int i5) {

        int i6=241, i7=-1, i8=-14, i9=-2529, iArr[]=new int[N];
        long l1=25550L;
        float f2=1.515F;
        boolean b1=true;

        FuzzerUtils.init(iArr, 134);

        for (i6 = 336; 3 < i6; --i6) {
            iArr[i6 - 1] += i5;
            i8 = 1;
            do {
                for (l1 = 1; 1 > l1; l1++) {
                    i9 = i7;
                    Test.lArrFld[i6 - 1] -= (long)f2;
                    Test.instanceCount ^= i7;
                }
                b1 = b1;
                i9 *= (int)Test.dFld;
                i9 = i6;
                f2 *= i9;
                i7 = i5;
                Test.dFld -= l1;
                i7 >>= (int)l1;
                Test.dFld -= i5;
            } while (++i8 < 5);
        }
        long meth_res = i5 + i6 + i7 + i8 + l1 + i9 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i3, int i4, long l) {

        byte by=116;
        double d=-107.123388;
        int i10=52212, i11=188, i12=45238, i13=229, i14=-7, i15=7;
        short s1=-23073;
        boolean b2=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -70.155F);

        by = (byte)((Math.max(i4, i3) * (l + d)) - lMeth(i3));
        for (i10 = 7; i10 < 138; i10++) {
            for (i12 = 1; i12 < 12; i12++) {
                Test.instanceCount += Test.instanceCount;
                i3 = i12;
                i11 -= 12282;
            }
            if (b2) {
                fArr[i10] = s1;
                if (b2) continue;
                for (i14 = 1; 12 > i14; i14++) {
                    i4 = (int)Test.instanceCount;
                    i3 += (i14 | i14);
                    i4 += (int)Test.fFld;
                    by = (byte)i13;
                    Test.fFld += (i14 * i14);
                }
            } else {
                Test.iArrFld[i10] += i13;
            }
        }
        long meth_res = i3 + i4 + l + by + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + s1 + (b2 ? 1 : 0) + i14
            + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f) {

        int i16=11, i17=-253, i18=0;
        byte by1=90;

        vMeth1(iMeth(i16, i16, Test.instanceCount) != Test.instanceCount, i16);
        i16 = i16;
        Test.iArrFld = Test.iArrFld;
        Test.iArrFld[(51188 >>> 1) % N] = i16;
        i16 *= i16;
        by1 >>= (byte)i16;
        Test.bFld = Test.bFld;
        Test.instanceCount >>>= i16;
        Test.iArrFld[(i16 >>> 1) % N] -= -8;
        for (i17 = 10; i17 < 332; i17++) {
            i16 = (int)-2.362F;
            i18 >>= i16;
            by1 += (byte)-10;
            i16 += i18;
        }
        i16 = i18;
        vMeth_check_sum += Float.floatToIntBits(f) + i16 + by1 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i=7, i1=9, i19=-37, i20=-27016, i21=0, i22=-6, i23=7, i24=-36096, i25=168, i26=51334, i27=34, i28=-13039,
            i29=29;
        float f3=-21.502F;

        for (i = 11; i < 217; i += 2) {
            vMeth(Test.fFld);
            for (i19 = 7; i19 < 243; i19++) {
                Test.lArrFld[i - 1] -= (long)Test.dFld;
            }
            if (true) continue;
            switch ((i % 7) + 101) {
            case 101:
                i21 = 1;
                while (++i21 < 243) {
                    Test.fFld *= Test.instanceCount;
                    Test.instanceCount += (-4 + (i21 * i21));
                    i1 += 50251;
                    for (i22 = 1; i22 < 1; i22 += 2) {
                        i20 = i1;
                    }
                    i23 = i19;
                    Test.dFld = i23;
                    i1 -= i;
                    i20 += i21;
                }
                i1 = (int)249L;
                for (i24 = i; i24 < 243; ++i24) {
                    i25 += (4790 + (i24 * i24));
                    for (i26 = 1; i26 < 1; i26++) {
                        i25 = Test.byFld;
                    }
                    for (i28 = 1; i28 < 1; i28++) {
                        i23 >>= i27;
                        Test.instanceCount = Test.instanceCount;
                        i25 = (int)Test.instanceCount;
                        i29 = i22;
                        Test.instanceCount -= i24;
                        Test.dFld = i28;
                        Test.bFld = Test.bFld;
                        i25 += (((i28 * i1) + i21) - Test.instanceCount);
                    }
                }
                break;
            case 102:
                if (Test.bFld) continue;
            case 103:
            case 104:
                Test.lArrFld[i] = 46;
            case 105:
                Test.instanceCount *= (long)f3;
            case 106:
                Test.instanceCount += i29;
            case 107:
                i20 += i20;
                break;
            default:
                i27 = -14084;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
