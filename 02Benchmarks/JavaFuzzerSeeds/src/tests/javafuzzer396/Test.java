package tests.javafuzzer396;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:16:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-201L;
    public int iFld=46642;
    public short sFld=2045;
    public float fFld=0.806F;
    public static byte byFld=58;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -58);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by1, int i4) {

        double d1=-55.108283;
        int i5=9916, i6=9, i7=168, i8=-7, i9=30776;
        boolean b=false;
        long l=1971L;
        short s=-25941;

        i4 += (int)Test.instanceCount;
        d1 = i4;
        i4 >>= 38777;
        i4 = (int)d1;
        for (i5 = 224; i5 > 4; i5--) {
            i4 *= (int)-3223339423174378661L;
            if (b) break;
            i4 >>>= (int)Test.instanceCount;
            Test.iArrFld[i5 - 1] -= -79;
            Test.iArrFld[i5 + 1] <<= i5;
            for (i7 = 7; i7 > i5; i7 -= 3) {
                for (l = i7; l < 1; ++l) {
                    i6 = s;
                    s += (short)-227;
                    s -= (short)i6;
                }
            }
        }
        vMeth2_check_sum += by1 + i4 + Double.doubleToLongBits(d1) + i5 + i6 + (b ? 1 : 0) + i7 + i8 + l + i9 + s;
    }

    public static void vMeth1(int i2) {

        int i3=-17495;
        byte by=-38;

        i2 = 11;
        i3 = 1;
        while (++i3 < 229) {
            Test.instanceCount += (i3 + by);
        }
        vMeth2(by, 23);
        vMeth1_check_sum += i2 + i3 + by;
    }

    public static void vMeth(int i, int i1) {

        double d=0.88981;
        float f=-86.120F;

        i += (int)(d++);
        i1 = i;
        vMeth1(-80);
        i1 = (int)f;
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f);
    }

    public void mainTest(String[] strArr1) {

        int i10=6, i11=-13, i12=-7, i13=22118, i14=24540, i15=245, i16=-128, i17=-24198;
        double d2=2.64618, dArr[]=new double[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(dArr, 0.57232);
        FuzzerUtils.init(fArr, 0.831F);

        vMeth(i10, i10);
        for (i11 = 14; i11 < 249; i11 += 3) {
            for (i13 = 321; i13 > 13; --i13) {
                byte by2=89;
                by2 += (byte)i11;
            }
            i15 = 321;
            while ((i15 -= 3) > 0) {
                i12 += 4;
                i12 <<= (int)Test.instanceCount;
                d2 -= i10;
                dArr[i11] -= d2;
                i12 *= 2;
                fArr[i15][i15 - 1] += iFld;
                i12 = i13;
                switch ((i15 % 7) + 107) {
                case 107:
                    i10 -= i12;
                case 108:
                    lArrFld[i15 - 1] /= (i11 | 1);
                    i10 = i11;
                    break;
                case 109:
                    Test.iArrFld[i11 - 1] -= i13;
                    Test.instanceCount <<= i10;
                    i10 *= sFld;
                    Test.instanceCount += Test.instanceCount;
                    break;
                case 110:
                    i14 = i12;
                    break;
                case 111:
                    i14 *= -83;
                    break;
                case 112:
                    Test.instanceCount += (((i15 * i12) + i13) - sFld);
                    break;
                case 113:
                    i14 = i11;
                    fFld %= (Test.byFld | 1);
                    break;
                default:
                    i14 &= i12;
                    Test.iArrFld[i15 - 1] -= Test.byFld;
                }
                for (i16 = 1; i16 < 3; i16++) {
                    fFld = Test.instanceCount;
                    d2 -= -8499;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
