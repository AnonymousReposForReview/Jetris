package tests.javafuzzer907;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:30:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-39477L;
    public static short sFld=20365;
    public static double dFld=74.11923;
    public static byte byFld=14;
    public float fFld=85.964F;
    public volatile boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static volatile byte byArrFld[]=new byte[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1006965232L);
        FuzzerUtils.init(Test.byArrFld, (byte)70);
        FuzzerUtils.init(Test.iArrFld, -50256);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l, long l1, int i8) {

        int i9=-50178, i10=3, i11=13299, iArr[][]=new int[N][N];
        float f=2.335F;
        long l2=11L;
        boolean b=true;

        FuzzerUtils.init(iArr, -27050);

        i8 += Test.sFld;
        iArr[(-15622 >>> 1) % N][(-12 >>> 1) % N] += (int)Test.dFld;
        for (i9 = 5; i9 < 320; ++i9) {
            i8 <<= i8;
        }
        Test.byFld <<= (byte)130;
        i10 += (int)f;
        i11 = 1;
        while (++i11 < 276) {
            l = i9;
        }
        if (b) {
            l2 = 1;
            while (++l2 < 133) {
                Test.lArrFld = FuzzerUtils.long1array(N, (long)-53L);
                Test.instanceCount = (long)Test.dFld;
            }
            i10 -= (int)l2;
        } else {
            iArr[(58846 >>> 1) % N][(i9 >>> 1) % N] = Test.byFld;
            f -= Test.instanceCount;
        }
        vMeth_check_sum += l + l1 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + l2 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth() {

        int i5=132, i6=-178, i7=28025, i12=-68, i13=2, i14=209, i15=-42749, i16=-6, iArr1[]=new int[N];
        float f1=100.423F;

        FuzzerUtils.init(iArr1, 95);

        switch (((((i5++) >>> 1) % 8) * 5) + 127) {
        case 159:
        case 160:
            for (i6 = 16; i6 < 370; ++i6) {
                vMeth(Test.instanceCount, Test.instanceCount, i5);
            }
            break;
        case 156:
            i12 = 1;
            do {
                f1 += i12;
                for (i13 = 1; i13 < 8; ++i13) {
                    for (i15 = i13; i15 < 2; i15++) {
                        f1 = i5;
                        i16 = (int)f1;
                    }
                    Test.instanceCount += i12;
                    iArr1[i13 - 1] = i16;
                    iArr1 = iArr1;
                    i7 = (int)Test.dFld;
                    i5 = (int)f1;
                    i5 -= (int)Test.instanceCount;
                }
            } while (++i12 < 202);
        case 147:
            Test.instanceCount >>= -12;
            break;
        case 130:
            i5 += (int)Test.instanceCount;
            break;
        case 155:
            i5 = i7;
            break;
        case 152:
            i7 *= (int)f1;
            break;
        case 153:
            i7 += (int)Test.instanceCount;
            break;
        }
        long meth_res = i5 + i6 + i7 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i2) {

        int i3=-6, i4=-171, i17=-5, i18=-176, i19=82, i20=-1, iArr2[]=new int[N];
        boolean b1=false;
        float f2=2.231F, fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -62);
        FuzzerUtils.init(fArr, 28.832F);

        for (i3 = 235; 9 < i3; i3--) {
            Test.sFld -= (short)fMeth();
            switch (((i3 >>> 1) % 3) + 105) {
            case 105:
                b1 = b1;
                break;
            case 106:
                iArr2[i3 - 1] -= i4;
                break;
            case 107:
                i17 = 7;
                while (--i17 > 0) {
                    Test.instanceCount = 5645294990879764229L;
                    switch ((i3 % 2) + 36) {
                    case 36:
                        iArr2[i17 - 1] *= i4;
                        fArr[i3 + 1] -= i18;
                        i4 = (int)f2;
                        for (i19 = 1; i19 < 1; i19++) {
                            i18 &= i20;
                            i4 *= i2;
                            i18 += i3;
                        }
                        break;
                    case 37:
                        Test.byArrFld[i3 - 1] >>= (byte)i2;
                        break;
                    default:
                        i18 |= i2;
                    }
                }
            default:
                i2 = (int)Test.instanceCount;
            }
        }
        long meth_res = i2 + i3 + i4 + (b1 ? 1 : 0) + i17 + i18 + Float.floatToIntBits(f2) + i19 + i20 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=174, i1=-49, i21=-65435, i22=0, i23=35311, i24=11174, i25=-50824, i26=-172, i27=11, i28=9;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i = 6; 231 > i; i++) {
            Test.instanceCount &= iMeth(244);
            Test.iArrFld[i - 1][i + 1] -= i;
            Test.byArrFld[i - 1] -= (byte)943868975586633323L;
            i1 = (int)Test.instanceCount;
            fFld += (69.292F + (i * i));
            Test.instanceCount += Test.instanceCount;
            if (bFld) {
                i21 = 1;
                do {
                    boolean b2=false;
                    fFld = i;
                    i1 += 58;
                    b2 = b2;
                    for (i22 = 1; i22 < 1; i22++) {
                        Test.iArrFld[i21][i22] &= (int)Test.instanceCount;
                        if (b2) break;
                        fFld -= -115;
                        bArr[i22 + 1] = b2;
                    }
                    i23 += -41;
                } while (++i21 < 112);
            } else {
                i1 -= (int)Test.instanceCount;
                Test.iArrFld[i - 1][i] *= -171;
            }
        }
        i24 = 1;
        do {
            i23 = (int)1.171F;
            i1 += (i24 * i24);
            for (i25 = 99; i25 > 2; i25--) {
                Test.instanceCount = i21;
                i1 |= i22;
                i23 -= Test.byFld;
                for (i27 = 1; i27 < 2; ++i27) {
                    Test.dFld = Test.byFld;
                    Test.dFld = i28;
                }
            }
        } while (++i24 < 254);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
