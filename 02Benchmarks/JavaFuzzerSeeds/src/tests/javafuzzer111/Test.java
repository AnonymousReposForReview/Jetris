package tests.javafuzzer111;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:26:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-45L;
    public static short sFld=-6763;
    public static volatile int iFld=0;
    public static int iFld1=-1;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -28717);
        FuzzerUtils.init(Test.lArrFld, 6L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i4=11, i5=57, i6=155;
        float f1=-112.822F;
        boolean b=true;
        double d=1.123712;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1185007887L);

        i4 -= i4;
        i4 *= i4;
        i4 = 127;
        Test.instanceCount = (long)f1;
        b = b;
        try {
            Test.iArrFld[(i4 >>> 1) % N] -= 118;
            for (i5 = 1; i5 < 242; i5++) {
                i4 += (i5 * i4);
                lArr[i5 - 1] >>= Test.instanceCount;
                Test.iArrFld = Test.iArrFld;
                d = i4;
                i4 = (int)Test.instanceCount;
                Test.iArrFld[i5] >>>= -152;
                Test.instanceCount = 16750;
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i4 += i6;
        }
        finally {
            i4 = -10772;
        }
        long meth_res = i4 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i5 + i6 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i1=1, i2=9, i3=-9381, i8=116, i9=-11830, i10=-254, i11=0;
        boolean b1=false;

        for (i1 = 1; i1 < 131; i1++) {
            i3 = 1;
            do {
                Test.iArrFld[i3 - 1] += (iMeth() - i1);
                for (i8 = 1; i8 > 1; --i8) {
                    if (false) continue;
                    i2 += (int)98L;
                }
                for (i10 = 1; i10 > 1; --i10) {
                    i2 *= i2;
                    switch ((i3 % 2) + 8) {
                    case 8:
                        i11 += i10;
                        b1 = b1;
                        i11 += (i10 * i10);
                        break;
                    case 9:
                        Test.instanceCount -= i3;
                    }
                    Test.instanceCount <<= i1;
                    i9 = i8;
                }
            } while (++i3 < 12);
        }
        vMeth1_check_sum += i1 + i2 + i3 + i8 + i9 + i10 + i11 + (b1 ? 1 : 0);
    }

    public void vMeth(float f) {

        int i=216, i12=-26321, i13=-5, i14=-6;
        byte by=-5;
        boolean b2=false;

        Test.iArrFld[(i >>> 1) % N] = (((i - Test.sFld) - i) - ((i + i) - (i + i)));
        Test.instanceCount = Test.iArrFld[(i >>> 1) % N];
        vMeth1();
        Test.iArrFld[(i >>> 1) % N] *= i;
        for (i12 = 8; 165 > i12; i12++) {
            i14 = 1;
            do {
                i >>= i12;
                if (false) continue;
                Test.lArrFld[i14][i14 + 1] >>>= by;
                f += (i14 * i14);
                i += (((i14 * Test.instanceCount) + i12) - by);
            } while (++i14 < 10);
            i >>= i12;
            if (b2) {
                i += (i12 * i12);
                f -= -154;
            } else {
                Test.instanceCount = Test.instanceCount;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i12 + i13 + i14 + by + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f2=2.1005F;
        int i15=-21819, i16=21054, i17=-4, i18=-8, i19=-2;
        double d1=-19.28789;
        boolean b3=false;

        vMeth(f2);
        Test.iFld = Test.iFld;
        Test.iFld -= Test.sFld;
        i15 = 1;
        do {
            Test.iFld >>= (int)Test.instanceCount;
            if (b3) {
                for (i16 = 70; i16 > 3; i16 -= 3) {
                    Test.iFld *= Test.iFld;
                    Test.sFld -= (short)Test.instanceCount;
                    Test.iArrFld[i16 - 1] = (int)f2;
                    f2 = 136;
                    Test.iArrFld[i15 + 1] += (int)f2;
                    switch (((i15 % 9) * 5) + 69) {
                    case 73:
                        i18 = 1;
                        do {
                            if (false) break;
                        } while (++i18 < 4);
                        switch (((i18 >>> 1) % 2) + 3) {
                        case 3:
                            i17 += (int)37178L;
                            break;
                        case 4:
                            Test.iArrFld[i16 - 1] = i17;
                            for (d1 = 1; d1 < 4; d1++) {
                                Test.instanceCount = i17;
                                Test.iFld = i15;
                                Test.instanceCount -= i17;
                                Test.iArrFld[i15 + 1] += Test.iFld1;
                                Test.instanceCount += (9615 + (d1 * d1));
                                i19 += (int)(d1 + Test.iFld1);
                            }
                            Test.iFld = i18;
                            i17 += 21790;
                            break;
                        default:
                            Test.iArrFld[i16 + 1] -= Test.iFld;
                        }
                        break;
                    case 70:
                        Test.sFld -= (short)Test.iFld1;
                        Test.iArrFld[i15] -= Test.iFld;
                        break;
                    case 82:
                        i19 = (int)Test.instanceCount;
                        break;
                    case 84:
                        f2 += 21324;
                        break;
                    case 109:
                        Test.iFld += (i16 * i18);
                        break;
                    case 110:
                        Test.instanceCount = i15;
                    case 93:
                        Test.iFld1 = Test.iFld;
                        break;
                    case 81:
                        Test.iArrFld[i16] += (int)Test.instanceCount;
                        break;
                    case 83:
                        Test.iFld = 207;
                        break;
                    default:
                        f2 /= (i17 | 1);
                    }
                }
            } else {
                i17 += -2184;
            }
        } while (++i15 < 358);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
