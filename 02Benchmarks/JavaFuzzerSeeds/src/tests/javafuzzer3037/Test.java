package tests.javafuzzer3037;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:04:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-100L;
    public static int iFld=27149;
    public static boolean bFld=true;
    public static byte byFld=122;
    public static short sFld=-28848;
    public float fFld=-82.175F;
    public static volatile int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 49);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth(long l, byte by) {

        int i1=-14, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -9);

        iArr[(i1 >>> 1) % N] &= (int)(i1 * (i1 - (i1 - Test.instanceCount)));
        vMeth_check_sum += l + by + i1 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i2, float f, int i3) {

        int i4=-213, i5=3188, i6=-3, i7=46839, i8=118, i9=29668, i10=13, i11=11, i12=-44, iArr1[]=new int[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, -1152);

        Test.instanceCount -= -29;
        for (i4 = 9; i4 < 256; ++i4) {
            for (i6 = 1; i6 < 7; ++i6) {
                Test.iFld >>>= -64;
                bArr[i6] = Test.bFld;
                for (i8 = i4; i8 < 2; i8 += 3) {
                    Test.instanceCount |= i2;
                    i7 = i2;
                    i7 = i3;
                    i2 <<= Test.byFld;
                    i9 ^= Test.iFld;
                }
                for (i10 = 1; i10 < 2; ++i10) {
                    i12 = i4;
                }
            }
            iArr1[i4] >>= i12;
            Test.instanceCount = i8;
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1(long l1) {

        short s=31275;
        float f1=-2.925F;
        int i13=16007, i14=3054, i15=3, iArr2[]=new int[N];
        double d=0.39611;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, -164);
        FuzzerUtils.init(lArr, 2604057462338744342L);

        Test.iFld >>= (-(Short.reverseBytes(s) + iMeth(-11, 0.444F, Test.iFld)));
        for (f1 = 1; f1 < 232; ++f1) {
            for (i14 = 1; i14 < 7; i14++) {
                i15 = (int)f1;
                iArr2[i14 + 1] *= i15;
                d = i13;
                d = f1;
                i13 = i13;
                iArr2[i14 + 1] = i14;
                d = f1;
            }
            l1 = i15;
            i13 = i15;
            lArr[(int)(f1 - 1)] = (long)d;
            Test.instanceCount >>= i15;
            i15 *= i15;
        }
        long meth_res = l1 + s + Float.floatToIntBits(f1) + i13 + i14 + i15 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth() {

        int i16=27742, i17=11, i18=-17563, i19=103, i20=-14, i21=-21;
        double d1=0.65471;
        float f2=-26.87F;

        vMeth(lMeth1(Test.instanceCount), Test.byFld);
        Test.iFld |= Test.iFld;
        for (i16 = 9; i16 < 156; i16++) {
            i18 = 1;
            do {
                i19 = 1;
                while (++i19 < 1) {
                    i17 *= -9209;
                    Test.sFld += (short)i19;
                    if (Test.iFld != 0) {
                    }
                    d1 /= (Test.instanceCount | 1);
                    if (i16 != 0) {
                    }
                }
                i17 >>= Test.iFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    Test.instanceCount = i18;
                    Test.iArrFld[i18 + 1] *= Test.iFld;
                    f2 = Test.instanceCount;
                }
            } while (++i18 < 11);
        }
        long meth_res = i16 + i17 + i18 + i19 + Double.doubleToLongBits(d1) + i20 + i21 + Float.floatToIntBits(f2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=214, i22=-1644, i23=0, i24=20532, i25=-2570, i26=232, i27=13386, i28=-1, i29=-11;
        float f3=0.382F;
        double d2=122.125428;

        Test.instanceCount <<= i;
        vMeth(((i + -33635) * (++Test.instanceCount)) + (lMeth() + Test.iFld), Test.byFld);
        f3 += Test.byFld;
        Test.instanceCount -= i;
        lArrFld[(i >>> 1) % N] *= (long)d2;
        Test.iFld += (int)Test.instanceCount;
        Test.iFld *= Test.sFld;
        i22 = 1;
        while (++i22 < 195) {
            d2 -= fFld;
            Test.instanceCount -= i;
            Test.iArrFld[i22 + 1] += Test.iFld;
            i -= i;
            if (Test.bFld) {
                i *= -51559;
                for (i23 = 129; i23 > 4; --i23) {
                    i24 += (((i23 * Test.sFld) + i23) - i22);
                    for (i25 = 1; i25 < 2; i25++) {
                        i += Test.iFld;
                        Test.byFld = (byte)i26;
                        Test.iArrFld[i23] += i;
                        i24 = i;
                        i24 = i;
                        d2 = Test.instanceCount;
                        if (Test.bFld) break;
                    }
                    for (i27 = 1; i27 < 2; i27++) {
                        i |= (int)Test.instanceCount;
                        i24 += (((i27 * Test.instanceCount) + i24) - i27);
                    }
                    i29 = 1;
                    do {
                        Test.byFld <<= (byte)Test.instanceCount;
                        i24 += (int)Test.instanceCount;
                    } while ((i29 += 3) < 2);
                }
            } else {
                Test.iArrFld[i22 - 1] = i23;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
