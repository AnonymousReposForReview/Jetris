package tests.javafuzzer1659;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:58:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static double dFld=0.81371;
    public static volatile byte byFld=112;
    public static short sFld=16876;
    public static volatile int iFld=-171;
    public static float fFld=0.820F;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -29549);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by, int i6, int i7) {

        int i8=168, i9=-23, i10=19000, i11=14, i12=-3;
        boolean b=false;

        for (i8 = 7; 322 > i8; ++i8) {
            for (i10 = i8; i10 < 5; i10++) {
                i7 += i10;
                i12 = 1;
                do {
                    short s=-31544;
                    float f1=0.18F;
                    by -= (byte)s;
                    f1 += i6;
                    i6 = 44764;
                    if (false) break;
                    i11 *= i11;
                    i6 *= i8;
                    i11 = (int)f1;
                    if (b) {
                        by = (byte)i12;
                        Test.instanceCount -= i11;
                        Test.instanceCount ^= i8;
                    } else {
                        i9 += (int)Test.instanceCount;
                    }
                } while (++i12 < 1);
            }
        }
        long meth_res = by + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i4=-31283, i5=111, i13=-1, i14=3, i15=37776, i16=227, i17=55709, i18=-49, iArr[]=new int[N];
        float f=-57.618F;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4101946746L);
        FuzzerUtils.init(iArr, -4);

        i4 = 1;
        do {
            lArr[i4] += (long)((Test.dFld + Test.instanceCount) + ((f++) + (iArr[i4 - 1]--)));
            i5 += i4;
        } while (++i4 < 242);
        iArr[(-57 >>> 1) % N] += (iMeth(Test.byFld, i5, i4) * 78);
        for (i13 = 4; 227 > i13; ++i13) {
            i14 *= i13;
            for (i15 = 1; 7 > i15; i15++) {
                try {
                    iArr[i15 + 1] = (i16 / i15);
                    i14 = (2123574372 % i4);
                    i14 = (i15 / i15);
                } catch (ArithmeticException a_e) {}
                for (i17 = 1; i17 < 2; i17++) {
                    Test.byFld -= (byte)Test.instanceCount;
                    i16 <<= 163;
                }
                i18 <<= Test.byFld;
                if (b1) {
                    b1 = true;
                    i16 = i15;
                } else if (b1) {
                    i16 += i15;
                } else {
                    if (b1) continue;
                }
            }
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + i5 + i13 + i14 + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, int i1) {

        int i2=-4541, i3=-10, i19=-4, i20=48642, i21=1;

        for (i2 = 11; i2 < 396; i2++) {
            vMeth1();
            Test.iArrFld[i2] = (int)Test.instanceCount;
            i = (int)Test.instanceCount;
            i += (-2 + (i2 * i2));
            i19 = 4;
            while (--i19 > 0) {
                i3 += (i19 * i19);
                i += Test.sFld;
                i = Test.iFld;
                Test.fFld += i1;
                i1 = (int)-2402894500L;
                Test.iArrFld[i19] += (int)Test.fFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    if (i20 != 0) {
                        vMeth_check_sum += i + i1 + i2 + i3 + i19 + i20 + i21;
                        return;
                    }
                    i1 -= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i19 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        boolean b2=true;

        vMeth(-9, Test.iFld);
        Test.iFld = Test.iFld;
        b2 = b2;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
