package tests.javafuzzer1731;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:38:42 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2073439957713862410L;
    public volatile int iFld=-10;
    public volatile double dFld=-2.81350;
    public static int iFld1=10;
    public static double dFld1=-28.100282;
    public static byte byFld=-98;
    public static int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 216);
        FuzzerUtils.init(Test.dArrFld, 1.49834);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=82, i5=219;
        double d=-21.128119;

        Test.iFld1 <<= 39965;
        for (i4 = 11; i4 < 251; ++i4) {
            float f1=-87.231F;
            Test.instanceCount += (long)d;
            f1 -= Test.iFld1;
        }
        Test.iFld1 += (int)1.30980;
        vMeth1_check_sum += i4 + i5 + Double.doubleToLongBits(d);
    }

    public static short sMeth(long l) {

        int i3=189, i6=12;
        boolean b=false;
        float f2=58.908F;

        i3 = 1;
        while ((i3 += 2) < 242) {
            vMeth1();
            l = Test.instanceCount;
            Test.iFld1 = -213;
        }
        i6 = 201;
        do {
            Test.dFld1 += i6;
            Test.iFld1 -= Test.iFld1;
            Test.dArrFld[i6] *= i6;
            if (b) break;
        } while (--i6 > 0);
        for (int i7 : Test.iArrFld) {
            Test.iFld1 &= i6;
            f2 += -30;
            Test.dArrFld[(Test.iFld1 >>> 1) % N] -= 12;
            Test.iFld1 *= Test.iFld1;
            l += 16048;
        }
        long meth_res = l + i3 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        float f=-2.883F;
        double d1=0.18084;
        int i8=-66, i9=2, i10=-5681;
        boolean b1=true;
        short s=-6388, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-14582);

        f = sArr[(i2 >>> 1) % N];
        i1 -= sMeth(Test.instanceCount);
        Test.iArrFld[(i1 >>> 1) % N] = i2;
        Test.instanceCount += (long)Test.dFld1;
        Test.instanceCount = Test.byFld;
        Test.iFld1 += Test.byFld;
        for (d1 = 5; d1 < 158; d1++) {
            Test.iFld1 += (int)d1;
            for (i9 = 1; 10 > i9; i9++) {
                b1 = b1;
                f = -11;
                Test.instanceCount += (((i9 * f) + f) - s);
                Test.dFld1 *= i2;
                Test.iFld1 = i2;
                i8 += Test.iFld1;
            }
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i8 + i9 + i10 + (b1 ? 1 :
            0) + s + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=57073;

        Test.iArrFld[(iFld >>> 1) % N] >>= (int)((4 % ((iFld + iFld) | 1)) + ((dFld * Test.instanceCount) - (iFld -
            i)));
        vMeth(iFld, 34);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
