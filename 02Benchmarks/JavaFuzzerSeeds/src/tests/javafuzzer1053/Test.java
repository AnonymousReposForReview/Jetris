package tests.javafuzzer1053;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:37:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2892998859L;
    public static float fFld=0.986F;
    public short sFld=-7583;
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        long l1=-1313533903L;
        int i4=-30950, i5=-14, i6=-9473, iArr[][]=new int[N][N];
        float f=0.496F;

        FuzzerUtils.init(iArr, -139);

        for (l1 = 315; 13 < l1; l1 -= 2) {
            i4 <<= i4;
            i4 -= i4;
            f = 1;
            do {
                i4 ^= i4;
                i4 += (int)(((f * i4) + i4) - l);
                i5 = (int)f;
                i4 += (int)f;
                i5 -= i5;
                i5 -= 80;
                i6 = 1;
                while (++i6 < 1) {
                    i5 >>= i6;
                    try {
                        i4 = (iArr[(int)(l1 + 1)][(int)(l1)] % i5);
                        i5 = (i5 % 13199);
                        i5 = (iArr[i6 - 1][i6] / i6);
                    } catch (ArithmeticException a_e) {}
                    i4 &= i4;
                    Test.fFld += l1;
                }
            } while (++f < 10);
        }
        vMeth1_check_sum += l + l1 + i4 + Float.floatToIntBits(f) + i5 + i6 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i7=7, i8=33, i9=14, i10=-51018, i11=249, i12=-6;
        boolean b=false;

        vMeth1(Test.instanceCount);
        for (i7 = 10; i7 < 207; ++i7) {
            for (i9 = 8; 1 < i9; i9 -= 2) {
                i8 += i9;
            }
            i11 = 1;
            do {
                Test.instanceCount += 51453;
                i8 -= i7;
                i8 = i10;
                i10 += (((i11 * i10) + Test.fFld) - Test.fFld);
                if (b) break;
                switch ((((-82 >>> 1) % 5) * 5) + 59) {
                case 83:
                    Test.fFld = (float)-34.84985;
                    Test.instanceCount += (i11 * i11);
                    i10 = i9;
                    b = b;
                    break;
                case 81:
                    Test.instanceCount *= (long)Test.fFld;
                    break;
                case 61:
                    if (i10 != 0) {
                        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12;
                        return;
                    }
                    break;
                case 63:
                    i10 = i8;
                    break;
                case 79:
                    Test.instanceCount += i12;
                    break;
                }
            } while (++i11 < 8);
        }
        vMeth_check_sum += i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12;
    }

    public int iMeth(int i2, int i3) {

        int i13=-7, i14=-13, i15=150, i16=8;
        byte by=-91;

        vMeth();
        i3 <<= i3;
        for (i13 = 390; 18 < i13; i13 -= 2) {
            Test.instanceCount <<= 1578693293185094863L;
        }
        i2 /= (int)(by | 1);
        i3 = 32779;
        i3 <<= i2;
        for (i15 = 21; i15 < 339; i15++) {
            short s=-23623;
            i3 += (((i15 * i15) + Test.instanceCount) - s);
        }
        Test.fFld -= i13;
        lArrFld[(i14 >>> 1) % N] = i2;
        Test.instanceCount *= i15;
        long meth_res = i2 + i3 + i13 + i14 + by + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-101, i1=-4737, i17=138, i18=-4, i19=119, i20=73, i21=-13667, i22=-199, i23=1, i24=73;
        double d=-99.88683;
        long l2=11L;

        for (i = 10; i < 185; ++i) {
            iMeth(i1, i1);
            Test.fFld = 11937L;
            i1 >>= i1;
            i1 += (int)Test.fFld;
            i1 *= i1;
        }
        Test.fFld = i;
        for (d = 15; d < 356; d++) {
            i1 += (int)d;
        }
        i17 -= i1;
        for (i18 = 4; i18 < 208; ++i18) {
            iArrFld[i18 + 1] += 216;
            i20 = 1;
            do {
                switch ((i20 % 2) + 39) {
                case 39:
                    try {
                        iArrFld[i20 - 1] = (-160 % iArrFld[i20]);
                        i17 = (i20 % -30725);
                        i1 = (i % -28052);
                    } catch (ArithmeticException a_e) {}
                    i17 += (i20 | Test.instanceCount);
                case 40:
                    for (i21 = 1; i21 > 1; --i21) {
                        i19 = i20;
                    }
                    i1 >>= -41848;
                    i1 *= i18;
                    break;
                }
                for (l2 = 1; l2 < 1; l2++) {
                    i1 = 60588;
                    i22 -= i19;
                    i17 += (int)(l2 ^ i19);
                    Test.fFld = 29993L;
                }
                sFld <<= (short)i21;
                i1 += (i20 ^ i19);
            } while (++i20 < 123);
            i24 = 1;
            while (++i24 < 123) {
                iArrFld[i24] *= i20;
                i1 += 3;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
