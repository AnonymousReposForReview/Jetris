package tests.javafuzzer603;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:26:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6861904760631069069L;
    public static boolean bFld=true;
    public static float fFld=68.771F;
    public static int iFld=-221;
    public static volatile float fFld1=-13.889F;
    public static byte byFld=-42;
    public static int iFld1=-6;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
        FuzzerUtils.init(Test.dArrFld, 69.81242);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d1, int i9, int i10) {

        double d2=1.1228;
        int i11=24013, i12=228, i13=9, i14=-10;
        float f2=9.902F;
        long l=-30L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 155L);

        for (d2 = 10; d2 < 203; d2++) {
            Test.instanceCount &= 72;
        }
        Test.bFld = Test.bFld;
        f2 = 1;
        do {
            for (l = 1; l < 4; l++) {
                i9 += (int)f2;
                i10 = (int)Test.instanceCount;
                try {
                    Test.iArrFld[(int)(l + 1)] = (650720853 % i11);
                    i11 = (22598 % Test.iArrFld[(int)(f2)]);
                    i11 = (i11 / 668897268);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld[(int)(l + 1)] = -1;
                i9 -= (int)l;
                switch ((int)((l % 2) + 14)) {
                case 14:
                    for (i13 = 1; i13 < 2; ++i13) {
                        Test.instanceCount -= (long)54.611F;
                        Test.bFld = true;
                        lArr[i13] |= i13;
                    }
                    break;
                case 15:
                    i12 -= (int)f2;
                default:
                    i12 = i14;
                }
            }
        } while (++f2 < 384);
        vMeth_check_sum += Double.doubleToLongBits(d1) + i9 + i10 + Double.doubleToLongBits(d2) + i11 +
            Float.floatToIntBits(f2) + l + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i8) {

        double d3=0.86626;
        int i15=83, i16=-5, i17=219;
        byte by=-53;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -1807315049L);

        vMeth(d3, i8, -35815);
        i8 <<= (int)Test.instanceCount;
        lArr1 = lArr1;
        i8 += i8;
        i15 = 1;
        do {
            i8 -= (int)Test.instanceCount;
        } while (++i15 < 275);
        Test.iArrFld[(11 >>> 1) % N] *= (int)Test.fFld;
        for (i16 = 5; i16 < 300; i16++) {
            i17 -= i17;
        }
        i17 = (int)Test.instanceCount;
        Test.fFld = Test.instanceCount;
        i8 = i17;
        Test.instanceCount -= -3;
        i17 >>= by;
        i8 -= by;
        long meth_res = i8 + Double.doubleToLongBits(d3) + i15 + i16 + i17 + by + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i2, int i3, double d) {

        int i4=45535, i5=58556, i6=-5, i7=60, i18=-8, i19=169;
        short s1=-28757;
        byte by1=-96, byArr[]=new byte[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte)-38);

        for (i4 = 3; i4 < 282; ++i4) {
            for (i6 = 1; 6 > i6; ++i6) {
                Test.instanceCount += iMeth(i6);
                i3 *= i2;
                Test.iArrFld[i4] -= i2;
                Test.iArrFld[i6] += i6;
                i3 += i6;
                i7 += (((i6 * i4) + Test.instanceCount) - i2);
                for (i18 = i6; 2 > i18; i18++) {
                    d = i5;
                    Test.dArrFld[i4 + 1] *= s1;
                    switch ((((-58 >>> 1) % 7) * 5) + 90) {
                    case 117:
                        i5 += (i18 * i18);
                        i5 = i4;
                        i3 >>= -32558;
                        break;
                    case 121:
                        Test.instanceCount <<= i5;
                        break;
                    case 91:
                        bArr = bArr;
                    case 97:
                        byArr[i18 - 1] = by1;
                    case 123:
                        Test.bFld = Test.bFld;
                        break;
                    case 104:
                    case 116:
                        if (Test.bFld) break;
                        break;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i18 + i19 + s1 + by1 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(byArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr3) {

        int i20=-218, i21=48774, i22=8, i23=7, i24=-68, i25=1405, i26=-109, i27=0, i28=61331, i29=3, i30=2;
        double d4=92.89398;
        long l1=-3L;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 91.568F);

        dMeth(Test.iFld, Test.iFld, -106.96033);
        Test.instanceCount = (long)Test.fFld;
        for (i20 = 9; i20 < 200; ++i20) {
            Test.iFld = Test.iFld;
        }
        Test.iArrFld[(i21 >>> 1) % N] -= Test.iFld;
        Test.fFld1 += i20;
        Test.iFld -= i21;
        Test.iArrFld[(Test.iFld >>> 1) % N] = (int)d4;
        for (i22 = 15; i22 < 315; ++i22) {
            if (Test.bFld) {
                Test.iArrFld[i22] = (int)d4;
                for (l1 = 84; l1 > 1; l1 -= 3) {
                    i24 += (int)Test.fFld;
                    for (i25 = 1; i25 < 4; i25++) {
                        Test.bFld = Test.bFld;
                        Test.iArrFld[i25 + 1] >>>= 136;
                        Test.iFld += (46635 + (i25 * i25));
                        fArr[i25 + 1][i25] -= i22;
                        i23 += i21;
                        i21 %= (int)1014281089670888207L;
                        i23 = i21;
                        Test.byFld = (byte)i25;
                        i26 += (i25 + l1);
                        Test.iFld += i25;
                    }
                }
                Test.instanceCount = 6;
                for (i27 = 1; 84 > i27; ++i27) {
                    Test.iFld1 = (int)l1;
                    for (i29 = 1; 2 > i29; ++i29) {
                        i23 = (int)Test.instanceCount;
                        i24 -= (int)l1;
                    }
                }
            } else if (true) {
                Test.iFld1 += (109 + (i22 * i22));
            } else {
                i24 += Test.iFld;
            }
        }


    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
