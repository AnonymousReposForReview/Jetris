package tests.javafuzzer816;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:21:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2774753973L;
    public static int iFld=41901;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -9L);
        FuzzerUtils.init(Test.iArrFld, 213);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s) {

        int i3=-59432, i4=-43486, i5=-36210, i6=182, i7=35, i8=-18120, i9=-112, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -18236);

        if (Test.bFld) {
            for (i3 = 250; i3 > 9; i3 -= 3) {
                iArr[i3] >>= (int)Test.instanceCount;
                s += (short)i3;
                Test.instanceCount = (long)2.858F;
                Test.instanceCount += i3;
            }
        } else if (true) {
            iArr[(i3 >>> 1) % N] = i4;
            i5 = 1;
            while (++i5 < 356) {
                Test.instanceCount = s;
                i4 >>= i5;
                for (i6 = i5; i6 < 5; ++i6) {
                    i7 = i5;
                    for (i8 = i5; i8 < 1; ++i8) {
                        i4 += i5;
                        Test.iFld = (int)-10L;
                    }
                }
            }
        }
        vMeth2_check_sum += s + i3 + i4 + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, byte by1, int i2) {

        short s1=-6211;
        int i10=2702, i11=5, i12=39211, i13=55872, i14=-13;
        long l1=-2398447540239628617L;
        float f2=-11.730F;
        double d1=0.76156;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        vMeth2(s1);
        for (i10 = 6; i10 < 171; ++i10) {
            bArr[i10] = Test.bFld;
            Test.lArrFld[i10 + 1] = 26627L;
            try {
                Test.iFld = (Test.iArrFld[(i11 >>> 1) % N] / 7624);
                i2 = (Test.iFld / i2);
                i2 = (i2 % 13040);
            } catch (ArithmeticException a_e) {}
            if (Test.bFld) {
                for (l1 = i10; 10 > l1; ++l1) {
                    f2 += l;
                    for (i13 = 1; i13 < 1; ++i13) {
                        i2 = (int)d1;
                        Test.iArrFld[i13 - 1] -= (int)l;
                        i11 += (i13 + l1);
                        i2 = (int)d1;
                        i11 = i10;
                    }
                    Test.iFld = i11;
                }
            } else if (Test.bFld) {
                if (i14 != 0) {
                    vMeth1_check_sum += l + by1 + i2 + s1 + i10 + i11 + l1 + i12 + Float.floatToIntBits(f2) + i13 + i14
                        + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr);
                    return;
                }
            }
        }
        vMeth1_check_sum += l + by1 + i2 + s1 + i10 + i11 + l1 + i12 + Float.floatToIntBits(f2) + i13 + i14 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(float f, byte by, double d) {

        int i=-73, i1=-32848;
        float f1=117.822F;

        i = 1;
        while (++i < 237) {
            f += (((i * i) + i) - i);
            for (f1 = 1; f1 < 7; f1++) {
                i1 -= (int)(((i1 + 5L) - i) * (-(-Float.intBitsToFloat(i1))));
                vMeth1(Test.instanceCount, by, Test.iFld);
                if (true) {
                    i1 -= Test.iFld;
                    Test.lArrFld[i] *= Test.instanceCount;
                    Test.instanceCount *= Test.instanceCount;
                } else if (Test.bFld) {
                    i1 = -25268;
                    by -= (byte)Test.iFld;
                    f += ((long)f1 | (long)i1);
                    Test.iFld += (int)-81.14349;
                    vMeth_check_sum += Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) + i +
                        Float.floatToIntBits(f1) + i1;
                    return;
                } else if (Test.bFld) {
                    d *= 6294938198330250972L;
                } else {
                    Test.iFld -= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) + i + Float.floatToIntBits(f1) +
            i1;
    }

    public void mainTest(String[] strArr1) {

        float f3=102.627F;
        double d2=121.7992, d3=-2.34008;
        int i15=-48, i16=-29865, i17=38, i18=12, i19=3, i20=-10, i21=196, i22=8, i23=14, i24=-48, i25=-5, i26=13;
        short s2=-19682;

        vMeth(f3, (byte)(126), d2);
        fArrFld[(Test.iFld >>> 1) % N] *= Test.iFld;
        for (i15 = 3; i15 < 152; i15++) {
            for (i17 = 10; i17 < 168; ++i17) {
                i16 = i16;
                Test.iFld <<= (int)Test.instanceCount;
                Test.iArrFld = Test.iArrFld;
            }
        }
        Test.instanceCount = i18;
        if (Test.bFld) {
            d2 = i16;
            Test.iFld += -75;
            Test.iArrFld[(i16 >>> 1) % N] *= 55905;
        } else if (Test.bFld) {
            for (d3 = 357; d3 > 7; d3 -= 2) {
                i19 = i15;
                for (i20 = 1; i20 < 143; ++i20) {
                    i22 = 1;
                    while (++i22 < 2) {
                        i19 = 80;
                        i19 *= i20;
                        i16 = (int)-172L;
                        i16 = i17;
                    }
                    try {
                        Test.iFld = (32811 % Test.iArrFld[i20 + 1]);
                        i21 = (34908 % i15);
                        i16 = (i15 / i17);
                    } catch (ArithmeticException a_e) {}
                    i21 += (int)(-160L + (i20 * i20));
                    i16 = s2;
                    Test.instanceCount -= i17;
                    i19 *= i16;
                }
                Test.instanceCount = i18;
                for (i23 = (int)(d3); 143 > i23; ++i23) {
                    for (i25 = i23; 1 > i25; i25++) {
                        Test.instanceCount *= i26;
                        i26 *= i21;
                    }
                }
            }
        } else {
            Test.lArrFld[(-6 >>> 1) % N] += Test.iFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
