package tests.javafuzzer1506;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:41:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1870555362L;
    public static short sFld=24931;
    public static double dFld=0.79875;
    public static byte byFld=-71;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.929F);
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.lArrFld, 1L);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, float f2) {

        int i3=176, i4=-121, i5=-11, i6=146, i7=0, i8=-4, i9=5, i10=141;
        boolean b1=true;

        for (i3 = 4; i3 < 381; i3++) {
            if (b1) continue;
            i2 <<= Test.sFld;
        }
        Test.fArrFld[(i3 >>> 1) % N] *= 17328;
        Test.sFld -= (short)-18583;
        i2 += (int)Test.instanceCount;
        for (i5 = 1; i5 < 237; ++i5) {
            if (b1) {
                for (i7 = 1; 7 > i7; ++i7) {
                    i8 >>= i8;
                    for (i9 = 2; i9 > 1; i9--) {
                        i8 = i3;
                        Test.iArrFld[i9 - 1] <<= i2;
                        i6 += i2;
                        Test.iArrFld[i5] -= (int)1.45F;
                    }
                }
            } else if (b1) {
                i2 <<= -245;
            } else if (b1) {
                if (b1) break;
            } else {
                if (b1) continue;
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f2) + i3 + i4 + (b1 ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10;
    }

    public static boolean bMeth(int i1, long l, float f1) {

        int i11=-7, i12=28, i13=144, i14=217, i15=13976, i16=-1132;
        double d=-122.124748;
        boolean b2=true;

        try {
            vMeth1(i1, 115.114F);
            for (i11 = 11; 177 > i11; ++i11) {
                i13 = 1;
                do {
                    for (i14 = 1; i14 > i13; i14 -= 2) {
                        i12 *= i13;
                        Test.instanceCount = i11;
                        Test.sFld %= (short)(i11 | 1);
                        f1 *= i1;
                    }
                    i1 -= (int)l;
                    Test.iArrFld[i13 - 1] += i11;
                    Test.instanceCount *= -965530387L;
                    i16 = 1;
                    do {
                        Test.iArrFld = Test.iArrFld;
                        d = l;
                    } while ((i16 -= 3) > 0);
                } while (++i13 < 10);
            }
        }
        catch (NullPointerException exc3) {
            b2 = b2;
        }
        long meth_res = i1 + l + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(d) + (b2 ? 1 : 0);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void vMeth() {

        boolean b=true;
        int i17=-81, i18=-19820, i19=-7, i20=-242, i21=-24907;
        float f3=0.369F;
        long l1=-196L;

        b = ((bMeth(i17, 2722160687L, f3) && b) & b);
        for (i18 = 249; 2 < i18; --i18) {
            Test.dFld = i18;
            i19 = i17;
            for (l1 = 1; l1 < 7; l1++) {
                i21 = 1;
                do {
                    i20 += i21;
                    Test.sFld += (short)(-26976 + (i21 * i21));
                } while (++i21 < 2);
                Test.dFld /= ((long)(Test.dFld) | 1);
                i17 += i20;
                i19 = i21;
                i17 += (int)(((l1 * Test.byFld) + i17) - i21);
                i19 >>= i19;
                i20 = i17;
                i20 += (int)(((l1 * l1) + f3) - i17);
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i17 + Float.floatToIntBits(f3) + i18 + i19 + l1 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i=3, i22=0, i23=5064, i24=11, i25=191, i26=-8;
        float f=44.992F, f4=-1.674F;
        double d1=-2.65942;
        long l2=-1L;

        Test.instanceCount = (i--);
        i -= (int)((Test.instanceCount = i) * ((++Test.instanceCount) - (f - i)));
        vMeth();
        f += i;
        i -= i;
        Test.dFld = i;
        f += i;
        try {
            i >>= -53636;
            i ^= -16052;
            for (d1 = 2; d1 < 130; d1++) {
                for (i23 = 12; 196 > i23; ++i23) {
                    switch (((i24 >>> 1) % 8) + 109) {
                    case 109:
                        Test.instanceCount <<= i22;
                        f4 = 1;
                        do {
                            i += (int)(((f4 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                            i += 65;
                        } while (++f4 < 2);
                    case 110:
                        Test.lArrFld = FuzzerUtils.long1array(N, (long)2564521931L);
                        for (i25 = 1; 2 > i25; ++i25) {
                            Test.dFld += i;
                            Test.lArrFld[(int)(d1 - 1)] *= i22;
                            i26 = i23;
                            Test.byFld >>= (byte)i22;
                            bFld = bFld;
                            Test.instanceCount = 45087;
                            switch ((int)(((d1 % 3) * 5) + 9)) {
                            case 19:
                                Test.iArrFld[(int)(d1 - 1)] -= 35152;
                                i *= 14;
                                Test.iArrFld[i23 - 1] -= i25;
                                i24 += i25;
                                break;
                            case 16:
                                Test.instanceCount += (((i25 * Test.instanceCount) + f) - i26);
                                break;
                            case 20:
                                i26 = -7;
                                break;
                            }
                        }
                        break;
                    case 111:
                        Test.sFld -= (short)i25;
                        break;
                    case 112:
                        Test.lArrFld[i23 - 1] -= i24;
                        break;
                    case 113:
                        l2 = Test.byFld;
                    case 114:
                        f /= -3347955432L;
                        break;
                    case 115:
                        i = i;
                        break;
                    case 116:
                        i = (int)244L;
                    default:
                        Test.instanceCount = Test.instanceCount;
                    }
                }
            }
        }
        catch (NullPointerException exc4) {
            f = i;
        }
        catch (ArithmeticException exc5) {
            Test.instanceCount = 10;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
