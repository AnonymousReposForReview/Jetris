package tests.javafuzzer843;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:53:10 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-137L;
    public double dFld=-114.90958;
    public static float fFld=0.69F;
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 9);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=22901;

        Test.instanceCount = Test.instanceCount;
        i6 = (int)Test.instanceCount;
        i6 >>= 34;
        vMeth1_check_sum += i6;
    }

    public static void vMeth(int i3, int i4, int i5) {

        int i7=-246, i8=161, i9=-110, i10=-241, iArr[]=new int[N];
        float f=-86.425F;
        boolean b1=false;
        double d1=0.15421;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(sArr, (short)4807);

        i4 *= (int)(-Long.reverseBytes(Test.instanceCount++));
        vMeth1();
        for (i7 = 6; i7 < 270; ++i7) {
            i8 &= i3;
            for (i9 = 1; 6 > i9; i9++) {
                i10 *= i4;
                switch ((i7 % 1) + 37) {
                case 37:
                    i10 *= (int)f;
                    switch ((i7 % 7) + 123) {
                    case 123:
                        i8 -= i10;
                        break;
                    case 124:
                        try {
                            iArr[i9 - 1] = (iArr[i7] % i5);
                            i8 = (i9 % i7);
                            i10 = (i10 % 99);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount = -174;
                        b1 = b1;
                        break;
                    case 125:
                        sArr[i7 + 1] = (short)91;
                        f += i8;
                    case 126:
                        i8 += (((i9 * i5) + i8) - i4);
                        break;
                    case 127:
                        iArr[i9 - 1] -= i8;
                        break;
                    case 128:
                        Test.instanceCount -= -6;
                        break;
                    case 129:
                        d1 *= Test.instanceCount;
                        break;
                    }
                    break;
                default:
                    i5 *= (int)111.805F;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + (b1 ? 1 : 0) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public int iMeth(long l) {

        int i1=175, i2=-13, i11=0, i12=1, i13=2, i14=4;
        double d=-26.73311;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i1 = 5; i1 < 370; i1++) {
            if (((++Test.instanceCount) - 26318) != Float.intBitsToFloat(i1)) {
                d = (i2--);
            } else if (bArr[i1 - 1] = (iArrFld[i1 - 1] != i1)) {
                l += i1;
            } else {
                lArrFld = (lArrFld = lArrFld);
                b = (((d + -240748664L) < (i1 & i2)) && b);
                vMeth(i2, i2, i2);
            }
            for (i11 = i1; i11 < 5; i11 += 3) {
                for (i13 = 1; i13 > 1; i13--) {
                    switch ((i1 % 1) + 2) {
                    case 2:
                        iArrFld[i11] += i2;
                        i12 >>= i1;
                        iArrFld = Test.iArrFld1;
                        i2 = (int)Test.instanceCount;
                    }
                    d = i14;
                }
            }
        }
        long meth_res = l + i1 + i2 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-45, i15=-46727, i16=-224, i17=14128, i18=-5, i19=-84, i20=-10312, i21=9;
        float f1=-77.113F;
        long l1=-4294184371L, l2=30793L;
        double d2=2.8435;
        boolean b2=true;

        i %= (int)((-iMeth(Test.instanceCount)) | 1);
        i >>= (int)Test.instanceCount;
        for (f1 = 3; 175 > f1; f1++) {
            for (l1 = 1; 146 > l1; ++l1) {
                lArrFld[(int)(f1)] = i;
                i16 += (int)l1;
                switch ((int)(((l1 % 1) * 5) + 9)) {
                case 12:
                    i15 += (int)(((l1 * i15) + i16) - i);
                    for (i17 = 1; i17 < 2; ++i17) {
                        i18 += 9;
                    }
                    dFld = i15;
                default:
                    i18 >>= (int)161L;
                    Test.fFld = i16;
                }
                d2 += i17;
                Test.instanceCount = i;
                for (i19 = 1; i19 < 2; i19++) {
                    lArrFld = FuzzerUtils.long1array(N, (long)101L);
                    Test.iArrFld1[(int)(f1 + 1)] *= 8835;
                    i15 *= i15;
                    Test.iArrFld1 = FuzzerUtils.int1array(N, (int)-11);
                    Test.instanceCount *= i15;
                    Test.instanceCount = 143;
                }
                i20 *= i19;
                lArrFld[(int)(l1 + 1)] -= i20;
                i18 -= (int)-178L;
                switch ((int)(((l1 % 5) * 5) + 11)) {
                case 28:
                    for (l2 = 1; l2 < 2; l2++) {
                        lArrFld[(int)(l2)] = l2;
                        Test.instanceCount += l2;
                        Test.instanceCount -= l1;
                    }
                    break;
                case 23:
                    b2 = b2;
                    break;
                case 25:
                    i16 *= i20;
                    break;
                case 12:
                case 32:
                    i16 = i16;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
