package tests.javafuzzer929;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:49:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4L;
    public volatile int iFld=-109;
    public static byte byArrFld[]=new byte[N];
    public static float fArrFld[]=new float[N];
    public static float fArrFld1[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)29);
        FuzzerUtils.init(Test.fArrFld, -2.1003F);
        FuzzerUtils.init(Test.fArrFld1, -2.843F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        double d1=-114.18676;
        int i6=-123, i7=6, i8=3738, i9=-64009, iArr2[]=new int[N];
        float f=-2.147F;

        FuzzerUtils.init(iArr2, 20830);

        d1 = i6;
        for (i7 = 7; i7 < 289; ++i7) {
            d1 *= 8;
            iArr2[i7] = i7;
            Test.instanceCount -= (long)d1;
        }
        i9 = 1;
        while (++i9 < 200) {
            iArr2[i9 + 1] -= (int)l;
            i6 += (i9 ^ l);
            l -= Test.instanceCount;
            Test.fArrFld[i9 + 1] -= i9;
            f += i9;
            f = Test.instanceCount;
            Test.fArrFld1 = Test.fArrFld1;
        }
        f += i6;
        i8 = i6;
        vMeth1_check_sum += l + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(double d, int i5) {

        int i10=-216, i11=-217, i12=-219, i13=145, i14=8627, iArr3[]=new int[N];
        float f1=117.187F;
        boolean b=true;

        FuzzerUtils.init(iArr3, -36931);

        vMeth1(Test.instanceCount);
        Test.instanceCount -= Test.instanceCount;
        Test.instanceCount = i5;
        iArr3[(i5 >>> 1) % N] += (int)-167L;
        i5 *= (int)135L;
        for (i10 = 10; i10 < 390; ++i10) {
            iArr3[i10 + 1] = i11;
            for (i12 = 1; i12 < 4; ++i12) {
                Test.instanceCount >>>= Test.instanceCount;
                if (b) {
                    d += i11;
                    for (f1 = 1; 2 > f1; ++f1) {
                        if (i11 != 0) {
                            vMeth_check_sum += Double.doubleToLongBits(d) + i5 + i10 + i11 + i12 + i13 +
                                Float.floatToIntBits(f1) + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
                            return;
                        }
                        i5 += (int)(f1 * Test.instanceCount);
                        i13 += i14;
                    }
                } else {
                    i11 = i13;
                    vMeth_check_sum += Double.doubleToLongBits(d) + i5 + i10 + i11 + i12 + i13 +
                        Float.floatToIntBits(f1) + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
                    return;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i5 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(iArr3);
    }

    public static int iMeth(int i, int i1, int i2) {

        int i3=55422, i4=93, i15=-14, i16=37009, i17=8, iArr1[]=new int[N];
        float f2=1.94F, f3=-1.771F;
        double d2=0.8437;
        byte by=45;

        FuzzerUtils.init(iArr1, -54278);

        iArr1[(i2 >>> 1) % N] = (Test.byArrFld[(i1 >>> 1) % N] %= (byte)(i | 1));
        for (i3 = 23; i3 < 378; i3++) {
            vMeth(0.128359, -14);
            for (f2 = 5; f2 > 1; f2--) {
                for (i16 = (int)(f2); i16 < 2; i16++) {
                    d2 += Test.instanceCount;
                    switch ((int)((f2 % 1) + 65)) {
                    case 65:
                        i -= i17;
                        if (i1 != 0) {
                        }
                    default:
                        i4 += (-23021 + (i16 * i16));
                        by += (byte)(i16 + f2);
                    }
                    i4 = (int)Test.instanceCount;
                    iArr1[i16] >>>= (int)Test.instanceCount;
                    f3 += i16;
                    Test.instanceCount >>= i15;
                }
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + Float.floatToIntBits(f2) + i15 + i16 + i17 +
            Double.doubleToLongBits(d2) + by + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d3=0.20594;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 237);

        iFld *= (int)(((iFld << -245) - Math.sqrt(1.11932)) - (iFld + (iArr[(iFld >>> 1) % N]++)));
        iFld = ((--iFld) + (iMeth(iFld, iFld, iFld) + iFld));
        d3 += Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
