package tests.javafuzzer3089;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:34:49 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-12L;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
        FuzzerUtils.init(Test.fArrFld, -39.367F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1, boolean b) {

        int i6=-85, i7=-4, i8=117, i9=159, i10=423, iArr1[]=new int[N];
        float f1=98.49F;
        double d=-2.79054;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 86);
        FuzzerUtils.init(lArr, 25154L);

        for (i6 = 4; i6 < 143; ++i6) {
            if (b) {
                Test.instanceCount *= (long)f1;
            } else {
                for (i8 = i6; i8 < 11; ++i8) {
                    i9 <<= -4922;
                    i10 = 1;
                    do {
                        iArr1[i8 + 1] = -13;
                        i7 += (i10 ^ l);
                        iArr1[i8] -= i9;
                        Test.instanceCount = i7;
                        i7 = -10856;
                        lArr[i8] -= i10;
                    } while (--i10 > 0);
                    i7 += i8;
                    d = Test.instanceCount;
                    iArr1[i6 + 1] *= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += l + l1 + (b ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i3, int i4, int i5) {

        int i11=-69, i12=-54320, i13=14, i14=6;
        double d1=-2.92640, dArr[]=new double[N];
        float f2=0.548F;
        short s1=-20579;

        FuzzerUtils.init(dArr, 118.83140);

        vMeth1(Test.instanceCount, Test.instanceCount, false);
        for (i11 = 232; 2 < i11; i11--) {
            dArr[i11] = d1;
            i12 ^= i4;
        }
        f2 = i4;
        d1 = i4;
        for (i13 = 9; i13 < 301; i13 += 3) {
            i3 += (int)(-52.470F + (i13 * i13));
            Test.instanceCount += (i13 - Test.instanceCount);
            Test.instanceCount += s1;
            switch (((i13 % 9) * 5) + 18) {
            case 58:
                i12 -= (int)0L;
                break;
            case 24:
                f2 -= i14;
                Test.iArrFld[i13] = i5;
                break;
            case 48:
                d1 += i11;
            case 32:
                i4 += (i13 - Test.instanceCount);
            case 26:
                i4 = i3;
                break;
            case 23:
                i12 += i4;
                break;
            case 63:
                d1 = i13;
                break;
            case 28:
                Test.instanceCount += i13;
                break;
            case 61:
                Test.instanceCount *= i4;
            }
        }
        long meth_res = i3 + i4 + i5 + i11 + i12 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i13 + i14 +
            s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i) {

        int i1=-2, i2=64102, iArr[]=new int[N];
        byte by=110;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -137);
        FuzzerUtils.init(sArr, (short)-19909);

        for (i1 = 8; i1 < 181; ++i1) {
            short s=28954;
            float f=-1.270F;
            s = (short)Math.max((long)((f--) * (i2 - Test.instanceCount)), -21127L);
            iArr[i1] ^= (int)(((long)(35.32119 - (i2 * i1)) & (by + 1664779461879616027L)) + (i = 13));
            Test.instanceCount *= iMeth(i1, -14, -16967);
        }
        sArr[(-33 >>> 1) % N] *= (short)i1;
        i2 = (int)Test.instanceCount;
        Test.instanceCount &= i;
        i2 ^= i2;
        Test.instanceCount <<= i1;
        i2 &= i2;
        i2 = (int)Test.instanceCount;
        vMeth_check_sum += i + i1 + i2 + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=2, i16=-30317, i17=-198, i18=-63543, i19=1, i20=-6, i21=-107;
        long l2=240L, lArr1[]=new long[N];
        float f3=0.712F;
        short s2=13941;
        double d3=-2.117070;
        byte by1=12, byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, 6L);
        FuzzerUtils.init(byArr, (byte)-120);

        vMeth(i15);
        for (i16 = 251; i16 > 8; i16 -= 3) {
            l2 >>= i16;
            for (i18 = i16; 309 > i18; i18++) {
                f3 = Test.instanceCount;
                switch (((i16 % 8) * 5) + 20) {
                case 53:
                    i15 = i17;
                    i19 += (int)Test.instanceCount;
                    s2 += (short)(i18 - l2);
                    Test.iArrFld[i16 - 1] *= (int)Test.instanceCount;
                    break;
                case 33:
                    Test.iArrFld[i18 - 1] <<= (int)l2;
                    i19 += (int)l2;
                    Test.iArrFld[i18 - 1] >>= 8450;
                    break;
                case 43:
                    i19 += (i18 * i17);
                    Test.iArrFld[i16 + 1] += i17;
                    for (d3 = 1; d3 < 1; d3++) {
                        i19 = (int)l2;
                        i20 = i17;
                        l2 += (long)(d3 * by1);
                        Test.fArrFld[(int)(d3)] -= i18;
                        l2 += i16;
                        i20 = 20;
                        Test.instanceCount += (long)(d3 * d3);
                        Test.instanceCount += (long)d3;
                    }
                    try {
                        i21 = (21176 % i17);
                        i20 = (i21 / i19);
                        i15 = (i15 % i16);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 51:
                    Test.iArrFld[i16 + 1] -= by1;
                    i20 += (i18 * i18);
                    l2 = i20;
                    by1 += (byte)(i18 | l2);
                case 46:
                    i17 >>= (int)Test.instanceCount;
                    break;
                case 39:
                    i15 = i17;
                case 24:
                    Test.instanceCount += (i18 - i17);
                case 29:
                    lArr1[i16] <<= l2;
                    break;
                default:
                    byArr[i16 + 1] += (byte)i20;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
