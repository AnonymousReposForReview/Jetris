package tests.javafuzzer1297;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:51:32 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6L;
    public double dFld=-2.105238;
    public short sFld=13131;
    public long lFld=18255L;
    public static int iArrFld[]=new int[N];
    public static volatile int iArrFld1[]=new int[N];
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12);
        FuzzerUtils.init(Test.iArrFld1, -65);
        FuzzerUtils.init(Test.dArrFld, -38.76574);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, float f3) {

        int i5=-170, i6=43620, i7=-56809, i8=-13, i9=-189, i10=-401, i11=19211, i12=-59379, i13=-3, i14=75, iArr[]=new
            int[N];
        long l3=-25L;
        boolean b=true;

        FuzzerUtils.init(iArr, 62590);

        for (i5 = 8; 205 > i5; i5++) {
            i4 *= i4;
        }
        for (i7 = 10; 377 > i7; i7++) {
            iArr[i7] = (int)l3;
        }
        f3 *= i7;
        for (i9 = 5; i9 < 177; ++i9) {
            for (i11 = 1; i11 < 9; i11++) {
                i4 += (i11 * i11);
                b = false;
                l3 += (i11 * i11);
                for (i13 = 1; i13 < 2; i13++) {
                    Test.instanceCount += i12;
                    if (i14 != 0) {
                        vMeth1_check_sum += i4 + Float.floatToIntBits(f3) + i5 + i6 + i7 + i8 + l3 + i9 + i10 + i11 +
                            i12 + (b ? 1 : 0) + i13 + i14 + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    if (b) break;
                    iArr[i11] += (int)l3;
                }
            }
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f3) + i5 + i6 + i7 + i8 + l3 + i9 + i10 + i11 + i12 + (b ? 1 : 0)
            + i13 + i14 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(float f2) {

        int i1=10, i2=-44152, i3=-151, i15=138, i16=-36065;
        double d=0.103766;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -125.890F);

        i1 = 1;
        do {
            for (i2 = 7; 1 < i2; i2 -= 2) {
                vMeth1(i1, f2);
                f2 = 90;
            }
            switch ((i1 % 4) + 28) {
            case 28:
                i3 = (int)Test.instanceCount;
                break;
            case 29:
                Test.iArrFld = Test.iArrFld;
                try {
                    Test.iArrFld1[i1] = (Test.iArrFld[i1] / i2);
                    i3 = (Test.iArrFld[i1 - 1] % 42600);
                    i3 = (Test.iArrFld[i1 + 1] / 232);
                } catch (ArithmeticException a_e) {}
                i3 += (int)Test.instanceCount;
                Test.instanceCount *= i3;
                break;
            case 30:
                for (i15 = 1; i15 < 7; ++i15) {
                    fArr1[i15 + 1] *= Test.instanceCount;
                    i16 = (int)Test.instanceCount;
                    Test.instanceCount >>= i15;
                    d += i2;
                }
            case 31:
                i3 += (i1 - f2);
                break;
            default:
                i16 -= -45079;
            }
        } while (++i1 < 223);
        long meth_res = Float.floatToIntBits(f2) + i1 + i2 + i3 + i15 + i16 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, long l1, long l2) {

        double d1=1.8385;
        int i17=3, i18=-11, i19=128;
        short s=-10421;
        boolean b1=false;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -1674702697L);

        Test.instanceCount = (-iMeth(0.540F));
        d1 = l1;
        i17 -= i17;
        lArr[(i17 >>> 1) % N][(i17 >>> 1) % N] += i17;
        i17 = 9;
        i17 <<= i17;
        for (i18 = 17; i18 < 371; i18++) {
            Test.iArrFld1[i18] -= i19;
            i17 -= -13;
            if (b1) {
                s <<= (short)l1;
                s &= (short)i19;
            } else {
                l += (i18 + i19);
                i17 >>= i19;
                i17 = -4975;
            }
        }
        vMeth_check_sum += l + l1 + l2 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + s + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-231, i20=-1, i21=77, i22=54;
        float f1=17.519F, fArr[]=new float[N];
        byte by=5, by1=127;
        boolean b2=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 6.381F);
        FuzzerUtils.init(lArr1, 162L);

        for (float f : fArr) {
            if (false) {
                Test.instanceCount >>>= (long)(i * (i - (i * dFld)));
                f1 = 1;
                while (++f1 < 63) {
                    vMeth(Test.instanceCount, Test.instanceCount, Test.instanceCount);
                    i -= i;
                    i20 = 1;
                    while (++i20 < 1) {
                        Test.instanceCount *= i20;
                        i += (15 + (i20 * i20));
                    }
                    i += i20;
                    Test.iArrFld1[(int)(f1 - 1)] += by;
                    switch ((int)((f1 % 8) + 76)) {
                    case 76:
                        Test.dArrFld[(int)(f1)][(i20 >>> 1) % N] *= dFld;
                        i = (int)Test.instanceCount;
                        break;
                    case 77:
                        i &= i20;
                        for (i21 = 1; 1 > i21; i21++) {
                            Test.iArrFld[(int)(f1)] = (int)Test.instanceCount;
                            f += i21;
                            switch ((int)((f1 % 8) + 105)) {
                            case 105:
                                f = i22;
                                f *= f;
                                lArr1[(int)(f1 - 1)] = -68;
                                break;
                            case 106:
                                i += (i21 - i);
                                b2 = b2;
                                by1 += (byte)(i21 * i21);
                                break;
                            case 107:
                                i22 <<= -57881;
                                Test.instanceCount *= 9;
                                i22 = i20;
                                i22 *= (int)Test.instanceCount;
                                break;
                            case 108:
                                Test.iArrFld = Test.iArrFld1;
                            case 109:
                                dFld -= 3503601631L;
                            case 110:
                                Test.instanceCount |= i21;
                                break;
                            case 111:
                                fArr[(int)(f1)] = i22;
                                break;
                            case 112:
                                Test.instanceCount <<= Test.instanceCount;
                            }
                        }
                    case 78:
                        i -= i22;
                        break;
                    case 79:
                        i22 = i20;
                        break;
                    case 80:
                        Test.instanceCount += sFld;
                        break;
                    case 81:
                        i *= (int)1.489F;
                    case 82:
                        Test.instanceCount <<= 2735487049L;
                        break;
                    case 83:
                        Test.iArrFld1[(int)(f1)] %= (int)(i22 | 1);
                        break;
                    default:
                        i = i;
                    }
                }
            } else {
                Test.iArrFld[(i >>> 1) % N] >>= (int)lFld;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
