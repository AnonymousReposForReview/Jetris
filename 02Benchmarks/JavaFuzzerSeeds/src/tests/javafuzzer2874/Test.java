package tests.javafuzzer2874;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:06:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1035514818L;
    public static byte byFld=75;
    public static short sFld=11844;
    public static float fFld=47.52F;
    public boolean bArrFld[]=new boolean[N];
    public static volatile long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1773916394L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i, int i1, int i2) {

        double d=0.4060;

        Test.instanceCount = (long)d;
        d -= (-(0 % (i | 1)));
        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d);
    }

    public static long lMeth(int i9) {

        double d3=0.99464, d4=-2.77996;
        int i10=-12, i11=64788, i12=163, iArr2[][]=new int[N][N];

        FuzzerUtils.init(iArr2, 26789);

        for (d3 = 7; d3 < 125; ++d3) {
            i10 = -22784;
            for (i11 = (int)(d3); i11 < 13; i11++) {
                i12 &= i11;
                Test.instanceCount >>= i11;
                d4 -= -6229;
                iArr2[(int)(d3 + 1)][(int)(d3)] += (int)-20344L;
                if (i10 != 0) {
                }
                i12 -= i10;
                iArr2[i11][i11] >>= i12;
                iArr2[(int)(d3)][(int)(d3 + 1)] = 53264;
                i10 += (((i11 * i10) + i10) - Test.instanceCount);
                i12 += (12 + (i11 * i11));
            }
            Test.instanceCount += (long)(d3 + Test.sFld);
            i10 += (int)(((d3 * i10) + Test.instanceCount) - i9);
        }
        long meth_res = i9 + Double.doubleToLongBits(d3) + i10 + i11 + i12 + Double.doubleToLongBits(d4) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i6, float f, int i7) {

        double d2=1.83292;
        int i8=-3, i13=3, i14=36258, i15=0, i16=3, iArr3[]=new int[N];
        boolean b=true;
        short s=-14983;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -14L);
        FuzzerUtils.init(iArr3, -51488);

        d2 = (f++);
        i8 = 1;
        do {
            i6 = (int)lArr1[i8][i8 + 1];
            if ((lMeth(i8) > i6) && b) {
                if (i7 != 0) {
                }
            }
            d2 *= -168;
            for (i13 = 1; i13 < 8; ++i13) {
                s += (short)(i13 * i14);
                i7 >>>= i13;
                i14 += (i13 * i13);
                switch ((i8 % 1) + 96) {
                case 96:
                    for (i15 = 1; 2 > i15; i15++) {
                        i16 += i13;
                        i14 >>>= i6;
                        iArr3[i8 + 1] |= (int)Test.instanceCount;
                    }
                    break;
                default:
                    if (b) continue;
                }
            }
        } while (++i8 < 192);
        long meth_res = i6 + Float.floatToIntBits(f) + i7 + Double.doubleToLongBits(d2) + i8 + (b ? 1 : 0) + i13 + i14
            + s + i15 + i16 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d1, int i4) {

        int i5=66, i17=64166, i18=9, i19=12, iArr1[]=new int[N];
        float f1=-2.989F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -29);
        FuzzerUtils.init(lArr, -60382L);

        iArr1[(-65 >>> 1) % N] = (Test.byFld * ((++i4) + (++Test.byFld)));
        iArr1[(-30906 >>> 1) % N] >>>= (int)((i4 *= i4) + ((i4 + Test.instanceCount) - (iArr1[(i4 >>> 1) % N]--)));
        i4 = (int)((i5 + (Test.instanceCount + i5)) - i4);
        lArr[(i4 >>> 1) % N] = (--i4);
        iArr1[(i4 >>> 1) % N] += (iMeth(129, f1, i5) + i5);
        for (i17 = 8; i17 < 366; ++i17) {
            i19 = 1;
            while ((i19 += 3) < 5) {
                iArr1[i17] = i17;
            }
            i4 += (int)17060L;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i4 + i5 + Float.floatToIntBits(f1) + i17 + i18 + i19 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i3=14, i20=116, i21=-151, i22=-28003, i23=29683, i24=-3, iArr[]=new int[N];
        double d5=-2.51202;
        boolean b1=true;
        long l=-58753L;

        FuzzerUtils.init(iArr, -62809);

        vMeth(i3, 3, 11 + (Math.min(i3, 6) * iArr[(i3 >>> 1) % N]));
        vMeth1(d5, i3);
        i3 <<= i3;
        for (i20 = 2; i20 < 332; ++i20) {
            switch ((i20 % 2) + 55) {
            case 55:
                if (true) continue;
                Test.sFld = (short)i20;
                Test.sFld -= (short)i20;
            case 56:
                Test.instanceCount -= Test.instanceCount;
                bArrFld = FuzzerUtils.boolean1array(N, (boolean)true);
                Test.instanceCount += (long)Test.fFld;
                break;
            default:
                switch (((i20 % 6) * 5) + 44) {
                case 51:
                    i21 = -98;
                    b1 = b1;
                    break;
                case 46:
                    Test.fFld = 38797;
                    Test.lArrFld[i20 + 1][i20] = i20;
                    break;
                case 63:
                    i21 += (((i20 * i21) + i21) - i3);
                    for (l = 1; l < 76; ++l) {
                        Test.instanceCount = -23856;
                        switch ((int)((l % 6) + 48)) {
                        case 48:
                            i22 -= 11;
                            i3 = i20;
                            i21 *= i20;
                            i21 <<= i3;
                            break;
                        case 49:
                            if (b1) break;
                            for (i23 = i20; 2 > i23; i23++) {
                                float f2=1.736F;
                                iArr[i20] *= (int)f2;
                                i22 = -6;
                            }
                            Test.byFld += (byte)(((l * Test.sFld) + i3) - l);
                            break;
                        case 50:
                            Test.instanceCount <<= 1;
                            break;
                        case 51:
                        case 52:
                            i21 += (int)(l ^ l);
                            break;
                        case 53:
                            Test.instanceCount >>= 127;
                            break;
                        default:
                            Test.instanceCount *= (long)Test.fFld;
                        }
                    }
                    break;
                case 60:
                case 50:
                    i24 = i24;
                    break;
                case 53:
                    i22 %= (int)(l | 1);
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 mainTest
//DEBUG  iMeth ->  iMeth vMeth1 mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
