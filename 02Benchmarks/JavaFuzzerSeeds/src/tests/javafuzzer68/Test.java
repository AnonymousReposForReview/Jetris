package tests.javafuzzer68;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:44:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-65273L;
    public static int iFld=11;
    public static byte byFld=-120;
    public boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=103, i5=-13, i6=-101, i7=-155, i8=-2, i9=1, iArr[]=new int[N];
        short s=-31653;

        FuzzerUtils.init(iArr, 35756);

        for (i4 = 1; 389 > i4; i4++) {
            for (i6 = 1; 4 > i6; i6++) {
                s >>= (short)i7;
                iArr[i6 + 1] >>= i6;
                Test.instanceCount = i7;
                for (i8 = 2; i8 > 1; i8 -= 3) {
                    float f=56.875F;
                    Test.instanceCount += i8;
                    f += i8;
                    i5 >>>= Test.iFld;
                    Test.instanceCount += -11;
                    Test.iFld += i8;
                    i5 = i5;
                }
                i5 += i6;
                Test.iFld += (((i6 * i5) + i4) - i4);
                i9 <<= s;
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + s + i8 + i9 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l1, int i2, int i3) {


        vMeth1();
        long meth_res = l1 + i2 + i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, long l, int i1) {

        int i10=11, i11=-8, i12=1, i15=-103, iArr1[]=new int[N];
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 56690);
        FuzzerUtils.init(lArr, 12957L);

        i1 = iMeth(-2L, i, i);
        i10 = 1;
        while (++i10 < 233) {
            if (b) break;
            for (i11 = 7; i11 > 1; --i11) {
                float f1=-51.567F;
                i1 = (int)f1;
                i12 += Test.byFld;
            }
            Test.instanceCount += i10;
            l >>= Test.iFld;
            iArr1[i10 + 1] *= i11;
            Test.instanceCount *= -1516036210L;
        }
        for (int i14 : iArr1) {
            switch ((((i1 >>> 1) % 2) * 5) + 122) {
            case 128:
                i12 -= (int)l;
                lArr[(215 >>> 1) % N] = i15;
                iArr1[(i11 >>> 1) % N] -= 44102;
                break;
            case 123:
                i12 *= 223;
            default:
                i14 -= (int)-38556L;
            }
        }
        vMeth_check_sum += i + l + i1 + i10 + (b ? 1 : 0) + i11 + i12 + i15 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=-8144, i17=9, i18=-58937, i19=52242, i20=164, i21=20124, i22=49505, iArr2[]=new int[N];
        double d=69.102038;
        boolean b1=false;
        float f2=-2.459F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -1);
        FuzzerUtils.init(lArr1, 5358356017059604416L);

        vMeth(-224, Test.instanceCount, Test.iFld);
        i16 = 1;
        while (++i16 < 151) {
            Test.byFld >>= (byte)i16;
            d %= (Test.iFld | 1);
        }
        Test.iFld = Test.iFld;
        Test.iFld *= i16;
        for (i17 = 9; i17 < 270; ++i17) {
            if (true) break;
            for (i19 = 3; i19 < 96; i19 += 2) {
                if (b1) {
                    iArr2 = iArr2;
                    lArr1[i19 + 1] += i16;
                } else {
                    Test.iFld *= (int)f2;
                }
                for (i21 = 1; i21 < 3; i21++) {
                    switch (((i21 % 5) * 5) + 124) {
                    case 140:
                        Test.iFld += (i21 * f2);
                        i20 &= i16;
                    case 142:
                        i18 = (int)Test.instanceCount;
                        iArr2[i21 + 1] += Test.iFld;
                        i22 -= (int)f2;
                        break;
                    case 134:
                        i18 = i19;
                        lArr1[i17 - 1] = Test.instanceCount;
                        if (b1) {
                            Test.instanceCount += i18;
                            i18 >>= (int)Test.instanceCount;
                            if (bFld) break;
                        }
                    case 144:
                        switch ((i19 % 2) + 21) {
                        case 21:
                            Test.instanceCount += (i21 * Test.iFld);
                            iArr2[i21 - 1] = (int)f2;
                            break;
                        case 22:
                            d *= Test.byFld;
                            break;
                        default:
                            Test.instanceCount += i21;
                        }
                        break;
                    case 133:
                        i22 |= i18;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
