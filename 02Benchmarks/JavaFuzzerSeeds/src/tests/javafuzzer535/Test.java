package tests.javafuzzer535;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:23:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-209L;
    public static int iFld=-18914;
    public static byte byFld=35;
    public short sFld=12285;
    public boolean bFld=false;
    public static float fFld=-46.617F;
    public float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i2) {

        long l=6264538153212452532L;
        int i3=-202, i4=-29574, i5=-34890, i6=-73, iArr[]=new int[N];
        double d=0.69578;
        boolean b=true;

        FuzzerUtils.init(iArr, -57589);

        iArr[(i2 >>> 1) % N] -= Test.iFld;
        Test.instanceCount *= Test.iFld;
        i2 -= (int)8600385415801158228L;
        Test.byFld |= (byte)i2;
        for (l = 5; l < 340; l++) {
            for (i4 = 1; i4 < 5; i4++) {
                i6 = 2;
                do {
                    try {
                        Test.iFld = (i5 / 26046);
                        i2 = (i3 / -1616895765);
                        Test.iFld = (i6 % Test.iFld);
                    } catch (ArithmeticException a_e) {}
                    Test.iFld = (int)f;
                    i5 = i5;
                    Test.instanceCount += (i6 * i3);
                    i2 += (i6 ^ Test.instanceCount);
                    if (b) {
                        i5 -= i6;
                        d = i6;
                    }
                } while (--i6 > 0);
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + l + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + (b ? 1
            : 0) + FuzzerUtils.checkSum(iArr);
    }

    public int iMeth() {

        double d1=-107.23827;
        int i7=205, i8=-4, i9=100;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 7757L);

        Test.iFld += (Test.iFld * ((Test.iFld--) >> Test.iFld));
        vMeth1(-1.480F, Test.iFld);
        fArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        Test.iFld <<= Test.iFld;
        Test.iFld = 247;
        switch (((Test.iFld >>> 1) % 5) + 124) {
        case 124:
            Test.iFld *= Test.iFld;
            Test.instanceCount = -112;
            for (d1 = 9; d1 < 229; d1 += 3) {
                Test.iFld *= 76;
                Test.iFld <<= 62;
                i7 >>>= i7;
                for (i8 = 1; i8 < 21; i8++) {
                    lArr[(int)(d1 - 1)][i8] = i9;
                    Test.iFld = 68;
                }
            }
            break;
        case 125:
            i7 <<= sFld;
            break;
        case 126:
        case 127:
            Test.byFld -= (byte)i8;
            break;
        case 128:
            Test.instanceCount = Test.iFld;
            break;
        }
        long meth_res = Double.doubleToLongBits(d1) + i7 + i8 + i9 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=25147, i1=1, i10=58380, i11=-60, i12=-2, i13=7, i14=-55;
        float f1=-1.389F;

        i = 1;
        do {
            i1 -= iMeth();
            for (i10 = 1; i10 < 8; i10++) {
                i1 = i;
                Test.byFld = (byte)Test.instanceCount;
                i11 += (i10 * i10);
                i11 -= 220;
                bFld = bFld;
                i11 += (((i10 * sFld) + i) - Test.instanceCount);
            }
            for (i12 = 1; i12 < 8; ++i12) {
                i13 ^= i1;
                iArrFld[i12 + 1] >>>= (int)Test.instanceCount;
                for (f1 = 1; f1 < 2; f1++) {
                    iArrFld[(int)(f1)] -= 45488;
                    if (bFld) break;
                }
            }
        } while (++i < 214);
        vMeth_check_sum += i + i1 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=-197, i16=-63000, i17=12, i18=12, i19=-106, i20=95, i21=167, i22=-2, i23=-28;
        double d2=4.59525;

        vMeth();
        Test.instanceCount = Test.iFld;
        for (i15 = 14; 245 > i15; i15++) {
            if (bFld) {
                for (i17 = 4; i17 < 109; i17++) {
                    Test.iFld ^= (int)Test.instanceCount;
                    lArrFld = lArrFld;
                    for (i19 = i15; i19 < 2; ++i19) {
                        Test.iFld = Test.iFld;
                        iArrFld[i19 - 1] += (int)Test.fFld;
                        fArrFld[i19 - 1] -= 110;
                        Test.instanceCount *= 133;
                    }
                    i21 = 1;
                    do {
                        i18 >>>= i19;
                        iArrFld[i21] = i21;
                        try {
                            i16 = (-195 % iArrFld[i21]);
                            Test.iFld = (i17 / iArrFld[i21]);
                            iArrFld[i17] = (2812 / i17);
                        } catch (ArithmeticException a_e) {}
                    } while (++i21 < 2);
                    i22 = 0;
                    if (bFld) {
                        i23 = 1;
                        while (++i23 < 2) {
                            Test.instanceCount *= sFld;
                            iArrFld[i17] -= i17;
                            Test.instanceCount %= (i19 | 1);
                            i22 += (i23 - i19);
                            d2 -= d2;
                            if (bFld) continue;
                            Test.instanceCount = 6501986027705529866L;
                            d2 = Test.fFld;
                            i20 = i15;
                        }
                        i20 += (-22621 + (i17 * i17));
                    } else if (bFld) {
                        Test.iFld -= i15;
                    } else {
                        i16 = (int)Test.instanceCount;
                    }
                }
            } else {
                i16 &= i21;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
