package tests.javafuzzer25;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:17:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=37647L;
    public static float fFld=-1.542F;
    public static int iFld=50193;
    public static double dFld=60.50850;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)23191);
    }

    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, float f1, long l1) {

        int i5=9591, i6=61290, i7=-1, i8=7, i9=38321, i10=-170;
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        i5 = (int)Test.instanceCount;
        i5 -= i5;
        Test.sArrFld[(i5 >>> 1) % N] += (short)Test.instanceCount;
        i5 *= i5;
        for (i6 = 2; i6 < 255; i6++) {
            bArr[i6] = b;
            Test.instanceCount = -8;
            i7 = i6;
            for (i8 = i6; i8 < 6; i8 += 3) {
                i9 >>= i6;
                if (b) {
                    i10 = 1;
                    do {
                        l1 -= l1;
                        i5 %= (int)(i6 | 1);
                        i9 = i5;
                    } while (++i10 < 1);
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + l1 + i5 + i6 + i7 + (b ? 1 : 0) + i8
            + i9 + i10 + FuzzerUtils.checkSum(bArr);
    }

    public static float fMeth(int i4, float f, long l) {

        double d1=2.6951;
        boolean b1=false, bArr1[][]=new boolean[N][N];
        int i11=57393, i12=145, i13=-62327, i14=-19072, i15=212, i16=-219, i17=45, iArr1[][]=new int[N][N];

        FuzzerUtils.init(bArr1, false);
        FuzzerUtils.init(iArr1, -27040);

        vMeth(d1, f, Test.instanceCount);
        i4 += i4;
        i4 += -41580;
        bArr1[(i4 >>> 1) % N][(i4 >>> 1) % N] = b1;
        iArr1[(i4 >>> 1) % N][(i4 >>> 1) % N] -= i4;
        for (i11 = 21; i11 < 380; i11++) {
            i12 ^= i4;
        }
        iArr1[(2 >>> 1) % N][(i12 >>> 1) % N] >>= (int)l;
        for (i13 = 5; i13 < 136; ++i13) {
            i15 = 1;
            do {
                i12 = (int)Test.instanceCount;
                for (i16 = 1; i16 < 1; ++i16) {
                    i4 = i11;
                    i12 <<= i16;
                    b1 = b1;
                }
            } while (++i15 < 12);
        }
        long meth_res = i4 + Float.floatToIntBits(f) + l + Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + i11 + i12 + i13
            + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(bArr1) + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth() {

        int i3=-13, i18=-14, i19=151, i20=9812, i21=-13;
        short s=-22026;

        i3 *= (int)Test.instanceCount;
        i3 = (int)fMeth(i3, Test.fFld, Test.instanceCount);
        i3 >>= i3;
        for (i18 = 7; i18 < 131; ++i18) {
            Test.instanceCount += i19;
            i19 -= i19;
            Test.instanceCount = i19;
            Test.fFld = Test.instanceCount;
            s = (short)9;
            Test.fFld *= 18;
            i3 += (43783 + (i18 * i18));
            for (i20 = 1; i20 < 13; ++i20) {
                i21 = (int)1.5480;
                s += (short)-204;
            }
            Test.fFld = Test.instanceCount;
        }
        long meth_res = i3 + i18 + i19 + s + i20 + i21;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=169, i2=250, i22=5, i23=-2, i24=-59007, i25=-11674, i26=-12, i27=13, i28=-5816, i29=-121, i30=30,
            i31=142, i32=8, i33=217, iArr[]=new int[N];
        double d2=-30.84389;
        boolean b2=false;
        short s1=12076;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(lArr, -1L);

        if (b2) {
            i = 1;
            while (++i < 299) {
                for (i1 = i; i1 < 84; ++i1) {
                    Test.instanceCount = i1;
                    iArr[i] *= (int)(-lMeth());
                }
                switch ((((i >>> 1) % 9) * 5) + 26) {
                case 60:
                    Test.fFld %= (Test.instanceCount | 1);
                    Test.sArrFld = FuzzerUtils.short1array(N, (short)-20909);
                case 35:
                    for (i22 = 2; i22 < 84; i22 += 2) {
                        for (d2 = 1; 3 > d2; d2++) {
                            b2 = b2;
                            iArr[i] = i2;
                            i2 *= Test.iFld;
                            i2 += i23;
                        }
                    }
                case 68:
                    for (i25 = 3; i25 < 84; i25++) {
                        Test.instanceCount += (((i25 * i2) + i) - i25);
                        Test.iFld &= -41784;
                    }
                    i27 = 1;
                    while (++i27 < 84) {
                        byte by=-122;
                        Test.iFld += (((i27 * Test.instanceCount) + s1) - i2);
                        Test.dFld += 432472877L;
                        Test.iFld += (((i27 * by) + i) - i25);
                        for (i28 = 1; i28 < 1; i28++) {
                            i26 += i28;
                        }
                        i24 |= (int)Test.instanceCount;
                        i23 = i22;
                        for (i30 = i; i30 < 1; i30++) {
                            i31 &= by;
                        }
                        for (i32 = 1; i32 < 1; ++i32) {
                            lArr[i32 - 1] <<= i33;
                            i23 -= (int)Test.instanceCount;
                        }
                    }
                case 66:
                    Test.iFld >>= s1;
                    break;
                case 53:
                    Test.instanceCount &= 192;
                    break;
                case 61:
                    if (b2) continue;
                case 27:
                    Test.iFld = (int)Test.instanceCount;
                    break;
                case 46:
                    Test.iFld = i1;
                    break;
                case 38:
                    Test.iFld = (int)-13L;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
