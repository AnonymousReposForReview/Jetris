package tests.javafuzzer2722;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:18:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3283168636L;
    public static byte byFld=-96;
    public static int iFld=55824;
    public static short sFld=-18548;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 12L);
        FuzzerUtils.init(Test.fArrFld, -1.740F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i7=34435, i8=-14, i9=242, i10=13097, i11=-4021, i12=-63875, iArr1[]=new int[N];
        byte by=-25;
        boolean b=true;
        float f=-26.626F;
        long l1=2333360102L;

        FuzzerUtils.init(iArr1, 13);

        i7 = (int)2.988F;
        i7 += i7;
        i8 = 1;
        while (++i8 < 251) {
            for (i9 = 1; i9 < 6; ++i9) {
                for (i11 = 1; i11 < 2; i11++) {
                    Test.instanceCount = i9;
                    i7 = i9;
                    i12 -= by;
                    i10 += (7 + (i11 * i11));
                    l += (i11 * i11);
                    switch (((i11 % 9) * 5) + 25) {
                    case 40:
                        if (b) {
                            l += (-33443 + (i11 * i11));
                            iArr1[i11] |= i7;
                            i7 += i11;
                        } else {
                            by >>= (byte)i9;
                        }
                    case 44:
                        Test.instanceCount += i11;
                    case 41:
                        Test.instanceCount += i11;
                        break;
                    case 33:
                        iArr1[i11 + 1] -= i12;
                    case 62:
                        i10 <<= i9;
                        break;
                    case 51:
                        i7 = i7;
                    case 66:
                    case 57:
                        f += (((i11 * i11) + i9) - i7);
                        break;
                    case 63:
                        Test.instanceCount -= i7;
                        break;
                    default:
                        l1 = (long)f;
                    }
                }
            }
        }
        vMeth2_check_sum += l + i7 + i8 + i9 + i10 + i11 + i12 + by + (b ? 1 : 0) + Float.floatToIntBits(f) + l1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i2) {

        int i3=-11, i4=0, i5=-65422, i6=-61914, i13=-6, iArr[]=new int[N];
        float f1=43.572F;
        boolean b1=true;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr, 55026);
        FuzzerUtils.init(byArr, (byte)-97);

        Test.lArrFld[(i2 >>> 1) % N] = (i2--);
        for (i3 = 7; i3 < 359; i3++) {
            Test.lArrFld[i3 - 1] = ((++iArr[i3 + 1]) + (Math.abs(i4) + (i2 - i4)));
        }
        for (i5 = 8; i5 < 397; ++i5) {
            vMeth2(Test.instanceCount);
            i4 <<= i4;
            Test.lArrFld = Test.lArrFld;
            switch ((((i2 >>> 1) % 9) * 5) + 118) {
            case 157:
                i2 = Test.byFld;
                i13 = 1;
                while (++i13 < 4) {
                    f1 = i4;
                }
                Test.iFld += (i5 - Test.instanceCount);
            case 151:
                i2 += (i5 + Test.instanceCount);
                i4 <<= i6;
                Test.instanceCount += (i5 - i4);
                break;
            case 163:
                if (i2 != 0) {
                    vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i13 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                break;
            case 121:
                Test.lArrFld[i5 - 1] = Test.instanceCount;
                break;
            case 155:
                Test.iFld -= i5;
            case 156:
                byArr[i5 - 1][i5 + 1] = (byte)i6;
                break;
            case 161:
                Test.lArrFld[i5 - 1] >>= -41918;
            case 152:
                Test.fArrFld[i5] += i13;
                break;
            case 141:
                if (b1) break;
                break;
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i13 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i, int i1) {

        int i14=47054, i15=-2536, i16=0, i17=-12;
        float f2=61.979F;
        boolean b2=false;

        vMeth1(Test.iFld);
        for (i14 = 9; 269 > i14; ++i14) {
            Test.byFld += (byte)f2;
            Test.instanceCount -= 8;
            if (b2) {
                i16 = 1;
                while (++i16 < 6) {
                    Test.instanceCount += (i16 | i14);
                    i17 = 1;
                    while (++i17 < 1) {
                        double d=0.123732;
                        Test.instanceCount += i17;
                        if (b2) break;
                        i *= (int)f2;
                        d = 239;
                    }
                    if (b2) {
                        i1 = i14;
                        if (b2) continue;
                    } else if (b2) {
                        i1 = i1;
                    } else if (b2) {
                        Test.sFld -= (short)164;
                    } else {
                        i15 *= -14052;
                    }
                }
            } else {
                Test.fArrFld[i14 + 1] -= Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i14 + i15 + Float.floatToIntBits(f2) + i16 + i17 + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f3=0.417F;

        vMeth(Test.iFld, -2);
        Test.iFld = (int)f3;
        f3 -= Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
