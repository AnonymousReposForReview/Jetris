package tests.javafuzzer2939;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:25:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=13023L;
    public float fFld=-2.628F;
    public int iFld=119;
    public static short sFld=-1512;
    public byte byFld=29;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -29539);
        FuzzerUtils.init(Test.lArrFld, 1773301923021117119L);
        FuzzerUtils.init(Test.dArrFld, 1.6570);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i4) {

        int i5=6, i6=-60, i7=-19163, i8=-11608, i9=4, i10=204;
        float f=-80.136F, f1=-67.776F;

        for (i5 = 9; i5 < 220; i5++) {
            i4 += (((i5 * i4) + i6) - i6);
        }
        f = 156;
        while ((f -= 3) > 0) {
            for (i7 = 29; i7 > f; --i7) {
                i6 = (int)Test.instanceCount;
                i6 -= i8;
                Test.instanceCount &= i6;
            }
            f1 *= (float)-2.50815;
            Test.iArrFld[(int)(f)] -= (int)-78L;
            Test.instanceCount = 91;
            i6 >>= i8;
            Test.instanceCount += i7;
            for (i9 = 1; i9 < 29; i9++) {
                f1 *= Test.instanceCount;
                Test.instanceCount += (((i9 * i4) + i5) - i10);
            }
        }
        long meth_res = i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth() {

        double d1=14.70851;
        int i11=-3, i12=-44538, i13=-47489, i14=142, i15=159, i16=7, i17=6, i18=18316;
        boolean b=true;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)91);
        FuzzerUtils.init(lArr, 147L);

        d1 = fMeth(i11);
        for (i12 = 211; i12 > 11; i12 -= 3) {
            Test.iArrFld[i12] = i12;
        }
        for (i14 = 12; i14 < 291; ++i14) {
            Test.instanceCount = -24885;
            for (i16 = 1; i16 < 6; ++i16) {
                i15 += (int)(2.491F + (i16 * i16));
                i11 += (((i16 * i17) + Test.instanceCount) - i11);
                byArr[i16] = (byte)i14;
                b = b;
            }
            i15 += (i14 * i14);
            i18 = 14;
            if (b) {
                i13 |= -6;
                Test.iArrFld[i14 + 1] = (int)Test.instanceCount;
            } else if (false) {
                Test.iArrFld[i14 - 1] -= i12;
            } else {
                if (true) continue;
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(long l2, double d) {

        int i19=-10, i20=29707, i21=0, i22=-44797, i23=20587, i24=43, iArr[]=new int[N];
        double d2=-1.78040;
        long l6=-8L;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -59002);
        FuzzerUtils.init(fArr, 52.873F);

        Test.instanceCount &= iArr[(iFld >>> 1) % N];
        iArr[(iFld >>> 1) % N] *= (int)Math.min(lMeth(), 767048916L);
        for (i19 = 5; 239 > i19; ++i19) {
            fFld = i20;
            i20 = -6;
        }
        for (d2 = 1; d2 < 149; d2++) {
            i20 += (int)((long)d2 ^ l2);
            for (l6 = 1; l6 < 11; ++l6) {
                fArr[(int)(l6)] += i21;
                for (i23 = 1; 2 > i23; i23++) {
                    fFld += (i23 * i23);
                }
                iArr[(int)(l6)] = i23;
                Test.sFld <<= (short)54668;
                l2 += (((l6 * byFld) + iFld) - l6);
                d -= i20;
            }
        }
        vMeth_check_sum += l2 + Double.doubleToLongBits(d) + i19 + i20 + Double.doubleToLongBits(d2) + i21 + l6 + i22 +
            i23 + i24 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=41268, i2=-33698, i3=-158;
        long l=46059L, l1=11253L;
        double d3=0.115972;
        boolean b1=false;

        if (true) {
            i = (int)fFld;
            for (l = 7; l < 154; l++) {
                Test.instanceCount = (i1 + (--i1));
                switch (((Math.max(-63666, iFld) >>> 1) % 5) + 70) {
                case 70:
                    l1 = 1;
                    do {
                        for (i2 = 1; i2 < 1; ++i2) {
                            if (b1) {
                                vMeth(Test.instanceCount, d3);
                                switch (((i2 % 1) * 5) + 30) {
                                case 35:
                                    iFld = (int)Test.instanceCount;
                                default:
                                    i3 += i3;
                                    Test.iArrFld[i2 + 1] = iFld;
                                }
                                b1 = b1;
                                switch ((((i >>> 1) % 2) * 5) + 52) {
                                case 56:
                                    fArrFld[(int)(l + 1)] *= i1;
                                    i3 |= i1;
                                case 58:
                                    i3 += (((i2 * i1) + i2) - l);
                                    fFld /= -169;
                                }
                            } else {
                                iFld *= (int)d3;
                                i = (int)l1;
                                switch ((int)((l % 2) + 4)) {
                                case 4:
                                    switch ((int)(((l1 % 7) * 5) + 114)) {
                                    case 144:
                                    case 142:
                                        Test.instanceCount -= i2;
                                        break;
                                    case 120:
                                        fFld *= -175;
                                        iFld += (i2 * i2);
                                        i1 = i1;
                                        i1 = (int)fFld;
                                        break;
                                    case 130:
                                        Test.dArrFld = Test.dArrFld;
                                        break;
                                    case 125:
                                        i3 -= byFld;
                                        break;
                                    case 136:
                                    case 139:
                                        iFld = iFld;
                                        break;
                                    }
                                case 5:
                                    if (b1) continue;
                                    break;
                                }
                            }
                        }
                    } while (++l1 < 171);
                    break;
                case 71:
                    Test.instanceCount = iFld;
                    break;
                case 72:
                    Test.sFld += (short)l;
                    break;
                case 73:
                    fFld += (l * i2);
                    break;
                case 74:
                    i1 <<= i;
                    break;
                default:
                    i += (11 + (l * l));
                }
            }
        } else if (b1) {
            iFld = i2;
        } else {
            Test.instanceCount = 757924051L;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
