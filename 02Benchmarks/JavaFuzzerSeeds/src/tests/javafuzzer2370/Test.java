package tests.javafuzzer2370;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:39:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=955692535L;
    public int iFld=147;
    public short sFld=7879;
    public volatile float fFld=-23.968F;
    public static byte byFld=101;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 61122);
        FuzzerUtils.init(Test.dArrFld, 0.4486);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f1=2.656F, f2=0.71F;
        int i7=-177, i8=12030, i9=-151, i10=53201, i11=87;

        try {
            f1 -= -1;
            Test.iArrFld[(-10082 >>> 1) % N] += i7;
        }
        catch (NullPointerException exc1) {
            i7 = 1;
        }
        Test.instanceCount >>= -109;
        i7 *= 7007;
        Test.iArrFld[(i7 >>> 1) % N] = (int)Test.instanceCount;
        i7 = (int)85.81342;
        Test.instanceCount = i7;
        f2 = 1;
        while (++f2 < 293) {
            for (i8 = (int)(f2); i8 < 6; ++i8) {
                Test.instanceCount += i7;
                for (i10 = 1; i10 < 1; i10++) {
                    i7 += i10;
                    i7 += (i10 | i8);
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11;
    }

    public void vMeth1(int i3, long l) {

        int i4=-53531, i5=-23161, i6=44, i13=8, i14=-200, i15=-8, i16=1;
        float f3=-2.880F;

        i4 = 1;
        do {
            for (i5 = 1; i5 < 7; ++i5) {
                vMeth2();
            }
            Test.iArrFld[i4 - 1] <<= 56229;
            i13 = 1;
            while (++i13 < 7) {
                i14 = 1;
                do {
                    Test.iArrFld[i13 + 1] = i4;
                    iFld = i4;
                    Test.iArrFld[i4] >>= i13;
                    i6 += i14;
                    i6 += i13;
                    sFld = (short)i3;
                } while (++i14 < 1);
                for (i15 = 1; i15 < 1; ++i15) {
                    i16 = -6;
                    f3 += i15;
                }
            }
        } while (++i4 < 217);
        vMeth1_check_sum += i3 + l + i4 + i5 + i6 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f3);
    }

    public void vMeth(int i2) {

        double d=60.95741;
        int i17=239, i18=57289, i19=11939, i20=34231;

        iFld <<= (int)(((Test.instanceCount - iFld) + -1L) + d);
        vMeth1(i2, Test.instanceCount);
        for (i17 = 237; i17 > 4; i17 -= 2) {
            i2 += (int)fFld;
            i18 -= i17;
            i2 = -67;
            Test.byFld = (byte)i2;
            i18 -= i2;
            iFld = (int)Test.instanceCount;
            Test.instanceCount += (i17 | iFld);
        }
        for (i19 = 12; i19 < 395; ++i19) {
            iFld += (i19 | i19);
            Test.instanceCount += (-49583L + (i19 * i19));
            i18 += i18;
            i20 = i2;
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        byte by=-25;
        float f=-104.961F;
        boolean b=true;
        int i=111, i1=-74, i21=3, i22=-139, i23=3, i24=17541, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, 229L);

        iArr[(-248 >>> 1) % N] -= (by--);
        f = 1;
        do {
            lArr[(int)(f)] = Test.instanceCount;
            if (b) break;
            iFld = (int)(((long)(iFld % ((long)(f) | 1)) >>> (long)(Test.instanceCount + -113.64496)) +
                Test.instanceCount);
        } while (++f < 140);
        for (i = 272; i > 14; i -= 3) {
            vMeth(-11);
            i21 = 1;
            while (++i21 < 291) {
                Test.instanceCount = iFld;
                fFld -= Test.instanceCount;
                i22 = 1;
                do {
                    fFld -= i;
                } while (--i22 > 0);
                switch (((i21 % 5) * 5) + 77) {
                case 96:
                    i23 = 1;
                    do {
                        switch ((i % 8) + 94) {
                        case 94:
                            iFld = i22;
                            iFld = 15;
                            Test.dArrFld[i23][i23] -= Test.instanceCount;
                        case 95:
                            i1 = 49834;
                            i1 *= iFld;
                            i1 += i24;
                            break;
                        case 96:
                            iFld *= (int)Test.instanceCount;
                            i24 &= (int)Test.instanceCount;
                            sFld >>>= (short)i24;
                            lArr[i + 1] = (long)11.16686;
                            break;
                        case 97:
                        case 98:
                            i1 *= i1;
                            sFld = (short)Test.instanceCount;
                        case 99:
                            i24 = i23;
                            i1 += (int)-73.92401;
                            break;
                        case 100:
                            i1 += (6285 + (i23 * i23));
                            break;
                        case 101:
                            Test.instanceCount &= 26561;
                            break;
                        }
                    } while (++i23 < 1);
                    break;
                case 86:
                    Test.instanceCount += Test.instanceCount;
                case 93:
                    iFld = -35107;
                case 100:
                    Test.instanceCount >>= -89;
                    break;
                case 94:
                    i24 *= (int)Test.instanceCount;
                    break;
                default:
                    i24 <<= 4;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
