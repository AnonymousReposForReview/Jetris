package tests.javafuzzer1574;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:12:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3991820440L;
    public static float fFld=-1.440F;
    public static int iFld=167;
    public static short sFld=19733;
    public volatile int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i9) {

        int i10=-45, i11=-7, i12=-130, i13=218, i14=-225, i15=-25216, iArr[]=new int[N];
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -1573455568L);
        FuzzerUtils.init(byArr, (byte)45);
        FuzzerUtils.init(iArr, 38919);

        i10 = 1;
        while (++i10 < 255) {
            for (i11 = 1; 6 > i11; ++i11) {
                i13 = 1;
                do {
                    Test.fFld += i9;
                    i9 *= -48990;
                    lArr[i13 - 1] = i12;
                    byArr[i10] >>= (byte)i10;
                    i12 = 59;
                } while ((i13 += 3) < 2);
            }
            iArr[i10 - 1] += i12;
            i12 *= (int)Test.instanceCount;
            Test.instanceCount /= (i11 | 1);
            for (i14 = 1; i14 < 6; ++i14) {
                i9 = i11;
                i9 = i11;
                i12 += (i14 ^ i11);
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4) {

        int i5=11, i6=1543, i7=-10360, i8=7, i16=-59569, i17=13, i18=8, iArr1[][]=new int[N][N];
        double d=2.59602;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 46346);
        FuzzerUtils.init(lArr1, -6L);

        for (i5 = 1; i5 < 158; ++i5) {
            for (i7 = i5; i7 < 10; ++i7) {
                Test.instanceCount += (((8 * i7) + (Test.instanceCount - 32541)) * iMeth1(i4));
                iArr1 = iArr1;
                Test.instanceCount ^= -13;
                try {
                    i8 = (215 % iArr1[i5][i5 + 1]);
                    i6 = (i8 % i7);
                    iArr1[i7][i5 + 1] = (-70 / i7);
                } catch (ArithmeticException a_e) {}
            }
            i4 -= (int)Test.fFld;
            i4 >>= i7;
            for (i16 = 1; 10 > i16; ++i16) {
                i4 += (int)d;
                lArr1[i16] += i5;
            }
            i8 += (i5 - Test.instanceCount);
            i6 = i8;
            i18 = i16;
            Test.fFld -= (float)d;
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i16 + i17 + Double.doubleToLongBits(d) + i18 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i, int i1, int i2) {

        int i3=-11, i19=159, i20=9, i21=-43, i22=-27659, i23=-230, i24=-244, i25=-85, iArr2[][]=new int[N][N];
        boolean b=false;

        FuzzerUtils.init(iArr2, 11303);

        i3 = 223;
        do {
            if (i2 != 0) {
            }
            vMeth(i2);
            i = (int)Test.instanceCount;
            i1 >>= i1;
            if (b) {
                for (i19 = 21; i19 > 1; i19--) {
                    i1 = (int)Test.instanceCount;
                    Test.instanceCount >>= i21;
                    iArr2[i3 - 1][i3 - 1] |= i2;
                }
                for (i22 = i3; i22 < 21; i22++) {
                    iArr2[i3 + 1][i22] = (int)Test.instanceCount;
                    for (i24 = 1; i24 < 1; ++i24) {
                        i -= i22;
                        if (i2 != 0) {
                        }
                    }
                }
            }
        } while ((i3 -= 3) > 0);
        long meth_res = i + i1 + i2 + i3 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i26=1822, i27=5, i28=59875, i29=-14, i30=-46962, i31=3, i32=-131, i33=-7;
        double d2=-39.48085;
        byte by=-72;
        boolean b1=false;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)29968);

        iMeth(60177, Test.iFld, i26);
        for (i27 = 249; i27 > 11; i27 -= 3) {
            for (i29 = 2; i29 < 317; i29++) {
                Test.iFld = i26;
                Test.iFld += i30;
                for (i31 = i27; i31 < 2; i31++) {
                    double d1=-1.17429;
                    i32 += (((i31 * i29) + i27) - i28);
                    i28 <<= i30;
                    Test.fFld = (float)d1;
                    Test.iFld += (int)Test.instanceCount;
                    i30 = i28;
                    Test.iFld += i32;
                    d1 /= (i29 | 1);
                    d1 = -212;
                    Test.instanceCount += i30;
                    iArrFld[i29 - 1] = (int)Test.instanceCount;
                }
                switch (((i27 % 9) * 5) + 24) {
                case 29:
                    i26 = (int)Test.instanceCount;
                case 60:
                    i26 ^= (int)Test.instanceCount;
                    Test.instanceCount += i30;
                    i33 = 1;
                    while (++i33 < 2) {
                        Test.fFld -= i27;
                        d2 /= (by | 1);
                        i30 += (int)Test.instanceCount;
                        i28 -= Test.iFld;
                        Test.iFld += (i33 + by);
                        sArr[i29 - 1][i29 + 1] *= (short)i30;
                        Test.instanceCount = i28;
                    }
                case 41:
                    try {
                        Test.iFld = (i31 % 88);
                        i32 = (i29 / i31);
                        iArrFld[i27 + 1] = (67 % i30);
                    } catch (ArithmeticException a_e) {}
                    Test.fFld += i29;
                    break;
                case 63:
                    i32 -= Test.sFld;
                case 51:
                    b1 = b1;
                    break;
                case 33:
                    Test.instanceCount += i32;
                    break;
                case 26:
                    i30 = i32;
                    break;
                case 64:
                    iArrFld = FuzzerUtils.int1array(N, (int)155);
                    break;
                case 35:
                    Test.fFld += (float)d2;
                    break;
                default:
                    i32 -= i27;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
