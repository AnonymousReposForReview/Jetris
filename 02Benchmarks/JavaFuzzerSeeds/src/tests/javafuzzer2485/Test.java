package tests.javafuzzer2485;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:22:23 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=64L;
    public static volatile short sFld=19281;
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -78.14916);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i6, int i7) {

        float f=1.589F, f1=2.212F;
        int i8=-6, i9=9, i10=11, i11=6247, i12=23615, i13=25684, i14=64221;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -44927L);

        f = i6;
        i8 <<= (int)8324955092835708150L;
        for (i9 = 293; i9 > 17; --i9) {
            i6 = i6;
            for (f1 = 1; f1 < 6; f1++) {
                i12 *= i8;
                i7 = -2;
                if (true) continue;
                i11 -= i9;
                for (i13 = 1; i13 < 2; i13++) {
                    Test.instanceCount += 10693;
                    if (b) continue;
                    lArr = FuzzerUtils.long1array(N, (long)-1098487367L);
                    f -= l1;
                    i12 >>= i14;
                }
            }
        }
        vMeth_check_sum += l1 + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 +
            i12 + i13 + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth() {

        int i15=51453, i16=-56099, i17=70, i18=-194, iArr1[]=new int[N];
        long l2=-47L;
        double d1=-1.64692;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -77.564F);
        FuzzerUtils.init(iArr1, 11005);

        vMeth(Test.instanceCount, 119, i15);
        i16 = 288;
        do {
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount += i16;
            l2 = 1;
            while (++l2 < 11) {
                i15 *= i16;
                for (i17 = 1; i17 < 1; ++i17) {
                    i18 /= (int)(i15 | 1);
                    i15 = i17;
                    fArr[(int)(l2 - 1)] = i18;
                    switch ((((i15 >>> 1) % 2) * 5) + 100) {
                    case 109:
                        Test.instanceCount += (54 + (i17 * i17));
                        Test.instanceCount >>>= Test.sFld;
                        Test.instanceCount *= (long)d1;
                        break;
                    case 103:
                        iArr1[i16] = i16;
                    default:
                        Test.instanceCount = i16;
                    }
                }
            }
        } while ((i16 -= 2) > 0);
        long meth_res = i15 + i16 + l2 + i17 + i18 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l) {

        int i2=-7, i3=44438, i4=59, i5=14, i19=75, i20=-197, i21=8, i22=7, iArr[]=new int[N];
        double d=-98.74771;
        byte by=108;
        float f2=0.985F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 26077);
        FuzzerUtils.init(lArr1, -9L);

        i2 = 1;
        while (++i2 < 359) {
            iArr[i2 + 1] = iArr[(i3 >>> 1) % N];
            i3 = ((i3++) & i3);
            for (i4 = 1; i4 < 5; ++i4) {
                d -= -28.126565;
                Test.instanceCount = (long)(i4 - (i2 * Math.sqrt(64.27671)));
                by = (byte)(i3 <<= (int)lMeth());
                l = 156L;
                d += l;
                for (i19 = 1; i19 < 2; ++i19) {
                    i20 += (i19 | l);
                    f2 += i19;
                }
                for (i21 = 1; i21 < 2; i21++) {
                    Test.instanceCount -= i2;
                    lArr1[i4 - 1] *= Test.sFld;
                }
            }
        }
        long meth_res = l + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d) + by + i19 + i20 + Float.floatToIntBits(f2)
            + i21 + i22 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-30387, i1=-33640, i23=-102, i24=12, i25=-240, i26=14, iArr2[]=new int[N], iArr3[][]=new int[N][N];
        float f3=-69.69F, f4=-54.908F;
        double d2=-27.25407;
        boolean b1=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr2, 213);
        FuzzerUtils.init(lArr2, 782566915829128199L);
        FuzzerUtils.init(iArr3, -181);

        for (i = 4; 229 > i; ++i) {
            Test.instanceCount = iMeth(Test.instanceCount);
            i1 += (int)(27.555F + (i * i));
            i1 += (((i * i1) + i) - i1);
            Test.instanceCount <<= i;
            i1 += i;
            i1 += -18005;
            i23 = 1;
            while (++i23 < 112) {
                for (f3 = 1; f3 < 1; f3 += 3) {
                    try {
                        i24 = (1944550799 / iArr2[i23]);
                        i1 = (-39 / i24);
                        i24 = (i1 % 689505063);
                    } catch (ArithmeticException a_e) {}
                    i24 *= (int)d2;
                    i1 += i;
                    i24 -= (int)-103.56101;
                    iArr2[i] += i24;
                    i24 += (int)Test.instanceCount;
                }
                d2 -= 8176031670228602410L;
                iArr2[i23 + 1] += 11;
                switch ((i23 % 9) + 84) {
                case 84:
                    for (i25 = 1; i25 < 1; i25++) {
                        i24 -= i25;
                        if (b1) {
                            Test.dArrFld[i23 + 1][i23] -= 29;
                            switch ((i25 % 10) + 93) {
                            case 93:
                                switch (((i23 % 2) * 5) + 42) {
                                case 46:
                                    f4 *= f3;
                                    i24 = (int)-64.198F;
                                    lArr2[i25 + 1] >>>= -125;
                                    break;
                                case 47:
                                }
                                i24 += i25;
                                i26 = i26;
                                break;
                            case 94:
                                iArr2[i + 1] += i23;
                                break;
                            case 95:
                                iArr2[i + 1] = (int)-27.154F;
                                break;
                            case 96:
                                i1 <<= i23;
                                break;
                            case 97:
                                i1 -= (int)Test.instanceCount;
                            case 98:
                                i26 += (i25 * i25);
                                break;
                            case 99:
                                i26 += (int)Test.instanceCount;
                            case 100:
                                i26 += (((i25 * f4) + i26) - Test.instanceCount);
                                break;
                            case 101:
                                i24 = 61725;
                                break;
                            case 102:
                                i24 *= (int)f3;
                                break;
                            default:
                                i1 -= (int)d2;
                            }
                        }
                    }
                    break;
                case 85:
                    i1 -= -13;
                    break;
                case 86:
                    iArr2[i] = i26;
                    break;
                case 87:
                    Test.instanceCount += (i23 ^ i1);
                case 88:
                    i1 += i23;
                    break;
                case 89:
                    Test.instanceCount *= i24;
                case 90:
                    i26 += (-230 + (i23 * i23));
                    break;
                case 91:
                    Test.instanceCount *= i;
                    break;
                case 92:
                    Test.instanceCount += (((i23 * i25) + Test.instanceCount) - i25);
                    break;
                default:
                    iArr2 = iArr3[i23];
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
