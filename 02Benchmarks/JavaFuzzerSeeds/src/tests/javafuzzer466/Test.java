package tests.javafuzzer466;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:13:11 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-2L;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 114);
        FuzzerUtils.init(Test.lArrFld, 5L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, long l, int i8) {

        int i9=-7, i10=53061;
        float f=-2.756F;

        for (i9 = 16; i9 < 389; ++i9) {
            i7 = 92;
            i10 += (int)f;
            i10 = i7;
            i7 -= i9;
            i8 += (i9 * i9);
            i8 += i9;
        }
        vMeth1_check_sum += i7 + l + i8 + i9 + i10 + Float.floatToIntBits(f);
    }

    public void vMeth() {

        int i6=-2715, i11=-7108, i12=-372, i13=12, i14=16;
        double d2=0.69043;
        short s=13234;

        Test.instanceCount += i6;
        d2 = 1;
        while (++d2 < 211) {
            vMeth1(i6, Test.instanceCount, i6);
            for (i11 = (int)(d2); i11 < 8; ++i11) {
                i12 -= (int)Test.instanceCount;
                i12 += (98 + (i11 * i11));
                Test.instanceCount *= (long)d2;
                for (i13 = 1; i13 < 1; i13++) {
                    i6 -= (int)Test.instanceCount;
                    Test.instanceCount = i13;
                    i6 += (i13 ^ i14);
                    i14 *= s;
                    i12 -= (int)Test.instanceCount;
                    Test.instanceCount >>= -267468979347050738L;
                    i12 = i12;
                }
            }
        }
        vMeth_check_sum += i6 + Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + s;
    }

    public long lMeth(int i5, byte by) {

        int i15=178, i16=0, i17=-53658, i18=14;
        double d3=-3.103084;
        float f1=33.104F;

        vMeth();
        i5 += i5;
        for (i15 = 14; i15 < 309; i15++) {
            d3 = f1;
            if (false) {
                for (i17 = 6; 1 < i17; --i17) {
                    i16 = 125;
                    i16 += (int)(5L + (i17 * i17));
                    i5 *= (int)d3;
                    i5 *= i17;
                    i5 += (int)(-2790657666L + (i17 * i17));
                    if (false) continue;
                }
            }
            Test.iArrFld[i15 + 1] += i16;
        }
        Test.instanceCount <<= i18;
        long meth_res = i5 + by + i15 + i16 + Double.doubleToLongBits(d3) + Float.floatToIntBits(f1) + i17 + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-49.68013, d1=-31.2731;
        int i=-14, i1=-65256, i2=29559, i3=-12790, i4=3, i19=-10, i20=208, i21=1, i22=9, iArr[]=new int[N];
        byte by1=-125, byArr[]=new byte[N];
        float f2=0.193F;
        short s1=-3308, sArr[]=new short[N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(byArr, (byte)90);
        FuzzerUtils.init(sArr, (short)-27949);

        d %= ((((-(-(i + 19901))) + (i + i)) - (i++)) | 1);
        i1 = 1;
        while (++i1 < 256) {
            for (i2 = i1; i2 < 98; ++i2) {
                for (d1 = 1; d1 < 1; ++d1) {
                    Test.iArrFld = Test.iArrFld;
                    Test.iArrFld[i2] = (int)lMeth(i1, by1);
                    i3 += (int)d1;
                    f2 = i1;
                    i += (int)d1;
                    f2 -= (float)2.121688;
                }
                Test.instanceCount -= i1;
                iArr[i1 + 1] = (int)Test.instanceCount;
                i = i4;
                i19 = 1;
                while (++i19 < 1) {
                    i4 *= i2;
                }
                for (i20 = i1; i20 < 1; i20++) {
                    i21 += i19;
                    Test.instanceCount -= i1;
                    i >>>= -21;
                    byArr = byArr;
                    i -= i1;
                    i21 = i;
                    i21 = (int)Test.instanceCount;
                    Test.lArrFld[i1] += s1;
                    i += -160;
                }
                i3 += (((i2 * i22) + i1) - i);
                i3 += -111;
                Test.instanceCount = i4;
            }
            iArr[i1] -= i3;
            sArr[i1] -= (short)i2;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
