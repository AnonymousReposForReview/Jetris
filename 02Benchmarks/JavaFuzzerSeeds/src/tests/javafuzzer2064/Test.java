package tests.javafuzzer2064;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:26:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1622147235L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, float f1) {

        int i5=-38643, i6=-99, i7=-9744, i8=-17912, i9=12, iArr[][]=new int[N][N];
        boolean b=true;
        byte by=111;

        FuzzerUtils.init(iArr, -89);

        for (i5 = 10; i5 < 205; i5++) {
            if (b) continue;
            f1 += 1;
            i7 = 1;
            while (++i7 < 8) {
                iArr[(i4 >>> 1) % N][i7] = i7;
                i4 = i6;
                for (i8 = i5; i8 < 1; ++i8) {
                    iArr[i7][i5] ^= i6;
                    Test.instanceCount += (i8 * i8);
                    i6 += (-8 + (i8 * i8));
                    Test.instanceCount += (i8 ^ i9);
                    if (i4 != 0) {
                        vMeth2_check_sum += i4 + Float.floatToIntBits(f1) + i5 + i6 + (b ? 1 : 0) + i7 + i8 + i9 + by +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    i9 += i9;
                    by = (byte)-8253;
                    i6 >>= 0;
                }
            }
        }
        vMeth2_check_sum += i4 + Float.floatToIntBits(f1) + i5 + i6 + (b ? 1 : 0) + i7 + i8 + i9 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1, float f, long l) {

        int i2=170, i3=-1701, i10=42, iArr1[]=new int[N];
        double d=-110.9864;
        short s=-23583;
        byte by1=-74;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 6);
        FuzzerUtils.init(lArr, 72L);

        for (i2 = 2; i2 < 134; ++i2) {
            f /= (i2 | 1);
            vMeth2(i2, f);
            l += i2;
            if (b1) {
                d -= i1;
                switch ((i2 % 9) + 95) {
                case 95:
                    i3 += i2;
                    i1 >>= i1;
                    try {
                        i1 = (-34871 / i3);
                        i1 = (20 / iArr1[i2 - 1]);
                        i1 = (iArr1[i2] / 140);
                    } catch (ArithmeticException a_e) {}
                    i1 <<= s;
                    break;
                case 96:
                    by1 += (byte)i3;
                    break;
                case 97:
                    i3 -= i3;
                    i10 = i1;
                    Test.instanceCount /= (l | 1);
                    break;
                case 98:
                    lArr[i2] <<= i1;
                    break;
                case 99:
                    i1 += (((i2 * i1) + f) - Test.instanceCount);
                case 100:
                    i3 >>= (int)Test.instanceCount;
                case 101:
                    if (i10 != 0) {
                        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + l + i2 + i3 + Double.doubleToLongBits(d) + s
                            + by1 + i10 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                case 102:
                    Test.instanceCount = -13;
                    break;
                case 103:
                    s += (short)(((i2 * i2) + f) - Test.instanceCount);
                    break;
                }
            }
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + l + i2 + i3 + Double.doubleToLongBits(d) + s + by1 + i10 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i) {

        float f2=-1.789F;
        long l1=-9L;
        int i11=56424, i12=134, i13=6, iArr2[]=new int[N];
        double d1=39.43977;
        boolean b2=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -12218);
        FuzzerUtils.init(bArr, true);

        vMeth1(i, f2, 3900548570L);
        l1 = 1;
        do {
            Test.instanceCount = i;
            if (true) {
                i11 = 1;
                do {
                    d1 += i;
                    i *= (int)-7371012087593515236L;
                    i -= (int)Test.instanceCount;
                    Test.instanceCount = i11;
                    for (i12 = 1; i12 < 1; ++i12) {
                        iArr2[i12 + 1] += (int)l1;
                        i -= (int)Test.instanceCount;
                    }
                    i13 = 175;
                    d1 += i12;
                    i *= i;
                } while (++i11 < 6);
            } else if (b2) {
                Test.instanceCount -= -42320;
            } else if (b2) {
                bArr[(int)(l1 + 1)] = b2;
            } else {
                Test.instanceCount = -6L;
            }
        } while (++l1 < 285);
        vMeth_check_sum += i + Float.floatToIntBits(f2) + l1 + i11 + Double.doubleToLongBits(d1) + i12 + i13 + (b2 ? 1
            : 0) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-8, i16=18043, i17=14574, i18=18, i19=45, i20=11, i21=37258;
        boolean b3=true;
        short s1=29780;
        float f3=-116.454F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -87.3132);

        vMeth(30214);
        Test.instanceCount &= 45658;
        Test.iArrFld[(i15 >>> 1) % N] >>>= (int)Test.instanceCount;
        b3 = b3;
        if (b3) {
            i15 |= s1;
            for (i16 = 16; i16 < 322; ++i16) {
                i18 = 1;
                while (++i18 < 82) {
                    byte by2=84;
                    for (i19 = 1; i19 < 1; ++i19) {
                        try {
                            i20 = (1307079128 % i15);
                            i15 = (i18 % 12060);
                            i20 = (i17 % Test.iArrFld[i19 - 1]);
                        } catch (ArithmeticException a_e) {}
                        dArr[i16 + 1] -= Test.instanceCount;
                        i17 += (int)Test.instanceCount;
                        f3 += i19;
                        i17 += -14;
                        try {
                            i15 = (i15 / 113);
                            i17 = (i15 / 31319);
                            i20 = (Test.iArrFld[i19 - 1] % Test.iArrFld[i18 - 1]);
                        } catch (ArithmeticException a_e) {}
                        f3 = i19;
                        i17 = i19;
                    }
                    if (false) break;
                    switch (((i16 >>> 1) % 2) + 84) {
                    case 84:
                        f3 = i16;
                        i17 |= i18;
                        break;
                    case 85:
                        switch ((((-61 >>> 1) % 6) * 5) + 110) {
                        case 133:
                            f3 *= i15;
                            i21 = 1;
                            do {
                                i17 <<= i21;
                                if (false) continue;
                            } while (++i21 < 1);
                            i17 <<= -8952;
                            break;
                        case 125:
                            i17 -= (int)Test.instanceCount;
                            i20 += (((i18 * i20) + Test.instanceCount) - by2);
                            i15 -= i21;
                        case 128:
                            f3 += (((i18 * f3) + Test.instanceCount) - Test.instanceCount);
                            break;
                        case 115:
                            Test.iArrFld[i16] += i19;
                            break;
                        case 135:
                            i17 = i20;
                            break;
                        case 116:
                            i17 += (i18 * i18);
                            break;
                        }
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
