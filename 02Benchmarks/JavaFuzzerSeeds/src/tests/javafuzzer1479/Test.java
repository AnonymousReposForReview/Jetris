package tests.javafuzzer1479;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:18:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static double dFld=64.123074;
    public static short sFld=-12449;
    public static int iFld=55;
    public static float fFld=-100.427F;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 227);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long lMeth2_check_sum = 0;

    public static long lMeth2(int i5) {

        int i6=-7, i7=-39158, i8=-69, i9=10, iArr1[]=new int[N];
        float f=-33.725F, f1=-1.709F;
        boolean b=false;

        FuzzerUtils.init(iArr1, -239);

        i6 = 1;
        while (++i6 < 280) {
            i5 = i6;
            for (i7 = 1; 6 > i7; ++i7) {
                switch (((i7 % 3) * 5) + 19) {
                case 25:
                    switch (((i7 % 6) * 5) + 44) {
                    case 51:
                    case 53:
                        for (f = 2; f > 1; --f) {
                            i9 <<= (int)Test.instanceCount;
                            iArr1[i6] >>= 144;
                            i8 += i8;
                            i8 = (int)Test.instanceCount;
                            f1 += (f * i6);
                            i5 = i7;
                            if (b) {
                                if (i5 != 0) {
                                }
                                Test.dFld += i5;
                            } else if (b) {
                                iArr1[i6 + 1] += i9;
                            }
                        }
                        break;
                    case 52:
                        iArr1[i6] = i8;
                        break;
                    case 73:
                        Test.sFld += (short)(145L + (i7 * i7));
                        break;
                    case 65:
                        i8 += i7;
                    case 72:
                        i5 = (int)Test.instanceCount;
                        break;
                    default:
                        iArr1[i7] <<= Test.iFld;
                    }
                    break;
                case 24:
                    Test.iFld |= (int)Test.instanceCount;
                    break;
                case 34:
                    i9 >>>= (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + i9 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        lMeth2_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth1(int i4, long l1) {

        int i10=47668, i11=27435, i12=2, i13=-66;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, -51190L);
        FuzzerUtils.init(bArr, true);

        lArr[(i4 >>> 1) % N] = Long.reverseBytes(lMeth2(i4) >> -11L);
        for (i10 = 5; i10 < 230; i10++) {
            Test.iFld |= 13746;
            Test.iArrFld[i10] += i11;
            i11 += (i10 * Test.iFld);
            i11 += i10;
            Test.iArrFld[i10 - 1] += -20325;
            Test.iArrFld[i10 + 1] -= (int)Test.instanceCount;
            Test.iArrFld = Test.iArrFld;
            Test.instanceCount -= i11;
            for (i12 = i10; i12 < 7; i12++) {
                if (false) break;
                bArr[i10 + 1] = true;
                i13 %= -43595;
                Test.iFld >>= i11;
            }
        }
        long meth_res = i4 + l1 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i3) {

        double d=88.119196;

        i3 += (int)((d = (Test.instanceCount + Test.instanceCount)) * (i3 >> lMeth1(Test.iFld, Test.instanceCount)));
        long meth_res = i3 + Double.doubleToLongBits(d);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-56018, i1=-2, i2=232, i14=-2, i15=-11, iArr[]=new int[N];
        long l=2089031522615815315L;
        boolean b1=true;
        byte by=-59, byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(byArr, (byte)105);

        for (i = 7; i < 173; i++) {
            switch ((i % 2) + 97) {
            case 97:
                for (l = 6; l < 151; ++l) {
                    iArr[i] <<= (int)(l - lMeth(i));
                    for (i14 = 1; i14 < 2; i14++) {
                        if (b1) {
                            Test.fFld -= 132;
                            Test.iFld <<= i;
                            Test.instanceCount *= i2;
                            i15 += (i14 ^ Test.iFld);
                        } else {
                            i15 += Test.iFld;
                        }
                        Test.iFld = by;
                        switch ((i % 10) + 53) {
                        case 53:
                            i1 -= i;
                            Test.instanceCount += 126;
                            i15 = i1;
                            Test.iFld += by;
                            break;
                        case 54:
                            iArr[i14] = i;
                            if (b1) break;
                            if (true) continue;
                            break;
                        case 55:
                            Test.instanceCount -= Test.iFld;
                            lArrFld = lArrFld;
                            iArr[i] = 3;
                            Test.fFld += (i14 * i);
                        case 56:
                            if (b1) {
                                Test.fFld *= -2219816823L;
                                Test.instanceCount >>= i14;
                                Test.iFld >>= (int)l;
                                i2 = i;
                            }
                        case 57:
                            lArrFld[i + 1] += i1;
                            break;
                        case 58:
                            i2 = i1;
                            break;
                        case 59:
                            i2 -= i2;
                            break;
                        case 60:
                            byArr[i14] += (byte)i;
                            break;
                        case 61:
                            by *= (byte)i15;
                        case 62:
                            Test.instanceCount += i2;
                            break;
                        }
                    }
                }
                break;
            case 98:
                i1 += (int)(0.951F + (i * i));
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  lMeth2 ->  lMeth2 lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
