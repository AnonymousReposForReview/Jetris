package tests.javafuzzer1697;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:46:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=40L;
    public static volatile short sFld=9956;
    public int iFld=155;
    public static volatile float fFld=-72.0F;
    public static boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -76.442F);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, int i7, int i8) {

        byte by1=-81;
        int i9=244, i10=-4902, i11=7, i12=5, i13=-13, i14=45, iArr[][]=new int[N][N];
        float f=-85.567F;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -56);
        FuzzerUtils.init(lArr, 33810L);

        iArr = iArr;
        Test.fArrFld[(-202 >>> 1) % N] += i6;
        iArr = iArr;
        i6 = by1;
        iArr[(0 >>> 1) % N][(i7 >>> 1) % N] <<= (int)Test.instanceCount;
        for (i9 = 198; i9 > 8; i9 -= 3) {
            for (i11 = 1; 24 > i11; ++i11) {
                try {
                    i12 = (iArr[i9 + 1][i9 + 1] / -94);
                    iArr[i11 - 1][i11] = (i6 / 57194);
                    i7 = (-198 % iArr[i11 + 1][i11 + 1]);
                } catch (ArithmeticException a_e) {}
            }
            Test.instanceCount = Test.instanceCount;
            for (i13 = 1; 24 > i13; ++i13) {
                i14 >>= i9;
            }
            i8 += i10;
            lArr[i9] >>= by1;
            f *= Test.instanceCount;
            b = b;
        }
        vMeth1_check_sum += i6 + i7 + i8 + by1 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static boolean bMeth(int i5) {

        float f1=-2.477F;
        int i15=10, i16=-58, i17=-31, i18=-33019, i19=32166, i20=7;
        boolean b1=true;

        vMeth1(i5, i5, i5);
        switch (((i5 >>> 1) % 7) + 15) {
        case 15:
            for (f1 = 4; f1 < 121; f1++) {
                i16 = 1;
                do {
                    i15 += (int)Test.instanceCount;
                    for (i17 = 1; i17 > 1; i17 -= 2) {
                        Test.instanceCount -= i5;
                        if (i16 != 0) {
                            return ((int)(i5 + Float.floatToIntBits(f1) + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + i19 +
                                i20)) % 2 > 0;
                        }
                        b1 = b1;
                    }
                    i15 += (int)f1;
                    for (i19 = (int)(f1); i19 < 1; i19++) {
                        i5 += (((i19 * i19) + i5) - Test.instanceCount);
                        Test.instanceCount -= -4227;
                        i5 >>= i15;
                        i20 = -215;
                    }
                } while (++i16 < 13);
            }
            break;
        case 16:
            i20 += i20;
            break;
        case 17:
            i18 >>= i19;
            break;
        case 18:
            i20 -= 132;
            break;
        case 19:
            Test.fFld -= Test.fFld;
        case 20:
            i15 = (int)1.65657;
            break;
        case 21:
            Test.fFld -= i20;
        }
        long meth_res = i5 + Float.floatToIntBits(f1) + i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + i19 + i20;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth() {

        long l=-176L;
        int i2=-12, i3=-5607, i4=2, i21=9068, i22=13, iArr1[]=new int[N];
        byte by=6;
        boolean b2=true;

        FuzzerUtils.init(iArr1, 54829);

        if (b2) {
            for (l = 8; l < 182; l++) {
                double d=0.13093;
                i2 *= by;
                d += ((--i2) + ((l % (i2 | 1)) + (i2--)));
                i2 = (int)(((++i2) - (i2++)) * ((l * i2) - (i2 &= 141)));
                for (i3 = 9; i3 > 1; i3 -= 3) {
                    if (bMeth(i2)) break;
                    i21 = 1;
                    do {
                        Test.instanceCount += i2;
                        i2 += (((i21 * Test.fFld) + i21) - i4);
                        i4 = i4;
                        if (b2) {
                            iArr1[i3 - 1] += i3;
                            Test.bArrFld[(int)(l + 1)] = b2;
                            i22 = (int)Test.instanceCount;
                        } else if (b2) {
                            by <<= (byte)-11;
                        }
                    } while (++i21 < 5);
                }
            }
        } else {
            i22 += -53763;
        }
        vMeth_check_sum += l + i2 + by + i3 + i4 + i21 + (b2 ? 1 : 0) + i22 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=4, i1=150, i23=17766, i24=132, i25=-2, i26=-5, i27=18625, i28=-11, i29=-35517, i30=-26290, iArr2[][]=new
            int[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -107.9293);
        FuzzerUtils.init(iArr2, 18941);

        Test.sFld >>= (short)(++iFld);
        for (i = 125; i > 7; i -= 2) {
            vMeth();
            dArr[i - 1] += i;
            iFld = iFld;
            iFld <<= iFld;
            Test.sFld += (short)(i - i23);
            Test.fFld = (float)2.10545;
            for (i24 = 10; i24 < 240; i24++) {
                iFld -= (int)Test.fFld;
                i23 -= 11;
                for (i26 = 1; 2 > i26; ++i26) {
                    iArr2[i][i26 - 1] |= i1;
                    i27 = i25;
                    Test.instanceCount = (long)1.113425;
                }
                for (i28 = 2; i28 > i; --i28) {
                    i1 = i27;
                    if (Test.bFld) continue;
                    Test.instanceCount = Test.instanceCount;
                    Test.instanceCount = i28;
                    if (Test.bFld) {
                        i27 += (((i28 * iFld) + i27) - i29);
                        if (Test.bFld) break;
                        Test.sFld = Test.sFld;
                    } else if (Test.bFld) {
                        i27 -= -37;
                    } else if (Test.bFld) {
                        iArr2[i] = iArr2[i + 1];
                        i30 >>>= i24;
                        i29 -= i23;
                    } else {
                        i30 = (int)-17.728F;
                        Test.instanceCount -= i24;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
