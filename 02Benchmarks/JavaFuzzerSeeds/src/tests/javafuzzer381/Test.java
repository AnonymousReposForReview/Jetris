package tests.javafuzzer381;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:09:15 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3900431930L;
    public int iFld=-212;
    public static byte byFld=65;
    public int iFld1=-46606;
    public int iArrFld[][]=new int[N][N];

    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public boolean bMeth(long l, double d) {

        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4L);

        iFld -= (int)((lArr[(iFld >>> 1) % N]++) - Math.sqrt(Test.instanceCount * Test.instanceCount));
        long meth_res = l + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1(byte by, float f) {

        int i4=186, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -202);

        i4 |= i4;
        iArr[(176 >>> 1) % N] = i4;
        i4 = (int)Test.instanceCount;
        i4 <<= -12;
        i4 = i4;
        vMeth1_check_sum += by + Float.floatToIntBits(f) + i4 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l1) {

        float f1=-2.115F;
        int i5=1, i6=8, i7=7, i8=181, i9=137, i10=59087, i11=10, i12=-49188, iArr1[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, 4);

        vMeth1(Test.byFld, f1);
        i5 >>= 2;
        i6 = 336;
        do {
            short s=-7820;
            for (i7 = 1; i7 < 5; i7 += 2) {
                for (i9 = 1; 3 > i9; ++i9) {
                    i8 = (int)-1.121228;
                    i5 <<= i7;
                    Test.byFld += (byte)(((i9 * i9) + i7) - i8);
                }
            }
            Test.byFld >>>= (byte)s;
            i10 += -88;
            if (b) {
                f1 += Test.instanceCount;
                for (i11 = 1; 5 > i11; ++i11) {
                    iArr1[i6 + 1] = (int)2.852F;
                    Test.instanceCount += (i11 * i11);
                }
            } else {
                b = b;
                vMeth_check_sum += l1 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 :
                    0) + FuzzerUtils.checkSum(iArr1);
                return;
            }
        } while (--i6 > 0);
        vMeth_check_sum += l1 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i2, int i3) {

        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)27);

        i2 <<= byArr[(2 >>> 1) % N];
        vMeth(-189L);
        long meth_res = i2 + i3 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=53222, i1=-11, i13=0, i14=-58176, i15=-5749, i16=-11, i17=45004, i18=66, i19=-99;
        double d1=68.94536, d2=-55.47665, d3=-82.22624;
        float f2=-1.352F;
        boolean b1=true;

        for (i = 14; i < 320; i++) {
            i1 = Math.min(i1, ++i1);
            if (bMeth(Test.instanceCount, d1)) {
            } else {
                i1 >>>= iMeth(i, 0);
            }
            switch (((i % 1) * 5) + 19) {
            case 21:
                iFld = iFld;
                iFld *= Test.byFld;
                break;
            }
        }
        for (d2 = 8; d2 < 171; d2++) {
            iArrFld[(int)(d2)][(int)(d2)] -= 229;
            for (i14 = (int)(d2); i14 < 154; ++i14) {
                i15 += (i14 * i14);
                d3 = 1;
                do {
                    iFld1 += (int)(d3 + Test.instanceCount);
                    f2 += iFld1;
                    i1 += (int)((long)d3 | Test.instanceCount);
                    Test.instanceCount = -12;
                } while (++d3 < 1);
                iFld -= i;
                d1 -= i13;
                i1 = i14;
            }
            i15 = 7;
            iFld1 = (int)Test.instanceCount;
            Test.instanceCount = -8963;
            for (i16 = 1; i16 < 154; i16 += 2) {
                f2 = iFld1;
                i13 *= i16;
                b1 = b1;
                switch ((((i17 >>> 1) % 7) * 5) + 82) {
                case 96:
                    for (i18 = 1; i18 < 3; ++i18) {
                        i15 *= (int)Test.instanceCount;
                        f2 += i18;
                    }
                    break;
                case 108:
                    Test.instanceCount >>= iFld1;
                    break;
                case 87:
                    Test.instanceCount *= i13;
                    break;
                case 86:
                    iArrFld[i16 - 1][i16 - 1] *= i18;
                    break;
                case 100:
                    f2 = Test.instanceCount;
                    break;
                case 112:
                    Test.byFld = (byte)Test.instanceCount;
                case 88:
                    i19 = i;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
