package tests.javafuzzer3157;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:00:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3828460346836007380L;
    public static short sFld=-4362;
    public static int iFld=3;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i3, long l2) {

        int i4=15867, i5=3, i6=-11782, i7=15, i8=223, i9=-14;
        double d1=-71.120450;
        float f=-35.26F;

        Test.instanceCount = i3;
        l1 ^= i3;
        i3 *= i3;
        for (i4 = 11; i4 < 181; i4++) {
            for (i6 = 1; i6 < 9; ++i6) {
                i3 = i3;
                l2 = i4;
                for (i8 = 1; i8 < 2; ++i8) {
                    d1 = i3;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)60080);
                    Test.iArrFld[i6 + 1] |= i3;
                    i9 += i8;
                    f -= l1;
                    i3 += (i8 ^ Test.sFld);
                    i7 = i8;
                }
            }
        }
        vMeth2_check_sum += l1 + i3 + l2 + i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f);
    }

    public static void vMeth1(long l) {

        int i2=26197, i10=254, i11=3, i12=-57315, i13=29, i14=8066, i15=151, iArr[][]=new int[N][N];
        double d=1.63553;
        float f1=2.751F;

        FuzzerUtils.init(iArr, 12);

        Test.sFld = (short)i2;
        l -= (i2 - (iArr[(i2 >>> 1) % N][(i2 >>> 1) % N] % ((i2 + i2) | 1)));
        d = -8L;
        i2 >>= (int)Test.instanceCount;
        vMeth2(l, -3, 4L);
        for (i10 = 10; 279 > i10; ++i10) {
            switch (((i10 % 6) * 5) + 21) {
            case 23:
                f1 = Test.sFld;
                i11 = i10;
                for (i12 = 6; i12 > i10; i12--) {
                    Test.iFld -= (int)Test.instanceCount;
                    iArr[i12][i10 - 1] = i2;
                    for (i14 = 1; i10 < i14; i14--) {
                        Test.iArrFld[i12 - 1] = (int)Test.instanceCount;
                    }
                    i13 <<= i2;
                }
                break;
            case 27:
                Test.sFld = (short)i11;
                break;
            case 42:
                Test.iFld = i10;
                break;
            case 48:
                i11 *= (int)l;
                break;
            case 22:
                f1 += -59932;
                break;
            case 47:
                i11 >>= (int)l;
                break;
            default:
                i2 <<= Test.sFld;
            }
        }
        vMeth1_check_sum += l + i2 + Double.doubleToLongBits(d) + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 +
            i14 + i15 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i=173, i1=-23, i16=-76, i17=-57, i18=-13;
        float f2=-8.896F, f3=0.682F, f4=0.751F;
        boolean b=true;

        for (i = 9; i < 152; ++i) {
            vMeth1(Test.instanceCount);
        }
        i1 -= i;
        for (i16 = 238; i16 > 3; i16 -= 3) {
            for (f2 = i16; f2 < 20; f2++) {
                Test.instanceCount = i;
                Test.iArrFld = Test.iArrFld;
                f3 = i16;
                i18 = 0;
                b = b;
                Test.iFld *= i;
            }
            f4 = 1;
            while (++f4 < 20) {
                Test.iArrFld[i16 - 1] = i;
            }
            Test.iFld *= 152;
            Test.instanceCount = i16;
        }
        vMeth_check_sum += i + i1 + i16 + i17 + Float.floatToIntBits(f2) + i18 + Float.floatToIntBits(f3) + (b ? 1 : 0)
            + Float.floatToIntBits(f4);
    }

    public void mainTest(String[] strArr1) {

        int i19=35253, i20=-9148, i21=5, i22=-1748, i23=-235, i25=-246;
        short s=32231;
        float f5=1.1003F;
        boolean b1=false;
        byte by=-2;

        vMeth();
        for (i19 = 8; 392 > i19; ++i19) {
            i21 = 1;
            while (++i21 < 66) {
                int i24=14;
                Test.iFld = (int)-11L;
                switch (((i21 >>> 1) % 2) + 54) {
                case 54:
                case 55:
                    Test.iArrFld[(-14202 >>> 1) % N] *= i21;
                    for (i22 = 1; i22 < 1; ++i22) {
                        Test.sFld = s;
                        Test.iFld -= i20;
                        Test.iFld -= i22;
                        i23 += Test.iFld;
                    }
                    i20 <<= i21;
                    f5 = Test.instanceCount;
                    break;
                default:
                    Test.iFld += i24;
                    i25 = 1;
                    while (++i25 < 1) {
                        f5 += i25;
                        Test.instanceCount += (i25 ^ i21);
                        f5 = -47615;
                        Test.iArrFld[i19 - 1] <<= i25;
                        i20 = i19;
                        if (b1) {
                            Test.iArrFld[i25 - 1] *= -249;
                        } else {
                            f5 += Test.instanceCount;
                            s = (short)2.196F;
                            Test.iArrFld[i19 + 1] = i20;
                        }
                        Test.iFld >>= i24;
                        i24 += (((i25 * by) + i23) - i22);
                    }
                    Test.instanceCount += (i21 * i23);
                    b1 = b1;
                }
                Test.instanceCount += (long)(34.16F + (i21 * i21));
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
