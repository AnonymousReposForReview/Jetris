package tests.javafuzzer860;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:55:38 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=6096439723612144453L;
    public int iFld=-185;
    public static boolean bFld=false;
    public static byte byFld=-123;
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.iArrFld, 32642);
        FuzzerUtils.init(Test.iArrFld1, 9175);
        FuzzerUtils.init(Test.dArrFld, 68.2329);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i8) {

        int i9=-9, i10=-252, i11=-63988, i12=-18730;
        byte by=-45;
        short s=32313;
        float f1=-98.641F;

        for (i9 = 12; i9 < 201; i9++) {
            i10 *= by;
            i10 &= i8;
            switch (((i9 % 2) * 5) + 126) {
            case 135:
                for (i11 = 1; i11 < 8; ++i11) {
                    boolean b=false;
                    i8 += (i11 - i9);
                    if (b) break;
                    i8 *= (int)Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                    Test.iArrFld1[i9] = i9;
                    i10 ^= s;
                    f1 -= Test.instanceCount;
                }
                Test.iArrFld[i9 - 1] ^= 43;
                break;
            case 134:
                Test.iArrFld[i9 + 1] = (int)Test.instanceCount;
                Test.instanceCount = i9;
                break;
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + by + i11 + i12 + s + Float.floatToIntBits(f1);
    }

    public static int iMeth1() {

        int i6=51395, i7=37467, i13=-6703, i14=66;
        double d2=-108.60179;
        short s1=-13363, sArr[]=new short[N];
        float f2=-87.900F;

        FuzzerUtils.init(sArr, (short)-2776);

        for (i6 = 7; 141 > i6; ++i6) {
            if (Test.bFld) {
                i7 += (0 + (i6 * i6));
                vMeth(i6);
                i7 -= i6;
                Test.instanceCount += 7;
            } else {
                sArr = sArr;
            }
            for (i13 = 1; i13 < 12; i13++) {
                Test.instanceCount += (((i13 * i6) + Test.instanceCount) - Test.instanceCount);
                Test.bFld = Test.bFld;
                switch (((i13 >>> 1) % 2) + 44) {
                case 44:
                    d2 += i13;
                    Test.bFld = Test.bFld;
                case 45:
                    s1 = (short)i7;
                    i7 -= (int)Test.instanceCount;
                default:
                    f2 += i6;
                }
            }
        }
        long meth_res = i6 + i7 + i13 + i14 + Double.doubleToLongBits(d2) + s1 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i1=45018, i2=227, i3=-28263, i4=221, i5=35990, i15=-9, i16=-11;
        float f=1.409F;

        for (i1 = 136; 6 < i1; i1 -= 3) {
            i2 <<= i2;
            i2 += (((i1 * i2) + i1) - f);
            i2 += (i1 * f);
            Test.iArrFld = (Test.iArrFld = (Test.iArrFld = FuzzerUtils.int1array(N, (int)-142)));
            i2 += (i1 * i1);
            if (Test.bFld) {
                i3 = 1;
                do {
                    for (i4 = 1; i4 < 1; i4++) {
                        switch ((i4 % 3) + 56) {
                        case 56:
                            Test.iArrFld[i3] -= iMeth1();
                            i5 <<= -64;
                            break;
                        case 57:
                            if (Test.bFld) {
                                i5 += (((i4 * Test.instanceCount) + i15) - f);
                                i15 = (int)Test.instanceCount;
                            } else if (Test.bFld) {
                                i2 += (int)f;
                            } else if (true) {
                                if (Test.bFld) continue;
                            }
                            break;
                        case 58:
                            Test.bFld = Test.bFld;
                            break;
                        }
                    }
                } while (++i3 < 35);
            } else if (Test.bFld) {
                Test.instanceCount = Test.instanceCount;
            } else if (false) {
                i16 <<= (int)-26539L;
            }
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i17=-138, i18=0, i19=-8, i20=-5, i21=-91, i22=14785, i23=239, i24=-98, i25=-40741, i26=-162,
            iArr[][]=new int[N][N];
        double d=0.27754, d1=-2.48637;
        short s2=4576;

        FuzzerUtils.init(iArr, 254);

        i = 230;
        do {
            Test.instanceCount += (long)(67.773F + (i * i));
            d = (iFld >>= ((--iFld) * (i - i)));
            d1 = 1;
            while (++d1 < 109) {
                iFld += (int)(d1 * d1);
                Test.bArrFld[i - 1] = ((iMeth() * Test.byFld) > -44.639F);
            }
            for (i17 = i; i17 < 109; i17++) {
                i19 = 1;
                while (++i19 < 1) {
                    Test.byFld = (byte)i19;
                }
                iFld = i18;
                Test.iArrFld1[i17] ^= 246;
                i18 += (i17 | i);
                Test.byFld -= (byte)37;
                for (i20 = 1; i20 < 1; i20++) {
                    Test.iArrFld1[i17 - 1] = (int)173L;
                }
                Test.dArrFld[i17] = Test.dArrFld[i17];
                Test.iArrFld1 = Test.iArrFld1;
                i21 += -48857;
            }
        } while (--i > 0);
        i21 = i20;
        for (i22 = 311; i22 > 3; --i22) {
            i23 = i18;
            iArr = iArr;
            i24 = 1;
            do {
                iArr[i24 - 1][i22 + 1] += i22;
                iArr[i22][i22 - 1] %= (int)(s2 | 1);
                iFld = Test.byFld;
                Test.instanceCount += (i24 * i18);
            } while (++i24 < 82);
            for (i25 = 5; i25 < 82; ++i25) {
                s2 -= (short)i23;
                iFld = i26;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
