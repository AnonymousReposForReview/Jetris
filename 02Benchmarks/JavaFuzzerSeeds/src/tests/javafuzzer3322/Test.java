package tests.javafuzzer3322;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:00:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2528658634L;
    public static float fFld=-1.844F;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
        FuzzerUtils.init(Test.dArrFld, 1.30382);
        FuzzerUtils.init(Test.lArrFld, 9L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2) {

        int i7=124, i8=60920, i9=-18195, i10=54040, i11=12, i12=-54019, i13=224;
        short s=-8570;
        byte by=41;

        i7 -= i7;
        Test.iArrFld[(i7 >>> 1) % N] |= i7;
        for (i8 = 2; i8 < 196; ++i8) {
            for (i10 = 1; i10 < 8; i10++) {
                for (i12 = 1; i12 < 2; i12++) {
                    i7 -= 34765;
                    switch ((i12 % 7) + 112) {
                    case 112:
                        s = (short)i12;
                        if (i9 != 0) {
                            vMeth1_check_sum += Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + s +
                                by;
                            return;
                        }
                        by += (byte)i12;
                        i13 += i12;
                    case 113:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    case 114:
                        i13 -= (int)Test.instanceCount;
                        i11 = i9;
                        break;
                    case 115:
                        Test.instanceCount = Test.instanceCount;
                    case 116:
                        i13 = -45862;
                        break;
                    case 117:
                        s -= (short)i12;
                        break;
                    case 118:
                        i13 -= (int)f2;
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + s + by;
    }

    public static int iMeth(int i2, int i3) {

        int i5=-13, i6=-143, i14=111, i15=-37434, i16=-13, iArr[]=new int[N];
        byte by1=31;

        FuzzerUtils.init(iArr, -31980);

        for (int i4 : iArr) {
            for (i5 = 4; i5 > 1; --i5) {
                vMeth1(-59.161F);
                i2 = i6;
                Test.fFld = -8;
                for (i14 = i5; i14 < 2; i14++) {
                    double d=118.6502;
                    switch ((((i3 >>> 1) % 10) * 5) + 57) {
                    case 68:
                        i15 += 159;
                        break;
                    case 72:
                        Test.dArrFld[i14] = 97.408F;
                        break;
                    case 84:
                        switch ((((-162 >>> 1) % 3) * 5) + 79) {
                        case 93:
                            Test.instanceCount = i3;
                            by1 = by1;
                            i4 += i14;
                            break;
                        case 81:
                            i15 = (int)Test.instanceCount;
                            break;
                        case 85:
                            d = Test.fFld;
                        }
                        break;
                    case 77:
                        i15 += i6;
                        break;
                    case 79:
                        i16 += i14;
                    case 98:
                    case 102:
                        i6 -= (int)Test.instanceCount;
                    case 67:
                        Test.lArrFld[i14 + 1] = Test.instanceCount;
                    case 95:
                        Test.iArrFld[i14] ^= (int)160L;
                    case 59:
                        Test.instanceCount -= i16;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + i5 + i6 + i14 + i15 + by1 + i16 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-214, i17=248, i18=-48734, i19=-60339, i20=34, i21=2;
        float f1=-120.187F;
        double d1=2.18976;

        i1 = 1;
        while (++i1 < 222) {
            f1 = (iMeth(i1, i1) + i);
            i -= (int)d1;
        }
        for (i17 = 6; i17 < 129; ++i17) {
            i18 = (int)Test.instanceCount;
            i += i17;
            d1 /= (i17 | 1);
            i19 = 1;
            while (++i19 < 13) {
                for (i20 = 1; i20 < 1; i20 += 2) {
                    i18 = -98;
                    f1 += (i20 * i1);
                    i += (((i20 * Test.fFld) + i19) - i21);
                    Test.instanceCount = Test.instanceCount;
                    f1 = i21;
                    i &= i;
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 +
            i21;
    }

    public void mainTest(String[] strArr1) {

        float f=2.841F;
        int i22=-47842, i23=1;
        short s1=30977;

        f = 1;
        while (++f < 182) {
            vMeth(-61);
            Test.fFld = -5;
            i22 ^= i22;
            Test.iArrFld[(int)(f + 1)] >>= i22;
            s1 = (short)i22;
            if (true) break;
            Test.dArrFld[(int)(f)] = i23;
        }
        Test.instanceCount += i23;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
