package tests.javafuzzer1038;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:06:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static double dFld=-33.67970;
    public static float fFld=-2.450F;
    public int iFld=-14;
    public short sFld=29319;
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 196L);
        FuzzerUtils.init(Test.iArrFld, -130);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=-8162, i2=7, i3=-104, i4=-212, i5=6, i6=-204, i7=113, i8=1, iArr[]=new int[N];
        byte by=-52, byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 9325);
        FuzzerUtils.init(byArr, (byte)14);

        iArr[(17937 >>> 1) % N] = i1;
        for (i2 = 10; i2 < 303; ++i2) {
            Test.fFld += (i2 * i2);
            i1 = 252;
            Test.lArrFld = Test.lArrFld;
            for (i4 = 1; i4 < 6; ++i4) {
                Test.instanceCount = Test.instanceCount;
            }
            i3 ^= (int)Test.instanceCount;
        }
        i6 = 1;
        while (++i6 < 262) {
            Test.instanceCount ^= i1;
            for (i7 = 1; i7 < 6; i7++) {
                Test.instanceCount -= i2;
                i3 += (((i7 * i8) + by) - i2);
                iArr[i7 - 1] = i5;
                byArr[i6 - 1] *= (byte)i7;
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + by + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public void vMeth(int i) {

        byte by1=-96;
        double d=-16.70357;
        int i9=135, i10=-43413, i11=-25;

        for (long l : Test.lArrFld) {
            vMeth1();
            l = by1;
            by1 += (byte)i;
            iFld += i;
            switch ((((i >>> 1) % 9) * 5) + 1) {
            case 16:
                i <<= iFld;
                break;
            case 31:
                for (d = 1; d < 4; d++) {
                    Test.instanceCount >>>= i;
                }
                for (i10 = 1; i10 < 4; ++i10) {
                    Test.lArrFld[i10] = -22280;
                }
                i9 = -64;
                by1 *= (byte)i;
                break;
            case 17:
                Test.lArrFld[(iFld >>> 1) % N] += iFld;
                iFld -= 11;
                break;
            case 36:
                l >>= 11;
                break;
            case 5:
                l *= i;
                break;
            case 23:
            case 45:
                iFld -= (int)Test.instanceCount;
                break;
            case 19:
            case 43:
                i9 += 23013;
                break;
            }
        }
        vMeth_check_sum += i + by1 + Double.doubleToLongBits(d) + i9 + i10 + i11;
    }

    public boolean bMeth() {

        int i12=7614, i13=62958, i14=-6, i15=-121, iArr1[]=new int[N];
        long l1=0L;

        FuzzerUtils.init(iArr1, -148);

        Test.dFld = -2;
        vMeth(iFld);
        iArr1[(iFld >>> 1) % N] = iFld;
        Test.lArrFld[(iFld >>> 1) % N] = 40302;
        try {
            Test.instanceCount >>= iFld;
            for (i12 = 4; i12 < 363; i12++) {
                for (i14 = 1; i14 < 5; ++i14) {
                    Test.fFld = i15;
                    l1 = 1;
                    do {
                        if (i15 != 0) {
                            return ((int)(i12 + i13 + i14 + i15 + l1 + FuzzerUtils.checkSum(iArr1))) % 2 > 0;
                        }
                        i15 = i12;
                        Test.instanceCount *= 70L;
                        if (false) continue;
                        iFld = sFld;
                    } while (++l1 < 2);
                }
            }
        }
        catch (NullPointerException exc1) {
        }
        long meth_res = i12 + i13 + i14 + i15 + l1 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        long l2=-50199L;
        int i16=-179, i17=12, i18=14, i19=1, i20=-13, iArr2[][]=new int[N][N];
        float f=42.653F, fArr[]=new float[N];
        byte by2=-121, byArr1[]=new byte[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, -70.916F);
        FuzzerUtils.init(iArr2, 50118);
        FuzzerUtils.init(dArr, -85.73276);
        FuzzerUtils.init(byArr1, (byte)123);

        if (b) {
            b = bMeth();
            iFld = iFld;
            switch ((((iFld >>> 1) % 7) * 5) + 98) {
            case 112:
                fArr = fArr;
                Test.iArrFld[(iFld >>> 1) % N][(iFld >>> 1) % N] -= (int)Test.instanceCount;
                l2 = 1;
                do {
                    iFld += -28618;
                    Test.fFld += (l2 - l2);
                    iFld = (int)Test.dFld;
                    iFld += (int)(((l2 * iFld) + l2) - i16);
                    iFld -= iFld;
                } while (++l2 < 317);
                break;
            case 99:
                iFld = iFld;
                break;
            case 105:
                f = 1;
                do {
                    sFld = (short)l2;
                    Test.iArrFld[(int)(f + 1)][(int)(f)] += (int)Test.dFld;
                    Test.instanceCount >>>= iFld;
                    for (i17 = 5; i17 < 130; ++i17) {
                        Test.instanceCount = i16;
                        Test.instanceCount += iFld;
                        i18 -= i18;
                        for (i19 = 2; i19 > 1; i19 -= 2) {
                            Test.dFld = l2;
                            i16 >>= i18;
                            try {
                                iArr2[(int)(f + 1)][(int)(f)] = (i16 / i17);
                                iArr2[i19 - 1][i17] = (-64 / i17);
                                iFld = (i18 / 94);
                            } catch (ArithmeticException a_e) {}
                            by2 += (byte)(i19 - Test.instanceCount);
                            iFld = iFld;
                            i20 = -37;
                            dArr[(i16 >>> 1) % N] /= (iFld | 1);
                            iFld = i19;
                        }
                    }
                } while (++f < 193);
                break;
            case 104:
                i18 |= (int)l2;
            case 115:
                sFld = (short)Test.fFld;
                break;
            case 124:
                byArr1[(i16 >>> 1) % N] >>= (byte)i16;
                break;
            case 113:
                iFld >>= i17;
                break;
            default:
                Test.dFld += Test.instanceCount;
            }
        } else {
            iFld = i20;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
