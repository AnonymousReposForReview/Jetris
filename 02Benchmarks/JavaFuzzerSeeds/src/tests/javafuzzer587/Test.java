package tests.javafuzzer587;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:14:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2536660412797757650L;
    public static volatile byte byFld=52;
    public volatile short sFld=12020;
    public boolean bFld=false;
    public long lFld=-170L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -63192);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d=0.77937;
        int i4=147, i5=213, i6=13, i7=-9, i8=173, i9=1, i10=-10, i11=-4;
        float f1=35.692F;
        short s=-11311;

        for (d = 3; d < 221; d++) {
            for (i5 = 1; i5 < 7; i5 += 3) {
                for (i7 = 1; i7 < 4; i7++) {
                    if (false) continue;
                    Test.instanceCount = i8;
                    i6 += i7;
                    i8 = (int)Test.instanceCount;
                    Test.instanceCount = i7;
                }
            }
            for (f1 = 1; f1 < 7; f1++) {
                for (i10 = 1; 2 > i10; i10++) {
                    s *= (short)i9;
                    i4 -= i6;
                    i11 = i7;
                    Test.iArrFld[(int)(f1 + 1)] = i6;
                    i6 &= i8;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 +
            i11 + s;
    }

    public static void vMeth(long l, long l1) {

        int i12=19, i13=-143, i14=154, i15=53491, i16=37558, i17=36161, i18=8;
        long l2=-116L, l3=-1L, lArr[]=new long[N];
        float f2=0.335F;

        FuzzerUtils.init(lArr, 8893286699234510850L);

        vMeth1();
        i12 += (int)Test.instanceCount;
        i12 -= i12;
        for (i13 = 12; i13 < 372; i13 += 3) {
            for (i15 = i13; 13 > i15; i15++) {
                i14 = i14;
            }
            lArr = lArr;
            i12 -= -44873;
            for (l2 = 1; 13 > l2; l2++) {
                l1 -= i16;
                i16 -= i13;
                for (l3 = l2; l3 < 2; l3++) {
                    f2 -= -6;
                    i18 -= i14;
                }
                f2 *= l3;
            }
        }
        vMeth_check_sum += l + l1 + i12 + i13 + i14 + i15 + i16 + l2 + i17 + l3 + i18 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(lArr);
    }

    public float fMeth() {

        int i19=215, i20=-56944, i21=188, i22=-57653;
        float f3=-1.340F, f4=1.415F, f5=-1.276F;

        vMeth(-64307L, -860555522L);
        for (i19 = 6; i19 < 137; i19++) {
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-73);
            i20 += (((i19 * i20) + f3) - Test.byFld);
            i20 += (16561 + (i19 * i19));
            for (f4 = 1; f4 < 12; f4++) {
                i22 = 1;
                while (++i22 < 2) {
                    Test.instanceCount >>= i20;
                    sFld *= (short)f3;
                    i21 += i22;
                    i20 >>= i19;
                }
                f5 = 1;
                do {
                    i20 += i19;
                    if (bFld) break;
                    f3 += f5;
                } while (++f5 < 2);
            }
        }
        long meth_res = i19 + i20 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i21 + i22 +
            Float.floatToIntBits(f5);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-199, i1=-35113, i2=-13, i3=-10, i23=-59671, i24=5, i25=1, i26=153, i27=38333, i28=10, i29=-6;
        float f=36.540F;
        long l4=-204468249L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2401287465L);

        for (i = 12; 248 > i; i++) {
            for (i2 = 6; i2 < 106; i2++) {
                f += fMeth();
            }
            i1 += (-176 + (i * i));
            i1 -= i2;
            f = 120;
            Test.iArrFld[i - 1] = i;
            i1 -= i1;
            i3 += (i * i3);
            for (i23 = 2; 106 > i23; i23++) {
                if (true) continue;
                Test.iArrFld[i - 1] *= (int)Test.instanceCount;
                f += (i23 - sFld);
                Test.iArrFld[i23 - 1] += Test.byFld;
                i24 += (i23 * i23);
                lArr1[i23] = (long)1.709F;
                i1 *= (int)f;
                f *= i2;
                for (l4 = i23; l4 < 2; ++l4) {
                    Test.iArrFld[i23 - 1] += i;
                    i1 -= (int)-3668717183L;
                }
            }
        }
        i3 >>>= (int)l4;
        for (i26 = 4; i26 < 179; ++i26) {
            f -= i26;
            i27 = (int)lFld;
            i27 += i26;
            for (i28 = 6; 143 > i28; i28++) {
                i27 >>= (int)l4;
                Test.instanceCount += (i28 * i28);
            }
            f = l4;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
