package tests.javafuzzer343;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:18:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static short sFld=30803;
    public double dFld=-1.18631;
    public static volatile float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.654F);
        FuzzerUtils.init(Test.lArrFld, -2451853871L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i6=19, i7=-8, i8=-139, i9=-26519, i10=-18765, i11=-28, iArr2[]=new int[N];
        float f=-2.620F;
        long l=5L;

        FuzzerUtils.init(iArr2, 11);

        iArr2[(i6 >>> 1) % N] = i6;
        for (i7 = 8; i7 < 167; i7++) {
            for (i9 = 1; i9 < 10; i9++) {
                iArr2[i7 + 1] = 10;
                i10 &= i9;
                i6 += i10;
                i8 = (int)486L;
                i8 = i9;
                f = Test.instanceCount;
                i10 >>>= i10;
                Test.instanceCount = (long)f;
            }
            for (l = i7; l < 10; l++) {
                i11 >>= i9;
                i8 = (int)-873126545L;
                if (i9 != 0) {
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + l + i11 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(byte by, int i3) {

        int i4=39234, i5=238, i12=14, i13=-14, i14=-2, iArr1[]=new int[N];
        double d1=0.56248, d2=-2.65634;
        float f1=-2.851F;
        short s=4438;

        FuzzerUtils.init(iArr1, 26468);

        i3 -= (iArr1[(-4 >>> 1) % N]++);
        for (i4 = 362; i4 > 14; i4--) {
            switch ((i4 % 4) + 82) {
            case 82:
                Test.instanceCount = (i3--);
                iArr1[i4] *= iMeth();
                Test.instanceCount += (long)d1;
                for (i12 = 1; i12 < 5; ++i12) {
                    f1 = i13;
                    i13 *= i5;
                    try {
                        i5 = (iArr1[i12 - 1] / -1005840739);
                        i3 = (i12 / iArr1[i4]);
                        i13 = (62829 % i13);
                    } catch (ArithmeticException a_e) {}
                    for (d2 = 1; 2 > d2; ++d2) {
                        boolean b=true;
                        i5 <<= i14;
                        i3 = i4;
                        i13 >>= i13;
                        if (b) continue;
                    }
                }
                break;
            case 83:
                Test.fArrFld[i4 - 1] += Test.instanceCount;
                break;
            case 84:
                f1 += (87 + (i4 * i4));
                break;
            case 85:
                s += (short)(i4 - i14);
                break;
            }
        }
        vMeth1_check_sum += by + i3 + i4 + i5 + Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d2) + i14 + s + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        double d=54.16975;
        int i=1, i1=22779, i2=-27, i15=-1, i16=11, iArr3[]=new int[N];
        byte by1=37;
        float f2=9.687F;

        FuzzerUtils.init(iArr3, -10);

        for (d = 10; d < 392; d++) {
            for (i1 = 4; 1 < i1; i1--) {
                vMeth1(by1, i2);
                for (i15 = 1; 2 > i15; i15++) {
                    iArr3 = iArr3;
                    i = (int)f2;
                    f2 += i16;
                    switch ((i15 % 2) + 127) {
                    case 127:
                        f2 = i16;
                        break;
                    case 128:
                        Test.instanceCount += (i15 + i2);
                        i += i15;
                        f2 = i2;
                        break;
                    default:
                        f2 *= i16;
                        i = i2;
                    }
                    by1 = (byte)5489609750511956365L;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + by1 + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i17=-29909, i18=18247, i19=4, i20=-85, i21=-9, i22=-4, i23=-83, i24=6205, i25=-16, iArr[]=new int[N];
        float f3=1.601F;
        byte by2=100;
        boolean b1=false;

        FuzzerUtils.init(iArr, -47301);

        iArr = (iArr = iArr);
        vMeth();
        i17 = 1;
        do {
            iArr[i17] >>= 45;
            i18 -= (int)Test.instanceCount;
            iArr[i17 + 1] -= i18;
            i19 *= i17;
            Test.instanceCount <<= Test.sFld;
            iArr[i17] <<= i19;
            Test.lArrFld[i17 + 1] *= i19;
            for (i20 = 3; i20 < 71; i20++) {
                for (i22 = 1; 2 > i22; ++i22) {
                    dFld += f3;
                    iArr = iArrFld;
                    i19 += (i22 * i23);
                    Test.lArrFld[i20 + 1] += (long)-1.64033;
                    Test.lArrFld[i17] >>= Test.sFld;
                }
                i19 *= i23;
                i19 = i21;
                i18 >>= i23;
                i18 = i20;
                for (i24 = i17; i24 < 2; ++i24) {
                    try {
                        i19 = (i24 % i21);
                        iArrFld[i17 + 1] = (646015509 % i18);
                        i25 = (i25 / iArrFld[i17 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i25 = i18;
                    i23 = i23;
                    switch ((((i24 >>> 1) % 3) * 5) + 37) {
                    case 42:
                        if (b1) {
                            i23 >>= i21;
                            dFld += by2;
                            dFld = i24;
                        }
                    case 52:
                        i23 += i24;
                    case 51:
                        i19 = i24;
                    default:
                        i25 += i24;
                    }
                }
            }
        } while (++i17 < 354);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
