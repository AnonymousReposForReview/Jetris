package tests.javafuzzer2914;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:58:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=227L;
    public float fFld=2.701F;
    public static short sFld=21455;
    public static byte byFld=-50;
    public static volatile int iFld1=12;
    public boolean bFld=false;
    public double dFld=1.81858;
    public double dArrFld[]=new double[N];
    public static volatile int iArrFld1[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -8319);
    }

    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i8) {

        float f=-32.513F;
        int i9=3, i10=-5, i11=0, i12=-77, i13=20198, i14=34139;
        short s=6016;
        byte by=-90;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 51L);

        lArr[(i8 >>> 1) % N] *= (long)f;
        Test.instanceCount = i8;
        i9 = 1;
        do {
            f *= i8;
            i8 <<= i8;
        } while (++i9 < 283);
        for (i10 = 3; i10 < 204; i10++) {
            i8 += (i10 ^ i9);
            switch ((i10 % 2) + 30) {
            case 30:
                s -= (short)i11;
                for (i12 = 1; i12 < 8; ++i12) {
                    i13 = i10;
                    switch (((6 >>> 1) % 2) + 105) {
                    case 105:
                        by = (byte)i11;
                        break;
                    case 106:
                        i14 ^= i8;
                        b1 = true;
                        break;
                    }
                }
                break;
            case 31:
                i14 = -6;
                break;
            }
        }
        long meth_res = l1 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + s + i12 + i13 + by + i14 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth2(boolean b, long l, double d) {

        int i7=-16747, i15=-4, i16=-4, i17=-35087, i18=10, i19=-2902, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -10);

        i7 -= (int)(Math.min((long)(fFld - i7), Test.instanceCount) + (iMeth(-82L, i7) % (i7 | 1)));
        i7 = Test.sFld;
        for (i15 = 7; i15 < 143; i15++) {
            i17 = 1;
            do {
                for (i18 = 1; i18 < 1; ++i18) {
                    iArr[(i18 >>> 1) % N] += (int)-46.850F;
                    dArrFld[i15 - 1] *= Test.byFld;
                    i19 += i19;
                    fFld += (i18 * i18);
                }
                dArrFld[i15] *= -43.109003;
                switch ((((i15 >>> 1) % 3) * 5) + 86) {
                case 98:
                    i19 += (i17 | i16);
                    fFld += i17;
                    l = 59685L;
                    break;
                case 99:
                    i7 = i7;
                    break;
                case 93:
                }
            } while (++i17 < 12);
        }
        vMeth2_check_sum += (b ? 1 : 0) + l + Double.doubleToLongBits(d) + i7 + i15 + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth1(int i6) {

        boolean b2=true;
        double d1=114.38593;
        int i20=-21793, i21=-206, i22=-26223, i23=10291, i24=-221;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -3L);

        vMeth2(b2, Test.instanceCount, d1);
        i20 = 1;
        do {
            Test.instanceCount -= i6;
            i6 *= i20;
            Test.instanceCount += 39947;
            for (i21 = 1; 7 > i21; ++i21) {
                i22 += i6;
            }
            i22 = (int)Test.instanceCount;
            for (i23 = 1; i23 < 7; ++i23) {
                if (i24 != 0) {
                    vMeth1_check_sum += i6 + (b2 ? 1 : 0) + Double.doubleToLongBits(d1) + i20 + i21 + i22 + i23 + i24 +
                        FuzzerUtils.checkSum(lArr1);
                    return;
                }
                b2 = b2;
                i24 += (int)Test.instanceCount;
                if (i24 != 0) {
                    vMeth1_check_sum += i6 + (b2 ? 1 : 0) + Double.doubleToLongBits(d1) + i20 + i21 + i22 + i23 + i24 +
                        FuzzerUtils.checkSum(lArr1);
                    return;
                }
                fFld = fFld;
                i24 += (int)fFld;
            }
        } while (++i20 < 238);
        vMeth1_check_sum += i6 + (b2 ? 1 : 0) + Double.doubleToLongBits(d1) + i20 + i21 + i22 + i23 + i24 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr3) {

        int i25=12, i26=79, i27=64, i28=45967, i29=-234, i30=254, i31=-20642, i32=-155, i33=-197, i34=50786;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 85.141F);

        vMeth1(Test.iFld1);
        Test.instanceCount -= -139L;
        for (i25 = 9; i25 < 188; ++i25) {
            Test.sFld >>>= (short)-61326;
            if (true) continue;
            bFld = bFld;
            Test.iArrFld1[i25 + 1] *= (int)fFld;
            i26 = i26;
            switch (((Test.iFld1 >>> 1) % 10) + 106) {
            case 106:
                dFld = i25;
                i27 = 1;
                while (++i27 < 140) {
                    Test.iArrFld1[i25] *= i27;
                }
                break;
            case 107:
                for (i28 = 4; 140 > i28; ++i28) {
                    Test.iArrFld1[i25] += i28;
                    Test.instanceCount -= Test.iFld1;
                    Test.byFld *= (byte)i26;
                    if (bFld) {
                        switch ((i28 % 10) + 105) {
                        case 105:
                            for (i30 = 1; 2 > i30; i30 += 2) {
                                Test.iArrFld1[i25] ^= i25;
                                i26 *= i31;
                            }
                            for (i32 = i25; i32 < 2; ++i32) {
                                Test.instanceCount += 25775;
                                try {
                                    Test.iFld1 = (i33 / i27);
                                    Test.iFld1 = (i25 % i27);
                                    i31 = (Test.iArrFld1[i32 + 1] % Test.iArrFld1[i25]);
                                } catch (ArithmeticException a_e) {}
                                dArrFld[i32 + 1] /= (Test.iFld1 | 1);
                                fFld = (float)dFld;
                                switch (((-8 >>> 1) % 1) + 68) {
                                case 68:
                                    fFld += i26;
                                    Test.sFld += (short)i32;
                                    fArr1[i28 + 1] /= 14;
                                    break;
                                default:
                                    Test.instanceCount = Test.byFld;
                                }
                            }
                            break;
                        case 106:
                            Test.instanceCount <<= Test.instanceCount;
                            break;
                        case 107:
                            i29 = i25;
                            break;
                        case 108:
                            i33 >>= i28;
                            break;
                        case 109:
                            i33 += (((i28 * i30) + i28) - i26);
                            break;
                        case 110:
                            fFld = 42841;
                            break;
                        case 111:
                            i34 += (((i28 * i27) + fFld) - i29);
                            break;
                        case 112:
                            if (bFld) break;
                            break;
                        case 113:
                            Test.iArrFld1[i28 - 1] = i28;
                            break;
                        case 114:
                            i31 = Test.iFld1;
                            break;
                        default:
                            bArrFld[i28 - 1] = bFld;
                        }
                    } else if (true) {
                        i29 += (i28 * i28);
                    } else {
                        fFld = fFld;
                    }
                }
            case 108:
            case 109:
                i26 >>= i33;
                break;
            case 110:
                Test.iFld1 = i26;
                break;
            case 111:
                i26 *= 30;
            case 112:
                Test.instanceCount ^= i26;
                break;
            case 113:
                Test.iFld1 <<= i28;
                break;
            case 114:
                Test.sFld += (short)(i25 | (long)fFld);
            case 115:
                i29 *= i30;
                break;
            }
        }



    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth1 ->  vMeth1 mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 mainTest
//DEBUG  iMeth ->  iMeth vMeth2 vMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
