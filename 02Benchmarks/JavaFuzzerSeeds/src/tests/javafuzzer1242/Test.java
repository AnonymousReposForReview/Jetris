package tests.javafuzzer1242;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:07:33 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-37497L;
    public static volatile int iFld=-8;
    public static byte byFld=5;
    public static boolean bFld=false;
    public static float fFld=0.244F;
    public static short sFld=9384;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i4) {

        short s=-1926;
        int i5=-10, i6=54593, i7=3, i8=117, i9=10, i10=-9;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -9.286F);

        Test.instanceCount = 174;
        Test.instanceCount >>>= s;
        i4 >>= (int)Test.instanceCount;
        Test.iFld = Test.iFld;
        for (i5 = 186; 7 < i5; --i5) {
            Test.instanceCount <<= Test.iFld;
            Test.byFld *= (byte)Test.iFld;
            for (i7 = 1; i7 < 9; ++i7) {
                for (i9 = 2; i7 < i9; --i9) {
                    i10 -= Test.iFld;
                    if (Test.bFld) continue;
                    Test.instanceCount = Test.instanceCount;
                    s += (short)(i9 * i9);
                    fArr[i7] *= i7;
                    i10 = i10;
                }
            }
        }
        vMeth_check_sum += i4 + s + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth1(long l1, int i2, int i3) {

        byte by=-32;
        int i11=89, i12=14, iArr[]=new int[N];
        double d=0.56483;
        short s1=17630;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(lArr, -55L);

        by = (byte)(iArr[(Test.iFld >>> 1) % N]++);
        vMeth(-52);
        i2 = i3;
        i11 = 1;
        while (++i11 < 343) {
            Test.iFld = i2;
            Test.byFld = (byte)i3;
            if (Test.iFld != 0) {
            }
        }
        i12 = 1;
        while (++i12 < 261) {
            i3 %= (int)((long)(Test.fFld) | 1);
            i2 -= i11;
            switch (((i12 % 8) * 5) + 63) {
            case 82:
                d = l1;
                break;
            case 77:
                Test.iFld = i2;
                Test.iFld += (i12 | i3);
                Test.iFld -= Test.iFld;
                break;
            case 90:
                i2 -= -8;
                break;
            case 81:
                lArr[i12] -= s1;
                break;
            case 96:
                iArr[i12 + 1] >>= i3;
            case 68:
                i2 = (int)l1;
                break;
            case 84:
                Test.instanceCount = Test.instanceCount;
                break;
            case 97:
                i2 += (6789 + (i12 * i12));
                break;
            default:
                d *= i11;
            }
        }
        long meth_res = l1 + i2 + i3 + by + i11 + i12 + Double.doubleToLongBits(d) + s1 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i, long l, int i1) {

        int i13=34178, i14=-32620;

        Test.iFld -= (int)(l--);
        iMeth1(l, i, Test.iFld);
        for (i13 = 11; i13 < 237; i13 += 3) {
            i14 += (i13 * i13);
            i14 = Test.iFld;
            i1 <<= i;
            try {
                Test.iFld = (-168 % i1);
                i14 = (i1 / 106);
                i14 = (169 / i);
            } catch (ArithmeticException a_e) {}
            i ^= Test.iFld;
        }
        long meth_res = i + l + i1 + i13 + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=-217, i16=-1, i17=-1534, i18=119, i19=28133, i20=153, i21=-3, i22=10884, i23=10, i24=52662, iArr1[]=new
            int[N];
        float f=-126.555F, f1=-60.732F;

        FuzzerUtils.init(iArr1, 15203);

        Test.iFld *= ((iMeth(Test.iFld, Test.instanceCount, Test.iFld) + Test.iFld) - Test.iFld);
        for (i15 = 10; i15 < 260; i15++) {
            Test.iFld *= 13;
            for (i17 = 3; i17 < 101; ++i17) {
                Test.iFld >>= i18;
                Test.instanceCount &= i17;
                iArr1[i17] = Test.iFld;
                for (i19 = 1; i19 < 2; ++i19) {
                    i20 += (int)(9L + (i19 * i19));
                }
                Test.instanceCount -= Test.iFld;
                f = 1;
                do {
                    i18 += (int)(f * f);
                    if (Test.bFld) continue;
                    Test.instanceCount += (long)(((f * i20) + Test.fFld) - Test.instanceCount);
                    Test.instanceCount -= i17;
                } while (++f < 2);
                Test.instanceCount += (((i17 * Test.instanceCount) + i16) - i17);
            }
            iArr1[i15 - 1] = i18;
            i20 += i20;
        }
        i21 = 1;
        do {
            switch (((i20 >>> 1) % 7) + 67) {
            case 67:
                for (f1 = 4; f1 < 74; f1++) {
                    Test.instanceCount = Test.iFld;
                    i18 += (int)(((f1 * i19) + i22) - i16);
                    for (i23 = 1; i23 < 2; ++i23) {
                        switch ((i21 % 6) + 5) {
                        case 5:
                            if (false) {
                                Test.instanceCount = i15;
                                Test.sFld = (short)Test.instanceCount;
                                Test.fFld -= i18;
                            } else if (Test.bFld) {
                                Test.fFld += f;
                            } else if (Test.bFld) {
                                i22 += 34177;
                            } else {
                                Test.fFld = (float)-83.25125;
                            }
                            break;
                        case 6:
                            i24 = (int)Test.instanceCount;
                            break;
                        case 7:
                            i20 = i15;
                            break;
                        case 8:
                            i18 = i19;
                            break;
                        case 9:
                            i22 = i17;
                        case 10:
                        default:
                            Test.instanceCount %= (i24 | 1);
                        }
                    }
                }
                break;
            case 68:
                Test.instanceCount += i20;
                break;
            case 69:
                i20 = i16;
            case 70:
                Test.fFld += (-11 + (i21 * i21));
                break;
            case 71:
                i18 >>= i17;
            case 72:
                Test.instanceCount += (-3399186139783227164L + (i21 * i21));
                break;
            case 73:
                Test.iFld += (i21 ^ Test.instanceCount);
                break;
            }
        } while (++i21 < 338);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
