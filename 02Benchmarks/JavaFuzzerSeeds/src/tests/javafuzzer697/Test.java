package tests.javafuzzer697;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:08:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=173L;
    public static boolean bFld=false;
    public static float fFld=-91.100F;
    public byte byFld=125;
    public static double dFld=-1.39852;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i1, long l) {

        int i2=-7, i3=-39825, i4=-111, i5=-9, i6=-29, iArr[]=new int[N];
        double d=1.38233;
        long lArr[]=new long[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(lArr, -61191L);
        FuzzerUtils.init(sArr, (short)12548);
        FuzzerUtils.init(iArr, 151);

        for (i2 = 1; i2 < 146; i2++) {
            i1 = i3;
            Test.bFld = Test.bFld;
            i3 += i2;
            i1 = 29879;
            i4 = 11;
            while (--i4 > 0) {
                for (i5 = 1; i5 < 1; i5++) {
                    sArr[i2 + 1][i4] %= (short)(Test.instanceCount | 1);
                    f += (-703140029103945463L + (i5 * i5));
                    i6 += -47;
                }
                i1 = (int)Test.instanceCount;
                switch ((((-171 >>> 1) % 5) * 5) + 93) {
                case 117:
                    iArr[i4 + 1] = (int)123.103769;
                    break;
                case 115:
                    lArr[i2] -= i1;
                    d -= l;
                    break;
                case 105:
                    iArr[i4] = -6;
                    break;
                case 95:
                    i6 = (int)l;
                    break;
                case 100:
                default:
                    l *= i5;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i1 + l + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i7=51403, i8=98, i11=21632, i12=192, i13=-12, i14=-4, iArr1[]=new int[N];
        short s=-23140;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr1, 222);
        FuzzerUtils.init(byArr, (byte)29);

        vMeth2(Test.fFld, i7, Test.instanceCount);
        i8 = 1;
        while (++i8 < 397) {
            double d1=78.36170;
            i7 = i7;
            d1 = 0;
            i7 += (int)Test.fFld;
            i7 = (int)Test.instanceCount;
            i7 = (int)Test.fFld;
            for (i11 = 1; i11 < 4; i11++) {
                if (Test.bFld) break;
                for (i13 = i11; i13 < 2; ++i13) {
                    byArr[i8 - 1][i13] += (byte)s;
                    try {
                        i7 = (i13 / i13);
                        i12 = (iArr1[i11 - 1] % -1970420508);
                        i12 = (i12 % i12);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount += (((i13 * i8) + i13) - Test.fFld);
                    d1 = -65;
                    i14 += (i13 * i12);
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i11 + i12 + i13 + i14 + s + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(byArr);
    }

    public void vMeth() {

        int i=138, i15=-5, i16=-8044, i17=-53140, i18=50558, i19=13;
        float fArr[]=new float[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(fArr, 99.189F);
        FuzzerUtils.init(dArr, -98.94521);

        i *= (int)(i - Test.instanceCount);
        Test.instanceCount += (long)Math.abs((i--) * (i--));
        vMeth1();
        for (i15 = 10; i15 < 383; i15++) {
            if (Test.bFld) {
                Test.instanceCount = i;
            } else {
                fArr = fArr;
                Test.instanceCount += (i15 * i15);
                i16 *= i;
                i16 = (int)Test.instanceCount;
            }
            for (i17 = 1; i17 < 5; i17++) {
                i19 >>= i16;
                try {
                    i = (-59 % i);
                    i19 = (-155 / i18);
                    i16 = (i / -878);
                } catch (ArithmeticException a_e) {}
                i16 -= -14514;
                dArr[i17][(i18 >>> 1) % N] += 45;
            }
        }
        vMeth_check_sum += i + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i20=-11, i21=0, i22=0, i23=13, i24=37, i25=-13, i26=219, i27=54703, i28=4;
        short s1=-9087;
        byte by=112;
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(dArr1, 123.21234);

        vMeth();
        for (i20 = 7; i20 < 149; ++i20) {
            iArrFld[i20] -= i20;
            byFld += (byte)i20;
            i21 += (((i20 * i20) + Test.fFld) - Test.instanceCount);
            i21 += i21;
            switch ((i20 % 2) + 104) {
            case 104:
                dArr1 = dArr1;
                i21 += (i20 * i20);
                iArrFld[i20 - 1] <<= (int)Test.instanceCount;
                break;
            case 105:
                for (i22 = 8; i22 < 177; i22++) {
                    switch (((i22 >>> 1) % 3) + 32) {
                    case 32:
                        i21 *= i22;
                        i23 += (int)Test.instanceCount;
                        i23 -= i20;
                        break;
                    case 33:
                        for (i24 = 1; i24 < 2; ++i24) {
                            i21 += (int)(557825369564112756L + (i24 * i24));
                            s1 -= (short)i21;
                            if (Test.bFld) break;
                            Test.fFld = i24;
                        }
                        if (Test.bFld) break;
                        iArrFld[i20 - 1] = byFld;
                        for (i26 = 1; i26 < 2; ++i26) {
                            i25 = i24;
                            iArrFld[i26 - 1] += i20;
                            iArrFld[i20 - 1] >>= i24;
                            i21 = i26;
                            i21 -= (int)Test.dFld;
                            i23 = i28;
                            Test.instanceCount <<= i28;
                        }
                        break;
                    case 34:
                        i28 += (((i22 * i28) + by) - i21);
                        break;
                    default:
                        Test.instanceCount ^= Test.instanceCount;
                    }
                }
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
