package tests.javafuzzer1344;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:32:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=180L;
    public static int iFld=20815;
    public static boolean bFld=true;
    public static byte byFld=-22;
    public static float fFld=0.690F;
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, int i6, int i7) {


        Test.bFld = Test.bFld;
        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i7;
    }

    public static byte byMeth(long l2, byte by, long l3) {

        float f1=-1.714F;
        int i4=4, i5=13409, i8=-14, iArr[]=new int[N];
        short s=-24526;

        FuzzerUtils.init(iArr, 0);

        Test.iFld += (int)f1;
        for (i4 = 4; i4 < 246; i4++) {
            f1 = (Test.instanceCount * ((f1 * i5) + (f1 - i5)));
            i5 += (((i4 * l3) + Test.iFld) - Test.iFld);
            Test.iFld += Math.max(-9, iArr[i4 + 1]--);
            vMeth(-62.51428, i4, i5);
        }
        i5 ^= 254;
        if (Test.bFld) {
            i8 = 1;
            do {
                i5 += i8;
                s >>>= (short)i5;
                try {
                    Test.iFld = (i5 / -15);
                    Test.iFld = (i8 % 21755);
                    i5 = (1883187565 / Test.iFld);
                } catch (ArithmeticException a_e) {}
                l3 += (((i8 * i5) + l2) - l2);
                l3 = Test.instanceCount;
                l3 += (((i8 * l3) + i5) - f1);
            } while (++i8 < 124);
        } else if (Test.bFld) {
            Test.iFld = s;
        }
        long meth_res = l2 + by + l3 + Float.floatToIntBits(f1) + i4 + i5 + i8 + s + FuzzerUtils.checkSum(iArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static int iMeth(long l) {

        int i=-157, i1=-11, i2=52982, i3=41709, i9=65311, i10=2;
        float f=27.43F;
        long l1=-35L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5L);

        for (i = 5; i < 153; i++) {
            i1 = (int)(i1 - lArr[i - 1]);
            f %= ((i1 * ((i1 + 52123) + 9511)) | 1);
            for (i2 = 1; i2 < 11; ++i2) {
                byte by1=63;
                l1 = (-(byMeth(Test.instanceCount, by1, l1) >> 8));
                for (i9 = 2; 1 < i9; i9 -= 2) {
                    Test.instanceCount += i9;
                    Test.instanceCount *= Test.iFld;
                    Test.iFld += (((i9 * i) + i9) - i1);
                    Test.iFld = -201;
                    f = l1;
                    i10 = i10;
                }
                l1 *= (long)f;
                Test.byFld += (byte)Test.instanceCount;
                f = l;
            }
        }
        long meth_res = l + i + i1 + Float.floatToIntBits(f) + i2 + i3 + l1 + i9 + i10 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d1=1.27794;
        int i11=-9, i12=236, i13=35135, i14=-4020, i15=-24;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -26.812F);

        iMeth(-2789172033073915522L);
        Test.instanceCount = Test.instanceCount;
        Test.instanceCount = Test.iFld;
        Test.instanceCount *= Test.iFld;
        Test.fFld += 62864;
        for (float f2 : fArr) {
            if (Test.bFld) {
                Test.iFld <<= (int)Test.instanceCount;
            } else {
                d1 -= f2;
                Test.iFld = (int)Test.instanceCount;
                i11 = 1;
                do {
                    d1 *= Test.instanceCount;
                    Test.iFld += (int)Test.instanceCount;
                    Test.instanceCount += (((i11 * i11) + Test.instanceCount) - i11);
                    Test.iFld += i11;
                    if (false) continue;
                    for (i12 = 1; 1 > i12; i12++) {
                        Test.iFld %= (int)(i11 | 1);
                        if (Test.bFld) continue;
                        f2 = Test.instanceCount;
                        Test.iFld += i11;
                        Test.instanceCount += (-59263 + (i12 * i12));
                    }
                    try {
                        Test.iFld = (140976164 / Test.iFld);
                        i13 = (6 / iArrFld[i11]);
                        i13 = (Test.iFld / i11);
                    } catch (ArithmeticException a_e) {}
                    d1 = i11;
                    i13 += i11;
                } while (++i11 < 63);
            }
            for (i14 = 1; i14 < 63; i14++) {
                Test.iFld &= i15;
                Test.instanceCount >>= Test.instanceCount;
                i13 = i11;
                if (Test.bFld) continue;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  byMeth ->  byMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
