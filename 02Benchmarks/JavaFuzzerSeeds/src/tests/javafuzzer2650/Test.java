package tests.javafuzzer2650;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:59:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=170857191L;
    public static volatile double dFld=-2.18127;
    public static volatile boolean bFld=false;
    public static short sArrFld[]=new short[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-19835);
        FuzzerUtils.init(Test.fArrFld, -99.905F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, float f1, long l1) {

        int i8=60, i9=4, i10=-8, i11=-153, i12=14, i13=14, i14=-197, i15=-17369;
        boolean b=true;
        short s=21468;

        for (i8 = 9; 329 > i8; i8++) {
            for (i10 = 1; i10 < 5; ++i10) {
                if (true) {
                    if (b) break;
                }
                for (i12 = 1; i12 < 2; ++i12) {
                    i11 += (((i12 * s) + i11) - i11);
                    l = i9;
                    i9 += (i12 * l);
                }
                for (i14 = 1; 2 > i14; ++i14) {
                    l = i11;
                    Test.instanceCount >>= l1;
                    b = b;
                    f1 *= i11;
                    i9 += i12;
                }
            }
            Test.dFld -= -7;
        }
        long meth_res = l + Float.floatToIntBits(f1) + l1 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + s + i14 +
            i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        int i3=-163, i4=-5, i5=-45, i6=16023, i7=-35285;
        float f=1.30F;
        byte by=60;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 2.67220);
        FuzzerUtils.init(lArr, -111L);

        i3 = 1;
        do {
            for (i4 = 10; i4 > 1; --i4) {
                i1 *= (int)((--f) * (i2++));
                dArr[i3] += (lArr[i3 + 1]++);
                for (i6 = 1; i6 < 2; i6 += 2) {
                    int i16=2;
                    f *= iMeth(Test.instanceCount, f, Test.instanceCount);
                    i16 += (i6 ^ (long)f);
                    i5 <<= i2;
                    Test.instanceCount = i4;
                    Test.instanceCount |= i6;
                    i2 <<= i6;
                    i7 += (i6 * i6);
                    if (false) break;
                }
                i1 += (((i4 * i1) + i6) - i4);
                by >>= (byte)0L;
            }
        } while (++i3 < 160);
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(double d, int i) {

        int i17=13, i18=29321, i19=-81, i20=-171, i21=1, iArr[][]=new int[N][N];
        float f2=96.633F;
        boolean b1=false;

        FuzzerUtils.init(iArr, 57);

        vMeth1(i, i);
        for (i17 = 4; i17 < 347; ++i17) {
            for (i19 = 1; i19 < 5; i19++) {
                i21 = 1;
                while (++i21 < 2) {
                    Test.instanceCount = 22;
                    i20 = i20;
                    switch ((i19 % 2) + 107) {
                    case 107:
                        i += (int)(2.709F + (i21 * i21));
                        i18 = (int)f2;
                        break;
                    case 108:
                        i18 = i;
                        iArr[i17][i17] += (int)Test.instanceCount;
                        i20 -= i18;
                        i20 += i18;
                        break;
                    default:
                        iArr[i21 + 1][i21 + 1] = 3;
                        b1 = b1;
                    }
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i17 + i18 + i19 + i20 + i21 + Float.floatToIntBits(f2) +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i22=-7262, i23=-6, i24=0, i25=-17387, i26=-219, i27=-30526, i28=29586, i29=146, i30=-53725, i31=4, i32=5,
            iArr1[]=new int[N];
        byte by1=33;
        double d1=41.102120;
        short s1=-14090;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -56326L);
        FuzzerUtils.init(iArr1, 8);

        vMeth(-2.113668, i22);
        lArr1[(i22 >>> 1) % N] *= i22;
        for (i23 = 5; 151 > i23; i23++) {
            Test.dFld = i23;
            Test.sArrFld[(i22 >>> 1) % N] >>>= (short)0;
            i24 *= (int)-4122508739L;
            i22 += (((i23 * i23) + i22) - i22);
            i22 += (i23 ^ Test.instanceCount);
            i22 += i24;
            i24 -= i24;
            by1 *= (byte)188L;
        }
        for (d1 = 14; d1 < 261; ++d1) {
            for (i26 = 2; i26 < 102; i26++) {
                iArr1[(int)(d1)] = s1;
                i25 = i26;
                if (Test.bFld) continue;
                for (i28 = 2; i28 > d1; i28 -= 2) {
                    if (Test.bFld) continue;
                    i22 = i28;
                    i24 <<= i25;
                    Test.fArrFld[(int)(d1 - 1)] = Test.instanceCount;
                    i29 -= (int)2739973335L;
                    Test.instanceCount = Test.instanceCount;
                }
            }
            if (Test.bFld) {
                switch ((int)((d1 % 2) + 37)) {
                case 37:
                    for (i30 = 6; i30 < 102; ++i30) {
                        i32 = 1;
                        do {
                            Test.fArrFld[i30 + 1] -= i23;
                            i25 &= (int)Test.instanceCount;
                            i22 += (((i32 * i23) + i31) - i32);
                        } while (++i32 < 2);
                    }
                case 38:
                    i22 = i31;
                    break;
                default:
                    i27 += (int)Test.instanceCount;
                }
            } else {
                i27 = i23;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
