package tests.javafuzzer1990;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:00:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-34179L;
    public float fFld=1.959F;
    public long lFld=41675L;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 117L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, float f) {

        double d=-101.489;
        int i5=174, i6=0, i7=-2393, i8=-12, i9=5533, i10=-9, iArr[]=new int[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(byArr, (byte)-103);

        d *= -250L;
        i5 = 1;
        do {
            i6 += (((i5 * i6) + i5) - i6);
            iArr = iArr;
            for (i7 = 1; i7 < 7; ++i7) {
                boolean b=false;
                i6 -= 62289;
                b = true;
                byArr[i5 + 1] -= (byte)22;
                l1 += Test.instanceCount;
                f = i6;
                if (i7 != 0) {
                    vMeth1_check_sum += l1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 +
                        i9 + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
                    return;
                }
                for (i9 = 1; i9 < 2; i9++) {
                    i6 -= (int)Test.instanceCount;
                }
                Test.lArrFld[i5] += i10;
            }
        } while (++i5 < 220);
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i2) {

        int i3=21673, i4=58112, i11=-27629, i12=114, i13=-21341, i14=168, iArr1[]=new int[N];
        boolean b1=false;
        float f1=-107.855F;

        FuzzerUtils.init(iArr1, -44974);

        for (i3 = 1; i3 < 293; i3++) {
            switch (((i3 % 2) * 5) + 87) {
            case 90:
                Test.instanceCount -= (i4--);
                vMeth1(-3994323178L, 1.600F);
                for (i11 = 1; i11 < 6; i11++) {
                    iArr1[i3 + 1] >>= i12;
                    if (b1) continue;
                    if (b1) {
                        switch (((i2 >>> 1) % 2) + 114) {
                        case 114:
                            Test.instanceCount <<= i3;
                            for (i13 = 1; i13 < 2; ++i13) {
                                Test.instanceCount -= (long)1.639F;
                                f1 = i2;
                                f1 -= i11;
                                try {
                                    i4 = (37054 % i11);
                                    iArr1[i13] = (i14 / i13);
                                    i4 = (i13 % -1864776144);
                                } catch (ArithmeticException a_e) {}
                            }
                            break;
                        case 115:
                            f1 = -116.89F;
                            break;
                        }
                    } else if (b1) {
                        b1 = b1;
                    }
                }
            case 95:
                Test.instanceCount *= Test.instanceCount;
                break;
            }
        }
        long meth_res = i2 + i3 + i4 + i11 + i12 + (b1 ? 1 : 0) + i13 + i14 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, byte by) {

        int i=-16181, i1=125, i15=-149, i16=-246;
        short s=-4593;

        for (i = 5; i < 200; i++) {
            i1 = (iMeth(i) * i1);
            i1 += (((i * i) + i) - i);
            Test.instanceCount = i;
            l >>= -388252805L;
            i1 >>= i;
            for (i15 = i; 8 > i15; i15++) {
                i1 += (i15 ^ Test.instanceCount);
                i16 += -104;
                i16 -= i16;
                Test.instanceCount += i15;
                i16 += -6;
                Test.lArrFld[i15 + 1] += i1;
            }
            i16 >>= s;
            i16 <<= (int)Test.instanceCount;
        }
        vMeth_check_sum += l + by + i + i1 + i15 + i16 + s;
    }

    public void mainTest(String[] strArr1) {

        byte by1=36;
        int i17=130, i18=4117, i19=-1, i20=-60691, i21=-6455, i22=-95, iArr2[][]=new int[N][N];
        short s1=-5667, sArr[]=new short[N];

        FuzzerUtils.init(iArr2, 181);
        FuzzerUtils.init(sArr, (short)-25642);

        vMeth(1L, by1);
        i17 += (int)Test.instanceCount;
        i18 = 1;
        while (++i18 < 137) {
            iArr2[i18 - 1][i18 + 1] = i18;
            for (i19 = i18; i19 < 183; i19++) {
                i17 = i17;
                fFld = i20;
                Test.instanceCount = 39520;
                switch (((i18 % 2) * 5) + 105) {
                case 110:
                    fFld *= fFld;
                    for (i21 = i19; i21 < 1; ++i21) {
                        switch (((i19 % 2) * 5) + 39) {
                        case 43:
                            i22 = i17;
                            fFld += i21;
                            break;
                        case 45:
                            i22 -= (int)Test.instanceCount;
                        }
                        Test.instanceCount = i17;
                        by1 *= (byte)i20;
                        i22 >>= (int)2242L;
                        i17 += i17;
                        switch ((i19 % 6) + 85) {
                        case 85:
                            Test.instanceCount += i21;
                            i17 -= i20;
                            i20 *= (int)Test.instanceCount;
                            i22 = i21;
                            break;
                        case 86:
                            switch (((i18 % 8) * 5) + 117) {
                            case 145:
                                fFld += i21;
                                i22 += (((i21 * Test.instanceCount) + lFld) - i20);
                                i20 = (int)lFld;
                                break;
                            case 149:
                                i22 += (((i21 * i22) + i20) - s1);
                                break;
                            case 123:
                                i17 ^= i17;
                            case 129:
                                by1 = (byte)i19;
                            case 154:
                                Test.instanceCount *= (long)1.1002F;
                                break;
                            case 147:
                                iArr2[i21][i18] = (int)fFld;
                                break;
                            case 137:
                                i20 += (i21 * i21);
                                break;
                            case 130:
                                i20 += (((i21 * i22) + i17) - i18);
                                break;
                            default:
                                lFld = i19;
                            }
                            break;
                        case 87:
                            i17 -= (int)fFld;
                            break;
                        case 88:
                            i20 += (int)(33.274F + (i21 * i21));
                        case 89:
                            sArr[i18] = (short)16857;
                            break;
                        case 90:
                            Test.instanceCount = i21;
                        }
                    }
                case 109:
                    i17 += i17;
                    break;
                default:
                    Test.lArrFld[i19] += -213;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
