package tests.javafuzzer1156;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:55:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2471773890L;
    public int iFld=-13;
    public double dFld=1.36276;
    public long lArrFld[]=new long[N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.998F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i2, int i3) {

        long l1=-50279L;
        int i4=-30532, i5=65520, i6=-1, i7=-11, i8=0, i9=165, i10=90, i11=27539, iArr1[]=new int[N];
        float f=0.918F, f1=0.796F, fArr[][]=new float[N][N];
        byte by=26;

        FuzzerUtils.init(fArr, 0.909F);
        FuzzerUtils.init(iArr1, -64047);

        for (l1 = 1; l1 < 333; ++l1) {
            i3 *= (int)f;
        }
        for (i5 = 7; 134 > i5; i5++) {
            fArr[i5 - 1][(i6 >>> 1) % N] = by;
            i4 = by;
            if (i3 != 0) {
            }
        }
        i2 += i3;
        i4 = 39645;
        for (i7 = 18; i7 < 295; ++i7) {
            iArr1 = iArr1;
        }
        for (i9 = 215; 5 < i9; --i9) {
            i4 = i8;
            for (f1 = 8; f1 > 1; f1 -= 3) {
                i4 += (25060 + (f1 * f1));
                i4 <<= i4;
            }
        }
        long meth_res = i2 + i3 + l1 + i4 + Float.floatToIntBits(f) + i5 + i6 + by + i7 + i8 + i9 + i10 +
            Float.floatToIntBits(f1) + i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, long l) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -118);

        Test.instanceCount += ((iArr[(i1 >>> 1) % N]--) - iMeth(i1, 7));
        i1 = (int)Test.instanceCount;
        vMeth_check_sum += i1 + l + FuzzerUtils.checkSum(iArr);
    }

    public long lMeth() {

        int i12=-166, i13=-169, i14=-42989, i15=2186, i16=-75, iArr2[]=new int[N];
        boolean b=false;
        float f2=76.392F;

        FuzzerUtils.init(iArr2, 54686);

        vMeth(iFld, Test.instanceCount);
        lArrFld[(8461 >>> 1) % N] = iFld;
        i12 = 1;
        do {
            if (b) break;
            for (i13 = 5; 1 < i13; i13 -= 3) {
                if (false) continue;
                iArr2[i12] = i14;
                if (b) break;
            }
            iFld = (int)Test.instanceCount;
            for (i15 = 1; i15 < 5; ++i15) {
                i14 += (((i15 * f2) + i13) - i16);
                i14 += (int)Test.instanceCount;
                if (b) {
                    dFld = i12;
                    i16 += (i15 * i15);
                } else {
                    iArr2[i12 - 1] = (int)Test.instanceCount;
                }
            }
        } while (++i12 < 349);
        long meth_res = i12 + (b ? 1 : 0) + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i17=88, i18=7, i19=-7, i20=-25, i21=-8, i22=-43940, i23=224, i24=-240, iArr3[][]=new int[N][N];
        long l2=12L;
        boolean b1=true, bArr[]=new boolean[N];
        float f3=59.85F;
        double d=47.14994;
        byte by1=-67;

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr3, -42759);

        i >>= (int)lMeth();
        for (i17 = 8; i17 < 162; i17++) {
            i *= i;
            bArr = bArr;
            for (l2 = 3; l2 < 163; ++l2) {
                i19 *= i;
            }
            i20 = 1;
            do {
                i19 += (i20 * i20);
                b1 = b1;
                Test.instanceCount = i20;
                switch ((i17 % 9) + 65) {
                case 65:
                    Test.instanceCount += i18;
                case 66:
                    iArr3[i17 - 1][i17] -= 5;
                    iFld += (int)Test.instanceCount;
                    break;
                case 67:
                    iArr3[i20][i17] *= (int)71.892F;
                    iFld -= 10;
                    switch ((((i20 >>> 1) % 9) * 5) + 103) {
                    case 119:
                        i18 += i20;
                        bArr[i20] = b1;
                        iArr3[i20 - 1][i20 + 1] += (int)l2;
                        f3 = i;
                        break;
                    case 142:
                        if (b1) {
                            for (d = i20; d < 1; ++d) {
                                i21 = -72;
                                i >>= (int)-42L;
                            }
                            iArr3[i20 + 1][i17 + 1] += (int)l2;
                            for (i22 = 1; i22 > 1; --i22) {
                                i += i23;
                                i18 += i22;
                                Test.instanceCount += (i22 * i22);
                            }
                        } else {
                            by1 -= (byte)f3;
                        }
                        break;
                    case 140:
                        i23 += i20;
                        break;
                    case 111:
                        by1 -= (byte)i23;
                        break;
                    case 107:
                        Test.instanceCount -= i;
                        break;
                    case 136:
                        i19 -= i22;
                    case 117:
                        i21 *= i;
                    case 146:
                        b1 = false;
                        break;
                    case 114:
                        iFld += i20;
                        break;
                    default:
                        i18 += (int)13L;
                    }
                    break;
                case 68:
                    i24 += i17;
                case 69:
                    try {
                        i19 = (iFld / iArr3[i17][i20]);
                        i19 = (9709 % iArr3[i17 - 1][i17]);
                        i21 = (iArr3[i17 - 1][i20] % 53277);
                    } catch (ArithmeticException a_e) {}
                case 70:
                case 71:
                    dFld = dFld;
                    break;
                case 72:
                    i24 += i20;
                case 73:
                    Test.fArrFld[i20] *= i18;
                    break;
                }
            } while (++i20 < 163);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
