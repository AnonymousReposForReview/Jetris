package tests.javafuzzer2486;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:24:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static boolean bFld=true;
    public static byte byFld=-42;
    public static float fFld=-12.788F;
    public volatile int iFld=62481;
    public volatile short sFld=21893;
    public int iFld1=-16536;
    public volatile byte byArrFld[]=new byte[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, long l3, short s) {

        int i5=-134, i6=-40, i7=-53556, i8=2, i9=14709, iArr[]=new int[N];
        float f=65.547F;
        double d1=33.44664, dArr[]=new double[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, -1.5751);

        Test.bFld = Test.bFld;
        iArr[(i4 >>> 1) % N] *= i4;
        for (i5 = 12; i5 < 344; ++i5) {
            for (i7 = 1; 5 > i7; i7++) {
                i4 -= i5;
                bArr[i7 + 1] = Test.bFld;
                Test.byFld += (byte)i7;
                try {
                    i6 = (i4 / iArr[i7]);
                    i6 = (i5 % i5);
                    i4 = (92340684 / iArr[i5 - 1]);
                } catch (ArithmeticException a_e) {}
                i8 += (((i7 * i5) + i4) - i5);
                Test.instanceCount += (-100 + (i7 * i7));
                i4 -= 47555;
                l3 = (long)f;
                for (d1 = i7; 2 > d1; ++d1) {
                    dArr[(int)(d1 - 1)] -= Test.byFld;
                    iArr[i5 - 1] -= i8;
                }
            }
        }
        vMeth1_check_sum += i4 + l3 + s + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
            i9 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(double d, int i1) {

        long l1=57L, l2=-8044539091907322005L, lArr[]=new long[N];
        int i2=4, i3=-200, i10=227, i11=-2, i12=-54793, i13=250, iArr1[]=new int[N];
        byte by=-77, byArr[]=new byte[N];
        short s1=21514, sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -49);
        FuzzerUtils.init(lArr, 43774L);
        FuzzerUtils.init(sArr, (short)-32617);
        FuzzerUtils.init(byArr, (byte)-105);

        for (l1 = 5; 184 > l1; l1++) {
            for (l2 = 1; l2 < 9; ++l2) {
                Test.instanceCount = ((-(by * l1)) * (i2++));
                vMeth1(i2, l2, s1);
                iArr1[(int)(l1 + 1)] = i1;
                switch ((int)(l1 + 107)) {
                case 107:
                    Test.instanceCount += (l2 * i1);
                    break;
                case 108:
                    for (i10 = (int)(l2); i10 < 2; ++i10) {
                        i1 += (i10 * i10);
                        if (i2 != 0) {
                            vMeth_check_sum += Double.doubleToLongBits(d) + i1 + l1 + i2 + l2 + i3 + by + s1 + i10 +
                                i11 + i12 + i13 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(byArr);
                            return;
                        }
                        i11 = (int)d;
                        s1 = (short)Test.fFld;
                        i11 = (int)Test.instanceCount;
                        i11 = (int)-5226031732804690577L;
                        i2 += i3;
                    }
                    break;
                case 109:
                    iArr1[(int)(l1 + 1)] *= (int)Test.instanceCount;
                    break;
                case 110:
                    by += (byte)l2;
                case 111:
                    Test.fFld = Test.instanceCount;
                    break;
                case 112:
                    Test.fFld = by;
                    break;
                case 113:
                    if (i11 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + l1 + i2 + l2 + i3 + by + s1 + i10 + i11 +
                            i12 + i13 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    break;
                case 114:
                    d = i10;
                    break;
                case 115:
                    Test.instanceCount = 6036;
                case 116:
                    iArr1[(int)(l2 + 1)] >>= i11;
                    break;
                case 117:
                    i2 *= i1;
                case 118:
                    Test.instanceCount = i1;
                    break;
                case 119:
                    i3 += (-38147 + (l2 * l2));
                case 120:
                    i2 += (int)(((l2 * i3) + Test.instanceCount) - Test.fFld);
                case 121:
                    Test.fFld += i3;
                    break;
                case 122:
                    if (Test.bFld) continue;
                    break;
                case 123:
                    d *= i2;
                    break;
                case 124:
                    i3 = i1;
                    break;
                case 125:
                    i3 <<= i1;
                case 126:
                    i2 >>>= 220;
                    break;
                case 127:
                    i3 = i3;
                case 128:
                    i2 -= -163;
                    break;
                case 129:
                    if (Test.bFld) continue;
                    break;
                case 130:
                    i11 &= i10;
                case 131:
                    iArr1 = iArr1;
                case 132:
                    i11 = -67;
                case 133:
                    i3 = (int)l1;
                    break;
                case 134:
                    i11 <<= s1;
                    break;
                case 135:
                    i11 += (int)(((l2 * Test.fFld) + l1) - l2);
                    break;
                case 136:
                    i2 = s1;
                case 137:
                    i1 -= -84;
                    break;
                case 138:
                    i11 += (int)(((l2 * i3) + i2) - l2);
                    break;
                case 139:
                    i11 += (int)l2;
                    break;
                case 140:
                    lArr[(int)(l2)] -= i11;
                    break;
                case 141:
                    i3 += (int)(((l2 * l1) + Test.instanceCount) - i3);
                    break;
                case 142:
                    d += 4;
                    break;
                case 143:
                    iArr1[(int)(l2)] /= (int)(s1 | 1);
                case 144:
                    d += 13;
                    break;
                case 145:
                    Test.fFld = i1;
                    break;
                case 146:
                    i11 >>>= -10;
                    break;
                case 147:
                    i1 >>>= i2;
                case 148:
                    iArr1[(int)(l2)] -= i11;
                    break;
                case 149:
                    iArr1[(int)(l2 - 1)] = i11;
                case 150:
                    i2 = (int)l1;
                    break;
                case 151:
                    Test.fFld += (float)-1.127746;
                case 152:
                    Test.instanceCount |= 1424023344109194368L;
                    break;
                case 153:
                    Test.instanceCount -= l2;
                case 154:
                    i11 += (int)(0.79F + (l2 * l2));
                    break;
                case 155:
                    Test.instanceCount += s1;
                    break;
                case 156:
                    iArr1[(int)(l2 - 1)] = i12;
                    break;
                case 157:
                    if (i1 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + l1 + i2 + l2 + i3 + by + s1 + i10 + i11 +
                            i12 + i13 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    break;
                case 158:
                    Test.instanceCount = i12;
                    break;
                case 159:
                case 160:
                    try {
                        i2 = (i10 % -34650);
                        i12 = (i2 / i1);
                        iArr1[(int)(l2 - 1)] = (-141 % i12);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 161:
                    lArr[(int)(l1 - 1)] += i3;
                case 162:
                    i2 += (int)(((l2 * i11) + l1) - Test.instanceCount);
                    break;
                case 163:
                    i2 *= i1;
                case 164:
                    i12 += (int)l2;
                    break;
                case 165:
                    i3 -= (int)-18.356F;
                    break;
                case 166:
                    i11 = i13;
                case 167:
                    i2 += i11;
                case 168:
                    Test.fFld += (l2 + Test.fFld);
                    break;
                case 169:
                    sArr[(int)(l1)] = (short)i13;
                    break;
                case 170:
                    Test.instanceCount -= (long)Test.fFld;
                case 171:
                    byArr[(int)(l1 + 1)] >>>= (byte)i1;
                    break;
                case 172:
                    Test.instanceCount += (((l2 * i10) + i12) - i12);
                    break;
                case 173:
                    i1 += (int)(((l2 * s1) + i10) - i12);
                    break;
                case 174:
                case 175:
                    Test.fFld += l2;
                    break;
                case 176:
                    iArr1[(int)(l2 - 1)] = i11;
                    break;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + l1 + i2 + l2 + i3 + by + s1 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public int iMeth(long l) {

        double d2=85.106813, dArr1[][]=new double[N][N];
        int i14=1, i15=93, i16=45562, i17=-152, iArr2[]=new int[N];
        short s2=6834;
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr1, -10.41620);
        FuzzerUtils.init(lArr1, 3230137348964060309L);
        FuzzerUtils.init(iArr2, -3);

        vMeth(d2, iFld);
        dArr1[(33499 >>> 1) % N][(iFld >>> 1) % N] = iFld;
        for (long l4 : lArr1) {
            for (i14 = 1; i14 < 4; i14++) {
                Test.fFld = 11;
                l4 += (((i14 * l4) + i15) - i15);
                if (true) continue;
                for (i16 = 1; i16 < 2; i16++) {
                    i15 += s2;
                    iFld = i14;
                    Test.fFld = i16;
                    i15 += (-6 + (i16 * i16));
                    Test.fFld += (-175 + (i16 * i16));
                }
                iArr2[i14] = iFld;
            }
            i17 &= i15;
        }
        long meth_res = l + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + s2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9, i18=10, i19=7, i20=3595, i21=217, iArr3[]=new int[N];
        double d3=93.48092, dArr2[]=new double[N];
        long l5=-60686L;
        float fArr[]=new float[N];
        short sArr1[]=new short[N];

        FuzzerUtils.init(iArr3, 148);
        FuzzerUtils.init(fArr, 0.699F);
        FuzzerUtils.init(sArr1, (short)29950);
        FuzzerUtils.init(dArr2, -1.22868);

        i = 1;
        do {
            iMeth(Test.instanceCount);
            for (i18 = 76; i18 > 2; --i18) {
                iFld *= (int)Test.fFld;
                i19 &= i19;
                switch (((i % 6) * 5) + 53) {
                case 66:
                    Test.instanceCount += i18;
                    i19 = i;
                    i20 = 1;
                    do {
                        i19 <<= 14;
                        iArr3[i20 + 1] += (int)Test.fFld;
                        sFld %= (short)((long)(d3) | 1);
                        Test.instanceCount -= i18;
                        Test.instanceCount += (i20 * i20);
                        byArrFld = FuzzerUtils.byte1array(N, (byte)64);
                        fArr[i20] *= iFld;
                        i19 += iFld1;
                    } while (++i20 < 2);
                    break;
                case 61:
                    if (Test.bFld) {
                        i19 -= iFld1;
                        Test.instanceCount = i18;
                        Test.instanceCount += (32001 + (i18 * i18));
                    } else {
                        iArr3[i18 + 1] -= 5;
                        iFld1 |= (int)Test.instanceCount;
                        try {
                            i19 = (-46014 / iFld);
                            i19 = (iArr3[i + 1] % -88);
                            i19 = (8 / i);
                        } catch (ArithmeticException a_e) {}
                    }
                    i21 = 1;
                    do {
                        sArr1[i18 + 1] = (short)i18;
                        iFld *= i21;
                        Test.instanceCount = (long)Test.fFld;
                        d3 -= i;
                        iFld1 += (((i21 * Test.instanceCount) + i21) - Test.instanceCount);
                    } while (++i21 < 2);
                    break;
                case 54:
                    sFld = (short)-115L;
                    break;
                case 74:
                    iArr3[i] >>>= (int)l5;
                    break;
                case 73:
                    Test.instanceCount &= i18;
                    break;
                case 70:
                    dArr2[i - 1] = i21;
                }
            }
        } while (++i < 332);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
