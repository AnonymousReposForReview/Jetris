package tests.javafuzzer1170;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:56:52 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-99L;
    public static float fFld=-114.1F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i1=10, i2=12, i3=-56295, i4=-14, i5=-48463, iArr[]=new int[N];
        short s1=-30320;

        FuzzerUtils.init(iArr, -87);

        for (long l1 : Test.lArrFld) {
            if (i1 != 0) {
            }
            for (i2 = 1; i2 < 4; i2 += 3) {
                if (true) continue;
                i3 >>>= i1;
                Test.instanceCount *= 17916;
                i3 = (int)l1;
                i3 += (((i2 * Test.fFld) + i1) - i3);
                for (i4 = 1; i4 < 4; ++i4) {
                    i1 += s1;
                    i3 += i2;
                    i3 *= i3;
                    i1 += (i4 * i4);
                }
                i1 -= (int)45.85179;
                iArr[i2 - 1] *= (int)14L;
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + s1 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d) {

        int i6=-2, i7=123, i8=-11, i9=-229, iArr1[]=new int[N];
        short s2=-28898;
        boolean b=true;
        long l2=-8L;

        FuzzerUtils.init(iArr1, 2);

        Test.fFld += iMeth();
        for (i6 = 4; 207 > i6; i6++) {
            Test.instanceCount = 7;
            i7 ^= s2;
            iArr1 = iArr1;
            b = b;
            if (b) continue;
            for (l2 = 1; l2 < 8; ++l2) {
                i9 = 1;
                while (++i9 < 2) {
                    byte by=92;
                    Test.lArrFld[i6] = i6;
                    i8 -= i8;
                    i8 -= (int)l2;
                    by <<= (byte)i8;
                    s2 += (short)(i9 * i9);
                    i8 = i6;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i6 + i7 + s2 + (b ? 1 : 0) + l2 + i8 + i9 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, short s) {

        double d1=1.64648;
        int i10=68;

        vMeth1(d1);
        i10 += 43;
        l -= i10;
        vMeth_check_sum += l + s + Double.doubleToLongBits(d1) + i10;
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i11=-1410, i12=-98, i13=-1, i14=0, i15=18655, i16=58592, i17=-39254, i18=-9;
        short s3=-6355;
        float f=65.422F, f1=2.792F;
        byte by1=88;
        double d2=2.19122;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 11L);

        i = (int)(Test.instanceCount--);
        i -= (int)lArr[(-102 >>> 1) % N];
        vMeth(-134L, s3);
        f = 1;
        while ((f += 2) < 377) {
            lArr[(int)(f - 1)] -= i;
            Test.instanceCount *= -13;
            for (i11 = 4; i11 < 133; i11++) {
                Test.fFld += 37320;
                Test.fFld += (i11 + by1);
                f1 = 1;
                while (++f1 < 2) {
                    i12 = i12;
                    by1 += (byte)f1;
                    i12 += (int)(f1 * f1);
                    i12 &= (int)-4055542146L;
                    Test.instanceCount += (long)(((f1 * i12) + i12) - i12);
                }
                Test.instanceCount += (((i11 * i12) + i11) - i12);
                Test.instanceCount = i;
            }
        }
        i12 <<= (int)Test.instanceCount;
        for (i13 = 171; i13 > 4; i13 -= 2) {
            for (i15 = 302; i13 < i15; --i15) {
                i12 = i12;
            }
            i16 >>= (int)-121L;
            for (i17 = 15; i17 < 302; i17++) {
                i16 = (int)d2;
                if (b1) continue;
                s3 /= (short)((long)(d2) | 1);
                i14 -= (int)f;
            }
            Test.fFld = -44143L;
            Test.fFld = -12;
            Test.instanceCount = (long)f1;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
