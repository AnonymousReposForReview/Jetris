package tests.javafuzzer204;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:08:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=227L;
    public static double dFld=1.117727;
    public static float fFld=0.220F;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -31387);
        FuzzerUtils.init(Test.dArrFld, -1.50829);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i11, int i12, int i13) {

        double d=2.56656, d1=1.93110;
        int i14=-8, i15=10034, i16=52791, i17=38700, i18=20, i19=11322, i20=241, i21=20632, i22=101, i23=-218;

        for (d = 284; d > 15; d -= 2) {
            for (i15 = (int)(d); 12 > i15; ++i15) {
                byte by=-89;
                for (d1 = 1; d1 < 1; d1++) {
                    i17 -= i11;
                }
                try {
                    Test.iArrFld[i15 - 1] = (Test.iArrFld[(int)(d)] % Test.iArrFld[i15 - 1]);
                    i17 = (Test.iArrFld[i15] / 45);
                    i14 = (i18 % 269220715);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += (i15 * i17);
                i13 = by;
                i19 <<= (int)Test.instanceCount;
            }
            switch ((((25893 >>> 1) % 1) * 5) + 61) {
            case 65:
                i12 = -13;
                for (i20 = 1; i20 < 12; i20++) {
                    for (i22 = (int)(d); 2 > i22; ++i22) {
                        Test.instanceCount += (long)Test.fFld;
                        Test.instanceCount -= i17;
                        Test.fFld = Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = i11 + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 + i16 + Double.doubleToLongBits(d1) +
            i17 + i18 + i19 + i20 + i21 + i22 + i23;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i5) {

        int i6=-200, i7=-195, i8=13, i9=34589, i10=235;
        float f=0.897F;
        byte by1=-86;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5L);

        for (i6 = 316; i6 > 11; --i6) {
            i7 = (i5--);
            for (i8 = 1; 5 > i8; ++i8) {
                lArr[i6] += Test.instanceCount;
                if (i9 != 0) {
                    vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + by1 +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
                i7 >>>= (int)((i7 >>>= (int)(f + Test.instanceCount)) - Float.intBitsToFloat(Test.iArrFld[i8]));
                i9 += (int)((--Test.instanceCount) * (++Test.dFld));
                i7 *= (int)(122.400F - ((--i9) - Test.iArrFld[i8]));
                i10 = 1;
                do {
                    i9 = iMeth1(i8, i10, i7);
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)14);
                    f += by1;
                    Test.fFld = i7;
                    f += (((i10 * Test.instanceCount) + Test.fFld) - i7);
                    Test.iArrFld[i10 - 1] -= i8;
                } while (++i10 < 2);
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i2, long l, int i3) {

        long l1=-1506924936076727313L, l2=51131L, lArr1[]=new long[N];
        int i4=158, i24=8, i25=-7, i26=16335, i27=101, i28=-13;
        float f1=-24.265F;
        byte by2=105;

        FuzzerUtils.init(lArr1, 61L);

        Test.instanceCount -= (((Test.instanceCount * l) % (i3 | 1)) + 20557);
        for (l1 = 14; l1 < 244; ++l1) {
            vMeth(222);
            i4 = i4;
            f1 = 1;
            do {
                l -= i4;
            } while (++f1 < 7);
        }
        for (i24 = 10; i24 < 192; ++i24) {
            Test.dArrFld[i24 + 1] *= -116.299F;
            Test.fFld += (i24 + i4);
            for (l2 = 1; l2 < 9; l2++) {
                Test.iArrFld[i24] &= i26;
                for (i27 = 1; i27 < 2; ++i27) {
                    lArr1[i27] = by2;
                    i3 = (int)l2;
                    i28 -= 6;
                }
            }
        }
        long meth_res = i2 + l + i3 + l1 + i4 + Float.floatToIntBits(f1) + i24 + i25 + l2 + i26 + i27 + i28 + by2 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=237, i1=14, i29=-4, i30=54877, i31=-7, i32=-2, i33=200, i34=-201, i35=136, i36=43299, i37=12;
        byte by3=-127;
        boolean b=false;
        double dArr[]=new double[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(dArr, 126.130490);
        FuzzerUtils.init(lArr2, -14L);

        for (i = 1; i < 172; ++i) {
            dArr[i] = (Test.iArrFld[i + 1] -= (int)((-196 - (i1 - 13)) + (4886765615833255197L - iMeth(i,
                Test.instanceCount, i1))));
            for (i29 = 9; i29 < 147; i29++) {
                i1 = i29;
            }
        }
        i30 <<= 7;
        Test.instanceCount <<= 14651;
        Test.fFld += i;
        i1 += i30;
        i31 = 1;
        while (++i31 < 314) {
            i1 += (i31 + i30);
            for (i32 = 2; i32 < 80; ++i32) {
                switch ((i31 % 1) + 109) {
                case 109:
                    i1 = 96;
                default:
                    Test.instanceCount -= (long)Test.dFld;
                }
                i1 >>= 62133;
                i1 = by3;
                lArr2[i32 + 1] += Test.instanceCount;
                i30 = i31;
                Test.dArrFld[i31 + 1] -= i1;
                i33 += (i32 * i1);
            }
            for (i34 = 4; i34 < 80; ++i34) {
                for (i36 = 1; i36 < 2; i36++) {
                    switch ((i36 % 1) + 64) {
                    case 64:
                        i37 = -26804;
                        break;
                    default:
                        i35 += (((i36 * i1) + i29) - i31);
                        Test.instanceCount >>= i35;
                        Test.iArrFld[i31 - 1] = (int)Test.fFld;
                        i33 += i36;
                    }
                    Test.instanceCount *= i30;
                    if (b) break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
