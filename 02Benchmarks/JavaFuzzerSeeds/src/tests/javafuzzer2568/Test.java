package tests.javafuzzer2568;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:44:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9315L;
    public static double dFld=-2.9037;
    public boolean bFld=false;
    public static int iFld=-237;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 31635);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i3=4, i4=177, i5=11, i6=193, i7=-187, i8=30474, i9=990;
        boolean b=true;
        float f2=-1.292F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.1003F);

        i3 = 1;
        do {
            try {
                i4 = (i3 / i3);
                i4 = (-61682 % i3);
                Test.iArrFld[i3 - 1] = (i4 / 214);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount += i3;
            for (i5 = 1; 4 > i5; ++i5) {
                b = false;
                Test.dFld -= 37188L;
                Test.instanceCount += (i5 + i5);
                f2 += (i5 * i5);
                Test.instanceCount += i3;
                for (i7 = 1; i7 < 2; i7++) {
                    fArr[i3] *= i5;
                    f2 = i3;
                }
                i9 = 1;
                do {
                    fArr[i9 - 1] += (float)Test.dFld;
                    i4 += (int)-1113373600L;
                } while (++i9 < 2);
            }
        } while (++i3 < 389);
        long meth_res = i3 + i4 + i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f2) + i7 + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f1) {

        int i2=-139, i10=60610, i11=-54, i12=7886, i13=-226, iArr1[]=new int[N];
        byte by=-82;
        float f3=1.719F;

        FuzzerUtils.init(iArr1, -208);

        i2 %= (int)(((i2--) * (i2 - iArr1[(i2 >>> 1) % N])) | 1);
        lMeth();
        i2 = i2;
        i10 = 1;
        do {
            i2 = 18558;
            for (i11 = 1; i11 < 15; ++i11) {
                by += (byte)i11;
                for (f3 = 1; f3 < 2; ++f3) {
                    i2 += i11;
                    f1 = f3;
                    i13 -= i10;
                    i13 += (int)f3;
                }
                i13 += -1;
                Test.dFld += -1.1020F;
                iArr1 = Test.iArrFld;
            }
        } while ((i10 += 3) < 315);
        long meth_res = Float.floatToIntBits(f1) + i2 + i10 + i11 + i12 + by + Float.floatToIntBits(f3) + i13 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        float f=4.929F;
        int i14=8, i15=22126, i16=-10313, i17=13, i18=101, i19=-242, i20=-58, iArr[]=new int[N];
        byte by1=-75;
        boolean b1=false;

        FuzzerUtils.init(iArr, 2);

        f = ((i1++) + ((i * 1) * iArr[(i1 >>> 1) % N]));
        i1 = (int)(((Test.instanceCount = i) - (f - Test.instanceCount)) - (iMeth(f) - i1));
        for (i14 = 11; 199 > i14; i14++) {
            for (i16 = 1; i16 < 8; i16++) {
                i17 = i15;
                switch ((i16 % 6) + 15) {
                case 15:
                    i -= i;
                    by1 += (byte)(i16 * i16);
                    break;
                case 16:
                    if (b1) {
                        i += -98;
                        Test.instanceCount += (((i16 * Test.instanceCount) + f) - i);
                        for (i18 = 1; i18 < 2; ++i18) {
                            i17 <<= i1;
                            Test.instanceCount <<= -9;
                            i15 = 253;
                        }
                    } else {
                        if (true) continue;
                    }
                case 17:
                    if (i18 != 0) {
                        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + by1 + i18 + i19 +
                            (b1 ? 1 : 0) + i20 + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                case 18:
                    f = f;
                    break;
                case 19:
                    i17 -= i20;
                case 20:
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + by1 + i18 + i19 + (b1 ? 1 : 0) +
            i20 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=64448, i24=12, i25=12, i26=92, i27=12, i28=23684, i29=52, i30=-4, i31=8;
        float f4=-2.428F, fArr1[]=new float[N];
        short s=-24264;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr1, -1.698F);
        FuzzerUtils.init(lArr, 226L);

        vMeth(i21, 34659);
        Test.instanceCount |= i21;
        for (int i22 : Test.iArrFld) {
            for (i24 = 2; i24 < 63; i24++) {
                if (bFld) {
                    if (bFld) continue;
                    for (i26 = 1; i26 < 2; i26++) {
                        i25 *= (int)Test.instanceCount;
                        i22 += (int)Test.instanceCount;
                        Test.bArrFld[i24 + 1] = bFld;
                        i27 += (((i26 * f4) + f4) - Test.iFld);
                        i22 += (int)Test.instanceCount;
                        i21 &= i25;
                    }
                    for (i28 = i24; 2 > i28; i28++) {
                        i22 *= (int)f4;
                        Test.instanceCount %= (Test.instanceCount | 1);
                        Test.iArrFld[i28] |= -7;
                        s += (short)Test.instanceCount;
                        f4 = Test.iFld;
                        s += (short)i28;
                        i25 += Test.iFld;
                        i27 <<= 63766;
                    }
                    for (i30 = 2; i30 > 1; i30 -= 2) {
                        i27 *= (int)41299L;
                        i29 = i31;
                        i21 += (int)Test.instanceCount;
                        i25 += (((i30 * i25) + i25) - i21);
                        fArr1[i30 + 1] = Test.instanceCount;
                        lArr[i24 - 1] += -38913L;
                    }
                } else {
                    Test.instanceCount += i24;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
