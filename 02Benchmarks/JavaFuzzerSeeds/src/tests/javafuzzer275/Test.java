package tests.javafuzzer275;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:09:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3L;
    public int iFld=-138;
    public static byte byFld=76;
    public static short sFld=-31505;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-1;

        i3 *= i3;
        vMeth1_check_sum += i3;
    }

    public static void vMeth(int i1, int i2) {

        boolean b=false;
        int i4=-49189, i5=-12520, i6=-195, i7=-13, iArr[]=new int[N];
        long l=110L;

        FuzzerUtils.init(iArr, 29954);

        if (b) {
            Test.instanceCount = (Test.byFld++);
            i2 <<= i2;
            iArr[(i1 >>> 1) % N] = i2;
        } else {
            vMeth1();
            iArr[(i2 >>> 1) % N] = i2;
            vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + l + FuzzerUtils.checkSum(iArr);
            return;
        }
        i2 = -2931;
        i1 = i1;
        for (i4 = 2; i4 < 329; i4++) {
            switch ((i4 % 2) + 38) {
            case 38:
                i2 += (i4 - i5);
                i5 = i4;
                for (i6 = 1; i6 < 5; i6++) {
                    iArr[i6] = Test.sFld;
                    i5 += (((i6 * i6) + Test.instanceCount) - i4);
                }
                break;
            case 39:
                iArr[i4] <<= (int)l;
            default:
                l *= i5;
            }
        }
        vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + l + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i) {


        vMeth(i, i);
        vSmallMeth_check_sum += i;
    }

    public void mainTest(String[] strArr1) {

        float f=77.987F, fArr[]=new float[N];
        int i8=-42377, i9=3, i10=27, i11=-8, i12=-3, i13=92, i14=-24823, i15=-13, i16=-44683;
        long l1=6005L;
        double d=121.90869, dArr[]=new double[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-96);
        FuzzerUtils.init(dArr, 46.6842);
        FuzzerUtils.init(fArr, 1.332F);

        Test.instanceCount += (-(-63117 * (iFld - iFld)));
        for (int smallinvoc=0; smallinvoc<647; smallinvoc++) vSmallMeth(211);
        Test.instanceCount >>>= iFld;
        iFld *= iFld;
        Test.instanceCount >>>= iFld;
        Test.byFld -= (byte)Test.sFld;
        iFld = iFld;
        byArr[(iFld >>> 1) % N] = (byte)f;
        for (i8 = 6; i8 < 203; ++i8) {
            iFld = (int)1.341F;
            dArr = dArr;
        }
        iFld = (int)181L;
        i10 = 1;
        do {
            for (i11 = 3; 75 > i11; i11++) {
                iFld += (((i11 * Test.instanceCount) + i12) - Test.instanceCount);
                Test.iArrFld[i11] = (int)Test.instanceCount;
            }
            fArr[i10 - 1] = Test.instanceCount;
            switch ((i10 % 3) + 60) {
            case 60:
                Test.instanceCount = i8;
                break;
            case 61:
                iFld -= i9;
                Test.iArrFld = Test.iArrFld;
                iFld |= (int)Test.instanceCount;
                break;
            case 62:
                i12 -= (int)l1;
                for (i13 = 1; i13 < 75; i13++) {
                    i12 *= (int)d;
                    switch ((((43117 >>> 1) % 5) * 5) + 37) {
                    case 40:
                        i12 += (i13 - iFld);
                        for (i15 = 1; i15 < 2; ++i15) {
                            f += (((i15 * i12) + i16) - f);
                        }
                        break;
                    case 46:
                        fArr[i10] = (float)d;
                        break;
                    case 61:
                        dArr[i10] -= 51028;
                    case 51:
                        i16 += (int)f;
                        break;
                    case 59:
                        Test.instanceCount <<= i10;
                        break;
                    }
                }
                break;
            default:
                Test.iArrFld[i10 - 1] += (int)l1;
            }
        } while (++i10 < 337);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
