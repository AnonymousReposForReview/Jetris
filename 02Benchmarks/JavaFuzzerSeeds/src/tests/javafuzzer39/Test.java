package tests.javafuzzer39;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:26:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=239L;
    public static long lFld=568641697L;
    public static int iFld=-47329;
    public static float fFld=2.647F;
    public static double dFld=-1.4600;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, int i5, byte by) {

        float f=-1.825F;
        int i6=12072, i8=-11, i9=61392, i10=16, i11=-12802, iArr[]=new int[N], iArr1[]=new int[N];
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -30665);
        FuzzerUtils.init(lArr, 3804743461541383173L);
        FuzzerUtils.init(iArr1, 66);

        for (f = 19; f < 367; f++) {
            Test.instanceCount += (long)(f * i5);
            switch ((int)(((f % 6) * 5) + 72)) {
            case 94:
                for (i8 = (int)(f); i8 < 5; ++i8) {
                    i5 -= i8;
                    for (i10 = 1; 1 > i10; ++i10) {
                        lArr[i10] = i11;
                        try {
                            iArr[i8 - 1] = (-60 / iArr[i8]);
                            iArr[i10 + 1] = (i9 % i6);
                            i11 = (iArr1[i8] % -887400464);
                        } catch (ArithmeticException a_e) {}
                        if (b) break;
                        i6 += (int)-8L;
                        if (i6 != 0) {
                        }
                        try {
                            i5 = (-1437576857 % i11);
                            i9 = (-22 % i6);
                            i6 = (1797621738 / i6);
                        } catch (ArithmeticException a_e) {}
                        i9 -= (int)-140L;
                        Test.lFld += i11;
                        iArr1[i10] = (int)f;
                    }
                }
                break;
            case 100:
                try {
                    i11 = (-184154477 % i9);
                    i6 = (i8 % -2653);
                    iArr1[(int)(f + 1)] = (i6 % -187);
                } catch (ArithmeticException a_e) {}
                break;
            case 78:
            case 89:
                i6 = i10;
                break;
            case 98:
                Test.lFld += (long)(f - by);
                break;
            case 79:
                by += (byte)(f * f);
                break;
            }
        }
        long meth_res = l + i5 + by + Float.floatToIntBits(f) + i6 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3, int i4) {

        double d=98.60981;
        int i12=0, i13=9, i14=-54628, i15=50195, i16=-180, i17=12;
        float f1=0.888F;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-2);

        i3 = (int)((iMeth1(Test.lFld, i3, (byte)(35)) + -13118) + d);
        for (i12 = 7; i12 < 171; ++i12) {
            for (i14 = 1; 10 > i14; i14++) {
                f1 += i14;
                Test.lFld *= i13;
                byArr[i12 + 1] = byArr[i14];
                i3 += (i14 - i14);
                for (i16 = 1; i16 < 2; i16++) {
                    i15 >>= 2923;
                }
                i17 += (i14 ^ Test.lFld);
                f1 = Test.lFld;
                f1 = i13;
            }
            Test.instanceCount = (long)-2.126278;
            i3 &= (int)Test.lFld;
            i3 *= i12;
        }
        vMeth_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1)
            + i16 + i17 + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth() {

        int i18=-64299;
        boolean b1=false;
        double d1=0.30938;
        float f2=-2.855F;

        vMeth(i18, i18, i18);
        i18 >>= i18;
        i18 >>= (int)Test.lFld;
        Test.instanceCount = i18;
        i18 >>>= Test.iFld;
        b1 = b1;
        Test.iFld *= (int)Test.lFld;
        d1 *= Test.instanceCount;
        f2 = Test.iFld;
        long meth_res = i18 + (b1 ? 1 : 0) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=51852, i1=-59, i19=-48557, i20=-57, i21=-18381, i22=13;
        short s=-28336;
        byte by1=77;

        for (i = 4; i < 319; ++i) {
            i1 += (int)((--i1) - (Math.max(Test.instanceCount, Test.instanceCount) + iMeth()));
        }
        for (i19 = 17; i19 < 388; ++i19) {
            i20 += Test.iFld;
            switch ((((i20 >>> 1) % 2) * 5) + 103) {
            case 111:
                i1 = (int)Test.instanceCount;
                Test.instanceCount += Test.iFld;
                s = (short)Test.instanceCount;
            case 108:
                Test.iFld += (((i19 * Test.lFld) + Test.fFld) - Test.iFld);
                for (i21 = 4; i21 < 68; ++i21) {
                    Test.dFld *= Test.iFld;
                    i20 >>>= i22;
                }
                i1 = i22;
                break;
            }
        }
        Test.iFld -= by1;
        s *= (short)i20;
        Test.fFld = i21;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
