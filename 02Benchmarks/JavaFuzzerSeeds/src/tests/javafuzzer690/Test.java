package tests.javafuzzer690;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:02:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1387253226471857788L;
    public static double dFld=-106.34831;
    public float fFld=-107.193F;
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -147);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        double d=2.56192;
        int i6=-2, i7=180, i8=-121, i9=-193, iArr[]=new int[N];
        long l1=-3262262641L;
        float f=72.939F, fArr[][]=new float[N][N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -9);
        FuzzerUtils.init(sArr, (short)-31148);
        FuzzerUtils.init(fArr, -1.875F);

        d = i5;
        iArr[(i5 >>> 1) % N] &= i5;
        for (i6 = 7; 303 > i6; ++i6) {
            for (l1 = 6; l1 > i6; l1--) {
                i5 = i7;
                for (f = 1; f < 1; f += 2) {
                    Test.instanceCount <<= i9;
                    iArr[i6 - 1] += (int)f;
                    i9 = (int)Test.instanceCount;
                    sArr[(int)(f)] += (short)i9;
                    try {
                        i7 = (37229 / iArr[(int)(l1 + 1)]);
                        i9 = (i7 % i7);
                        i5 = (-1964648330 / i6);
                    } catch (ArithmeticException a_e) {}
                    i8 %= (int)(Test.instanceCount | 1);
                    iArr[i6 + 1] = (int)Test.instanceCount;
                    fArr[(int)(f)] = FuzzerUtils.float1array(N, (float)50.254F);
                }
                i7 = i9;
            }
        }
        vMeth2_check_sum += i5 + Double.doubleToLongBits(d) + i6 + i7 + l1 + i8 + Float.floatToIntBits(f) + i9 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1() {

        int i1=351, i2=52, i3=18617, i4=54018, i10=6, i11=6, i12=55412;
        float f1=127.536F;
        byte by=-12;
        boolean b1=false;

        for (i1 = 6; i1 < 326; i1++) {
            for (i3 = 1; i3 < 5; ++i3) {
                vMeth2(i3);
                Test.instanceCount = -113L;
                f1 += i3;
                i4 -= (int)Test.instanceCount;
                for (i10 = 1; i10 < 2; i10++) {
                    i12 += i12;
                    if (false) {
                        i11 *= i4;
                    } else if (b1) {
                        i2 = by;
                        i4 = (int)-55L;
                        i12 += (int)Test.dFld;
                        i4 <<= i2;
                    } else if (false) {
                        i2 += (i10 - i4);
                        vMeth1_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f1) + i10 + i11 + i12 + by + (b1 ?
                            1 : 0);
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f1) + i10 + i11 + i12 + by + (b1 ? 1 : 0);
    }

    public static void vMeth(int i, boolean b, long l) {

        int i13=196, i14=54, i15=173, i16=-78;
        float f2=0.578F;
        short s=-4712;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -48581L);

        vMeth1();
        i += (int)Test.instanceCount;
        for (i13 = 323; i13 > 9; i13--) {
            i = (int)l;
            i14 += (i13 - f2);
            if (b) break;
            i *= (int)l;
            for (i15 = 1; 5 > i15; i15++) {
                l = s;
                i14 = (int)22370L;
                i = (int)l;
            }
            Test.iArrFld[i13 - 1] = -53;
            i14 = (int)Test.instanceCount;
            l = i13;
            lArr[i13][i13 + 1] = i;
        }
        vMeth_check_sum += i + (b ? 1 : 0) + l + i13 + i14 + Float.floatToIntBits(f2) + i15 + i16 + s +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=25, i18=-51238, i19=-81, i20=12109, i21=235, i22=63, i23=29928, i24=-2, i25=-126;
        float f3=105.910F;
        long l2=-1473223688L;
        byte by2=20;

        vMeth(i17, false, Test.instanceCount);
        for (i18 = 370; i18 > 15; --i18) {
            switch ((i18 % 7) + 44) {
            case 44:
                for (f3 = 4; f3 < 71; ++f3) {
                    sArrFld[(int)(f3 - 1)] -= (short)i20;
                    for (i21 = 1; 2 > i21; ++i21) {
                        byte by1=-96;
                        try {
                            i17 = (Test.iArrFld[i21] / i20);
                            i19 = (27449 / i17);
                            i17 = (i20 / Test.iArrFld[i18]);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount += (i21 * i17);
                        i22 <<= (int)Test.instanceCount;
                        if (false) break;
                        i20 >>= (int)l2;
                        fFld += (i21 + by1);
                        i22 += 246;
                        l2 ^= Test.instanceCount;
                        fFld = by1;
                    }
                    i22 += i19;
                    switch ((int)(((f3 % 10) * 5) + 95)) {
                    case 114:
                        try {
                            Test.iArrFld[(int)(f3)] = (i19 / 19508);
                            i22 = (i17 % -506133747);
                            Test.iArrFld[i18 - 1] = (-1980235745 % i20);
                        } catch (ArithmeticException a_e) {}
                        i23 = 1;
                        do {
                            i22 *= (int)1.299F;
                        } while (++i23 < 2);
                        for (i24 = i18; 2 > i24; ++i24) {
                            switch ((int)(((f3 % 6) * 5) + 68)) {
                            case 83:
                                i17 += (i24 * i24);
                                Test.iArrFld[i18 + 1] >>= (int)Test.instanceCount;
                                Test.iArrFld[i24 - 1] = i23;
                            case 97:
                                i25 += (int)f3;
                                lArrFld[i18] <<= 203L;
                            case 84:
                                lArrFld[i18] = i25;
                                break;
                            case 89:
                                Test.iArrFld[(int)(f3 + 1)] = (int)Test.instanceCount;
                                i25 -= (int)50.127F;
                            case 86:
                            case 79:
                                fFld -= fFld;
                            }
                        }
                        break;
                    case 137:
                        by2 += (byte)(f3 * l2);
                        break;
                    case 110:
                        l2 >>= i21;
                    case 98:
                    case 145:
                        fFld = i20;
                        break;
                    case 111:
                        i25 += (int)(f3 * fFld);
                        break;
                    case 96:
                        Test.instanceCount += (long)(f3 + i19);
                        break;
                    case 138:
                        Test.instanceCount >>>= -19;
                        break;
                    case 128:
                        l2 *= (long)Test.dFld;
                        break;
                    case 119:
                    default:
                        Test.iArrFld[i18] += (int)l2;
                    }
                }
                break;
            case 45:
                l2 = by2;
                break;
            case 46:
                fFld = i25;
                break;
            case 47:
                i17 -= i25;
            case 48:
                by2 >>>= (byte)135;
                break;
            case 49:
                Test.iArrFld = Test.iArrFld;
                break;
            case 50:
                Test.iArrFld[i18 - 1] |= -45481;
                break;
            default:
                if (true) break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
