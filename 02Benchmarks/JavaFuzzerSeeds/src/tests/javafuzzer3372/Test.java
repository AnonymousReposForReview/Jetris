package tests.javafuzzer3372;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:52:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-23710L;
    public static boolean bFld=true;
    public int iFld=-9;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -14498);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f) {

        int i5=185, i6=-45931, i7=29840, i8=-12, i9=-13;
        byte by=-126;
        long l2=-4L, lArr[]=new long[N];
        short s1=-12822;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 2.87108);
        FuzzerUtils.init(lArr, -8L);

        for (i5 = 16; i5 < 352; ++i5) {
            i6 += i5;
            Test.instanceCount += (((i5 * f) + Test.instanceCount) - f);
            by *= (byte)43823L;
            Test.iArrFld[i5] += i5;
        }
        for (l2 = 6; l2 < 217; ++l2) {
            i7 = 3138;
            dArr1[(int)(l2 + 1)] *= l2;
            if (Test.bFld) {
                f += l2;
                by += (byte)(((l2 * i6) + l2) - s1);
                for (i8 = 1; i8 < 8; ++i8) {
                    lArr = FuzzerUtils.long1array(N, (long)2792245769109338825L);
                    i9 -= (int)l2;
                    Test.instanceCount -= i9;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + by + l2 + i7 + s1 + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2, long l) {

        int i3=12, i4=-159, iArr1[]=new int[N];
        double d2=-81.54876;
        short s=-13608;
        long l1=-1975096279L;

        FuzzerUtils.init(iArr1, 8);

        for (i3 = 368; i3 > 4; i3--) {
            Test.instanceCount += (i3 - i2);
            d2 = s;
            if (false) {
                l1 = 1;
                do {
                    float f1=45.290F;
                    i4 += iMeth(f1);
                    Test.iArrFld[i3 - 1] = i4;
                    i2 = i3;
                    Test.iArrFld[i3] = (int)Test.instanceCount;
                    l *= i4;
                    Test.instanceCount = i2;
                } while (++l1 < 5);
                Test.bFld = Test.bFld;
            } else if (Test.bFld) {
                i2 *= i2;
                i4 *= i3;
            }
        }
        iArr1[(i3 >>> 1) % N] -= i4;
        vMeth1_check_sum += i2 + l + i3 + i4 + Double.doubleToLongBits(d2) + s + l1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1, double d, double d1) {

        int i10=57580, i11=-13695;
        float f2=0.473F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.561F);

        vMeth1(i1, 1864767127L);
        for (i10 = 270; i10 > 7; i10 -= 3) {
            Test.instanceCount = -111;
        }
        f2 = i11;
        fArr[(i11 >>> 1) % N] -= Test.instanceCount;
        Test.iArrFld[(33661 >>> 1) % N] += (int)Test.instanceCount;
        f2 += i10;
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i10 + i11 +
            Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-2, iArr[]=new int[N];
        double d3=-1.71655, d4=-51.83244, dArr[]=new double[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(dArr, -2.63486);

        i = 1;
        do {
            iArr[i] -= (int)dArr[i + 1];
        } while (++i < 256);
        vMeth(i, d3, d4);
        iFld += i;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
