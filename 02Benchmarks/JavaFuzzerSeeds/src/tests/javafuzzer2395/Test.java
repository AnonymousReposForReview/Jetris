package tests.javafuzzer2395;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:05:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3578944446881925190L;
    public float fFld=-2.351F;
    public short sFld=26856;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i8, int i9, int i10) {

        int i11=11213, i12=32528, i14=154, i15=-140, iArr1[]=new int[N];
        float f2=-126.841F, fArr[]=new float[N];
        boolean b=true, bArr[]=new boolean[N];
        double d2=1.35059, dArr1[]=new double[N];

        FuzzerUtils.init(iArr1, 4);
        FuzzerUtils.init(fArr, 84.92F);
        FuzzerUtils.init(dArr1, 2.46685);
        FuzzerUtils.init(bArr, true);

        i10 -= (int)Test.instanceCount;
        for (i11 = 284; i11 > 11; --i11) {
            short s=17328;
            iArr1[i11] *= (int)f2;
            i10 += (((i11 * i9) + Test.instanceCount) - s);
            switch (((i11 % 2) * 5) + 17) {
            case 21:
                Test.instanceCount <<= Test.instanceCount;
                break;
            case 23:
                fArr[i11 + 1] -= i11;
                switch ((((i12 >>> 1) % 2) * 5) + 29) {
                case 34:
                    switch ((i11 % 3) + 63) {
                    case 63:
                        dArr1[i11] += f2;
                        for (i14 = 1; i14 < 6; i14++) {
                            Test.instanceCount += i14;
                            i8 %= (int)(i11 | 1);
                            bArr[i14 - 1] = b;
                            Test.instanceCount += (i14 * i14);
                        }
                    case 64:
                        Test.instanceCount += (long)(48.1008F + (i11 * i11));
                        break;
                    case 65:
                        b = b;
                        break;
                    default:
                        if (b) break;
                    }
                    break;
                case 36:
                    i10 = i11;
                    break;
                default:
                    d2 += f2;
                }
                break;
            default:
                Test.instanceCount ^= i10;
            }
        }
        vMeth_check_sum += i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f2) + i14 + i15 + (b ? 1 : 0) +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))
            + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth1(int i6, int i7, double d1) {


        vMeth(i6, i7, -7652);
        long meth_res = i6 + i7 + Double.doubleToLongBits(d1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4, float f) {

        float f1=0.26F;
        int i5=5, i16=-40579, i17=138, i18=-18042, i19=53, i20=-4, i21=-7175;
        byte by=-123;
        double d=0.57390;

        f1 = 1;
        do {
            i4 += (int)(f1 * f1);
            i5 = 1;
            do {
                i4 += (i5 * i4);
                Test.instanceCount += Test.instanceCount;
                by += (byte)(-((i5 + i4) + (by + 221)));
            } while (++i5 < 6);
            i4 = (i4++);
            i4 -= (int)((long)(i4 - (d - Test.instanceCount)) >>> iMeth1(i5, i4, d));
        } while (++f1 < 271);
        if (Test.bFld) {
            for (i16 = 372; i16 > 12; --i16) {
                i4 = i4;
                for (i18 = 1; i18 < 5; ++i18) {
                    for (i20 = 1; i20 < 2; i20 += 3) {
                        i4 += (203 + (i20 * i20));
                        Test.instanceCount += (i20 * i20);
                    }
                }
            }
        } else if (Test.bFld) {
            Test.iArrFld[(58418 >>> 1) % N] = i16;
        }
        long meth_res = i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + by + Double.doubleToLongBits(d)
            + i16 + i17 + i18 + i19 + i20 + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-166, i1=13, i2=-149, i3=7, i22=-32404, i23=110, iArr[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -114.117859);
        FuzzerUtils.init(iArr, -12);

        for (i = 10; i < 253; ++i) {
            i2 = 1;
            while (++i2 < 103) {
                switch (((((int)(Test.instanceCount - fFld)) >>> 1) % 5) + 127) {
                case 127:
                case 128:
                    i3 = 1;
                    while (++i3 < 1) {
                        dArr[i2] *= (((iArr[i2]--) - (Test.instanceCount + Test.instanceCount)) - (i1--));
                        i1 -= (int)(fFld++);
                        sFld += (short)i3;
                        i1 += (int)Test.instanceCount;
                        i1 = iMeth(i, fFld);
                        fFld += Test.instanceCount;
                    }
                case 129:
                case 130:
                    switch (((i3 >>> 1) % 2) + 125) {
                    case 125:
                        i1 += (((i2 * Test.instanceCount) + sFld) - i2);
                        i1 &= 134;
                        if (Test.bFld) break;
                        break;
                    case 126:
                        i1 += i2;
                        i1 = (int)-44097L;
                        i1 += (i2 * fFld);
                        i1 += -13600;
                        break;
                    }
                    break;
                case 131:
                    fFld += -27561;
                    i1 |= i3;
                    Test.instanceCount += Test.instanceCount;
                    break;
                default:
                    i1 = i2;
                    i1 += (i2 - i3);
                }
                i1 += i2;
                for (i22 = 1; i22 > i; i22--) {
                    i1 += (7 + (i22 * i22));
                    i23 += (int)Test.instanceCount;
                    Test.iArrFld[i22] = i2;
                    i23 >>= i2;
                    i23 = i;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
