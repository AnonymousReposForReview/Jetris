package tests.javafuzzer132;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:51:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1460757042L;
    public static boolean bFld=true;
    public static short sFld=19448;
    public static float fFld=-1.471F;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 19);
        FuzzerUtils.init(Test.sArrFld, (short)-27264);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by1) {

        int i2=0, i3=-5, i4=6, i5=43986, i6=48663, i7=-26092, i8=-13, i9=175;
        float f=0.590F;

        for (i2 = 15; i2 < 308; i2++) {
            i3 |= i2;
            Test.instanceCount = 41555;
        }
        for (i4 = 1; 244 > i4; ++i4) {
            double d=-35.9295;
            d -= i3;
            for (i6 = 1; i6 < 7; i6++) {
                i7 = -238;
                i7 += i6;
                i7 += (i6 * i6);
                for (i8 = 1; i8 < 2; i8++) {
                    d = 19305;
                    if (i7 != 0) {
                        vMeth1_check_sum += by1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f);
                        return;
                    }
                    f *= i5;
                    by1 ^= (byte)i6;
                }
                i9 <<= -77;
            }
        }
        vMeth1_check_sum += by1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f);
    }

    public static void vMeth(long l2, int i1) {

        byte by2=-78;
        int i10=-35445, i11=189, i12=-84, i13=184, i14=-199, iArr[]=new int[N];
        double d1=2.109671;
        float f1=-1.763F;

        FuzzerUtils.init(iArr, 47);

        vMeth1(by2);
        i10 = 1;
        do {
            i11 = 1;
            do {
                i12 = 1;
                while (--i12 > 0) {
                    if (Test.bFld) break;
                }
                d1 += d1;
                for (i13 = 1; 1 > i13; i13++) {
                    i14 >>= i12;
                    iArr[i10] = i13;
                }
                switch ((i11 % 8) + 24) {
                case 24:
                    i1 += (((i11 * i12) + i10) - i11);
                case 25:
                    if (i10 != 0) {
                        vMeth_check_sum += l2 + i1 + by2 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
                            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    f1 -= -16474;
                    i1 += (((i11 * l2) + i11) - i13);
                    iArr[i10 - 1] = i11;
                    break;
                case 26:
                    i14 = (int)f1;
                    break;
                case 27:
                    Test.bFld = Test.bFld;
                    break;
                case 28:
                    by2 ^= (byte)i13;
                    break;
                case 29:
                    i14 += (((i11 * l2) + Test.instanceCount) - i10);
                case 30:
                    by2 += (byte)i11;
                    break;
                case 31:
                    by2 += (byte)(-5 + (i11 * i11));
                    break;
                default:
                    i14 += (int)f1;
                }
            } while (++i11 < 5);
        } while (++i10 < 353);
        vMeth_check_sum += l2 + i1 + by2 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(long l, int i, long l1) {

        int i15=17453, i16=4;
        float f2=97.322F;
        byte by3=88;

        vMeth(Test.instanceCount, 65);
        i >>= i;
        i15 = 1;
        while (++i15 < 160) {
            i |= i15;
        }
        i = i;
        for (f2 = 3; f2 < 375; f2++) {
            i <<= i15;
        }
        Test.iArrFld[(-11 >>> 1) % N] += i;
        i16 = (int)Test.instanceCount;
        by3 = (byte)i16;
        long meth_res = l + i + l1 + i15 + Float.floatToIntBits(f2) + i16 + by3;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        byte by=-92;
        int i17=11, i18=-41696, i19=7, i20=-55791, i21=-41354, i22=-217, i23=202, i24=14;
        double d2=1.28823;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 13L);

        b = (!(b = (18153 > Test.instanceCount)));
        by += (byte)lMeth(Test.instanceCount, i17, Test.instanceCount);
        for (i18 = 9; i18 < 380; i18++) {
            i17 += (((i18 * i18) + i17) - Test.instanceCount);
            d2 = 40.35717;
            for (i20 = 3; i20 < 68; ++i20) {
                for (i22 = 1; 2 > i22; ++i22) {
                    i19 = i17;
                    lArr = lArr;
                    switch (((i20 >>> 1) % 8) + 107) {
                    case 107:
                        i23 += i22;
                        by = (byte)i22;
                        i17 = i21;
                        break;
                    case 108:
                        Test.sArrFld = Test.sArrFld;
                    case 109:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    case 110:
                        i21 ^= i24;
                        i23 *= by;
                    case 111:
                        i21 += 8;
                        d2 -= d2;
                    case 112:
                        switch (((i20 % 5) * 5) + 98) {
                        case 113:
                            lArr[i20 + 1] -= i22;
                            i21 <<= -1;
                        case 107:
                            i23 = i21;
                            i23 += (int)Test.instanceCount;
                            switch (((i22 >>> 1) % 2) + 72) {
                            case 72:
                                i24 |= i17;
                                Test.instanceCount += i18;
                                i19 = i22;
                                d2 += i21;
                                break;
                            case 73:
                                Test.iArrFld[i20 + 1] += (int)Test.instanceCount;
                                break;
                            }
                            break;
                        case 108:
                            i17 += (i22 * i22);
                            break;
                        case 102:
                            i21 += Test.sFld;
                            break;
                        case 109:
                            Test.fFld = i20;
                            break;
                        }
                    case 113:
                        i17 /= (int)(i23 | 1);
                        break;
                    case 114:
                        Test.instanceCount *= -28549;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
