package tests.javafuzzer3178;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:19:51 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=41L;
    public byte byFld=86;
    public static volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f1, long l1) {

        int i5=52, i6=83, i7=8, i8=-40025, i9=-64, i10=13, i11=145, i12=33, i13=5604, i14=3270, i15=33, iArr2[]=new
            int[N];
        byte by1=9, byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr2, -20710);
        FuzzerUtils.init(byArr, (byte)-6);

        i5 <<= i5;
        for (i6 = 7; i6 < 197; ++i6) {
            i7 += i6;
            for (i8 = 8; 1 < i8; --i8) {
                l1 += (i8 | i9);
                i10 = 2;
                while (--i10 > 0) {
                    by1 -= (byte)i10;
                    i7 = i6;
                }
            }
        }
        iArr2[(i5 >>> 1) % N] = -1;
        i11 = 1;
        do {
            for (i12 = 1; i12 < 5; ++i12) {
                for (i14 = 2; i14 > i12; i14 -= 3) {
                    Test.instanceCount *= -11;
                    iArr2[i14 - 1] = (int)f1;
                }
                byArr[i12][i12] += (byte)i6;
            }
        } while (++i11 < 355);
        vMeth_check_sum += Float.floatToIntBits(f1) + l1 + i5 + i6 + i7 + i8 + i9 + i10 + by1 + i11 + i12 + i13 + i14 +
            i15 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth() {

        int i3=-55746, i4=3601, i16=7, i17=66, i18=4, i19=10, i20=-139, i21=-3, iArr1[]=new int[N];
        float f2=122.951F, f3=2.908F;
        double d1=-57.42386, dArr[][]=new double[N][N];
        byte by2=-1;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 5);
        FuzzerUtils.init(dArr, 2.7146);
        FuzzerUtils.init(lArr1, 5L);

        i3 *= (int)((Test.instanceCount * (++iArr1[(i3 >>> 1) % N])) + (-28.1012F + dArr[(i3 >>> 1) % N][(i4 >>> 1) %
            N]));
        vMeth(f2, Test.instanceCount);
        i3 = i16;
        for (f3 = 6; f3 < 121; ++f3) {
            i18 = 1;
            do {
                i16 += 26379;
                Test.instanceCount += (i18 * i18);
                Test.instanceCount = Test.instanceCount;
                lArr1 = lArr1;
                try {
                    i17 = (iArr1[i18] % -66);
                    i3 = (i16 % i3);
                    i16 = (-9046 % iArr1[(int)(f3 - 1)]);
                } catch (ArithmeticException a_e) {}
                d1 = i16;
                try {
                    i4 = (-209 / i17);
                    i19 = (i19 / i19);
                    i19 = (130 / i17);
                } catch (ArithmeticException a_e) {}
                for (i20 = 1; i20 > 1; --i20) {
                    i3 = i17;
                    by2 = (byte)d1;
                }
            } while (++i18 < 14);
        }
        long meth_res = i3 + i4 + Float.floatToIntBits(f2) + i16 + Float.floatToIntBits(f3) + i17 + i18 +
            Double.doubleToLongBits(d1) + i19 + i20 + i21 + by2 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(byte by, long l) {

        int i2=52788, iArr[]=new int[N];
        float f4=1.741F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(lArr2, 11L);

        iArr[(i2 >>> 1) % N] = iMeth();
        lArr2[(i2 >>> 1) % N] <<= i2;
        f4 = i2;
        long meth_res = by + l + i2 + Float.floatToIntBits(f4) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=16650, i1=-61, i22=17306, i23=-147, i24=95, i25=12, iArr3[]=new int[N];
        float f=-126.846F;
        double d=-36.40255;
        boolean b=false;
        short s=-20949;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4L);
        FuzzerUtils.init(iArr3, 7);

        i += (int)(++f);
        i = (int)(((--f) - lArr[(-5 >>> 1) % N]) - (i++));
        i = (int)(((Test.instanceCount = 176) ^ Test.instanceCount) * ((-(f + d)) / (((long)(f - i)) | 1)));
        i1 = 1;
        while (++i1 < 307) {
            Test.bArrFld[i1 + 1] = bMeth(byFld, Test.instanceCount);
            Test.instanceCount += (long)f;
            for (i22 = 1; i22 < 82; ++i22) {
                i = i;
                f -= i;
                if (b) break;
                i = (int)Test.instanceCount;
                f = i1;
                for (i24 = 2; i24 > i1; i24 -= 3) {
                    i23 = (int)Test.instanceCount;
                    i25 = i22;
                    switch (((i25 >>> 1) % 6) + 77) {
                    case 77:
                        s = (short)Test.instanceCount;
                        break;
                    case 78:
                        byFld = (byte)Test.instanceCount;
                        d += Test.instanceCount;
                        Test.instanceCount = -2;
                        i = i24;
                        break;
                    case 79:
                        switch ((i22 % 1) + 30) {
                        case 30:
                            i23 += i25;
                            i *= i23;
                            i25 = i22;
                        }
                        Test.instanceCount = 62;
                        i %= 44228;
                        iArr3[i1] -= (int)Test.instanceCount;
                        break;
                    case 80:
                        i25 += i25;
                        try {
                            i25 = (i22 % -24223);
                            i23 = (1330972028 / i);
                            i = (i1 / i23);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 81:
                        Test.instanceCount <<= 35306;
                        break;
                    case 82:
                        iArr3[i22] *= (int)f;
                        break;
                    default:
                        i23 += (((i24 * Test.instanceCount) + Test.instanceCount) - byFld);
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
