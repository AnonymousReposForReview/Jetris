package tests.javafuzzer2500;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:38:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8215L;
    public static double dFld=25.52101;
    public static long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -35L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-50295, i4=-46697, i5=-187, i6=-22725, i7=186, i8=-22, i9=-201, iArr[]=new int[N];
        short s=-16858;
        float f=2.456F;
        double d=-1.25745;

        FuzzerUtils.init(iArr, 143);

        i3 = i3;
        for (i4 = 13; i4 < 296; i4 += 2) {
            for (i6 = 1; i6 < 11; ++i6) {
                iArr = iArr;
                s = (short)i6;
                Test.instanceCount += (i6 - i3);
                for (i8 = 1; i8 < 2; i8++) {
                    i3 += (int)(117.115F + (i8 * i8));
                    f = -2.773F;
                    i9 += i5;
                    i5 += (((i8 * i5) + i6) - i9);
                    i9 += (i8 + i3);
                    s >>>= s;
                    d = i5;
                    i9 = i9;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + s + i8 + i9 + Float.floatToIntBits(f) + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i10=-10;
        float f1=-124.886F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -19L);

        vMeth1();
        Test.instanceCount += i10;
        lArr[(i10 >>> 1) % N][(i10 >>> 1) % N] %= (i10 | 1);
        f1 += 149;
        i10 = i10;
        i10 += (int)Test.instanceCount;
        i10 -= (int)f1;
        vMeth_check_sum += i10 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i2) {

        int i11=-51554, i12=50017, i13=13, i14=11507, iArr1[]=new int[N];
        short s1=18600;
        float f2=-1.527F, fArr[]=new float[N];
        boolean b=true;
        byte by=-36;

        FuzzerUtils.init(fArr, 0.359F);
        FuzzerUtils.init(iArr1, 0);

        vMeth();
        for (i11 = 11; i11 < 361; i11++) {
            i2 = i12;
            for (i13 = i11; i13 < 5; ++i13) {
                Test.instanceCount = i13;
                s1 += (short)f2;
                f2 += (float)Test.dFld;
                f2 += 19841L;
                f2 = 31;
            }
            Test.lArrFld[(i14 >>> 1) % N] -= i2;
            switch ((i11 % 8) + 64) {
            case 64:
                Test.instanceCount >>= 7;
                if (b) {
                    i12 -= (int)Test.dFld;
                    Test.lArrFld[i11] = -4;
                } else if (b) {
                } else {
                    i12 += i11;
                }
                break;
            case 65:
                Test.instanceCount *= i11;
                break;
            case 66:
                by *= (byte)i13;
            case 67:
                if (b) continue;
            case 68:
                i2 -= i13;
            case 69:
                iArr1[i11 + 1] += 2;
                break;
            case 70:
                i12 &= 5;
                break;
            case 71:
            }
        }
        long meth_res = i2 + i11 + i12 + i13 + i14 + s1 + Float.floatToIntBits(f2) + (b ? 1 : 0) + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-58301, i1=-9, i15=27, i16=-50838, i17=138, i18=46161, i19=-162, iArr2[]=new int[N];
        float f5=0.291F, fArr1[]=new float[N];
        double d1=0.98107;
        short s2=-32315;
        boolean b1=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr1, -2.579F);
        FuzzerUtils.init(iArr2, 21);
        FuzzerUtils.init(byArr, (byte)62);

        for (i = 274; i > 7; i--) {
            i1 -= i1;
            iMeth(i);
        }
        Test.instanceCount = i1;
        i1 += -6;
        for (float f4 : fArr1) {
            i1 = (int)Test.instanceCount;
            i1 -= i;
            i1 <<= i;
            Test.instanceCount = 6289044683952159075L;
        }
        for (i15 = 5; i15 < 170; ++i15) {
            i1 += (int)f5;
            f5 += (i15 * f5);
            i1 *= i1;
            iArr2[i15] -= (int)f5;
            switch ((i15 % 1) + 66) {
            case 66:
                switch ((((i1 >>> 1) % 7) * 5) + 24) {
                case 31:
                    f5 += i15;
                    for (i17 = 3; i17 < 152; i17++) {
                        for (d1 = 1; d1 < 2; d1++) {
                            byte by1=74;
                            iArr2[i17 + 1] -= i17;
                            i18 >>= (int)8L;
                            Test.instanceCount = Test.instanceCount;
                            i19 = i17;
                            by1 >>= (byte)34734;
                            byArr[i17] = (byte)-24L;
                            dArrFld = FuzzerUtils.double1array(N, (double)57.31434);
                            i16 = -11;
                        }
                        Test.instanceCount = -51117;
                        Test.instanceCount += (i17 - s2);
                    }
                    break;
                case 50:
                    i18 += (-12 + (i15 * i15));
                    break;
                case 27:
                    Test.lArrFld[i15] = i17;
                    break;
                case 47:
                    i19 -= i19;
                    break;
                case 33:
                    b1 = b1;
                    break;
                case 37:
                    i18 = s2;
                case 44:
                    i1 = i16;
                    break;
                default:
                    if (b1) continue;
                }
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
