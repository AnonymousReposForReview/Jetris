package tests.javafuzzer546;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:26:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static short sFld=13993;
    public static int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        boolean b=true;

        b = false;
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0);
    }

    public static int iMeth(int i1, int i2) {

        int i5=0;
        byte by=-102;
        float f=60.42F;
        short s=-23376;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -14L);

        i1 = ((i1++) * Math.min(Math.max(i1, i1), (int)(9096 | (Test.instanceCount + Test.instanceCount))));
        vMeth1(i2, i1);
        i5 = 1;
        while (++i5 < 340) {
            i1 = -108;
            Test.iArrFld[i5] *= (int)Test.instanceCount;
            lArr[i5 + 1][i5] += Test.instanceCount;
            i2 = i1;
            Test.iArrFld[i5 - 1] = i1;
            i1 = i1;
            Test.instanceCount *= by;
            i1 += i5;
            f = i2;
        }
        lArr[(i1 >>> 1) % N][(i2 >>> 1) % N] -= Test.instanceCount;
        i1 >>= s;
        Test.instanceCount *= i1;
        long meth_res = i1 + i2 + i5 + by + Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i6=-57792, i7=-206, i8=79, i9=2246, iArr[]=new int[N];
        float f1=1.579F;
        double d=93.50112;
        boolean b1=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, 29);
        FuzzerUtils.init(sArr, (short)20635);

        i = ((-iArr[(i >>> 1) % N]) + (iMeth(3, i) + Test.sFld));
        i >>>= (int)Test.instanceCount;
        for (i6 = 5; i6 < 159; ++i6) {
            i7 = i6;
            Test.instanceCount += (i6 * i6);
            sArr[i6 + 1] = (short)f1;
        }
        Test.iArrFld = iArr;
        Test.iArrFld[(i6 >>> 1) % N] = (int)d;
        for (i8 = 337; i8 > 13; i8--) {
            Test.instanceCount += (((i8 * i6) + Test.instanceCount) - f1);
            b1 = b1;
            i = (int)Test.instanceCount;
            Test.iArrFld[i8] /= (int)(i7 | 1);
            iArr[(i >>> 1) % N] -= (int)2.415F;
            i = i9;
        }
        vMeth_check_sum += i + i6 + i7 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i8 + i9 + (b1 ? 1 : 0)
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i10=-34329, i11=58290, i12=202, i13=-135, i14=7, i15=60, i16=-151, i17=-8, i18=-5100, i19=-100;
        long l=-333774912L, l1=18710L, lArr1[]=new long[N];
        double d1=-122.1232;
        float f2=127.935F;
        boolean b2=false;

        FuzzerUtils.init(lArr1, 1589072398L);

        if (false) {
            vMeth(i10);
            Test.instanceCount = 51051;
        } else if (b2) {
            for (i11 = 18; i11 < 333; i11++) {
                for (l = 5; l < 80; l++) {
                    i10 = (int)-78.43705;
                    i12 >>= -11;
                    iArrFld1 = Test.iArrFld;
                    for (l1 = 1; 2 > l1; ++l1) {
                        Test.instanceCount *= (long)d1;
                    }
                    i13 *= -21557;
                    iArrFld1[(int)(l - 1)] -= -149;
                    f2 += i11;
                }
                for (i15 = 3; 80 > i15; i15++) {
                    Test.iArrFld[i15] >>= i13;
                }
                i14 += (((i11 * i13) + i12) - i12);
                if (b2) {
                    i17 = 1;
                    do {
                        for (i18 = 1; 1 > i18; i18++) {
                            i19 <<= (int)l1;
                            Test.iArrFld = iArrFld1;
                            i19 += i18;
                            b2 = b2;
                            i19 += i18;
                            i16 -= 58;
                            f2 -= i13;
                            i12 *= (int)l;
                        }
                        if (false) {
                            i16 += (int)4358965100673163792L;
                            i12 *= i17;
                        } else if (false) {
                            i13 += (int)(-4255490187L + (i17 * i17));
                        }
                    } while (++i17 < 80);
                } else {
                    i14 += (i11 + i19);
                }
            }
        } else {
            lArr1[(i15 >>> 1) % N] += i17;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
