package tests.javafuzzer359;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:50:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-525502145L;
    public boolean bFld=true;
    public volatile float fFld=-5.560F;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];
    public static double dArrFld[]=new double[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 135);
        FuzzerUtils.init(Test.fArrFld, 0.947F);
        FuzzerUtils.init(Test.dArrFld, 1.28827);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i10, int i11, int i12) {

        boolean b=false;
        long l=-2083149163L;
        double d=-124.86876, d1=2.111175;
        int i14=1, i15=140, i16=-154, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -43634);

        b = b;
        for (int i13 : iArr) {
            l = 1;
            do {
                i10 *= 71;
                d -= i12;
                i13 += (int)(((l * i10) + Test.instanceCount) - i10);
                for (d1 = 1; d1 < 1; ++d1) {
                    iArr[(int)(l - 1)] = (int)2.34903;
                    i14 += i13;
                    if (false) break;
                    Test.instanceCount ^= i11;
                    i14 -= i12;
                }
            } while (++l < 4);
            for (i15 = 1; 4 > i15; i15++) {
                i13 += (((i15 * l) + Test.instanceCount) - i12);
                i13 *= i12;
            }
        }
        long meth_res = i10 + i11 + i12 + (b ? 1 : 0) + l + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) +
            i14 + i15 + i16 + FuzzerUtils.checkSum(iArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i8) {

        int i9=-1, i17=8, i18=33495, i19=-14, i20=-171;
        byte by=-58;
        float f1=-97.696F;

        switch ((((i8 = i8) >>> 1) % 1) + 69) {
        case 69:
            i9 = 1;
            do {
                i8 <<= (iMeth2(63345, i9, -64) >> by);
                Test.instanceCount = i8;
                i8 = -6597;
                for (i17 = i9; i17 < 5; ++i17) {
                    f1 -= i18;
                    for (i19 = 1; i19 > 1; i19--) {
                        boolean b1=false;
                        Test.instanceCount += i20;
                        Test.iArrFld[i19 - 1] = (int)f1;
                        i18 = i18;
                        Test.instanceCount *= 13;
                        i18 += i19;
                        if (b1) continue;
                    }
                    i20 += i17;
                }
            } while (++i9 < 318);
            break;
        default:
            Test.instanceCount *= 57495;
        }
        long meth_res = i8 + i9 + by + i17 + i18 + Float.floatToIntBits(f1) + i19 + i20;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, int i2, int i3) {

        int i4=-9, i5=-5871, i6=-192, i7=114, i21=-1, i22=27002, iArr1[]=new int[N];
        float f2=-27.726F;
        byte by1=33;
        short s=-10935;
        boolean b2=false, bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5991437889956985308L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -181);

        for (i4 = 17; i4 < 350; i4++) {
            for (i6 = 1; i6 < 5; ++i6) {
                i3 |= (int)(iMeth1(i2) - Test.instanceCount);
                Test.fArrFld[i6 - 1][i6 + 1] -= f2;
                switch ((((i1 >>> 1) % 1) * 5) + 95) {
                case 99:
                    by1 = (byte)i4;
                    for (i21 = i6; i21 < 2; i21++) {
                        Test.dArrFld[i4] = i6;
                        i3 = i6;
                        s %= (short)(i5 | 1);
                        if (b2) {
                            i3 = by1;
                            lArr[i21 + 1] |= i3;
                        }
                        bArr = bArr;
                        iArr1[i4] = i2;
                    }
                    break;
                default:
                    i22 -= i6;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + by1 + i21 + i22 + s + (b2 ? 1 :
            0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-2.944F, f3=0.616F;
        int i=-135, i23=-64125, i24=-227, i25=-25, i26=39470, i27=-56999, i28=-28654;
        short s2=-29076;
        double d2=86.4465;
        byte by2=2;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -1971989227L);

        for (f = 2; f < 204; ++f) {
            switch ((int)((f * 5) + 43)) {
            case 111:
                iMeth(-157, -157, i);
                break;
            case 368:
                i = (int)Test.instanceCount;
                Test.iArrFld[(int)(f)] += -204;
                break;
            case 304:
                i -= i;
                break;
            case 334:
                lArr1[(int)(f)] += i;
                Test.iArrFld[(int)(f)] = (int)8725057491598933173L;
                i = i;
                i23 = 1;
                while ((i23 += 3) < 124) {
                    i = i;
                    if (bFld) break;
                    if (false) {
                        Test.instanceCount -= i;
                        for (i24 = 1; i24 < 4; i24++) {
                            short s1=22300;
                            s1 += (short)-101;
                            i25 += i25;
                            Test.instanceCount = Test.instanceCount;
                            Test.iArrFld[i24 - 1] = i23;
                            Test.iArrFld = Test.iArrFld;
                            s1 = (short)i24;
                            i = (int)-68.128F;
                        }
                        for (i26 = i23; 4 > i26; i26++) {
                            s2 <<= (short)i25;
                            Test.instanceCount = i27;
                            d2 += f;
                            Test.instanceCount += (((i26 * f) + i25) - i24);
                            Test.iArrFld[i26 + 1] &= 241;
                        }
                        try {
                            i = (i25 / i24);
                            i = (-119 % i26);
                            i = (-61727 / i27);
                        } catch (ArithmeticException a_e) {}
                    } else {
                        Test.instanceCount <<= i23;
                    }
                }
                break;
            case 371:
                if (false) continue;
                break;
            case 229:
                d2 += d2;
                break;
            case 44:
                lArr1[(int)(f)] -= -14L;
                break;
            case 62:
                fFld -= i;
                break;
            case 118:
                i = s2;
                break;
            case 180:
                i25 += (int)Test.instanceCount;
            case 341:
                i27 -= (int)-2.352F;
                break;
            case 221:
                i = -33264;
            case 243:
                i25 *= i27;
                break;
            case 337:
                i -= i26;
                break;
            case 72:
                Test.iArrFld[(int)(f + 1)] += 1;
                break;
            case 388:
                i27 >>>= 205;
                break;
            case 47:
                fFld += i;
                break;
            case 193:
                i25 = i24;
                break;
            case 281:
                fFld += i;
                break;
            case 74:
                by2 += (byte)(f * f);
                break;
            case 391:
            case 266:
            case 73:
                lArr1[(int)(f - 1)] *= i27;
            case 188:
                i25 = i27;
            case 66:
                i27 = 11;
                break;
            case 65:
            case 240:
                fFld += (f * f);
                break;
            case 130:
                i >>= 45882;
                break;
            case 373:
                i = (int)d2;
                break;
            case 372:
                s2 >>= (short)i23;
                break;
            case 303:
                i25 += (int)f;
                break;
            case 383:
                i25 -= by2;
                break;
            case 228:
                Test.iArrFld = Test.iArrFld;
                break;
            case 318:
                i25 *= (int)30873L;
                break;
            case 268:
                Test.instanceCount *= s2;
            case 95:
                d2 -= i26;
                break;
            case 50:
                i28 = (int)Test.instanceCount;
                break;
            case 265:
                i27 = i26;
            case 216:
                i = -97;
                break;
            case 261:
                i27 += (int)Test.instanceCount;
                break;
            case 69:
                i28 -= (int)d2;
                break;
            case 323:
                sArrFld[(int)(f + 1)] = (short)i;
                break;
            case 206:
            case 45:
                fFld += (f * f);
            case 208:
                i25 = (int)Test.instanceCount;
            case 115:
                Test.instanceCount ^= Test.instanceCount;
                break;
            case 86:
                i28 += (int)f;
                break;
            case 54:
                Test.instanceCount *= Test.instanceCount;
                break;
            case 290:
                if (bFld) continue;
                break;
            case 175:
                Test.instanceCount *= i28;
                break;
            case 110:
                i += (int)(f + i27);
                break;
            case 121:
                fFld -= i26;
                break;
            case 233:
                i25 += (int)(((f * f) + i27) - i24);
                break;
            case 90:
                Test.instanceCount += (-9 + (f * f));
                break;
            case 272:
                i27 += (int)(f * f);
                break;
            case 224:
                f3 = i23;
                break;
            case 284:
            case 332:
                s2 &= (short)i26;
                break;
            case 342:
                Test.instanceCount -= Test.instanceCount;
            case 205:
                by2 = (byte)i25;
                break;
            case 367:
                Test.instanceCount += i23;
                break;
            case 123:
                i28 += (int)(((f * i27) + Test.instanceCount) - i24);
            case 119:
                by2 >>>= (byte)i25;
                break;
            case 348:
                Test.iArrFld[(int)(f + 1)] += (int)Test.instanceCount;
            case 338:
                i27 = i27;
                break;
            case 75:
                Test.instanceCount <<= i;
            case 279:
                try {
                    i28 = (7 % Test.iArrFld[(int)(f + 1)]);
                    i25 = (i23 % 5631);
                    i27 = (i / 1099184995);
                } catch (ArithmeticException a_e) {}
                break;
            case 287:
                Test.instanceCount -= Test.instanceCount;
                break;
            case 49:
                Test.dArrFld = FuzzerUtils.double1array(N, (double)2.127460);
                break;
            case 285:
                fFld += f;
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
