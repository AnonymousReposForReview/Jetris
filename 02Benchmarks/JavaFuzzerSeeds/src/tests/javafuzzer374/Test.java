package tests.javafuzzer374;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:56:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-209L;
    public static volatile double dFld=0.93619;
    public float fFld=0.258F;
    public short sFld=-5791;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i1=60300, i2=-55, i3=8, i4=-25974, i5=-60829, i6=201, iArr[]=new int[N];
        float f1=20.313F;
        short s=-20581, s1=7118;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -147);
        FuzzerUtils.init(lArr, -3325270168L);

        i1 += i1;
        for (i2 = 5; i2 < 133; ++i2) {
            iArr[i2 - 1] |= 2326;
            f1 -= i2;
            i4 = 1;
            while (++i4 < 12) {
                i1 += (i4 * i4);
                for (i5 = 1; 1 > i5; ++i5) {
                    switch ((i2 % 6) + 78) {
                    case 78:
                        switch (((i4 % 1) * 5) + 58) {
                        case 62:
                            if (b) {
                                s *= (short)f1;
                                i6 *= (int)l;
                                Test.instanceCount += (((i5 * s1) + Test.instanceCount) - Test.instanceCount);
                                Test.instanceCount += (((i5 * s1) + Test.instanceCount) - i3);
                            } else {
                                lArr[i5 - 1] = 6;
                            }
                            break;
                        default:
                            iArr[i5 + 1] <<= i6;
                        }
                    case 79:
                        Test.dFld -= -41292;
                    case 80:
                        try {
                            iArr[(i5 >>> 1) % N] = (108 / i3);
                            i1 = (-163 % i4);
                            i3 = (iArr[i5] % -255);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 81:
                        if (i5 != 0) {
                            vMeth2_check_sum += l + i1 + i2 + i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + s + s1 +
                                (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                    case 82:
                        i6 -= i1;
                        break;
                    case 83:
                    }
                }
            }
        }
        vMeth2_check_sum += l + i1 + i2 + i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + s + s1 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i, float f) {

        byte by=-115;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 43163);

        vMeth2(Test.instanceCount);
        iArr1[(i >>> 1) % N] *= i;
        by &= (byte)i;
        Test.instanceCount = i;
        i *= (int)Test.instanceCount;
        vMeth1_check_sum += i + Float.floatToIntBits(f) + by + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i7=-157, i8=-184, i9=215, i10=14958, i11=11, i12=-14, i13=143, iArr2[]=new int[N];
        float f2=2.335F, fArr[][]=new float[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, -77.960F);
        FuzzerUtils.init(iArr2, 158);
        FuzzerUtils.init(lArr1, -2592064173274530002L);

        vMeth1(i7, f2);
        for (i8 = 7; i8 < 266; ++i8) {
            fArr[i8 + 1][i8] -= Test.instanceCount;
            iArr2[i8 + 1] = i7;
            i9 = (int)636821417019260097L;
            iArr2[i8] = i8;
            for (i10 = 1; i10 < 6; ++i10) {
                lArr1[i10 - 1] = i9;
                iArr2[i10 + 1] = (int)Test.instanceCount;
            }
            Test.instanceCount -= -64584;
            for (i12 = 1; i12 < 6; ++i12) {
                i9 = (int)Test.instanceCount;
                i9 ^= -88;
                Test.instanceCount += -38;
                lArr1[i8 - 1] *= i7;
            }
        }
        vMeth_check_sum += i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i14=-8, i15=143, i16=5, i17=64924, i18=-3, i19=15, iArr3[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr3, 20931);

        vMeth();
        Test.instanceCount <<= i14;
        i14 *= 48064;
        i15 = 1;
        while (++i15 < 287) {
            for (i16 = 5; i16 < 88; ++i16) {
                i17 = 10;
                for (i18 = i16; i18 < 2; ++i18) {
                    i17 = i17;
                    if (b1) break;
                    i19 += (((i18 * i15) + i15) - i19);
                    i19 += i15;
                    Test.instanceCount = i14;
                    iArr3 = iArr3;
                    Test.instanceCount -= i17;
                    switch (((i15 % 8) * 5) + 40) {
                    case 76:
                        i17 -= (int)20.591F;
                        Test.instanceCount *= (long)fFld;
                        iArr3[i16 + 1] = (int)-310582627769718603L;
                        i14 -= i16;
                        break;
                    case 62:
                        Test.instanceCount -= 3737149428817022151L;
                        iArr3[i18 + 1] = (int)Test.instanceCount;
                        sFld = (short)i18;
                    case 79:
                        i19 <<= 52750;
                        if (b1) continue;
                        Test.instanceCount += i19;
                        sFld += (short)(i18 * Test.instanceCount);
                    case 57:
                        i19 -= sFld;
                        i17 <<= (int)-164L;
                        i14 += i19;
                        i14 = i14;
                        break;
                    case 61:
                        sFld >>= (short)i15;
                    case 78:
                        Test.dFld -= Test.instanceCount;
                        break;
                    case 72:
                        i19 += i18;
                        break;
                    case 51:
                        try {
                            iArr3[i18 + 1] = (118 / i14);
                            i19 = (114 / i17);
                            i17 = (iArr3[i18 - 1] % i14);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
