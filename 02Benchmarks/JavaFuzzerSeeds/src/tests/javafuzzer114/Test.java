package tests.javafuzzer114;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:33:03 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-47492L;
    public static float fFld=-44.678F;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public int iArrFld1[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 74);
        FuzzerUtils.init(Test.lArrFld, -1370073365045315945L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, int i3) {

        int i5=7, i6=14, i7=-230, i8=-13;
        byte by=124;

        for (int i4 : Test.iArrFld) {
            Test.iArrFld[(i4 >>> 1) % N] = i4;
            for (i5 = 1; i5 < 4; i5++) {
                for (i7 = 2; i7 > 1; i7 -= 3) {
                    Test.iArrFld[i5 - 1] = i4;
                    Test.iArrFld[i7] |= i8;
                    i8 += i7;
                    Test.fFld = Test.fFld;
                    Test.iArrFld[i5] |= (int)-3087123931L;
                    i3 = i6;
                    i6 = (int)Test.instanceCount;
                    if (i4 != 0) {
                        vMeth2_check_sum += s + i3 + i5 + i6 + i7 + i8 + by;
                        return;
                    }
                }
                Test.iArrFld[i5] >>= (int)Test.instanceCount;
                Test.iArrFld[i5] = i4;
                i3 = by;
            }
        }
        vMeth2_check_sum += s + i3 + i5 + i6 + i7 + i8 + by;
    }

    public static void vMeth1(int i, boolean b) {

        int i1=-42, i2=-8807, i9=-151, i10=-35450, i11=-78;
        double d=-64.97431;

        for (i1 = 3; i1 < 333; i1++) {
            d = Test.instanceCount;
            i = (int)Test.instanceCount;
            vMeth2((short)(18891), -7891);
            Test.iArrFld[i1] = i2;
            i9 = 1;
            while (++i9 < 5) {
                if (b) {
                    Test.iArrFld[i1 - 1] = 241;
                }
                for (i10 = 1; i10 > 1; i10 -= 3) {
                    i += (int)d;
                    Test.iArrFld[i10 - 1] *= (int)Test.instanceCount;
                    Test.fFld = i;
                    i <<= -24158;
                    Test.iArrFld[i9 + 1] *= i;
                    i *= (int)Test.fFld;
                }
            }
        }
        vMeth1_check_sum += i + (b ? 1 : 0) + i1 + i2 + Double.doubleToLongBits(d) + i9 + i10 + i11;
    }

    public void vMeth(long l) {

        float f=83.365F;
        int i12=235, i13=-32386, i14=-13, i15=207, i16=-12927, i17=-125, i18=-12925;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);

        f = 1;
        while (++f < 368) {
            vMeth1(-44061, bFld);
        }
        if (bFld) {
            for (i12 = 10; i12 < 380; ++i12) {
                for (i14 = 1; i14 < 5; ++i14) {
                    lArr = lArr;
                    for (i16 = 1; i16 < 2; i16 += 2) {
                        if (false) break;
                        i15 += (i16 * i16);
                        i13 = i12;
                        l *= (long)f;
                    }
                    i18 = 1;
                    do {
                        short s1=-30032;
                        l >>= s1;
                        i17 = (int)l;
                        i17 ^= (int)Test.instanceCount;
                    } while (++i18 < 2);
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=22686, i20=13900, i21=-3, i22=-47189, i23=38, i24=8, i25=14, i26=-87, i27=-11, i28=-14930, iArr[][]=new
            int[N][N];
        short s2=2039;
        float fArr[]=new float[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, 122.409F);
        FuzzerUtils.init(iArr, -249);
        FuzzerUtils.init(dArr, -87.28674);

        vMeth(Test.instanceCount);
        i19 /= -14;
        if (true) {
            fArr[(i19 >>> 1) % N] += -68L;
        } else {
            for (i20 = 9; i20 < 300; i20++) {
                for (i22 = 3; i22 < 86; ++i22) {
                    i19 = i23;
                    for (i24 = i22; i24 < 2; i24 += 3) {
                        i21 <<= 14;
                        Test.lArrFld[i22 + 1] = i21;
                        i19 >>= 7452;
                        Test.instanceCount = 140L;
                        i25 &= (int)0L;
                    }
                    iArrFld1[i20 - 1] -= i21;
                    Test.instanceCount = i19;
                    i25 += (int)Test.instanceCount;
                    for (i26 = 1; i26 < 2; i26++) {
                        double d1=-124.23246;
                        if (true) {
                            i27 += (((i26 * i24) + Test.instanceCount) - i25);
                            iArr = FuzzerUtils.int2array(N, (int)-3918);
                        } else if (bFld) {
                            i23 = i25;
                            Test.instanceCount += (long)Test.fFld;
                            switch ((i26 % 7) + 48) {
                            case 48:
                                i27 ^= i19;
                                break;
                            case 49:
                                i23 = (int)d1;
                                Test.lArrFld[i20] -= Test.instanceCount;
                                break;
                            case 50:
                                bArrFld[i20 + 1] = true;
                                break;
                            case 51:
                                s2 += (short)i26;
                                i23 += i20;
                                iArrFld1[i22 - 1] += (int)Test.fFld;
                                break;
                            case 52:
                                i28 = i28;
                                break;
                            case 53:
                                i28 += i22;
                            case 54:
                                dArr[i26 - 1] += i26;
                                break;
                            }
                        } else {
                            i25 += (-5 + (i26 * i26));
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
