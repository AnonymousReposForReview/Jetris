package tests.javafuzzer2911;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:58:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-248L;
    public float fFld=101.368F;

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        int i5=-8, i6=5, i7=25851, i8=-45546, i9=14, i10=48587, i11=36518, iArr1[]=new int[N];
        long l1=119L;
        byte by=-120;
        float f=-2.881F, fArr[]=new float[N];
        short s=-3928;

        FuzzerUtils.init(iArr1, -2);
        FuzzerUtils.init(fArr, 0.87F);

        for (i5 = 1; 221 > i5; i5++) {
            for (l1 = 1; l1 < 7; l1++) {
                i6 = by;
                iArr1[(int)(l1)] *= i5;
                i7 *= 34;
                for (i8 = 2; i8 > 1; i8--) {
                    i6 += i5;
                    i4 -= (int)f;
                    by = (byte)i5;
                    fArr[(int)(l1 - 1)] -= i4;
                    iArr1[(int)(l1 - 1)] += (int)-94L;
                    Test.instanceCount = i7;
                }
                for (i10 = 1; i10 < 2; i10++) {
                    i7 += i10;
                    s *= (short)i10;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + l1 + i7 + by + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + s +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i3, boolean b, long l) {


        i3 = i3;
        vMeth1(i3);
        vMeth_check_sum += i3 + (b ? 1 : 0) + l;
    }

    public static long lMeth() {

        int i=10, i1=5, i2=-13, i12=-154, i13=55369, i14=26267, iArr[][]=new int[N][N];
        double d=94.72069, dArr[]=new double[N];
        long l2=1739115480L;
        byte by1=-39;
        float f1=0.373F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -54696);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, -94.25650);

        i = 1;
        do {
            d += i;
        } while (++i < 182);
        for (i1 = 6; i1 < 290; i1 += 2) {
            iArr[i1][i1 - 1] = (i2--);
            vMeth(i1, false, l2);
            i2 -= i;
            i12 = 1;
            while (++i12 < 11) {
                switch (((-59 >>> 1) % 4) + 1) {
                case 1:
                    i2 = i1;
                    for (i13 = 1; i13 < 1; i13 += 3) {
                        Test.instanceCount = by1;
                        f1 += i1;
                        i14 = (int)Test.instanceCount;
                        i14 += (i13 | (long)f1);
                        iArr[i1][i13] <<= i13;
                    }
                    break;
                case 2:
                    bArr = bArr;
                    break;
                case 3:
                    dArr[i1 - 1] = f1;
                    break;
                case 4:
                    Test.instanceCount = i12;
                    break;
                default:
                    i14 |= i13;
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d) + i1 + i2 + l2 + i12 + i13 + i14 + by1 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=21998, i16=9, i17=-219, i18=52817, i19=9, i20=-64, i21=-26, iArr2[]=new int[N];
        short s1=-30821;
        long l3=0L;
        double d1=14.13802, dArr1[]=new double[N];
        boolean b1=false;

        FuzzerUtils.init(iArr2, -1);
        FuzzerUtils.init(dArr1, -2.30469);

        Test.instanceCount = lMeth();
        for (i15 = 3; i15 < 231; i15++) {
            i16 <<= i15;
            i16 = -20164;
            i17 = 1;
            while (++i17 < 110) {
                iArr2[i17 - 1] *= i17;
                for (i18 = 1; i18 > 1; --i18) {
                    i19 -= i16;
                    i16 = s1;
                    i19 = i18;
                    fFld = i19;
                    i16 *= i17;
                    try {
                        i16 = (i17 / i19);
                        i19 = (166 / i18);
                        i16 = (i19 % 130741074);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = i16;
                    i16 += (int)Test.instanceCount;
                    i19 += i16;
                }
                i19 += (int)Test.instanceCount;
                dArr1[i15 - 1] = fFld;
                i16 -= i16;
                Test.instanceCount >>>= i17;
                i19 *= (int)Test.instanceCount;
            }
            for (l3 = i15; 110 > l3; ++l3) {
                for (d1 = 1; d1 < 1; d1++) {
                    i19 = i16;
                    i16 *= (int)d1;
                    if (b1) break;
                    if (b1) continue;
                    i20 += (int)(((d1 * i18) + i19) - i15);
                    Test.instanceCount = -58823;
                    i21 >>>= i20;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
