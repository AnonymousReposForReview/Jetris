package tests.javafuzzer2886;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:17:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1604686062L;
    public static boolean bFld=true;
    public static double dFld=-2.83512;
    public static byte byFld=-55;
    public int iFld=12;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 167);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static int iMeth1(int i6) {


        i6 += (-i6);
        long meth_res = i6;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i7, float f, int i8) {

        int i9=5, i10=-2, i11=201, i12=62697, iArr1[]=new int[N];
        byte by=-101;
        long l1=-7613278568703893731L;

        FuzzerUtils.init(iArr1, -9);

        for (i9 = 4; 211 > i9; i9++) {
            switch ((i9 % 7) + 72) {
            case 72:
            case 73:
                iArr1[i9 + 1] += (int)f;
                break;
            case 74:
                for (i11 = 1; i11 < 8; ++i11) {
                    Test.instanceCount = i8;
                    i7 = i10;
                    i8 += i11;
                    switch ((((i8 >>> 1) % 3) * 5) + 68) {
                    case 75:
                        i12 *= i10;
                        by -= (byte)Test.instanceCount;
                        f += i9;
                        if (Test.bFld) break;
                        break;
                    case 80:
                        i7 -= i12;
                        if (Test.bFld) break;
                    case 73:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    }
                }
                break;
            case 75:
                i8 >>= i7;
                break;
            case 76:
            case 77:
                i10 = i8;
                break;
            case 78:
                f += i12;
                break;
            default:
                i7 <<= (int)l1;
            }
        }
        vMeth_check_sum += i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + i12 + by + l1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(long l) {

        int i13=78, i14=-49785, i15=-29965, i16=-6591, i17=-14, i18=-2616, i19=33607;
        float f1=-1.385F;
        short s1=10527;
        byte by1=5;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 9.28742);

        vMeth(i13, f1, i13);
        l <<= i13;
        Test.dFld += -72.12F;
        s1 %= (short)(i13 | 1);
        for (i14 = 374; i14 > 4; --i14) {
            i16 = 1;
            do {
                for (i17 = 1; i17 < 1; ++i17) {
                    switch ((i14 % 3) + 122) {
                    case 122:
                        i13 = i16;
                        i19 *= s1;
                        dArr[i16 + 1] = i15;
                        Test.bFld = Test.bFld;
                        break;
                    case 123:
                        i13 = i14;
                        i15 >>>= (int)l;
                        Test.bFld = Test.bFld;
                        break;
                    case 124:
                        by1 >>>= (byte)-51;
                    default:
                        s1 >>= (short)l;
                    }
                }
            } while (++i16 < 5);
        }
        long meth_res = l + i13 + Float.floatToIntBits(f1) + s1 + i14 + i15 + i16 + i17 + i18 + i19 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(int i2, short s) {

        int i3=-2, i4=12, i5=70, iArr[]=new int[N];
        float f2=-79.91F;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr, 5528);
        FuzzerUtils.init(byArr, (byte)26);

        i3 = 1;
        do {
            for (i4 = i3; i4 < 7; i4++) {
                if (Test.bFld) {
                    i5 += i4;
                    Test.instanceCount = ((iArr[i3]++) - (i3 + (-iMeth1(i2))));
                    Test.instanceCount = lMeth(-32718L);
                } else if (Test.bFld) {
                    i5 = (int)f2;
                    i2 += i4;
                    byArr[i4 + 1][i3] += (byte)Test.instanceCount;
                }
                Test.iArrFld[i3 - 1][i3 + 1] *= 34;
                switch ((i4 % 3) + 66) {
                case 66:
                    i2 = (int)Test.dFld;
                    f2 = 18.440F;
                    Test.dFld *= i3;
                    f2 *= i5;
                case 67:
                    Test.byFld += Test.byFld;
                case 68:
                    Test.dFld *= Test.dFld;
                    break;
                }
            }
        } while (++i3 < 233);
        long meth_res = i2 + s + i3 + i4 + i5 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-196, i1=185, i20=-31596, i21=247, i22=-4, i23=10, i24=-204;
        short s2=-6640;
        double d=0.6101;
        float f3=-106.116F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -533773270L);

        for (i = 5; i < 173; i++) {
            i1 = (iMeth(i1, s2) + i);
            i1 = (int)Test.instanceCount;
        }
        s2 += (short)i;
        Test.iArrFld[(153 >>> 1) % N][(i1 >>> 1) % N] *= (int)Test.instanceCount;
        Test.iArrFld[(i1 >>> 1) % N][(i1 >>> 1) % N] += i1;
        for (d = 5; d < 200; ++d) {
            i21 = 1;
            while (++i21 < 129) {
                i22 = 1;
                while (++i22 < 1) {
                    switch (((i22 % 6) * 5) + 115) {
                    case 117:
                        Test.instanceCount *= i20;
                        f3 = 19.769F;
                        lArr[(int)(d + 1)][(int)(d - 1)] <<= i22;
                        f3 += i21;
                        break;
                    case 129:
                        i1 = (int)Test.instanceCount;
                    case 126:
                        i20 *= 4;
                        break;
                    case 141:
                        lArr[i21 - 1][i22] -= i21;
                        s2 += (short)Test.instanceCount;
                        break;
                    case 136:
                        Test.instanceCount += (((i22 * Test.instanceCount) + f3) - f3);
                        Test.iArrFld[(int)(d + 1)][(int)(d)] = (int)2999122143L;
                    case 125:
                        Test.bFld = Test.bFld;
                    default:
                        i23 += (i22 * i22);
                        i20 >>= i24;
                        i20 = (int)Test.instanceCount;
                    }
                    i24 *= (int)f3;
                    i24 >>= i24;
                    i23 = (int)Test.instanceCount;
                    Test.iArrFld[i21 - 1][i21 - 1] = iFld;
                    i24 <<= (int)Test.instanceCount;
                    i24 /= (int)(i20 | 1);
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
