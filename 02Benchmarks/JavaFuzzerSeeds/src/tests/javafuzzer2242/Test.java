package tests.javafuzzer2242;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:47:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-33940L;
    public static float fFld=99.651F;
    public static boolean bFld=true;
    public static short sFld=-31857;
    public volatile byte byFld=69;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(long l1) {

        double d1=78.81451;
        int i4=-48594, i5=8, i6=-85, i7=-4, i8=181, iArr[]=new int[N];
        byte by=-94;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 95);
        FuzzerUtils.init(fArr, 25.745F);

        d1 = -57792L;
        i4 = 1;
        do {
            iArr[i4] = i4;
            for (i5 = 1; i5 < 13; ++i5) {
                iArr[i5 + 1] += i5;
                switch (((i4 >>> 1) % 1) + 13) {
                case 13:
                    if (i6 != 0) {
                        return ((int)(l1 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + i8 + by +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)))) % 2 > 0;
                    }
                    break;
                }
                i6 += (int)d1;
                fArr[i5 - 1] += i7;
                i7 = 6;
                i8 = 2;
                while ((i8 -= 2) > 0) {
                    Test.fFld -= 1;
                    fArr = fArr;
                    Test.fFld = i5;
                    by += (byte)i8;
                }
            }
        } while (++i4 < 123);
        long meth_res = l1 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + i8 + by + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(int i2, boolean b, int i3) {

        short s1=22949;
        double d=30.90345, d2=0.14429;
        int i9=-22319, i10=249, i11=3, i12=-152, iArr1[]=new int[N];
        float f1=-1.754F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr1, 20059);
        FuzzerUtils.init(byArr, (byte)98);

        if (bMeth(Test.instanceCount)) {
            s1 = (short)(s1 = (short)((i3++) >> (long)(i3 - d)));
        } else {
            iArr1[(i2 >>> 1) % N] -= i3;
            for (d2 = 9; d2 < 235; ++d2) {
                i2 *= i9;
                Test.instanceCount = i9;
                iArr1[(int)(d2)] *= i2;
                if (b) break;
                Test.instanceCount = (long)d;
                for (i10 = 7; 1 < i10; i10 -= 2) {
                    byArr[i10 - 1] = (byte)i10;
                    for (f1 = 1; f1 < 3; ++f1) {
                        byte by1=111;
                        i3 = -17804;
                        i2 -= i10;
                        i12 = by1;
                    }
                }
            }
        }
        vMeth_check_sum += i2 + (b ? 1 : 0) + i3 + s1 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d2) + i9 +
            i10 + i11 + Float.floatToIntBits(f1) + i12 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i1, short s, long l) {

        float f=-1.824F;
        int i13=70, i14=81, i15=232, iArr2[]=new int[N];
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 0.38424);
        FuzzerUtils.init(lArr, -1L);
        FuzzerUtils.init(iArr2, 5);

        f = 1;
        while (++f < 255) {
            vMeth(-191, Test.bFld, 4);
            i1 += (4834 + (f * f));
            i13 = 1;
            do {
                dArr[(int)(f)] -= i13;
                Test.instanceCount = 37;
                i1 = (int)f;
                for (i14 = (int)(f); i14 < 1; i14++) {
                    Test.fFld = i14;
                    lArr[i14 - 1] = i14;
                    l *= l;
                    i15 = (int)Test.fFld;
                    if (i15 != 0) {
                    }
                }
                lArr = lArr;
            } while (++i13 < 6);
            iArr2[(int)(f)] -= i13;
        }
        long meth_res = i1 + s + l + Float.floatToIntBits(f) + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=14, i16=-2, i17=-22, i18=226, i19=6, i20=-14, i21=171, i22=197, i23=37633, i24=17677, iArr3[][]=new
            int[N][N];
        float fArr1[]=new float[N];
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(fArr1, -1.618F);
        FuzzerUtils.init(dArr1, 63.56187);
        FuzzerUtils.init(iArr3, -132);

        i *= iMeth(i, (short)(-11430), Test.instanceCount);
        for (i16 = 1; 376 > i16; ++i16) {
            if (Test.bFld) {
                Test.sFld = (short)i16;
                i = (int)Test.instanceCount;
            } else if (Test.bFld) {
                for (i18 = 4; 67 > i18; ++i18) {
                    if (Test.bFld) break;
                    i17 -= (int)-66.846F;
                    i = (int)Test.instanceCount;
                    fArr1[i18 - 1] = i18;
                    i19 = i19;
                    Test.instanceCount = byFld;
                }
                Test.instanceCount *= i17;
                Test.instanceCount += i16;
                dArr1[i16][i16 + 1] = i18;
            } else if (false) {
                for (i20 = i16; 67 > i20; ++i20) {
                    for (i22 = 1; i22 < 1; i22++) {
                        double d3=2.26939;
                        Test.bFld = Test.bFld;
                        try {
                            i19 = (1069089504 / iArr3[i20][i16 + 1]);
                            i17 = (i17 / iArr3[i16 - 1][i20]);
                            i17 = (iArr3[i16 - 1][i22] % 14);
                        } catch (ArithmeticException a_e) {}
                        d3 = i19;
                        Test.fFld = -7;
                        Test.fFld -= Test.instanceCount;
                        Test.instanceCount += (i22 + i24);
                        Test.sFld -= (short)i;
                        switch (((i22 % 1) * 5) + 18) {
                        case 23:
                            Test.instanceCount += Test.instanceCount;
                            i >>= -121;
                            i += (int)d3;
                            break;
                        default:
                            i19 = i18;
                            i += (-174 + (i22 * i22));
                        }
                    }
                }
            } else {
                i23 -= i22;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
