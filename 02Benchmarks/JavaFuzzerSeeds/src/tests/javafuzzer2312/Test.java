package tests.javafuzzer2312;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 12:03:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4024045139558665150L;
    public static float fFld=-1.209F;
    public boolean bFld=true;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=-57802, i2=60948, i3=-249, i4=-51106, i5=-238, i6=29, iArr[]=new int[N];
        float f=-4.762F;
        byte by=0;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(dArr, 111.18408);

        iArr[(i1 >>> 1) % N] &= (int)-13L;
        for (f = 3; f < 151; f++) {
            iArr[(int)(f)] += i1;
            for (i3 = 1; i3 < 11; i3 += 3) {
                for (i5 = 4; i5 > 1; i5 -= 3) {
                    boolean b=false;
                    by += (byte)(i5 ^ i5);
                    i2 -= 30222;
                    if (b) continue;
                    Test.instanceCount += (i5 * i5);
                    Test.instanceCount += (((i5 * i6) + f) - i1);
                    dArr = dArr;
                    i1 >>= (int)Test.instanceCount;
                    i2 = 26807;
                    Test.instanceCount |= i1;
                    b = false;
                }
            }
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + by + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l, double d) {

        float f1=-1.293F;
        int i7=-13526, i8=-10628, i9=0, i10=-8;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -7L);

        vMeth1();
        for (f1 = 17; f1 < 375; ++f1) {
            byte by1=0;
            i8 = 1;
            while (++i8 < 5) {
                l += i7;
                i7 = (int)Test.instanceCount;
                if (b1) continue;
                i7 += (i8 - i8);
                lArr[i8 - 1] -= i7;
                for (i9 = 1; i9 < 1; i9++) {
                    Test.fFld -= -8974021290451113765L;
                    Test.fFld *= i10;
                    Test.instanceCount %= (i9 | 1);
                    i7 = (int)l;
                }
            }
            i7 += i7;
            Test.instanceCount = by1;
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i7 + i8 + (b1 ? 1 : 0) + i9 +
            i10 + FuzzerUtils.checkSum(lArr);
    }

    public float fMeth() {

        double d1=83.101779, d2=1.75078;
        int i11=-10, i12=-124, i13=63037, i14=31270, i15=-61476, i16=7, i17=13, i18=-11;
        short s=-19100;

        vMeth(Test.instanceCount, d1);
        for (d2 = 17; d2 < 362; d2++) {
            for (i12 = 1; i12 < 5; i12++) {
                i13 += (i12 * i12);
                i14 = 1;
                do {
                    i11 *= i11;
                    i13 += i11;
                    i11 += 200;
                    i11 += i14;
                } while (++i14 < 2);
                Test.fFld += i15;
            }
            i11 |= (int)Test.instanceCount;
            for (i16 = 1; i16 < 5; i16++) {
                i18 = 1;
                while ((i18 += 3) < 2) {
                    i17 = i16;
                    s += (short)(i18 * i18);
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + i15 + i16 +
            i17 + i18 + s;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=52, i20=13, i21=6, i22=-8, i23=-48394, i24=-34949, i25=27132, i26=-5, i27=56, i28=-49186, i29=-184,
            i30=3, i31=-8308, iArr1[]=new int[N];
        double d3=-2.58859;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, -26392);
        FuzzerUtils.init(fArr, 0.389F);

        i |= i;
        fMeth();
        i += i;
        for (int i19 : iArr1) {
            for (i20 = 63; 1 < i20; --i20) {
                for (i22 = i20; 2 > i22; i22 += 2) {
                    Test.instanceCount -= (long)d3;
                }
                Test.fFld *= i21;
            }
            i24 = 1;
            do {
                i23 = i;
                Test.instanceCount -= -2478066458535564625L;
                i21 -= (int)Test.fFld;
                for (i25 = 1; 1 > i25; ++i25) {
                    iArr1[i25] += 1;
                    fArr[i25 - 1][i25] *= i21;
                    i26 >>= i19;
                }
                i21 = (int)Test.instanceCount;
                i21 = i25;
                i >>= i21;
            } while (++i24 < 63);
            Test.fFld = i20;
            for (i27 = 1; 63 > i27; i27++) {
                i29 -= i24;
                i28 <<= i20;
                iArr1[i27] = 10;
                for (i30 = 1; i30 < 2; i30++) {
                    Test.instanceCount -= i31;
                    if (bFld) {
                        if (false) {
                            i28 += i30;
                            i23 -= (int)Test.instanceCount;
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
