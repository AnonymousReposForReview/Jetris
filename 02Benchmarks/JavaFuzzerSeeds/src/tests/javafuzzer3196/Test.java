package tests.javafuzzer3196;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:42:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3L;
    public static float fFld=2.913F;
    public static boolean bFld=true;
    public static int iFld=253;

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=77, i4=-40230, i5=-212, i6=-14, i7=105, i8=7, i9=-42632, i10=74;
        short s=10433;
        float f1=1.728F;
        byte by1=31;
        long l=-1762164762L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, -173L);

        i3 *= (int)Test.instanceCount;
        i3 = i3;
        for (i4 = 19; i4 < 311; i4++) {
            Test.instanceCount = i4;
            Test.instanceCount = s;
            lArr[i4 - 1] = i5;
            f1 *= i3;
        }
        for (i6 = 3; 232 > i6; i6++) {
            for (i8 = 1; 7 > i8; i8++) {
                f1 += s;
                by1 = (byte)i7;
                for (l = 1; l < 2; l++) {
                    Test.instanceCount += (long)f1;
                    i5 *= i5;
                    Test.instanceCount += Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + s + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + by1 + l + i10 +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, byte by, float f) {

        int i11=-27, i12=-14, i13=-59801, i14=237, i15=-62168, iArr[]=new int[N];
        double d=26.91140;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(fArr, 1.622F);

        vMeth1();
        i2 = i2;
        i11 = 1;
        do {
            for (i12 = i11; i12 < 5; ++i12) {
                i2 += i2;
                i2 -= i2;
                for (i14 = 1; i14 < 1; i14 += 3) {
                    try {
                        i15 = (iArr[i12 - 1] % i13);
                        iArr[i12] = (24922 / i12);
                        i15 = (iArr[i14] / 45803);
                    } catch (ArithmeticException a_e) {}
                    i13 -= (int)d;
                }
                if (i13 != 0) {
                    vMeth_check_sum += i2 + by + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 +
                        Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                switch ((i12 % 10) + 116) {
                case 116:
                    i15 += (i12 ^ i2);
                    f += i12;
                    iArr[i11 - 1] ^= i13;
                    break;
                case 117:
                    Test.instanceCount = by;
                    break;
                case 118:
                    iArr[i11 + 1] = 26756;
                case 119:
                    fArr[i11 - 1] *= 6L;
                    break;
                case 120:
                    iArr[i11 + 1] <<= i15;
                    break;
                case 121:
                    Test.instanceCount += (54175 + (i12 * i12));
                    break;
                case 122:
                    Test.instanceCount += Test.instanceCount;
                    break;
                case 123:
                    iArr = FuzzerUtils.int1array(N, (int)-62558);
                case 124:
                    Test.instanceCount += (i12 * i12);
                    break;
                case 125:
                    d += i2;
                    break;
                }
            }
        } while (++i11 < 313);
        vMeth_check_sum += i2 + by + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d)
            + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth() {

        int i16=223;
        byte by2=69;

        vMeth(i16, by2, Test.fFld);
        long meth_res = i16 + by2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=44565, i1=-236, i17=-148, i18=151, i19=-12, i20=14, i21=45, i22=48581, i23=141, i24=10, i25=-14,
            iArr1[]=new int[N];
        double d1=64.2389;
        byte by3=-24;
        short sArr[]=new short[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr1, -145);
        FuzzerUtils.init(sArr, (short)26227);
        FuzzerUtils.init(fArr1, 56.492F);

        for (i = 12; i < 389; i++) {
            i1 = (int)lMeth();
        }
        for (i17 = 6; 300 > i17; ++i17) {
            Test.bFld = Test.bFld;
            Test.instanceCount -= 4145013956301090823L;
            for (i19 = 86; i19 > i17; --i19) {
                i20 += (i19 + i19);
                iArr1[i17] *= i;
            }
            sArr[i17 - 1] <<= (short)i18;
            d1 -= i1;
            for (i21 = i17; i21 < 86; i21 += 2) {
                Test.fFld = Test.instanceCount;
                d1 = Test.fFld;
                i22 -= i20;
                i23 = 1;
                while (++i23 < 1) {
                    iArr1[i17 - 1] = 156;
                    i20 += (i23 - i23);
                }
                Test.instanceCount *= (long)Test.fFld;
                i18 += by3;
                switch (((i17 % 10) * 5) + 74) {
                case 111:
                    Test.instanceCount += (((i21 * i17) + Test.instanceCount) - Test.instanceCount);
                    Test.instanceCount += (((i21 * i20) + i18) - i19);
                    Test.instanceCount = i1;
                    i22 = i1;
                case 80:
                    for (i24 = 1; i24 < 1; i24++) {
                        i20 += (i24 * i24);
                        i20 *= Test.iFld;
                        i25 -= Test.iFld;
                        iArr1 = iArr1;
                        i25 = (int)Test.instanceCount;
                    }
                    break;
                case 90:
                    Test.iFld *= (int)d1;
                    break;
                case 75:
                    i20 = (int)16.22960;
                case 100:
                    i18 += i21;
                    break;
                case 95:
                    i22 /= (int)(0 | 1);
                    break;
                case 89:
                    i1 = (int)76.259F;
                    break;
                case 109:
                    Test.instanceCount = i22;
                    break;
                case 78:
                    iArr1[i21 - 1] = i1;
                case 113:
                    fArr1[i17] *= Test.iFld;
                default:
                    i18 = (int)Test.instanceCount;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
