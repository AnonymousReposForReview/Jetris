package tests.javafuzzer2775;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:57:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3304094830L;
    public short sFld=-5665;
    public static float fFld=0.731F;
    public static volatile int iFld=14873;
    public int iFld1=3;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, float f) {

        int i6=-8, i7=-2, i8=8, i9=-17, i10=12, iArr[]=new int[N];
        double d2=4.98226;
        boolean b=true;

        FuzzerUtils.init(iArr, 13);

        Test.instanceCount += i5;
        i5 >>= -14;
        i6 = 1;
        do {
            switch (((i6 % 4) * 5) + 61) {
            case 77:
                for (i7 = 1; i7 < 6; i7++) {
                    iArr = iArr;
                    Test.fFld *= i7;
                }
                break;
            case 66:
                i8 *= i8;
                for (i9 = i6; i9 < 6; i9++) {
                    d2 += i9;
                    if (b) break;
                    Test.fFld = i7;
                    Test.instanceCount += i9;
                }
                break;
            case 75:
                d2 *= i6;
                d2 *= Test.fFld;
                break;
            case 76:
                Test.instanceCount >>>= 2494314228L;
                break;
            }
        } while (++i6 < 251);
        vMeth2_check_sum += i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d2) + (b ?
            1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l1, int i4) {

        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -35489);

        vMeth2(Test.iFld, Test.fFld);
        iArr1[(Test.iFld >>> 1) % N] = Test.iFld;
        vMeth1_check_sum += l1 + i4 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i1, int i2, long l) {

        double d=-1.25798, d1=-16.20571;
        int i3=-40393, i11=14, i12=-59;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 51097L);

        i1 >>= (int)(l - (d++));
        for (d1 = 12; d1 < 237; ++d1) {
            lArr[(int)(d1 - 1)] <<= ((-13 * (i1 + i2)) * ((i2 + i1) * (14 * (sFld--))));
            l -= (long)(-(-(i1 + Test.fFld)));
            vMeth1(Test.instanceCount, i3);
            if (false) break;
            Test.instanceCount -= (long)Test.fFld;
            for (i11 = 1; i11 < 7; ++i11) {
                Test.instanceCount >>= Test.iFld;
                Test.instanceCount -= (long)d1;
            }
            d = i11;
            Test.fFld -= i1;
            lArr[(int)(d1 - 1)] = -42550;
            iArrFld[(int)(d1 - 1)] = (int)Test.instanceCount;
        }
        Test.fFld += -48320L;
        vMeth_check_sum += i1 + i2 + l + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i3 + i11 + i12 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=1894, i13=28, i14=11, i15=65203, i16=-81, i17=5, i18=-216, i19=50048, i20=47789, i21=10, iArr2[]=new
            int[N];
        byte by=-56;
        boolean b1=false;
        float f1=91.703F, f2=-1.740F;
        double d3=2.117381;

        FuzzerUtils.init(iArr2, 232);

        i = 1;
        do {
            vMeth(Test.iFld, i, Test.instanceCount);
            switch ((i % 1) + 16) {
            case 16:
                Test.instanceCount = by;
                if (b1) break;
            }
        } while (++i < 251);
        for (f1 = 14; f1 < 281; f1++) {
            i14 = 1;
            while (++i14 < 94) {
                for (i15 = 1; i15 < 1; i15++) {
                    i13 += (-22344 + (i15 * i15));
                    if (b1) continue;
                    sFld += (short)(i15 * f1);
                    Test.instanceCount *= i14;
                    i13 <<= i14;
                    Test.fFld = i16;
                }
                for (f2 = 1; f2 < 1; f2++) {
                    iFld1 += (int)((long)f2 | Test.instanceCount);
                    Test.fFld += (float)d3;
                    sFld = sFld;
                }
                for (i18 = 1; i18 < 1; ++i18) {
                    Test.instanceCount += i13;
                }
                i17 *= (int)Test.instanceCount;
                i16 = (int)d3;
                i17 += i;
            }
            Test.instanceCount -= Test.instanceCount;
            if (b1) {
                for (i20 = 5; i20 < 94; i20++) {
                    Test.iFld >>= (int)Test.instanceCount;
                    i16 += (int)-42L;
                    try {
                        i19 = (i20 / i13);
                        iArr2[(int)(f1 + 1)] = (i17 % iArrFld[i20 + 1]);
                        i13 = (i21 / 73);
                    } catch (ArithmeticException a_e) {}
                    Test.iFld <<= (int)Test.instanceCount;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
