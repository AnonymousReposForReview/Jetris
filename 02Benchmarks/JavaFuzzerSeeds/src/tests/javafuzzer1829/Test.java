package tests.javafuzzer1829;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:05:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8714628381932935585L;
    public static short sFld=-10988;
    public static float fFld=-2.163F;
    public static boolean bFld=false;
    public static double dFld=2.89914;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -358227912L);
        FuzzerUtils.init(Test.dArrFld, 0.78713);
        FuzzerUtils.init(Test.byArrFld, (byte)82);
        FuzzerUtils.init(Test.iArrFld, -13);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i8=188, i9=80, i10=114;
        double d3=0.47928;
        float f1=-106.613F;
        byte by2=9;
        short s=-15022;

        Test.instanceCount -= i8;
        for (i9 = 4; 236 > i9; i9++) {
            i8 -= i8;
        }
        d3 = 1;
        while (++d3 < 159) {
            Test.instanceCount += i8;
            if (false) break;
            f1 *= Test.instanceCount;
            i10 += 3;
            by2 = (byte)64047;
            Test.instanceCount += i9;
            Test.dArrFld[(int)(d3 - 1)] -= -37325;
            Test.byArrFld[(i9 >>> 1) % N] = (byte)i10;
            i10 *= i9;
        }
        s = (short)-121;
        Test.instanceCount = -172;
        vMeth1_check_sum += i8 + i9 + i10 + Double.doubleToLongBits(d3) + Float.floatToIntBits(f1) + by2 + s;
    }

    public static short sMeth(byte by1, long l) {

        int i6=-20766, i7=10, i12=20109, i13=49009, i14=-12, i15=34217, i16=176;
        double d2=-11.70018;
        float f=0.68F, f2=22.810F;

        switch (((((i6++) >>> 1) % 3) * 5) + 111) {
        case 113:
            d2 -= (-Math.abs(Math.abs(i6)));
            for (f = 16; f < 354; f++) {
                vMeth1();
                Test.iArrFld[(i6 >>> 1) % N] = (int)Test.instanceCount;
            }
            f2 += i7;
            for (i12 = 5; i12 < 134; i12++) {
                i6 -= Test.sFld;
            }
            break;
        case 121:
            i7 = i12;
            i14 = 1;
            while (++i14 < 282) {
                for (i15 = 6; i15 > i14; --i15) {
                    i13 -= i6;
                    i7 <<= i15;
                    f2 -= Test.instanceCount;
                    if (true) break;
                }
            }
            break;
        case 118:
        }
        long meth_res = by1 + l + i6 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f) + i7 +
            Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + i16;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i1) {

        int i2=-11, i3=-32212, i4=3060, i5=-8432, i17=-4, i18=-1, i19=-32639;
        double d1=-45.68553;
        byte by=11;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -118.522F);

        for (i2 = 13; i2 < 332; ++i2) {
            d1 += Math.max(Test.instanceCount, Test.lArrFld[i2 + 1]++);
            for (i4 = 1; i4 < 5; ++i4) {
                boolean b=false;
                by += (byte)i4;
                Test.instanceCount += i4;
                switch (((i4 >>> 1) % 8) + 13) {
                case 13:
                    i3 |= (i1 - sMeth(by, 57747L));
                    i1 += (-9 + (i4 * i4));
                    b = b;
                    i1 = i4;
                    break;
                case 14:
                    i1 = (int)Test.instanceCount;
                    for (i17 = i4; 2 > i17; i17++) {
                        fArr[i4 - 1] *= Test.instanceCount;
                        i1 -= i2;
                        i3 <<= i18;
                    }
                case 15:
                    i19 += i3;
                    break;
                case 16:
                    i5 >>= i3;
                case 17:
                    i3 += (int)1.111438;
                    break;
                case 18:
                    Test.fFld -= i2;
                    break;
                case 19:
                    i18 = (int)Test.fFld;
                    break;
                case 20:
                    Test.instanceCount -= i17;
                default:
                    i3 += (i4 | i19);
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + Double.doubleToLongBits(d1) + i4 + i5 + by + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        double d=0.6284;
        int i=-121, i20=4, i21=-42327, i22=-58, i23=15096, i24=-72, i25=143;
        byte by3=-119;

        for (d = 228; 13 < d; d -= 3) {
            vMeth(i);
            Test.bFld = Test.bFld;
            Test.instanceCount += (long)((long)d ^ i);
            Test.dFld += i;
            Test.instanceCount += (long)(((d * i) + i) - Test.instanceCount);
            switch ((int)(((d % 1) * 5) + 40)) {
            case 41:
                for (i20 = 7; i20 < 353; i20++) {
                    for (i22 = 1; i22 < 2; i22++) {
                        i23 += i22;
                        switch ((int)(((d % 3) * 5) + 105)) {
                        case 120:
                            Test.instanceCount += (i22 - Test.instanceCount);
                        case 107:
                            i *= (int)Test.dFld;
                            i21 *= (int)Test.fFld;
                            break;
                        case 117:
                            i23 = i20;
                            break;
                        }
                        i23 += i22;
                        Test.instanceCount -= i20;
                        Test.instanceCount = 77;
                        Test.iArrFld[i20 - 1] ^= i20;
                        Test.iArrFld[(int)(d)] -= i23;
                        Test.iArrFld[i20 - 1] -= -157;
                        i23 -= (int)Test.instanceCount;
                        switch (((i21 >>> 1) % 1) + 30) {
                        case 30:
                            Test.instanceCount *= Test.instanceCount;
                            i -= i;
                            Test.iArrFld[(-4 >>> 1) % N] >>= i;
                            break;
                        }
                    }
                }
                for (i24 = 10; 353 > i24; ++i24) {
                    i *= (int)Test.instanceCount;
                    by3 >>= (byte)i21;
                    i = (int)-108.608F;
                }
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
