package tests.javafuzzer1914;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:47:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-30515L;
    public static int iFld=-8;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -6);
        FuzzerUtils.init(Test.lArrFld, -3151843136L);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        byte by2=63;

        Test.instanceCount = by2;
        vMeth1_check_sum += by2;
    }

    public static byte byMeth() {

        long l1=-9L;
        int i1=-72, i2=-200, i3=35693;
        byte by1=2;
        float f=-18.55F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.4552);

        for (l1 = 10; l1 < 196; ++l1) {
            dArr[(int)(l1)] -= i1;
            i1 = (-by1);
            vMeth1();
            i1 = -47759;
        }
        i1 -= (int)61431L;
        for (i2 = 7; 302 > i2; i2++) {
            Test.iArrFld[i2] /= (int)(i1 | 1);
            i1 = i1;
            i3 += (((i2 * i1) + i1) - f);
            i1 -= i2;
            by1 = (byte)f;
            Test.iArrFld[i2] = -178;
        }
        i3 = Test.iFld;
        Test.iFld = (int)Test.instanceCount;
        long meth_res = l1 + i1 + by1 + i2 + i3 + Float.floatToIntBits(f) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(byte by, int i, double d) {

        float f1=0.314F, f2=34.940F;
        int i4=-127, i5=-57883, i6=-178;
        short s=-31342;
        boolean b=false;
        long lArr[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(lArr, 48206L);
        FuzzerUtils.init(dArr1, 6.106671);

        i -= (int)Test.instanceCount;
        for (long l : lArr) {
            i = (byMeth() * Test.iFld);
            by += (byte)f1;
            Test.iArrFld = Test.iArrFld;
            Test.iFld = Test.iFld;
            for (i4 = 1; i4 < 4; i4++) {
                for (f2 = 2; f2 > 1; --f2) {
                    i >>>= i5;
                    switch ((i4 % 7) + 95) {
                    case 95:
                        i5 += (12 + (f2 * f2));
                        Test.iFld += (int)(((f2 * Test.iFld) + l) - s);
                    case 96:
                        i5 -= (int)f1;
                        break;
                    case 97:
                        Test.iArrFld[(int)(f2 - 1)] += i;
                        i6 += (int)f2;
                    case 98:
                        b = b;
                        break;
                    case 99:
                        Test.iFld = (int)Test.instanceCount;
                        break;
                    case 100:
                        i6 ^= (int)l;
                    case 101:
                        b = b;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += by + i + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i4 + i5 +
            Float.floatToIntBits(f2) + i6 + s + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        byte by3=112;
        int i7=184, i8=-77, i9=7, i10=-48165, i11=51058, i12=97, i13=-8, i14=145, i15=-50161;
        boolean b1=true;
        float f3=2.771F, f4=-49.453F;
        long l3=-65174L;
        short s2=-19632;

        vMeth(by3, Test.iFld, 4.126035);
        Test.iFld = (int)101L;
        Test.iFld += (int)Test.instanceCount;
        Test.iFld = (int)Test.instanceCount;
        for (i7 = 4; i7 < 146; ++i7) {
            short s1=-31196;
            Test.iFld >>= Test.iFld;
            s1 >>>= (short)-128;
        }
        for (i9 = 9; i9 < 238; ++i9) {
            for (i11 = 3; i11 < 110; i11++) {
                if (b1) continue;
                Test.instanceCount = i9;
                Test.iFld += (11007 + (i11 * i11));
                Test.instanceCount = i9;
            }
            f3 = 1;
            while ((f3 += 3) < 110) {
                Test.iFld >>= i7;
                Test.iArrFld[i9 + 1] -= 112;
                i8 <<= i12;
                i10 += (int)(f3 * f3);
                i10 -= i12;
            }
            i12 <<= i13;
            if (false) break;
            for (l3 = 3; 110 > l3; l3++) {
                if (b1) continue;
                Test.iFld = i11;
                f4 -= l3;
                Test.lArrFld[i9 - 1] = l3;
                i15 = 2;
                while (--i15 > 0) {
                    i14 = i13;
                    Test.iArrFld[(int)(l3)] += (int)l3;
                    s2 = (short)i9;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
