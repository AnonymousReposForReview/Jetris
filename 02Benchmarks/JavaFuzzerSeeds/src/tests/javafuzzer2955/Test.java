package tests.javafuzzer2955;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:49:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=40001L;
    public static volatile int iFld=5;
    public byte byFld=11;
    public static int iFld1=5;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -43303);
        FuzzerUtils.init(Test.fArrFld, 0.443F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i1=241, i2=0, i3=2310, iArr[]=new int[N];
        double d=-92.22544, dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(lArr, 11L);
        FuzzerUtils.init(dArr, -1.7561);

        Test.instanceCount *= Test.iFld;
        i1 = 1;
        do {
            iArr[i1] = -5;
            for (i2 = 1; 10 > i2; i2 += 2) {
                float f=-1.218F;
                lArr[i2] -= (long)f;
                f -= Test.iFld;
                i3 = -27;
                switch ((((i1 >>> 1) % 2) * 5) + 109) {
                case 112:
                    dArr = dArr;
                    Test.instanceCount >>= -124;
                    Test.instanceCount *= i2;
                    Test.iFld -= i3;
                    break;
                case 118:
                    Test.iFld += (int)f;
                    d = f;
                    Test.instanceCount += i2;
                    break;
                default:
                    Test.iFld = (int)f;
                }
            }
        } while (++i1 < 155);
        vMeth2_check_sum += i1 + i2 + i3 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1() {

        int i=-225, i4=9, i5=9336, i6=-4, i7=13;
        float f1=0.748F, f2=0.769F;
        long l=-244L;
        byte by=58;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(bArr, false);

        Test.instanceCount -= (--i);
        vMeth2();
        f1 += Test.iFld;
        for (i4 = 1; i4 < 175; ++i4) {
            i5 = i;
            i -= -18;
            for (l = 9; l > i4; l--) {
                i = 185;
                for (f2 = 1; f2 < 1; ++f2) {
                    Test.instanceCount = -117;
                    i7 = by;
                    i7 += i5;
                }
                Test.instanceCount -= Test.instanceCount;
                i += (int)l;
                bArr[i4 + 1][i4 + 1] = true;
            }
        }
        vMeth1_check_sum += i + Float.floatToIntBits(f1) + i4 + i5 + l + i6 + Float.floatToIntBits(f2) + i7 + by +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i9=50516, i10=46270, i11=-18, i12=-4;
        float f3=2.239F;
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(dArr1, 10.56824);

        vMeth1();
        Test.iFld = Test.iFld;
        for (int i8 : Test.iArrFld) {
            for (i9 = 1; i9 < 4; ++i9) {
                for (i11 = 1; i11 < 2; ++i11) {
                    f3 = i11;
                    Test.iFld = Test.iFld;
                    Test.iFld >>= i10;
                    Test.instanceCount += 13;
                    f3 += i11;
                    dArr1[i11][i11 - 1] += i10;
                    Test.iArrFld[i11] -= -17986;
                    i8 += (i11 * i11);
                    Test.iArrFld[i11 + 1] = -2;
                    f3 += (((i11 * Test.iFld) + i11) - f3);
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i11 + i12 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i13=-61048, i14=21, i15=61403, i16=9267, i17=-60880, i18=45259, i19=141;
        boolean b=true;
        float f4=-56.29F;
        double dArr2[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr2, 0.20947);
        FuzzerUtils.init(lArr1, -2215059196L);

        vMeth();
        Test.iFld >>= (int)Test.instanceCount;
        if (b) {
            byArrFld[(2 >>> 1) % N] = (byte)Test.iFld;
            for (i13 = 4; i13 < 293; i13++) {
                i14 += (i13 ^ Test.instanceCount);
                for (i15 = 4; i15 < 87; ++i15) {
                    if (b) {
                        byFld += (byte)(i15 | Test.instanceCount);
                        Test.iArrFld[i13 - 1] += i16;
                        i16 = (int)Test.instanceCount;
                    } else {
                        for (i17 = 1; i17 < 2; ++i17) {
                            Test.instanceCount += (102 + (i17 * i17));
                            Test.instanceCount = Test.instanceCount;
                            i14 <<= i16;
                            Test.iArrFld[i17] |= Test.iFld;
                            i18 >>= i18;
                            Test.instanceCount = 37972L;
                            i14 = i17;
                            dArr2[i15] = i14;
                            Test.fArrFld[i15] = 192;
                            Test.instanceCount += (i17 ^ (long)f4);
                        }
                        i14 -= Test.iFld1;
                    }
                    Test.instanceCount ^= i14;
                    i19 = 1;
                    while (++i19 < 2) {
                        f4 = -48;
                        b = b;
                        Test.iArrFld = Test.iArrFld;
                        f4 *= f4;
                        Test.iFld1 <<= (int)Test.instanceCount;
                    }
                }
            }
        } else if (true) {
            lArr1[(i17 >>> 1) % N] <<= -47;
        } else {
            i14 += i19;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
