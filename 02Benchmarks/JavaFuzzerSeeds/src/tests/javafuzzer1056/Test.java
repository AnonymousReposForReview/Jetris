package tests.javafuzzer1056;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:43:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=186L;
    public static int iFld=147;
    public static float fFld=-2.650F;
    public static short sFld=-9566;
    public static double dFld=-22.102652;
    public boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -8168844506833299009L);
        FuzzerUtils.init(Test.fArrFld, -112.674F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b, int i8, long l1) {

        float f1=88.665F;
        int i9=-35877, i10=124, i11=69, i12=13, i13=63468;
        double d1=108.5652;

        if (b) {
            f1 = f1;
            for (i9 = 12; i9 < 200; ++i9) {
                Test.lArrFld[i9 + 1] = l1;
                i11 = 1;
                while (++i11 < 8) {
                    i10 = (int)-955384993459566752L;
                    if (i11 != 0) {
                    }
                    i10 >>>= Test.iFld;
                    d1 *= i9;
                    i10 *= i10;
                    switch (((i9 % 2) * 5) + 3) {
                    case 4:
                        for (i12 = 1; i12 < 1; i12++) {
                            Test.iFld = (int)d1;
                            Test.iFld += (int)d1;
                            i8 += i8;
                        }
                        break;
                    case 13:
                        i10 -= (int)Test.instanceCount;
                        break;
                    }
                }
            }
        } else {
            f1 = Test.iFld;
        }
        long meth_res = (b ? 1 : 0) + i8 + l1 + Float.floatToIntBits(f1) + i9 + i10 + i11 + Double.doubleToLongBits(d1)
            + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6) {

        int i7=14, i14=-6, i15=-33, iArr[]=new int[N];
        boolean b1=true;
        double d2=121.59809;

        FuzzerUtils.init(iArr, 128);

        i6 += (i6--);
        for (long l : Test.lArrFld) {
            Test.fArrFld[(i7 >>> 1) % N] = Integer.reverseBytes(iMeth(b1, Test.iFld, Test.instanceCount));
            for (i14 = 1; i14 < 4; i14++) {
                byte by=-8;
                Test.iFld |= -833;
                by += (byte)(0 + (i14 * i14));
                i7 += (i14 | i6);
                d2 += l;
                iArr[i14] = (int)Test.fFld;
                d2 = Test.iFld;
                l += (-14 + (i14 * i14));
                by = (byte)Test.sFld;
                Test.sFld = (short)i14;
            }
            try {
                Test.iFld = (i15 % -18977);
                i6 = (16469 / i7);
                i7 = (-8823 / i7);
            } catch (ArithmeticException a_e) {}
            i7 *= i14;
        }
        vMeth1_check_sum += i6 + i7 + (b1 ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(int i4, int i5) {


        vMeth1(i4);
        Test.fArrFld[(i5 >>> 1) % N] = -21637;
        i5 -= Test.iFld;
        i5 -= (int)-2153207453L;
        vMeth_check_sum += i4 + i5;
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=12, i2=-13, i3=-59834, i17=30, i18=-60628, i19=-20618, i20=-223, i21=74, iArr1[]=new int[N];
        float f=68.349F;
        double d=104.129239;
        long l2=-9024233726612171097L;
        byte by1=125, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)56);
        FuzzerUtils.init(iArr1, -227);

        i = 1;
        do {
            f = 1;
            do {
                for (d = 1; d < 1; ++d) {
                    byArr = (byArr = byArr);
                }
            } while (++f < 120);
            for (i2 = 4; i2 < 120; ++i2) {
                if ((-(i1++)) != i2) break;
            }
            switch ((i % 1) + 120) {
            case 120:
                vMeth(Test.iFld, Test.iFld);
                i1 += (14 + (i * i));
                Test.fArrFld[i + 1] += 1568270618L;
                switch ((i % 2) * 5) {
                case 4:
                    if (bFld) {
                        Test.instanceCount = (long)27.193F;
                        for (l2 = i; 120 > l2; ++l2) {
                            iArr1[(int)(l2)] = by1;
                            for (i18 = 1; i18 < 1; ++i18) {
                                i1 = i3;
                                Test.fFld += i19;
                                Test.dFld *= i3;
                            }
                            i1 >>= i18;
                            i1 += (int)(((l2 * Test.instanceCount) + l2) - f);
                        }
                    } else {
                        i1 += (int)d;
                    }
                    Test.instanceCount += Test.instanceCount;
                    i17 = i2;
                    i3 += i1;
                    break;
                case 2:
                    i3 <<= i2;
                }
                break;
            }
            i1 -= (int)l2;
            for (i20 = 3; i20 < 120; i20++) {
                i1 <<= i17;
                Test.instanceCount = 0;
            }
        } while (++i < 210);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
