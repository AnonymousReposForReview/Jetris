package tests.javafuzzer297;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:24:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-11L;
    public int iFld=17329;
    public static double dFld=50.41563;
    public static float fFld=1.205F;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -27721L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        long l1=-3579521393L;
        int i5=-13134, i6=237, i7=21, i8=-59, i9=-68, i10=4, i11=-11, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 3);

        iArr[(i3 >>> 1) % N] = i3;
        iArr[(-230 >>> 1) % N] = (int)-69.58F;
        for (l1 = 3; l1 < 156; l1++) {
            Test.dFld = Test.instanceCount;
            for (i6 = (int)(l1); i6 < 10; i6++) {
                Test.dFld -= i7;
            }
            Test.fFld -= i5;
            for (i8 = (int)(l1); 10 > i8; ++i8) {
                for (i10 = 1; i10 < 1; ++i10) {
                    short s=-30475;
                    i7 += (i10 * i7);
                    i9 += (i10 * i10);
                    i11 += (i10 | i8);
                    i4 = i3;
                    i4 = (int)l1;
                    Test.fFld = s;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + l1 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, double d) {

        int i1=-11, i2=-100, i12=-7, i13=45723, i14=185, i15=48, i16=-12435, i17=54505, i18=144, i19=-96;

        Test.instanceCount -= Test.instanceCount;
        for (i1 = 7; i1 < 307; i1++) {
            vMeth1(i1, i1);
            i2 = i2;
            for (i12 = 1; i12 < 6; i12 += 2) {
                for (i14 = 1; i14 < 3; i14++) {
                    i13 %= -28490;
                }
            }
            i2 += i12;
            for (i16 = 1; i16 < 6; i16++) {
                i17 -= i16;
                for (i18 = 1; 2 > i18; i18 += 3) {
                    Test.fFld += (-8L + (i18 * i18));
                    i13 >>= i19;
                    i19 -= (int)Test.instanceCount;
                    l >>= -91;
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d) + i1 + i2 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=136, i20=-7581, i21=-63000, i22=5107, i23=9, i24=35403, i25=2, i26=-9, i27=-21, i28=0;
        short s1=19690;
        long l2=203L;

        i = iMeth(Test.instanceCount, Test.dFld);
        for (i20 = 13; i20 < 279; ++i20) {
            Test.fFld *= i;
            Test.dFld *= i20;
            Test.fFld = 131;
            for (i22 = 6; i22 > i20; i22--) {
                try {
                    i = (i % i);
                    i23 = (-182 % i24);
                    i21 = (i23 % -146);
                } catch (ArithmeticException a_e) {}
                for (i25 = 1; i25 < 1; ++i25) {
                    Test.bFld = true;
                    i23 = (int)1.569F;
                }
                for (i27 = i20; i27 < 1; ++i27) {
                    if (Test.bFld) break;
                    i26 -= i;
                    s1 += (short)i27;
                }
                l2 >>= 9187;
            }
        }
        vMeth_check_sum += i + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + s1 + l2;
    }

    public void mainTest(String[] strArr1) {

        double d1=0.31168;
        int i29=-30, i30=0, i31=6745, i32=16322, i33=-58390, i34=6, i35=21397, iArr1[]=new int[N];
        short s2=-21202;

        FuzzerUtils.init(iArr1, -4);

        switch (((((int)(Test.instanceCount - iFld)) >>> 1) % 1) + 52) {
        case 52:
        }
        iFld = iFld;
        vMeth();
        iFld += iFld;
        iFld *= (int)Test.fFld;
        for (d1 = 3; 226 > d1; d1++) {
            if (Test.bFld) break;
        }
        if (Test.bFld) {
            Test.lArrFld[(iFld >>> 1) % N] >>>= iFld;
        }
        for (i30 = 5; i30 < 338; i30++) {
            for (i32 = i30; i32 < 76; ++i32) {
                i33 -= (int)Test.fFld;
                iFld += i32;
                for (i34 = 1; i34 < 1; i34++) {
                    switch (((i32 >>> 1) % 1) + 11) {
                    case 11:
                        s2 += (short)i34;
                        iFld >>>= iFld;
                        iFld += (i34 | s2);
                        i29 += (((i34 * i31) + i32) - s2);
                        break;
                    }
                    if (true) continue;
                }
                iArr1[i32] = (int)Test.fFld;
                Test.fFld += (((i32 * s2) + Test.instanceCount) - iFld);
                i35 *= (int)Test.fFld;
            }
            iArr1[i30 + 1] -= i31;
            Test.dFld = i33;
            iFld ^= (int)-20L;
            i33 = i29;
            i29 += (i30 | i35);
        }
        iFld *= i33;
        iFld <<= 4;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
