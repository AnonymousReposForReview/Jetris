package tests.javafuzzer2787;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:03:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1836558474L;
    public static float fFld=0.816F;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 35.32F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, byte by) {

        short s=1704;
        int i7=58195, i8=-27302, i9=177, i10=47124, i11=1, i12=-33, i13=179, iArr[]=new int[N];
        float f=0.254F;
        double d=-2.41004;
        long l=-996330012L;

        FuzzerUtils.init(iArr, 10);

        i6 = i6;
        i6 %= (int)(s | 1);
        i6 -= i6;
        for (i7 = 8; i7 < 213; i7++) {
            for (i9 = 1; 8 > i9; i9++) {
                i8 = i9;
                f += (i9 * i9);
                iArr = iArr;
                f *= i7;
            }
            i6 /= (int)((long)(d) | 1);
            for (i11 = 1; 8 > i11; i11++) {
                d *= i7;
                for (l = 1; l < 2; l++) {
                    i13 += (int)(((l * i10) + Test.instanceCount) - i10);
                }
                by = (byte)150;
            }
        }
        vMeth1_check_sum += i6 + by + s + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) +
            i11 + i12 + l + i13 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i5) {

        byte by1=-27;
        int i14=-41840, i15=-3, i16=-3, i17=34360, i18=-4, i19=9, iArr1[]=new int[N];
        short s1=-2006;
        boolean b=false;
        double d1=100.99308;
        float f1=-2.538F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -128);
        FuzzerUtils.init(lArr, -12L);

        vMeth1(i5, by1);
        i5 >>>= i5;
        for (i14 = 15; i14 < 333; i14++) {
            for (i16 = 1; i16 < 5; i16++) {
                switch ((i16 % 5) + 78) {
                case 78:
                    for (i18 = 1; 2 > i18; ++i18) {
                        s1 += (short)i18;
                        i5 += i18;
                        switch ((((i5 >>> 1) % 4) * 5) + 66) {
                        case 69:
                        case 70:
                            Test.instanceCount <<= i18;
                            switch ((i18 % 10) + 53) {
                            case 53:
                                if (b) break;
                                i5 -= i16;
                                break;
                            case 54:
                                i17 /= 6;
                                break;
                            case 55:
                                Test.instanceCount -= Test.instanceCount;
                                break;
                            case 56:
                                d1 = Test.instanceCount;
                                break;
                            case 57:
                                iArr1[i14] /= -217;
                                break;
                            case 58:
                                d1 = f1;
                                break;
                            case 59:
                                i15 %= (int)((long)(f1) | 1);
                            case 60:
                                i15 = (int)Test.instanceCount;
                            case 61:
                                i15 += by1;
                            case 62:
                                by1 += (byte)(i18 - i15);
                            }
                            break;
                        case 78:
                            lArr[i18 + 1] += i16;
                            break;
                        case 82:
                            iArr1[i16 + 1] -= i14;
                            break;
                        }
                    }
                    break;
                case 79:
                    i15 = (int)d1;
                case 80:
                    Test.instanceCount += i16;
                    break;
                case 81:
                    i17 = i18;
                    break;
                case 82:
                    try {
                        i15 = (i15 % 62535);
                        iArr1[i14] = (i18 % i5);
                        i17 = (i16 / i17);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i5 + by1 + i14 + i15 + i16 + i17 + i18 + i19 + s1 + (b ? 1 : 0) + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-2, i2=-53098, i3=-1, i4=-193, i20=-24415, i21=8, iArr2[]=new int[N];
        short s2=-525;
        float f2=-2.967F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -5009831258353916748L);
        FuzzerUtils.init(iArr2, 0);

        i = (i++);
        for (i1 = 7; i1 < 155; i1++) {
            for (i3 = 1; i3 < 11; ++i3) {
                Test.instanceCount /= ((-iMeth(i1)) | 1);
                lArr1[i1 - 1] -= -26757;
            }
            Test.instanceCount = (long)-1.3273;
            for (i20 = 1; 11 > i20; ++i20) {
                s2 += (short)(-18183L + (i20 * i20));
                Test.instanceCount |= i3;
                try {
                    i4 = (iArr2[i1] / i4);
                    i = (iArr2[i1] % 80);
                    i = (i20 / -39629);
                } catch (ArithmeticException a_e) {}
                i4 = 5;
                i2 += (((i20 * s2) + Test.instanceCount) - f2);
                i2 += i;
                i21 <<= -97;
            }
        }
        i21 += i3;
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i20 + i21 + s2 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i23=99, i24=149, i25=12668, i26=-7, i27=-49793, i28=-4, i29=6, i30=64420, i31=-170, i32=0, i33=-12073,
            i34=-21277, iArr3[]=new int[N];
        short s3=12825;
        double d2=0.128708, d3=-45.11514;
        long l1=-6L;

        FuzzerUtils.init(iArr3, -10);

        vMeth(i23);
        for (i24 = 14; i24 < 233; ++i24) {
            for (i26 = 115; i26 > 7; i26--) {
                for (i28 = 1; i28 < 2; ++i28) {
                    s3 += (short)i28;
                    Test.fFld = i30;
                    i29 -= (int)Test.instanceCount;
                    Test.fArrFld[i26] += (float)d2;
                    i29 -= i28;
                }
                i23 += (i26 ^ i23);
            }
            d3 = 8;
            i25 -= i26;
            i30 >>= s3;
            Test.instanceCount = 0;
            Test.instanceCount -= (long)d3;
        }
        for (l1 = 2; l1 < 275; l1++) {
            Test.instanceCount = i23;
            i32 = 1;
            while (++i32 < 92) {
                Test.fFld -= i26;
                i25 += (int)(60.51F + (i32 * i32));
                for (i33 = 1; i33 < 1; i33++) {
                    switch (((i23 >>> 1) % 7) + 8) {
                    case 8:
                        iArr3[i32 + 1] = i29;
                        bFld = bFld;
                        break;
                    case 9:
                        i27 -= i27;
                        i23 = 4;
                        Test.fFld = 33;
                        break;
                    case 10:
                        i29 = (int)d3;
                        iArr3[i32] >>= i32;
                        break;
                    case 11:
                        i31 = (int)l1;
                        break;
                    case 12:
                        i27 ^= i24;
                        break;
                    case 13:
                        Test.instanceCount *= (long)Test.fFld;
                    case 14:
                        i27 = s3;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
