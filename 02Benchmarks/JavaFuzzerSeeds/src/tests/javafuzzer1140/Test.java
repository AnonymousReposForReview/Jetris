package tests.javafuzzer1140;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:33:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-124L;
    public static volatile short sFld=-28251;
    public static float fFld=100.813F;
    public static boolean bFld=true;
    public static volatile int iArrFld[]=new int[N];
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -34404);
        FuzzerUtils.init(Test.dArrFld, -119.42481);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d1, int i5, int i6) {

        float f1=-30.346F;
        int i7=-13, i8=244, i9=-3, i10=-6, i11=4;

        f1 += i5;
        for (i7 = 8; i7 < 224; i7++) {
            i8 <<= (int)Test.instanceCount;
            i9 = 1;
            while (++i9 < 7) {
                Test.instanceCount <<= i8;
                Test.iArrFld[i9] *= 2;
                i5 -= Test.sFld;
                Test.dArrFld[i7 + 1][i7 - 1] -= i7;
            }
            i5 += i6;
            i8 = i6;
            f1 = i6;
        }
        for (i10 = 2; i10 < 173; ++i10) {
            d1 += i5;
            f1 -= 46583;
            Test.iArrFld[i10] = i11;
        }
        vMeth2_check_sum += Double.doubleToLongBits(d1) + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth1(long l, int i3, int i4) {

        double d2=2.14487, d3=-47.93093, d4=-2.76809;
        int i12=28184, i13=41751, i14=-31316, i15=152;
        float f2=-113.750F;

        vMeth2(d2, -61264, -23066);
        Test.iArrFld[(i4 >>> 1) % N] += i4;
        i3 = i3;
        i12 = 1;
        while (++i12 < 257) {
            for (i13 = 1; 6 > i13; i13++) {
                i3 += i13;
                i14 = -31227;
                for (d3 = 2; d3 > i13; --d3) {
                    i3 = (int)f2;
                    l += (long)(d3 + i4);
                    f2 += (float)(((d3 * i12) + i4) - i15);
                }
                d4 = 2;
                do {
                    i15 += (-38714 + (d4 * d4));
                    if (i4 != 0) {
                        vMeth1_check_sum += l + i3 + i4 + Double.doubleToLongBits(d2) + i12 + i13 + i14 +
                            Double.doubleToLongBits(d3) + i15 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d4);
                        return;
                    }
                    i14 = i3;
                } while ((d4 -= 3) > 0);
            }
        }
        vMeth1_check_sum += l + i3 + i4 + Double.doubleToLongBits(d2) + i12 + i13 + i14 + Double.doubleToLongBits(d3) +
            i15 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d4);
    }

    public static void vMeth(int i2, byte by) {

        int i16=8, i17=115, i18=248;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 47370L);

        vMeth1(Test.instanceCount, -190, -167);
        for (long l1 : lArr) {
            i2 += (int)l1;
            if (b) {
                i16 = 1;
                do {
                    for (i17 = 1; i17 < 1; ++i17) {
                        if (b) continue;
                        i18 += (int)l1;
                        i18 += (i17 | i16);
                        i18 = i16;
                        i18 = (int)Test.fFld;
                        if (b) {
                            i18 = (int)l1;
                            i2 += (int)-2.72777;
                            if (b) continue;
                        } else {
                            i18 *= i16;
                        }
                    }
                } while (++i16 < 4);
            } else {
                i18 = i18;
            }
        }
        vMeth_check_sum += i2 + by + i16 + i17 + i18 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=32258, i1=-54, i19=6, i20=40, iArr[]=new int[N];
        double d=-24.1431, d5=1.19643;
        float f=-2.30F, fArr[]=new float[N];
        byte by1=-46;

        FuzzerUtils.init(iArr, -37273);
        FuzzerUtils.init(fArr, -1.953F);

        for (i = 5; i < 205; i++) {
            d *= (-f);
            i1 >>= iArr[i + 1];
            vMeth(i1, (byte)(-124));
            for (d5 = 3; d5 < 126; d5++) {
                Test.bFld = false;
                i19 *= i;
            }
            i19 = by1;
            Test.instanceCount += i19;
            i20 = 1;
            while (++i20 < 126) {
                i19 *= (int)d5;
                Test.sFld *= (short)-4079868201L;
                i1 += (int)Test.instanceCount;
                i1 = i1;
                i1 += (((i20 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                i19 ^= (int)Test.instanceCount;
                i19 += (i20 * i20);
                Test.instanceCount = i;
                switch (i % 1) {
                case 0:
                    fArr[i + 1] = Test.instanceCount;
                    i19 *= (int)78L;
                    i1 = i20;
                    break;
                default:
                    i19 += i20;
                    i1 = i20;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
