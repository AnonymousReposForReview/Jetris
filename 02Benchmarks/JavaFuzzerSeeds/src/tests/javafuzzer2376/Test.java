package tests.javafuzzer2376;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:47:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2487926856L;
    public volatile byte byFld=-4;
    public static double dFld=2.43444;
    public static float fFld=1.689F;
    public boolean bFld=true;
    public int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9) {

        int i10=43179, i11=7, i12=-193, i13=-9, i14=-14, i15=25625, i16=-20, iArr[]=new int[N];
        short s=-9951;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12L);
        FuzzerUtils.init(iArr, -231);

        for (i10 = 7; i10 < 267; i10 += 2) {
            for (i12 = i10; 12 > i12; ++i12) {
                i13 += (((i12 * i14) + i13) - i13);
                i14 += (i12 | i12);
                s |= (short)i13;
                lArr[i12] += i9;
                Test.dFld += i10;
                Test.fFld += i10;
                Test.fFld += i10;
                Test.fFld -= -39974;
                Test.fFld += 518676218L;
                for (i15 = 1; i15 < 1; i15++) {
                    iArr[i15 + 1] = i9;
                    iArr[i15] = -31;
                    i14 += (i15 * i15);
                }
            }
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + s + i15 + i16 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6, long l, int i7) {

        int i8=-33626, iArr1[]=new int[N];
        boolean b=false;
        short s1=-28738;

        FuzzerUtils.init(iArr1, 189);

        if (b) {
            i8 = 1;
            while (++i8 < 303) {
                iMeth(242);
                if (b) {
                    i6 -= 222;
                    switch (((i8 % 2) * 5) + 65) {
                    case 74:
                        Test.instanceCount += Test.instanceCount;
                        iArr1[i8] >>= -2;
                        if (b) continue;
                        i6 *= i6;
                    case 75:
                        i7 += i6;
                        try {
                            i7 = (iArr1[i8 + 1] / i6);
                            i6 = (iArr1[i8] / 62582);
                            i6 = (17272 / i7);
                        } catch (ArithmeticException a_e) {}
                        break;
                    default:
                        Test.fFld -= i8;
                    }
                    i7 |= (int)l;
                } else if (true) {
                    i6 += s1;
                }
            }
            vMeth1_check_sum += i6 + l + i7 + i8 + (b ? 1 : 0) + s1 + FuzzerUtils.checkSum(iArr1);
            return;
        }
        vMeth1_check_sum += i6 + l + i7 + i8 + (b ? 1 : 0) + s1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5) {

        int i17=65342, i18=-135, i19=8, i20=-40281, i21=71, i22=25748, iArr2[]=new int[N];
        byte by=117;

        FuzzerUtils.init(iArr2, -205);

        vMeth1(-1158, Test.instanceCount, i5);
        for (i17 = 315; 10 < i17; i17 -= 2) {
            i5 += (i17 | i17);
            i18 += (i17 * i17);
            Test.instanceCount /= 8711769635330811729L;
            i18 -= i5;
            for (i19 = i17; i19 < 10; ++i19) {
                boolean b1=true;
                i18 += (((i19 * by) + i5) - i5);
                if (b1) break;
                i5 += (((i19 * i18) + i17) - i19);
                for (i21 = i19; 1 > i21; ++i21) {
                    i22 |= i17;
                    iArr2[i21] -= i5;
                    i22 ^= (int)Test.instanceCount;
                    if (b1) break;
                }
            }
        }
        vMeth_check_sum += i5 + i17 + i18 + i19 + i20 + by + i21 + i22 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=113, i1=-31853, i2=-202, i3=48969, i4=53564, i23=-4, i24=11097, i25=-19071, i26=-60058, i27=78;
        short s2=-2100;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -24L);

        byFld -= (byte)((++iArrFld[(i >>> 1) % N]) - Integer.reverseBytes(i));
        for (i1 = 14; 388 > i1; ++i1) {
            for (i3 = 3; i3 < 67; i3++) {
                i += (i3 * i3);
                vMeth(i);
                i4 += i3;
                iArrFld[i3] -= i;
                for (i23 = 1; i23 < 2; i23 += 3) {
                    Test.instanceCount = i2;
                    i2 *= s2;
                    Test.fFld += i24;
                }
                i25 = 2;
                do {
                    i4 -= (int)Test.dFld;
                } while ((i25 -= 3) > 0);
                Test.fFld *= i23;
            }
            if (bFld) {
                i2 = i25;
            } else if (bFld) {
                for (i26 = 2; i26 < 67; ++i26) {
                    i24 = i3;
                    Test.dFld += 102L;
                    i4 = byFld;
                    Test.instanceCount = Test.instanceCount;
                    Test.fFld += i26;
                }
                i4 = (int)Test.instanceCount;
                switch (((i >>> 1) % 10) + 11) {
                case 11:
                    switch (((i1 >>> 1) % 7) + 18) {
                    case 18:
                        Test.instanceCount <<= Test.instanceCount;
                        i >>>= (int)Test.instanceCount;
                        Test.dFld = i1;
                        Test.instanceCount |= Test.instanceCount;
                    case 19:
                        i27 *= i2;
                        break;
                    case 20:
                        i = i26;
                        break;
                    case 21:
                        i4 = (int)Test.instanceCount;
                    case 22:
                        i27 += (i1 * i27);
                        break;
                    case 23:
                        byArrFld[i1] -= (byte)Test.instanceCount;
                        break;
                    case 24:
                        if (bFld) break;
                        break;
                    }
                    break;
                case 12:
                    i24 += (i1 * i1);
                    break;
                case 13:
                    i = (int)Test.dFld;
                    break;
                case 14:
                    iArrFld[i1] *= -46929;
                case 15:
                    i27 = 14;
                    break;
                case 16:
                    if (bFld) break;
                    break;
                case 17:
                    Test.fFld -= i24;
                case 18:
                    i24 = (int)-54192L;
                    break;
                case 19:
                    i4 = (int)Test.instanceCount;
                    break;
                case 20:
                    lArr1[i1] = 95;
                    break;
                default:
                    i -= i27;
                }
            } else {
                Test.instanceCount |= -113;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
