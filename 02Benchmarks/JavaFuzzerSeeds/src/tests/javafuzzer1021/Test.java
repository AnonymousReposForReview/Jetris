package tests.javafuzzer1021;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:55:19 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-165L;
    public static float fFld=0.606F;
    public static short sFld=3146;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i3) {

        boolean b=true;
        int i4=-39686, i5=-245, i6=28445, i7=11, i8=30053, iArr[]=new int[N];
        double d=0.44822;

        FuzzerUtils.init(iArr, 7);

        i3 += i3;
        Test.instanceCount <<= i3;
        iArr = FuzzerUtils.int1array(N, (int)8934);
        b = b;
        i3 = 20;
        for (i4 = 3; i4 < 158; ++i4) {
            i6 = 10;
            while (--i6 > 0) {
                for (i7 = 1; i7 < 1; ++i7) {
                    if (b) {
                        i8 += i7;
                        i8 >>= (int)l;
                        iArr[i7] = (int)d;
                    } else {
                        if (i8 != 0) {
                            vMeth1_check_sum += l + i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + i8 +
                                Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        l = (long)Test.fFld;
                        d *= Test.instanceCount;
                        vMeth1_check_sum += l + i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d)
                            + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i3 + (b ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i1) {

        int i2=-41055, i9=112, i10=-9, i11=-7, i12=74, iArr1[]=new int[N];
        float f=2.508F;
        boolean b1=true;
        double d1=0.128644;

        FuzzerUtils.init(iArr1, 12);

        i2 = 1;
        do {
            vMeth1(Test.instanceCount, i1);
            i1 = 2703;
            for (i9 = 1; i9 < 7; i9++) {
                i10 = i9;
                switch ((i9 % 2) + 34) {
                case 34:
                    for (f = 2; f > 1; --f) {
                        Test.instanceCount += (long)f;
                        if (b1) continue;
                        d1 += i10;
                        iArr1[(int)(f - 1)] *= (int)Test.instanceCount;
                    }
                    i11 = (int)f;
                    Test.instanceCount -= i12;
                case 35:
                    i1 <<= i2;
                    Test.instanceCount -= Test.instanceCount;
                    break;
                }
            }
        } while (++i2 < 243);
        vMeth_check_sum += i1 + i2 + i9 + i10 + Float.floatToIntBits(f) + i11 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(d1) + i12 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i) {


        vMeth(i);
        long meth_res = i;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i13=-252, i14=4, i15=13, i16=50692, i17=0, i18=190, i19=-216, i20=-178, i21=-8, i22=9821, i23=30610, i24=0,
            i25=0, iArr2[]=new int[N];
        long l1=-5L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 52284L);
        FuzzerUtils.init(iArr2, 0);

        Test.fFld = (iMeth(i13) + -36);
        for (i14 = 135; 7 < i14; i14--) {
            lArr[i14 - 1] *= i13;
        }
        i15 *= i14;
        for (i16 = 4; i16 < 144; i16++) {
            i17 = i13;
            Test.instanceCount *= (long)-1.411F;
            l1 = i13;
            for (i18 = 11; 179 > i18; ++i18) {
                i13 = (int)-6231091364635344944L;
                i13 += i18;
                try {
                    i17 = (iArr2[i16] % i18);
                    i15 = (-23 % iArr2[i18 + 1]);
                    i17 = (i15 % i19);
                } catch (ArithmeticException a_e) {}
            }
            i17 -= -20943;
            for (i20 = i16; i20 < 179; i20 += 2) {
                i13 += (((i20 * Test.fFld) + Test.fFld) - Test.sFld);
            }
            i19 += i13;
        }
        i13 = i16;
        i22 = 1;
        do {
            iArr2[(25 >>> 1) % N] = i21;
            i17 += i16;
            i21 *= i16;
            i13 += i19;
            iArr2[i22 - 1] %= -16944;
            i13 &= (int)Test.instanceCount;
            i17 *= i14;
        } while (++i22 < 220);
        for (i23 = 390; 14 < i23; i23 -= 2) {
            i25 = 1;
            while (++i25 < 133) {
                l1 -= i17;
                i13 = i18;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
