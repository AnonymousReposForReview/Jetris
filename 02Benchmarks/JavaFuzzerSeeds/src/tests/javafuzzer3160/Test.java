package tests.javafuzzer3160;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:06:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1866356486L;
    public static short sFld=-30729;
    public static int iFld=-126;
    public static volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(long l1, int i6, long l2) {

        byte by1=127;
        double d1=68.68922;
        int i7=-63748, iArr[]=new int[N];
        float f2=-1.149F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -160);
        FuzzerUtils.init(lArr, -21388L);
        FuzzerUtils.init(fArr, 2.947F);

        by1 = (byte)d1;
        i7 = 1;
        do {
            iArr[i7 - 1] -= i7;
            lArr[i7] = i7;
        } while (++i7 < 221);
        iArr[(-92 >>> 1) % N] += (int)f2;
        i6 = (int)d1;
        fArr[(-24816 >>> 1) % N] -= l2;
        l1 = l1;
        i6 = (int)l1;
        long meth_res = l1 + i6 + l2 + by1 + Double.doubleToLongBits(d1) + i7 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i4, long l, int i5) {

        float f1=13.689F, fArr1[]=new float[N];
        int i8=-20471, i9=-30156, i10=-67, i11=0, i12=11550, iArr1[][]=new int[N][N];
        boolean b=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr1, -73.376F);
        FuzzerUtils.init(iArr1, 11);
        FuzzerUtils.init(lArr1, -9L);

        f1 += ((Test.instanceCount + (i5 + -94.258F)) * Test.instanceCount);
        iMeth2(-127L, i4, l);
        i5 <<= 53296;
        i8 = 1;
        while (++i8 < 198) {
            i5 -= (int)Test.instanceCount;
            i4 = (int)-8166L;
            for (i9 = 1; i9 < 8; i9++) {
                b = b;
                i10 *= (int)Test.instanceCount;
                for (i11 = i9; i11 < 2; ++i11) {
                    switch (((i4 >>> 1) % 9) + 57) {
                    case 57:
                        fArr1[i8 - 1] = -85;
                        break;
                    case 58:
                        if (true) continue;
                        Test.bArrFld = Test.bArrFld;
                        iArr1[i11 + 1][i8 - 1] = i5;
                        break;
                    case 59:
                        lArr1[i9 + 1] ^= i5;
                        break;
                    case 60:
                        l = i4;
                        break;
                    case 61:
                        iArr1[i9 - 1][i8] = i8;
                    case 62:
                        i10 = i4;
                    case 63:
                        iArr1[i11][i9 - 1] = 25076;
                        break;
                    case 64:
                        i10 += (i11 | i11);
                    case 65:
                        i5 += i11;
                        break;
                    }
                }
            }
        }
        long meth_res = i4 + l + i5 + Float.floatToIntBits(f1) + i8 + i9 + i10 + (b ? 1 : 0) + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i2, int i3) {

        float f=25.649F, f3=-1.0F;
        int i13=-61, i14=154, i15=13629, i16=158, i17=-18271, i18=39167;
        double d2=-116.67114;
        boolean b1=true;
        byte by2=90;

        f -= (iMeth1(i2, -10L, 57418) + f);
        for (i13 = 136; i13 > 2; i13--) {
            f += (((i13 * i2) + i2) - i13);
            i3 += (i13 * i13);
            f -= i13;
        }
        i14 >>= 31601;
        i3 = i3;
        for (f3 = 7; f3 < 384; f3++) {
            i3 = i13;
            i3 = i14;
            for (d2 = f3; d2 < 4; ++d2) {
                if (b1) continue;
                for (i17 = 1; i17 < 1; i17++) {
                    by2 += (byte)i3;
                    if (b1) break;
                }
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f) + i13 + i14 + Float.floatToIntBits(f3) + i15 +
            Double.doubleToLongBits(d2) + i16 + (b1 ? 1 : 0) + i17 + i18 + by2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-21301, i1=2, i19=7, i20=53922, i21=156, iArr2[]=new int[N];
        double d=0.38758;
        byte by=113;
        long l3=370170367056436061L, l4=858667895398724195L;
        float f4=-96.522F;
        boolean b2=false;

        FuzzerUtils.init(iArr2, 35351);

        for (i = 303; i > 5; i -= 2) {
            d *= i;
            Test.sFld <<= (short)((--by) + iMeth(i1, i1));
            for (l3 = 6; l3 < 168; ++l3) {
                Test.instanceCount |= i1;
                i1 -= i;
                for (i20 = 1; i20 < 2; ++i20) {
                    switch (((2 >>> 1) % 6) + 39) {
                    case 39:
                        i19 = i21;
                        i1 = (int)f4;
                        try {
                            i19 = (-96 % i20);
                            i1 = (-864984211 / i20);
                            Test.iFld = (i1 / i21);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 40:
                    case 41:
                        f4 -= i21;
                        switch (((i1 >>> 1) % 4) + 59) {
                        case 59:
                            i1 += (((i20 * i20) + Test.sFld) - i20);
                            i21 <<= i;
                            break;
                        case 60:
                            Test.iFld = Test.iFld;
                            if (b2) break;
                            if (b2) break;
                            break;
                        case 61:
                            i1 = i20;
                            iArr2[(int)(l3)] >>= (int)220L;
                            Test.iFld = -43629;
                            if (b2) continue;
                            break;
                        case 62:
                            switch (i20 % 2) {
                            case 0:
                                if (b2) continue;
                                switch ((int)(((l3 % 7) * 5) + 111)) {
                                case 127:
                                    Test.sFld >>= (short)i;
                                    break;
                                case 132:
                                    l4 <<= 55126L;
                                    Test.sFld += (short)i;
                                    break;
                                case 118:
                                    Test.iFld += (i20 ^ Test.sFld);
                                    break;
                                case 113:
                                    try {
                                        i1 = (40243 % i21);
                                        i1 = (15158 / i21);
                                        Test.iFld = (i20 % i1);
                                    } catch (ArithmeticException a_e) {}
                                    break;
                                case 114:
                                    i1 = i20;
                                case 122:
                                    l4 -= (long)f4;
                                    break;
                                case 135:
                                    i21 = (int)67.212F;
                                    break;
                                }
                                break;
                            case 1:
                                iArr2[i] -= i1;
                            }
                            break;
                        default:
                            d = i21;
                        }
                        break;
                    case 42:
                    case 43:
                        Test.instanceCount <<= i21;
                        break;
                    case 44:
                        Test.iFld -= i20;
                        break;
                    default:
                        iArr2[i + 1] &= by;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
