package tests.javafuzzer1189;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:15:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-221L;
    public int iFld=-59929;
    public static double dFld=0.14862;
    public static byte byFld=-6;
    public static short sFld=-8906;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 93);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i6, int i7) {

        int i8=14, i9=231, i10=-77, i11=-63, i12=-11, i13=166;
        boolean b=false;

        i6 = i7;
        i7 = i6;
        for (i8 = 2; i8 < 153; ++i8) {
            if (b) break;
            i7 = i9;
            if (true) continue;
            for (i10 = 1; i10 < 10; ++i10) {
                i11 += i10;
                Test.dFld += 119.85678;
                for (i12 = 1; i12 < 2; ++i12) {
                    short s1=21768;
                    s1 += (short)Test.instanceCount;
                    Test.instanceCount -= i11;
                    i6 = Test.byFld;
                    Test.iArrFld[i10] = 6;
                    i9 ^= i9;
                }
            }
        }
        vMeth_check_sum += i6 + i7 + i8 + i9 + (b ? 1 : 0) + i10 + i11 + i12 + i13;
    }

    public static long lMeth() {

        int i1=41137, i2=61794, i3=228, i4=12, i5=12;
        float f1=4.151F;

        for (i1 = 6; i1 < 230; ++i1) {
            Test.instanceCount += i1;
            i3 = 1;
            while (++i3 < 7) {
                short s=-3079;
                s += (short)(((f1 + -3) * (i1 * i2)) * ((Test.dFld--) * (2585 % ((i1 * 49556) | 1))));
                Test.dFld += f1;
                for (i4 = 1; i4 > i1; i4--) {
                    vMeth(i3, i1);
                    i2 ^= (int)Test.instanceCount;
                    f1 *= f1;
                    f1 = -3649382952L;
                }
                if (i4 != 0) {
                }
                i2 += (i3 + i4);
                Test.instanceCount = i5;
                i2 = i4;
            }
            Test.instanceCount += (i1 | i1);
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f1) + i4 + i5;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(float f) {

        int i14=-18, i15=-131;
        boolean b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.246F);

        Test.iArrFld[(iFld >>> 1) % N] >>= (int)(lMeth() + iFld);
        for (i14 = 5; i14 < 365; i14++) {
            i15 *= (int)f;
            if (true) break;
            if (b1) {
                fArr[(i14 >>> 1) % N] -= Test.instanceCount;
            } else {
                Test.iArrFld[i14 - 1] = iFld;
                iFld = (int)Test.instanceCount;
                iFld <<= i15;
                i15 = iFld;
            }
            iFld %= (int)(iFld | 1);
            iFld += (i14 ^ Test.instanceCount);
            i15 = iFld;
            if (b1) break;
        }
        fArr[(iFld >>> 1) % N] = (float)Test.dFld;
        long meth_res = Float.floatToIntBits(f) + i14 + i15 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-43L;
        int i=15, i16=53761, i17=231, i18=50857, i19=14, i20=4, i21=4, i22=42304;
        float f3=-2.390F, f4=91.130F, fArr1[]=new float[N];
        boolean b2=true, bArr[][]=new boolean[N][N];

        FuzzerUtils.init(fArr1, -2.470F);
        FuzzerUtils.init(bArr, false);

        for (l = 8; l < 139; l += 3) {
            Test.iArrFld[(int)(l)] += (iMeth(f3) + i);
            for (i16 = 3; i16 < 181; ++i16) {
                for (i18 = 4; i18 > l; --i18) {
                    i19 += 12;
                    Test.dFld += i16;
                }
                for (i20 = 1; i20 < 4; i20++) {
                    fArr1 = fArr1;
                    iFld -= (int)f4;
                    i17 = i17;
                    i21 -= (int)11L;
                    b2 = false;
                    Test.sFld += (short)(((i20 * i) + i20) - i16);
                    i19 += i20;
                    f4 = Test.byFld;
                    i19 = iFld;
                    i = -177;
                }
                b2 = b2;
                Test.sFld = (short)Test.dFld;
                i21 -= (int)l;
                iFld += i16;
                bArr = bArr;
                i19 -= (int)l;
            }
            Test.sFld = (short)21312;
            i17 += (int)(((l * iFld) + i16) - i);
            i17 <<= Test.byFld;
            Test.instanceCount *= i;
            i >>>= i18;
        }
        f4 = f4;
        i22 = 223;

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
