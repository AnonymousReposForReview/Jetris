package tests.javafuzzer189;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:48:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3249571031L;
    public static int iFld=58097;
    public static double dFld=2.108736;
    public byte byFld=-75;
    public int iFld1=12917;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -54601);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, double d, double d1) {

        int i6=-64844, i7=0, i8=56, i9=7978, i10=1;
        float f=-18.66F;

        i5 = i5;
        for (i6 = 8; 137 > i6; ++i6) {
            i5 ^= i5;
            i8 = 1;
            do {
                Test.iFld <<= (int)3021303827502535115L;
                for (i9 = 1; i9 < 1; i9 += 3) {
                    short s=29852;
                    i7 <<= i5;
                    i10 <<= (int)Test.instanceCount;
                    Test.iArrFld[i9 - 1] = (int)d;
                    Test.iFld = (int)f;
                    Test.iFld = i9;
                    i10 = (int)104.79103;
                    if (i9 != 0) {
                        vMeth1_check_sum += i5 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i6 + i7 +
                            i8 + i9 + i10 + Float.floatToIntBits(f);
                        return;
                    }
                    try {
                        i5 = (i5 % Test.iFld);
                        Test.iArrFld[i9 + 1] = (55 / i5);
                        i7 = (130 / i8);
                    } catch (ArithmeticException a_e) {}
                    s -= (short)i6;
                }
            } while (++i8 < 12);
        }
        vMeth1_check_sum += i5 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 +
            Float.floatToIntBits(f);
    }

    public static void vMeth(int i2) {

        int i3=-62020, i4=-14, i11=-13666, i12=-50780, i13=-230, i14=-92, i15=26372;
        boolean b=true;
        long l=42417L;

        for (i3 = 1; i3 < 261; i3++) {
            vMeth1(i2, Test.dFld, Test.dFld);
            i2 <<= (int)Test.instanceCount;
        }
        Test.dFld *= i2;
        b = b;
        for (i11 = 2; i11 < 326; ++i11) {
            Test.instanceCount = i13;
            if (b) {
                i12 -= -20023;
                Test.instanceCount += (((i11 * l) + i13) - Test.instanceCount);
                Test.dFld = i2;
            } else if (b) {
                i2 += (int)Test.instanceCount;
                for (i14 = 1; i14 < 5; ++i14) {
                    i2 = (int)l;
                    i12 ^= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + (b ? 1 : 0) + i11 + i12 + i13 + l + i14 + i15;
    }

    public static int iMeth() {

        int i=10, i1=40465, i16=61763, i17=-158, i18=124, i19=-165;
        boolean b1=false;
        float f1=-61.29F;
        byte by=7;

        for (i = 149; i > 8; --i) {
            vMeth(Test.iFld);
            b1 = b1;
            for (i16 = 1; i16 < 11; i16++) {
                if (b1) break;
                f1 *= i;
                Test.iFld -= by;
                switch ((((i1 >>> 1) % 5) * 5) + 74) {
                case 89:
                    if (b1) break;
                case 92:
                    i17 += i16;
                    if (b1) break;
                    for (i18 = 1; i18 < 2; i18++) {
                        b1 = b1;
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)-198);
                        i19 += i18;
                    }
                    break;
                case 98:
                    i19 = (int)Test.instanceCount;
                    break;
                case 85:
                    i17 <<= -156;
                case 88:
                    Test.iFld <<= i19;
                default:
                    Test.instanceCount = -161;
                }
            }
        }
        long meth_res = i + i1 + (b1 ? 1 : 0) + i16 + i17 + Float.floatToIntBits(f1) + by + i18 + i19;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i20=-7, i21=-10, i22=39471, i23=-6, i24=102, i25=75, i26=5, i27=65, i28=28;
        float f2=71.127F;
        short s1=-7550;
        double d2=-115.23108;
        boolean b2=false;

        Test.iFld *= (++Test.iFld);
        Test.instanceCount = Math.min(iMeth(), Test.iFld);
        i20 = 287;
        while (--i20 > 0) {
            Test.iFld += (int)Test.instanceCount;
            Test.iFld += (((i20 * f2) + i20) - Test.instanceCount);
            Test.iFld >>= Test.iFld;
            f2 += -3;
            Test.iArrFld[i20 - 1] >>= i20;
        }
        for (i21 = 12; i21 < 251; ++i21) {
            Test.iFld += (i21 * i21);
        }
        for (i23 = 3; i23 < 190; ++i23) {
            switch ((i23 % 2) + 11) {
            case 11:
                Test.instanceCount = i20;
                break;
            case 12:
                for (i25 = 4; 134 > i25; i25++) {
                    byFld += (byte)i20;
                    if (true) {
                        Test.instanceCount = Test.instanceCount;
                        i27 = 2;
                        do {
                            i26 -= 12093;
                            f2 -= Test.instanceCount;
                            Test.instanceCount <<= Test.instanceCount;
                            Test.iFld = (int)Test.instanceCount;
                            Test.iFld = s1;
                            Test.iFld += i27;
                        } while ((i27 -= 3) > 0);
                        iFld1 >>>= -9700;
                    } else if (b2) {
                        for (d2 = i23; d2 < 2; ++d2) {
                            i26 -= i20;
                            i22 += (-24732 + (d2 * d2));
                            s1 -= (short)Test.iFld;
                            Test.iFld += (int)(((d2 * i26) + Test.instanceCount) - i26);
                        }
                    }
                }
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
