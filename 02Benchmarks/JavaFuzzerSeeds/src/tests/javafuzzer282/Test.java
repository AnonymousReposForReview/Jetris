package tests.javafuzzer282;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:09:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public long lFld=30282L;
    public static double dFld=-40.116518;
    public static volatile int iArrFld[]=new int[N];
    public static volatile float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
        FuzzerUtils.init(Test.fArrFld, 112.965F);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f1, long l, int i7) {

        int i8=-47428, i9=-8, i10=94;
        byte by=-36;

        f1 -= -26839;
        Test.iArrFld[(i7 >>> 1) % N] += i7;
        i7 -= 63646;
        i8 = 1;
        while (++i8 < 212) {
            Test.iArrFld[i8] *= i8;
            i7 >>= (int)l;
            for (i9 = 1; i9 < 8; ++i9) {
                Test.instanceCount += (((i9 * i8) + by) - i7);
            }
            Test.iArrFld[i8 + 1] ^= -9509;
            Test.fArrFld[i8][i8 - 1] *= i10;
            Test.iArrFld = Test.iArrFld;
            switch (((i10 >>> 1) % 2) + 19) {
            case 19:
                Test.iArrFld[i8] *= i7;
                Test.instanceCount = 25024;
                i10 /= (int)(i9 | 1);
                break;
            case 20:
                i7 += (i8 * i8);
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + l + i7 + i8 + i9 + i10 + by;
    }

    public static int iMeth(float f) {

        int i5=-155, i6=3473, i11=5, i12=1, i13=6, i14=-4, i15=53141, i16=-43288;
        byte by1=-22;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i5 = 19; i5 < 341; ++i5) {
            vMeth(50.402F, Test.instanceCount, i6);
            if (i6 != 0) {
            }
            by1 >>= (byte)Test.instanceCount;
            for (i11 = 1; 5 > i11; i11++) {
                bArr[i5] = b;
                for (i13 = 1; 2 > i13; ++i13) {
                    i14 >>= (int)Test.instanceCount;
                    f -= -3L;
                    Test.iArrFld[i13] &= (int)Test.instanceCount;
                    i14 = i14;
                }
                for (i15 = 2; 1 < i15; --i15) {
                    b = b;
                    Test.iArrFld[i15] <<= i11;
                    Test.instanceCount = i15;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + by1 + i11 + i12 + (b ? 1 : 0) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth() {

        int i4=12, i17=9755, i19=-53376, i20=-14397;
        float f2=1.314F;
        short s=21468;

        i4 >>>= (iMeth(f2) + i4);
        i4 = -6218;
        Test.instanceCount = i4;
        Test.iArrFld[(i4 >>> 1) % N] *= i4;
        i4 -= i4;
        i17 = 1;
        while ((i17 += 2) < 177) {
            i4 /= (int)(i17 | 1);
        }
        for (int i18 : Test.iArrFld) {
            for (i19 = 4; i19 > 1; --i19) {
                i20 = -23482;
                i4 -= (int)-5662650470687269196L;
                i4 += (int)f2;
                s += (short)Test.instanceCount;
                i4 += i19;
                i20 += i19;
            }
        }
        long meth_res = i4 + Float.floatToIntBits(f2) + i17 + i19 + i20 + s;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=118, i1=3, i3=8, i21=-43201, i22=-4, i23=0, i24=0;
        boolean b1=true;
        float f3=0.564F;
        short s1=-3682;
        byte by2=40;
        long l1=3L;

        for (i = 8; i < 158; ++i) {
            if (b1) {
                i3 = 1;
                while (++i3 < 167) {
                    i1 += (i3 * i);
                    i1 <<= i;
                    Test.iArrFld[i3] *= (i1--);
                    switch (((i % 4) * 5) + 87) {
                    case 101:
                        Test.iArrFld[i3 - 1] = (int)(i1 = (int)(Test.iArrFld[i3 + 1] = (int)dMeth()));
                        if (b1) {
                            i1 = i3;
                            b1 = b1;
                        } else {
                            Test.fArrFld[i - 1][i - 1] += 79.862F;
                            for (i21 = 1; i21 > 1; i21--) {
                                i22 *= i3;
                                i1 *= 181;
                                Test.fArrFld[i + 1][i21] -= i;
                                Test.instanceCount /= 14;
                                i22 = (int)Test.instanceCount;
                            }
                            for (i23 = 1; 1 > i23; i23++) {
                                i22 -= i;
                                i24 = (int)Test.instanceCount;
                                Test.instanceCount -= Test.instanceCount;
                                Test.iArrFld[i23] = (int)lFld;
                                i22 -= (int)f3;
                                s1 ^= (short)6;
                                switch (((i3 % 2) * 5) + 38) {
                                case 46:
                                    Test.instanceCount -= lFld;
                                    i22 = by2;
                                    break;
                                case 39:
                                    lFld *= lFld;
                                    b1 = false;
                                    break;
                                default:
                                    b1 = b1;
                                }
                            }
                        }
                    case 95:
                        lFld -= (long)-65.665F;
                    case 100:
                        f3 += i21;
                        break;
                    case 99:
                        Test.dFld = -12;
                    default:
                        i22 %= (int)1.108707;
                    }
                }
            } else {
                l1 -= -6710038553315649766L;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
