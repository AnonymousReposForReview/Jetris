package tests.javafuzzer2456;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:01:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2345552283393443527L;
    public static short sFld=-5494;
    public static long lFld=7038217173337774101L;
    public volatile float fFld=-95.47F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3563344006L);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i1, int i2, double d) {

        int i3=-404, i4=-11736, i5=41642, i6=-73, i7=2633, i8=-25, i9=-11, i10=27957, iArr[][]=new int[N][N];
        float f=-56.274F, fArr[]=new float[N];
        byte by=-109;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, 247);
        FuzzerUtils.init(lArr, -2663165460269781370L);
        FuzzerUtils.init(fArr, -2.385F);

        for (i3 = 7; 269 > i3; ++i3) {
            for (i5 = 1; i5 < 6; ++i5) {
                Test.instanceCount >>= i4;
                iArr[i3][i5 + 1] -= (int)d;
                for (i7 = 1; i7 < 2; ++i7) {
                    f = i3;
                    lArr = lArr;
                    i2 >>= i4;
                    i6 = (int)-40233L;
                    i6 += i3;
                    fArr[i3] = -13;
                }
                i4 += (((i5 * i7) + i1) - by);
                for (i9 = 1; i9 < 2; ++i9) {
                    i6 += (int)25.34658;
                    Test.sFld -= (short)d;
                }
            }
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) +
            by + i9 + i10 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(int i, long l) {

        int i11=-31559, i12=13890, i13=2, i14=8, iArr1[]=new int[N];
        float f1=0.860F, f2=1.184F, fArr1[]=new float[N];
        boolean b=false, bArr[]=new boolean[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr1, 0.618F);
        FuzzerUtils.init(iArr1, -141);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte)12);

        iMeth(64865, i, 1.61450);
        fArr1[(i >>> 1) % N] *= Test.instanceCount;
        l -= i;
        i += -122;
        if (b) {
            i11 = 1;
            while (++i11 < 361) {
                for (i12 = i11; i12 < 5; ++i12) {
                    i13 = i11;
                    iArr1[i12] = (int)103L;
                    bArr[i11] = false;
                    i = (int)f1;
                    i13 += (int)f1;
                    for (f2 = i12; f2 < 1; f2++) {
                        try {
                            i14 = (-52295 / i11);
                            i14 = (-55379 / i13);
                            i = (-15446 / i12);
                        } catch (ArithmeticException a_e) {}
                        byArr[i12 + 1] <<= (byte)Test.sFld;
                    }
                }
            }
        }
        long meth_res = i + l + i11 + i12 + i13 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 + (b ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i15=4149, i16=16, i17=1, i18=81, i19=-5, iArr2[]=new int[N];
        long l1=-37095L;
        byte by1=103, byArr1[]=new byte[N];
        float f3=4.451F;
        double d1=1.36798;
        boolean b2=true;

        FuzzerUtils.init(byArr1, (byte)-59);
        FuzzerUtils.init(iArr2, 89);

        fMeth(i15, Test.instanceCount);
        byArr1[(6 >>> 1) % N] = (byte)i15;
        Test.lFld = 19639;
        l1 = 1;
        while (++l1 < 387) {
            i15 += 36;
            i15 += (int)(((l1 * by1) + i15) - i15);
            iArr2[(int)(l1)] = i15;
            for (i16 = (int)(l1); 4 > i16; i16++) {
                Test.instanceCount |= by1;
                if (b2) {
                    for (i18 = i16; i18 < 1; ++i18) {
                        boolean b1=false;
                        Test.lArrFld[i18 + 1] = Test.sFld;
                        if (b1) break;
                        i17 = i18;
                        f3 += (float)d1;
                    }
                }
            }
        }
        vMeth_check_sum += i15 + l1 + by1 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d1) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i20=41581, i21=8, i22=56589, i23=6, i24=-3, i25=-4, i26=41, i27=9, iArr3[]=new int[N];
        double d2=46.77091;
        float fArr2[]=new float[N];

        FuzzerUtils.init(fArr2, 0.343F);
        FuzzerUtils.init(iArr3, 70);

        vMeth();
        for (i20 = 4; i20 < 306; i20++) {
            i21 += i20;
            for (i22 = 3; i22 < 83; ++i22) {
                Test.lArrFld[i20 + 1] /= (i23 | 1);
                d2 -= 0.91071;
                i21 += (i22 * i22);
                for (i24 = 1; 2 > i24; i24++) {
                    Test.lFld += (((i24 * i20) + i25) - fFld);
                    Test.lArrFld[i24 - 1] += i22;
                    Test.instanceCount = Test.lFld;
                    fArr2[i22 - 1] -= i21;
                    i23 <<= (int)Test.lFld;
                    Test.lFld >>= 17728L;
                    Test.lArrFld[i24] *= (long)-81.38485;
                }
                i23 <<= i23;
                if (true) continue;
                Test.lFld -= i21;
                for (i26 = 1; i26 < 2; ++i26) {
                    i21 = -153;
                    i25 += 14;
                }
                i23 = i22;
            }
            i27 += i21;
            d2 -= i20;
            i25 += Test.sFld;
            i21 += 5;
            fFld = Test.lFld;
            iArr3[i20] = i20;
            fFld -= i25;
            try {
                i21 = (1964808956 / i25);
                iArr3[i20] = (143 % i25);
                i25 = (i23 / i21);
            } catch (ArithmeticException a_e) {}
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
