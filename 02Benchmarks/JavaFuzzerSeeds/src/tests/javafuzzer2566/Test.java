package tests.javafuzzer2566;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:39:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static boolean bFld=true;
    public boolean bFld1=false;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 2.100497);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i10, float f) {

        int i11=47, i12=17515, i13=-6, i14=-166, i15=-11, i16=-2701, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 43593);

        i10 -= (int)f;
        i10 *= 26011;
        for (i11 = 325; i11 > 7; i11--) {
            for (i13 = i11; i13 < 5; i13++) {
                if (false) continue;
                i10 -= i14;
                try {
                    i14 = (iArr1[i11 - 1] % 24);
                    iArr1[i11 - 1] = (i12 % i13);
                    iArr1[i11] = (iArr1[i13] % -42);
                } catch (ArithmeticException a_e) {}
                i14 += (i13 + i13);
                i12 = i12;
            }
            i14 += i14;
            i14 = i10;
            for (i15 = i11; i15 < 5; i15 += 3) {
                if (i11 != 0) {
                    vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test.instanceCount -= i14;
            }
            i16 += (i11 * i11);
        }
        vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i7) {

        int i8=11, i9=64071, i17=-127, i18=37819, iArr2[]=new int[N];
        float f1=1.1F;
        double d=1.17577;

        FuzzerUtils.init(iArr2, -50600);

        i8 = 1;
        do {
            switch (((i8 % 6) * 5) + 55) {
            case 57:
                if (i9 != 0) {
                }
                Test.dArrFld[i8 - 1] = ((i7++) * ((Test.instanceCount - Test.instanceCount) * (i8 + i9)));
                break;
            case 59:
            case 66:
                vMeth1(i8, f1);
                iArr2 = iArr2;
                break;
            case 64:
                Test.instanceCount += i7;
                break;
            case 75:
                for (i17 = 1; i17 < 5; ++i17) {
                    i7 = (int)Test.instanceCount;
                    i18 -= i7;
                    d += i18;
                    i7 = i9;
                    iArr2[i17] &= -7;
                    d = Test.instanceCount;
                }
                break;
            case 80:
                i18 -= -5;
                break;
            default:
                Test.instanceCount = 96;
            }
        } while (++i8 < 322);
        long meth_res = i7 + i8 + i9 + Float.floatToIntBits(f1) + i17 + i18 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b, int i3, int i4) {

        short s=14375;
        int i5=156, i6=-27263, i19=53641, i20=6, i21=124, i22=63057, iArr[]=new int[N];
        long l=110L;
        float f2=-118.333F;

        FuzzerUtils.init(iArr, 62061);

        s = (short)(i3++);
        for (i5 = 8; i5 < 375; i5++) {
            iArr[i5] |= (int)lMeth(i3);
            iArr[i5] = s;
            for (i19 = 1; i19 < 5; ++i19) {
                if (i19 != 0) {
                    vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + s + i5 + i6 + i19 + i20 + i21 + l + i22 +
                        Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr);
                    return;
                }
                Test.instanceCount += (((i19 * i19) + i3) - Test.instanceCount);
                i4 = i20;
            }
            i3 = i21;
            if (b) break;
            i21 *= i19;
        }
        for (l = 4; l < 354; l++) {
            if (i20 != 0) {
                vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + s + i5 + i6 + i19 + i20 + i21 + l + i22 +
                    Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr);
                return;
            }
            f2 = i3;
        }
        iArr = FuzzerUtils.int1array(N, (int)1);
        vMeth_check_sum += (b ? 1 : 0) + i3 + i4 + s + i5 + i6 + i19 + i20 + i21 + l + i22 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=28894, i1=-40, i2=38107, i23=244, i24=-7, i25=-4, i26=-137, i27=136, iArr3[]=new int[N];
        double d1=-109.102600;
        byte by=92;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr3, 64574);
        FuzzerUtils.init(lArr, -11522L);

        i = i;
        for (i1 = 204; i1 > 6; --i1) {
            vMeth(Test.bFld, 22668, i2);
            for (i23 = 2; i23 < 127; i23++) {
                iArr3[i23 + 1] = i1;
                try {
                    iArr3[i1] = (i1 / i24);
                    i2 = (i2 / i24);
                    i24 = (i23 / 128);
                } catch (ArithmeticException a_e) {}
                for (i25 = 2; i25 > 1; i25 -= 3) {
                    float f3=-125.970F;
                    Test.instanceCount = (long)f3;
                    Test.instanceCount += i2;
                    if (Test.bFld) {
                        iArr3[i23 - 1] += (int)Test.instanceCount;
                        i26 = i26;
                        Test.instanceCount += Test.instanceCount;
                        f3 += (i25 + f3);
                    } else if (true) {
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += (i25 + i24);
                    } else if (true) {
                        i27 |= (int)Test.instanceCount;
                        i += (int)d1;
                    }
                    by += (byte)i24;
                    i26 = -12;
                    i27 += i23;
                    Test.bFld = bFld1;
                    switch ((((i24 >>> 1) % 3) * 5) + 48) {
                    case 54:
                        lArr[i25] -= i24;
                        iArr3[i23 - 1] /= (int)(Test.instanceCount | 1);
                        i26 -= (int)Test.instanceCount;
                        Test.instanceCount -= i;
                        break;
                    case 61:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 53:
                        Test.instanceCount = i25;
                        f3 = f3;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
