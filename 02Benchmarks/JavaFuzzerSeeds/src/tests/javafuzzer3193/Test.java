package tests.javafuzzer3193;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:37:25 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=46673L;
    public static double dFld=-1.130851;
    public float fFld=2.270F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 210);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5, byte by) {

        int i6=0, i7=-112, i8=-31, i9=-13, i10=-13;
        short s=-25521;
        boolean b=true;
        double d1=2.8428;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.341F);

        for (i6 = 11; i6 < 187; i6++) {
            Test.instanceCount += i6;
            i8 = 1;
            do {
                s *= (short)i5;
                for (i9 = 1; i9 > i8; i9 -= 2) {
                    i5 += i10;
                    if (b) continue;
                    if (b) break;
                    i7 += (i9 ^ i6);
                    Test.instanceCount = i7;
                    by *= (byte)i5;
                    fArr = fArr;
                    i10 <<= -4;
                    Test.instanceCount = i4;
                }
                i5 *= (int)d1;
            } while (++i8 < 9);
        }
        vMeth2_check_sum += i4 + i5 + by + i6 + i7 + i8 + s + i9 + i10 + (b ? 1 : 0) + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i3, float f1, double d) {

        int i11=-4, i12=64415, iArr[]=new int[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(fArr1, 2.62F);

        i3 = (int)((Test.instanceCount / -10765) + ((i3 - i3) - i3));
        i3 <<= (int)(((iArr[(218 >>> 1) % N] -= i3) - i3) * Test.instanceCount);
        vMeth2(-2, -2, (byte)(-74));
        for (i11 = 15; i11 < 270; i11++) {
            Test.instanceCount = i3;
            i3 |= (int)92L;
            i12 >>= 105;
            i3 &= -232;
        }
        fArr1[(i12 >>> 1) % N] = -3;
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i11 + i12 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(float f, int i) {

        int i1=-150, i2=41495, i13=-26, i14=106, i15=0, i16=-38827;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i1 = 5; i1 < 122; ++i1) {
            vMeth1(i, f, Test.dFld);
            b1 = b1;
            i = i2;
            i2 <<= i;
            for (i13 = i1; i13 < 13; i13++) {
                for (i15 = 1; i15 > 1; i15--) {
                    i *= 8;
                    i16 += i15;
                    i16 -= i13;
                    bArr[i13 - 1] = b1;
                    Test.instanceCount += (long)1.339F;
                    f = (float)Test.dFld;
                    i14 += (i15 + i14);
                }
                Test.iArrFld = Test.iArrFld;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-36, i18=-4, i19=10957, i20=-34, i21=2173, i22=16545, i23=53658, i24=-88, i25=30979, i26=-46179,
            i27=45267;
        double d2=1.16734, dArr[]=new double[N];
        boolean b2=false, bArr1[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 72.7896);
        FuzzerUtils.init(lArr, -6826L);
        FuzzerUtils.init(bArr1, true);

        vMeth(fFld, i17);
        for (i18 = 8; 326 > i18; i18++) {
            for (i20 = 1; i20 < 79; i20 += 2) {
                i17 += i20;
            }
            dArr[i18 + 1] += Test.instanceCount;
        }
        Test.dFld /= (i21 | 1);
        for (d2 = 8; d2 < 317; d2++) {
            Test.iArrFld[(int)(d2 - 1)] = i20;
            i23 = 81;
            do {
                byte by1=72;
                switch ((int)((d2 % 1) + 92)) {
                case 92:
                    i21 ^= i22;
                    for (i24 = 1; i24 < 1; ++i24) {
                        Test.iArrFld[i24 - 1] <<= i21;
                        if (b2) {
                            i22 += (((i24 * fFld) + i19) - i25);
                            i22 >>>= i24;
                            lArr[(int)(d2 + 1)] = Test.instanceCount;
                        } else {
                            lArr[i23 + 1] *= (long)-2.802F;
                            Test.iArrFld[i24] ^= i24;
                            Test.instanceCount <<= i20;
                        }
                        i22 = i19;
                    }
                    by1 = (byte)i19;
                }
                by1 = (byte)Test.instanceCount;
                Test.instanceCount += 64432L;
                for (i26 = 1; i26 < 1; i26++) {
                    Test.iArrFld[i23 + 1] -= (int)fFld;
                    bArr1[i23 - 1] = false;
                    Test.instanceCount += i27;
                    i17 += i26;
                    i25 &= 29220;
                }
            } while (--i23 > 0);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
