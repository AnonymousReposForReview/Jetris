package tests.javafuzzer1824;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:56:37 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3163813631080092660L;
    public static long lFld=8706484825723217318L;
    public static double dFld=2.123313;
    public boolean bFld=false;
    public static volatile short sFld=-4117;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 23326);
        FuzzerUtils.init(Test.dArrFld, 0.13925);
        FuzzerUtils.init(Test.fArrFld, 110.323F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static int iMeth(int i5, float f) {


        Test.iArrFld = (Test.iArrFld = FuzzerUtils.int1array(N, (int)-7));
        long meth_res = i5 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth2(int i9) {

        int i10=12866, i11=63957, i12=-19960, i13=14, i14=-18553, i15=-63891;
        byte by1=-83;
        float f2=91.357F, fArr[]=new float[N];
        boolean b1=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -7758L);
        FuzzerUtils.init(fArr, -3.558F);

        i9 = i9;
        i9 %= (int)(i9 | 1);
        for (i10 = 123; i10 > 7; --i10) {
            for (i12 = 1; 13 > i12; ++i12) {
                i13 *= by1;
                by1 = (byte)i11;
                Test.dArrFld[i10 - 1] = -27747;
                Test.lFld += (i12 + by1);
                i13 = (int)Test.lFld;
                for (i14 = 1; 2 > i14; i14++) {
                    Test.lFld -= i11;
                    switch ((i12 % 8) + 121) {
                    case 121:
                        lArr2[i14 + 1] += i11;
                        break;
                    case 122:
                        fArr = fArr;
                        Test.iArrFld[i14] >>= -36955;
                        break;
                    case 123:
                        Test.dFld *= f2;
                    case 124:
                    case 125:
                        f2 = i14;
                        break;
                    case 126:
                        lArr2[i14 + 1] = i9;
                    case 127:
                        b1 = b1;
                    case 128:
                        Test.lFld += 11;
                    }
                }
            }
        }
        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + by1 + i14 + i15 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i8, float f1, double d) {

        byte by=55;

        d /= (((--i8) - (by++)) | 1);
        i8 += (int)d;
        vMeth2(i8);
        i8 = i8;
        vMeth1_check_sum += i8 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + by;
    }

    public void vMeth(long l, boolean b) {

        int i3=-8, i4=-142, i6=-12, i7=-46238, i16=71, i17=-19190;
        float f3=1.997F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 18085L);

        i3 = 381;
        do {
            i4 += iMeth(Integer.reverseBytes((int)(1287741320L - (-lArr1[i3]))), -(i3 + Test.instanceCount));
            for (i6 = i3; i6 < 4; ++i6) {
                vMeth1(i7, f3, Test.dFld);
                f3 *= i3;
                i4 += i6;
                f3 *= i6;
                i7 += i6;
                i7 += (int)(-7.278F + (i6 * i6));
            }
            if (b) {
                i4 += i3;
                f3 += -4024;
                for (i16 = 1; i16 < 4; i16++) {
                    f3 -= i4;
                    i7 = (int)Test.dFld;
                }
            }
        } while (--i3 > 0);
        vMeth_check_sum += l + (b ? 1 : 0) + i3 + i4 + i6 + i7 + Float.floatToIntBits(f3) + i16 + i17 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=88, i1=-95, i2=13, i18=44126, i19=2, i20=-61125, i21=-11, i22=-3;
        float f4=0.952F;
        long l1=-5L, lArr[]=new long[N];
        double d1=-61.16985;

        FuzzerUtils.init(lArr, 7335824880187426290L);

        i = (int)(((Test.instanceCount >> i) - (i + 11L)) * (lArr[(i >>> 1) % N]--));
        i >>>= (--Test.iArrFld[(i >>> 1) % N]);
        i *= (int)Test.instanceCount;
        for (i1 = 13; i1 < 392; ++i1) {
            vMeth(Test.lFld, bFld);
            i18 = 1;
            do {
                f4 *= i2;
                if (bFld) break;
                if (bFld) {
                    i = Test.sFld;
                    Test.sFld -= (short)i18;
                }
                i2 += (i18 * i);
                i2 += (int)Test.dFld;
            } while (++i18 < 66);
            i2 = i1;
        }
        f4 += i18;
        for (l1 = 12; l1 < 220; l1++) {
            for (i20 = 121; i20 > l1; --i20) {
                Test.iArrFld[i20 - 1] <<= -30994;
                Test.iArrFld[(int)(l1 - 1)] += (int)Test.lFld;
                if (bFld) continue;
                for (d1 = 1; d1 < 1; d1++) {
                    if (bFld) continue;
                    switch ((int)((d1 % 2) + 55)) {
                    case 55:
                        Test.lFld = Test.lFld;
                        Test.instanceCount -= -4;
                        Test.iArrFld[i20] = -252;
                    case 56:
                        switch ((int)(((d1 % 7) * 5) + 80)) {
                        case 113:
                            Test.instanceCount *= (long)f4;
                            i22 >>= i19;
                            i21 -= 7071;
                            break;
                        case 99:
                            if (bFld) break;
                        case 90:
                            i2 -= -31;
                            break;
                        case 115:
                            i21 += (int)((long)d1 | i18);
                            break;
                        case 93:
                            i21 |= 30311;
                            break;
                        case 82:
                            Test.iArrFld[(int)(l1 - 1)] += -16053;
                        case 96:
                            Test.dFld *= i19;
                        default:
                            lArr[(int)(d1 + 1)] = l1;
                        }
                        break;
                    default:
                        Test.fArrFld[(int)(l1)] -= f4;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
