package tests.javafuzzer612;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:34:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-235L;
    public static double dFld=2.19876;
    public static boolean bFld=true;
    public static short sFld=-22564;
    public float fFld=64.57F;
    public static volatile double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.72912);
        FuzzerUtils.init(Test.iArrFld, -130);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i3, long l) {

        int i4=-11, i5=56302, i6=17719, i7=-12, i8=70, i9=5, i10=-82, iArr[]=new int[N];
        short s1=-14250;
        float f1=2.931F, fArr[]=new float[N];
        byte by1=-37;

        FuzzerUtils.init(iArr, -1984);
        FuzzerUtils.init(fArr, 109.694F);

        iArr[(-10 >>> 1) % N] = i3;
        i4 = 1;
        while (++i4 < 366) {
            for (i5 = 1; i5 < 5; i5 += 2) {
                s1 += (short)(i5 ^ (long)f1);
                for (i7 = 1; i7 < 3; i7++) {
                    i6 = i6;
                    Test.instanceCount += i3;
                    f1 -= l;
                }
                Test.instanceCount *= 12L;
            }
            i9 = 1;
            while (++i9 < 5) {
                i10 = 1;
                do {
                    double d=37.64304;
                    i6 = (int)l;
                    iArr[i10 - 1] = by1;
                    Test.instanceCount = i10;
                    fArr[i4] -= (float)d;
                } while (++i10 < 1);
            }
        }
        long meth_res = i3 + l + i4 + i5 + i6 + s1 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + by1 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(short s, int i2) {

        float f=0.480F;
        int i11=-57899, i12=0, i13=-8, i14=6;
        byte by2=7;

        f = 1;
        while (++f < 142) {
            iMeth1(i2, 42832L);
        }
        Test.dArrFld[(i2 >>> 1) % N] = f;
        for (i11 = 14; 300 > i11; ++i11) {
            i12 = i11;
            switch (((i11 % 1) * 5) + 87) {
            case 88:
                for (i13 = 1; i13 < 6; ++i13) {
                    s = (short)i13;
                    if (Test.bFld) {
                        i12 *= i12;
                        Test.instanceCount = i14;
                        i14 *= (int)Test.dFld;
                        Test.dFld *= i11;
                    }
                    i14 -= i12;
                    i2 += (i13 - by2);
                }
            default:
                i2 += (((i11 * i13) + i14) - i14);
            }
        }
        long meth_res = s + i2 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + by2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, byte by) {

        int i15=27429, i16=-81, i17=-126, i18=83, i19=48226, i20=2;
        float f2=2.679F;

        Test.instanceCount <<= iMeth(Test.sFld, i);
        i15 = 1;
        while (++i15 < 367) {
            for (i16 = 1; i16 < 5; i16++) {
                i17 += (int)f2;
            }
            i18 = 1;
            while (++i18 < 5) {
                for (i19 = 1; i19 < 1; ++i19) {
                    i = (int)Test.dFld;
                    switch (((i15 % 4) * 5) + 104) {
                    case 106:
                        f2 += 7596L;
                        Test.dFld -= i;
                        i1 = i17;
                        i -= (int)Test.instanceCount;
                    case 115:
                        Test.instanceCount += (i19 - i1);
                    case 121:
                    case 124:
                        Test.iArrFld[i19 + 1] *= i16;
                        i20 = i18;
                        break;
                    default:
                        Test.iArrFld[i18] <<= i;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + by + i15 + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i21=-9;
        byte by3=127;

        vMeth(i21, i21, by3);
        fFld += Test.instanceCount;
        i21 *= (int)fFld;
        i21 = (int)Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
