package tests.javafuzzer952;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:00:23 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=43L;
    public static volatile float fFld=-117.38F;
    public boolean bFld=false;
    public int iFld=-58;
    public static byte byArrFld[]=new byte[N];
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)54);
        FuzzerUtils.init(Test.lArrFld, -3920911712007820301L);
        FuzzerUtils.init(Test.dArrFld, 102.16663);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        short s=-30534;
        float f=0.440F;
        long l=-107L, l1=177L, lArr[]=new long[N];
        int i3=-10, i4=2, i5=58007, iArr[]=new int[N];
        byte by=50;

        FuzzerUtils.init(iArr, -244);
        FuzzerUtils.init(lArr, -1676400021L);

        Test.byArrFld[(i2 >>> 1) % N] >>= (byte)i2;
        s >>= (short)Test.instanceCount;
        iArr[(i2 >>> 1) % N] = i2;
        Test.instanceCount -= i2;
        lArr[(i2 >>> 1) % N] = Test.instanceCount;
        i2 = -27;
        i2 -= (int)f;
        for (l = 8; l < 159; ++l) {
            for (i4 = 10; i4 > 1; i4 -= 3) {
                Test.instanceCount = l1;
                i2 += (-7 + (i4 * i4));
                lArr[i4 - 1] = i3;
                i3 += (int)f;
                i2 -= by;
                l1 = i4;
            }
        }
        vMeth1_check_sum += i2 + s + Float.floatToIntBits(f) + l + i3 + i4 + i5 + l1 + by + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, double d) {

        float f1=-126.97F;
        int i6=20, i7=-33287, iArr1[]=new int[N];
        double d1=-54.55813;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 243);
        FuzzerUtils.init(lArr1, 1765851726L);

        vMeth1(i1);
        iArr1[(1 >>> 1) % N] += i1;
        for (long l2 : lArr1) {
            i1 <<= i1;
        }
        i1 = i1;
        for (f1 = 2; 224 > f1; ++f1) {
            i1 += (int)(f1 * f1);
            i7 = 1;
            do {
                i6 = i7;
                d = Test.instanceCount;
                i1 = (int)Test.instanceCount;
                d1 = 1;
                do {
                    i1 += (int)(d1 * d1);
                } while (++d1 < 1);
                i6 = i1;
                i1 += i1;
            } while (++i7 < 7);
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i6 + i7 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(int i) {

        double d2=123.6574, d3=-80.117535;
        int i8=13, i9=-14, i10=9468, i11=-74, i12=-14, iArr2[]=new int[N];
        float f2=0.316F;

        FuzzerUtils.init(iArr2, -14);

        vMeth(i, d2);
        Test.instanceCount = (long)-2.104719;
        for (i8 = 11; i8 < 195; i8++) {
            i9 += (-55099 + (i8 * i8));
            Test.lArrFld[i8] += (long)Test.fFld;
            i9 = (int)Test.fFld;
            for (i10 = 1; i10 < 9; i10++) {
                switch ((i8 % 1) + 30) {
                case 30:
                }
                for (f2 = 1; f2 < 2; f2++) {
                    short s1=-25481;
                    Test.instanceCount = i12;
                    i12 -= i;
                    iArr2[i8 - 1] ^= 6;
                    iArr2[(i12 >>> 1) % N] = s1;
                    Test.dArrFld[i8 + 1] = i12;
                    d3 *= Test.instanceCount;
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d2) + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + i12 +
            Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=84.958F;
        int i13=1, i14=82, i15=63646, i16=0, i17=-161, i18=16, i19=-34452, i20=28389, iArr3[][]=new int[N][N];
        byte by1=-110;
        double d4=0.120210;

        FuzzerUtils.init(iArr3, -140);

        Test.instanceCount = (long)(iMeth(31956) - Test.fFld);
        Test.fFld -= 47;
        for (f3 = 253; 12 < f3; --f3) {
            bFld = bFld;
        }
        Test.instanceCount -= i13;
        for (i14 = 2; i14 < 198; i14++) {
            i16 += (int)Test.fFld;
            by1 += (byte)(i14 * i14);
            iArr3[i14 + 1][i14] += i13;
            for (i17 = 2; i17 < 128; i17++) {
                bFld = bFld;
                i15 += i17;
                iArr3[i14 - 1][i17 - 1] -= (int)Test.instanceCount;
                Test.instanceCount <<= 5;
                for (i19 = i14; i19 < 2; ++i19) {
                    switch ((i19 % 8) + 81) {
                    case 81:
                        Test.instanceCount += Test.instanceCount;
                        if (bFld) break;
                        iArr3[i17][i19] ^= 61221;
                        break;
                    case 82:
                        switch ((i14 % 2) + 43) {
                        case 43:
                            iArr3[i19 - 1][i17 + 1] -= by1;
                            i15 *= (int)d4;
                            break;
                        case 44:
                            Test.instanceCount = Test.instanceCount;
                            i20 = i15;
                            break;
                        default:
                            i18 <<= i19;
                            by1 *= (byte)i16;
                        }
                        switch ((i19 % 2) + 24) {
                        case 24:
                            i16 += i19;
                        case 25:
                            Test.fFld = iFld;
                            Test.byArrFld[i14] -= (byte)i19;
                            break;
                        default:
                            Test.fFld = -14L;
                        }
                        break;
                    case 83:
                        iFld <<= -12097;
                    case 84:
                        Test.lArrFld[i14] >>= i15;
                        break;
                    case 85:
                        i16 <<= i17;
                        break;
                    case 86:
                        iArr3[i19][i19 + 1] ^= i17;
                        break;
                    case 87:
                        i20 = 6;
                        break;
                    case 88:
                        i16 = -63999;
                        break;
                    default:
                        i16 *= i13;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
