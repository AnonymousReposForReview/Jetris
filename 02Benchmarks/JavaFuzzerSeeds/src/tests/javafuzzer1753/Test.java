package tests.javafuzzer1753;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:00:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4276456990176345431L;
    public static byte byFld=-103;
    public static double dFld=-2.128167;
    public static float fFld=-48.247F;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -86.10027);
        FuzzerUtils.init(Test.iArrFld, 201);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i2, int i3) {

        int i4=0, i5=49346, i6=-887, i7=56, i8=-7;
        boolean b1=true;
        short s1=14593;

        for (i4 = 358; i4 > 2; i4--) {
            Test.instanceCount += (i4 * i4);
            i2 += i2;
        }
        i6 = 1;
        while (++i6 < 275) {
            Test.fFld = i5;
            if (b1) {
                i5 >>>= i3;
            } else if (false) {
                Test.iArrFld[i6 + 1] += i5;
            } else {
                for (i7 = 1; i7 < 6; i7++) {
                    i2 ^= i5;
                    Test.instanceCount += i3;
                    i5 >>= (int)Test.instanceCount;
                    Test.fFld += (((i7 * i8) + i7) - Test.fFld);
                    i3 += i7;
                    s1 = (short)Test.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + (b1 ? 1 : 0) + i7 + i8 + s1;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, boolean b) {

        short s=27309;
        int i9=-194, i10=42, i11=-10, i12=-7, i13=35155, i14=32, i15=-12431, i16=15555;

        s = (short)(iMeth1(i9, i9) - i9);
        i9 += i9;
        for (i10 = 15; 320 > i10; ++i10) {
            Test.dFld -= Test.instanceCount;
            i11 += (i10 * i10);
            Test.byFld %= (byte)1897439045L;
            for (i12 = 1; i12 < 5; i12++) {
                for (i14 = 1; i14 < 2; i14++) {
                    b = b;
                }
                i13 -= i16;
                Test.fFld += (((i12 * Test.instanceCount) + Test.instanceCount) - i12);
            }
        }
        Test.instanceCount -= i13;
        long meth_res = Float.floatToIntBits(f) + (b ? 1 : 0) + s + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i1=-14, i17=-63, i18=-26723, i19=128, i20=-6, i21=-239;
        boolean b2=false;
        double d=-1.126979;

        Test.dFld += (((Test.instanceCount - 13415) + (i1 * i1)) * iMeth(0.92F, b2));
        if (b2) {
            i1 >>= (int)Test.instanceCount;
            d = 1;
            do {
                Test.fFld += (-19448 + (d * d));
                i1 = (int)d;
                if (i1 != 0) {
                    vMeth_check_sum += i1 + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + i21;
                    return;
                }
                i1 += (int)(((d * i1) + Test.fFld) - i1);
            } while (++d < 284);
        } else if (b2) {
            i17 = 1;
            do {
                if (i1 != 0) {
                    vMeth_check_sum += i1 + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + i21;
                    return;
                }
                for (i18 = 1; i18 < 6; i18++) {
                    if (b2) continue;
                    for (i20 = 1; 2 > i20; ++i20) {
                        i19 += i21;
                        try {
                            Test.iArrFld[i18] = (i19 / i17);
                            Test.iArrFld[i17 - 1] = (1267845139 / i1);
                            Test.iArrFld[i18 + 1] = (i1 / i17);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            } while (++i17 < 254);
        }
        vMeth_check_sum += i1 + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i=202;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -63L);

        Test.byFld >>= (byte)i;
        Test.dArrFld[(i >>> 1) % N] *= (((Test.dArrFld[(i >>> 1) % N]++) + (Test.instanceCount * Test.byFld)) + lArr[(i
            >>> 1) % N]);
        i %= -7;
        vMeth();


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
