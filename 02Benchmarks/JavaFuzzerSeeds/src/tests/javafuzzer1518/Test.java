package tests.javafuzzer1518;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:03:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static int iFld=-36;
    public static short sFld=5655;
    public static float fFld=111.1008F;
    public int iFld1=-14;
    public static long lFld=121L;
    public float fFld1=35.140F;
    public static byte byFld=-59;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static volatile long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
        FuzzerUtils.init(Test.fArrFld, 22.537F);
        FuzzerUtils.init(Test.lArrFld, 5292977573238805430L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4) {

        int i5=44077, i6=-34370, i7=0, i8=32343, i9=-175;
        double d=-125.104227;
        float f=61.434F;
        boolean b1=true;

        for (i5 = 8; 258 > i5; ++i5) {
            d = -5;
        }
        for (i7 = 8; i7 < 213; i7++) {
            f *= i5;
            i6 += (((i7 * i4) + Test.iFld) - i8);
            f = Test.instanceCount;
            Test.instanceCount = Test.iFld;
        }
        i9 = 1;
        do {
            byte by=-61;
            Test.instanceCount -= Test.sFld;
            if (b1) break;
            if (b1) break;
            Test.instanceCount *= by;
            if (b1) break;
            i6 += (i9 * i9);
        } while (++i9 < 163);
        long meth_res = i4 + i5 + i6 + Double.doubleToLongBits(d) + i7 + i8 + Float.floatToIntBits(f) + i9 + (b1 ? 1 :
            0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i10=-43, i11=-8, i12=0, i13=60, i14=109, i15=39493, i16=-4;
        float f1=2.703F;

        Test.iArrFld[(Test.iFld >>> 1) % N] = (((Test.iFld + Test.iFld) * iMeth1(Test.iFld)) + Test.iFld);
        Test.fArrFld[(Test.iFld >>> 1) % N] *= Test.iFld;
        Test.fFld *= 74;
        for (i10 = 8; 298 > i10; ++i10) {
            i11 = Test.sFld;
            for (f1 = 1; f1 < 6; f1++) {
                double d1=-1.8671;
                Test.iFld >>= (int)-82L;
                for (i13 = 1; i13 < 2; ++i13) {
                    i14 = -1;
                    Test.instanceCount += (((i13 * Test.fFld) + i11) - i10);
                    Test.fFld += i15;
                    i15 += (i13 - Test.instanceCount);
                }
                d1 = i16;
                Test.instanceCount = 38308;
                Test.instanceCount <<= Test.instanceCount;
            }
        }
        vMeth_check_sum += i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + i16;
    }

    public int iMeth() {

        boolean b=true;
        int i17=49, i18=-14, i19=-156, i20=-2, i21=-17291;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -41918L);

        b = b;
        Test.iFld = (int)Test.instanceCount;
        vMeth();
        for (i17 = 23; 389 > i17; ++i17) {
            lArr[i17 + 1] = Test.iFld;
            i18 = (int)Test.instanceCount;
            Test.iArrFld[i17 - 1] += iFld1;
            Test.iArrFld[i17 + 1] *= (int)Test.instanceCount;
            switch ((i17 % 3) + 34) {
            case 34:
                i19 = 1;
                do {
                    Test.iFld += Test.iFld;
                } while (++i19 < 5);
                Test.fFld -= i19;
                for (i20 = 1; i20 < 5; i20++) {
                    i18 = iFld1;
                    iFld1 += i20;
                }
            case 35:
                i18 += (int)Test.fFld;
                break;
            case 36:
                Test.instanceCount += 5593L;
            default:
                iFld1 = i21;
            }
        }
        long meth_res = (b ? 1 : 0) + i17 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=61232, i1=-128, i2=-7, i3=-180, i22=11, i23=-51;
        double d2=29.56287;
        long l=35025L;

        for (i = 5; i < 195; i++) {
            for (i2 = 8; 132 > i2; ++i2) {
                Test.instanceCount = (i1 *= iMeth());
                Test.lFld += i1;
                Test.iFld -= -1;
                iFld1 = Test.iFld;
                iFld1 += i2;
                for (i22 = 1; i22 < 2; ++i22) {
                    iFld1 = i22;
                    switch (((-156 >>> 1) % 10) + 3) {
                    case 3:
                        Test.instanceCount += (long)d2;
                        break;
                    case 4:
                        Test.lArrFld[i22 - 1] = iFld1;
                        Test.iArrFld[i22] -= (int)0L;
                        i1 += i22;
                    case 5:
                        Test.iFld = (int)-2521936259L;
                        Test.lArrFld[i22 - 1] = Test.sFld;
                        d2 -= Test.lFld;
                        break;
                    case 6:
                        dArrFld[i2 - 1] = 14L;
                        Test.iFld *= (int)fFld1;
                        break;
                    case 7:
                        i1 += i22;
                        i1 += (((i22 * fFld1) + Test.lFld) - i);
                        switch ((i % 4) + 69) {
                        case 69:
                        case 70:
                            i3 = i1;
                            break;
                        case 71:
                            Test.byFld += (byte)i22;
                            d2 += i2;
                            Test.fFld = Test.lFld;
                            break;
                        case 72:
                            i1 = -44;
                            Test.lFld = l;
                            break;
                        default:
                            Test.lFld -= Test.lFld;
                            Test.fArrFld[i22 - 1] = Test.iFld;
                        }
                        break;
                    case 8:
                        i1 *= i1;
                    case 9:
                        Test.iArrFld[i + 1] += (int)d2;
                        break;
                    case 10:
                        Test.fFld += (i22 * Test.iFld);
                        break;
                    case 11:
                        i23 = i22;
                        break;
                    case 12:
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
