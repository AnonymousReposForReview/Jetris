package tests.javafuzzer1848;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:27:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8583587120680287070L;
    public static int iFld=-43420;
    public static volatile byte byFld=-19;
    public static double dFld=1.93633;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, long l, int i1) {

        long l1=7462907396813267513L;
        double d1=1.39885;
        int i2=60321, i3=9, i4=-9;
        boolean b=true, bArr[]=new boolean[N];
        byte by=52;

        FuzzerUtils.init(bArr, true);

        l1 = 1;
        do {
            i1 = -136;
            i1 *= i1;
            i1 += (int)(l1 - i1);
            for (d1 = 1; d1 < 17; d1++) {
                Test.iArrFld[(int)(l1)] = i1;
                if (i1 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f) + l + i1 + l1 + Double.doubleToLongBits(d1) + i2 + i3 +
                        i4 + (b ? 1 : 0) + by + FuzzerUtils.checkSum(bArr);
                    return;
                }
                for (i3 = 1; i3 < 2; ++i3) {
                    short s=16221;
                    i2 -= i3;
                    i1 += i2;
                    Test.iArrFld[i3] &= i3;
                    if (b) {
                        i1 += (i3 * i4);
                        bArr[(int)(d1)] = b;
                        Test.instanceCount ^= s;
                    } else if (true) {
                        if (b) continue;
                    } else if (b) {
                        i1 -= by;
                        vMeth1_check_sum += Float.floatToIntBits(f) + l + i1 + l1 + Double.doubleToLongBits(d1) + i2 +
                            i3 + i4 + (b ? 1 : 0) + by + FuzzerUtils.checkSum(bArr);
                        return;
                    } else {
                        i4 = i4;
                    }
                }
            }
        } while ((l1 += 3) < 280);
        vMeth1_check_sum += Float.floatToIntBits(f) + l + i1 + l1 + Double.doubleToLongBits(d1) + i2 + i3 + i4 + (b ? 1
            : 0) + by + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth() {

        float f1=-2.162F;
        int i5=-12, i6=-250, i7=-7, i8=7, i9=59230, i10=35, i11=16769;
        double d2=2.37871;
        short s1=-6679;
        boolean b1=true;
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -2755328760316179171L);
        FuzzerUtils.init(byArr, (byte)24);

        vMeth1(f1, 46512L, Test.iFld);
        for (i5 = 1; i5 < 200; ++i5) {
            Test.iArrFld[i5] -= i5;
            for (i7 = i5; i7 < 8; i7++) {
                Test.instanceCount *= Test.instanceCount;
                lArr[i7 + 1] = Test.byFld;
                Test.instanceCount += (long)-102.430F;
                Test.iArrFld[i7] >>= -30;
                for (d2 = 1; d2 < 1; d2++) {
                    s1 += (short)i7;
                }
                for (i10 = i7; i10 < 1; i10++) {
                    byArr[i7 + 1] -= (byte)-77.677F;
                    i9 += i6;
                    b1 = b1;
                }
            }
            i6 -= Test.iFld;
        }
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d2) + i9 + s1 + i10 +
            i11 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-11, i12=56, i13=0, i14=-144;
        double d=121.63791;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 106L);

        i = (int)(((++i) - (i + i)) * (d++));
        Test.instanceCount *= (-iMeth());
        i12 = 1;
        while (++i12 < 285) {
            i = i12;
            for (i13 = 6; 1 < i13; i13--) {
                float f2=1.747F;
                short s2=22993;
                lArr1[i13 - 1] <<= -21823;
                Test.instanceCount += Test.instanceCount;
                Test.instanceCount = i12;
                f2 = (float)d;
                s2 += (short)-200;
                Test.iArrFld[i12] = (int)Test.instanceCount;
                i14 = Test.iFld;
                i14 = (int)Test.instanceCount;
                Test.instanceCount = i13;
                Test.iArrFld[i13 + 1] = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i15=9371, i16=14, i17=128, i18=-19713, i19=34057, i20=-76;
        float f3=1.45F;
        short s3=-2769;

        vMeth();
        Test.iFld = (int)Test.instanceCount;
        for (i15 = 7; i15 < 391; ++i15) {
            for (i17 = 1; i17 < 66; i17++) {
                boolean b2=false;
                Test.byFld %= (byte)(i16 | 1);
                Test.iFld += (i17 * i17);
                Test.dFld = Test.dFld;
                b2 = b2;
                i19 = 1;
                do {
                    switch ((i17 % 4) + 100) {
                    case 100:
                        switch ((i19 % 4) + 44) {
                        case 44:
                            i16 = i18;
                            Test.dFld = f3;
                            Test.iFld += (i19 * i16);
                            break;
                        case 45:
                            Test.instanceCount += (((i19 * i19) + i15) - s3);
                            switch ((((i15 >>> 1) % 10) * 5) + 116) {
                            case 140:
                                if (true) continue;
                            case 138:
                                Test.dFld *= Test.dFld;
                                i20 += Test.iFld;
                                break;
                            case 156:
                                i20 += (i19 | i18);
                                i20 += (((i19 * Test.instanceCount) + Test.instanceCount) - Test.byFld);
                                i18 = Test.byFld;
                                i16 -= 18996;
                                break;
                            case 164:
                            case 141:
                                Test.iFld += i19;
                                if (b2) break;
                                i20 *= i18;
                                break;
                            case 128:
                                f3 /= (s3 | 1);
                                Test.instanceCount = Test.instanceCount;
                            case 130:
                                Test.iFld = i18;
                                Test.instanceCount = (long)1.696F;
                                break;
                            case 160:
                                Test.byFld += (byte)(i19 - s3);
                                break;
                            case 127:
                                Test.iFld += (i19 + Test.iFld);
                                break;
                            case 147:
                                Test.instanceCount -= i15;
                                break;
                            default:
                            }
                            break;
                        case 46:
                            i18 = (int)Test.instanceCount;
                            break;
                        case 47:
                            i20 += (i19 - Test.instanceCount);
                            break;
                        default:
                            i20 = (int)-75.10056;
                        }
                        break;
                    case 101:
                        Test.dFld = s3;
                        break;
                    case 102:
                        i16 += (((i19 * Test.iFld) + f3) - Test.instanceCount);
                        break;
                    case 103:
                        i18 = (int)Test.instanceCount;
                        break;
                    default:
                        i16 = -63511;
                    }
                } while (++i19 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
