package tests.javafuzzer615;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:39:59 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-64225L;
    public static int iFld=-95;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 89.105F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-9, i5=-14, i6=-6, i7=-7, i8=5, i9=-31854, iArr1[]=new int[N];
        float f1=0.815F;
        double d1=0.103216;

        FuzzerUtils.init(iArr1, -47255);

        Test.iFld = Test.iFld;
        Test.iFld *= (int)-1.14088;
        Test.iFld = i4;
        f1 = 1;
        do {
            for (i5 = 5; i5 > 1; --i5) {
                i6 += (((i5 * i4) + i5) - Test.iFld);
                d1 -= 5L;
                i4 = Test.iFld;
                i7 = i5;
                Test.instanceCount += (-106L + (i5 * i5));
                i4 += (i5 * i5);
                if (false) break;
                for (i8 = 1; i8 < 2; i8++) {
                    iArr1[(int)(f1)] = i4;
                    i6 = 61;
                }
            }
        } while (++f1 < 339);
        vMeth2_check_sum += i4 + Float.floatToIntBits(f1) + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(float f, int i3) {

        int i10=-28455, i11=-9, i12=-174, i13=189, i14=106, i15=-22983, iArr2[][]=new int[N][N];
        boolean b=true;
        short s=5649;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, -20581);
        FuzzerUtils.init(lArr, 6L);

        vMeth2();
        for (i10 = 393; i10 > 17; i10--) {
            if (b) break;
            if (b) break;
        }
        for (i12 = 14; 355 > i12; i12++) {
            s += (short)i12;
            Test.iFld = i10;
            i14 = 1;
            do {
                if (b) {
                    iArr2[i14 - 1][i12 - 1] += i3;
                    Test.instanceCount = i12;
                } else {
                    lArr[i12] >>>= Test.instanceCount;
                    i15 += i3;
                    i15 *= (int)48.120393;
                }
                Test.iFld += (((i14 * s) + Test.instanceCount) - f);
            } while (++i14 < 5);
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i10 + i11 + (b ? 1 : 0) + i12 + i13 + s + i14 + i15 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i2, long l) {

        byte by=-19;
        double d=0.16063;
        float f3=-1.815F;
        int i16=-48752, i17=-16, i18=-20, i19=1, i20=7, i21=-4464, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 176);

        by = (byte)Math.max((int)((d++) * (i2--)), iArr[(i2 >>> 1) % N]);
        vMeth1(f3, i2);
        for (i16 = 137; 3 < i16; i16 -= 3) {
            l += (long)d;
            f3 += (((i16 * i2) + l) - i2);
            d += i2;
            for (i18 = 2; i18 < 35; i18++) {
                Test.instanceCount = i16;
                f3 -= i2;
                i17 ^= Test.iFld;
                l = i17;
                for (i20 = 1; i20 < 2; ++i20) {
                    i19 = (int)-152L;
                    i19 += i17;
                    Test.iFld &= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i2 + l + by + Double.doubleToLongBits(d) + Float.floatToIntBits(f3) + i16 + i17 + i18 + i19
            + i20 + i21 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-54243, i1=112, i22=-198, i23=-142, i24=201, i25=48164, i26=-12;
        float f4=68.48F, f5=-63.933F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -54.6936);

        for (i = 7; 282 > i; i++) {
            vMeth(i1, 152L);
            i1 <<= -149;
            i1 -= (int)Test.instanceCount;
            dArr[i] += Test.iFld;
            f4 = 1;
            do {
                i1 += (int)f4;
            } while (++f4 < 91);
        }
        f5 -= Test.iFld;
        i22 = 1;
        while (++i22 < 214) {
            for (i23 = 117; i23 > 4; i23 -= 2) {
                i1 >>= (int)Test.instanceCount;
                i24 = i24;
                i1 *= (int)Test.instanceCount;
                for (i25 = 1; i25 < 3; ++i25) {
                    short s1=12143;
                    i24 += (i25 - s1);
                    Test.iFld += (-33293 + (i25 * i25));
                    Test.iFld ^= (int)Test.instanceCount;
                    Test.instanceCount = 125202418L;
                }
                i24 += 9;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
