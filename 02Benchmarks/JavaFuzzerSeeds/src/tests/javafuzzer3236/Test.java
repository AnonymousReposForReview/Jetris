package tests.javafuzzer3236;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 04:23:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-23270L;
    public static float fFld=87.724F;
    public static short sFld=-12330;
    public static byte byFld=104;
    public static int iFld=-35499;
    public float fFld1=1.1023F;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -61.248F);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3) {

        long l2=8L;
        int i4=-198, i5=143, i6=-7, i7=-10, i8=-116, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, 47317);

        iArr[(i3 >>> 1) % N][(i3 >>> 1) % N] = (int)l2;
        i3 >>= i3;
        Test.fFld += Test.sFld;
        for (i4 = 1; i4 < 243; i4++) {
            Test.fFld += i4;
            i3 >>>= i5;
            for (i6 = 1; i6 < 7; i6++) {
                Test.instanceCount *= (long)Test.fFld;
                i7 >>= (int)5775295554407808008L;
                i3 = i6;
                Test.fFld -= Test.instanceCount;
                Test.sFld -= (short)i6;
                i8 -= i8;
            }
        }
        long meth_res = i3 + l2 + i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth(boolean b, int i1) {

        int i2=0, i9=240, i10=-38614, iArr1[]=new int[N];
        byte by=56;

        FuzzerUtils.init(iArr1, -12964);

        i1 <<= (int)(-26909 - Test.instanceCount);
        i2 = 1;
        do {
            i1 = (int)(i2 + Test.instanceCount);
            Test.fFld += (((i2 * i2) + i2) - Test.instanceCount);
            Test.instanceCount = Test.instanceCount;
        } while (++i2 < 291);
        i1 >>= (int)lMeth(i1);
        i1 += (int)Test.instanceCount;
        i1 = (int)Test.fFld;
        if (b) {
            Test.fFld -= i2;
            Test.fFld = Test.fFld;
            for (i9 = 1; i9 < 171; ++i9) {
                i1 *= i1;
                i1 >>= 93;
                i1 >>>= (int)Test.instanceCount;
            }
        } else {
            iArr1[(i1 >>> 1) % N] = by;
        }
        long meth_res = (b ? 1 : 0) + i1 + i2 + i9 + i10 + by + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth(int i, long l, long l1) {

        boolean b1=false;
        double d=-117.28177;
        int i11=-11, i12=-14914, i13=207;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 0.599F);

        l >>= (long)((fMeth(b1, i) + Test.byFld) + i);
        Test.sFld -= (short)Test.instanceCount;
        d += i;
        i11 = 1;
        while (++i11 < 238) {
            if (b1) {
                fArr = FuzzerUtils.float2array(N, (float)1.75F);
                i >>>= (int)l1;
                i -= i;
                i = (int)Test.instanceCount;
                vMeth_check_sum += i + l + l1 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i11 + i12 + i13 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            } else if (false) {
                i -= 34193;
                if (b1) continue;
            } else {
                Test.instanceCount *= 2114074100834075637L;
                for (i12 = 7; 1 < i12; --i12) {
                    i13 >>= i12;
                    if (b1) break;
                }
            }
        }
        vMeth_check_sum += i + l + l1 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        double d1=110.8215;
        int i14=9085, i15=4382, i16=2, i17=-65, i18=15337, iArr2[][]=new int[N][N];
        boolean b2=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -12);

        vMeth(Test.iFld, 64440L, Test.instanceCount);
        switch ((((Test.iFld >>> 1) % 1) * 5) + 20) {
        case 21:
            Test.iFld *= (int)d1;
            Test.iFld = Test.iFld;
            i14 = 1;
            while (++i14 < 369) {
                Test.fFld *= i14;
                Test.iFld = i14;
                for (i15 = 1; 68 > i15; i15++) {
                    Test.iFld = i16;
                    i16 = (int)11.745F;
                    bArr = FuzzerUtils.boolean1array(N, (boolean)false);
                    Test.iFld = -38965;
                    Test.iFld += (i15 + Test.fFld);
                    switch ((i14 % 9) + 77) {
                    case 77:
                        Test.instanceCount = i16;
                        break;
                    case 78:
                        Test.instanceCount >>= 8122;
                        i16 += -15393;
                        Test.iFld -= Test.sFld;
                        break;
                    case 79:
                        for (i17 = 1; i17 < 2; ++i17) {
                            iArr2[i15 + 1][i17 + 1] <<= i17;
                            iArr2[i17 + 1][i14] = (int)-3817890053L;
                            i18 += (((i17 * i16) + i14) - Test.fFld);
                            Test.iFld += (((i17 * i14) + fFld1) - Test.iFld);
                            Test.fArrFld[i17 - 1] -= Test.instanceCount;
                            Test.instanceCount = -4L;
                            switch ((((i18 >>> 1) % 2) * 5) + 39) {
                            case 47:
                                Test.iFld = 25;
                                Test.sFld ^= (short)i17;
                            case 44:
                                i18 = (int)d1;
                                iArr2[i14 + 1][i15] = i14;
                                break;
                            }
                        }
                    case 80:
                        Test.instanceCount += (long)Test.fFld;
                        break;
                    case 81:
                        i16 <<= Test.iFld;
                        break;
                    case 82:
                        if (b2) break;
                        break;
                    case 83:
                    case 84:
                        d1 -= Test.instanceCount;
                        break;
                    case 85:
                        i16 >>= -25069;
                        break;
                    }
                }
            }
            break;
        default:
            Test.instanceCount = i18;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
