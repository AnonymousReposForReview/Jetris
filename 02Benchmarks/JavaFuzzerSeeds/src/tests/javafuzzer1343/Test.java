package tests.javafuzzer1343;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:32:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-59671L;
    public static byte byFld=-100;
    public static float fFld=0.691F;
    public int iFld=-98;
    public static short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)21704);
        FuzzerUtils.init(Test.iArrFld, 45470);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=-11, i9=-10165, i10=-196, i11=13491, i12=-63201, i13=-3, i14=10, i15=250, iArr[]=new int[N];
        boolean b=false, bArr[]=new boolean[N];
        float f1=-2.432F;

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, -3);

        for (i8 = 11; i8 < 365; ++i8) {
            b = b;
            if (b) {
                i10 = 1;
                while (++i10 < 5) {
                    bArr[i10] = b;
                }
                Test.sArrFld[i8 - 1] = (short)0;
            }
            for (i11 = 1; 5 > i11; i11++) {
                i13 += (int)f1;
                for (i14 = 1; i14 < 2; i14++) {
                    byte by=-35;
                    long l1=-4272827413L;
                    by *= (byte)i12;
                    Test.instanceCount = (long)f1;
                    switch ((((i14 >>> 1) % 6) * 5) + 71) {
                    case 91:
                        i15 -= -32572;
                        break;
                    case 75:
                        by *= (byte)i15;
                        Test.instanceCount = (long)f1;
                        break;
                    case 80:
                        i13 -= (int)Test.instanceCount;
                        break;
                    case 88:
                        f1 += (((i14 * i13) + Test.instanceCount) - f1);
                        break;
                    case 87:
                        iArr[i11 - 1] = i12;
                        break;
                    case 95:
                        l1 = -120L;
                        break;
                    default:
                        i9 += (int)(246L + (i14 * i14));
                    }
                }
            }
        }
        vMeth2_check_sum += i8 + i9 + (b ? 1 : 0) + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, int i5, int i6) {

        int i7=-9900, i16=-249, i17=62, i18=10;
        double d=83.84612, d1=-7.129263;
        boolean b1=false;

        i7 = 187;
        do {
            vMeth2();
            i5 += (int)d;
            if (b1) break;
            for (d1 = 1; d1 < 9; d1++) {
                for (i17 = 1; 2 > i17; i17++) {
                    i5 = i5;
                    i18 += (((i17 * l) + i5) - Test.instanceCount);
                    l = i18;
                    l += (i17 ^ Test.byFld);
                    i18 = (int)l;
                    Test.byFld += (byte)(-98 + (i17 * i17));
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-14);
                }
                Test.fFld -= 31334;
                if (i18 != 0) {
                    vMeth1_check_sum += l + i5 + i6 + i7 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) +
                        Double.doubleToLongBits(d1) + i16 + i17 + i18;
                    return;
                }
            }
        } while (--i7 > 0);
        vMeth1_check_sum += l + i5 + i6 + i7 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + Double.doubleToLongBits(d1)
            + i16 + i17 + i18;
    }

    public static void vMeth(int i3, int i4) {

        int i19=0, i20=153, i21=-104, i22=-54402;
        double d2=97.69041;
        short s=30946;
        long l2=-62L;

        vMeth1(-203L, i3, i4);
        switch ((((12 >>> 1) % 6) * 5) + 82) {
        case 90:
            i19 = 1;
            while (++i19 < 390) {
                for (i20 = 1; i20 < 4; ++i20) {
                    d2 = Test.fFld;
                    i3 >>= i3;
                    i3 += (((i20 * Test.instanceCount) + i19) - i3);
                    Test.iArrFld[i20] <<= s;
                }
                for (l2 = i19; l2 < 4; ++l2) {
                    if (i3 != 0) {
                        vMeth_check_sum += i3 + i4 + i19 + i20 + i21 + Double.doubleToLongBits(d2) + s + l2 + i22;
                        return;
                    }
                    i22 += i4;
                    i21 ^= i19;
                    i21 = i19;
                    i4 -= (int)Test.instanceCount;
                    s += (short)Test.fFld;
                }
            }
            break;
        case 99:
            Test.fFld = i22;
            break;
        case 104:
            i21 = i22;
            break;
        case 88:
            Test.instanceCount += Test.byFld;
            break;
        case 103:
            Test.iArrFld[(i21 >>> 1) % N] -= i3;
            break;
        case 87:
            i22 = i21;
            break;
        }
        vMeth_check_sum += i3 + i4 + i19 + i20 + i21 + Double.doubleToLongBits(d2) + s + l2 + i22;
    }

    public void mainTest(String[] strArr1) {

        float f=-2.299F;
        int i=-229, i1=8, i2=-5159, i23=12, i24=7, i25=-8, i26=218, i27=-30720, i28=8, i29=5;
        boolean b2=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.6062);

        f = 121;
        while (--f > 0) {
            i = i;
            for (i1 = (int)(f); i1 < 207; i1++) {
                i2 += (i1 - i);
                vMeth(i2, i1);
                i23 = 1;
                while (++i23 < 1) {
                    double d3=-2.29740;
                    i |= 3;
                    d3 *= -1243;
                    i2 += (i23 * i23);
                    Test.instanceCount += (((i23 * i1) + i23) - i1);
                    if (b2) continue;
                    Test.iArrFld[i23] = Test.byFld;
                    i += (i23 + iFld);
                    i = i2;
                }
                i24 = 1;
                do {
                    i += i24;
                    Test.iArrFld[(int)(f)] += 26862;
                } while (++i24 < 1);
                Test.instanceCount = i2;
                Test.instanceCount -= i23;
            }
            Test.iArrFld = Test.iArrFld;
            for (i25 = 207; i25 > 4; i25--) {
                double d4=1.81237;
                dArr[i25 + 1] = Test.byFld;
                i |= i26;
                i26 = (int)d4;
                for (i27 = 1; i27 < 2; i27++) {
                    if (b2) continue;
                    Test.sArrFld[i27] = (short)i29;
                    b2 = b2;
                }
                Test.instanceCount -= i26;
                Test.instanceCount += (((i25 * Test.instanceCount) + i29) - Test.fFld);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
