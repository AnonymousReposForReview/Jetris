package tests.javafuzzer1155;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:55:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-235L;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 10);
        FuzzerUtils.init(Test.lArrFld, -75L);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, float f) {

        int i10=0, i11=93, i12=12, i13=-141, i14=-34698, i16=80, i17=-13, i18=-44, i19=-51967;
        byte by=-98;

        i10 = i10;
        by *= (byte)1.611F;
        i10 += (int)l;
        for (i11 = 4; 267 > i11; ++i11) {
            i10 >>= i11;
        }
        for (i13 = 14; i13 < 394; i13++) {
            Test.lArrFld = Test.lArrFld;
            i14 = i14;
            i12 += (((i13 * Test.instanceCount) + i12) - by);
            i10 += (i13 ^ i12);
        }
        i14 += i13;
        for (i16 = 306; i16 > 18; --i16) {
            for (i18 = 1; i18 < 6; i18++) {
                i10 &= i17;
                i17 += i18;
            }
        }
        vMeth1_check_sum += l + Float.floatToIntBits(f) + i10 + by + i11 + i12 + i13 + i14 + i16 + i17 + i18 + i19;
    }

    public static boolean bMeth() {

        int i8=42017, i9=-146, i20=-10;
        float f1=71.984F;
        boolean b=false;

        for (i8 = 3; i8 < 377; i8 += 2) {
            i9 = (int)(((Test.iArrFld1[i8]++) / (Test.lArrFld[i8 + 1] | 1)) + (i9--));
            Test.instanceCount += (i8 * i8);
            vMeth1(Test.instanceCount, f1);
            i20 = 1;
            while (++i20 < 9) {
                i9 -= (int)-47.78228;
                i9 += i20;
                Test.instanceCount = i20;
                Test.iArrFld1[(i8 >>> 1) % N] <<= i20;
                switch ((i8 % 5) + 10) {
                case 10:
                    i9 <<= i20;
                    if (b) continue;
                    i9 *= i9;
                    break;
                case 11:
                case 12:
                    i9 *= i8;
                    Test.instanceCount += (i20 - i9);
                    break;
                case 13:
                    Test.lArrFld[i8 + 1] += 1433198954L;
                    break;
                case 14:
                    Test.instanceCount = i8;
                    break;
                default:
                    i9 += (i20 + i8);
                }
            }
        }
        long meth_res = i8 + i9 + Float.floatToIntBits(f1) + i20 + (b ? 1 : 0);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void vMeth(double d, int i2, int i3) {

        int i4=55, i5=50161, i6=70, i7=7555;
        double d1=110.128634;
        float f2=101.938F;
        byte by1=1;

        for (i4 = 299; i4 > 12; i4--) {
            i5 = ((iArrFld[i4 + 1]++) + (++i3));
            switch ((((((int)(d1 - i4)) >>> 1) % 2) * 5) + 13) {
            case 23:
                Test.instanceCount += i4;
                for (i6 = 1; i6 < 6; i6++) {
                    Test.instanceCount -= ((++iArrFld[i6]) - Test.instanceCount);
                    Test.instanceCount = (++Test.instanceCount);
                    if (bMeth()) continue;
                }
                i7 = (int)Test.instanceCount;
                f2 -= Test.instanceCount;
                break;
            case 19:
                f2 += i4;
                i7 += (i4 | Test.instanceCount);
                break;
            }
            Test.instanceCount = (long)-60.112604;
            i3 -= i6;
            i7 >>= by1;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d1) + i6 + i7 +
            Float.floatToIntBits(f2) + by1;
    }

    public void mainTest(String[] strArr1) {

        int i=-54792, i1=6797;
        double d2=70.89376;

        for (i = 13; i < 370; ++i) {
            vMeth(d2, i1, i);
            d2 = 2.379F;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
