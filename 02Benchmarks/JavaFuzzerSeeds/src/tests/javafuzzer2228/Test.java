package tests.javafuzzer2228;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:28:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2922115639L;
    public static double dFld=66.51649;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -52758);
        FuzzerUtils.init(Test.lArrFld, 46630L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i10) {

        int i11=-33, i12=8, i13=-8, i14=36049, i15=-30, i16=2, i17=120, i18=127;
        float f3=104.591F;
        boolean b1=false;

        i10 -= i10;
        Test.iArrFld = Test.iArrFld;
        for (i11 = 13; i11 < 214; ++i11) {
            i10 += (int)(83.750F + (i11 * i11));
            for (f3 = 1; 8 > f3; f3++) {
                for (i14 = 1; 2 > i14; ++i14) {
                    if (i13 != 0) {
                    }
                    i10 -= i13;
                    Test.instanceCount = i12;
                    i12 -= i11;
                }
                for (i16 = (int)(f3); i16 < 2; i16++) {
                    i13 = i16;
                    i17 -= -47898;
                    b1 = false;
                    i18 -= i12;
                }
            }
        }
        long meth_res = i10 + i11 + i12 + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0) + i18;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(float f2, long l, int i9) {

        int i19=-100, i20=13, i21=14, i22=-4;
        boolean b2=false, bArr[]=new boolean[N];
        byte by1=8, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-93);
        FuzzerUtils.init(bArr, false);

        i9 = (int)((i9 *= (Test.iArrFld[(i9 >>> 1) % N] += i9)) + Test.dFld);
        i9 = (int)(l++);
        f2 += (--byArr[(i9 >>> 1) % N]);
        if (false) {
            i9 += (int)fMeth(233);
            Test.lArrFld[(i9 >>> 1) % N] += i9;
            for (i19 = 3; i19 < 375; i19++) {
                Test.lArrFld[i19] *= i19;
                bArr[i19] = b2;
                i20 %= (int)(Test.instanceCount | 1);
                for (i21 = 5; i21 > 1; i21--) {
                    Test.instanceCount &= i9;
                    i20 += (((i21 * i22) + f2) - i9);
                    i22 += (13792 + (i21 * i21));
                    if (i19 != 0) {
                    }
                }
            }
        } else if (b2) {
            by1 -= (byte)i9;
        }
        long meth_res = Float.floatToIntBits(f2) + l + i9 + i19 + i20 + (b2 ? 1 : 0) + i21 + i22 + by1 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2) {

        int i3=-184, i4=-17281, i5=-8065, i6=-3, i7=254, i8=-30279, i23=-14, i24=7451;
        float f1=1.420F, fArr[]=new float[N];
        boolean b3=false, bArr1[]=new boolean[N];
        byte by2=38;

        FuzzerUtils.init(fArr, 49.929F);
        FuzzerUtils.init(bArr1, true);

        for (i3 = 5; i3 < 247; ++i3) {
            i4 += (i3 * f1);
            i2 += i3;
            Test.instanceCount += (((i3 * i4) + i3) - Test.instanceCount);
            switch ((i3 % 10) + 72) {
            case 72:
                f1 += (i3 * i3);
                for (i5 = i3; i5 < 7; i5++) {
                    for (i7 = 1; i7 < 1; ++i7) {
                        if ((((i2 + i6) - iMeth(f1, Test.instanceCount, i3)) <= Test.instanceCount) != false) break;
                        Test.instanceCount -= i8;
                        b3 = b3;
                    }
                }
                break;
            case 73:
                by2 = (byte)Test.instanceCount;
            case 74:
                for (i23 = 1; i23 < 7; i23++) {
                    Test.lArrFld[i23] >>= i5;
                    f1 = i6;
                }
                break;
            case 75:
                bArr1 = bArr1;
                break;
            case 76:
                f1 = -12;
                break;
            case 77:
                Test.instanceCount = i7;
                break;
            case 78:
                i6 += (-14964 + (i3 * i3));
                break;
            case 79:
                fArr[i3 + 1] = Test.instanceCount;
            case 80:
                i6 = i3;
                break;
            case 81:
                i24 += (int)Test.instanceCount;
                break;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + (b3 ? 1 : 0) + by2 + i23 + i24
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr1);
    }

    public void mainTest(String[] strArr3) {

        int i=6, i1=-94, i25=-10, i26=5, i27=40, i28=114, i29=-134, i30=13, i31=-28733, i32=60645, i33=-12;
        float f5=61.151F;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)22289);

        for (i = 14; i < 330; i++) {
            vMeth(i);
            for (i25 = 5; 80 > i25; ++i25) {
                i26 += (int)(65.793F + (i25 * i25));
                i26 = i;
                i27 = 1;
                while (++i27 < 2) {
                    i1 = i;
                }
                i1 += i25;
                for (i28 = 1; i28 < 2; i28++) {
                    Test.lArrFld[i28] = i25;
                    i1 += (int)Test.instanceCount;
                    i29 = i25;
                    i26 -= (int)f5;
                    i1 += i1;
                }
                i1 >>= i;
                Test.iArrFld[i] *= 124;
                i26 = i1;
                Test.instanceCount += (i25 * i25);
            }
            i29 *= i26;
            for (i30 = 1; 80 > i30; ++i30) {
                i29 += i30;
                for (i32 = 1; 2 > i32; ++i32) {
                    Test.iArrFld[i] += i27;
                    i26 >>= i32;
                    Test.instanceCount += i29;
                    Test.instanceCount = Test.instanceCount;
                    f5 = 217;
                    f5 -= -1;
                    sArr[i] = sArr[i32 - 1];
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-14218);
                }
            }
        }



    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
