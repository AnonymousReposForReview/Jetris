package tests.javafuzzer2646;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:58:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=26889L;
    public static boolean bFld=false;
    public static byte byFld=14;
    public static float fFld=0.915F;
    public static volatile boolean bArrFld[]=new boolean[N];
    public static float fArrFld[]=new float[N];
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.fArrFld, 1.423F);
        FuzzerUtils.init(Test.dArrFld, 18.111123);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=48771, i7=-177, i8=0, i9=-11697, i10=32795, i11=-11;

        if (Test.bFld) {
            for (i6 = 7; i6 < 136; ++i6) {
                for (i8 = 1; i8 < 12; ++i8) {
                    for (i10 = 1; i10 < 2; i10++) {
                        Test.instanceCount = -5400;
                        i9 += (i10 ^ i10);
                        i11 -= (int)0L;
                        Test.fArrFld[i8] = 7L;
                        i9 -= -1;
                        i7 *= Test.byFld;
                    }
                    i11 = i6;
                    i11 = i6;
                    Test.instanceCount += (-5 + (i8 * i8));
                    Test.fFld += i8;
                    Test.fFld += (i8 * Test.instanceCount);
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth(int i5) {

        int i12=63121, i13=99, i14=-27764, i15=12, iArr[]=new int[N];
        long l=13468L;

        FuzzerUtils.init(iArr, -8);

        switch ((((i5 % (i5 | 1)) >>> 1) % 4) + 9) {
        case 9:
            Test.bFld = Test.bFld;
            vMeth1();
            break;
        case 10:
            i5 *= Test.byFld;
            for (i12 = 6; i12 < 288; ++i12) {
                l = 1;
                while (++l < 6) {
                    i5 *= (int)l;
                }
                Test.dArrFld[i12 - 1][i12] *= i5;
                Test.instanceCount = i12;
                Test.fFld += i12;
                for (i14 = 1; i14 < 6; i14++) {
                    Test.byFld += (byte)(48046 + (i14 * i14));
                    i13 <<= i12;
                    i13 = i12;
                }
            }
            i13 <<= -23471;
            break;
        case 11:
        case 12:
            i5 -= (int)l;
            break;
        default:
            iArr[(i5 >>> 1) % N] &= i14;
        }
        vMeth_check_sum += i5 + i12 + i13 + l + i14 + i15 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(short s, int i4) {

        int i16=-133, i17=109, i18=9, i19=220, i20=28889, i21=-112, iArr1[]=new int[N];
        double d1=-14.76892;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-115);
        FuzzerUtils.init(iArr1, 7);

        i4 <<= (int)((i4--) - (Long.reverseBytes(Test.instanceCount) * 99));
        vMeth(-59409);
        switch (((i4 >>> 1) % 8) + 82) {
        case 82:
            for (i16 = 14; i16 < 308; i16++) {
                byArr[i16][i16 - 1] -= (byte)i16;
                i4 = (int)Test.instanceCount;
            }
            i18 = 1;
            while (++i18 < 171) {
                Test.instanceCount = Test.instanceCount;
                iArr1[i18] *= Test.byFld;
                Test.fFld = i18;
                i19 = 1;
                do {
                    for (i20 = 1; i20 < 1; i20++) {
                        Test.instanceCount = i18;
                    }
                    iArr1[i19 + 1] *= i18;
                } while (++i19 < 9);
                iArr1[i18 - 1] -= s;
            }
        case 83:
            d1 *= i18;
        case 84:
            iArr1[(247 >>> 1) % N] -= i16;
            break;
        case 85:
            iArr1[(i20 >>> 1) % N] -= (int)-98.706F;
        case 86:
            iArr1[(-10 >>> 1) % N] *= i18;
            break;
        case 87:
            i21 = i21;
            break;
        case 88:
            i17 *= i21;
        case 89:
            i4 = -4;
            break;
        default:
            iArr1[(i19 >>> 1) % N] += s;
        }
        long meth_res = s + i4 + i16 + i17 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-250, i1=-9, i2=-10, i3=-8, i22=41127, i23=-14, i24=7, i25=-12, iArr2[]=new int[N];
        double d=-1.3623;
        boolean b=false;
        short s1=23759;

        FuzzerUtils.init(iArr2, -1);

        i = (int)((~(--i)) * (++d));
        i = (int)Test.instanceCount;
        for (i1 = 5; i1 < 136; i1++) {
            if (b) {
                i2 %= (int)-8L;
                i += i1;
                Test.bArrFld[i1 - 1] = b;
                i3 = 1;
                while (++i3 < 191) {
                    i2 -= (int)lMeth(s1, 12);
                    i -= (int)Test.instanceCount;
                    i2 = 16823;
                    for (i22 = 1; 1 > i22; ++i22) {
                        Test.fArrFld[i3 + 1] *= i;
                        Test.fFld += Test.instanceCount;
                        iArr2 = FuzzerUtils.int1array(N, (int)-9);
                        i2 -= i;
                        i2 = (int)6681734242878595442L;
                        Test.instanceCount += i22;
                        i23 = (int)Test.instanceCount;
                    }
                    i >>= i22;
                    i -= (int)-6L;
                    for (i24 = 1; i24 > 1; --i24) {
                        Test.instanceCount /= 64476;
                        Test.instanceCount *= i24;
                        if (b) continue;
                        Test.fFld += i3;
                        i2 >>= (int)Test.instanceCount;
                        Test.instanceCount = -63512;
                        i25 += i25;
                        Test.instanceCount <<= i2;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
