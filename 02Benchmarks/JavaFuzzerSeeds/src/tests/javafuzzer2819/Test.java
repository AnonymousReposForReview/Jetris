package tests.javafuzzer2819;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:56:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1019922159L;
    public static int iFld=9;
    public static double dFld=11.127974;
    public static boolean bFld=true;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.69F);
        FuzzerUtils.init(Test.lArrFld, -126L);
        FuzzerUtils.init(Test.iArrFld, -49175);
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld1, 0);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i3=-14969, iArr[]=new int[N], iArr1[][]=new int[N][N];
        double d1=0.7165;
        float f1=-28.676F;
        short s=14275;
        byte by1=13;

        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(iArr1, 6);

        for (int i2 : iArr) {
            i3 = 1;
            while (++i3 < 4) {
                iArr1 = iArr1;
                d1 = 1;
                while (++d1 < 1) {
                    if (Test.iFld != 0) {
                    }
                    iArr1[(int)(d1)][i3] >>= (int)Test.instanceCount;
                    Test.iFld += (int)(((d1 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    f1 = f1;
                    switch ((int)((d1 % 8) + 54)) {
                    case 54:
                        s = (short)f1;
                        iArr1[i3 - 1][i3] += i3;
                        switch (((i2 >>> 1) % 1) + 89) {
                        case 89:
                            Test.iFld += (int)((long)d1 ^ Test.iFld);
                            break;
                        default:
                            i2 += (int)d1;
                            Test.instanceCount += (long)d1;
                        }
                    case 55:
                        f1 *= by1;
                        break;
                    case 56:
                        Test.instanceCount -= i3;
                        break;
                    case 57:
                        Test.fArrFld[i3 + 1] -= i2;
                        break;
                    case 58:
                        iArr[i3] = (int)14L;
                    case 59:
                        Test.iFld >>= 8467;
                    case 60:
                        Test.instanceCount = i3;
                        break;
                    case 61:
                        i2 = -57;
                    }
                }
            }
        }
        long meth_res = i3 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + s + by1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth() {

        byte by=118;
        int i4=-2891, i5=59563, i6=-220, i7=107, i8=81, iArr2[]=new int[N];
        short s1=32216;
        boolean b=false;
        float f2=2.931F;

        FuzzerUtils.init(iArr2, 11);

        Test.iFld = (int)(0 * ((Test.iFld * by) * dMeth()));
        i4 = 1;
        while (++i4 < 122) {
            s1 += (short)(((i4 * i4) + i4) - Test.instanceCount);
            Test.iFld = -9;
            for (i5 = 1; i5 < 13; ++i5) {
                iArr2[i5 - 1] = i5;
            }
            i6 /= (int)(by | 1);
            Test.instanceCount = by;
            b = b;
            if (b) {
                Test.dFld -= 21079;
                for (i7 = 1; i7 < 13; ++i7) {
                    i6 = i7;
                    try {
                        Test.iFld = (i4 % -8186);
                        i8 = (41902 % i8);
                        Test.iFld = (i8 / -2132500044);
                    } catch (ArithmeticException a_e) {}
                    i8 += (((i7 * f2) + f2) - i5);
                }
            } else {
                Test.instanceCount <<= 10;
            }
        }
        vMeth_check_sum += by + i4 + s1 + i5 + i6 + (b ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(float f, double d) {

        int i9=14, i10=14, i11=-219, i12=11424, i13=-23680, i14=1;
        byte by2=-44;

        vMeth();
        for (i9 = 15; i9 < 332; i9++) {
            Test.instanceCount = i11;
            i12 = 5;
            do {
                for (i13 = 1; i13 < 1; i13++) {
                    i10 += i13;
                    i10 += Test.iFld;
                    Test.bFld = true;
                    f = -8210122496994771300L;
                    switch (((-9 >>> 1) % 5) + 120) {
                    case 120:
                        d -= i13;
                        Test.lArrFld[i13] += i10;
                        if (Test.bFld) {
                            i10 >>= by2;
                            i11 *= Test.iFld;
                        } else {
                            Test.iArrFld[i13 - 1] <<= (int)Test.instanceCount;
                        }
                        break;
                    case 121:
                        Test.dFld -= -154;
                        break;
                    case 122:
                        f += (i13 * i13);
                    case 123:
                        if (Test.bFld) continue;
                        break;
                    case 124:
                        Test.lArrFld[i12] <<= Test.instanceCount;
                        break;
                    default:
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)70);
                    }
                }
            } while (--i12 > 0);
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 + i14 + by2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-25095, i1=-36080, i15=-51225, i16=48161, i17=140, i18=-196, i19=-34622, i20=-151, i21=42687, i22=3,
            i23=215, i24=-11, i25=219, i26=8438, i27=-10, i28=13, i29=12;
        float f4=-99.804F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.77003);

        for (i = 8; i < 137; i++) {
            float f3=1.346F;
            iMeth(f3, Test.dFld);
            if (Test.bFld) {
                for (i15 = 194; i15 > 5; --i15) {
                    dArr = dArr;
                }
            } else if (true) {
                Test.bArrFld[i + 1] = Test.bFld;
                Test.iFld += i;
                i17 = 194;
                while (--i17 > 0) {
                    f3 *= Test.instanceCount;
                }
            } else {
                for (i18 = i; 194 > i18; i18++) {
                    i16 += i18;
                }
                i1 -= (int)Test.dFld;
                for (i20 = 1; 194 > i20; ++i20) {
                    i1 = (int)2.400F;
                }
                Test.instanceCount |= 77;
            }
        }
        for (i22 = 15; 293 > i22; ++i22) {
            if (Test.bFld) {
                Test.iArrFld1 = FuzzerUtils.int2array(N, (int)56574);
                for (i24 = 2; i24 < 90; ++i24) {
                    Test.iFld = i16;
                    Test.instanceCount -= (long)f4;
                    i21 += i24;
                }
                Test.dFld *= i20;
            } else if (Test.bFld) {
                switch ((i22 % 1) + 29) {
                case 29:
                    for (i26 = 4; i26 < 90; ++i26) {
                        i21 += (((i26 * i) + Test.instanceCount) - i23);
                        for (i28 = i22; i28 < 2; i28++) {
                            Test.iFld += (-13 + (i28 * i28));
                            i21 -= (int)Test.instanceCount;
                            Test.instanceCount += 19572;
                        }
                    }
                    break;
                default:
                    Test.bArrFld[i22] = true;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
