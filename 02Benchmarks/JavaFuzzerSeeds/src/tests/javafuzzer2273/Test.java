package tests.javafuzzer2273;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:13:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2362634054L;
    public static double dFld=65.91143;
    public static float fFld=-2.160F;
    public static boolean bFld=false;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 5);
        FuzzerUtils.init(Test.dArrFld, 2.9796);
        FuzzerUtils.init(Test.fArrFld, 1.81F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        int i9=13, i10=59, i11=73, i12=-14, i13=-39364, i14=143;
        long l1=5L, l2=101L;
        float f1=-93.933F;

        for (i9 = 7; i9 < 212; i9++) {
            i8 -= i7;
            switch ((i9 % 1) + 31) {
            case 31:
                Test.iArrFld1[i9 + 1] *= (int)Test.dFld;
                for (i11 = i9; i11 < 8; ++i11) {
                    i8 += (int)Test.instanceCount;
                }
                i12 += i8;
                break;
            default:
                for (l1 = 1; l1 < 8; ++l1) {
                    i7 -= i10;
                    try {
                        i13 = (Test.iArrFld1[i9] % i13);
                        Test.iArrFld1[i9] = (Test.iArrFld1[i9 + 1] % i7);
                        i7 = (Test.iArrFld1[i9 + 1] % i8);
                    } catch (ArithmeticException a_e) {}
                    for (l2 = 1; 2 > l2; ++l2) {
                        Test.instanceCount += (l2 * l2);
                    }
                    i7 -= -61;
                    f1 = i7;
                    i8 *= i7;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + l1 + i13 + l2 + i14 + Float.floatToIntBits(f1);
    }

    public static void vMeth(long l) {

        int i15=0, i16=60720, i17=144, i18=7, i19=-40773;
        short s=-23017;

        vMeth1(i15, i15);
        l = s;
        for (i16 = 327; 20 < i16; --i16) {
            for (i18 = i16; 5 > i18; i18++) {
                Test.dArrFld[(i15 >>> 1) % N] -= Test.fFld;
                i19 &= (int)1662451649L;
                i19 %= (int)(i16 | 1);
                s += (short)i16;
                i15 += i18;
                i19 *= i19;
                i19 += i18;
                Test.instanceCount >>= 2588966605L;
                i15 = i17;
                i19 = i17;
            }
            if (Test.bFld) break;
        }
        vMeth_check_sum += l + i15 + s + i16 + i17 + i18 + i19;
    }

    public int iMeth(int i4, int i5, int i6) {

        int i20=230, i21=8, i22=-173, i23=-60;
        short s1=-12931, sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)-4001);

        vMeth(Test.instanceCount);
        i20 = 1;
        while (++i20 < 205) {
            for (i21 = 1; 8 > i21; i21++) {
                i23 = 1;
                while (++i23 < 2) {
                    i6 += i23;
                    i6 += (int)Test.dFld;
                    Test.instanceCount <<= s1;
                    i6 -= 185;
                    Test.fArrFld = Test.fArrFld;
                    i22 = (int)Test.instanceCount;
                    switch (((i21 >>> 1) % 1) + 117) {
                    case 117:
                        sArr[i23][i20] -= (short)Test.instanceCount;
                        Test.instanceCount *= (long)1.550F;
                        Test.instanceCount >>>= i20;
                        i6 >>>= i22;
                        break;
                    default:
                        Test.bFld = Test.bFld;
                    }
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i20 + i21 + i22 + i23 + s1 + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i1=7, i2=-58387, i3=-65, i24=50, i25=-15191, i26=65, i27=4843, i28=22128, i29=107;
        boolean b=false;
        byte by=-22, by1=-65;
        float f=65.628F;
        short s2=12512;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 368L);

        for (i = 2; i < 154; ++i) {
            i1 += i;
            for (i2 = 165; i2 > 8; i2 -= 2) {
                i1 += (((i2 * Test.instanceCount) + i2) - i3);
                b = (19711 > ((by - Test.dFld) - (i3 + i1)));
                i3 = (int)(i & Test.instanceCount);
                i1 >>= (i2 + (iArrFld[i] * (i1++)));
                f *= (iMeth(i2, i, i1) + i2);
                switch ((((i2 >>> 1) % 5) * 5) + 83) {
                case 97:
                    for (i24 = 1; i24 < 3; i24++) {
                        if (Test.bFld) {
                            Test.instanceCount = i2;
                            i25 = i3;
                            Test.instanceCount = i;
                            Test.instanceCount -= (long)Test.dFld;
                        } else if (Test.bFld) {
                            i25 = i;
                            f -= i25;
                            Test.dFld = i2;
                        }
                        Test.instanceCount += (((i24 * i24) + i24) - f);
                        i3 += (i24 * i24);
                    }
                case 86:
                    for (i26 = i; i26 < 3; ++i26) {
                        i1 += (((i26 * Test.instanceCount) + i) - Test.instanceCount);
                        Test.instanceCount >>= by1;
                        lArr[i] -= i3;
                        Test.instanceCount = i;
                        i3 = i1;
                        i3 = (int)Test.instanceCount;
                    }
                    for (i28 = 1; i28 < 3; i28++) {
                        i3 += (((i28 * s2) + i27) - i1);
                        i27 += (i28 * i28);
                    }
                    break;
                case 84:
                    i27 += (23 + (i2 * i2));
                    break;
                case 93:
                    Test.instanceCount += (0 + (i2 * i2));
                    break;
                case 96:
                    Test.iArrFld1[i2] = i;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
