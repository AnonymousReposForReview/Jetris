package tests.javafuzzer1865;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:57:03 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-118L;
    public static volatile double dFld=0.84260;
    public static boolean bFld=true;
    public int iArrFld[][]=new int[N][N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4) {

        double d1=-28.4421, d2=0.9958, dArr[]=new double[N];
        int i5=13, i6=64351, i7=-23228, i8=-12553, i9=78, iArr[]=new int[N];
        short s=-21530;
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 45.68523);
        FuzzerUtils.init(lArr, -1857180528L);
        FuzzerUtils.init(iArr, -173);

        for (d1 = 6; d1 < 174; ++d1) {
            Test.instanceCount += (long)(((d1 * i5) + i3) - i5);
            i6 = 1;
            while (++i6 < 9) {
                i5 = i6;
                i4 += (i6 * i6);
                dArr[i6 + 1] *= s;
            }
            Test.instanceCount += (long)(((d1 * i3) + i3) - i4);
            lArr[(int)(d1)] += Test.instanceCount;
            iArr[(int)(d1)] ^= (int)Test.instanceCount;
        }
        i7 = 224;
        while (--i7 > 0) {
            d2 *= d2;
            for (i8 = 1; i8 < 7; ++i8) {
                Test.instanceCount += i4;
                i9 += i8;
                i5 = i7;
            }
        }
        long meth_res = i3 + i4 + Double.doubleToLongBits(d1) + i5 + i6 + s + i7 + Double.doubleToLongBits(d2) + i8 +
            i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(boolean b, int i2) {

        double d=3.83144;
        int i10=208, i11=-14, i12=18267, i13=-25013, i14=158, i15=-34, iArr1[]=new int[N];
        float f=37.32F;

        FuzzerUtils.init(iArr1, 2);

        d %= (iMeth(i2, 3) | 1);
        for (i10 = 7; i10 < 173; ++i10) {
            if (b) {
                i2 += i10;
                vMeth1_check_sum += (b ? 1 : 0) + i2 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + i14 + i15 +
                    Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1);
                return;
            } else if (true) {
                i11 &= i11;
                i2 >>= i2;
                for (i12 = 1; i12 < 10; i12++) {
                    short s1=-59;
                    s1 = (short)d;
                    for (i14 = 2; i14 > 1; i14 -= 2) {
                        i13 <<= i15;
                        i11 = i13;
                        iArr1[i12 + 1] += -204;
                        iArr1[i14 + 1] /= (int)(i11 | 1);
                        i2 += (int)f;
                        iArr1[i14 - 1] -= 11;
                    }
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i2 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(byte by, int i, int i1) {


        i -= (int)(Test.instanceCount++);
        vMeth1(false, i);
        vMeth_check_sum += by + i + i1;
    }

    public void mainTest(String[] strArr1) {

        byte by1=76;
        int i16=-40341, i17=-1, i18=7, i19=192, i20=-3, i21=-55, i22=-5, i23=-2, i24=14;
        double d3=0.30875;
        short s2=13540;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 89.890F);

        vMeth(by1, i16, 13);
        fArr[(i16 >>> 1) % N] = Test.instanceCount;
        for (i17 = 3; 201 > i17; ++i17) {
            fArr[i17] -= i18;
            for (d3 = 6; d3 < 127; d3++) {
                Test.instanceCount = i17;
            }
            for (i20 = 4; i20 < 127; i20++) {
                by1 -= (byte)i20;
                for (i22 = i17; 2 > i22; i22++) {
                    i18 = i18;
                    Test.instanceCount += (i22 * i22);
                }
                iArrFld[i20][i17 + 1] -= (int)Test.instanceCount;
                i21 = (int)d3;
                i21 += (int)-232L;
                Test.instanceCount = i16;
                i23 = 10;
                i24 = 1;
                while (++i24 < 2) {
                    if (Test.bFld) {
                        iArrFld[i20] = iArrFld[(i22 >>> 1) % N];
                        Test.dFld += s2;
                        i19 *= (int)-51.565F;
                        s2 += (short)(i24 * i24);
                    } else {
                        i19 = i20;
                    }
                    s2 = (short)i16;
                    i16 += i24;
                    i23 -= i22;
                    Test.instanceCount -= i17;
                }
                Test.instanceCount = i17;
            }
            s2 = (short)i22;
            i19 += (i17 * s2);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
