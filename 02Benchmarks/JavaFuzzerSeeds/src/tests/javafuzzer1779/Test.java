package tests.javafuzzer1779;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:19:24 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=312628729L;
    public static float fFld=1.256F;
    public static int iFld=47843;
    public static double dFld=0.44397;
    public static int iFld1=123;
    public byte byFld=-44;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i9) {


        i9 &= i9;
        Test.instanceCount = Test.instanceCount;
        Test.fFld -= 2.113F;
        Test.fFld -= i9;
        vMeth2_check_sum += i9;
    }

    public static void vMeth1(float f, long l) {

        int i7=-53884, i10=52933, i11=231, iArr1[]=new int[N];
        byte by=-45;
        float f1=-90.878F;
        boolean b=false;
        double d1=-90.83781;

        FuzzerUtils.init(iArr1, 14);

        iArr1[(i7 >>> 1) % N] >>>= (int)Test.instanceCount;
        i7 += (((-iArr1[(i7 >>> 1) % N]) * by) * i7);
        for (int i8 : iArr1) {
            f1 = 1;
            while (++f1 < 4) {
                vMeth2(-42507);
            }
            i8 -= i8;
            try {
                i7 = (i8 % i8);
                iArr1[(i7 >>> 1) % N] = (i8 / 146);
                i8 = (459381422 / i7);
            } catch (ArithmeticException a_e) {}
            l = 14;
            if (b) continue;
        }
        f = by;
        for (i10 = 6; i10 < 364; ++i10) {
            iArr1[i10] *= 7;
            i11 = i11;
            Test.fFld -= (float)d1;
            b = b;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + l + i7 + by + Float.floatToIntBits(f1) + (b ? 1 : 0) + i10 + i11
            + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, double d, short s) {

        int i1=-6981, i2=-202, i3=-173, i4=4, i5=-8, i6=-18832, iArr[]=new int[N];
        boolean b1=false;
        long lArr[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr, -2L);
        FuzzerUtils.init(iArr, 235);
        FuzzerUtils.init(sArr, (short)-24634);

        i = (((i * -58) + (i | s)) >> (i--));
        Test.instanceCount = Math.min(lArr[(46828 >>> 1) % N] = (--i1), 3707056857L);
        i2 = 1;
        do {
            if ((i1 * (-(s * i))) != -7L) continue;
        } while (++i2 < 317);
        for (i3 = 3; 216 > i3; ++i3) {
            for (i5 = 8; i5 > 1; --i5) {
                i += (int)((iArr[i5 + 1] = (int)(Test.instanceCount++)) + ((--i4) - Test.instanceCount));
                vMeth1(Test.fFld, 2L);
                iArr = iArr;
                sArr[i3] = (short)i4;
                if (b1) {
                    iArr[i3 + 1] = i6;
                    Test.fFld += (i5 * i5);
                    i -= i6;
                    i4 += i5;
                }
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + s + i1 + i2 + i3 + i4 + i5 + i6 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        short s1=5099;
        int i12=-61645, i13=-14, i14=51, i15=41426, i16=-3, i17=34157;
        double d2=1.119929, dArr[]=new double[N];
        boolean b2=true, b3=false;

        FuzzerUtils.init(dArr, -12.80705);

        vMeth(Test.iFld, -108.50676, s1);
        Test.iFld -= Test.iFld;
        Test.fFld += Test.iFld;
        for (i12 = 13; i12 < 300; i12++) {
            dArr[i12] += Test.dFld;
            for (d2 = 1; d2 < 88; ++d2) {
                i14 -= i14;
                if (b2) {
                    Test.iFld <<= 23709;
                } else if (false) {
                    i13 = i12;
                    i14 = (int)d2;
                    for (i15 = 2; i15 > 1; i15 -= 3) {
                        Test.instanceCount = i12;
                        Test.fFld += 3956249429L;
                        Test.dFld *= Test.fFld;
                        i13 += (int)Test.fFld;
                        iArrFld[i12] = i15;
                        switch ((((i12 >>> 1) % 8) * 5) + 109) {
                        case 122:
                            i13 = Test.iFld1;
                            iArrFld[i12 + 1] = 5;
                            i16 += (15947 + (i15 * i15));
                            i13 |= i16;
                            break;
                        case 144:
                            if (b2) {
                                switch ((i12 % 5) + 78) {
                                case 78:
                                    if (b2) continue;
                                    break;
                                case 79:
                                    i13 >>= 10614;
                                    break;
                                case 80:
                                    Test.iFld += i13;
                                    i13 = i14;
                                    break;
                                case 81:
                                    if (b2) break;
                                    Test.iFld = Test.iFld;
                                    break;
                                case 82:
                                    i16 <<= 12;
                                    break;
                                }
                            } else {
                                i17 = (int)Test.fFld;
                            }
                            break;
                        case 139:
                        case 143:
                            if (b2) continue;
                            break;
                        case 131:
                            Test.instanceCount *= 1950384176L;
                            break;
                        case 137:
                        case 136:
                            byFld = (byte)5108744195180076324L;
                            break;
                        case 127:
                            if (b3) break;
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
