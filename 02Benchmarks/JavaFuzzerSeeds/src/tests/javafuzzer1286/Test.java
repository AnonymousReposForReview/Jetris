package tests.javafuzzer1286;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:40:37 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3982043187L;
    public static short sFld=31608;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -27);
        FuzzerUtils.init(Test.dArrFld, -62.115832);
        FuzzerUtils.init(Test.fArrFld, 18.273F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s) {

        int i3=14;

        i3 >>>= i3;
        vMeth2_check_sum += s + i3;
    }

    public static void vMeth1(int i2) {

        short s1=-8383;
        int i4=-63354, i5=-2677, i6=-64, i7=5, i8=45730, i9=-79;
        boolean b=false;
        long l=-4972L;

        vMeth2(s1);
        for (i4 = 7; 311 > i4; ++i4) {
            for (i6 = 1; i6 < 5; i6++) {
                b = true;
                for (i8 = 1; 2 > i8; i8++) {
                    double d1=74.79373;
                    Test.instanceCount += i8;
                    i7 = (int)Test.instanceCount;
                    l <<= i6;
                    i2 = i6;
                    i5 = i8;
                    d1 += -28639;
                    i7 += (i8 * i8);
                    i9 += (i8 | i5);
                }
                b = b;
                if (b) continue;
            }
        }
        vMeth1_check_sum += i2 + s1 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + l;
    }

    public static void vMeth(int i1) {

        float f1=0.201F;
        int i10=-1, i11=-14500, i12=104, i13=29, i14=46076, i15=-242, i16=18159, i17=59070, iArr[]=new int[N];
        byte by=-44;

        FuzzerUtils.init(iArr, 18003);

        vMeth1(i1);
        Test.instanceCount <<= i1;
        iArr[(i1 >>> 1) % N] *= (int)f1;
        i1 ^= i1;
        for (i10 = 8; 247 > i10; i10++) {
            i1 += i10;
            if (false) continue;
        }
        i1 *= i1;
        for (i12 = 1; 285 > i12; i12++) {
            i11 += (((i12 * i13) + i11) - i11);
            for (i14 = 6; i12 < i14; i14--) {
                for (i16 = 1; i16 < 1; ++i16) {
                    Test.instanceCount -= i16;
                    by += (byte)(((i16 * i16) + Test.instanceCount) - Test.instanceCount);
                    if (i14 != 0) {
                        vMeth_check_sum += i1 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
                            i17 + by + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d=1.9134;
        float f=0.1005F;
        int i=-203, i18=153, i19=0, i20=-8, i21=-60647, i22=86, i23=-176;
        byte by1=-89;

        Test.instanceCount -= (long)(d++);
        for (f = 3; 227 > f; ++f) {
            Test.instanceCount += (long)(f * f);
            vMeth(i);
        }
        i += i;
        switch (((i >>> 1) % 2) + 9) {
        case 9:
            for (i18 = 16; i18 < 282; i18++) {
                i19 = -5;
                for (i20 = 4; 94 > i20; i20++) {
                    Test.iArrFld[i18 - 1] <<= Test.sFld;
                    Test.dArrFld[i18 - 1] *= i19;
                    i22 = 1;
                    do {
                        Test.instanceCount ^= i20;
                        i21 = -170;
                    } while (++i22 < 2);
                    i23 = 1;
                    do {
                        float f2=0.962F;
                        i21 += (int)Test.instanceCount;
                        Test.instanceCount = i23;
                        i >>= i20;
                        i19 += (i23 | i20);
                        i -= (int)Test.instanceCount;
                        i21 += i23;
                        Test.instanceCount += (((i23 * Test.instanceCount) + Test.instanceCount) - i23);
                        switch ((i23 % 9) + 120) {
                        case 120:
                            f2 += f2;
                            i += (int)Test.instanceCount;
                            break;
                        case 121:
                            i *= i;
                            i19 = by1;
                            Test.instanceCount += i20;
                        case 122:
                            bFld = bFld;
                            Test.sFld = Test.sFld;
                        case 123:
                            lArrFld[i20] += Test.instanceCount;
                            break;
                        case 124:
                            d = -4;
                            break;
                        case 125:
                            Test.fArrFld[i18] = f2;
                            break;
                        case 126:
                            i19 = -27;
                            break;
                        case 127:
                            Test.instanceCount -= Test.instanceCount;
                            break;
                        case 128:
                            Test.instanceCount += (-148 + (i23 * i23));
                        default:
                            i19 -= (int)-80.363F;
                        }
                    } while (++i23 < 2);
                }
            }
            break;
        case 10:
        default:
            i19 <<= i22;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
