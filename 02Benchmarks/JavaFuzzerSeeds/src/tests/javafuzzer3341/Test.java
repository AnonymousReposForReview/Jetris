package tests.javafuzzer3341;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:22:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2367310596L;
    public static double dFld=2.16901;
    public static boolean bFld=false;
    public static byte byFld=92;
    public float fFld=-75.261F;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -54792L);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i6, int i7, int i8) {

        int i9=-42844, i10=62910, i11=6508, i12=-45854, i13=39731, iArr2[]=new int[N];
        short s=9612;
        float f=0.219F;
        byte by=-41;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, 213);
        FuzzerUtils.init(lArr, 6158424873462381428L);

        for (i9 = 6; i9 < 219; i9++) {
            i11 = 1;
            do {
                iArr2[i11] = (int)Test.dFld;
                i8 = i11;
                i6 <<= i6;
                s <<= (short)i7;
                if (Test.bFld) continue;
                i6 = i10;
                f += i10;
                lArr = FuzzerUtils.long1array(N, (long)1046247082198803204L);
                by = (byte)Test.instanceCount;
                for (i12 = 1; i12 < 1; ++i12) {
                    if (i12 != 0) {
                    }
                    Test.instanceCount += (long)104.754F;
                    Test.instanceCount += i9;
                }
            } while (++i11 < 8);
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + s + Float.floatToIntBits(f) + by + i12 + i13 +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i4, int i5) {

        int i14=0, i15=-46398, i17=162, i18=31184, iArr1[]=new int[N];
        long l=-8684851119032247144L;
        float f1=-63.310F;
        short s1=-8551;

        FuzzerUtils.init(iArr1, 10);

        iArr1[(i4 >>> 1) % N] += ((i4 * i4) + iArr1[(i5 >>> 1) % N]);
        i5 = (int)(fMeth(i4, 2, 41873) * 93);
        switch (((i5 >>> 1) % 5) + 20) {
        case 20:
            for (i14 = 21; i14 < 396; ++i14) {
                i15 |= -39324;
                i5 += i14;
                i5 += (i14 * i14);
                i4 *= i4;
                i17 = 1;
                do {
                    Test.bFld = false;
                    for (l = 1; l < 1; l++) {
                        f1 *= -171;
                        i18 = i17;
                        iArr1[(int)(l)] += (int)Test.dFld;
                        i4 = (int)Test.dFld;
                    }
                } while (++i17 < 5);
            }
        case 21:
            Test.instanceCount -= i15;
            break;
        case 22:
            Test.dFld = Test.byFld;
            break;
        case 23:
            i18 -= (int)Test.instanceCount;
            break;
        case 24:
            i15 = (int)f1;
            break;
        default:
            s1 += (short)i17;
        }
        vMeth_check_sum += i4 + i5 + i14 + i15 + i17 + l + i18 + Float.floatToIntBits(f1) + s1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public byte byMeth() {

        int i2=-3182, i3=-125, i19=0, i20=-59058, i21=19228, iArr[]=new int[N];
        double d=-1.47997;
        short s2=21715;

        FuzzerUtils.init(iArr, 39554);

        i2 -= (iArr[(i2 >>> 1) % N]++);
        i3 = 1;
        do {
            if (Test.bFld) {
                switch ((i3 % 7) + 119) {
                case 119:
                    i2 += (int)d;
                    vMeth(i2, i2);
                    break;
                case 120:
                    i2 &= i2;
                case 121:
                case 122:
                    iArr = FuzzerUtils.int1array(N, (int)12787);
                    i19 = 1;
                    do {
                        switch (((i3 >>> 1) % 5) + 114) {
                        case 114:
                            switch (((-64822 >>> 1) % 2) + 2) {
                            case 2:
                                Test.byFld >>>= (byte)i2;
                                for (i20 = 1; i20 < 1; ++i20) {
                                    i2 = s2;
                                    fFld += i3;
                                }
                                break;
                            case 3:
                            default:
                                i2 -= (int)fFld;
                            }
                            break;
                        case 115:
                            i21 -= (int)Test.instanceCount;
                            break;
                        case 116:
                        case 117:
                            Test.byFld = (byte)-2;
                            break;
                        case 118:
                            iArr[i19] >>= i3;
                        default:
                            Test.instanceCount += i19;
                        }
                    } while (++i19 < 6);
                    break;
                case 123:
                    i21 = i19;
                    break;
                case 124:
                    Test.byFld = (byte)i2;
                    break;
                case 125:
                    i21 += i20;
                    break;
                default:
                    if (Test.bFld) continue;
                }
            } else if (Test.bFld) {
                i2 += (((i3 * Test.byFld) + i20) - i3);
            }
        } while (++i3 < 282);
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + i19 + i20 + i21 + s2 + FuzzerUtils.checkSum(iArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-63873, i1=-33600, i22=-2, i23=-211, i24=25384, i25=-27279, i26=14, i27=-167, i28=-3;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 106.328F);

        for (i = 9; i < 321; ++i) {
            Test.instanceCount += (byMeth() * i1);
            iArrFld[i - 1] = (int)fFld;
            for (i22 = 5; i22 < 81; i22++) {
                fFld *= 4;
                Test.instanceCount += i22;
                fArr[i] *= i1;
                for (i24 = i22; 2 > i24; i24++) {
                    i23 = i24;
                    i23 += i24;
                    Test.dFld = Test.instanceCount;
                    fFld = i;
                    i25 /= (int)((long)(fFld) | 1);
                    i23 *= i25;
                    iArrFld[i22] = Test.byFld;
                }
                if (Test.bFld) break;
                if (Test.bFld) break;
                i25 += (int)Test.instanceCount;
                for (i26 = i; 2 > i26; i26++) {
                    i25 >>>= (int)Test.instanceCount;
                    iArrFld[i + 1] >>= i23;
                    Test.lArrFld[i22 + 1] = (long)1.792F;
                    iArrFld = iArrFld;
                    Test.instanceCount = i24;
                    i23 += (((i26 * i22) + Test.instanceCount) - fFld);
                    i25 *= i28;
                    fFld *= i1;
                    iArrFld[i26] = i28;
                    i25 += (int)Test.instanceCount;
                }
            }
            Test.bFld = Test.bFld;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
