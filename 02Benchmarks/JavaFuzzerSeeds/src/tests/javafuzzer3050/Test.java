package tests.javafuzzer3050;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:20:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1321839861L;
    public static int iFld=5;
    public static short sFld=-26516;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-52);
        FuzzerUtils.init(Test.iArrFld, 153);
        FuzzerUtils.init(Test.lArrFld, -2L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i9=-145, i10=-197, i11=209, i12=-26981, i13=208, iArr[]=new int[N];
        float f1=1.636F;
        double d1=-58.130098;

        FuzzerUtils.init(iArr, -25061);

        i9 = 1;
        do {
            switch ((((Test.iFld >>> 1) % 1) * 5) + 100) {
            case 105:
                i10 = 1;
                do {
                    Test.byArrFld[i9] += (byte)28.74931;
                    f1 -= f1;
                } while (++i10 < 5);
                Test.instanceCount *= Test.instanceCount;
                break;
            default:
                iArr[i9 + 1] >>= 11;
                d1 -= -3;
            }
            Test.iFld -= -14719;
            switch (((i9 % 1) * 5) + 49) {
            case 52:
                iArr[i9] >>= i9;
                d1 -= f1;
                break;
            default:
                for (i11 = 1; i11 < 5; i11++) {
                    Test.instanceCount += (((i11 * i11) + i13) - i12);
                    Test.instanceCount += (((i11 * i12) + Test.iFld) - i10);
                }
            }
        } while (++i9 < 302);
        vMeth1_check_sum += i9 + i10 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, float f, int i2) {

        int i3=2, i4=114, i5=13, i6=-24268, i7=-117, i8=-9, i14=52787;
        short s1=-7111;
        byte by=7;

        i3 = 1;
        do {
            Test.iFld <<= i4;
        } while (++i3 < 163);
        for (i5 = 12; i5 < 360; ++i5) {
            s1 += (short)(i5 * i5);
            s1 += (short)f;
            Test.iFld ^= (--i4);
            for (i7 = i5; i7 < 5; i7++) {
                vMeth1();
                i14 = 1;
                while (++i14 < 1) {
                    i6 += (i14 | Test.instanceCount);
                    i8 = Test.iFld;
                    switch ((((-28986 >>> 1) % 9) * 5) + 116) {
                    case 123:
                        Test.iFld += (i14 | Test.iFld);
                        i2 += (i14 * l);
                        break;
                    case 149:
                        Test.iFld += i2;
                        break;
                    case 125:
                        Test.iFld += Test.iFld;
                        break;
                    case 126:
                        Test.iArrFld[i5 - 1] = 36;
                        break;
                    case 161:
                        Test.iFld <<= i14;
                        break;
                    case 120:
                        Test.iArrFld[i7] *= Test.iFld;
                        break;
                    case 121:
                        by *= (byte)3050;
                        break;
                    case 128:
                        l = i8;
                    case 137:
                        i6 += (i14 - by);
                        break;
                    }
                }
            }
        }
        long meth_res = l + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + s1 + i7 + i8 + i14 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s) {

        double d=-2.106376;
        int i=-10, i1=-199, i15=-180, i16=7, i17=-35842, i18=0, i19=-9;
        long l1=346361732665797182L;
        boolean b=false;

        Test.iFld = (Math.min(Test.iFld--, (int)(-(d--))) + (--Test.iFld));
        for (i = 21; i < 357; i += 2) {
            float f2=-2.887F;
            Test.instanceCount = iMeth(Test.instanceCount, f2, 0);
            Test.iArrFld[i] *= i;
            Test.iFld &= i1;
        }
        Test.instanceCount <<= -5L;
        Test.iArrFld[(Test.iFld >>> 1) % N] += (int)l1;
        b = b;
        for (i15 = 15; 240 > i15; ++i15) {
            for (i17 = 1; 7 > i17; i17++) {
                i19 = 2;
                while ((i19 -= 2) > 0) {
                    Test.lArrFld[i17 + 1] = i16;
                    i18 += (i19 | i);
                    b = b;
                    i18 = i15;
                }
            }
        }
        vMeth_check_sum += s + Double.doubleToLongBits(d) + i + i1 + l1 + (b ? 1 : 0) + i15 + i16 + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.sFld);
        Test.instanceCount = Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
