package tests.javafuzzer1614;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:11:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-61L;
    public static volatile int iFld=2;
    public static float fFld=0.356F;
    public static double dFld=32.87760;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 60691);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=-123, i9=-36749, i10=220, i11=76;
        boolean b=true, bArr[][]=new boolean[N][N];
        byte by=-49, byArr[]=new byte[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte)34);

        Test.iFld = Test.iFld;
        Test.iArrFld[(-6 >>> 1) % N] = 1208;
        Test.iFld <<= Test.iFld;
        Test.instanceCount *= (long)Test.fFld;
        Test.iFld += -2;
        for (i8 = 6; i8 < 293; i8++) {
            if (b) break;
            Test.iFld *= by;
            bArr[i8 + 1][i8 - 1] = true;
            Test.iFld += (((i8 * i8) + Test.fFld) - i9);
            for (i10 = 6; i10 > 1; i10 -= 2) {
                try {
                    i11 = (1068670481 % i11);
                    Test.iFld = (49203 / i10);
                    i9 = (i8 % -62476);
                } catch (ArithmeticException a_e) {}
                Test.iFld += (((i10 * Test.fFld) + Test.fFld) - Test.instanceCount);
                byArr[i10] = (byte)Test.instanceCount;
                Test.iFld = 20525;
            }
        }
        vMeth2_check_sum += i8 + i9 + (b ? 1 : 0) + by + i10 + i11 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i4) {

        int i5=0, i6=-119, i7=-21, i12=-11, i13=229, i14=0;
        float f1=29.449F;
        double d=0.64668, dArr[]=new double[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(dArr, 2.91633);
        FuzzerUtils.init(sArr, (short)-27247);

        dArr[(i4 >>> 1) % N] *= (Test.iFld++);
        try {
            i5 = 1;
            do {
                f1 = (Test.iFld += (int)(-10L + (Test.iFld++)));
                sArr[i5] = (short)((++f1) - (-(Test.iFld - 3141072492L)));
                for (i6 = 1; i6 < 11; i6++) {
                    Test.iFld += (i6 | Test.instanceCount);
                    Test.instanceCount = (long)((Test.instanceCount = (-54 - (Test.instanceCount--))) - ((-92.139F -
                        (--Test.instanceCount)) - i6));
                }
                vMeth2();
            } while (++i5 < 148);
        }
        catch (NullPointerException exc1) {
            for (i12 = 234; i12 > 14; --i12) {
                for (d = 1; 7 > d; ++d) {
                    Test.iFld += i13;
                    f1 += i5;
                    i7 -= i12;
                    Test.iArrFld[(int)(d)] *= (int)f1;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + i12 + i13 + Double.doubleToLongBits(d) + i14
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i3) {


        vMeth1(21171);
        Test.iArrFld[(i3 >>> 1) % N] *= i3;
        vMeth_check_sum += i3;
    }

    public void mainTest(String[] strArr1) {

        float f=11.58F, f2=-7.661F;
        int i=-60177, i1=11, i2=-83, i15=57652, i16=0, i17=-213;
        byte by1=-74, by2=16;
        boolean b1=false, b2=true, bArr1[][]=new boolean[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr1, false);
        FuzzerUtils.init(lArr, 17484L);

        Test.iFld -= (int)Test.instanceCount;
        for (f = 17; f < 355; f++) {
            if (b2) {
                i += (int)f;
            } else if (b1) {
                Test.iArrFld[(int)(f)] += (int)(((--Test.iArrFld[(int)(f)]) + (Test.iFld + Test.instanceCount)) -
                    (-(-(Test.instanceCount * 1.68752))));
                for (i1 = 1; i1 < 74; i1++) {
                    i2 >>>= (int)Math.max(Test.instanceCount, Test.instanceCount++);
                    vMeth(i2);
                    for (f2 = 1; f2 < 2; ++f2) {
                        Test.fFld -= Test.instanceCount;
                        i15 += i;
                        Test.iFld = Test.iFld;
                        i15 -= Test.iFld;
                        i += (int)(((f2 * Test.instanceCount) + i) - Test.iFld);
                        by1 += (byte)(107 + (f2 * f2));
                    }
                    Test.instanceCount = (long)Test.dFld;
                    for (i16 = 2; i16 > 1; --i16) {
                        Test.fFld += i16;
                        i += (i16 * Test.iFld);
                        i17 += by1;
                        if (b1) continue;
                        if (b2) {
                            bArr1[i1 - 1] = bArr1[i16];
                            switch (((i1 % 9) * 5) + 9) {
                            case 25:
                                i15 = by2;
                                i17 <<= 5;
                                break;
                            case 38:
                            case 15:
                                lArr[(int)(f)] <<= i2;
                                lArr = lArr;
                                Test.iFld >>= 62791;
                                Test.instanceCount = i2;
                                break;
                            case 42:
                                by1 >>>= (byte)i;
                                break;
                            case 27:
                                i2 = i15;
                                break;
                            case 33:
                                Test.iFld = (int)Test.instanceCount;
                                break;
                            case 20:
                                Test.instanceCount = 31L;
                                break;
                            case 46:
                                i -= (int)Test.fFld;
                                break;
                            case 17:
                                Test.iArrFld[i16 + 1] = by2;
                                break;
                            }
                        } else {
                            i += (i16 - Test.iFld);
                        }
                    }
                }
            } else if (b1) {
            } else {
                Test.dFld = Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
