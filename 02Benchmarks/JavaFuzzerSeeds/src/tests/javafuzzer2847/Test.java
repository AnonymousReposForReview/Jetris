package tests.javafuzzer2847;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:27:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=33659L;
    public static volatile float fFld=-28.837F;
    public static double dFld=121.10736;
    public static byte byFld=-48;
    public volatile boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -3);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public byte byMeth(int i4) {


        Test.instanceCount += (long)(Test.dFld--);
        i4 >>>= Math.min(i4--, (int)((i4 - 24928L) + (i4++)));
        long meth_res = i4;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth2(short s, int i11) {

        int i12=-158, i14=1214, i15=-14;
        boolean b=true;

        Test.iArrFld[(i11 >>> 1) % N] += i11;
        i11 <<= (int)Test.instanceCount;
        i12 = 1;
        while (++i12 < 367) {
            byte by1=31;
            i11 += (i12 * i12);
            if (b) {
                if (i12 != 0) {
                    vMeth2_check_sum += s + i11 + i12 + i14 + i15 + (b ? 1 : 0);
                    return;
                }
                i11 += (i12 + i11);
                i11 += i12;
                vMeth2_check_sum += s + i11 + i12 + i14 + i15 + (b ? 1 : 0);
                return;
            } else if (b) {
                by1 = (byte)Test.dFld;
                i11 = 42;
                for (i14 = 5; 1 < i14; i14 -= 2) {
                    i11 += (i14 * i14);
                    i11 -= (int)Test.instanceCount;
                    Test.instanceCount /= -58115L;
                }
            }
        }
        i11 >>= i11;
        vMeth2_check_sum += s + i11 + i12 + i14 + i15 + (b ? 1 : 0);
    }

    public static void vMeth1(int i10) {

        short s1=24556;
        int i16=32, i17=-8, i18=61081, i19=22480, i20=158, i21=-177;

        vMeth2(s1, i10);
        try {
            for (i16 = 293; 1 < i16; i16 -= 3) {
                i10 *= -24203;
            }
            i17 >>>= -127;
            Test.dFld -= i16;
            Test.iArrFld[(-8 >>> 1) % N] += i16;
            i10 += (int)Test.fFld;
            for (i18 = 2; 148 > i18; ++i18) {
                for (i20 = 1; 11 > i20; ++i20) {
                    i19 += Test.byFld;
                    i19 <<= i10;
                    Test.instanceCount *= i20;
                    Test.fFld = i18;
                    Test.byFld = (byte)i19;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            Test.instanceCount = i18;
        }
        vMeth1_check_sum += i10 + s1 + i16 + i17 + i18 + i19 + i20 + i21;
    }

    public static void vMeth(int i7, int i8, int i9) {

        int i22=34063, i23=-168, i24=167, i25=46154;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-38);

        vMeth1(i9);
        for (i22 = 9; i22 < 167; i22++) {
            Test.dFld = Test.fFld;
            i23 = i9;
            Test.instanceCount -= Test.instanceCount;
            Test.instanceCount -= 34262;
            Test.fFld += i8;
            Test.byFld = (byte)Test.instanceCount;
            Test.iArrFld[i22] >>= (int)Test.instanceCount;
            for (i24 = 1; i24 < 10; ++i24) {
                byArr = byArr;
            }
            Test.instanceCount *= -55203;
        }
        i25 = -7;
        Test.instanceCount = i22;
        vMeth_check_sum += i7 + i8 + i9 + i22 + i23 + i24 + i25 + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=14291, i1=225, i2=0, i3=44, i5=5, i6=5;
        double d=125.81912;
        byte by=-51;
        short s2=29396;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, -1311755501187853669L);
        FuzzerUtils.init(fArr, 0.431F);

        i >>= (int)(lArr[(i >>> 1) % N]--);
        i /= (int)(Math.abs(20414) | 1);
        i1 = 1;
        do {
            i = (int)((++i) / (((long)(Test.fFld++)) | 1));
            for (i2 = 5; i2 < 92; i2++) {
                d *= (by - i1);
                Test.instanceCount >>>= (byMeth(i1 + i1) + i);
                if (bFld) {
                    for (i5 = 1; i5 < 2; i5++) {
                        vMeth(i5, -1, i1);
                        switch (((i1 % 5) * 5) + 78) {
                        case 86:
                            lArr = lArr;
                            i6 += (i5 - s2);
                            Test.fFld = 80;
                            i |= (int)Test.instanceCount;
                            break;
                        case 98:
                            i6 -= (int)Test.instanceCount;
                            Test.iArrFld[i2] -= i2;
                            switch (((i2 % 8) * 5) + 73) {
                            case 83:
                                s2 <<= (short)i2;
                                fArr[i2 - 1] = 4;
                                break;
                            case 105:
                            case 112:
                                i6 -= i3;
                                break;
                            case 76:
                                i += (i5 - i);
                                Test.iArrFld[i1 - 1] = i6;
                                i3 = i5;
                                i3 = (int)Test.instanceCount;
                                break;
                            case 113:
                                i3 -= i;
                                i3 = i2;
                                break;
                            case 111:
                                Test.instanceCount += i5;
                                i3 |= (int)Test.instanceCount;
                                i6 += i1;
                            case 75:
                                if (bFld) break;
                                break;
                            case 82:
                                lArr = FuzzerUtils.long1array(N, (long)6L);
                            default:
                                i = i6;
                            }
                            break;
                        case 81:
                            fArr[i1] -= i1;
                            break;
                        case 82:
                            d += 2.93F;
                            break;
                        case 90:
                            Test.fFld -= Test.instanceCount;
                            break;
                        }
                    }
                }
            }
        } while (++i1 < 272);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
