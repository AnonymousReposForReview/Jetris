package tests.javafuzzer1680;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:22:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=65L;
    public static volatile float fFld=0.160F;
    public static byte byFld=-19;
    public static boolean bFld=true;
    public static double dFld=0.86155;
    public short sFld=-14613;
    public float fFld1=0.211F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.lArrFld, 7386981367891293595L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        long l=-3L;

        Test.fFld += l;
        vMeth1_check_sum += l;
    }

    public static int iMeth(int i4) {

        int i5=-1, i6=7, i8=11;
        boolean b=true;
        double d=-4.4270, d1=119.69755;

        for (i5 = 9; i5 < 323; ++i5) {
            vMeth1();
            i6 = i6;
            b = b;
            Test.fFld *= -97L;
            d /= 102;
        }
        Test.fFld -= Test.fFld;
        for (int i7 : Test.iArrFld) {
            short s=-5345;
            s = (short)58310;
            Test.instanceCount *= i5;
            for (d1 = 1; 4 > d1; d1++) {
                Test.instanceCount += (long)d1;
                try {
                    i7 = (i5 % Test.iArrFld[(int)(d1 - 1)]);
                    i4 = (Test.iArrFld[(int)(d1 - 1)] / i6);
                    Test.iArrFld[(int)(d1 - 1)] = (Test.iArrFld[(int)(d1 - 1)] % 30178);
                } catch (ArithmeticException a_e) {}
                Test.fFld -= Test.byFld;
                Test.fFld += (float)(((d1 * Test.instanceCount) + Test.instanceCount) - i6);
            }
        }
        long meth_res = i4 + i5 + i6 + (b ? 1 : 0) + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i1=74, i2=4, i3=-1, i9=-31833;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 103.110532);
        FuzzerUtils.init(lArr, -17612L);

        Test.fFld -= (float)(--dArr[(i1 >>> 1) % N]);
        Test.iArrFld[(i1 >>> 1) % N] = (i1 -= (--i1));
        i2 = 1;
        while (++i2 < 178) {
            lArr[i2 - 1] -= i3;
            i3 |= iMeth(-10);
            Test.iArrFld[i2 - 1] *= (int)Test.instanceCount;
            Test.byFld >>>= (byte)-28171;
            i9 = 1;
            do {
                Test.iArrFld = Test.iArrFld;
                if (Test.bFld) break;
                i3 = i9;
                Test.instanceCount += (((i9 * i9) + Test.instanceCount) - i2);
                Test.instanceCount -= -37224;
            } while (++i9 < 9);
            Test.iArrFld[i2] -= i9;
            Test.fFld = Test.instanceCount;
        }
        vMeth_check_sum += i1 + i2 + i3 + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i10=77, i11=8, i12=-10, i13=-10415, i14=62023, i15=9, i16=-120;
        long l1=3542681665384524199L;
        double d2=0.21547;

        Test.fFld %= (i | 1);
        vMeth();
        for (i10 = 11; i10 < 215; ++i10) {
            i11 -= (int)Test.fFld;
            for (l1 = i10; l1 < 123; l1++) {
                for (i13 = 1; i13 < 1; ++i13) {
                    Test.iArrFld[i10 - 1] = -37334;
                    i = i10;
                    i12 = (int)Test.fFld;
                    Test.dFld = i;
                    Test.lArrFld[i13 - 1] = (long)1.367F;
                    i14 = i;
                    Test.instanceCount -= 63286;
                    Test.instanceCount = sFld;
                }
                fFld1 += i10;
                d2 = 1;
                while (--d2 > 0) {
                    fFld1 = i10;
                    i14 -= 52;
                    Test.instanceCount = i;
                    i11 = (int)Test.instanceCount;
                    Test.iArrFld[(int)(d2 + 1)] = (int)d2;
                    i = i;
                    Test.lArrFld[i10 + 1] *= (long)fFld1;
                    fArrFld[(int)(l1)] = i;
                }
                Test.instanceCount += (4 + (l1 * l1));
                fFld1 += i13;
                for (i15 = 1; i15 < 1; ++i15) {
                    i11 = 0;
                    Test.byFld -= (byte)-11;
                    Test.byFld = (byte)156L;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
