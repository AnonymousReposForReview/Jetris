package tests.javafuzzer2360;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:22:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static long lFld=3L;
    public static double dFld=-2.41261;
    public static byte byFld=-29;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
        FuzzerUtils.init(Test.fArrFld, 48.472F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=10114, i6=135, i7=214, i8=-6, i9=64, i10=-3834, i11=13659, i12=4, iArr2[]=new int[N];
        short s=23107;
        float f2=-106.735F;
        double d=0.98850;

        FuzzerUtils.init(iArr2, -185);

        i5 += s;
        f2 -= i5;
        i5 += 10;
        for (i6 = 1; 212 > i6; i6++) {
            i7 *= i7;
            i8 = 1;
            do {
                if (i8 != 0) {
                    vMeth2_check_sum += i5 + s + Float.floatToIntBits(f2) + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
                        Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                for (i9 = 1; i9 < 1; i9++) {
                    f2 = i10;
                    f2 += -32660;
                }
                for (i11 = 1; i11 < 1; i11++) {
                    Test.lFld += i5;
                    d += Test.instanceCount;
                    i5 <<= (int)Test.instanceCount;
                    iArr2[i6 - 1] += i6;
                }
            } while (++i8 < 8);
        }
        vMeth2_check_sum += i5 + s + Float.floatToIntBits(f2) + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(float f1) {

        int i2=-145, i3=97, i4=96, i13=3, i14=0, i15=0, i16=-174, i17=65329, iArr1[]=new int[N];
        long l=1429492075L;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, -33380);
        FuzzerUtils.init(fArr, 1.10F);

        i2 %= (int)(Math.min(Test.iArrFld[(i2 >>> 1) % N], i2) | 1);
        for (i3 = 14; i3 < 274; i3++) {
            Test.instanceCount -= (Test.lFld + iArr1[i3 - 1]);
            vMeth2();
            i13 = 1;
            do {
                for (l = 1; l < 1; l++) {
                    if (i2 != 0) {
                        vMeth1_check_sum += Float.floatToIntBits(f1) + i2 + i3 + i4 + i13 + l + i14 + i15 + i16 + i17 +
                            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    }
                }
                Test.lFld |= i4;
                if (i2 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f1) + i2 + i3 + i4 + i13 + l + i14 + i15 + i16 + i17 +
                        FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                Test.instanceCount = i3;
            } while (++i13 < 6);
        }
        fArr[(i13 >>> 1) % N][(i2 >>> 1) % N] *= Test.instanceCount;
        i15 = 1;
        do {
            for (i16 = 1; i16 < 8; i16++) {
                i4 &= i2;
            }
        } while (++i15 < 188);
        iArr1[(i2 >>> 1) % N] = i17;
        vMeth1_check_sum += Float.floatToIntBits(f1) + i2 + i3 + i4 + i13 + l + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1) {

        float f=-113.93F;
        int i18=213, i19=-4, i20=48562, i21=135, iArr[]=new int[N];
        short s1=11256;
        byte by=-26;
        double d1=0.16146;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -1993);
        FuzzerUtils.init(lArr, -73L);

        i = iArr[(i >>> 1) % N];
        f -= (i1++);
        lArr[(i >>> 1) % N][(i >>> 1) % N] *= Test.instanceCount;
        vMeth1(f);
        i1 = i1;
        i18 = 285;
        while ((i18 -= 2) > 0) {
            Test.lFld = i18;
            for (i19 = 1; 11 > i19; i19++) {
                i20 = (int)Test.dFld;
                switch ((i18 % 6) + 96) {
                case 96:
                    Test.fArrFld[i19 + 1] = Test.instanceCount;
                    Test.instanceCount = s1;
                    i21 = 1;
                    do {
                        s1 += (short)(i21 * i21);
                        Test.lFld = i1;
                    } while (++i21 < 2);
                    break;
                case 97:
                    by += (byte)(i19 + i19);
                case 98:
                    f += (i19 * i19);
                    break;
                case 99:
                    Test.lFld <<= i1;
                case 100:
                    Test.lFld = 3;
                    break;
                case 101:
                    i20 += (((i19 * Test.lFld) + i18) - i19);
                    break;
                default:
                    d1 = Test.lFld;
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i18 + i19 + i20 + s1 + i21 + by +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i22=-697, i23=-31174, i24=-5, i25=8, i26=-47490, i27=-11, i28=1, i29=4, i30=-9, i31=-126;
        float f3=-2.155F;
        short s2=26360;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -20828L);

        vMeth(i22, i22);
        Test.iArrFld[(i22 >>> 1) % N] *= i22;
        for (i23 = 10; i23 < 358; ++i23) {
            Test.byFld += (byte)(((i23 * f3) + i24) - f3);
            i25 <<= i22;
            i26 = 1;
            do {
                for (i27 = 1; i27 < 1; ++i27) {
                    boolean b=false;
                    i24 = i26;
                    Test.instanceCount = i24;
                    s2 -= (short)i22;
                    i28 += i23;
                    Test.instanceCount = Test.lFld;
                    Test.lFld >>>= i27;
                    lArr1[i26] <<= s2;
                    if (b) break;
                }
                lArr1[i26 + 1] = (long)f3;
            } while (++i26 < 72);
            if (false) break;
            i25 &= i22;
            Test.dFld -= 58.725F;
            for (i29 = i23; i29 < 72; ++i29) {
                Test.lFld += i29;
                i31 = 1;
                while (++i31 < 1) {
                    Test.iArrFld[i31 - 1] <<= i31;
                    i30 |= i27;
                    i30 += (i31 | i25);
                }
                f3 = Test.instanceCount;
                lArr1[i29] = i31;
                i25 *= i24;
            }
            if (false) break;
        }
        i30 = i25;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
