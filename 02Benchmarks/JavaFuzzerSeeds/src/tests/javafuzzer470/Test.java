package tests.javafuzzer470;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:18:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=221L;
    public int iFld=8;
    public static int iFld1=41;
    public static double dFld=0.12508;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 34L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        short s1=4363;
        int i4=0, i5=-210, i6=9392, i7=27568, i8=-10, iArr1[]=new int[N];
        float f2=2.240F, fArr[]=new float[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, -13);
        FuzzerUtils.init(fArr, -17.833F);

        iArr1[(Test.iFld1 >>> 1) % N] <<= s1;
        i4 = 1;
        while (++i4 < 364) {
            for (i5 = 5; i5 > 1; --i5) {
                f2 = i6;
                Test.iFld1 &= i6;
                Test.instanceCount <<= Test.instanceCount;
                fArr[i5 + 1] = (float)-2.75957;
                switch (((i4 >>> 1) % 2) + 127) {
                case 127:
                    i6 = (int)34287L;
                    for (i7 = 1; i7 < 2; i7 += 3) {
                        b = b;
                        i8 = 174;
                        b = b;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount |= Test.instanceCount;
                    }
                case 128:
                    f2 = i7;
                    break;
                default:
                    i6 -= i7;
                }
            }
        }
        vMeth1_check_sum += s1 + i4 + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(float f1, long l) {

        int i3=61084, i9=0, i10=4416, i11=-1, i12=9, i13=3781, iArr2[]=new int[N];
        short s=-19033;
        double d=19.126754;
        float f3=43.844F, fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, 31359);
        FuzzerUtils.init(fArr1, -71.305F);

        i3 = (int)(((i3 += (int)f1) - (++f1)) - (i3 = (s &= (short)i3)));
        i3 = (int)(Test.lArrFld[(i3 >>> 1) % N] % (((l - 6) * (i3 += i3)) | 1));
        vMeth1();
        iArr2[(7 >>> 1) % N] <<= i3;
        for (i9 = 14; i9 < 300; ++i9) {
            i3 += (((i9 * f1) + i9) - Test.instanceCount);
        }
        for (i11 = 7; i11 < 128; i11++) {
            i12 += (((i11 * i11) + i10) - i10);
            for (d = 1; d < 13; d++) {
                i12 -= (int)f3;
                i13 = i12;
                fArr1[(int)(d - 1)] += i3;
                iArr2[i11] = 32944;
                iArr2[i11] -= s;
                i12 -= i11;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + l + i3 + s + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) + i13
            + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i2=-41021, i14=-28096, i15=-5, i16=9, i17=-13;
        byte by=43;
        float f4=113.807F;

        i2 = 1;
        while (++i2 < 197) {
            double d1=1.641;
            by = (byte)iMeth(f4, Test.instanceCount);
            Test.iFld1 = iFld;
            Test.instanceCount = -36;
            Test.instanceCount -= iFld;
            Test.iFld1 = (int)d1;
            iFld ^= i2;
            iFld += (((i2 * f4) + f4) - Test.iFld1);
            d1 = i2;
            Test.instanceCount -= iFld;
        }
        for (i14 = 206; 1 < i14; i14--) {
            Test.lArrFld[i14] = (long)Test.dFld;
            for (i16 = 1; i16 < 8; i16++) {
                Test.instanceCount = 14L;
                Test.instanceCount -= -10;
            }
        }
        vMeth_check_sum += i2 + by + Float.floatToIntBits(f4) + i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        float f=-52.169F, f5=-101.898F;
        int i=60073, i1=-103, i18=-57446, i19=-240, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -7107);

        iFld ^= (int)((iFld - Test.instanceCount) + (iFld--));
        iFld -= (int)(++f);
        for (i = 151; i > 7; i--) {
            iFld = (iArr[i - 1]--);
            vMeth();
            iFld *= -155;
            for (f5 = 6; f5 < 174; f5 += 3) {
                i18 += Test.iFld1;
            }
            f *= -65;
            i19 = 1;
            do {
                iFld <<= i;
            } while (++i19 < 174);
            iArr[i + 1] += (int)Test.instanceCount;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
