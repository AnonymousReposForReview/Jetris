package tests.javafuzzer2739;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:41:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -55261L);
        FuzzerUtils.init(Test.iArrFld, -10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1) {

        byte by=-53;

        i1 *= i1;
        Test.lArrFld[(i1 >>> 1) % N] -= by;
        i1 <<= i1;
        vMeth2_check_sum += i1 + by;
    }

    public static void vMeth1(long l) {

        int i2=-50281, i4=148, i5=-22400, i6=-11, i7=4, i8=-10, iArr[]=new int[N];
        double d=-16.33477;
        short s=-1787;

        FuzzerUtils.init(iArr, 3);

        vMeth2(i2);
        for (int i3 : iArr) {
            i2 -= i3;
            i2 <<= -3;
            iArr[(i4 >>> 1) % N] += (int)-33.81886;
            d -= s;
            iArr[(6 >>> 1) % N] /= (int)(l | 1);
            for (i5 = 1; i5 < 4; i5++) {
                i2 += (i5 + i6);
                i6 = (int)Test.instanceCount;
                i2 <<= i2;
            }
            Test.instanceCount -= i4;
        }
        for (i7 = 6; i7 < 133; i7++) {
            l = -142;
            i2 += -185;
        }
        vMeth1_check_sum += l + i2 + i4 + Double.doubleToLongBits(d) + s + i5 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(boolean b, int i) {

        short s1=15957;
        double dArr[]=new double[N];
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(dArr, 115.99147);
        FuzzerUtils.init(lArr, -58763L);
        FuzzerUtils.init(fArr, -40.971F);

        Test.instanceCount -= (long)1.794F;
        dArr[(i >>> 1) % N] = (--i);
        lArr[(i >>> 1) % N] = (long)(++fArr[(-75 >>> 1) % N]);
        vMeth1(Test.instanceCount);
        s1 *= (short)i;
        vMeth_check_sum += (b ? 1 : 0) + i + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i9=-191, i10=26917, i11=-51899, i12=10777, i13=-8906, i14=5076, i15=-12, i16=0, i19=52148;
        float f=2.36F, fArr1[]=new float[N];
        short s2=-31742, sArr[]=new short[N];
        byte by1=103;
        double d1=-2.115401, dArr1[]=new double[N];
        boolean b1=false;

        FuzzerUtils.init(fArr1, 103.601F);
        FuzzerUtils.init(sArr, (short)2285);
        FuzzerUtils.init(dArr1, -56.70581);

        if (b1) {
            vMeth(true, -2);
            i9 = (int)f;
            Test.iArrFld[(-20 >>> 1) % N] -= (int)Test.instanceCount;
            f *= f;
        } else if (b1) {
            fArr1[(i9 >>> 1) % N] = -11;
            s2 = (short)i9;
        } else if (true) {
            switch (((i9 >>> 1) % 6) + 86) {
            case 86:
                Test.iArrFld[(i9 >>> 1) % N] >>= (int)Test.instanceCount;
                break;
            case 87:
                i10 = 1;
                do {
                    i11 = 1;
                    while (++i11 < 139) {
                        for (i12 = 1; i12 < 1; ++i12) {
                            f += (((i12 * i9) + f) - i12);
                            f = Test.instanceCount;
                            i9 += i10;
                            i13 += i10;
                            by1 = (byte)i10;
                            Test.iArrFld = Test.iArrFld;
                            Test.instanceCount += (long)d1;
                            if (b1) continue;
                            try {
                                i9 = (-16742 % i10);
                                i13 = (-48673 % i14);
                                Test.iArrFld[i12 + 1] = (-39771 / i14);
                            } catch (ArithmeticException a_e) {}
                            i13 = i14;
                        }
                        for (i15 = i10; i15 < 1; ++i15) {
                            Test.lArrFld[i10 + 1] += (long)f;
                            Test.instanceCount += by1;
                            d1 *= Test.instanceCount;
                            sArr = sArr;
                            i16 ^= i12;
                        }
                    }
                    f += (i10 - Test.instanceCount);
                } while (++i10 < 180);
                i19 = 135;
                break;
            case 88:
                f = by1;
                break;
            case 89:
                i19 = (int)d1;
            case 90:
            case 91:
                i14 -= (int)Test.instanceCount;
            default:
                dArr1 = dArr1;
            }
        } else {
            i14 = i10;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
