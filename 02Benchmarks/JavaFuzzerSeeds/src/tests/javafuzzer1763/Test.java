package tests.javafuzzer1763;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:07:22 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=64L;
    public static float fFld=1.15F;
    public static byte byFld=-123;
    public static volatile double dFld=1.35944;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[]=new float[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 187);
        FuzzerUtils.init(Test.fArrFld, -5.323F);
        FuzzerUtils.init(Test.dArrFld, 75.66161);
    }

    public static long dMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5) {

        int i6=-158, i7=-20812, i8=65471, i9=47251, i10=14;
        double d=17.129324;
        boolean b=true;

        Test.iArrFld[(i5 >>> 1) % N] += i5;
        Test.fFld = i5;
        Test.instanceCount >>>= i5;
        Test.instanceCount *= 20449;
        Test.iArrFld[(i5 >>> 1) % N] -= (int)Test.fFld;
        for (i6 = 4; 307 > i6; ++i6) {
            for (d = i6; d < 5; d++) {
                i8 ^= 10;
                for (i9 = 1; i9 < 1; ++i9) {
                    Test.instanceCount += (((i9 * i6) + Test.instanceCount) - Test.byFld);
                    i8 &= (int)Test.instanceCount;
                    if (b) {
                        i8 = 5555;
                    }
                    Test.byFld -= Test.byFld;
                    Test.instanceCount -= -21;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + (b ? 1 : 0);
    }

    public static boolean bMeth(long l, int i4) {

        short s=-14452;
        int i11=-6, i12=64, i13=-21910, i14=-11, i15=-12, i16=95, i17=68, i18=36497, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, 137);

        iArr1[(i4 >>> 1) % N] -= Math.abs(Math.min((int)(l * -225), i4 + i4));
        vMeth(i4);
        s *= (short)l;
        for (i11 = 12; 281 > i11; i11++) {
            i12 = (int)Test.fFld;
            for (i13 = 1; i13 < 6; i13++) {
                b1 = b1;
            }
            for (i15 = 1; i15 < 6; ++i15) {
                b1 = b1;
                Test.fFld += i15;
                Test.dFld *= i16;
                i14 += (i15 * i4);
                for (i17 = 1; i17 < 2; i17++) {
                    i12 -= i12;
                    l *= -32563;
                }
            }
        }
        long meth_res = l + i4 + s + i11 + i12 + i13 + i14 + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static double dMeth() {

        int i2=1, i3=-31, i19=12, i20=13, i21=-129, i22=0, iArr[]=new int[N];
        float f=2.684F;
        short s1=12204;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(lArr, -42L);

        i2 -= ((i2++) - Math.max(iArr[(-157 >>> 1) % N]--, i2++));
        f = (iArr[(2 >>> 1) % N] = (--i2));
        i3 = 282;
        while (--i3 > 0) {
            i2 = i3;
            if (bMeth(Test.instanceCount, i2)) continue;
        }
        for (i19 = 4; i19 < 363; ++i19) {
            i20 = i2;
            if (false) break;
            switch ((i19 % 10) + 113) {
            case 113:
                for (i21 = 1; 5 > i21; ++i21) {
                    f = f;
                    i22 += (int)Test.dFld;
                    Test.dFld *= 2;
                    Test.instanceCount = i22;
                    Test.fArrFld[(i19 >>> 1) % N] -= i19;
                }
            case 114:
                i22 |= i20;
                break;
            case 115:
                Test.instanceCount += (((i19 * Test.instanceCount) + i2) - i20);
                break;
            case 116:
                lArr = lArr;
                break;
            case 117:
                f -= -62578;
            case 118:
                s1 += (short)(i19 ^ i21);
                break;
            case 119:
                f = i3;
                break;
            case 120:
                Test.iArrFld[i19 + 1] <<= -27816;
                break;
            case 121:
                i20 >>= i3;
                break;
            case 122:
                i20 += s1;
                break;
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f) + i3 + i19 + i20 + i21 + i22 + s1 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i1=38457, i23=32304, i24=-14026, i25=-37396, i26=7, i27=4, i28=14, i29=10, i30=14, i31=23597;
        long l2=-4157207486L, l3=4247L;
        short s2=11449;
        boolean b2=false;

        for (i = 14; i < 352; i++) {
            Test.instanceCount >>= (long)(dMeth() - i);
            Test.iArrFld[i] >>= i1;
            Test.dArrFld[i] = Test.instanceCount;
            switch ((i % 2) + 86) {
            case 86:
            case 87:
                for (i23 = 74; i23 > i; --i23) {
                    l2 = i;
                    for (i25 = 1; i25 > 1; i25 -= 2) {
                        i24 += 12;
                        Test.iArrFld[i - 1] |= 62275;
                        i24 += (i25 * i25);
                    }
                }
                i26 += i24;
                for (i27 = 74; i27 > 1; i27--) {
                    i24 -= (int)l2;
                    i29 = 2;
                    while (--i29 > 0) {
                        l2 = -11L;
                        i28 ^= i;
                        i26 += i;
                    }
                    for (i30 = i; i30 < 2; ++i30) {
                        i24 += (i30 * i30);
                        i1 += i30;
                        s2 = (short)i28;
                        Test.byFld = (byte)-12.213F;
                    }
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-8809);
                    i24 = i23;
                    l2 = Test.instanceCount;
                    Test.fFld += (((i27 * i26) + i28) - l3);
                }
                if (false) {
                    Test.iArrFld = Test.iArrFld;
                } else if (b2) {
                    i24 = (int)Test.fFld;
                } else {
                    Test.fArrFld[i - 1] -= l2;
                }
                break;
            default:
                i31 <<= (int)l2;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  bMeth ->  bMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
