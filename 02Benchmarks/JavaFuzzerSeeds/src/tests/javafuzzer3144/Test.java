package tests.javafuzzer3144;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 02:44:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static int iFld=10;
    public static float fFld=127.41F;
    public static double dFld=0.125562;
    public static long lFld=-3374304815736753850L;
    public int iFld1=-11;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -58593);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        long l=-3584614916L, lArr[]=new long[N];
        int i5=-60705, i6=-12, i7=-197, i8=36272, i9=-10145, iArr1[]=new int[N];
        float f=0.46F;
        boolean b=false;

        FuzzerUtils.init(iArr1, 11);
        FuzzerUtils.init(lArr, -240L);

        for (l = 4; l < 246; ++l) {
            for (i6 = 1; i6 < 7; ++i6) {
                for (f = 1; f < 2; f++) {
                    Test.fFld += f;
                    i7 = (int)Test.instanceCount;
                    i5 = i8;
                    iArr1[i6 - 1] -= i7;
                }
                if (b) break;
            }
            i7 = Test.iFld;
            Test.instanceCount += l;
            i9 = 1;
            do {
                Test.fFld -= Test.iFld;
                Test.instanceCount -= l;
                lArr[(int)(l + 1)] <<= l;
                Test.iFld >>= Test.iFld;
            } while (++i9 < 7);
        }
        vMeth_check_sum += l + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + (b ? 1 : 0) + i9 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1(int i4) {

        boolean b1=false;
        double d=37.98607;
        int i10=-105, i11=-233;
        byte by=52;

        switch ((((Integer.reverseBytes(i4) >>> 1) % 7) * 5) + 39) {
        case 68:
            vMeth();
            if (true) {
                b1 = false;
                d = Test.instanceCount;
                Test.instanceCount >>= i4;
            } else if (b1) {
                Test.iArrFld[(Test.iFld >>> 1) % N] += Test.iFld;
                Test.iFld += i4;
                Test.instanceCount += (long)d;
                for (i10 = 9; i10 < 302; i10++) {
                    Test.iFld *= (int)Test.instanceCount;
                    d = d;
                    Test.iFld >>>= i4;
                    Test.iFld >>= -10;
                    i4 &= i11;
                }
            } else if (b1) {
                Test.iArrFld[(i11 >>> 1) % N] = i10;
            }
            break;
        case 50:
            Test.iFld += (int)Test.instanceCount;
        case 70:
            d -= Test.instanceCount;
            break;
        case 43:
            d *= i4;
            break;
        case 57:
            Test.iArrFld = FuzzerUtils.int1array(N, (int)33);
            break;
        case 46:
            by += (byte)i11;
            break;
        case 60:
            Test.iArrFld[(Test.iFld >>> 1) % N] >>>= i11;
            break;
        }
        long meth_res = i4 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i10 + i11 + by;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i12=-11, i13=14, i14=9, i15=-6416, iArr[]=new int[N];
        short s=15145;
        byte by1=110;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 227);
        FuzzerUtils.init(lArr1, 3624775146L);

        iArr[(Test.iFld >>> 1) % N] &= (int)(((Test.iFld * Test.iFld) + iMeth1(Test.iFld)) + -231L);
        for (i12 = 220; i12 > 7; i12--) {
            Test.iFld >>= (int)Test.instanceCount;
            Test.instanceCount += (((i12 * s) + i13) - i12);
            for (i14 = 1; i14 < 8; ++i14) {
                boolean b2=true;
                Test.iArrFld[i14] -= (int)Test.dFld;
                Test.iFld += (int)(-1.956F + (i14 * i14));
                b2 = true;
                i13 = by1;
                if (b2) {
                    Test.iFld %= (int)(i14 | 1);
                    Test.dFld -= -110.106666;
                    lArr1[i12 + 1] *= i12;
                    Test.iFld /= (int)3364105048L;
                } else {
                    i15 += by1;
                }
            }
        }
        long meth_res = i12 + i13 + s + i14 + i15 + by1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=-5, i2=211, i3=-27162, i16=8, i17=-15427, i18=53, i19=240;
        boolean b3=true;
        byte by2=73;
        short s1=834;
        double dArr[]=new double[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(dArr, 79.5814);
        FuzzerUtils.init(lArr2, 2686808478101977340L);

        for (i = 8; i < 315; ++i) {
            dArr[i - 1] -= (i1 + ((-Integer.reverseBytes(i1)) + (--i1)));
            for (i2 = 3; i2 < 82; i2++) {
                Test.instanceCount += Math.min(iMeth(), Test.iFld);
                Test.fFld *= Test.lFld;
                if (false) continue;
                dArr[i] -= i2;
            }
            for (i16 = 82; i16 > 2; i16--) {
                i1 >>= (int)Test.lFld;
                i17 += (((i16 * i1) + i1) - i1);
                for (i18 = 1; i18 < 2; ++i18) {
                    Test.iFld &= i19;
                    Test.iArrFld[i - 1] = i1;
                    i3 += (i18 ^ Test.instanceCount);
                    switch ((i16 % 2) + 28) {
                    case 28:
                    case 29:
                        if (b3) continue;
                        i19 -= Test.iFld;
                        lArr2 = lArr2;
                    default:
                        i17 = 195;
                        Test.instanceCount -= Test.lFld;
                        Test.iArrFld[i + 1] &= (int)Test.lFld;
                        i1 *= i;
                    }
                    Test.iFld += by2;
                    try {
                        iFld1 = (-198 % iFld1);
                        i17 = (-9 / i1);
                        Test.iArrFld[i16] = (Test.iArrFld[i + 1] % -64632);
                    } catch (ArithmeticException a_e) {}
                    i17 += (int)(-2495410476L + (i18 * i18));
                    switch (((i16 % 4) * 5) + 80) {
                    case 98:
                        i17 -= 219;
                        break;
                    case 85:
                        i19 ^= (int)Test.instanceCount;
                        i1 += iFld1;
                        i3 += s1;
                    case 83:
                        i19 *= i2;
                    case 93:
                        iFld1 = (int)Test.fFld;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
