package tests.javafuzzer1482;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:18:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7486581316942818275L;
    public static short sFld=12543;
    public double dFld=2.81783;

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 168);

        iArr2 = iArr2;
        iArr2 = iArr2;
        vMeth1_check_sum += FuzzerUtils.checkSum(iArr2);
    }

    public static float fMeth(int i10, int i11, int i12) {

        float f1=-116.755F, f2=96.586F;
        int i13=15829, i14=-45817, i15=-1, i16=39909, i17=33, i18=22996;
        boolean b=false;

        vMeth1();
        f1 = 1;
        do {
            i13 = 1;
            while (++i13 < 6) {
                i10 = (int)Test.instanceCount;
                for (i14 = 1; 1 > i14; ++i14) {
                    long l=3L;
                    i10 += i14;
                    i12 >>= (int)l;
                    b = true;
                    i15 += -198;
                }
                try {
                    i10 = (i10 % -491516276);
                    i12 = (i13 % -1843);
                    i15 = (-87 / i14);
                } catch (ArithmeticException a_e) {}
                for (i16 = 1; i16 > f1; i16 -= 3) {
                    f2 += (i16 - Test.sFld);
                }
                i18 = 1;
                do {
                    i12 += (i18 * i18);
                    i10 += i18;
                } while ((i18 += 2) < 1);
            }
        } while (++f1 < 254);
        long meth_res = i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + (b ? 1 : 0) + i16 + i17 +
            Float.floatToIntBits(f2) + i18;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i1=3, i2=241, i3=8, i4=47372, i5=13, i6=67, i7=41514, i8=-215, i9=5, iArr1[]=new int[N];
        float f=0.676F;
        byte by=-88;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -25077L);
        FuzzerUtils.init(iArr1, 5052);

        for (i1 = 19; i1 < 324; ++i1) {
            for (i3 = 1; i3 < 5; i3++) {
                f -= lArr[i1 - 1];
                i2 += (((i3 * Test.instanceCount) + Test.instanceCount) - i4);
            }
            f += i5;
            Test.instanceCount += (-164 + (i1 * i1));
            i2 <<= (int)((Test.instanceCount + (iArr1[i1] = i3)) ^ (i5++));
            i6 = 5;
            do {
                for (i7 = 1; 2 > i7; ++i7) {
                    i9 = (int)(10L - ((-(i9 = by)) + (--f)));
                    i9 ^= (int)Test.instanceCount;
                    Test.sFld += (short)i7;
                    iArr1[i7] = ((i2 - Integer.reverseBytes(-13219)) + iArr1[i1]);
                    Test.instanceCount *= (long)(fMeth(i5, 205, i4) + 157);
                    iArr1[i7 + 1] = 44864;
                }
            } while ((i6 -= 2) > 0);
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + by +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=97, i19=-180, i20=-58, i21=-2, i22=-215, i23=208, i24=17111, i25=34677, i26=127, i27=-97, iArr[]=new
            int[N];
        float f3=-40.286F, f4=85.337F, fArr[]=new float[N];
        double d=-112.24407, d1=-61.86256;
        byte by1=57;

        FuzzerUtils.init(iArr, -134);
        FuzzerUtils.init(fArr, -119.1019F);

        Test.instanceCount <<= iArr[(i >>> 1) % N];
        i -= (int)(fArr[(-9 >>> 1) % N]++);
        vMeth();
        for (f3 = 297; f3 > 8; f3--) {
            d = 1;
            while (++d < 87) {
                i20 *= -55128;
                i21 = 1;
                do {
                    Test.instanceCount = Test.instanceCount;
                    f4 -= i20;
                    Test.instanceCount = Test.instanceCount;
                    i19 &= (int)Test.instanceCount;
                } while (++i21 < 1);
            }
        }
        i22 = 1;
        while (++i22 < 198) {
            for (i23 = i22; i23 < 127; i23 += 3) {
                i19 -= by1;
                Test.instanceCount -= (long)f4;
                i20 = i19;
                Test.instanceCount ^= -2;
                i = i;
                for (d1 = 1; 1 > d1; ++d1) {
                    f4 += i26;
                    i20 += (int)d1;
                    switch ((i23 % 9) + 14) {
                    case 14:
                        i20 += (int)(((d1 * f4) + i26) - i23);
                        iArr[i23 + 1] -= (int)Test.instanceCount;
                        i26 += (int)((long)d1 | i22);
                        i26 >>= i21;
                        break;
                    case 15:
                        i24 *= (int)-43.64F;
                        i |= 3;
                        dFld += i19;
                        fArr[i23] += i26;
                        break;
                    case 16:
                        i20 -= i24;
                        break;
                    case 17:
                        f4 -= (float)dFld;
                        break;
                    case 18:
                        i24 <<= i24;
                        break;
                    case 19:
                        i -= by1;
                    case 20:
                        i24 += i27;
                        break;
                    case 21:
                        i27 += (int)d1;
                    case 22:
                        i24 >>= (int)-2430098090L;
                        break;
                    default:
                        Test.sFld += (short)i24;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
