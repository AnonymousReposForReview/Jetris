package tests.javafuzzer984;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:23:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=22499L;
    public static volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2756512801899092203L);
        FuzzerUtils.init(Test.dArrFld, -121.112261);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, boolean b1, long l1) {

        int i4=27283, i5=0, i6=-3, i7=-9, iArr[]=new int[N];
        double d=0.60906;

        FuzzerUtils.init(iArr, -1);

        for (i4 = 14; i4 < 230; ++i4) {
            iArr[i4 - 1] *= i4;
            for (i6 = 1; i6 < 7; i6++) {
                Test.instanceCount = (long)-72.15F;
                switch ((i6 % 1) + 77) {
                case 77:
                    i7 <<= i5;
                    break;
                default:
                    i5 = i5;
                    f += i6;
                }
            }
            i7 += (int)-97.44292;
            d -= i4;
            switch ((i4 % 2) + 115) {
            case 115:
                l1 += (long)d;
                break;
            case 116:
                i7 -= i6;
                if (i7 != 0) {
                    vMeth2_check_sum += Float.floatToIntBits(f) + (b1 ? 1 : 0) + l1 + i4 + i5 + i6 + i7 +
                        Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
                    return;
                }
                break;
            }
            f *= i7;
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + (b1 ? 1 : 0) + l1 + i4 + i5 + i6 + i7 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        float f1=-1.994F, f2=85.500F, f3=-117.763F;
        int i9=-39, i10=-42904, i11=-14, iArr1[]=new int[N];
        byte by=49, byArr[]=new byte[N];

        FuzzerUtils.init(iArr1, 7);
        FuzzerUtils.init(byArr, (byte)17);

        vMeth2(f1, Test.bFld, Test.instanceCount);
        for (int i8 : iArr1) {
            i8 >>= i8;
            for (f2 = 1; f2 < 4; ++f2) {
                Test.instanceCount = i9;
                i9 -= 1;
            }
            i10 = 1;
            while (++i10 < 4) {
                i8 += (((i10 * Test.instanceCount) + i10) - by);
                for (f3 = i10; f3 < 1; f3++) {
                    double d1=1.89680;
                    Test.lArrFld[(int)(f3 - 1)] -= 72;
                    switch (((i10 >>> 1) % 7) + 33) {
                    case 33:
                        by <<= (byte)i9;
                        f1 = (float)d1;
                        Test.lArrFld[(int)(f3 - 1)] -= -172;
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 34:
                        iArr1[i10] = i8;
                        break;
                    case 35:
                    case 36:
                        i8 -= i11;
                        break;
                    case 37:
                        byArr[(int)(f3 + 1)] ^= (byte)i9;
                        break;
                    case 38:
                    case 39:
                        by += (byte)(((f3 * i9) + i10) - i8);
                        break;
                    default:
                        try {
                            i9 = (i10 / i11);
                            i8 = (-1874665483 / i11);
                            i9 = (i8 / -5);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i9 + i10 + by +
            Float.floatToIntBits(f3) + i11 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i2, int i3) {

        int i12=121, i13=248, i14=7, i15=-7, i16=240, i17=49, i18=134, iArr2[]=new int[N];
        byte by1=-37;
        float f4=2.379F;

        FuzzerUtils.init(iArr2, -11);

        vMeth1();
        if (Test.bFld) {
            i2 ^= i3;
            for (i12 = 8; i12 < 174; i12++) {
                i2 += (((i12 * i2) + i2) - i2);
            }
            for (i14 = 5; 398 > i14; ++i14) {
                iArr2[i14] %= (int)(Test.instanceCount | 1);
                i15 = -55;
                i16 += 213;
                if (Test.bFld) {
                    by1 &= (byte)i2;
                    i13 = i16;
                }
                for (i17 = 1; i17 < 4; ++i17) {
                    i18 = i16;
                    i13 = (int)Test.instanceCount;
                }
            }
        } else if (Test.bFld) {
            i3 *= -13;
        } else {
            f4 -= Test.instanceCount;
        }
        vMeth_check_sum += i2 + i3 + i12 + i13 + i14 + i15 + i16 + by1 + i17 + i18 + Float.floatToIntBits(f4) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        boolean b=true;
        int i=7960, i1=-12, i19=10463, i20=-13, i21=32, i22=-39795, i23=8, i24=-97, i25=-248, iArr3[]=new int[N];
        float f5=-48.782F, f6=0.207F;
        long l2=-33L;

        FuzzerUtils.init(iArr3, -29909);

        b = b;
        for (long l : Test.lArrFld) {
            for (i = 2; 63 > i; i++) {
                try {
                    i1 = (i1 % i);
                    i1 = (-191095281 % i);
                    i1 = (215 % i);
                } catch (ArithmeticException a_e) {}
                i1 += (i + Test.instanceCount);
            }
        }
        vMeth(i, i);
        Test.instanceCount = -181;
        Test.instanceCount = Test.instanceCount;
        for (i19 = 6; i19 < 269; ++i19) {
            switch (((i19 % 2) * 5) + 110) {
            case 112:
                i21 = 1;
                while (++i21 < 96) {
                    for (f5 = 1; f5 < 1; f5 += 2) {
                        i1 = (int)1.14860;
                    }
                }
                iArr3[i19 + 1] += i1;
            case 111:
            default:
                Test.instanceCount = (long)f5;
                i1 -= i22;
                for (l2 = 2; l2 < 96; l2 += 3) {
                    Test.instanceCount -= i1;
                    Test.bFld = b;
                }
                i1 >>>= 41486;
            }
            i1 = i;
            Test.instanceCount *= l2;
            Test.bFld = Test.bFld;
            i23 += (int)l2;
        }
        for (i24 = 4; i24 < 123; ++i24) {
            f6 *= i1;
            i20 >>>= i22;
            i25 += i24;
            i20 += (-2 + (i24 * i24));
            Test.instanceCount <<= i21;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
