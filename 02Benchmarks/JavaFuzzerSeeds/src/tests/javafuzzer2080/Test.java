package tests.javafuzzer2080;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:41:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2070428609L;
    public static boolean bFld=false;
    public static double dFld=0.49021;
    public static float fFld=-16.7F;
    public static short sFld=-32129;
    public static volatile int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
        FuzzerUtils.init(Test.dArrFld, 0.48860);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, double d1, long l2) {

        int i4=-5, i5=3, i6=12;
        byte by=-97;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -4035098048L);

        i4 >>= i4;
        l2 = i4;
        i5 = 1;
        do {
            i4 = (int)34.842F;
            l2 &= i4;
            f = Test.instanceCount;
            lArr[i5][i5 - 1] <<= i4;
            i6 = 1;
            do {
                Test.bFld = Test.bFld;
                i4 = 0;
                i4 = i6;
            } while (++i6 < 11);
        } while (++i5 < 142);
        d1 -= by;
        i4 = i6;
        i4 -= i5;
        vMeth2_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + l2 + i4 + i5 + i6 + by +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, int i2) {

        long l1=2L;
        int i3=-3, i7=-224;
        float f1=2.173F;

        for (l1 = 8; l1 < 163; l1++) {
            byte by1=15;
            switch ((int)(((l1 % 4) * 5) + 29)) {
            case 35:
                Test.iArrFld[(int)(l1 - 1)] = i2;
                vMeth2(-113.737F, Test.dFld, l);
            case 45:
                Test.iArrFld[(int)(l1)] -= i3;
            case 30:
                l -= -34408;
                i3 += (int)(l1 * by1);
                break;
            case 37:
                Test.iArrFld[(int)(l1 + 1)] = i2;
                Test.bFld = Test.bFld;
                f1 += f1;
                f1 += (221 + (l1 * l1));
                break;
            }
            i2 += (int)l1;
            i7 = 1;
            while (++i7 < 10) {
                i3 += i7;
                l += i7;
            }
        }
        vMeth1_check_sum += l + i2 + l1 + i3 + Float.floatToIntBits(f1) + i7;
    }

    public static void vMeth() {

        int i=-229, i1=-157, i8=57537, i9=2, i10=67;
        double d=-61.98120;
        long l3=-7346279462851762207L;

        if (false) {
            for (i = 8; 131 > i; i++) {
                d = (-Test.instanceCount);
                vMeth1(4136298426L, 42564);
                for (i8 = 13; i8 > i; --i8) {
                    for (l3 = 1; l3 > 1; l3--) {
                        Test.dArrFld = FuzzerUtils.double1array(N, (double)-2.102231);
                        Test.fFld = i10;
                        Test.fFld = Test.fFld;
                        i9 ^= i9;
                        Test.instanceCount %= (i10 | 1);
                    }
                    Test.fFld += i8;
                    i9 += (int)(-11L + (i8 * i8));
                    Test.fFld += Test.sFld;
                    Test.fFld = Test.fFld;
                }
            }
        } else if (Test.bFld) {
            Test.fFld = 15939L;
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + i8 + i9 + l3 + i10;
    }

    public void mainTest(String[] strArr1) {

        int i12=-48464, i13=-210, i14=127, i15=-7, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, 98);

        vMeth();
        for (i12 = 11; 241 > i12; ++i12) {
            i13 = (int)Test.instanceCount;
            iArr = FuzzerUtils.int2array(N, (int)-55253);
        }
        for (i14 = 11; 311 > i14; i14++) {
            try {
                i13 = (i12 / -31558);
                i15 = (-79 / i15);
                i13 = (i13 / 216);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount = i15;
            i13 = (int)Test.instanceCount;
        }
        i13 = (int)Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
