package tests.javafuzzer1275;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:39:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-174L;
    public static volatile float fFld=0.607F;
    public static volatile long lFld=-11795L;
    public float fArrFld[][]=new float[N][N];

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i11=44832, i12=73, i13=-207, i14=39952, i15=83;
        long l1=-828836979L;
        float fArr[]=new float[N], fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr, 121.839F);
        FuzzerUtils.init(fArr1, -1.548F);

        for (i11 = 11; i11 < 224; i11++) {
            fArr[i11 - 1] += Test.fFld;
            i12 += i11;
            for (l1 = 1; 8 > l1; ++l1) {
                i13 = i11;
                Test.instanceCount -= -2952815142L;
                Test.fFld = i13;
                i12 -= (int)-64660L;
                Test.instanceCount = -38815;
                for (i14 = 1; i14 < 2; i14++) {
                    i13 *= i15;
                    Test.fFld -= -48093;
                }
                fArr1 = fArr1;
                Test.instanceCount += (l1 * l1);
                i13 -= (int)l1;
            }
        }
        long meth_res = i11 + i12 + l1 + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static double dMeth() {

        int i7=-113, i8=16, i9=-58425, i10=41568, i16=-9, i17=60007, i18=0, iArr1[]=new int[N];
        byte by=-40;
        double d1=-45.78758;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 22);
        FuzzerUtils.init(lArr1, -1595242380L);

        iArr1[(i7 >>> 1) % N] <<= (int)Test.instanceCount;
        for (i8 = 268; i8 > 12; i8 -= 3) {
            by ^= (byte)((-(Test.instanceCount + 29681)) + (i8 + (i9 >>> -14)));
            i10 = 1;
            while (++i10 < 18) {
                lArr1[i8 - 1] = (iArr1[i10 - 1] += -172);
                Test.instanceCount = (long)((iArr1[i8 + 1] + Test.instanceCount) + ((Test.fFld - -10) - lMeth()));
                iArr1[i10 - 1] += i10;
            }
            for (i16 = 1; 18 > i16; ++i16) {
                for (d1 = 1; d1 < 2; ++d1) {
                    i18 *= i18;
                    switch ((i8 % 2) + 78) {
                    case 78:
                        iArr1[i16] -= (int)d1;
                        iArr1[i16] >>>= i10;
                        i17 = i9;
                        break;
                    case 79:
                        iArr1[(int)(d1)] += i17;
                        break;
                    }
                }
            }
        }
        long meth_res = i7 + i8 + i9 + by + i10 + i16 + i17 + Double.doubleToLongBits(d1) + i18 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i1, boolean b, long l) {

        int i2=24624, i3=10, i4=-4, i5=10, i6=-18, i19=2, i20=-9, iArr[]=new int[N], iArr2[][]=new int[N][N];
        short s=-31911, s1=-31619, sArr[]=new short[N];
        double d2=2.65793;
        long l2=-6L, l4=-1630880302L, lArr[]=new long[N];
        byte by1=-36;

        FuzzerUtils.init(sArr, (short)26881);
        FuzzerUtils.init(lArr, 8244381803136081379L);
        FuzzerUtils.init(iArr, -69);
        FuzzerUtils.init(iArr2, 0);

        for (i2 = 2; i2 < 216; i2++) {
            switch ((i2 * 5) + 43) {
            case 303:
            case 311:
                i4 = 1;
                while (++i4 < 8) {
                    sArr[i2 - 1] = (short)(-Math.max(i3++, i3));
                    for (i5 = 1; i5 < 1; ++i5) {
                        double d=0.32682;
                        if (b) continue;
                        lArr[i5] = (-(-l));
                        switch (((i4 % 8) * 5) + 91) {
                        case 104:
                            d += i6;
                            i3 += (int)24300L;
                            break;
                        case 107:
                            i3 -= (int)(Test.fFld++);
                            break;
                        case 130:
                            iArr[i4 - 1] = (int)(Test.instanceCount++);
                            i6 *= iArr[i2 - 1];
                            break;
                        case 97:
                            try {
                                i3 = (i3 % i6);
                                i1 = (i1 % -56);
                                i3 = (-78 / i6);
                            } catch (ArithmeticException a_e) {}
                            i6 *= iArr[i2];
                            break;
                        case 99:
                            dMeth();
                            break;
                        case 124:
                            Test.instanceCount += i5;
                            break;
                        case 92:
                        case 125:
                        }
                    }
                }
                break;
            case 101:
                l >>>= s;
                break;
            case 73:
                i3 = (int)14L;
                break;
            case 165:
                i1 = (int)4060473324483215609L;
                break;
            case 109:
                l = s;
                break;
            case 105:
            case 275:
                i3 = s;
                break;
            case 383:
                try {
                    i6 = (147 / i2);
                    i3 = (iArr[i2 - 1] % -624215845);
                    i3 = (i5 % i1);
                } catch (ArithmeticException a_e) {}
                break;
            case 236:
                i6 -= -25666;
                break;
            case 355:
                i1 = i5;
            case 284:
                i1 += (7 + (i2 * i2));
            case 249:
                i1 <<= i4;
                break;
            case 232:
                i3 = (int)d2;
                break;
            case 139:
                i6 -= i5;
                break;
            case 46:
            case 359:
                if (b) break;
                break;
            case 300:
                i1 >>>= i6;
                break;
            case 104:
                l -= s1;
                break;
            case 312:
                iArr = iArr;
                break;
            case 379:
                Test.lFld += (long)d2;
                break;
            case 248:
                l2 += (i2 + Test.lFld);
            case 219:
                if (b) continue;
                break;
            case 209:
                iArr[i2 - 1] >>= i6;
                break;
            case 298:
                Test.instanceCount *= by1;
                break;
            case 217:
                i3 += (((i2 * i6) + i4) - Test.lFld);
                break;
            case 339:
                i6 -= i5;
                break;
            case 80:
                i1 += i2;
                break;
            case 118:
                d2 *= i6;
                break;
            case 151:
                i1 -= i6;
                break;
            case 68:
                Test.fFld -= i3;
                break;
            case 228:
                iArr[i2 + 1] = i3;
                break;
            case 66:
            case 289:
                i6 -= (int)d2;
            case 136:
                i1 = s1;
                break;
            case 58:
            case 360:
                by1 = (byte)Test.lFld;
                break;
            case 326:
                i6 += i6;
            case 282:
                Test.fFld -= i2;
                break;
            case 296:
                iArr[(i4 >>> 1) % N] = (int)d2;
            case 75:
                try {
                    iArr[i2 + 1] = (-30475 / i1);
                    i1 = (-223 / i6);
                    iArr[i2 + 1] = (i6 / -1820128573);
                } catch (ArithmeticException a_e) {}
                break;
            case 111:
                i3 -= i2;
            case 131:
                i3 *= i1;
                break;
            case 285:
                i6 = i6;
                break;
            case 149:
                i6 = i2;
                break;
            case 154:
                if (i5 != 0) {
                    vMeth_check_sum += i1 + (b ? 1 : 0) + l + i2 + i3 + i4 + i5 + i6 + s + Double.doubleToLongBits(d2)
                        + s1 + l2 + by1 + i19 + l4 + i20 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) +
                        FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                break;
            case 205:
                i3 += 11;
                break;
            case 386:
                i6 += (int)Test.fFld;
                break;
            case 51:
                i1 += (i2 + s);
            case 91:
                i6 += i2;
                break;
            case 338:
                Test.lFld = (long)Test.fFld;
                break;
            case 332:
                Test.lFld += i5;
            case 135:
                i6 = i5;
                break;
            case 50:
                Test.fFld -= i5;
            case 115:
                i3 += i2;
                break;
            case 243:
                i19 += (((i2 * i3) + l4) - i19);
                break;
            case 247:
                i3 = 249;
                break;
            case 334:
                l2 += (((i2 * l4) + i5) - l4);
            case 60:
                Test.fFld = -28569;
                break;
            case 237:
                i20 *= 6;
                break;
            case 259:
                i3 = (int)l;
            case 336:
                i6 /= (int)(i19 | 1);
            case 72:
                Test.fFld %= (Test.instanceCount | 1);
                break;
            case 288:
                iArr2 = iArr2;
            case 212:
                Test.instanceCount = i19;
                break;
            case 245:
                Test.fFld -= i19;
                break;
            case 363:
            case 356:
                i19 += i19;
            case 266:
            case 280:
                try {
                    i20 = (i2 / -112);
                    iArr2[i2][i2] = (38678 / i5);
                    i6 = (927587709 / i3);
                } catch (ArithmeticException a_e) {}
                break;
            }
        }
        vMeth_check_sum += i1 + (b ? 1 : 0) + l + i2 + i3 + i4 + i5 + i6 + s + Double.doubleToLongBits(d2) + s1 + l2 +
            by1 + i19 + l4 + i20 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=0, i21=42044, i22=0, i23=99, i24=-41074, i25=14, i26=-4, iArr3[]=new int[N];
        boolean b1=false;
        float f=-1.394F, f1=1.99F;
        short s2=20184;
        double d3=0.44288, dArr[][]=new double[N][N];
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, 13L);
        FuzzerUtils.init(dArr, 105.346);
        FuzzerUtils.init(iArr3, 12119);

        i = (--i);
        i += i;
        i += (i *= ((i - i) + (i - i)));
        vMeth(i, b1, Test.instanceCount);
        for (f = 4; 175 > f; ++f) {
            Test.lFld += i21;
            i = i;
            if (b1) break;
            i21 = (int)Test.instanceCount;
            fArrFld[(int)(f + 1)][(int)(f)] += i21;
            i21 += (int)((long)f ^ i21);
            Test.fFld = i;
            for (i22 = 6; i22 < 147; i22++) {
                i += (i22 - i22);
                s2 = (short)i21;
                i += i22;
                i23 = (int)d3;
                for (i24 = 1; 2 > i24; i24 += 2) {
                    Test.lFld = -9L;
                    Test.fFld = f1;
                    lArr2 = lArr2;
                    Test.lFld += i23;
                    i23 = i25;
                    f1 += (2847 + (i24 * i24));
                    Test.lFld = -226;
                    Test.fFld = i25;
                }
                i26 = 1;
                while (++i26 < 2) {
                    dArr[i22][i26] += i21;
                }
                iArr3[i22] += -58801;
                i25 += (i22 | i21);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
