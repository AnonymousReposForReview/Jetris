package tests.javafuzzer2747;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:47:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=221L;
    public static volatile float fFld=1.252F;
    public static byte byFld=-18;
    public volatile short sFld=19612;
    public static volatile double dFld=-2.72668;
    public boolean bFld=false;
    public static volatile boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5) {

        int i6=68, i7=19907, i8=-72, i9=38605;
        boolean b=false;
        double d=49.100219, dArr[]=new double[N];
        short s=15854;

        FuzzerUtils.init(dArr, -42.20688);

        dArr = FuzzerUtils.double1array(N, (double)0.112222);
        Test.instanceCount = i5;
        for (i6 = 10; i6 < 167; i6++) {
            for (i8 = 1; 10 > i8; i8++) {
                i5 = i8;
                Test.bArrFld[i8] = b;
                Test.instanceCount += (((i8 * i6) + i7) - i8);
                switch (((i6 >>> 1) % 5) + 107) {
                case 107:
                    d *= Test.instanceCount;
                    Test.instanceCount >>= i5;
                    Test.fFld += (((i8 * i6) + i6) - s);
                    break;
                case 108:
                case 109:
                    Test.byFld <<= (byte)i6;
                    break;
                case 110:
                    i5 += i8;
                    break;
                case 111:
                    b = b;
                    i7 = 6;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + Double.doubleToLongBits(d) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth1(int i3) {

        int i4=-46513, i10=-11598, i11=-182, i12=-5, i13=-34339;
        boolean b1=false;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 15214L);

        i4 = 1;
        while (++i4 < 184) {
            if (b1) {
                i3 >>= i4;
                vMeth(i4);
                Test.instanceCount -= i4;
                i3 += (((i4 * Test.instanceCount) + i4) - Test.instanceCount);
            } else if (true) {
                for (i10 = 1; 9 > i10; i10++) {
                    if (false) continue;
                    Test.instanceCount = i11;
                }
                i11 = i3;
            } else {
                lArr[i4 + 1][i4] += -10L;
            }
            for (i12 = 1; i12 < 9; ++i12) {
                i11 *= i3;
                i3 += (i12 ^ i4);
                Test.instanceCount -= i13;
            }
        }
        long meth_res = i3 + i4 + i10 + i11 + (b1 ? 1 : 0) + i12 + i13 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f) {

        int i2=-12, i14=16, i15=-58, i16=-18187, i17=-18, iArr[]=new int[N];
        short s1=-14995;
        double d1=-54.74674;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -7);
        FuzzerUtils.init(lArr1, 0L);

        i2 >>= Math.min(iMeth1(i2), 13);
        i14 = 1;
        do {
            if (i2 != 0) {
            }
            iArr[i14] *= s1;
            i15 = 1;
            while (++i15 < 6) {
                i2 *= i15;
                i2 += (((i15 * Test.byFld) + Test.instanceCount) - Test.instanceCount);
                switch ((i15 % 9) + 47) {
                case 47:
                case 48:
                    for (i16 = 1; i16 < 1; i16++) {
                        lArr1[i15] = i17;
                        d1 += i17;
                        i2 *= i15;
                        Test.instanceCount *= i14;
                        i2 <<= i16;
                        i2 += i16;
                    }
                    break;
                case 49:
                    i2 = (int)d1;
                    break;
                case 50:
                    i17 <<= i16;
                    break;
                case 51:
                case 52:
                    i17 <<= (int)Test.instanceCount;
                    break;
                case 53:
                    i2 += (((i15 * i14) + Test.byFld) - i2);
                    break;
                case 54:
                    i2 = i16;
                    break;
                case 55:
                default:
                    iArr = iArr;
                }
            }
        } while (++i14 < 295);
        long meth_res = Float.floatToIntBits(f) + i2 + i14 + s1 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-14101, i18=-6, i19=-209;
        float f1=-54.797F;
        long l=-3025409450L, l1=-2928822031L, lArr2[][]=new long[N][N];
        byte byArr[][]=new byte[N][N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(byArr, (byte)20);
        FuzzerUtils.init(lArr2, -223L);
        FuzzerUtils.init(sArr, (short)-26275);

        if (bFld) {
            if (bFld) {
                for (i = 7; 275 > i; ++i) {
                    switch (((iMeth(Test.fFld) >>> 1) % 9) + 124) {
                    case 124:
                        sFld = (short)i;
                        i18 = 94;
                        do {
                            i1 += (int)Test.dFld;
                            Test.fFld = i1;
                            Test.iArrFld[i18 + 1] = 12;
                            Test.byFld = (byte)i;
                            switch (((i18 % 3) * 5) + 120) {
                            case 134:
                                i19 = -12101;
                                if (bFld) {
                                    f1 = 1;
                                    while ((f1 += 3) < 1) {
                                        Test.fFld *= Test.instanceCount;
                                    }
                                }
                                break;
                            case 127:
                                l = 1;
                                while (++l < 1) {
                                    Test.iArrFld[i - 1] <<= i18;
                                    Test.instanceCount |= 223;
                                    switch ((i % 6) + 38) {
                                    case 38:
                                        Test.iArrFld[i + 1] = i18;
                                        switch (((i % 6) * 5) + 69) {
                                        case 89:
                                            i1 += (27717 + (l * l));
                                            i19 <<= i18;
                                            i1 += (-61911 + (l * l));
                                            byArr[i18 - 1] = byArr[i18];
                                            break;
                                        case 87:
                                            l1 += (((l * i) + i) - i);
                                            i19 = i1;
                                            i19 += (int)l;
                                            i19 += (int)Test.fFld;
                                            break;
                                        case 91:
                                            l1 <<= i18;
                                            break;
                                        case 84:
                                            i1 += (int)l;
                                        case 81:
                                            i19 += -12713;
                                            break;
                                        case 92:
                                            lArr2[(int)(l - 1)][i - 1] = -101L;
                                            break;
                                        default:
                                            Test.instanceCount += i1;
                                        }
                                        break;
                                    case 39:
                                        Test.fFld = i;
                                        break;
                                    case 40:
                                        fArrFld[i18 + 1][i18] = i;
                                    case 41:
                                        i19 *= (int)l1;
                                        break;
                                    case 42:
                                        Test.fFld -= (float)Test.dFld;
                                        break;
                                    case 43:
                                        l1 -= i;
                                        break;
                                    default:
                                        i19 = (int)l;
                                    }
                                }
                            case 126:
                                Test.iArrFld[i18] -= i18;
                                break;
                            }
                        } while (--i18 > 0);
                        break;
                    case 125:
                        l1 += i1;
                        break;
                    case 126:
                        i19 = (int)4654813184527935355L;
                        break;
                    case 127:
                        i1 = i19;
                    case 128:
                        i1 *= 12;
                    case 129:
                        sArr[i][i] *= (short)Test.fFld;
                        break;
                    case 130:
                        Test.iArrFld[i] -= i18;
                    case 131:
                        Test.dFld *= i1;
                        break;
                    case 132:
                        i19 *= (int)l1;
                        break;
                    default:
                        i19 += (i * i);
                    }
                }
            }
        } else if (bFld) {
            i1 -= 9;
        } else {
            Test.instanceCount -= i1;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
