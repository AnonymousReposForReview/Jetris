package tests.javafuzzer2027;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:43:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=182L;
    public static float fFld=-46.312F;
    public short sFld=-31010;
    public static byte byFld=-31;
    public static int iFld=-10033;
    public static int iFld1=-36570;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -480400479L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9, int i10) {

        int i11=-44474, i12=36275, i13=10, i14=108, i15=-92, i16=6, i17=78, iArr1[]=new int[N];
        float f=-2.816F, f1=-1.474F;
        short s=31518;

        FuzzerUtils.init(iArr1, 6);

        for (i11 = 340; i11 > 15; i11--) {
            i8 += (int)f;
            for (i13 = 5; i13 > 1; i13--) {
                Test.lArrFld[i13] -= Test.instanceCount;
                i15 = 1;
                while (++i15 < 2) {
                    i10 += 25152;
                    i8 = (int)Test.instanceCount;
                    iArr1[i13 - 1] >>= i15;
                    iArr1[i15] -= Test.byFld;
                    i10 = i11;
                    i8 = s;
                }
            }
            iArr1[i11] = (int)Test.instanceCount;
            for (i16 = 1; i16 < 5; ++i16) {
                f1 *= i16;
                i17 *= i17;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 + i15 + s + i16 + i17 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i7=-50, i18=2, i19=-18;

        i7 = 130;
        while (--i7 > 0) {
            vMeth1(i7, i7, -201);
            Test.iFld >>= Test.iFld;
            Test.iFld += (int)(-119660558L + (i7 * i7));
            Test.iFld *= Test.iFld;
            for (i18 = 1; 12 > i18; i18++) {
                Test.byFld = (byte)Test.iFld;
                i19 -= 0;
            }
        }
        vMeth_check_sum += i7 + i18 + i19;
    }

    public static float fMeth(boolean b1, byte by, double d1) {

        int i4=-3, i5=-13, i6=-64926, iArr2[]=new int[N];
        double d2=21.24732, d3=-2.68941;

        FuzzerUtils.init(iArr2, -81);

        i4 = 1;
        while (++i4 < 348) {
            i5 = 1;
            while (++i5 < 5) {
                for (d2 = 1; d2 < 1; d2++) {
                    vMeth();
                    i6 += (int)(((d2 * Test.instanceCount) + Test.instanceCount) - i4);
                    Test.instanceCount = Test.iFld;
                    iArr2[i4 - 1] ^= -7114;
                }
                switch ((i4 % 3) + 127) {
                case 127:
                    if (false) {
                    }
                    Test.iFld += (int)Test.fFld;
                    break;
                case 128:
                    iArr2[i4 - 1] *= i4;
                    i6 -= (int)Test.fFld;
                    d3 = 1;
                    while (++d3 < 1) {
                        Test.fFld = -14;
                    }
                    break;
                case 129:
                    d1 = Test.fFld;
                    break;
                }
            }
        }
        long meth_res = (b1 ? 1 : 0) + by + Double.doubleToLongBits(d1) + i4 + i5 + Double.doubleToLongBits(d2) + i6 +
            Double.doubleToLongBits(d3) + FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=102, i1=2, i2=45553, i3=13, i20=86, i21=-27042, i22=-35359, i23=-8, iArr[]=new int[N];
        double d=-120.44388;
        boolean b=false, bArr[][]=new boolean[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9089352549639886967L);
        FuzzerUtils.init(iArr, -19009);
        FuzzerUtils.init(bArr, true);

        for (long l : lArr) {
            for (i = 63; 3 < i; i -= 2) {
                for (i2 = 3; i2 > 1; --i2) {
                    l %= ((-Math.min(++i1, i3 + i2)) | 1);
                    Test.instanceCount += (((i2 * i) + i) - i3);
                    Test.fFld *= (sFld++);
                    iArr[i2] = (-Math.min(++i3, (int)(d + 6)));
                    Test.byFld += (byte)Math.min(Long.reverseBytes(Long.reverseBytes(l)), Test.instanceCount);
                    l += (i2 * i2);
                    b = (b = ((i3--) < (-fMeth(b, Test.byFld, d))));
                    Test.byFld = (byte)l;
                    i1 += i3;
                }
                d -= i2;
                bArr = bArr;
                for (i20 = 1; i20 < 3; ++i20) {
                    i3 += (int)(-1.870F + (i20 * i20));
                    Test.iFld = i21;
                    i1 >>= Test.iFld;
                    Test.fFld += (i20 * i20);
                    i1 = (int)Test.instanceCount;
                    Test.iFld *= (int)d;
                    Test.iFld1 += -48;
                    Test.iFld1 = 1;
                    i21 = Test.iFld;
                }
                l = i;
                i1 = i20;
                Test.instanceCount -= 27386L;
            }
            for (i22 = 2; i22 < 63; ++i22) {
                Test.iFld1 += (int)Test.fFld;
                iArr = iArr;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
