package tests.javafuzzer2014;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:26:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=24593L;
    public static float fFld=16.703F;
    public static short sFld=29490;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 101);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, long l1, int i4) {

        int i5=-6, i6=192, i7=-94, i8=-14, i9=-82, i10=-12, i11=25, i12=49820;
        double d1=-60.64847;
        byte byArr[]=new byte[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(byArr, (byte)17);
        FuzzerUtils.init(fArr, 122.779F);

        for (i5 = 11; i5 < 268; i5++) {
            for (i7 = 1; i7 < 6; ++i7) {
                for (i9 = 2; i9 > 1; i9 -= 2) {
                    l1 *= (long)Test.fFld;
                    byArr[i9] += (byte)d1;
                    Test.fFld -= i3;
                    i6 ^= i10;
                    i6 += (int)Test.fFld;
                    d1 -= i4;
                    fArr[i5] += i6;
                }
                Test.iArrFld[i7] = i9;
                i3 = (int)-1051124540672434842L;
                for (i11 = 1; i11 < 2; ++i11) {
                    l1 += i10;
                    l1 -= l1;
                }
            }
        }
        long meth_res = i3 + l1 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 +
            FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2, float f1) {

        int i13=174, i14=-3, iArr[]=new int[N];
        long l2=134L, l3=-16L;
        boolean b=true;
        double d2=0.90105;
        byte by=-71;

        FuzzerUtils.init(iArr, 13);

        iArr[(i1 >>> 1) % N] ^= iMeth(i1, -2311103136L, i2);
        i13 = 1;
        while (++i13 < 191) {
            i14 = 1;
            while (++i14 < 8) {
                l2 = 1;
                do {
                    i1 += (int)(((l2 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    f1 -= i14;
                    Test.instanceCount += (48008L + (l2 * l2));
                    if (b) continue;
                    l3 *= (long)d2;
                    i2 += (int)-2.101234;
                } while (++l2 < 1);
                i1 = i1;
                iArr[i13 - 1] = -115;
                i1 = (int)l3;
                try {
                    Test.iArrFld[i13 + 1] = (i2 % Test.iArrFld[i14]);
                    i1 = (i13 % iArr[i14 + 1]);
                    iArr[i14 + 1] = (i13 % -109);
                } catch (ArithmeticException a_e) {}
            }
            i1 = by;
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f1) + i13 + i14 + l2 + (b ? 1 : 0) + l3 +
            Double.doubleToLongBits(d2) + by + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, short s, int i) {

        double d=0.94715;
        float f=-127.555F;
        int i15=-3, i16=37116, i17=2, i18=-18663;
        byte by1=-10;
        short sArr[][]=new short[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)-17898);
        FuzzerUtils.init(lArr, 4808225008269524942L);

        i -= (i--);
        d *= (f + ((-30658 - (f++)) * i));
        f = (i = (++Test.iArrFld[(i >>> 1) % N]));
        vMeth1(i, i, Test.fFld);
        for (i15 = 1; 348 > i15; ++i15) {
            l = i;
            f += -12;
            Test.instanceCount = i16;
        }
        i16 = i15;
        sArr[(i >>> 1) % N][(i16 >>> 1) % N] -= (short)i15;
        i16 -= i16;
        by1 = (byte)i15;
        for (i17 = 165; i17 > 5; i17 -= 3) {
            if (i17 != 0) {
                vMeth_check_sum += l + s + i + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i15 + i16 + by1 +
                    i17 + i18 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
                return;
            }
            lArr[i17] <<= by1;
        }
        vMeth_check_sum += l + s + i + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i15 + i16 + by1 + i17 +
            i18 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=6, i20=-35413, i21=176, i22=-189, i23=-200, i24=-52438, i25=0, i26=3689, i27=8;
        long l4=13L;
        boolean b1=false;

        vMeth(10L, Test.sFld, i19);
        if (true) {
            Test.iArrFld[(i19 >>> 1) % N] = (int)-5099L;
        }
        for (i20 = 4; i20 < 390; i20 += 3) {
            Test.fFld += i21;
            i21 = 50407;
            for (l4 = 6; l4 < 196; ++l4) {
                Test.fFld += i21;
                switch (((i22 >>> 1) % 1) + 69) {
                case 69:
                    for (i23 = 1; i23 < 2; ++i23) {
                        i21 &= Test.sFld;
                        Test.instanceCount += i23;
                    }
                    i19 += (int)l4;
                    i22 = -14088;
                    break;
                }
                i25 = 2;
                do {
                    i21 <<= i25;
                    i24 = i25;
                    Test.iArrFld[(int)(l4 + 1)] = i22;
                    i24 = i23;
                    Test.instanceCount += (((i25 * i21) + i19) - i19);
                    Test.instanceCount += (i25 - Test.sFld);
                    i26 >>= 985;
                    i21 = (int)178L;
                    Test.sFld *= (short)i19;
                } while (--i25 > 0);
                i27 = 1;
                do {
                    i21 -= (int)l4;
                    b1 = b1;
                    if (b1) {
                        i22 >>= i27;
                        Test.instanceCount = Test.sFld;
                    } else if (b1) {
                        Test.instanceCount += i22;
                    }
                } while (++i27 < 2);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
