package tests.javafuzzer810;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:20:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=58L;
    public static short sFld=-9881;
    public static boolean bFld=false;
    public static volatile int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4816);
        FuzzerUtils.init(Test.fArrFld, 55.54F);
        FuzzerUtils.init(Test.lArrFld, -11L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        short s1=-32004;
        int i10=-3, i11=155, i12=-24045, i13=2, i14=-10, i15=0;
        byte by=-38;
        float f1=0.563F;
        long l=4439947101923500083L, lArr[]=new long[N];
        boolean b=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -8702366191305791444L);
        FuzzerUtils.init(dArr, -1.74799);

        Test.instanceCount |= s1;
        for (i10 = 11; 188 > i10; ++i10) {
            Test.instanceCount >>= by;
            i12 = 1;
            do {
                for (i13 = 1; i13 < 1; i13++) {
                    double d=1.68386;
                    s1 += (short)i14;
                    i9 = i8;
                    if (b) {
                        if (false) break;
                        i8 -= i14;
                        i8 *= i14;
                        switch (i12 + 94) {
                        case 94:
                            by *= (byte)251L;
                            i7 = -9;
                            break;
                        case 95:
                            i7 <<= (int)Test.instanceCount;
                            break;
                        case 96:
                            Test.instanceCount += (((i13 * Test.instanceCount) + i7) - i10);
                        case 97:
                            d = i7;
                        case 98:
                            i7 += i9;
                        case 99:
                        case 100:
                            i8 |= i14;
                            break;
                        case 101:
                            d = Test.instanceCount;
                            break;
                        case 102:
                            i11 += i13;
                            break;
                        case 103:
                            by -= (byte)i13;
                            break;
                        case 104:
                            i8 += (((i13 * f1) + i13) - i9);
                            break;
                        case 105:
                            i9 = i14;
                            break;
                        case 106:
                            Test.iArrFld[i10][i12 - 1] >>>= i10;
                            break;
                        case 107:
                            Test.iArrFld[i13 + 1][i10] = (int)4515809359946140416L;
                        case 108:
                            i11 += (int)(-2.918F + (i13 * i13));
                            break;
                        case 109:
                            Test.iArrFld[i10][i13 - 1] -= 238;
                            break;
                        case 110:
                            f1 += (10 + (i13 * i13));
                            break;
                        case 111:
                            d += d;
                            break;
                        case 112:
                            l += (244 + (i13 * i13));
                            break;
                        case 113:
                            i7 += (int)d;
                            break;
                        case 114:
                            i11 += (i13 | i11);
                            break;
                        case 115:
                            f1 += i13;
                            break;
                        case 116:
                            i9 = (int)Test.instanceCount;
                        case 117:
                            Test.iArrFld[i13][i13] -= (int)l;
                        case 118:
                            lArr[i12 - 1] -= i14;
                            break;
                        case 119:
                        case 120:
                            i7 += i13;
                            break;
                        case 121:
                            i11 *= (int)f1;
                        case 122:
                            Test.iArrFld[i12 - 1][i13] >>= -12;
                        case 123:
                            i11 -= (int)l;
                            break;
                        case 124:
                            i9 *= i14;
                            break;
                        case 125:
                        case 126:
                            i7 *= -16075;
                            break;
                        case 127:
                            Test.instanceCount += Test.instanceCount;
                            break;
                        case 128:
                            f1 += ((long)i13 ^ (long)f1);
                            break;
                        case 129:
                            by = (byte)5L;
                            break;
                        case 130:
                        case 131:
                            l += (((i13 * i11) + i13) - i15);
                            break;
                        case 132:
                            d -= i8;
                        case 133:
                            i15 = (int)Test.instanceCount;
                            break;
                        case 134:
                            if (true) break;
                            break;
                        case 135:
                            if (i13 != 0) {
                                vMeth1_check_sum += i7 + i8 + i9 + s1 + i10 + i11 + by + i12 + i13 + i14 +
                                    Float.floatToIntBits(f1) + l + i15 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                return;
                            }
                        case 136:
                            i7 += (((i13 * Test.instanceCount) + f1) - l);
                            break;
                        case 137:
                            Test.iArrFld[i10][i10] *= i11;
                            break;
                        case 138:
                            i11 -= i14;
                        case 139:
                            Test.instanceCount -= by;
                            break;
                        case 140:
                            i11 += i8;
                            break;
                        case 141:
                            Test.instanceCount = i7;
                        case 142:
                            i8 *= i7;
                            break;
                        case 143:
                            f1 += i13;
                            break;
                        case 144:
                            i11 >>= (int)-5L;
                        case 145:
                            i7 += i11;
                            break;
                        case 146:
                            i9 = i10;
                            break;
                        case 147:
                            i11 -= i10;
                            break;
                        case 148:
                            b = b;
                            break;
                        case 149:
                            l = i12;
                            break;
                        case 150:
                        case 151:
                            Test.iArrFld[i13][i13 + 1] = i7;
                            break;
                        case 152:
                            l += (((i13 * i12) + i8) - i10);
                        case 153:
                        case 154:
                            by ^= (byte)i13;
                            break;
                        case 155:
                            s1 += (short)i10;
                            break;
                        case 156:
                            i9 >>= i13;
                        case 157:
                            i8 = (int)1466528702L;
                        case 158:
                            Test.fArrFld = Test.fArrFld;
                            break;
                        case 159:
                            i15 += (((i13 * i15) + i8) - i11);
                            break;
                        case 160:
                            d -= f1;
                            break;
                        case 161:
                            i7 -= i7;
                            break;
                        case 162:
                            d += s1;
                            break;
                        case 163:
                            i7 += (int)(-32579L + (i13 * i13));
                            break;
                        }
                    } else if (b) {
                        dArr = dArr;
                    }
                }
            } while (++i12 < 9);
        }
        vMeth1_check_sum += i7 + i8 + i9 + s1 + i10 + i11 + by + i12 + i13 + i14 + Float.floatToIntBits(f1) + l + i15 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i3=-1, i4=-36956, i5=75, i6=-6, i16=-159, i17=54;
        double d1=-1.24737, dArr1[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -80L);
        FuzzerUtils.init(dArr1, 2.7626);

        for (i3 = 10; i3 < 173; i3++) {
            for (i5 = 10; i5 > 1; --i5) {
                vMeth1(-12, i5, i5);
                lArr1[i3 + 1] -= Test.instanceCount;
                i6 -= (int)Test.instanceCount;
                for (i16 = 2; i16 > 1; --i16) {
                    Test.iArrFld[i5 - 1][i3 + 1] = i4;
                    i6 <<= i17;
                    Test.instanceCount += Test.sFld;
                    dArr1[i3 - 1] -= i6;
                    i17 += (int)d1;
                    d1 *= i17;
                }
                i6 = i6;
                dArr1[i5 - 1] -= i3;
            }
            i4 *= i3;
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i16 + i17 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static int iMeth(int i1, float f) {

        int i2=-50346, i19=40, i20=977, i21=-51392, iArr1[]=new int[N];
        short s=-30166;
        double d2=0.59911;

        FuzzerUtils.init(iArr1, -11);

        iArr1[(i1 >>> 1) % N] = (int)(((-(76.89F - iArr1[(i1 >>> 1) % N])) + Math.abs(i1)) + i1);
        i2 = 160;
        while ((i2 -= 2) > 0) {
            s += (short)(i2 * i2);
            vMeth();
            for (i19 = i2; 19 > i19; i19++) {
                i1 -= i1;
                i21 = 1;
                while (++i21 < 1) {
                    i1 += (i21 * i21);
                    f += i2;
                    i1 >>= i20;
                    switch ((i19 % 5) + 41) {
                    case 41:
                        i20 += (i21 * i21);
                        if (Test.bFld) break;
                        i1 = i20;
                        break;
                    case 42:
                        Test.lArrFld[i19] -= i2;
                    case 43:
                        i20 >>= i21;
                        break;
                    case 44:
                        d2 = Test.instanceCount;
                    case 45:
                        Test.instanceCount *= i21;
                    default:
                        Test.instanceCount *= (long)d2;
                    }
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + s + i19 + i20 + i21 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-33695, i22=9, i23=144, i24=-5, i25=-11927, i26=-10, i27=-244, i28=2987, iArr[]=new int[N];
        float f2=58.590F;
        double d3=57.115357, dArr2[]=new double[N];
        byte by1=-105;
        long l1=2669551236L;

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(dArr2, 44.38129);

        iArr[(i >>> 1) % N] = ((-iMeth(2, f2)) - i);
        Test.instanceCount *= Test.sFld;
        Test.instanceCount -= i;
        Test.bFld = Test.bFld;
        iArr[(i >>> 1) % N] = i;
        f2 = Test.instanceCount;
        Test.iArrFld[(i >>> 1) % N][(i >>> 1) % N] = i;
        d3 -= d3;
        i22 = 1;
        while (++i22 < 185) {
            for (i23 = 3; i23 < 136; ++i23) {
                i >>>= (int)Test.instanceCount;
                try {
                    i = (i23 / iArr[i23]);
                    i = (186 % i23);
                    iArr[i22 + 1] = (-36391 % i24);
                } catch (ArithmeticException a_e) {}
                f2 += (((i23 * Test.sFld) + Test.instanceCount) - f2);
                i24 = by1;
                Test.instanceCount = Test.sFld;
                for (i25 = 2; i22 < i25; i25 -= 2) {
                    f2 += ((long)i25 ^ (long)i24);
                    Test.iArrFld[i22][i25] -= i26;
                    d3 = i;
                    Test.sFld = by1;
                    Test.instanceCount >>= -1959275564342622738L;
                    i24 += (i25 - f2);
                    Test.instanceCount -= -26;
                    dArr2[i25 + 1] -= -1;
                    Test.instanceCount >>= Test.instanceCount;
                }
                f2 += i;
                i26 += (i23 * i23);
                for (i27 = i22; i27 < 2; i27++) {
                    i24 *= 38875;
                    i = (int)l1;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
