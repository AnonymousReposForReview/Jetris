package tests.javafuzzer2270;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:12:42 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-739521532L;
    public double dFld=-1.90727;
    public int iFld=-11;
    public static int iFld1=-8;
    public static byte byFld=-14;
    public static double dFld1=95.113566;
    public static volatile float fFld=126.760F;
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5374L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i3=-20852, i4=17704, i5=11, i6=179, iArr2[]=new int[N];
        float f1=-1.870F;

        FuzzerUtils.init(iArr2, -1352);

        Test.iFld1 += Test.iFld1;
        for (i3 = 11; i3 < 232; ++i3) {
            double d=-104.64488;
            Test.instanceCount += (((i3 * i4) + Test.iFld1) - Test.iFld1);
            iArr2[i3 - 1] += (int)d;
            i4 = i4;
            l += (i3 - l);
            for (i5 = 1; i5 < 7; i5++) {
                try {
                    Test.iFld1 = (i3 % iArr2[i3 + 1]);
                    iArr2[i5 - 1] = (i3 / -48176);
                    iArr2[i3 - 1] = (63413 % i5);
                } catch (ArithmeticException a_e) {}
                switch ((((i3 >>> 1) % 5) * 5) + 36) {
                case 40:
                    if (true) continue;
                    break;
                case 45:
                    Test.instanceCount += (((i5 * Test.instanceCount) + i3) - i6);
                    Test.lArrFld[i3] -= 37794;
                    Test.iFld1 *= i3;
                    break;
                case 58:
                    f1 += (((i5 * i5) + Test.iFld1) - Test.byFld);
                    Test.iFld1 = i6;
                case 41:
                    iArr2[i5] = (int)l;
                case 50:
                    iArr2[i5] -= 5;
                default:
                    Test.iFld1 += (((i5 * Test.instanceCount) + l) - i3);
                }
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(float f) {

        int i7=6632, i8=-40871, i9=-16, i10=-7105, i11=41493, i12=-54256, i13=24274, i14=8, iArr1[]=new int[N];
        short s=13796;
        boolean b=false;

        FuzzerUtils.init(iArr1, 49854);

        iArr1[(-54008 >>> 1) % N] = (int)Math.abs(f * Test.iFld1);
        vMeth1(Test.instanceCount);
        Test.iFld1 += -32287;
        for (i7 = 330; i7 > 19; i7 -= 2) {
            for (i9 = 1; 10 > i9; i9++) {
                iArr1[i7] *= (int)Test.dFld1;
                f = (float)0.80305;
                s += (short)i7;
                i10 += i8;
            }
            if (b) break;
            for (i11 = i7; 10 > i11; i11++) {
                if (false) {
                    for (i13 = 1; i13 < 1; i13++) {
                        Test.instanceCount -= i7;
                        i10 *= Test.iFld1;
                    }
                } else {
                    i10 += i9;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + s + (b ? 1 : 0) + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i15=84, i16=148, i17=3255, i18=-23379, i19=-185, iArr[][]=new int[N][N];
        long l1=6260385688267420708L;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -36741);
        FuzzerUtils.init(dArr, 0.35726);

        iArr[(Test.iFld1 >>> 1) % N][(Test.iFld1 >>> 1) % N] = (int)(iMeth(Test.fFld) + 66.143F);
        for (i15 = 3; i15 < 322; i15++) {
            Test.dFld1 *= Test.instanceCount;
        }
        i16 = 17;
        for (i17 = 8; i17 < 135; ++i17) {
            Test.instanceCount >>>= i18;
            dArr[i17] = Test.instanceCount;
            Test.fFld += i16;
            if (i15 != 0) {
                vMeth_check_sum += i15 + i16 + i17 + i18 + l1 + i19 + FuzzerUtils.checkSum(iArr) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            if (true) {
                iArr[i17 - 1][i17 + 1] = i15;
                for (l1 = 12; l1 > 1; l1 -= 2) {
                    Test.byFld = (byte)i18;
                    i19 += (int)(l1 | i15);
                    Test.dFld1 = i18;
                }
            } else {
                Test.instanceCount = i18;
            }
        }
        vMeth_check_sum += i15 + i16 + i17 + i18 + l1 + i19 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-10, i1=-13, i2=-9, i20=-17395, i21=-77, i22=-38006, iArr3[]=new int[N];
        boolean b1=false;
        long l2=836039239854864119L;

        FuzzerUtils.init(iArr3, -4);

        i += (int)(((i / (Test.instanceCount | 1)) + dFld) - iFld);
        for (i1 = 393; 11 < i1; i1 -= 3) {
            vMeth();
            iArr3[i1 + 1] >>>= Test.iFld1;
            i += (((i1 * i) + i1) - i);
            Test.lArrFld[i1 + 1] += i2;
            Test.instanceCount += i1;
            Test.instanceCount -= Test.instanceCount;
        }
        if (false) {
            fArrFld = fArrFld;
        } else if (true) {
            iFld *= (int)6518630653798679079L;
            b1 = b1;
            i *= Test.iFld1;
        } else {
            iFld -= i2;
            b1 = b1;
            l2 = 1;
            do {
                i20 = 1;
                do {
                    Test.instanceCount -= i;
                    for (i21 = 1; i21 < 1; i21++) {
                        short s1=11391;
                        i = i22;
                        s1 *= (short)l2;
                        i2 = 42;
                        Test.iFld1 = Test.iFld1;
                        Test.instanceCount += (i21 ^ i21);
                        i -= i21;
                        i2 *= iFld;
                        i = i22;
                    }
                    Test.iFld1 += i20;
                } while (++i20 < 109);
                b1 = b1;
                Test.iFld1 -= (int)Test.instanceCount;
            } while (++l2 < 230);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
