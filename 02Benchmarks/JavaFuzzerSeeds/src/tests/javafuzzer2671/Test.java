package tests.javafuzzer2671;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:25:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static double dFld=0.105137;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 4880750358673699291L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by, long l1) {

        int i6=62691;

        i6 += i6;
        vMeth2_check_sum += by + l1 + i6;
    }

    public static void vMeth1() {

        byte by1=-113, byArr[]=new byte[N];
        int i7=12, i8=-7, i9=-225, i10=-102, i11=-13909, iArr[]=new int[N];
        double d=32.118127;
        float fArr[]=new float[N];

        FuzzerUtils.init(byArr, (byte)13);
        FuzzerUtils.init(iArr, 34);
        FuzzerUtils.init(fArr, -110.681F);

        vMeth2(by1, Test.instanceCount);
        for (byte by2 : byArr) {
            for (i7 = 1; i7 < 4; i7++) {
                Test.instanceCount += i8;
                iArr[i7 + 1] = i8;
                d *= Test.instanceCount;
                i9 = (int)Test.instanceCount;
                if (i7 != 0) {
                    vMeth1_check_sum += by1 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 +
                        FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                i10 = 1;
                while (++i10 < 2) {
                    i9 += (i10 | i10);
                    fArr[i10] += i7;
                }
            }
            i11 = 1;
            while (++i11 < 4) {
                i9 += (i11 ^ i10);
            }
            iArr[(i7 >>> 1) % N] = -10;
        }
        i8 = i8;
        vMeth1_check_sum += by1 + i7 + i8 + Double.doubleToLongBits(d) + i9 + i10 + i11 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i4, long l, int i5) {

        int i12=-13, i13=-116, i14=-35718, iArr1[]=new int[N];
        boolean b=false;
        short s=32521;

        FuzzerUtils.init(iArr1, 63316);

        vMeth1();
        iArr1[(i4 >>> 1) % N] = i4;
        i4 = i5;
        i12 = 279;
        while ((i12 -= 3) > 0) {
            if (b) break;
            i5 = i4;
            i4 = i4;
            Test.lArrFld[i12 + 1] += i12;
            i5 += i12;
        }
        Test.dFld = 411990270288528089L;
        b = b;
        for (i13 = 3; i13 < 124; ++i13) {
            try {
                i4 = (i13 % i12);
                i5 = (i4 / i12);
                i4 = (332625709 % iArr1[i13]);
            } catch (ArithmeticException a_e) {}
        }
        i5 = (int)-8028478036940225007L;
        i4 -= s;
        vMeth_check_sum += i4 + l + i5 + i12 + (b ? 1 : 0) + i13 + i14 + s + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-32353, i1=70, i2=18590, i3=-3, i15=47416, i16=-12, i17=-6, i18=-51973, iArr2[]=new int[N];
        float f=2.939F;
        byte by3=-73;
        short s1=23414;

        FuzzerUtils.init(iArr2, 1);

        for (i = 6; i < 346; ++i) {
            for (i2 = 1; i2 < 74; i2 += 2) {
                if (false) {
                    vMeth(i1, Test.instanceCount, i);
                    i1 += (i2 + i1);
                } else {
                    switch ((i % 2) + 68) {
                    case 68:
                    case 69:
                        f += f;
                    }
                    i3 += i2;
                }
                i1 -= (int)f;
                by3 >>= (byte)Test.instanceCount;
                i3 = (int)Test.instanceCount;
                f *= -38;
                for (i15 = 1; i15 < 3; ++i15) {
                    by3 = (byte)Test.instanceCount;
                    iArr2[i15] = (int)f;
                    iArr2 = iArr2;
                    i1 -= (int)Test.instanceCount;
                    iArr2[i - 1] += 6;
                }
                f = i15;
                for (i17 = 1; i17 < 3; i17++) {
                    i1 = -9;
                    Test.dFld = -36626;
                    s1 += (short)(((i17 * f) + i1) - Test.instanceCount);
                    i16 = (int)Test.dFld;
                    Test.instanceCount -= i3;
                    i16 <<= (int)Test.instanceCount;
                    i3 = (int)f;
                    if (Test.bFld) continue;
                    i18 <<= -246;
                }
            }
            Test.instanceCount = i16;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
