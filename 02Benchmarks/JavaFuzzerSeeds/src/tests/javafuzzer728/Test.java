package tests.javafuzzer728;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:42:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2962243638L;
    public static boolean bFld=true;
    public byte byFld=-106;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -101.646F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9) {

        int i10=-14, i11=6, i12=40285, i13=7, i14=-180, i15=205, i16=56429, iArr1[]=new int[N];
        float f1=40.912F;

        FuzzerUtils.init(iArr1, 0);

        for (i10 = 5; i10 < 234; ++i10) {
            i9 = i9;
            if (Test.bFld) break;
            i11 += (int)(33630L + (i10 * i10));
            Test.fArrFld[i10 - 1] = i11;
            i9 *= (int)Test.instanceCount;
            f1 += (((i10 * f1) + i10) - i10);
            for (i12 = 1; i12 < 7; ++i12) {
                for (i14 = 2; 1 < i14; i14 -= 2) {
                    Test.instanceCount += i14;
                }
                Test.instanceCount *= Test.instanceCount;
                if (false) break;
                i16 = 1;
                do {
                    iArr1[i16] >>>= i10;
                    i9 -= i10;
                } while (++i16 < 2);
            }
        }
        long meth_res = i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i7=32818, i8=-61993, i17=26056, i18=0, iArr[]=new int[N];
        byte by=90;
        float f2=-63.503F;
        double d1=122.60462;

        FuzzerUtils.init(iArr, 59);

        for (int i6 : iArr) {
            short s=-30522;
            if ((!(!(-15953 < i6))) && Test.bFld) break;
            if ((((i6 * 4703) + (-15480 - (--iArr[(i6 >>> 1) % N]))) * ((i6 * s) + i6)) <= (--i6)) continue;
            for (i7 = 1; i7 < 4; i7++) {
                by >>>= (byte)(i8 * iMeth(i8));
                if (false) continue;
                try {
                    i8 = (i7 / 85);
                    i8 = (i8 / i7);
                    i6 = (1290901583 / i8);
                } catch (ArithmeticException a_e) {}
                for (i17 = 1; i17 < 2; ++i17) {
                    if (false) {
                        i18 >>>= -214;
                        f2 *= (float)0.28057;
                        Test.instanceCount += (3052797809L + (i17 * i17));
                    } else if (Test.bFld) {
                        Test.instanceCount = i8;
                        Test.bFld = Test.bFld;
                        f2 += -7863;
                    } else {
                        d1 += i7;
                    }
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + by + i17 + i18 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i4, int i5) {


        i4 <<= (-(--i4));
        vMeth1();
        Test.instanceCount = -57494;
        vMeth_check_sum += i4 + i5;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i1=-5, i2=-10199, i3=14, i19=8, i20=0, i21=0, i22=-10466, i23=131, i24=1309, i25=226, iArr2[]=new
            int[N];
        float f=-2.347F;
        double d=-89.7864, d2=111.124907;

        FuzzerUtils.init(iArr2, -236);

        i += (int)f;
        i ^= (int)Test.instanceCount;
        for (d = 13; d < 250; ++d) {
            for (i2 = 2; i2 < 106; ++i2) {
                vMeth(i3, i);
                d2 -= 1;
                Test.instanceCount += i;
            }
            f += -49240;
            for (i19 = 2; i19 < 106; ++i19) {
                i1 += (int)Test.instanceCount;
                for (i21 = 1; i21 < 2; i21++) {
                    Test.instanceCount = 91;
                    Test.instanceCount = i23;
                    i = (int)d2;
                    Test.instanceCount = i21;
                    f *= -53258;
                    i3 >>= i19;
                }
                f *= 59;
                i22 = i20;
                Test.instanceCount >>= 3694258149L;
                iArr2[(int)(d + 1)] >>>= i20;
            }
            i += (int)(((d * Test.instanceCount) + i3) - Test.instanceCount);
            for (i24 = 1; i24 < 106; i24++) {
                Test.instanceCount >>= i22;
                i = (int)d;
                i25 = (int)Test.instanceCount;
                Test.instanceCount += (i24 * i24);
                Test.instanceCount = Test.instanceCount;
                Test.fArrFld[i24 - 1] = 224;
                byFld -= (byte)66;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
