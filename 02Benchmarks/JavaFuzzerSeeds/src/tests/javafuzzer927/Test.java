package tests.javafuzzer927;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:49:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static double dFld=-89.14472;
    public static short sFld=-12699;
    public static float fFld=98.783F;
    public static int iFld=-221;
    public byte byFld=47;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4) {

        int i5=3, i6=-4945;
        float f1=71.496F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 61.664F);

        for (i5 = 13; i5 < 316; i5++) {
            i3 += (int)f1;
            i3 = (int)Test.dFld;
            fArr[i5 - 1] = Test.sFld;
        }
        i3 -= i5;
        i4 += i5;
        Test.instanceCount -= (long)f1;
        vMeth2_check_sum += i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(byte by, short s) {

        int i7=-5, i8=30150, i9=-242, i10=32422, i11=8424, i12=-176, i13=10, i14=-37;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -126.837F);

        vMeth2(i7, i7);
        for (i8 = 18; i8 < 362; i8++) {
            i7 += (((i8 * i8) + i8) - i9);
            switch (((i8 % 2) * 5) + 82) {
            case 87:
                for (i10 = 5; i10 > i8; i10 -= 2) {
                    Test.fFld *= i8;
                    for (i12 = 1; i12 < 1; i12++) {
                        i9 += (((i12 * i9) + i12) - Test.fFld);
                        Test.instanceCount += (i12 * i12);
                        i9 += (((i12 * i10) + i13) - i12);
                        fArr1[i12] *= Test.instanceCount;
                        Test.instanceCount &= s;
                        i13 = s;
                        Test.instanceCount += (i12 ^ i14);
                        Test.iArrFld[i12] -= i13;
                    }
                }
                break;
            case 89:
                Test.instanceCount = i10;
                break;
            }
        }
        vMeth1_check_sum += by + s + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(float f, int i) {

        int i1=9, i2=-57517, i15=35, i16=-14078, i17=-7796, i18=134, i19=-102, i20=7818;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 43607L);
        FuzzerUtils.init(dArr, 1.63127);

        i = Math.abs(i);
        for (i1 = 5; i1 < 179; ++i1) {
            f -= (Test.instanceCount >>> -1);
            i -= i2;
            vMeth1((byte)(69), (short)(-9443));
        }
        for (i15 = 318; i15 > 16; i15 -= 2) {
            for (i17 = 10; 1 < i17; --i17) {
                lArr[i17] = i2;
                Test.instanceCount += i2;
                dArr[i17 - 1] = i;
            }
            Test.instanceCount *= Test.instanceCount;
            Test.instanceCount = i2;
            for (i19 = 10; i19 > 1; i19--) {
                Test.dFld = i1;
                Test.iFld += Test.iFld;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i15 + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        long l=-4444112377544540564L, lArr1[]=new long[N];
        int i21=10, i22=-63763, i23=-9, iArr[][]=new int[N][N];
        double d=0.110952, dArr1[]=new double[N];
        float fArr2[]=new float[N];

        FuzzerUtils.init(fArr2, -32.814F);
        FuzzerUtils.init(lArr1, 213L);
        FuzzerUtils.init(iArr, 11715);
        FuzzerUtils.init(dArr1, 0.32193);

        vMeth(-2.636F, Test.iFld);
        switch (((Test.iFld >>> 1) % 7) + 79) {
        case 79:
            Test.dFld = Test.sFld;
            Test.instanceCount = Test.instanceCount;
            for (float f2 : fArr2) {
                Test.iFld = Test.iFld;
                for (l = 2; l < 63; l++) {
                    for (i22 = 2; i22 > 1; --i22) {
                        Test.iArrFld[(-14 >>> 1) % N] += (int)Test.fFld;
                        lArr1[(int)(l + 1)] += i21;
                        i21 += (((i22 * i23) + Test.instanceCount) - Test.iFld);
                        Test.iArrFld = Test.iArrFld;
                        Test.iArrFld[i22 + 1] = i21;
                        i23 += i22;
                        Test.iFld -= i23;
                        switch (((i23 >>> 1) % 8) + 125) {
                        case 125:
                            switch ((int)((l % 8) + 89)) {
                            case 89:
                                Test.iArrFld[i22] = (int)Test.instanceCount;
                                Test.fFld += i23;
                                break;
                            case 90:
                                lArr1[i22] ^= i21;
                                i21 = i21;
                                break;
                            case 91:
                                f2 += (((i22 * i23) + i22) - i22);
                                Test.sFld -= (short)i22;
                                break;
                            case 92:
                                Test.instanceCount += (i22 * i22);
                                break;
                            case 93:
                                i21 = i23;
                                Test.iArrFld = Test.iArrFld;
                                iArr = FuzzerUtils.int2array(N, (int)179);
                                break;
                            case 94:
                                Test.iFld += Test.iFld;
                                break;
                            case 95:
                                if (true) break;
                                byFld += (byte)(((i22 * Test.fFld) + l) - l);
                                break;
                            case 96:
                                Test.instanceCount = Test.iFld;
                            }
                        case 126:
                            Test.instanceCount -= (long)Test.dFld;
                            break;
                        case 127:
                        case 128:
                            Test.instanceCount = Test.iFld;
                            break;
                        case 129:
                            i23 = (int)l;
                        case 130:
                            i23 = i22;
                        case 131:
                            Test.dFld *= Test.dFld;
                            break;
                        case 132:
                            lArr1[(int)(l)] = Test.iFld;
                            break;
                        }
                    }
                }
            }
            break;
        case 80:
            dArr1[(i21 >>> 1) % N] = Test.iFld;
            break;
        case 81:
        case 82:
            bFld = bFld;
            break;
        case 83:
            d -= Test.instanceCount;
            break;
        case 84:
            i21 *= (int)Test.fFld;
        case 85:
            i23 += (int)d;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
