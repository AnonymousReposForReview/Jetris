package tests.javafuzzer2648;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:59:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-665969155L;
    public static boolean bFld=false;
    public static int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 250);
        FuzzerUtils.init(Test.lArrFld, 3247858586L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3) {

        int i4=1, i5=-52, i6=8, i7=73, i8=-195, i9=-48;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 343231092L);

        i3 = (int)Test.instanceCount;
        lArr[(-64426 >>> 1) % N] = i3;
        Test.instanceCount = i3;
        for (i4 = 19; 329 > i4; ++i4) {
            i5 -= i3;
            i3 -= i4;
            for (i6 = 1; i6 < 5; ++i6) {
                i3 -= -15073;
                switch ((i4 % 1) + 104) {
                case 104:
                    i7 += (i6 * Test.instanceCount);
                    break;
                }
                i3 += i4;
                for (i8 = i4; i8 < 2; ++i8) {
                    Test.instanceCount += i8;
                    i3 = (int)Test.instanceCount;
                    i3 += i8;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        int i2=119, i10=7;
        byte by=-90;
        double d1=-1.113423;
        float f=-2.557F;
        short s1=-6254;

        i2 <<= i2;
        Test.iArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N] += (int)Test.instanceCount;
        vMeth2(i2);
        by /= (byte)-24.106225;
        i2 = i2;
        Test.iArrFld[(32 >>> 1) % N][(i2 >>> 1) % N] += by;
        for (d1 = 3; 365 > d1; ++d1) {
            f -= s1;
            Test.iArrFld[(int)(d1 - 1)][(int)(d1)] >>>= s1;
            by -= (byte)189;
            try {
                i10 = (i2 % 72);
                i10 = (154 % i2);
                i10 = (170 / i10);
            } catch (ArithmeticException a_e) {}
        }
        vMeth1_check_sum += i2 + by + Double.doubleToLongBits(d1) + i10 + Float.floatToIntBits(f) + s1;
    }

    public static void vMeth(long l, int i1) {

        int i11=116, i12=44483, i13=-8, i14=57, i15=7, i16=-233, i17=95, i18=-99;
        short s2=12870;
        byte by1=55;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -66.97173);

        vMeth1();
        i11 = 1;
        do {
            i1 = i1;
        } while (++i11 < 372);
        i12 = 1;
        do {
            for (i13 = i12; 5 > i13; i13++) {
                float f1=7.887F;
                i1 += (((i13 * f1) + i14) - i14);
                for (i15 = 1; 1 > i15; i15++) {
                    dArr[i13 + 1] += i13;
                    Test.instanceCount *= 0;
                    Test.instanceCount -= i17;
                    i18 += (((i15 * i13) + i17) - f1);
                    l += i15;
                    Test.instanceCount -= s2;
                }
                i18 += (((i13 * i14) + by1) - i11);
                by1 += (byte)i13;
            }
        } while (++i12 < 324);
        vMeth_check_sum += l + i1 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + s2 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        double d=118.83344;
        short s=-12568;
        int i=-11, i19=0, i20=-35987, i21=14, i22=4, iArr[]=new int[N];
        byte by2=-25;
        float f2=-7.183F;

        FuzzerUtils.init(iArr, -202);

        d = 373;
        while (--d > 0) {
            s = (short)((i + (i - i)) + (--i));
            iArr[(int)(d - 1)] = i;
            vMeth(Test.instanceCount, -146);
            i >>= by2;
            f2 -= -60151L;
            i = (int)f2;
            i |= s;
        }
        i *= i;
        Test.instanceCount &= Test.instanceCount;
        i *= 6;
        i19 = 173;
        while (--i19 > 0) {
            i = i19;
            iArr[i19] = (int)-9L;
            s = (short)38468;
            switch ((i19 % 2) + 76) {
            case 76:
                f2 = i19;
                break;
            case 77:
                i20 = 1;
                while (++i20 < 145) {
                    i >>= i21;
                    i22 = 1;
                    while (++i22 < 1) {
                        Test.instanceCount -= Test.instanceCount;
                        i21 += by2;
                        Test.instanceCount = i20;
                        i = i22;
                        if (Test.bFld) continue;
                        f2 = (float)d;
                        i21 += (i22 ^ (long)f2);
                    }
                    Test.lArrFld[i19] = i21;
                    by2 = (byte)Test.instanceCount;
                    if (Test.bFld) continue;
                }
                break;
            default:
                i = (int)Test.instanceCount;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
