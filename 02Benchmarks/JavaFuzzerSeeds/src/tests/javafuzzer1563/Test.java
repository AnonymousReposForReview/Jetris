package tests.javafuzzer1563;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:59:23 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static float fFld=0.11F;
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -89);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i2, long l1) {

        float f1=-30.598F;
        int iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, 5);

        iArr[(i2 >>> 1) % N][(i2 >>> 1) % N] = (int)f1;
        Test.instanceCount = l1;
        long meth_res = i2 + l1 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(long l, int i1) {

        int i3=11, i4=-186, i5=-2, i6=6, i7=11838, i8=-2, i9=-13;
        float f2=44.132F;
        double d=-90.75242;
        byte by=-80;

        Test.instanceCount -= (iMeth2(8119, l) >> i1);
        for (i3 = 3; i3 < 352; i3++) {
            if (false) {
                i5 = 1;
                while (++i5 < 5) {
                    for (i6 = 1; 1 > i6; i6++) {
                        i4 += i6;
                        i4 += (14 + (i6 * i6));
                        Test.instanceCount = i5;
                        i1 |= (int)l;
                        i1 += (i6 * Test.instanceCount);
                    }
                    i1 += i5;
                    i1 += (((i5 * f2) + f2) - f2);
                    for (i8 = 1; i8 < 1; i8++) {
                        l = (long)d;
                        by = (byte)-62753;
                    }
                }
            }
        }
        long meth_res = l + i1 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i8 + i9 +
            Double.doubleToLongBits(d) + by;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(float f, int i) {

        int i10=-2, i11=-46140, i12=-5164, i13=-32, i14=-14, i15=14, i16=-6055, i17=241;
        double d1=0.63042;

        f = (-(-(Test.instanceCount | i)));
        iMeth1(Test.instanceCount, 8);
        i = i;
        i += (int)2.711F;
        for (i10 = 181; 6 < i10; i10--) {
            Test.instanceCount += i10;
        }
        for (i12 = 9; i12 < 150; ++i12) {
            for (i14 = i12; i14 < 11; i14++) {
                i11 -= (int)Test.instanceCount;
                for (i16 = 1; i16 < 1; i16++) {
                    i17 = 18053;
                    f = i;
                    i = (int)72L;
                    d1 = 51314;
                    Test.instanceCount = i10;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(d1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=64845, i19=-5, i20=-36250, i21=164, i22=58093, i23=44893, i24=6, i25=156, i26=-18, i27=130;
        byte by1=90;
        short s=-32659;

        iMeth(Test.fFld, -23665);
        i18 = 1;
        do {
            switch ((i18 % 7) + 106) {
            case 106:
                i19 += i18;
                i19 += (int)(1738107825L + (i18 * i18));
                i19 >>= i18;
                Test.instanceCount ^= 213;
                break;
            case 107:
                by1 += (byte)(i18 | s);
            case 108:
                Test.instanceCount = (long)-2.110847;
                lArrFld[i18 - 1] -= by1;
                i19 += (((i18 * Test.instanceCount) + Test.instanceCount) - by1);
                for (i20 = 5; i20 < 85; i20++) {
                    i19 = i19;
                }
                break;
            case 109:
                Test.iArrFld[i18 - 1] = i21;
                s *= (short)Test.instanceCount;
            case 110:
                for (i22 = 2; i22 < 85; i22++) {
                    i19 -= i20;
                    i23 >>= (int)Test.instanceCount;
                }
                try {
                    i21 = (i21 % i20);
                    i19 = (-93 % Test.iArrFld[i18 - 1]);
                    i21 = (i23 % i22);
                } catch (ArithmeticException a_e) {}
                for (i24 = i18; 85 > i24; ++i24) {
                    for (i26 = i24; i26 < 1; i26++) {
                        i19 = (int)Test.instanceCount;
                        i21 += (i26 * i26);
                        i25 <<= (int)Test.instanceCount;
                        i27 *= 8;
                        i27 = i27;
                        i27 >>>= (int)Test.instanceCount;
                    }
                    i27 += (8 + (i24 * i24));
                    i23 += (i24 + i21);
                    Test.instanceCount = i27;
                }
                break;
            case 111:
                Test.iArrFld = Test.iArrFld;
            case 112:
                Test.instanceCount -= i18;
                break;
            }
        } while (++i18 < 296);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
