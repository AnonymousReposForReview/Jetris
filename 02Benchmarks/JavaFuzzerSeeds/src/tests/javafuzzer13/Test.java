package tests.javafuzzer13;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-147L;
    public static short sFld=14138;
    public float fFld=1.443F;
    public boolean bFld=true;
    public static volatile float fArrFld[]=new float[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 66.277F);
        FuzzerUtils.init(Test.lArrFld, 2758030181L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i3=-56056, i4=8, i5=220, i6=13931, iArr[]=new int[N];
        byte by=74;
        double d=103.15454;
        short s=30006;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -89L);
        FuzzerUtils.init(iArr, -12);

        for (i3 = 10; 192 > i3; ++i3) {
            i5 = 1;
            do {
                i4 = (int)Test.instanceCount;
                lArr[i3 - 1] <<= i3;
                i6 = 1;
                while (++i6 < 1) {
                    i4 *= i4;
                    i4 += by;
                    Test.instanceCount += (15110 + (i6 * i6));
                    iArr[i5] = (int)Test.instanceCount;
                    switch ((i6 % 9) + 4) {
                    case 4:
                        i4 *= i5;
                        i4 ^= i5;
                        Test.instanceCount += (((i6 * i4) + i6) - Test.instanceCount);
                        break;
                    case 5:
                        Test.instanceCount >>= i3;
                        break;
                    case 6:
                        lArr = lArr;
                        break;
                    case 7:
                        d = s;
                        break;
                    case 8:
                        i4 += (((i6 * i4) + i6) - i5);
                        break;
                    case 9:
                        b = b;
                        break;
                    case 10:
                    case 11:
                        i4 = i3;
                        break;
                    case 12:
                        lArr[i6 + 1] += -10;
                        break;
                    }
                }
            } while (++i5 < 9);
        }
        long meth_res = i3 + i4 + i5 + i6 + by + Double.doubleToLongBits(d) + s + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l) {

        int i2=17717, i7=68, i8=76, iArr1[]=new int[N];
        byte by1=125;
        float f=-2.196F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -53042);
        FuzzerUtils.init(lArr1, 876216361L);

        i2 = iMeth();
        iArr1[(i2 >>> 1) % N] >>>= i2;
        i2 *= (int)Test.instanceCount;
        lArr1[(i2 >>> 1) % N] >>= 210;
        Test.instanceCount %= (i2 | 1);
        Test.fArrFld[(i2 >>> 1) % N] = by1;
        for (i7 = 8; i7 < 188; i7 += 3) {
            i8 += (-6 + (i7 * i7));
            i8 *= i2;
            Test.sFld += (short)75;
            if (false) {
                i2 >>= i8;
                i2 += (i7 - f);
                l += (i7 - i2);
                i8 |= i2;
            }
        }
        vMeth1_check_sum += l + i2 + by1 + i7 + i8 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void vMeth(int i) {

        int i1=-5, i9=-211, i10=-244, i11=78, i12=5, i13=39331, i14=-102, iArr2[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, 249);
        FuzzerUtils.init(dArr, -19.110320);

        i1 = 287;
        while (--i1 > 0) {
            vMeth1(Test.instanceCount);
            for (i9 = 1; i9 < 6; i9++) {
                for (i11 = 1; i11 < 2; ++i11) {
                    iArr2[i9 + 1] -= i10;
                    dArr[i11] = i;
                    i = i1;
                    fFld += i11;
                }
                i12 = 100;
                i = i;
                Test.instanceCount = i9;
                for (i13 = 2; i13 > 1; --i13) {
                    Test.instanceCount += Test.instanceCount;
                    i14 += i13;
                    i10 -= i9;
                }
            }
        }
        vMeth_check_sum += i + i1 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i15=-13, i16=3, i17=14, i18=1700, i19=-219, i20=249, i21=-58984, i22=-63598, i23=-14, i24=38380,
            iArr3[]=new int[N];
        byte by2=31;
        double d1=8.57862;
        float f1=2.323F;

        FuzzerUtils.init(iArr3, -64);

        vMeth(i15);
        i16 = 1;
        do {
            i15 <<= i16;
            iArr3[i16 + 1] ^= i16;
            iArr3[i16 - 1] = by2;
            for (i17 = 7; i17 < 124; i17++) {
                Test.fArrFld[i16 - 1] = -14;
            }
            for (i19 = 4; i19 < 124; ++i19) {
                for (i21 = 1; i21 < 2; i21++) {
                    i20 = i21;
                    i18 = (int)fFld;
                    Test.instanceCount = i22;
                }
                i23 = 1;
                do {
                    Test.lArrFld[i23 + 1][i23 - 1] *= i22;
                    fFld /= (i18 | 1);
                } while (++i23 < 2);
                i24 = 1;
                while ((i24 += 2) < 2) {
                    i15 = i22;
                    i20 = i20;
                    bFld = true;
                    fFld -= (float)d1;
                    iArr3[i24 - 1] <<= (int)Test.instanceCount;
                    switch (((i16 % 4) * 5) + 56) {
                    case 59:
                        Test.instanceCount = Test.instanceCount;
                        Test.sFld = (short)-48577;
                        fFld += (((i24 * i21) + i22) - i18);
                        fFld += i18;
                        break;
                    case 76:
                        i20 = i15;
                    case 72:
                        i18 += (i24 | (long)f1);
                        f1 = f1;
                        i22 += (((i24 * i15) + i16) - fFld);
                        break;
                    case 74:
                        d1 = i21;
                        break;
                    default:
                        f1 -= 166;
                    }
                }
            }
        } while (++i16 < 202);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
