package tests.javafuzzer2790;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:03:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=20658L;
    public static volatile int iFld=-58390;
    public static float fFld=1.730F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i8) {

        int i9=-11, i10=-5, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 14);

        iArr[(i8 >>> 1) % N] += i8;
        i8 <<= i8;
        for (i9 = 1; i9 < 150; ++i9) {
            i10 += 18;
            Test.instanceCount = 118;
            i10 += i9;
        }
        long meth_res = i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i5, int i6) {

        int i7=-114, i11=-3, i12=-172, i13=48671, iArr1[]=new int[N];
        byte by=10;
        float f1=-107.1020F;
        double d1=-35.44927;
        short s=24893;

        FuzzerUtils.init(iArr1, 59731);

        i7 = 332;
        while (--i7 > 0) {
            by = (byte)((i5++) + -88.66192);
            f1 *= 14;
        }
        sMeth(i7);
        for (i11 = 3; 255 > i11; ++i11) {
            d1 = 33L;
            i13 = 6;
            do {
                i5 += (i13 ^ i5);
                i6 *= (int)Test.instanceCount;
                by = (byte)i11;
                by -= (byte)i11;
            } while (--i13 > 0);
            iArr1[i11] >>= i13;
            s += (short)(-254 + (i11 * i11));
            iArr1[i11] -= 17278;
            Test.instanceCount = Test.instanceCount;
        }
        vMeth1_check_sum += i5 + i6 + i7 + by + Float.floatToIntBits(f1) + i11 + i12 + Double.doubleToLongBits(d1) +
            i13 + s + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(double d, int i, int i1) {

        int i2=242, i3=-116, i4=7, i14=-62635, i15=-9, iArr2[]=new int[N];
        float f=56.621F, f2=0.251F;
        boolean b=true;

        FuzzerUtils.init(iArr2, 128);

        for (i2 = 3; i2 < 124; ++i2) {
            for (f = 1; f < 13; f++) {
                vMeth1(i1, 194);
                for (i14 = 1; i14 < 2; ++i14) {
                    Test.instanceCount = 471309535L;
                    Test.instanceCount += i14;
                    iArr2[i2] *= (int)d;
                    Test.instanceCount -= i;
                    Test.instanceCount += -20755;
                    f2 += (i14 * i3);
                    Test.instanceCount += i2;
                    i4 *= (int)Test.instanceCount;
                    if (b) break;
                }
                i15 += (int)f;
                i1 -= (int)1.82226;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + i14 + i15 +
            Float.floatToIntBits(f2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d2=107.35775;
        int i16=-173, i17=44910, i18=46250, i19=-6, i20=103, i21=-251, i22=46312, i23=-232, i24=144, i25=-46186,
            i26=-1, iArr3[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr3, 7);

        vMeth(d2, 5, Test.iFld);
        for (i16 = 4; 219 > i16; i16++) {
            i18 = 1;
            while (++i18 < 117) {
                Test.instanceCount += (-3935L + (i18 * i18));
                Test.iFld -= i17;
            }
            for (i19 = 5; i19 < 117; ++i19) {
                b1 = b1;
                Test.instanceCount -= Test.instanceCount;
                iArr3[i19 - 1] >>>= i20;
                i17 = -15;
                Test.iFld -= Test.iFld;
                if (b1) break;
                i21 = 1;
                do {
                    Test.fFld *= i20;
                    Test.instanceCount = Test.instanceCount;
                    i17 -= -14045;
                    if (b1) continue;
                    iArr3[i16 + 1] += (int)25.835F;
                    i20 += -1;
                } while (++i21 < 2);
                Test.instanceCount -= i21;
            }
            for (i22 = 117; i22 > 3; --i22) {
                i24 = 1;
                do {
                    if (b1) continue;
                    if (b1) break;
                } while (++i24 < 2);
                i23 = i20;
                for (i25 = 1; i25 < 2; i25++) {
                    Test.instanceCount += i25;
                    d2 = 67.206F;
                    Test.iFld = i16;
                    i26 -= (int)Test.instanceCount;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
