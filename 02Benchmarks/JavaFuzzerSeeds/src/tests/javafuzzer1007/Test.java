package tests.javafuzzer1007;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:49:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=243L;
    public static byte byFld=70;

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3, int i4) {

        int i5=-46441, i6=47387, i7=-63628;
        float f2=-32.912F;
        boolean b=true;

        i5 = 1;
        while (++i5 < 382) {
            double d1=0.72383;
            i3 = i4;
            i3 = 44;
            d1 += i4;
            Test.instanceCount = i4;
            f2 *= -13159;
            i4 = i4;
            i4 += (((i5 * f2) + i5) - Test.instanceCount);
            i3 += (int)Test.instanceCount;
            i4 += (i5 ^ Test.instanceCount);
        }
        i4 <<= i3;
        for (i6 = 9; 147 > i6; i6++) {
            if (b) {
                Test.instanceCount /= (Test.instanceCount | 1);
            } else if (false) {
                i3 -= (int)f2;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f2) + i6 + i7 + (b ? 1 : 0);
    }

    public static long lMeth(long l, int i2) {

        float f1=43.516F;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 5);

        f1 = (-iArr1[(i2 >>> 1) % N]);
        vMeth(i2, i2);
        i2 = i2;
        long meth_res = l + i2 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f, double d) {

        int i=1, i1=-38196, i8=109, i9=-6, iArr[]=new int[N];
        short s=-7938, sArr[]=new short[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(fArr, 0.261F);
        FuzzerUtils.init(sArr, (short)-11833);

        for (i = 7; i < 165; i++) {
            byte by=-18;
            i1 = s;
            i1 = (++i1);
            switch (((i % 8) * 5) + 95) {
            case 117:
                d *= (iArr[i + 1] >>= (int)(i % (lMeth(Test.instanceCount, 46274) | 1)));
                i1 = i1;
                fArr = fArr;
                break;
            case 126:
                i1 = i;
                iArr[i] *= i;
                break;
            case 119:
                Test.instanceCount = -43843;
                d += f;
                Test.instanceCount += 95;
                for (i8 = 10; i8 > 1; i8--) {
                    sArr = sArr;
                }
                break;
            case 116:
            case 107:
            case 101:
                by += (byte)(i + f);
            case 132:
                Test.instanceCount += Test.instanceCount;
                break;
            case 123:
                d = -8;
                break;
            default:
                iArr[i + 1] = -23635;
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i + i1 + s + i8 + i9 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f3=0.540F;
        double d2=-7.15431;
        int i10=-228, i11=-13, i12=86, i13=-112, i14=-166, i15=-36052, i16=-54915, i17=1, i18=-42, i19=-85, i20=-11,
            iArr2[]=new int[N];
        boolean b1=false;
        short s1=-19224;

        FuzzerUtils.init(iArr2, 41768);

        iMeth(f3, d2);
        for (i10 = 10; 188 > i10; ++i10) {
            i11 &= i10;
            b1 = b1;
            for (i12 = i10; i12 < 141; i12++) {
                i13 -= 147;
                i14 = 1;
                while (++i14 < 1) {
                    iArr2 = iArr2;
                }
                i13 *= (int)3409347539251885324L;
                i11 = i11;
            }
            Test.instanceCount ^= i13;
        }
        for (i15 = 6; i15 < 391; i15++) {
            iArr2[i15] = i13;
            if (b1) continue;
            i11 = i14;
            i13 >>= (int)Test.instanceCount;
            i13 -= i13;
        }
        i17 = 141;
        while (--i17 > 0) {
            i11 = (int)Test.instanceCount;
            for (i18 = 5; i18 < 178; i18 += 2) {
                i20 = 1;
                while (++i20 < 3) {
                    s1 -= (short)i20;
                    i19 = i10;
                    s1 -= (short)i20;
                    i13 -= 26031;
                    i11 -= i16;
                    i19 >>= i13;
                    i16 <<= i16;
                    i11 += (i20 * i20);
                }
                i11 += (((i18 * Test.byFld) + i16) - f3);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
