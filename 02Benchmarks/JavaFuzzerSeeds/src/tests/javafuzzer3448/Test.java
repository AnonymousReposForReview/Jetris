package tests.javafuzzer3448;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:29:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=9L;
    public static int iFld=-12;
    public static short sFld=-6645;
    public static boolean bFld=true;
    public static float fFld=-114.51F;
    public short sFld1=-11063;
    public static long lArrFld[]=new long[N];
    public static volatile byte byArrFld[]=new byte[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 8291545315009141297L);
        FuzzerUtils.init(Test.byArrFld, (byte)-48);
        FuzzerUtils.init(Test.fArrFld, -63.173F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, int i10, float f2) {

        int i11=17386, i12=-166, i13=86, i14=8968, i15=31, i16=9, i17=237;
        byte by=-46;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -90.235F);

        Test.lArrFld[(i9 >>> 1) % N] <<= Test.instanceCount;
        fArr[(Test.iFld >>> 1) % N] -= Test.instanceCount;
        i9 <<= -3;
        for (i11 = 9; i11 < 198; ++i11) {
            i9 -= (int)Test.instanceCount;
            Test.instanceCount /= (by | 1);
            switch ((i11 % 2) + 48) {
            case 48:
                if (Test.bFld) continue;
                i12 = i13;
                Test.instanceCount += i9;
                for (i14 = 1; i14 < 8; i14++) {
                    for (i16 = 1; i16 < 2; i16++) {
                        f2 += i10;
                        if (Test.bFld) continue;
                        Test.byArrFld[i11 + 1] <<= (byte)Test.iFld;
                    }
                }
                break;
            case 49:
                Test.instanceCount += (i11 * i11);
                break;
            default:
                i10 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 + by + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        long l=38721L, lArr[]=new long[N];
        int i7=46226, i8=55827, i18=0, i19=35, i20=147, iArr1[][]=new int[N][N];
        float f=-15.598F;

        FuzzerUtils.init(iArr1, -39);
        FuzzerUtils.init(lArr, 2422677685304528448L);

        for (l = 3; l < 127; ++l) {
            for (f = 1; f < 13; f++) {
                float f1=-1.727F;
                iArr1 = (iArr1 = (iArr1 = FuzzerUtils.int2array(N, (int)0)));
                Test.instanceCount = lArr[(int)(f - 1)];
                if (i7 != 0) {
                }
                f1 += ((long)f | (long)i8);
                f1 += ((iArr1[(int)(f)][(int)(f)] >>> (iArr1[(int)(l - 1)][(int)(f - 1)] = i8)) - ((Test.iFld -
                    Test.iFld) - (i8 + 46932)));
                switch ((((((int)(-(l - Test.iFld))) >>> 1) % 3) * 5) + 17) {
                case 19:
                    Test.sFld = (short)(i8--);
                    i8 += Test.iFld;
                    break;
                case 24:
                    vMeth1(Test.iFld, i18, f);
                    Test.fArrFld[(int)(f)][(int)(f - 1)] -= i7;
                    for (i19 = 1; i19 < 2; i19++) {
                        Test.fArrFld[i19][(int)(f)] += -2;
                        i20 |= Test.iFld;
                    }
                    break;
                case 26:
                }
            }
        }
        long meth_res = l + i7 + Float.floatToIntBits(f) + i8 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=95, i1=-52736, i3=-4, i4=-172, i5=-6, i6=39068, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 1);

        for (i = 12; i < 220; ++i) {
            for (i3 = 8; i3 > 1; i3--) {
                for (i5 = 1; i5 < 2; ++i5) {
                    double d=0.107007;
                    d -= (Math.max(i4 = 37937, --i4) + Integer.reverseBytes(i));
                    i6 = iMeth();
                    Test.iFld *= (int)1.18079;
                    Test.instanceCount <<= i4;
                    d = Test.fFld;
                    Test.iFld = i1;
                    i4 += (i5 * i5);
                    Test.iFld += i3;
                    Test.fFld += (1 + (i5 * i5));
                }
                Test.fFld -= 45136;
                if (i6 != 0) {
                    vMeth_check_sum += i + i1 + i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
            i4 = i5;
        }
        vMeth_check_sum += i + i1 + i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=37794, i22=234, i23=8, i24=36893, i25=-13, i26=-63, i27=4, i28=3, i30=-29876, i31=-145, i32=129,
            i33=-82, iArr2[]=new int[N], iArr3[][]=new int[N][N];
        long l1=-6795281978614668021L;

        FuzzerUtils.init(iArr2, 13847);
        FuzzerUtils.init(iArr3, -64);

        vMeth();
        Test.iFld *= Test.iFld;
        for (i21 = 350; i21 > 7; i21--) {
            Test.instanceCount += Test.iFld;
            i22 += (((i21 * Test.fFld) + Test.instanceCount) - Test.fFld);
            iArr2 = iArr2;
            Test.iFld = (int)-2.969F;
            i22 += (((i21 * i21) + i22) - Test.iFld);
            sFld1 *= (short)i21;
            i22 <<= (int)Test.instanceCount;
        }
        for (i23 = 17; i23 < 381; ++i23) {
            for (i25 = 69; i25 > 1; --i25) {
                i22 = i22;
            }
            if (false) break;
            Test.fFld = i21;
        }
        Test.iFld = (int)Test.instanceCount;
        for (i27 = 15; i27 < 338; ++i27) {
            Test.instanceCount &= -52963;
            Test.bFld = Test.bFld;
            iArr2[i27] *= (int)Test.fFld;
            Test.instanceCount += (14 + (i27 * i27));
            i24 = (int)Test.fFld;
            Test.instanceCount += i27;
            for (i30 = 4; i30 < 78; i30++) {
                iArr3 = iArr3;
                for (i32 = 1; i32 < 2; ++i32) {
                    double d1=-36.26097;
                    i24 += (int)d1;
                    Test.fFld = i23;
                    i24 *= (int)l1;
                    i33 -= (int)d1;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
