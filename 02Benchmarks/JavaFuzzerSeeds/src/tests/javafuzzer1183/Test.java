package tests.javafuzzer1183;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:10:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static double dFld=-1.3752;
    public static int iFld=-51093;
    public static float fFld=-1.136F;
    public static boolean bFld=false;
    public static byte byFld=67;
    public static volatile int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 24923);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        short s=-20902;
        int i2=-3, i3=-96;
        boolean b=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -44975L);

        Test.iFld = s;
        lArr1[(Test.iFld >>> 1) % N] |= Test.iFld;
        for (i2 = 1; i2 < 350; ++i2) {
            Test.fFld += (i2 * i2);
            i3 = i3;
            lArr1[i2 + 1] += s;
            switch (((i2 % 10) * 5) + 15) {
            case 58:
                Test.instanceCount += (long)Test.fFld;
                b = true;
                Test.instanceCount -= i3;
                Test.iArrFld[i2 - 1] = 44943;
            case 34:
                Test.instanceCount += (i2 * i2);
                Test.iArrFld[i2 + 1] = 7;
                break;
            case 41:
                Test.iFld = (int)Test.instanceCount;
                Test.fFld += i2;
                break;
            case 50:
                i3 -= 7;
                break;
            case 57:
                i3 = -9353;
                break;
            case 47:
                Test.instanceCount = (long)Test.dFld;
            case 56:
                Test.instanceCount *= Test.instanceCount;
                break;
            case 33:
                Test.iArrFld[i2 + 1] <<= (int)Test.instanceCount;
                break;
            case 54:
                i3 = i3;
                break;
            case 16:
                Test.instanceCount += (i2 * Test.instanceCount);
            default:
                i3 *= i2;
            }
        }
        vMeth1_check_sum += s + i2 + i3 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr1);
    }

    public static boolean bMeth() {

        int i4=57399, i5=0, i6=17160, i7=-16209, i8=564, i9=25482, i10=10;
        boolean b1=true;

        vMeth1();
        Test.iFld = (int)Test.fFld;
        Test.iFld += (int)Test.instanceCount;
        for (i4 = 10; i4 < 176; ++i4) {
            Test.fFld -= i5;
            Test.fFld -= (float)Test.dFld;
            for (i6 = 1; i6 < 10; ++i6) {
                if (b1) break;
                for (i8 = 1; 2 > i8; ++i8) {
                    Test.instanceCount <<= 72;
                    if (b1) break;
                    Test.iFld += (int)Test.fFld;
                    Test.fFld += (i8 - Test.fFld);
                }
            }
        }
        Test.instanceCount += (long)Test.fFld;
        Test.iArrFld[(i10 >>> 1) % N] *= 156;
        long meth_res = i4 + i5 + i6 + i7 + (b1 ? 1 : 0) + i8 + i9 + i10;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth() {

        int i1=13, i11=14, i12=-164, iArr[]=new int[N];
        short s1=17758;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 25);
        FuzzerUtils.init(lArr, -3772182925L);

        i1 = (i1++);
        iArr[(i1 >>> 1) % N] <<= (int)(Test.dFld * Math.max(lArr[(i1 >>> 1) % N], --Test.instanceCount));
        try {
            bMeth();
            Test.iArrFld[(i1 >>> 1) % N] = Test.iFld;
            i1 += i1;
            Test.dFld = -57859L;
            Test.instanceCount -= s1;
            for (i11 = 4; i11 < 123; i11++) {
                i12 = (int)-29530L;
                if (Test.bFld) break;
                Test.iArrFld[i11 + 1] ^= (int)Test.instanceCount;
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i12 = i12;
            Test.instanceCount += Test.iFld;
        }
        Test.instanceCount >>= Test.iFld;
        vMeth_check_sum += i1 + s1 + i11 + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        double d=-92.80233;
        int i=78, i14=-9, i15=-11229, i16=61, i17=-147, i18=1, i19=8, i20=41715;
        long l=6L;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 2.168F);

        for (d = 3; 223 > d; d++) {
            vMeth();
            Test.iFld = (int)-8150507550503825212L;
            Test.iFld += (int)(d * Test.iFld);
            if (Test.bFld) {
                for (l = 1; l < 114; ++l) {
                    Test.iFld <<= i14;
                    for (i15 = 1; i15 < 2; i15++) {
                        Test.instanceCount *= 4;
                        i14 = i15;
                        if (Test.bFld) break;
                        Test.iArrFld[(int)(d - 1)] -= (int)10L;
                        Test.dFld = Test.instanceCount;
                        Test.iArrFld = Test.iArrFld;
                    }
                }
                Test.iArrFld = Test.iArrFld;
                for (i17 = 114; 2 < i17; i17--) {
                    for (i19 = 1; i19 < 2; i19++) {
                        switch ((int)(((d % 1) * 5) + 47)) {
                        case 52:
                            switch (((i14 >>> 1) % 3) + 112) {
                            case 112:
                                i16 = i;
                                Test.fFld = Test.byFld;
                                Test.iFld = (int)l;
                                break;
                            case 113:
                                lArrFld[i17] <<= i18;
                                fArr[i19] = fArr[i17];
                                Test.instanceCount = -3;
                                break;
                            case 114:
                                Test.iArrFld = Test.iArrFld;
                                break;
                            default:
                                Test.dFld -= 4193385682L;
                            }
                            Test.byFld = (byte)d;
                            break;
                        default:
                            i14 += (i19 * i19);
                            lArrFld = lArrFld;
                        }
                    }
                }
            } else if (Test.bFld) {
                i14 *= (int)Test.dFld;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
