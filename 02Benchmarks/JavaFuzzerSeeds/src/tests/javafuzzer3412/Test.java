package tests.javafuzzer3412;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:37:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8019700307777008554L;
    public static float fFld=28.820F;
    public static volatile boolean bFld=true;
    public byte byFld=101;
    public short sFld=-18286;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -43336L);
        FuzzerUtils.init(Test.iArrFld, -7);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        long l=12L, l1=-3590680607143204454L;
        int i4=26456, i5=16, i6=-10, i7=-213, i8=4, i9=52218, iArr[]=new int[N];
        double d1=66.113086;

        FuzzerUtils.init(iArr, 192);

        for (l = 5; l < 158; l++) {
            switch ((int)(((l % 6) * 5) + 76)) {
            case 87:
                iArr[(int)(l - 1)] -= (int)d1;
                switch ((int)((l % 1) + 51)) {
                case 51:
                    d1 = i4;
                    l1 = (long)Test.fFld;
                    for (i5 = 1; i5 < 10; i5++) {
                        if (Test.bFld) break;
                        Test.lArrFld = Test.lArrFld;
                    }
                    i6 = (int)l;
                }
            case 78:
                for (i7 = 1; 10 > i7; i7++) {
                    d1 *= i8;
                    iArr[i7 + 1] = i5;
                    d1 += i7;
                    l1 = i9;
                }
                break;
            case 86:
                Test.lArrFld[(int)(l - 1)] = i6;
                break;
            case 83:
                i8 = (int)l1;
                break;
            case 84:
                Test.instanceCount = 28034;
                break;
            case 82:
                i9 += (int)(l * l);
                break;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + l + i4 + Double.doubleToLongBits(d1) + l1 + i5 + i6 + i7 + i8 +
            i9 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i10=-65, i11=-12452, i12=-40596;
        double d2=-61.15845, d3=2.25294;
        short s=24806;

        vMeth2(Test.fFld);
        Test.lArrFld = Test.lArrFld;
        for (i10 = 2; i10 < 168; i10++) {
            for (d2 = 10; d2 > 1; d2 -= 2) {
                i11 = i12;
                Test.fFld = Test.instanceCount;
                Test.iArrFld[(int)(d2 + 1)] = i10;
                i12 -= i10;
                Test.instanceCount += (-124 + (d2 * d2));
                s += (short)Test.instanceCount;
                Test.instanceCount = (long)d2;
                i11 -= i10;
                d3 -= i12;
            }
            i12 >>>= -16;
            i11 += (((i10 * i11) + i11) - Test.fFld);
        }
        vMeth1_check_sum += i10 + i11 + Double.doubleToLongBits(d2) + i12 + s + Double.doubleToLongBits(d3);
    }

    public void vMeth(double d) {

        int i13=-28773, i14=-8292, i15=-6, i16=43204, i17=-133;
        short s1=14070;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.487F);

        vMeth1();
        for (i13 = 188; i13 > 2; --i13) {
            Test.lArrFld[i13 + 1] = i14;
            for (i15 = i13; i15 < 9; ++i15) {
                Test.instanceCount *= Test.instanceCount;
                i16 ^= i14;
                Test.lArrFld[i13] = i14;
                i17 = 1;
                while (--i17 > 0) {
                    if (true) {
                        switch (((i13 % 5) * 5) + 117) {
                        case 126:
                            i14 ^= i14;
                        case 134:
                            Test.fFld -= -2;
                            i14 <<= i16;
                            byFld = (byte)i17;
                            break;
                        case 118:
                            Test.iArrFld[i15 + 1] = s1;
                        case 123:
                            Test.iArrFld[i15 - 1] -= i17;
                            break;
                        case 131:
                            i14 = (int)Test.instanceCount;
                            break;
                        }
                        vMeth_check_sum += Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + i17 + s1 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                        return;
                    } else if (Test.bFld) {
                        fArr[i15 + 1] *= Test.instanceCount;
                    } else {
                        Test.lArrFld[i13] <<= Test.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + i17 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i1=12, i2=-5, i3=-8912, i18=64528, i19=8, i20=-249, i21=-2, iArr1[]=new int[N];
        byte by=-124;
        double d4=42.127694, dArr[][]=new double[N][N];

        FuzzerUtils.init(iArr1, 52399);
        FuzzerUtils.init(dArr, 91.42770);

        i = 205;
        while (--i > 0) {
            i1 *= (int)Test.fFld;
            for (i2 = 3; i2 < 122; ++i2) {
                by -= (byte)-69.11565;
                Test.fFld *= i;
                vMeth(d4);
                Test.instanceCount = i1;
                Test.instanceCount += (-122 + (i2 * i2));
            }
            Test.instanceCount += (i * i);
            if (Test.bFld) break;
            Test.iArrFld = Test.iArrFld;
            for (i18 = i; i18 < 122; i18++) {
                i3 -= i3;
                for (i20 = i18; i20 < 1; ++i20) {
                    iArr1[i20 - 1] = i3;
                    i3 += (i20 * i1);
                    Test.bFld = true;
                    if (Test.bFld) {
                        i3 = (int)-42503L;
                    } else {
                        i1 /= (int)(i2 | 1);
                        Test.instanceCount = 31443;
                        i1 += (-11 + (i20 * i20));
                        dArr[i + 1][i18 + 1] -= i18;
                    }
                    switch (((i21 >>> 1) % 2) + 71) {
                    case 71:
                        if (Test.bFld) break;
                        i3 += (((i20 * i1) + Test.instanceCount) - i3);
                        break;
                    case 72:
                        sFld -= (short)i3;
                        iArr1 = Test.iArrFld;
                        Test.fFld %= -6;
                        by = (byte)i21;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
