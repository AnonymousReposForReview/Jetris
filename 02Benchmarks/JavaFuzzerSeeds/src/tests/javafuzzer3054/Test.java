package tests.javafuzzer3054;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:20:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=882441538L;
    public static short sFld=-12570;
    public static double dFld=-96.30540;
    public static float fFld=-63.81F;
    public static byte byFld=109;
    public static long lFld=-92L;
    public static int iFld=1;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -37382);
        FuzzerUtils.init(Test.lArrFld, 665248419L);
        FuzzerUtils.init(Test.fArrFld, 2.297F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d, double d1, float f) {

        int i6=-21853, i7=-62381, i8=-13, i9=22035, i10=-10, i11=-58359, i12=-11, i13=-40930, iArr[]=new int[N];
        long l=-6L;

        FuzzerUtils.init(iArr, -13);

        for (i6 = 16; i6 < 289; ++i6) {
            iArr[i6] = i6;
            iArr[i6 + 1] = i7;
            for (i8 = 1; i8 < 6; ++i8) {
                iArr[i6 + 1] = i9;
                d1 += Test.sFld;
            }
            for (i10 = 1; i10 < 6; ++i10) {
                Test.instanceCount += -57910;
                for (i12 = 1; i12 < 2; i12++) {
                    l += i9;
                    switch ((i6 % 1) + 23) {
                    case 23:
                        i13 ^= i13;
                        break;
                    }
                    i13 = i11;
                    i7 = (int)Test.instanceCount;
                    i7 += i8;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i6 +
            i7 + i8 + i9 + i10 + i11 + i12 + i13 + l + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i14=-13, i15=3, i16=-53, i17=17101, i18=-130;
        boolean b=false;

        vMeth1(Test.dFld, Test.dFld, Test.fFld);
        for (i14 = 269; i14 > 6; i14 -= 3) {
            i16 = 1;
            while (++i16 < 18) {
                try {
                    i15 = (Test.iArrFld[i14 - 1] / -205);
                    i15 = (i14 % Test.iArrFld[i14]);
                    i15 = (i15 % 27595);
                } catch (ArithmeticException a_e) {}
                for (i17 = i16; i17 < 1; ++i17) {
                    switch ((((i17 >>> 1) % 2) * 5) + 81) {
                    case 89:
                        i18 -= i14;
                        Test.lArrFld[i14 + 1] = -1559157083L;
                        break;
                    case 91:
                        if (b) continue;
                        i15 += i17;
                        Test.iArrFld[i16] ^= i17;
                        Test.instanceCount <<= i14;
                        break;
                    }
                    try {
                        i15 = (i16 % i14);
                        i18 = (-12378 / i16);
                        i18 = (Test.iArrFld[i17 - 1] % -113);
                    } catch (ArithmeticException a_e) {}
                    i18 += (((i17 * Test.byFld) + Test.instanceCount) - Test.instanceCount);
                    Test.dFld = i18;
                }
            }
        }
        long meth_res = i14 + i15 + i16 + i17 + i18 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=46038, i3=9998, i4=-47184, i5=-3, i19=0, i20=177;
        boolean b1=false;
        float f1=77.700F;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-53);

        for (i2 = 12; i2 < 226; i2++) {
            for (i4 = i2; i4 < 8; i4++) {
                switch (((iMeth() >>> 1) % 6) + 21) {
                case 21:
                    if (b1) break;
                    Test.instanceCount += i3;
                    Test.instanceCount += 3;
                case 22:
                    byArr[i2][(-11 >>> 1) % N] >>= (byte)Test.instanceCount;
                    Test.lArrFld[i4 - 1] -= -9;
                    Test.lArrFld[i4 + 1] = -39349L;
                case 23:
                    if (b1) {
                        switch (((i2 % 4) * 5) + 55) {
                        case 75:
                            if (i4 != 0) {
                                vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + (b1 ? 1 : 0) + i19 + i20 +
                                    Float.floatToIntBits(f1) + FuzzerUtils.checkSum(byArr);
                                return;
                            }
                            for (i19 = 1; i19 < 1; ++i19) {
                                Test.fArrFld[i4 + 1][i4] -= 110;
                                b1 = b1;
                            }
                            break;
                        case 70:
                            b1 = b1;
                        case 63:
                            Test.lArrFld[i4] -= i5;
                            break;
                        case 74:
                            i3 += -58604;
                            break;
                        default:
                            Test.iArrFld[i2] = i20;
                        }
                    }
                    break;
                case 24:
                    i1 -= i4;
                    break;
                case 25:
                case 26:
                    Test.instanceCount -= 3638823691L;
                    break;
                default:
                    f1 += i1;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + (b1 ? 1 : 0) + i19 + i20 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=44617, i22=-3, i23=63188, i24=7, i25=-180, i26=10, i27=19582, i28=13, i29=-6, i30=84, i31=5487,
            i32=-114;

        vMeth(i21, i21);
        Test.byFld = (byte)i21;
        i21 = i21;
        switch ((((-109 >>> 1) % 9) * 5) + 127) {
        case 141:
            i21 -= (int)Test.fFld;
            for (i22 = 13; i22 < 279; ++i22) {
                i23 += (int)Test.fFld;
                i21 = (int)Test.lFld;
                i23 += 3;
                i21 = i21;
            }
            for (i24 = 12; i24 < 279; ++i24) {
                Test.byFld *= (byte)Test.dFld;
                i23 += (((i24 * i22) + Test.lFld) - i24);
            }
            break;
        case 150:
            for (i26 = 5; i26 < 194; i26++) {
                i28 = 133;
                do {
                    for (i29 = 2; 1 < i29; --i29) {
                        Test.instanceCount = Test.lFld;
                    }
                    for (i31 = 2; i31 > 1; i31 -= 3) {
                        i30 -= i26;
                        switch ((i31 % 1) + 64) {
                        case 64:
                            i23 += 22;
                            Test.iArrFld[i31] += 6;
                            Test.fFld *= Test.fFld;
                            break;
                        default:
                            i23 += -4;
                            i23 *= (int)136L;
                            Test.iArrFld[i26] -= i30;
                            i30 += i27;
                        }
                        Test.iArrFld[i28] = (int)-63058L;
                        Test.byFld <<= (byte)-11628;
                        i23 = i21;
                    }
                } while ((i28 -= 2) > 0);
            }
        case 172:
            i27 = i30;
        case 137:
        case 139:
            Test.iArrFld[(29063 >>> 1) % N] -= i21;
            break;
        case 153:
            i25 *= Test.iFld;
            break;
        case 131:
            Test.lFld = Test.lFld;
            break;
        case 144:
            Test.instanceCount -= (long)Test.fFld;
            break;
        case 149:
            Test.fFld = i22;
            break;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
