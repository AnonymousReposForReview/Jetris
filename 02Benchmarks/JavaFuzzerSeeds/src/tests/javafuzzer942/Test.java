package tests.javafuzzer942;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:50:54 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=57500L;
    public static short sFld=-27985;
    public static int iFld=-14;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        int i7=3325, i8=-5, i9=62905, i10=-18830, i11=-13, i12=-78, i13=-27000;
        boolean b=false;
        float f1=-122.18F;

        i6 -= i6;
        i6 *= i7;
        for (i8 = 4; i8 < 162; ++i8) {
            double d=48.29183;
            d += d;
            for (i10 = 1; i10 < 10; ++i10) {
                i9 += (((i10 * i9) + i8) - i9);
                for (i12 = 1; i12 < 2; ++i12) {
                    i11 ^= i11;
                    if (b) break;
                    b = b;
                    i7 -= i13;
                    i7 = i8;
                    Test.sFld += (short)i12;
                    Test.instanceCount |= i9;
                }
                i9 -= (int)f1;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + Float.floatToIntBits(f1);
    }

    public static void vMeth1(float f, int i2, int i3) {

        int i4=-4, i5=5, i14=-59742, i15=-48, i16=7;
        double d1=0.87403;
        long l=3L;
        byte by=26;

        for (i4 = 12; i4 < 239; ++i4) {
            i5 = i4;
            i3 -= (int)(i4 + (-(f--)));
            Test.instanceCount <<= (i3++);
            Test.instanceCount *= ((-i3) * ((++Test.sFld) * i5));
        }
        vMeth2(i4);
        i3 *= (int)d1;
        for (l = 133; l > 5; l--) {
            i14 <<= i14;
            switch ((int)(((l % 2) * 5) + 35)) {
            case 40:
                for (i15 = 1; i15 < 12; ++i15) {
                    i5 += (((i15 * by) + l) - i2);
                    f += (((i15 * i15) + i16) - i2);
                    i14 += (((i15 * i5) + i2) - i16);
                    i16 = i2;
                }
                break;
            case 45:
                Test.instanceCount += i16;
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d1) + l + i14 + i15 +
            i16 + by;
    }

    public static void vMeth(int i, int i1) {

        double d2=-1.26224, dArr[]=new double[N];
        int i17=10, i18=-10, i19=8, i20=25398, i21=-46197, i22=-195, i23=6, i24=11;
        boolean b1=false;
        byte by1=-32;

        FuzzerUtils.init(dArr, 21.118961);

        vMeth1(-1.409F, i, i1);
        d2 -= i;
        for (i17 = 333; i17 > 17; i17--) {
            if (b1) break;
            i18 >>>= i18;
        }
        for (i19 = 6; i19 < 236; i19++) {
            i1 += (34071 + (i19 * i19));
            for (i21 = i19; i21 < 7; ++i21) {
                i1 = by1;
                i22 = i22;
                for (i23 = 1; i23 < 1; ++i23) {
                    by1 |= (byte)i24;
                    i20 >>>= i1;
                    dArr[i21] *= Test.instanceCount;
                    i1 = i24;
                }
            }
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d2) + i17 + i18 + (b1 ? 1 : 0) + i19 + i20 + i21 + i22 +
            by1 + i23 + i24 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i25=-154, i26=-55438, i27=104, i28=-5, i29=-22128, i30=25496, i31=-1, i32=-65157, i33=210, i34=-14, i35=-9,
            iArr[]=new int[N];
        float f2=-1.689F;
        boolean b2=false;

        FuzzerUtils.init(iArr, -2126);

        vMeth(Test.iFld, Test.iFld);
        for (i25 = 1; i25 < 229; i25++) {
            iArr[i25] += (int)Test.instanceCount;
            for (i27 = 2; i27 < 110; ++i27) {
                i26 += 28551;
            }
            i26 += i25;
            i28 += (i25 * i25);
            iArr[i25 + 1] = (int)Test.instanceCount;
            i29 = 1;
            do {
                for (i30 = 1; i30 < 1; i30++) {
                    Test.instanceCount = (long)f2;
                    i28 -= -38250;
                    if (b2) continue;
                    i28 %= (int)(Test.instanceCount | 1);
                    i26 = (int)-83.10F;
                    lArrFld[i30 - 1] += Test.iFld;
                    Test.iFld += 41;
                    try {
                        iArr[i29 + 1] = (i29 % 247);
                        Test.iFld = (9053 % Test.iFld);
                        i26 = (i25 / iArr[i30 + 1]);
                    } catch (ArithmeticException a_e) {}
                }
            } while (++i29 < 110);
            iArr[i25 - 1] = (int)Test.instanceCount;
            for (i32 = 1; 110 > i32; i32++) {
                Test.instanceCount = Test.iFld;
                i33 += (i32 | i26);
                i28 += i32;
                i26 -= i33;
                for (i34 = 2; 1 < i34; i34 -= 2) {
                    Test.instanceCount += Test.instanceCount;
                    switch ((((i28 >>> 1) % 2) * 5) + 93) {
                    case 98:
                        f2 *= Test.iFld;
                        i31 = i29;
                        break;
                    case 94:
                        i33 += Test.sFld;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
