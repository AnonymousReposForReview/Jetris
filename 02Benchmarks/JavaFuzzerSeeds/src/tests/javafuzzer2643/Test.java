package tests.javafuzzer2643;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:58:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7027506716057814022L;
    public static volatile int iFld=-69;
    public static byte byFld=-108;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 197);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7, double d, int i8) {

        int i9=125, i10=-41;
        short s=-18123;
        byte by1=92;
        float f1=-2.499F, f2=18.690F;

        for (i9 = 14; 363 > i9; i9++) {
            i7 += (-3 + (i9 * i9));
            Test.instanceCount = i10;
        }
        if (true) {
            s &= by1;
            i7 = i7;
            Test.iArrFld[(-5 >>> 1) % N] += i10;
            i7 = i10;
        }
        i8 -= i7;
        i7 %= 18350;
        f1 = i9;
        f2 /= (Test.instanceCount | 1);
        Test.iArrFld[(i7 >>> 1) % N] = i10;
        i8 -= i9;
        vMeth2_check_sum += i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + s + by1 + Float.floatToIntBits(f1) +
            Float.floatToIntBits(f2);
    }

    public static void vMeth1(float f, long l1, int i3) {

        int i4=41230, i5=-221, i6=-35, i11=23146, i12=14;
        double d1=-76.81680;
        byte by2=50;

        i4 = 1;
        while (++i4 < 311) {
            Test.iArrFld[i4] = Test.iArrFld[i4 + 1];
            for (i5 = 1; i5 < 5; i5++) {
                boolean b=false;
                i6 += (i5 * i5);
                vMeth2(i4, d1, i4);
                i3 <<= i5;
                i3 = i4;
                if (b) {
                    if (b) {
                        Test.iArrFld[i4] <<= i4;
                        for (i11 = i5; 2 > i11; ++i11) {
                            Test.iArrFld[i11 - 1] = i4;
                            i12 >>= i11;
                            Test.iFld += i11;
                            if (true) break;
                        }
                    } else if (true) {
                        i12 *= i11;
                    } else if (b) {
                        Test.iFld = i6;
                    } else {
                        f = 15630;
                    }
                } else {
                    f *= by2;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + l1 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i11 + i12
            + by2;
    }

    public static void vMeth(long l, int i2) {

        byte by=-57;
        float f3=-1.981F;
        int i13=-77, i14=-9, i15=-6181, i16=30942, i17=-188;

        i2 += (int)((-(-(l + i2))) - (-37044 - (--by)));
        vMeth1(f3, Test.instanceCount, -3);
        for (i13 = 136; i13 > 2; i13 -= 3) {
            boolean b1=true;
            i14 += (int)l;
            f3 -= Test.instanceCount;
            if (b1) continue;
            for (i15 = 1; i15 < 35; ++i15) {
                i17 = 1;
                do {
                    switch (((Test.iFld >>> 1) % 7) + 31) {
                    case 31:
                        i2 = i14;
                        f3 *= 7;
                        i14 = i17;
                        Test.iFld = Test.iFld;
                        break;
                    case 32:
                        Test.iArrFld[i15] = 34624;
                        break;
                    case 33:
                        i14 *= 116;
                        break;
                    case 34:
                        i14 += (((i17 * i17) + i13) - i14);
                    case 35:
                        i14 = -84;
                    case 36:
                        i14 >>= i16;
                    case 37:
                        if (b1) continue;
                        break;
                    default:
                        i16 += (i17 + f3);
                    }
                } while (++i17 < 2);
            }
        }
        vMeth_check_sum += l + i2 + by + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=-62385, i1=27329, i18=-112, i19=-1597, i20=-102, i21=-3087, i22=27717;
        float f4=-96.803F, fArr[]=new float[N];
        double d2=0.130074;
        short s1=17056;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -928879800L);
        FuzzerUtils.init(fArr, 0.354F);

        for (i = 320; i > 1; i--) {
            vMeth(Test.instanceCount, Test.iFld);
            lArr[i] = (long)f4;
            Test.instanceCount += (213 + (i * i));
            Test.iFld *= Test.iFld;
            for (i18 = 2; i18 < 79; ++i18) {
                i1 = (int)3104908735663373884L;
                Test.iFld *= i19;
                for (i20 = i18; i20 < 2; ++i20) {
                    i19 = Test.byFld;
                    switch ((i20 % 6) + 83) {
                    case 83:
                        Test.instanceCount >>= i19;
                        switch (((i % 2) * 5) + 36) {
                        case 37:
                        case 38:
                            Test.iFld += i20;
                            i21 >>= 11621;
                            f4 += (i20 * i20);
                            i1 -= i;
                            break;
                        default:
                            Test.iArrFld = Test.iArrFld;
                            i19 |= i1;
                            Test.instanceCount <<= i1;
                        }
                    case 84:
                        i21 += i20;
                        switch ((i18 % 2) + 109) {
                        case 109:
                            Test.bFld = Test.bFld;
                            i22 += (((i20 * f4) + f4) - i21);
                            if (Test.bFld) break;
                            break;
                        case 110:
                            switch (((i18 % 10) * 5) + 58) {
                            case 61:
                                i19 >>>= i1;
                                i19 += (int)d2;
                                Test.instanceCount += (i20 * i20);
                                break;
                            case 84:
                                Test.iArrFld[i20 - 1] += i1;
                            case 77:
                                i19 += i20;
                                break;
                            case 71:
                                fArr = fArr;
                                break;
                            case 63:
                                i1 += i21;
                                break;
                            case 92:
                                i1 %= (int)(i | 1);
                                break;
                            case 79:
                                i22 += -55157;
                                break;
                            case 96:
                                Test.bFld = Test.bFld;
                                break;
                            case 89:
                                Test.iFld += i20;
                            case 104:
                                f4 += 170;
                                break;
                            default:
                                i22 = i18;
                            }
                        default:
                            Test.bFld = true;
                        }
                        break;
                    case 85:
                        Test.instanceCount *= -1;
                        break;
                    case 86:
                        Test.bFld = Test.bFld;
                        break;
                    case 87:
                        Test.instanceCount = s1;
                    case 88:
                        i19 -= i1;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
