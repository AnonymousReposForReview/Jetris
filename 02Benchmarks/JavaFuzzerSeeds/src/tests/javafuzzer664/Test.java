package tests.javafuzzer664;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2871341894L;
    public static short sFld=2653;
    public static int iFld=23812;
    public static double dFld=-86.117128;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 90);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7) {

        int i8=-152, i9=7310, i10=1, i11=6, i12=6, i13=52331, i14=11, iArr[]=new int[N];
        float f1=-64.452F;

        FuzzerUtils.init(iArr, -49);

        for (i8 = 381; 17 < i8; i8--) {
            i7 = (int)-1L;
            f1 = i8;
            i7 = i8;
            i6 += (i8 | Test.instanceCount);
            i6 = i7;
        }
        i7 |= i6;
        f1 /= (i6 | 1);
        iArr[(i8 >>> 1) % N] = i8;
        i10 = 1;
        while (++i10 < 229) {
            for (i11 = i10; i11 < 7; ++i11) {
                Test.instanceCount /= -106;
                for (i13 = 1; i13 < 1; i13++) {
                    i7 += (((i13 * f1) + i8) - i7);
                    Test.instanceCount ^= i8;
                }
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        float f=-96.64F;
        int i4=-46, i5=-75, i15=-120, i16=56765, i17=156, i18=-62297, i19=32, i20=7;
        boolean b=false;

        f = (--Test.sFld);
        for (i4 = 3; i4 < 208; ++i4) {
            vMeth2(i5, i4);
            i5 *= (int)Test.instanceCount;
        }
        for (i15 = 12; i15 < 243; ++i15) {
            Test.iArrFld[i15 - 1] += 237;
            for (i17 = 1; i17 < 7; i17 += 2) {
                for (i19 = 1; i19 < 3; ++i19) {
                    if (b) break;
                    i3 += (i19 + f);
                    i16 = i2;
                    Test.instanceCount -= i3;
                }
                Test.iFld -= (int)-711162788574761143L;
                Test.instanceCount ^= i3;
                Test.dFld += Test.instanceCount;
            }
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i15 + i16 + i17 + i18 + i19 + i20 + (b ? 1 :
            0);
    }

    public static void vMeth() {

        float f2=-2.126F;
        boolean b1=false;
        int i21=-3, i22=-122, i23=-6, i24=-92, i25=236, i26=-910, i27=-35;
        long l=36731L;

        vMeth1(3, Test.iFld);
        Test.iArrFld = Test.iArrFld;
        if (true) {
            f2 = 189;
            while ((f2 -= 3) > 0) {
                if (b1) continue;
            }
            for (i21 = 13; i21 < 322; ++i21) {
                i23 = 1;
                while ((i23 += 2) < 5) {
                    l += (i23 * i23);
                    i22 = 0;
                }
                i22 = i23;
            }
            vMeth_check_sum += Float.floatToIntBits(f2) + (b1 ? 1 : 0) + i21 + i22 + i23 + l + i24 + i25 + i26 + i27;
            return;
        } else if (false) {
            for (i24 = 10; i24 < 373; i24++) {
                Test.iArrFld[i24 + 1] = (int)l;
                for (i26 = 1; i26 < 5; ++i26) {
                    Test.instanceCount += 52650L;
                    Test.iFld += Test.sFld;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + (b1 ? 1 : 0) + i21 + i22 + i23 + l + i24 + i25 + i26 + i27;
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=3, i28=-14, i29=14, i30=-8317, i31=109, i32=13, i33=-51142;
        float f3=-89.1009F;

        for (i = 8; 245 > i; ++i) {
            vMeth();
            Test.iArrFld[i] -= (int)Test.instanceCount;
            for (i28 = 106; 5 < i28; i28--) {
                Test.iArrFld[i + 1] += i28;
                f3 += -16759;
                if (bFld) break;
                i1 += i28;
                Test.instanceCount <<= Test.instanceCount;
                Test.iFld -= i1;
                i1 = i1;
            }
            for (i30 = 3; i30 < 106; i30++) {
                for (i32 = 1; i32 < 2; i32++) {
                    i29 -= 32342;
                }
                i33 = (int)-194L;
            }
            i1 = i;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
