package tests.javafuzzer3294;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:40:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-22077L;
    public static float fFld=-26.43F;
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -211);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        byte by=77;

        Test.instanceCount = (long)f;
        by = (byte)-20.556F;
        vMeth2_check_sum += Float.floatToIntBits(f) + by;
    }

    public static void vMeth1(int i7, int i8, int i9) {

        float f1=-1.571F;
        int i10=-36, i11=157, i12=5, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -129L);
        FuzzerUtils.init(iArr, 5);

        lArr[(i8 >>> 1) % N] = 0;
        vMeth2(f1);
        for (i10 = 16; 392 > i10; ++i10) {
            try {
                i8 = (-616683309 / i9);
                i11 = (19190 % i11);
                i11 = (iArr[i10] % iArr[i10]);
            } catch (ArithmeticException a_e) {}
        }
        i11 += i12;
        i9 -= (int)Test.instanceCount;
        Test.instanceCount = i11;
        i11 = i7;
        vMeth1_check_sum += i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l, double d) {

        int i5=47133, i6=-63121, i13=0, i14=11, i15=-11867, i16=-30125, i17=-49289;
        short s=-19219;
        float f2=0.183F;
        byte by1=-75;

        for (i5 = 158; i5 > 5; i5 -= 2) {
            i6 -= i5;
            if (false) {
                i6 = (s++);
                vMeth1(i5, i6, i6);
                i6 -= i5;
                i13 = 1;
                while (++i13 < 20) {
                    l += i6;
                    i6 -= (int)34.1004F;
                }
            }
        }
        f2 += by1;
        i14 = 1;
        do {
            i6 *= i15;
            for (i16 = 1; 11 > i16; i16++) {
                i15 += (((i16 * i14) + l) - i16);
                f2 = f2;
            }
        } while (++i14 < 141);
        vMeth_check_sum += l + Double.doubleToLongBits(d) + i5 + i6 + s + i13 + Float.floatToIntBits(f2) + by1 + i14 +
            i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=1, i2=-13, i3=-3, i4=-10, i18=35012, i19=36805, i20=-2, i21=-57123, i22=-192, iArr1[]=new int[N];
        double d1=-2.62163;
        boolean b1=true;
        short s1=-6633;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 44935);
        FuzzerUtils.init(fArr, 2.14F);

        i = (-((i++) + i));
        for (i1 = 2; i1 < 200; i1++) {
            i2 = (int)Double.longBitsToDouble(Test.instanceCount++);
            for (i3 = 127; i1 < i3; --i3) {
                vMeth(-2786239021724280323L, d1);
            }
            i18 = 1;
            do {
                boolean b=false;
                if (b) break;
            } while (++i18 < 127);
            for (i19 = 6; i19 < 127; i19++) {
                lArrFld[i19 + 1] *= i19;
                i21 = 1;
                do {
                    switch ((i1 % 10) + 13) {
                    case 13:
                        if (true) {
                            i20 *= i19;
                        } else {
                            lArrFld[i19] = -24009;
                            Test.iArrFld = Test.iArrFld;
                            switch ((i21 % 7) + 53) {
                            case 53:
                                i2 -= (int)Test.instanceCount;
                                if (b1) break;
                                switch ((i21 % 4) + 91) {
                                case 91:
                                    lArrFld[i19] += -43877L;
                                    Test.instanceCount = i2;
                                    break;
                                case 92:
                                    Test.iArrFld[i1] = (int)8L;
                                    Test.iArrFld[i1 - 1] = i1;
                                    i20 += (i21 | i3);
                                case 93:
                                    i20 = i3;
                                    Test.instanceCount = i4;
                                    i4 += (i21 - i1);
                                    break;
                                case 94:
                                    i20 -= i4;
                                    i20 &= i18;
                                    if (b1) continue;
                                default:
                                    i = (int)Test.instanceCount;
                                }
                                break;
                            case 54:
                                iArr1[i1 - 1] *= i3;
                                break;
                            case 55:
                                Test.fFld *= (float)d1;
                                break;
                            case 56:
                                fArr = fArr;
                                break;
                            case 57:
                                lArrFld[i19 + 1] = Test.instanceCount;
                                break;
                            case 58:
                                Test.iArrFld[i1] *= i3;
                                break;
                            case 59:
                                fArr[i21] = i20;
                                break;
                            default:
                                i20 += s1;
                            }
                        }
                        break;
                    case 14:
                        i2 += (i21 * i21);
                    case 15:
                        try {
                            i4 = (i3 % -108);
                            i4 = (i1 / -1382566345);
                            i4 = (iArr1[i21] % -67);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 16:
                        i2 += i21;
                        break;
                    case 17:
                        Test.fFld -= i22;
                        break;
                    case 18:
                        i22 += i21;
                        break;
                    case 19:
                        Test.iArrFld[i19] %= (int)(i3 | 1);
                        break;
                    case 20:
                        i4 += i20;
                        break;
                    case 21:
                        i4 = i21;
                        break;
                    case 22:
                        Test.fFld *= -45775;
                    }
                } while (++i21 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
