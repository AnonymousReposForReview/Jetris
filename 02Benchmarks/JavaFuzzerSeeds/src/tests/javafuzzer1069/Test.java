package tests.javafuzzer1069;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:58:55 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5L;
    public static volatile float fFld=76.531F;
    public static short sFld=-11091;
    public static boolean bFld=false;
    public static int iFld=-53050;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 506822254L);
        FuzzerUtils.init(Test.iArrFld, -45737);
        FuzzerUtils.init(Test.fArrFld, 109.678F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-194, i5=53, i6=-61766, i7=60464, i8=-193, i9=214, iArr[]=new int[N];
        short s=7823;
        float f=0.677F;
        double d1=-1.38013;

        FuzzerUtils.init(iArr, 11);

        for (i4 = 2; i4 < 308; ++i4) {
            Test.lArrFld[i4 + 1] = Test.instanceCount;
            i6 = 1;
            do {
                iArr[i6 - 1] <<= i4;
                i5 *= 10;
                for (i7 = 1; i7 < 1; ++i7) {
                    Test.instanceCount = Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                    i8 -= s;
                    f = i5;
                    i8 = (int)d1;
                    i5 = 9;
                    i5 = (int)1740510089L;
                    try {
                        iArr[i4 - 1] = (i8 / iArr[i4 + 1]);
                        i9 = (i8 / i5);
                        i5 = (i4 / -246);
                    } catch (ArithmeticException a_e) {}
                    f += (i7 * i7);
                }
            } while (++i6 < 5);
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + s + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i9 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3) {

        int i10=-13208, i11=-10968, i12=1, i13=53307;
        short s1=-27157;

        vMeth2();
        i2 *= i2;
        i10 = 352;
        while (--i10 > 0) {
            Test.fFld += i2;
            for (i11 = 5; 1 < i11; --i11) {
                i13 = 1;
                while (++i13 < 2) {
                    i3 += i11;
                    Test.instanceCount *= i10;
                    s1 >>>= (short)Test.instanceCount;
                    Test.iArrFld[i11] ^= i12;
                    i2 += (int)3503455113L;
                    i3 += (i13 + Test.fFld);
                }
            }
            if (true) {
                Test.instanceCount = i10;
            } else {
                try {
                    i12 = (i11 / -179);
                    i3 = (i2 / 244);
                    Test.iArrFld[i10] = (i12 / 6);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += i2 + i3 + i10 + i11 + i12 + i13 + s1;
    }

    public static void vMeth(double d) {

        int i14=247, i15=-13272, i16=-155;
        double d2=-72.113526;

        vMeth1(31683, i14);
        for (i15 = 1; i15 < 300; i15++) {
            d2 = 1;
            do {
                Test.sFld += (short)d2;
                Test.iArrFld[(int)(d2 - 1)] -= i16;
                if (Test.bFld) {
                    Test.iArrFld[i15] >>= i16;
                    i16 += (int)d2;
                    Test.instanceCount += (long)d2;
                } else if (Test.bFld) {
                    Test.instanceCount += (long)((long)d2 | i16);
                    if (Test.bFld) break;
                    i16 <<= i16;
                    i16 -= i15;
                } else if (Test.bFld) {
                    i14 += (int)(((d2 * Test.instanceCount) + Test.fFld) - i16);
                }
                i14 = Test.iFld;
            } while (++d2 < 6);
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i14 + i15 + i16 + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=20369, i17=-4, i18=-47512, i19=-11871, i20=9368, i21=-9, i22=127, i23=21533, i24=21, i25=7,
            iArr1[]=new int[N];
        double d3=101.83380;
        float f2=1.244F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 59);

        for (i = 5; i < 244; ++i) {
            vMeth(d3);
            Test.iFld = (int)Test.instanceCount;
            i1 = i1;
            for (i17 = 6; i17 < 105; i17++) {
                Test.instanceCount = i1;
                i19 = 1;
                do {
                    Test.sFld ^= (short)Test.instanceCount;
                    Test.iFld = i18;
                    i18 -= (int)d3;
                    Test.instanceCount += (((i19 * Test.sFld) + i1) - Test.iFld);
                    d3 -= 16;
                    Test.lArrFld[i + 1] *= i19;
                    Test.iFld += i19;
                    Test.iFld ^= Test.iFld;
                    Test.iFld -= (int)Test.instanceCount;
                } while (++i19 < 2);
                for (i20 = i; i20 < 2; ++i20) {
                    Test.iFld = Test.iFld;
                    Test.iArrFld[i + 1] = 64215;
                }
                Test.iFld = i20;
            }
            for (i22 = 5; i22 < 105; i22++) {
                bArr = FuzzerUtils.boolean1array(N, (boolean)false);
                iArr1[i22 - 1] = (int)-4282276159L;
                switch (((i % 2) * 5) + 112) {
                case 118:
                    Test.fFld += ((long)i22 ^ (long)i21);
                    for (i24 = 1; i24 < 2; i24++) {
                        Test.instanceCount += i25;
                        Test.instanceCount += (((i24 * i18) + i20) - i);
                    }
                    i21 = i18;
                    i25 += (i22 ^ (long)f2);
                    break;
                case 116:
                    i1 = i20;
                    break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
