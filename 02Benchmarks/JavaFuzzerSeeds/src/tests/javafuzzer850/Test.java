package tests.javafuzzer850;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:54:54 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-29220L;
    public static boolean bFld=false;
    public volatile int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, long l2) {

        int i2=-2, i3=120, i4=-4, i5=-6, i6=-39264, i7=-1, i8=-186, iArr[]=new int[N];
        float f2=7.605F;
        long l3=5721L;

        FuzzerUtils.init(iArr, -204);

        i2 = 1;
        while (++i2 < 219) {
            Test.instanceCount = i2;
            l1 = l2;
        }
        for (f2 = 18; f2 < 392; ++f2) {
            i3 = i2;
        }
        for (i4 = 3; 323 > i4; ++i4) {
            for (l3 = 1; l3 < 5; ++l3) {
                i6 += (int)(l3 | l3);
                switch ((int)((l3 % 6) + 48)) {
                case 48:
                    Test.instanceCount = i2;
                    i5 <<= (int)2450986257L;
                    for (i7 = 2; i7 > 1; i7 -= 2) {
                        i8 = i6;
                        i8 -= i7;
                        Test.instanceCount += (i7 - i6);
                    }
                    break;
                case 49:
                    i3 += i5;
                case 50:
                    iArr[(int)(l3)] = i3;
                    break;
                case 51:
                    iArr[i4] <<= -11;
                    break;
                case 52:
                    i8 -= (int)7778886756939209509L;
                    break;
                case 53:
                    if (i4 != 0) {
                    }
                    break;
                }
            }
        }
        long meth_res = l1 + l2 + i2 + Float.floatToIntBits(f2) + i3 + i4 + i5 + l3 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i1) {

        float f1=0.132F;
        double d=2.110226;

        f1 += (float)((d++) * (d * iMeth(l, l)));
        vMeth1_check_sum += l + i1 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d);
    }

    public static void vMeth(float f) {

        int i=5, i9=-20676, i10=148, i11=-10, i12=50391, i13=221, i14=161, i15=-60954;
        boolean b=true;
        double d1=1.115488;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 131L);

        i = i;
        vMeth1(Test.instanceCount, i);
        for (i9 = 16; i9 < 345; i9++) {
            Test.instanceCount += i9;
            for (i11 = i9; 5 > i11; i11++) {
                b = b;
                i12 = (int)Test.instanceCount;
                Test.instanceCount += i11;
                i12 += (((i11 * i10) + i10) - Test.instanceCount);
            }
            d1 += d1;
            i13 = 1;
            do {
                for (i14 = 1; i14 < 1; ++i14) {
                    f /= (i12 | 1);
                    i10 += (i14 | i9);
                    lArr[i13] = 9717;
                }
            } while (++i13 < 5);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
            Double.doubleToLongBits(d1) + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        float f3=2.591F, f4=-90.944F;
        int i16=128, i17=154, i18=3, i19=11858, i20=-74, i21=24190, i22=-74;
        long l4=-240L, lArr1[]=new long[N];
        double d2=-1.115455, dArr[]=new double[N];
        byte by=3;
        short sArr[]=new short[N];

        FuzzerUtils.init(lArr1, 4L);
        FuzzerUtils.init(dArr, 32.2412);
        FuzzerUtils.init(sArr, (short)-630);

        if (true) {
            vMeth(f3);
            i16 = 1;
            while (++i16 < 252) {
                for (l4 = 4; l4 < 100; ++l4) {
                    iArrFld[(int)(l4 - 1)] += i16;
                    i17 = 5;
                }
                lArr1[i16 - 1] = i17;
                dArr[i16 + 1] = 170;
                if (Test.bFld) {
                    for (i18 = 3; i18 < 100; i18 += 3) {
                        for (f4 = 1; f4 < 4; ++f4) {
                            i19 *= (int)d2;
                            i19 = i17;
                        }
                    }
                } else if (false) {
                    d2 = i19;
                    Test.instanceCount = l4;
                } else if (Test.bFld) {
                    i17 += (int)-1L;
                    i21 = 1;
                    while (++i21 < 100) {
                        i17 <<= 57840;
                        i22 = 1;
                        do {
                            sArr[(i17 >>> 1) % N] ^= by;
                            i20 += (((i22 * i20) + i17) - i19);
                            lArr1[i16 - 1] >>= Test.instanceCount;
                            i20 = (int)54585L;
                            i20 += i20;
                            Test.instanceCount -= i18;
                            iArrFld[i22 - 1] *= i17;
                            d2 -= i22;
                        } while (++i22 < 1);
                        f3 -= by;
                        if (Test.bFld) continue;
                        i20 -= -91;
                    }
                } else {
                    i19 = i20;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
