package tests.javafuzzer2487;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:24:36 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5239L;
    public byte byFld=-48;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -6821);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3) {

        int i4=-3, i5=-58262, i6=13;
        byte by=44;
        boolean b=false;
        float f1=2.450F;
        double d2=-26.19206, dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.111012);

        for (i4 = 274; i4 > 16; i4--) {
            dArr[i4 + 1][i4 - 1] = Test.instanceCount;
            i5 = i5;
            i5 = by;
            if (b) continue;
            Test.instanceCount += (((i4 * f1) + Test.instanceCount) - Test.instanceCount);
            i3 *= (int)Test.instanceCount;
            i6 = 1;
            do {
                i3 = i4;
                d2 %= ((long)(f1) | 1);
                dArr[i4][i4 - 1] *= i3;
                Test.instanceCount = i5;
                i3 >>= i5;
            } while (++i6 < 6);
            i3 *= (int)f1;
        }
        dArr[(i4 >>> 1) % N][(i4 >>> 1) % N] = -235;
        vMeth2_check_sum += i3 + i4 + i5 + by + (b ? 1 : 0) + Float.floatToIntBits(f1) + i6 +
            Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(float f, double d1) {

        int i1=2, i2=-69, i7=-9, i8=-9, i9=-5;

        for (i1 = 7; i1 < 126; ++i1) {
            vMeth2(i2);
            i2 += i1;
            for (i7 = 1; 13 > i7; ++i7) {
                i9 = 1;
                do {
                    i2 = (int)Test.instanceCount;
                    i2 = (int)d1;
                    i8 *= i7;
                    d1 = i7;
                } while (++i9 < 2);
                i8 <<= (int)-9L;
                f -= f;
                i2 = -55680;
                Test.iArrFld[i7 + 1] -= (int)Test.instanceCount;
                if (false) continue;
                Test.instanceCount = i9;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i1 + i2 + i7 + i8 + i9;
    }

    public static void vMeth(double d, int i) {

        float f2=-102.632F;

        Test.instanceCount += (i++);
        i = (int)(i * ((i ^ i) - (28125 - (Test.instanceCount++))));
        vMeth1(f2, d);
        i >>= i;
        vMeth_check_sum += Double.doubleToLongBits(d) + i + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        double d3=2.61979;
        int i10=178, i11=15262, i12=2, i13=-2220, i14=6, i15=117, i16=0;
        boolean b1=false;
        float f3=107.329F, f4=49.167F;

        vMeth(d3, i10);
        i10 = (int)Test.instanceCount;
        Test.iArrFld[(i10 >>> 1) % N] += i10;
        for (i11 = 7; i11 < 155; ++i11) {
            if (b1) break;
            Test.iArrFld[i11 + 1] >>>= i10;
            for (i13 = 9; i13 < 169; i13++) {
                i14 += (i13 + i10);
                i14 = i12;
                b1 = b1;
            }
            d3 += 64656;
            i10 >>>= i12;
            d3 = -49893;
            switch ((i11 % 6) + 42) {
            case 42:
            case 43:
                Test.instanceCount += (((i11 * Test.instanceCount) + byFld) - i11);
            case 44:
                Test.instanceCount -= (long)-24.80854;
                f3 += (i11 * i11);
                Test.instanceCount += i13;
                i14 = (int)Test.instanceCount;
            case 45:
                i14 += (i11 | i12);
                i10 *= i14;
                try {
                    i10 = (i11 % Test.iArrFld[i11 + 1]);
                    i14 = (i10 % i14);
                    i10 = (Test.iArrFld[i11 - 1] / i14);
                } catch (ArithmeticException a_e) {}
                i14 = (int)231L;
                break;
            case 46:
                if (b1) {
                    i15 = 1;
                    while (++i15 < 169) {
                        for (f4 = 1; f4 > i15; f4--) {
                            i10 = i14;
                            f3 = i16;
                            Test.instanceCount = i14;
                        }
                        i10 -= (int)d3;
                    }
                } else {
                    i10 = -61536;
                }
            case 47:
                i10 -= (int)f4;
                break;
            default:
                i12 += (((i11 * f4) + i16) - Test.instanceCount);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
