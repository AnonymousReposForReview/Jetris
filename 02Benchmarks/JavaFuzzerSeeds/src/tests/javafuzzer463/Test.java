package tests.javafuzzer463;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:13:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static float fFld=0.154F;
    public static short sFld=14110;
    public double dFld=1.66593;
    public float fArrFld[]=new float[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5, int i6) {

        int i7=68, i8=-6, i9=45187, i10=-2, i11=8, iArr[]=new int[N];
        byte by=-92;
        long l1=12L, lArr[]=new long[N];
        double d=50.62934;

        FuzzerUtils.init(lArr, 7989442322461098391L);
        FuzzerUtils.init(iArr, -21119);

        for (i7 = 169; i7 > 1; i7 -= 2) {
            lArr[i7 - 1] = -241;
            i5 = i6;
            i8 += (((i7 * Test.instanceCount) + by) - i5);
            iArr[i7 + 1] += i5;
            i8 -= by;
            for (i9 = 1; i9 < 18; ++i9) {
                Test.fFld += (((i9 * i6) + i8) - Test.instanceCount);
                for (l1 = i9; l1 < 2; l1++) {
                    Test.fFld += -5;
                    iArr[(int)(l1)] *= (int)d;
                    i4 += (int)l1;
                    Test.fFld += -6189392677809234846L;
                    i8 |= -13;
                    Test.fFld = i6;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + by + i9 + i10 + l1 + i11 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2, int i3) {

        int i12=-29767, i13=-6, i14=4, i15=91, i16=19582, i17=-1, i18=0, i19=14;
        boolean b=false, bArr[]=new boolean[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 101.392F);
        FuzzerUtils.init(bArr, true);

        vMeth1(i2, i2, i2);
        for (i12 = 366; i12 > 21; i12--) {
            fArr[i12 - 1] -= -216;
            i2 = (int)-4628233791969085503L;
            i3 = i12;
            for (i14 = i12; i14 < 5; i14++) {
                bArr[i12] = b;
                i2 = i14;
                i2 -= (int)-1826423953L;
            }
            for (i16 = 1; i16 < 5; ++i16) {
                Test.fFld = Test.instanceCount;
                Test.sFld -= (short)i3;
            }
            for (i18 = 1; i18 < 5; ++i18) {
                i17 *= -6;
                Test.fFld += i18;
            }
        }
        vMeth_check_sum += i2 + i3 + i12 + i13 + i14 + i15 + (b ? 1 : 0) + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(long l, int i) {

        int i1=84, i20=14, i21=37485, i22=-4, i23=9151, iArr1[]=new int[N];
        float f=1.195F;
        byte by1=-25;
        double d1=1.16011;

        FuzzerUtils.init(iArr1, -10);

        i1 = 1;
        do {
            i <<= Math.min((int)((i1 - Test.fFld) - Integer.reverseBytes(i)), i1);
            f = 1;
            do {
                vMeth(i1, i1);
                i += (int)(((f * i1) + Test.fFld) - Test.fFld);
                i = by1;
            } while (++f < 7);
            for (i20 = 1; 7 > i20; ++i20) {
                Test.fFld *= (float)d1;
                switch (((11 >>> 1) % 2) + 105) {
                case 105:
                    switch (((i20 % 2) * 5) + 91) {
                    case 101:
                        i <<= by1;
                        iArr1[i20] = (int)Test.instanceCount;
                        for (i22 = 1; i22 < 2; ++i22) {
                            l -= i20;
                        }
                        i21 -= (int)1.485F;
                        break;
                    case 92:
                        i += (int)2.19993;
                        break;
                    default:
                        iArr1 = iArr1;
                    }
                    break;
                case 106:
                    Test.instanceCount <<= i23;
                    break;
                default:
                    i += i20;
                }
            }
        } while (++i1 < 223);
        long meth_res = l + i + i1 + Float.floatToIntBits(f) + by1 + i20 + i21 + Double.doubleToLongBits(d1) + i22 +
            i23 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i24=-160, i25=4, i26=-52005, i27=-123, i28=32, i29=-10, i30=10, iArr2[]=new int[N];
        boolean b1=false, bArr1[]=new boolean[N];
        byte by2=-104;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -5249777325160908199L);
        FuzzerUtils.init(iArr2, 63883);
        FuzzerUtils.init(bArr1, false);

        iMeth(Test.instanceCount, i24);
        fArrFld[(i24 >>> 1) % N] = 8;
        i25 = 1;
        do {
            i24 = (int)Test.instanceCount;
            for (i26 = 2; i26 < 123; ++i26) {
                for (i28 = 1; 2 > i28; ++i28) {
                    i24 = i24;
                    Test.instanceCount -= -9;
                    i24 *= (int)Test.fFld;
                    switch ((i28 % 2) + 54) {
                    case 54:
                    case 55:
                        Test.instanceCount |= i24;
                        b1 = b1;
                        Test.instanceCount -= i29;
                        i24 -= i28;
                    default:
                        i29 += (39503 + (i28 * i28));
                        if (b1) {
                            Test.fFld += 28015L;
                            Test.fFld -= (float)dFld;
                            i27 += (((i28 * Test.instanceCount) + Test.instanceCount) - Test.fFld);
                            i29 += (int)dFld;
                        } else if (b1) {
                            lArr1[i26 + 1] = (long)Test.fFld;
                        } else if (b1) {
                            iArr2[i26] >>= (int)Test.instanceCount;
                            i24 += (int)Test.instanceCount;
                            bArr1[i26] = b1;
                            i29 += 3;
                        } else {
                            Test.instanceCount -= 64128;
                            i24 = 1;
                        }
                        iArr2[(i26 >>> 1) % N] += (int)Test.instanceCount;
                    }
                    i24 *= by2;
                    i24 -= i30;
                }
            }
        } while (++i25 < 204);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
