package tests.javafuzzer500;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:41:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-204L;
    public static byte byFld=74;
    public static double dFld=18.363;
    public static float fFld=2.517F;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 9);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2) {

        long l=-72L;
        int i3=6, i4=-3, i5=90, i6=41993, i7=166;
        byte by=83;

        for (l = 344; 7 < l; l -= 2) {
            i3 >>= by;
            for (i4 = 9; i4 > 1; i4--) {
                i3 = i2;
                for (i6 = 1; i6 < 2; ++i6) {
                    i7 >>= (int)l;
                    switch (((i4 % 3) * 5) + 26) {
                    case 36:
                        switch ((((i6 >>> 1) % 1) * 5) + 66) {
                        case 71:
                        }
                        i3 ^= i3;
                        break;
                    case 27:
                        Test.iArrFld[(int)(l)][i4] ^= -1771;
                        by *= (byte)75;
                        i5 >>>= (int)Test.instanceCount;
                        break;
                    case 33:
                        i7 = -11;
                        if (i4 != 0) {
                            vMeth2_check_sum += i2 + l + i3 + by + i4 + i5 + i6 + i7;
                            return;
                        }
                        break;
                    default:
                        Test.instanceCount = 12841;
                    }
                }
            }
        }
        vMeth2_check_sum += i2 + l + i3 + by + i4 + i5 + i6 + i7;
    }

    public static void vMeth1() {

        int i=-47759, i1=27, i8=4, i9=34233, i10=-5, i11=-99, i12=-24932;
        byte by1=104;
        float f=68.145F;

        for (i = 6; i < 167; i++) {
            i1 = (int)(++Test.instanceCount);
        }
        vMeth2(i);
        i1 += i1;
        i1 <<= i1;
        i1 = (int)Test.instanceCount;
        for (i8 = 3; i8 < 262; ++i8) {
            i1 -= i1;
            for (i10 = 1; i10 < 6; ++i10) {
                i1 = -6;
                i12 = 1;
                while (++i12 < 2) {
                    by1 += (byte)(i12 + i);
                    i11 = i10;
                    f += (-4 + (i12 * i12));
                    i1 += (i12 ^ by1);
                }
            }
        }
        vMeth1_check_sum += i + i1 + i8 + i9 + i10 + i11 + i12 + by1 + Float.floatToIntBits(f);
    }

    public static void vMeth() {

        int i13=-18439, i14=-2, i15=-11, i16=-196;
        long l1=-3161440980252829244L, lArr[]=new long[N];
        boolean b=true;

        FuzzerUtils.init(lArr, -56796L);

        vMeth1();
        if (b) {
            for (i13 = 16; i13 < 319; ++i13) {
                for (i15 = 1; i15 < 5; i15++) {
                    Test.instanceCount -= i15;
                    switch (((i13 >>> 1) % 2) + 107) {
                    case 107:
                        Test.instanceCount *= 87;
                        lArr[i15] += i13;
                        l1 = 1;
                        while (++l1 < 2) {
                            Test.byFld -= (byte)i15;
                            Test.iArrFld[i13 - 1][i13 + 1] = i15;
                            Test.byFld -= (byte)i14;
                            i14 *= 54;
                            i16 *= (int)Test.dFld;
                            i16 <<= -13;
                        }
                        break;
                    case 108:
                        i14 <<= (int)13807L;
                        break;
                    }
                }
            }
        } else if (b) {
            i14 = i13;
        }
        vMeth_check_sum += i13 + i14 + i15 + i16 + l1 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-244, i18=212, i19=-15148, i20=-39, i21=-9, i22=17141, i23=41189, i24=-40;
        boolean b1=false;
        short s=16705;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -18.641F);

        vMeth();
        i17 += (int)Test.fFld;
        Test.instanceCount += i18;
        i18 *= 125;
        Test.iArrFld[(-39910 >>> 1) % N][(i18 >>> 1) % N] *= -155;
        fArr[(i18 >>> 1) % N] = 281;
        for (i19 = 15; i19 < 303; ++i19) {
            b1 = b1;
            i20 += i19;
            for (i21 = 2; i21 < 87; i21++) {
                Test.fFld -= Test.instanceCount;
                if (false) continue;
                i23 = 1;
                do {
                    Test.dFld *= Test.fFld;
                    i20 += (((i23 * i17) + i22) - Test.instanceCount);
                    Test.iArrFld[i21 - 1][i19 - 1] %= (int)(i17 | 1);
                    switch (((i19 % 6) * 5) + 52) {
                    case 61:
                        if (b1) continue;
                        Test.instanceCount += (((i23 * i21) + i19) - i19);
                        i17 += i23;
                        break;
                    case 74:
                        i22 = (int)Test.instanceCount;
                        Test.iArrFld[i19 - 1][i23] <<= i19;
                        break;
                    case 69:
                        i17 += (((i23 * s) + i20) - Test.instanceCount);
                        i17 += i23;
                        i18 += (int)Test.dFld;
                        Test.iArrFld[i19 + 1][i19 + 1] -= (int)166L;
                    case 79:
                        i20 = (int)Test.fFld;
                        i24 >>= i18;
                        i22 += (int)45233L;
                        break;
                    case 66:
                        i18 |= i20;
                        break;
                    case 59:
                        Test.iArrFld[i19][i23 + 1] ^= (int)13L;
                        break;
                    default:
                        Test.instanceCount <<= Test.instanceCount;
                    }
                } while (++i23 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
