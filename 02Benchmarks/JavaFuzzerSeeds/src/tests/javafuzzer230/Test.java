package tests.javafuzzer230;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:34:56 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3796026274L;
    public int iFld=-11;
    public static double dFld=54.82291;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 100);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i3) {

        int i4=10, i5=-224, i6=2, i7=-95;
        short s1=24118;
        float f1=1.731F;
        long l=2770770890L, lArr[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, -2.102761);
        FuzzerUtils.init(lArr, -60550L);

        for (i4 = 10; i4 < 380; ++i4) {
            i6 = 1;
            while (++i6 < 5) {
                s1 *= (short)f1;
                f1 -= i4;
                if (i5 != 0) {
                    vMeth1_check_sum += (b ? 1 : 0) + i3 + i4 + i5 + i6 + s1 + Float.floatToIntBits(f1) + l + i7 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr);
                    return;
                }
                i5 &= i4;
            }
            for (l = i4; l < 5; ++l) {
                Test.dFld += i3;
                i5 += (int)Test.dFld;
                dArr1[i4 - 1] = -6;
                f1 = i6;
            }
            i7 *= i7;
            lArr = lArr;
            i7 += (i4 * f1);
            i7 >>>= s1;
        }
        vMeth1_check_sum += (b ? 1 : 0) + i3 + i4 + i5 + i6 + s1 + Float.floatToIntBits(f1) + l + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        float f=27.29F;
        int i2=-46566, i8=2, i9=57, i10=8608;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 35362L);

        for (f = 8; f < 233; f++) {
            boolean b1=false;
            vMeth1(b1, i2);
            Test.instanceCount = i2;
            for (i8 = 1; i8 < 7; ++i8) {
                i2 = -9;
                if (b1) continue;
                i9 = i8;
                switch ((i8 % 7) + 21) {
                case 21:
                    i2 >>= (int)Test.instanceCount;
                    switch (((i8 % 2) * 5) + 100) {
                    case 101:
                        i10 = 1;
                        do {
                            float f2=22.112F;
                            if (true) break;
                            i2 += i8;
                            Test.iArrFld = Test.iArrFld;
                            f2 += -17873;
                        } while (++i10 < 2);
                    case 103:
                        i9 = (int)Test.instanceCount;
                        break;
                    }
                    break;
                case 22:
                    lArr1[(int)(f - 1)] = i8;
                    break;
                case 23:
                    b1 = false;
                    break;
                case 24:
                    i9 *= (int)f;
                case 25:
                    i9 /= -47238;
                    break;
                case 26:
                    if (false) continue;
                case 27:
                    i9 += (i8 * i8);
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth() {

        int i11=202, i12=-44122, i13=-23218, i14=7, i15=-14, i16=11;
        float f3=-124.831F;
        short s2=-17979;
        byte byArr[]=new byte[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(byArr, (byte)38);
        FuzzerUtils.init(lArr2, 40L);

        vMeth();
        for (i11 = 4; i11 < 155; i11++) {
            Test.dFld += f3;
            i12 |= i11;
            byArr[i11] += (byte)Test.instanceCount;
            Test.iArrFld = Test.iArrFld;
            i12 += i11;
        }
        s2 = (short)-10L;
        i12 = (int)Test.instanceCount;
        i12 += 18277;
        for (i13 = 243; i13 > 2; i13 -= 3) {
            for (i15 = 1; i15 < 19; ++i15) {
                lArr2[i13 - 1] += -2L;
                f3 += (-9214L + (i15 * i15));
                i14 -= (int)-420841683L;
            }
        }
        long meth_res = i11 + i12 + Float.floatToIntBits(f3) + s2 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(byArr)
            + FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=29.83432, dArr[]=new double[N];
        int i=-11827, i1=12007, i17=-8585, i18=-7, i19=28420, i20=191, i21=-230, i22=12, i23=2, i24=13;
        float f4=-122.457F, f5=-126.328F;
        byte by=-73;
        short s3=19685;
        boolean b2=false;

        FuzzerUtils.init(dArr, 55.84995);

        d -= (-iFld);
        Test.iArrFld[(3 >>> 1) % N] = iFld;
        for (i = 3; i < 282; ++i) {
            short s=-8374;
            s -= (short)Float.intBitsToFloat((int)((dArr[i - 1]--) + (Test.instanceCount + i)));
            Test.instanceCount += (i * i1);
            iFld = ((iMeth() - i1) - i1);
            s += (short)(((i * iFld) + i) - iFld);
        }
        i17 = 1;
        do {
            iFld += i;
        } while (++i17 < 239);
        for (i18 = 19; 343 > i18; i18++) {
            i20 = 78;
            do {
                for (i21 = 1; i21 < 1; ++i21) {
                    Test.iArrFld[i21] ^= i18;
                    iFld += -24964;
                    f4 = 12;
                    i22 += (i21 - f4);
                    by = (byte)i19;
                    Test.iArrFld[i21] += i1;
                    if (false) continue;
                    Test.iArrFld[i20] = i17;
                    i19 += (i21 * i21);
                    d -= f5;
                }
                f5 += (i20 - i22);
                for (i23 = 1; 1 > i23; i23++) {
                    i1 ^= -41851;
                    i19 += i19;
                    if (b2) {
                        i24 = s3;
                        i22 = 25838;
                        i19 <<= i18;
                    }
                }
            } while (--i20 > 0);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
