package tests.javafuzzer3163;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:07:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static long lFld=-5L;
    public static volatile double dFld=-106.29818;
    public static short sFld=31885;
    public static volatile float fFld=-2.824F;
    public static boolean bFld=true;
    public static int iFld=-6422;
    public static int iFld1=8;
    public static float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.564F);
        FuzzerUtils.init(Test.dArrFld, 2.16719);
        FuzzerUtils.init(Test.iArrFld, -11);
        FuzzerUtils.init(Test.byArrFld, (byte)108);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, boolean b) {

        int i8=-7, i9=-13, i10=-23776;
        float f3=0.589F;
        byte by=-93;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-12210);

        for (short s : sArr) {
            for (i8 = 1; i8 < 4; ++i8) {
                i7 >>= i8;
                f3 = -10;
                i10 = 1;
                while (++i10 < 2) {
                    Test.lFld >>= i10;
                    by -= (byte)-134L;
                    i9 |= (int)-3437121699L;
                    Test.dFld -= by;
                    Test.dFld = i8;
                    i7 *= i8;
                    if (i9 != 0) {
                        vMeth1_check_sum += i7 + (b ? 1 : 0) + i8 + i9 + Float.floatToIntBits(f3) + i10 + by +
                            FuzzerUtils.checkSum(sArr);
                        return;
                    }
                    i9 = i10;
                    i7 -= -85;
                }
                f3 -= Test.instanceCount;
            }
        }
        vMeth1_check_sum += i7 + (b ? 1 : 0) + i8 + i9 + Float.floatToIntBits(f3) + i10 + by +
            FuzzerUtils.checkSum(sArr);
    }

    public static long lMeth(long l, long l1) {

        int i4=2582, i5=-4, i6=5, iArr1[]=new int[N];
        boolean b1=false;
        long lArr[]=new long[N];
        short sArr1[][]=new short[N][N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(iArr1, -250);
        FuzzerUtils.init(sArr1, (short)13658);

        switch (((((int)(i4 + -3350794281L)) >>> 1) % 2) + 25) {
        case 25:
            for (float f2 : Test.fArrFld) {
                i5 = 1;
                do {
                    switch (((i5 % 8) * 5) + 3) {
                    case 22:
                        lArr[i5 + 1] *= l;
                        i4 = i5;
                        i6 = 1;
                        do {
                            l1 *= (long)(f2 * ((i4 * -59) - Test.instanceCount));
                            iArr1[i5] = (iArr1[i6 - 1] * (-(i4--)));
                            if (b1) {
                                vMeth1(i6, false);
                                f2 += (i6 + f2);
                                f2 = 3742;
                                Test.lFld = i4;
                            } else if (false) {
                                iArr1[i6 + 1] <<= i6;
                            } else if (b1) {
                                Test.instanceCount += i6;
                            } else {
                                i4 = (int)Test.lFld;
                            }
                        } while (++i6 < 1);
                        break;
                    case 39:
                        sArr1[i5][i5 - 1] >>= (short)i4;
                        break;
                    case 16:
                        i4 += i4;
                        break;
                    case 29:
                        l += (((i5 * i6) + i5) - i4);
                        break;
                    case 14:
                        iArr1[i5 - 1] = (int)Test.instanceCount;
                    case 21:
                        i4 += (i5 ^ l1);
                        break;
                    case 7:
                        i4 <<= i4;
                        break;
                    case 18:
                        i4 = i6;
                        break;
                    }
                } while (++i5 < 4);
            }
        case 26:
            i4 = (int)1.499F;
            break;
        }
        long meth_res = l + l1 + i4 + i5 + i6 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1)
            + FuzzerUtils.checkSum(sArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        float f4=63.714F;
        int i11=13, i12=-57278, i13=-54, i14=-12, i15=-12;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -64L);

        Test.instanceCount >>= (lMeth(Test.instanceCount, 4L) * Test.lFld);
        Test.dArrFld[(i2 >>> 1) % N] -= 3963528708L;
        f4 *= i3;
        i2 = i2;
        for (i11 = 9; i11 < 155; i11++) {
            for (i13 = 1; i13 < 11; i13++) {
                Test.sFld += (short)(((i13 * i2) + i12) - f4);
                lArr1[i11 - 1] *= -11285;
                i15 = 1;
                while (++i15 < 2) {
                    i3 -= i11;
                    i14 = i15;
                    try {
                        i3 = (199 / i3);
                        Test.iArrFld[i15] = (-38 % i2);
                        i3 = (i3 / -81);
                    } catch (ArithmeticException a_e) {}
                    i2 = (int)Test.dFld;
                    lArr1 = lArr1;
                }
                i14 += (((i13 * i15) + Test.fFld) - i13);
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f4) + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f=13.836F, f1=1.114F;
        int i=45818, i1=-22342, i16=55850, i17=-12, i18=75, i19=-15, i20=13, i21=41581, iArr[]=new int[N];
        boolean b2=true;
        double d=1.64338;

        FuzzerUtils.init(iArr, 17828);

        f = (i = (int)(++Test.instanceCount));
        for (f1 = 13; f1 < 241; f1++) {
            i <<= (--iArr[(int)(f1 + 1)]);
            vMeth(-7, i);
            i1 %= (int)((long)(f1) | 1);
            i16 ^= 9;
            for (i17 = 110; i17 > f1; i17 -= 3) {
                switch ((i17 % 1) + 83) {
                case 83:
                    switch ((int)((f1 % 2) + 77)) {
                    case 77:
                        i1 = (int)f;
                        Test.fFld *= i18;
                        break;
                    case 78:
                        for (i19 = 1; i19 > 1; i19--) {
                            i20 >>= i17;
                            Test.instanceCount >>= i17;
                        }
                        i18 = (int)Test.fFld;
                        if (b2) {
                            Test.bFld = Test.bFld;
                            Test.iFld -= -8;
                            Test.byArrFld[(int)(f1)] = (byte)i19;
                        }
                        switch ((int)((f1 % 3) + 99)) {
                        case 99:
                            for (d = 1; d < 1; ++d) {
                                switch ((i17 % 1) + 75) {
                                case 75:
                                default:
                                    if (b2) continue;
                                    f *= i20;
                                    switch (i17 % 3) {
                                    case 0:
                                        i18 = i18;
                                        i16 += 47111;
                                        break;
                                    case 1:
                                        if (b2) {
                                            Test.instanceCount = (long)d;
                                            Test.instanceCount *= (long)d;
                                        } else if (b2) {
                                            Test.iFld += (int)d;
                                        } else if (b2) {
                                            i16 <<= 23;
                                        } else {
                                            if (true) break;
                                        }
                                        break;
                                    case 2:
                                        Test.lFld += i1;
                                    default:
                                        Test.lFld *= i16;
                                    }
                                }
                            }
                            break;
                        case 100:
                        case 101:
                            Test.sFld += (short)(((i17 * Test.iFld1) + Test.lFld) - i18);
                            break;
                        }
                        break;
                    default:
                        f = Test.instanceCount;
                    }
                    break;
                default:
                    i1 += (int)Test.lFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
