package tests.javafuzzer3027;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:58:56 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-61388L;
    public static short sFld=-13743;
    public volatile byte byFld=100;
    public static boolean bFld=true;
    public static volatile byte byArrFld[]=new byte[N];
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)87);
        FuzzerUtils.init(Test.lArrFld, 178L);
        FuzzerUtils.init(Test.iArrFld, -46664);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5, int i6) {

        int i7=-12, i8=-86, i9=-55981, i10=-185, i11=42465, iArr[]=new int[N];
        float f1=37.304F, fArr[]=new float[N];
        long l=-3257521680L, l1=-58889L;
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, -1.910F);
        FuzzerUtils.init(dArr, -2.34834);
        FuzzerUtils.init(iArr, 84);

        for (i7 = 5; i7 < 172; ++i7) {
            fArr[i7 - 1] += f1;
            for (i9 = 1; i9 < 9; i9++) {
                i11 = 1;
                do {
                    f1 = i11;
                    l -= i10;
                    if (i10 != 0) {
                        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + l + l1
                            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    dArr[i7 + 1] = i4;
                    i5 = i10;
                    i5 ^= i4;
                    i10 >>>= (int)l1;
                } while (++i11 < 2);
                iArr[i9] = -242;
            }
            Test.byArrFld[i7] += (byte)-211;
            i4 = i11;
            i6 >>= 1;
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + l + l1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(double d) {

        int i12=-4, i13=-57852, i14=-60089, i15=3091, i16=-11104, i17=4, i18=51326;
        boolean b=false;
        float f2=0.234F;

        vMeth2(-10, i12, i12);
        Test.sFld -= (short)i12;
        for (i13 = 10; 160 > i13; i13++) {
            i12 -= (int)d;
        }
        i14 = (int)153L;
        for (i15 = 7; i15 < 155; i15++) {
            i17 = 1;
            do {
                i18 = 1;
                while (++i18 < 1) {
                    i12 = -16309;
                    Test.instanceCount += Test.instanceCount;
                    if (b) continue;
                    i16 *= (int)473444364L;
                }
                i14 += i14;
                i14 -= i16;
                Test.instanceCount += (i17 + f2);
            } while (++i17 < 11);
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + (b ? 1 : 0) +
            Float.floatToIntBits(f2);
    }

    public void vMeth() {

        double d1=90.41955, d2=-102.71772;
        int i19=-12, i20=-253, i21=6, i22=120, i23=-13, i24=2223, i25=-4, i26=14367, iArr1[]=new int[N];
        float f3=-2.819F;

        FuzzerUtils.init(iArr1, -121);

        vMeth1(d1);
        for (i19 = 23; i19 < 388; ++i19) {
            for (d2 = 1; d2 < 5; ++d2) {
                i21 = i21;
                for (i22 = 2; i22 > 1; i22 -= 2) {
                    Test.instanceCount += (i22 ^ i19);
                    Test.lArrFld = Test.lArrFld;
                    i21 ^= i20;
                    Test.instanceCount = i21;
                }
                Test.instanceCount = (long)f3;
                iArr1[(int)(d2 - 1)] *= (int)f3;
            }
        }
        for (i24 = 7; i24 < 260; ++i24) {
            i26 = 1;
            while (++i26 < 6) {
                byFld -= (byte)i26;
                i21 -= (int)f3;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i19 + i20 + Double.doubleToLongBits(d2) + i21 + i22 + i23 +
            Float.floatToIntBits(f3) + i24 + i25 + i26 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-106, i1=-22380, i2=7, i3=-12, i28=9, i29=-7, i30=150, i31=4, i32=-16391;
        float f=0.471F, f4=-113.116F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)15580);

        for (i = 1; i < 209; ++i) {
            for (i2 = i; i2 < 121; i2++) {
                int i27=62726;
                f += (((i2 * Test.instanceCount) + i2) - i1);
                f += (i2 * Test.instanceCount);
                vMeth();
                Test.iArrFld[i + 1] += i;
                Test.iArrFld[i2] = (int)Test.instanceCount;
                i1 += (((i2 * Test.instanceCount) + i27) - i1);
                Test.instanceCount -= 4;
                Test.bFld = Test.bFld;
            }
            i1 += (int)38.212F;
            i3 -= -232;
            for (i28 = 4; i28 < 121; ++i28) {
                Test.instanceCount *= i;
            }
            sArr[i + 1] += (short)i28;
            for (f4 = 6; f4 < 121; f4++) {
                for (i31 = 1; i31 < 2; i31++) {
                    int i33=-232;
                    Test.iArrFld[i - 1] -= i2;
                    Test.iArrFld[i - 1] = -6;
                    if (Test.bFld) continue;
                    i33 = i29;
                    i33 *= i33;
                    i33 = i1;
                    f = Test.instanceCount;
                    i29 <<= i1;
                    i1 -= i;
                }
                i32 = (int)Test.instanceCount;
                Test.instanceCount = Test.instanceCount;
                Test.iArrFld = FuzzerUtils.int1array(N, (int)135);
                i3 = i3;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
