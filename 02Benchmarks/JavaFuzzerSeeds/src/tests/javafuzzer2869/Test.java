package tests.javafuzzer2869;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:54:11 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-404063077388659947L;
    public static double dFld=66.119214;
    public boolean bFld=false;
    public byte byFld=87;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -134);
        FuzzerUtils.init(Test.lArrFld, 6868857191786288523L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public int iMeth(int i3, double d) {

        int i4=-60849, i5=218, i6=-2, i7=-30980, i8=11, i9=38915;
        float f2=87.660F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.93252);

        switch (((i3 >>> 1) % 8) + 4) {
        case 4:
            for (i4 = 3; i4 < 302; ++i4) {
                Test.iArrFld[i4 - 1] = (int)d;
                if (bFld) {
                    for (i6 = i4; 6 > i6; ++i6) {
                        Test.iArrFld[i4 + 1] -= 122;
                        f2 *= i6;
                        Test.instanceCount += (i6 ^ i3);
                        if (bFld) {
                            switch ((i4 % 2) + 8) {
                            case 8:
                                i7 += (((i6 * i3) + Test.instanceCount) - i7);
                                for (i8 = 1; i8 < 1; i8++) {
                                    i5 += (i8 ^ i9);
                                    Test.instanceCount *= (long)Test.dFld;
                                    dArr[i6 - 1] = -52L;
                                }
                                break;
                            case 9:
                                i3 -= (int)Test.instanceCount;
                                break;
                            }
                        }
                    }
                } else if (bFld) {
                    if (bFld) continue;
                } else if (bFld) {
                    Test.dFld += -8;
                }
            }
        case 5:
            Test.instanceCount = Test.instanceCount;
        case 6:
        case 7:
            i3 = i4;
        case 8:
            i3 = i4;
            break;
        case 9:
            i5 = -95;
        case 10:
            Test.instanceCount = -11;
            break;
        case 11:
            Test.iArrFld[(i9 >>> 1) % N] += 250;
            break;
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(int i1, long l) {

        float f=-2.631F, f1=-1.982F, fArr[]=new float[N];
        int i2=71, i10=-28699, i11=-153, i12=48456;
        byte by=67;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)12084);
        FuzzerUtils.init(fArr, -2.588F);

        Test.dFld = (f--);
        for (f1 = 13; f1 < 242; f1 += 2) {
            iMeth(i1, Test.dFld);
            for (i10 = 1; i10 < 14; i10++) {
                sArr[(int)(f1)] *= (short)f1;
                i12 = 1;
                do {
                    l <<= by;
                    Test.iArrFld[(int)(f1 + 1)] -= i1;
                    i11 *= i1;
                    Test.iArrFld[i10 - 1] |= i12;
                    i1 /= (int)(Test.instanceCount | 1);
                } while (++i12 < 2);
                i11 += (i10 | i2);
                Test.iArrFld[(int)(f1 - 1)] *= i10;
                fArr[i10] = l;
                i11 += (i10 * i10);
            }
        }
        vMeth1_check_sum += i1 + l + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i2 + i10 + i11 + i12 + by +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(int i) {

        long l1=-3L;
        int i13=35893, i14=-159, i15=0, i16=13644, i17=18707;

        vMeth1(-99, -2828723943L);
        i = (int)Test.instanceCount;
        i = i;
        for (l1 = 19; l1 < 322; ++l1) {
            i += (int)l1;
            for (i14 = (int)(l1); i14 < 5; i14++) {
                i13 = -13;
                Test.iArrFld[i14 - 1] = 13895;
                Test.lArrFld[i14 + 1] = -37491;
                i15 = i13;
                Test.iArrFld[i14 + 1] -= i15;
            }
            if (bFld) continue;
            for (i16 = 1; i16 < 5; i16 += 3) {
                Test.instanceCount += (i16 | Test.instanceCount);
                i13 -= (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + l1 + i13 + i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i18=-138, i19=0, i20=-236, i21=-91, i22=33622, i23=36668, iArr[]=new int[N];
        float f3=-1.901F;
        double d1=63.84022;

        FuzzerUtils.init(iArr, 8);

        vMeth(i18);
        i18 *= (int)Test.dFld;
        for (i19 = 6; 178 > i19; ++i19) {
            Test.instanceCount = i20;
            f3 += (((i19 * i18) + i19) - f3);
            i18 <<= i19;
        }
        bFld = bFld;
        for (d1 = 14; d1 < 359; ++d1) {
            i21 += (int)Test.dFld;
            i21 = i19;
            Test.instanceCount &= i20;
            if (bFld) break;
            for (i22 = 73; 2 < i22; i22--) {
                i23 -= (int)90.993F;
                i18 += i22;
                i20 = i19;
                switch ((int)((d1 % 7) + 66)) {
                case 66:
                    if (bFld) break;
                case 67:
                    Test.dFld -= Test.instanceCount;
                    Test.iArrFld[(int)(d1)] -= (int)Test.instanceCount;
                    break;
                case 68:
                    Test.lArrFld[(int)(d1)] += i21;
                case 69:
                    i23 -= byFld;
                    break;
                case 70:
                    iArr[i22] = (int)562570521989584823L;
                    Test.instanceCount -= i19;
                    break;
                case 71:
                    i20 += i22;
                    break;
                case 72:
                    f3 *= -8753646227920204905L;
                    if (bFld) {
                        Test.instanceCount += (i22 ^ Test.instanceCount);
                        i21 -= i20;
                    } else if (bFld) {
                        bFld = bFld;
                    } else {
                        i21 = i20;
                    }
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
