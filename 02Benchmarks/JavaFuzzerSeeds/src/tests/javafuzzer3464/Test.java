package tests.javafuzzer3464;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:49:23 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=39271L;
    public static boolean bFld=false;
    public short sFld=3141;
    public long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-6608);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(short s, int i8, byte by2) {

        int i9=174, i10=12636, i11=5, i12=-11616, i13=-52, iArr[]=new int[N];
        double d2=33.83027;
        float f1=9.110F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(fArr, -54.102F);
        FuzzerUtils.init(lArr, 136L);

        i8 = (int)1.125335;
        for (i9 = 7; i9 < 127; ++i9) {
            i10 -= -12;
            switch ((i9 % 7) + 102) {
            case 102:
                i11 = 13;
                while (--i11 > 0) {
                    Test.sArrFld[i11 - 1] = (short)i9;
                    i8 = i9;
                    if (Test.bFld) {
                        iArr[i9 + 1] += (int)d2;
                        switch (((-14416 >>> 1) % 4) + 52) {
                        case 52:
                            for (i12 = 1; i12 < 1; ++i12) {
                                i8 <<= i10;
                                if (i13 != 0) {
                                }
                            }
                            Test.instanceCount >>= Test.instanceCount;
                            i10 = (int)f1;
                            break;
                        case 53:
                            i8 >>= 210;
                            break;
                        case 54:
                            i8 = -2;
                            break;
                        case 55:
                        }
                    } else if (Test.bFld) {
                        if (i8 != 0) {
                        }
                    }
                }
                break;
            case 103:
                by2 = (byte)i10;
                break;
            case 104:
                fArr[i9] = i11;
                break;
            case 105:
                i8 += (-130 + (i9 * i9));
                break;
            case 106:
                s = (short)i9;
            case 107:
                lArr[i9] -= i12;
                break;
            case 108:
                f1 += (27183 + (i9 * i9));
            }
        }
        long meth_res = s + i8 + by2 + i9 + i10 + i11 + Double.doubleToLongBits(d2) + i12 + i13 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
            + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3, byte by1) {

        int i4=-121, i5=143, i6=-22253, i7=-183, i14=11353, i15=189, i16=-32386;
        float f=-2.28F;
        short s1=24792;

        for (i4 = 7; i4 < 126; ++i4) {
            f += (i3--);
            f = (i5--);
        }
        for (i6 = 3; 160 > i6; ++i6) {
            i7 = Math.abs((int)(iMeth(s1, i5, (byte)(-102)) << Test.instanceCount));
            for (i14 = i6; i14 < 10; ++i14) {
                i15 += (int)Test.instanceCount;
                i16 = 1;
                do {
                    i3 *= i5;
                    i15 += (int)7061405275063957684L;
                    Test.instanceCount += -7;
                    i5 -= i15;
                    i5 = i16;
                    Test.instanceCount = (long)1.64690;
                    s1 = (short)2;
                } while (++i16 < 1);
            }
        }
        vMeth1_check_sum += i3 + by1 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + s1 + i14 + i15 + i16;
    }

    public static void vMeth(int i1, double d1, int i2) {

        byte by3=-63;
        long l=-1L;
        int i18=4, i19=243, i20=218, i21=43, iArr1[]=new int[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(fArr1, -58.256F);

        vMeth1(-44997, by3);
        for (int i17 : iArr1) {
            l = by3;
            for (i18 = 1; i18 < 4; i18++) {
                i2 = i1;
                i2 *= i19;
                for (i20 = i18; 2 > i20; i20++) {
                    i2 *= 10365;
                    fArr1[i20 + 1] *= -3;
                    iArr1[i18 - 1] = i17;
                    if (Test.bFld) break;
                    i19 *= i20;
                    if (i2 != 0) {
                        vMeth_check_sum += i1 + Double.doubleToLongBits(d1) + i2 + by3 + l + i18 + i19 + i20 + i21 +
                            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                        return;
                    }
                    i21 += (((i20 * i2) + i2) - i20);
                    iArr1[i18] <<= (int)-2836021147L;
                }
            }
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d1) + i2 + by3 + l + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i22=11, i23=10, i24=16939, i25=-19411, i26=9, i27=0, i28=-19029, i29=80, i30=58;
        byte by=64;
        double d=-1.85397;
        float f2=-1.754F, f3=-1.662F;
        boolean b=false;

        lArrFld[(i >>> 1) % N] *= (long)(((-(i - by)) - (i >>>= i)) - (i = (int)(-44512 - (d + 159))));
        vMeth(i, d, i);
        for (f2 = 6; f2 < 363; ++f2) {
            i += (int)(62131L + (f2 * f2));
        }
        i = sFld;
        for (i23 = 12; i23 < 213; i23++) {
            i25 = 1;
            while (++i25 < 125) {
                by += (byte)i24;
                i *= i24;
                Test.bFld = Test.bFld;
                if (Test.bFld) continue;
                i22 += i25;
                i22 = -28;
                Test.bFld = Test.bFld;
                Test.instanceCount = i23;
                i26 = 1;
                while (++i26 < 1) {
                    i = i;
                    f3 /= (i24 | 1);
                    i %= (int)(i22 | 1);
                    if (Test.bFld) break;
                    lArrFld[i25 + 1] = Test.instanceCount;
                }
            }
            d += i24;
            Test.instanceCount += i22;
            for (i27 = i23; i27 < 125; i27++) {
                for (i29 = 1; i29 < 1; ++i29) {
                    i = i30;
                    f3 += i29;
                }
                b = true;
                i24 += (((i27 * f2) + Test.instanceCount) - Test.instanceCount);
                i28 <<= i24;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
