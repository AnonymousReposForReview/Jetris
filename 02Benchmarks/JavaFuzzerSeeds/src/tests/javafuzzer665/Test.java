package tests.javafuzzer665;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:25 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-584415236L;
    public static float fFld=1.539F;
    public static short sFld=-9140;
    public int iArrFld[]=new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, int i8, long l1) {

        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 13);

        iArr1[(-4 >>> 1) % N] <<= i8;
        long meth_res = l + i8 + l1 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3) {

        int i4=-51171, i6=80, i7=-20404, i9=81, i10=-23752, iArr[]=new int[N];
        float f=-42.922F;

        FuzzerUtils.init(iArr, 22);

        i4 = 1;
        do {
            iArr[i4 + 1] |= 43298;
        } while (++i4 < 214);
        for (int i5 : iArr) {
            i3 <<= (int)((-i3) + ((long)(115.462F - (i3 - -51628)) | (Test.instanceCount + i3)));
            i5 -= i3;
            for (i6 = 1; i6 < 4; i6 += 3) {
                i5 -= i6;
                Test.instanceCount += i5;
                f = (f - iMeth(-3457340360613174472L, i6, Test.instanceCount));
                i5 >>= i5;
            }
            iArr[(i7 >>> 1) % N] -= (int)f;
            for (i9 = 1; i9 < 4; ++i9) {
                i5 -= -2;
                Test.instanceCount += i9;
            }
        }
        iArr[(i9 >>> 1) % N] = i7;
        vMeth_check_sum += i3 + i4 + i6 + i7 + Float.floatToIntBits(f) + i9 + i10 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i) {

        int i1=-63520, i2=57723, i11=13022, i12=-206, i13=26338, i14=49365, i15=10, i16=-12181, iArr2[]=new int[N];
        boolean b=true;
        double d1=-1.39866;

        FuzzerUtils.init(iArr2, -40443);

        for (i1 = 6; i1 < 354; i1++) {
            vMeth(i2);
        }
        for (i11 = 3; i11 < 313; ++i11) {
            for (i13 = 1; 5 > i13; i13++) {
                Test.fFld -= i13;
                for (i15 = 1; i15 < 2; ++i15) {
                    if (b) break;
                    Test.instanceCount += Test.instanceCount;
                    i -= (int)Test.instanceCount;
                    i14 = i11;
                    d1 -= i12;
                    iArr2[i11 - 1] %= (int)(i13 | 1);
                    Test.instanceCount += (-51903L + (i15 * i15));
                    Test.sFld += (short)i14;
                    i16 = (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i + i1 + i2 + i11 + i12 + i13 + i14 + i15 + i16 + (b ? 1 : 0) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=0.71318;
        int i17=6, i18=-151, i19=9;
        boolean b1=true;

        d += lMeth(i17);
        iArrFld[(i17 >>> 1) % N] >>>= i17;
        for (i18 = 8; i18 < 207; ++i18) {
            Test.instanceCount %= (i18 | 1);
            b1 = b1;
        }
        Test.fFld = Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
