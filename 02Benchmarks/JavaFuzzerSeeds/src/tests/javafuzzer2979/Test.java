package tests.javafuzzer2979;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:26:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static short sFld=14140;
    public float fFld=2.721F;
    public double dFld=122.6867;
    public byte byFld=45;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -38081);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4) {

        int i5=-56990, i6=-115, i7=177, i8=-7685;
        double d1=0.109902;
        float f=-2.825F, fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 1751093848697443152L);
        FuzzerUtils.init(fArr, 0.671F);

        i4 >>= i4;
        i5 = 1;
        while (++i5 < 217) {
            for (i6 = 1; i6 < 7; i6++) {
                lArr1[i5 - 1] = i5;
                i4 = 61;
                for (d1 = 1; d1 < 2; ++d1) {
                    f += (float)(d1 * i4);
                    if (i8 != 0) {
                    }
                    f *= -9;
                    i4 += i8;
                    lArr1 = lArr1;
                    i4 = i5;
                    fArr[i6] = Test.sFld;
                    i7 = -47380;
                    Test.instanceCount -= 534844441222289421L;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, int i2, int i3) {

        byte by=-90;
        int i9=-120, i10=-64323, i11=14, iArr[][]=new int[N][N];
        float f1=120.279F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(lArr2, -1062480728L);

        iArr[(i2 >>> 1) % N][(i2 >>> 1) % N] += ((i1 - (--by)) - (iMeth1(6772) - i1));
        i9 = 1;
        do {
            for (i10 = i9; i10 < 4; i10++) {
                double d2=-42.44666;
                d2 = f1;
                i2 += (i10 - i10);
                i11 += (((i10 * i11) + f1) - i2);
                iArr[i10][i10] = i11;
                i11 = i1;
                i1 -= (int)Test.instanceCount;
                i3 += i10;
                i3 += i10;
                lArr2[i9] *= i3;
            }
            by *= (byte)i1;
            iArr[i9 - 1][i9 - 1] = i9;
        } while (++i9 < 392);
        iArr[(25668 >>> 1) % N][(i11 >>> 1) % N] >>= i9;
        long meth_res = i1 + i2 + i3 + by + i9 + i10 + i11 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i) {

        double d=2.60111;
        int i12=39045, i13=45873, i14=-8, iArr1[]=new int[N];
        byte by1=11;
        long lArr[]=new long[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(fArr1, 120.347F);
        FuzzerUtils.init(iArr1, -1);

        i = i;
        d = ((lArr[(i >>> 1) % N]++) - iMeth(i, i, -14));
        i12 = 1;
        while (++i12 < 292) {
            switch ((i12 % 2) + 60) {
            case 60:
            case 61:
                for (i13 = 6; i13 > i12; --i13) {
                    i14 <<= i14;
                    i ^= i;
                    fArr1[i13 - 1] = Test.instanceCount;
                    Test.sFld += by1;
                    Test.instanceCount -= -70;
                    i14 *= i13;
                }
                iArr1[i12] >>= 0;
                break;
            }
            d += fFld;
            i += (((i12 * i13) + Test.sFld) - i);
        }
        i = 64881;
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i12 + i13 + i14 + by1 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i15=-150, i16=-62392, i17=-44096, i18=35, i19=36018, i20=-39452, i21=11, i22=-47959, i23=-47616, i24=-7;
        double d3=0.108839;
        boolean b=false;
        long lArr3[][]=new long[N][N];

        FuzzerUtils.init(lArr3, -22L);

        vMeth(i15);
        i15 += (int)7273373140242395281L;
        switch (((i15 >>> 1) % 5) + 118) {
        case 118:
            Test.instanceCount = i15;
            for (i16 = 1; i16 < 320; ++i16) {
                if (true) {
                    i17 += (i16 | Test.sFld);
                    Test.instanceCount = Test.instanceCount;
                } else {
                    i17 -= 54531;
                    for (i18 = 1; 79 > i18; ++i18) {
                        for (d3 = 1; d3 < 2; d3++) {
                            b = b;
                            i17 = i20;
                            if (true) break;
                            lArr3[i18][i16 + 1] ^= 8;
                        }
                        for (i21 = 1; i21 < 2; ++i21) {
                            dFld += byFld;
                        }
                        i19 += i18;
                    }
                    Test.instanceCount <<= Test.instanceCount;
                }
                switch (((i16 % 1) * 5) + 125) {
                case 128:
                    for (i23 = 79; 4 < i23; i23--) {
                        i15 = i22;
                        byFld = (byte)i17;
                        i15 = (int)d3;
                        Test.instanceCount >>>= -252;
                        Test.iArrFld = Test.iArrFld;
                        i15 %= (int)((long)(fFld) | 1);
                        Test.instanceCount >>= i24;
                        dFld *= 110;
                        fFld += (-57 + (i23 * i23));
                    }
                }
            }
            break;
        case 119:
            i15 += i23;
            break;
        case 120:
            i15 = i16;
            break;
        case 121:
            Test.iArrFld[(-21507 >>> 1) % N] >>= i21;
        case 122:
            dFld += i24;
            break;
        default:
            i17 = i20;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
