package tests.javafuzzer1649;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:46:23 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-12L;
    public static short sFld=21153;
    public boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i4, int i5) {

        double d1=1.63557;
        int i6=75, i7=4, i8=-36, i9=14, i10=-7296, i11=172, i12=245, i13=-15401, iArr1[]=new int[N];
        byte by1=71;

        FuzzerUtils.init(iArr1, 10);

        i5 = (int)d1;
        i4 = (int)d1;
        i5 = i4;
        for (i6 = 11; 193 > i6; i6++) {
            for (i8 = i6; i8 < 9; i8++) {
                Test.instanceCount = Test.sFld;
            }
            for (i10 = 1; i10 < 9; ++i10) {
                for (i12 = 1; i12 < 2; i12++) {
                    boolean b=true;
                    iArr1[i10 - 1] = (int)Test.instanceCount;
                    if (b) break;
                    Test.instanceCount >>= i10;
                    Test.sFld *= (short)i10;
                    i11 = i4;
                    b = b;
                }
                by1 -= (byte)f;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 +
            i11 + i12 + i13 + by1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, int i3) {

        float f1=1.750F;

        vMeth2(f1, i3, i3);
        vMeth1_check_sum += l + i3 + Float.floatToIntBits(f1);
    }

    public static void vMeth() {

        int i=-3, i1=-13, i2=-6, i14=6282, iArr[]=new int[N];
        double d=-102.102152;
        byte by=29;
        long l1=83L;

        FuzzerUtils.init(iArr, -36122);

        i += (int)(d * (Test.instanceCount--));
        i1 = 1;
        do {
            i2 = 1;
            while (++i2 < 8) {
                i *= (iArr[i2 + 1] - by);
                Test.instanceCount += (i2 * i2);
            }
            vMeth1(156L, i1);
            i -= Test.sFld;
            i = -15549;
            for (l1 = 1; l1 < 8; l1 += 2) {
                Test.instanceCount <<= i;
                Test.instanceCount += by;
                i = i;
                i = (int)Test.instanceCount;
            }
            i14 >>>= (int)l1;
            iArr[i1 + 1] /= (int)(i14 | 1);
        } while (++i1 < 191);
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + by + l1 + i14 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=179, i16=28834, i17=170, i18=-6, i19=-44394, i20=-6, i21=224, i22=-5, i23=2, i24=11, iArr2[]=new int[N];
        float f2=1.649F;
        boolean b1=true, bArr[][]=new boolean[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, -74);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 0.94998);

        vMeth();
        for (i15 = 22; i15 < 366; ++i15) {
            i16 *= (int)f2;
            i17 = 1;
            while ((i17 += 3) < 73) {
                for (i18 = 1; i18 < 4; i18 += 2) {
                    iArr2[i15] *= -13729;
                    Test.sFld *= Test.sFld;
                    i19 >>>= i17;
                }
                Test.instanceCount += (-1 + (i17 * i17));
                i19 = i15;
                bArr = FuzzerUtils.boolean2array(N, (boolean)false);
                Test.sFld = (short)Test.instanceCount;
                for (i20 = 1; 4 > i20; ++i20) {
                    i16 += (((i20 * i20) + f2) - Test.instanceCount);
                }
                dArr[i17] -= 69.497F;
                Test.instanceCount += i17;
                f2 *= i17;
                bArr[i17 + 1][i15] = b1;
            }
            i16 += (int)Test.instanceCount;
            iArr2[i15] -= -47068;
            i22 = 1;
            do {
                iArr2[i15 - 1] = (int)f2;
                iArr2[i15] -= i19;
                for (i23 = 1; i23 > 1; --i23) {
                    if (bFld) break;
                    i19 -= (int)Test.instanceCount;
                    i24 = i22;
                    i16 = i17;
                    try {
                        i24 = (i24 % i23);
                        i24 = (7583 / iArr2[i23]);
                        i16 = (40 / i24);
                    } catch (ArithmeticException a_e) {}
                }
                i19 = (int)33312L;
            } while (++i22 < 73);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
