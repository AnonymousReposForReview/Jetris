package tests.javafuzzer1014;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:49:52 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1354690219L;
    public static float fFld=1.559F;
    public double dFld=0.22275;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -55);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f) {

        int i3=14, i4=-189, i5=-121, i6=-21758, iArr1[]=new int[N];
        double d=1.122973;
        byte by=13;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr1, -111);
        FuzzerUtils.init(lArr, -4101721092L);

        i3 = 336;
        do {
            iArr1[i3 - 1] = -9535;
            i4 -= (int)5412178565394783537L;
            lArr[i3 - 1] = FuzzerUtils.long1array(N, (long)4L);
            i4 = i3;
            d -= i4;
            i4 >>>= by;
        } while ((i3 -= 3) > 0);
        for (i5 = 17; i5 < 336; i5++) {
            switch ((i5 % 1) + 82) {
            case 82:
                switch ((i5 % 1) + 77) {
                case 77:
                    if (true) break;
                    Test.instanceCount -= 4135806785219924805L;
                    Test.instanceCount >>>= by;
                    i6 *= -185;
                    break;
                default:
                    i6 -= 46567;
                }
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i4 + Double.doubleToLongBits(d) + by + i5 + i6 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static boolean bMeth(int i1, boolean b, int i2) {

        int i7=242, i8=-10, i9=41, i10=26234, i11=-30007;
        float f1=-1.758F;
        short s=-14978;

        vMeth1(2.618F);
        for (i7 = 177; i7 > 11; i7 -= 3) {
            Test.instanceCount = i2;
            if (b) {
                i1 += i7;
            } else {
                switch ((((i8 >>> 1) % 1) * 5) + 47) {
                case 52:
                    i9 = 1;
                    do {
                        i2 += (((i9 * i2) + i9) - f1);
                        switch ((i7 % 2) + 20) {
                        case 20:
                            for (i10 = 1; 1 > i10; i10++) {
                                i2 = i10;
                                f1 = Test.instanceCount;
                                i1 += (i10 | i2);
                                f1 = i11;
                                f1 = -236;
                            }
                            break;
                        case 21:
                            i1 += (((i9 * i11) + Test.instanceCount) - i7);
                            break;
                        }
                    } while (++i9 < 28);
                default:
                    s = (short)i8;
                }
            }
        }
        long meth_res = i1 + (b ? 1 : 0) + i2 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + s;
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(long l) {

        int i=30434, iArr[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, 48);

        i -= (iArr[(i >>> 1) % N] - (Math.abs(i) - (i - i)));
        bMeth(-5, b1, i);
        vMeth_check_sum += l + i + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i12=8, i13=-57720, i14=10, i15=9, i16=-13, i17=-36522, i18=-29312, i19=124, i20=-1;
        boolean b2=false, bArr[]=new boolean[N];
        byte by1=78;
        long lArr1[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, 99L);
        FuzzerUtils.init(sArr, (short)-4349);

        vMeth(Test.instanceCount);
        Test.iArrFld = FuzzerUtils.int1array(N, (int)38663);
        i12 = 1;
        do {
            for (i13 = 7; i13 < 157; ++i13) {
                short s1=13113;
                Test.instanceCount -= -3L;
                s1 /= (short)((long)(Test.fFld) | 1);
                bArr[i13 + 1] = false;
                if (b2) continue;
                i14 = (int)Test.fFld;
                b2 = b2;
                for (i15 = 1; i15 < 2; ++i15) {
                    dFld *= i13;
                    lArr1[i15] += i15;
                    s1 -= (short)i14;
                    i16 -= i12;
                    lArr1[i12] -= (long)Test.fFld;
                }
                byArrFld[i13 - 1] *= (byte)i13;
            }
            by1 = (byte)dFld;
            try {
                Test.iArrFld[i12 + 1] = (i16 / i14);
                Test.iArrFld[i12] = (i13 / i12);
                i14 = (i13 / -61089);
            } catch (ArithmeticException a_e) {}
            dFld -= -223;
            Test.iArrFld = Test.iArrFld;
            for (i17 = 8; i17 < 157; ++i17) {
                Test.instanceCount *= -1;
                Test.iArrFld[i12 - 1] *= i18;
            }
            for (i19 = 6; i19 < 157; ++i19) {
                Test.fFld -= Test.instanceCount;
                i14 <<= by1;
                sArr[i12 + 1] = (short)i17;
                if (bFld) continue;
                i20 += (((i19 * i12) + Test.fFld) - i14);
            }
        } while (++i12 < 160);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
