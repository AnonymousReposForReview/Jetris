package tests.javafuzzer1110;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:32:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6414172181665240509L;
    public int iFld=-12;
    public byte byFld=105;
    public static short sFld=-32239;
    public static float fFld=118.592F;
    public static int iFld1=197;
    public int iFld2=11382;
    public boolean bFld=true;
    public static volatile float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -96.12F);
        FuzzerUtils.init(Test.iArrFld, -212);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(byte by1, int i6) {

        int i7=42693, i8=3, i9=-197, i10=12, i11=-37588;
        boolean b=false, b1=false;
        float f1=2.647F;
        double d2=111.54116;
        short s=285;

        for (i7 = 10; i7 < 219; ++i7) {
            i8 = i8;
            for (i9 = 1; i9 < 8; ++i9) {
                b = b1;
                i11 = 1;
                do {
                    i10 = -18976;
                    if (false) {
                        f1 -= -10;
                        Test.instanceCount += (i11 * i11);
                        if (b1) continue;
                        f1 += -47;
                    }
                    i10 = (int)d2;
                    i8 = (int)Test.instanceCount;
                    i8 += (i11 * i11);
                    s += (short)i11;
                } while (++i11 < 2);
            }
        }
        long meth_res = by1 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + (b1 ? 1 : 0) + i11 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d2) + s;
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(byte by) {

        int i2=2635, i3=9, i4=-3, i5=52301;

        for (float f : Test.fArrFld) {
            for (i2 = 1; i2 < 4; ++i2) {
                by = (byte)Math.min(80, i2);
                for (i4 = i2; i4 < 2; i4 += 3) {
                    Test.instanceCount -= (iMeth2((byte)(93), i3) - i5);
                    i5 += (i4 - i5);
                    i3 = i4;
                    Test.fArrFld[i2 + 1] *= i5;
                    by = (byte)i2;
                    Test.instanceCount += i4;
                    Test.instanceCount = Test.sFld;
                    switch ((i4 % 9) + 15) {
                    case 15:
                        i3 ^= i3;
                        Test.iArrFld[i4] <<= i5;
                        break;
                    case 16:
                        i5 += (int)(56082L + (i4 * i4));
                        break;
                    case 17:
                        i3 += (i4 * i4);
                        break;
                    case 18:
                        i5 = -171;
                    case 19:
                        i5 += (i4 ^ Test.instanceCount);
                        break;
                    case 20:
                        i3 += i4;
                        break;
                    case 21:
                        i3 = i2;
                        break;
                    case 22:
                        f += i4;
                        break;
                    case 23:
                    default:
                        f -= Test.sFld;
                    }
                }
            }
        }
        long meth_res = by + i2 + i3 + i4 + i5;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i1) {

        int i12=-14, i13=2, i14=-39975, i15=50233, i16=-8, i17=36592;
        double dArr[][]=new double[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 98.65777);
        FuzzerUtils.init(lArr, -1250904719L);

        switch ((((byFld - i1) >>> 1) % 9) + 97) {
        case 97:
            i1 <<= ((44233 * iMeth1(byFld)) - i1);
            i1 = (int)Test.instanceCount;
            break;
        case 98:
            dArr[(iFld >>> 1) % N][(iFld >>> 1) % N] *= i1;
            Test.iArrFld[(iFld >>> 1) % N] = i1;
            if (false) {
                for (i12 = 17; i12 < 319; i12 += 2) {
                    for (i14 = 1; i14 < 10; ++i14) {
                        i1 += i1;
                        i1 += i13;
                    }
                    for (i16 = 1; 10 > i16; ++i16) {
                        Test.fFld += (((i16 * Test.instanceCount) + Test.instanceCount) - i12);
                        iFld += (i16 | i12);
                        i15 ^= (int)-457577633L;
                        Test.instanceCount -= 2746;
                    }
                }
            } else {
                lArr = lArr;
            }
            break;
        case 99:
            iFld -= iFld;
        case 100:
            byFld = (byte)Test.instanceCount;
            break;
        case 101:
            lArr[(i1 >>> 1) % N] -= (long)Test.fFld;
            break;
        case 102:
            Test.instanceCount <<= Test.instanceCount;
            break;
        case 103:
            Test.iArrFld[(i14 >>> 1) % N] += iFld;
            break;
        case 104:
        case 105:
            Test.iFld1 %= (int)(iFld2 | 1);
            break;
        }
        long meth_res = i1 + i12 + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-226, i18=-24186, i19=123, i20=-13, i21=-47013, i22=54005, i23=-49740, i24=-16, iArr[]=new int[N];
        double d1=-80.42386;
        long l=2922L;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 28263);
        FuzzerUtils.init(bArr, true);

        i = 1;
        do {
            double d=2.19845;
            iFld = (int)((-i) + d);
        } while (++i < 268);
        d1 *= ((long)(-62.341F * Test.fArrFld[(iFld >>> 1) % N]) >>> (-i));
        d1 *= (Math.min(i, ++iArr[(51 >>> 1) % N]) - (--iFld));
        Test.instanceCount /= (iMeth(iFld) | 1);
        l = 1;
        while (++l < 246) {
            for (i18 = 4; i18 < 102; i18++) {
                Test.fFld = iFld2;
                i19 += (i18 - byFld);
                iFld -= i19;
                iFld2 = iFld2;
                Test.fFld -= Test.iFld1;
                Test.iArrFld[i18 - 1] = Test.iFld1;
                Test.instanceCount = Test.iFld1;
            }
            for (i20 = 102; i20 > l; --i20) {
                i21 >>>= Test.iFld1;
            }
            for (i22 = 5; 102 > i22; ++i22) {
                Test.instanceCount += (((i22 * i18) + Test.sFld) - l);
                lArrFld[(int)(l)] += i21;
                Test.fFld += byFld;
                if (bFld) break;
                bArr[(int)(l)] = bFld;
                Test.fFld -= l;
            }
            d1 -= i20;
            i24 = 1;
            while ((i24 += 3) < 102) {
                iFld2 = (int)Test.instanceCount;
                d1 -= i20;
                Test.instanceCount <<= Test.iFld1;
                Test.instanceCount += iFld;
                if (bFld) continue;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
