package tests.javafuzzer2791;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:03:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static byte byFld=52;
    public static short sFld=24502;
    public static int iFld=58685;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -6.523F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by) {

        int i5=12, i6=14, i7=-47767, i8=-2, i9=-55240, i10=78, i11=-228, iArr[]=new int[N];
        short s=-4317;
        float f1=-2.456F;
        double d1=-45.6669;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(lArr1, 3008648831L);

        i5 += i5;
        for (i6 = 13; 239 > i6; ++i6) {
            for (i8 = i6; i8 < 7; ++i8) {
                i7 = i5;
                Test.instanceCount += (((i8 * i5) + Test.instanceCount) - i7);
                iArr[i6 + 1] -= i8;
                lArr1[i8] += s;
            }
            i9 -= (int)Test.instanceCount;
            switch (((i6 % 8) * 5) + 11) {
            case 32:
                for (i10 = i6; i10 < 7; i10++) {
                    i5 = i5;
                    i9 <<= i5;
                }
                break;
            case 49:
                i7 += (int)82.257F;
                s = (short)-13;
                s += (short)(i6 | Test.instanceCount);
                break;
            case 13:
                f1 += ((long)i6 ^ (long)i6);
                break;
            case 44:
                iArr[i6 - 1] *= (int)f1;
            case 33:
                d1 += i6;
                break;
            case 14:
                iArr = iArr;
                break;
            case 23:
                i9 *= i7;
                break;
            case 36:
                Test.instanceCount ^= i7;
                break;
            default:
                i7 = (int)Test.instanceCount;
            }
        }
        long meth_res = by + i5 + i6 + i7 + i8 + i9 + s + i10 + i11 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i4=7;

        i4 *= iMeth(Test.byFld);
        vMeth_check_sum += i4;
    }

    public static long lMeth(long l1, int i1) {

        int i2=-185, i3=144, i12=43489, i13=78, i14=-113, i15=40895, i16=1, i17=-3, i18=1, i19=-164, iArr1[][]=new
            int[N][N];
        double d=0.56312;
        float f2=-11.492F;
        short s1=6089;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5L);
        FuzzerUtils.init(iArr1, -239);

        for (i2 = 19; i2 < 305; ++i2) {
            lArr[i2 + 1] = (long)(i2 - ((-d) + (i1 - -12)));
        }
        vMeth();
        for (i12 = 8; 345 > i12; ++i12) {
            l1 = -25046;
            i13 = i1;
        }
        for (i14 = 5; i14 < 135; i14++) {
            for (i16 = 1; i16 < 12; i16++) {
                for (i18 = 1; i18 < 2; i18++) {
                    f2 += i17;
                }
                d += l1;
                Test.instanceCount += i16;
                i17 = i3;
                iArr1[i16 + 1][i14 + 1] >>>= i18;
                s1 += (short)i2;
            }
        }
        long meth_res = l1 + i1 + i2 + i3 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19
            + Float.floatToIntBits(f2) + s1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=1278L, lArr2[]=new long[N];
        int i=-6, i20=-11380, i21=-247, i22=-1, i23=-13, i24=-170, i25=-21, i26=-2, i27=-104, iArr2[]=new int[N];
        double d2=-1.76378;
        boolean b=true;

        FuzzerUtils.init(lArr2, -47L);
        FuzzerUtils.init(iArr2, -4);

        for (l = 19; l < 343; ++l) {
            float f=-29.961F;
            Test.instanceCount += (l - Test.byFld);
            f -= (lMeth(l, i) - 20354);
            for (i20 = 2; i20 < 78; i20++) {
                if (true) {
                    for (i22 = 1; i22 < 2; ++i22) {
                        i = (int)327846201L;
                        d2 = i;
                        i -= -2;
                        f *= i23;
                    }
                } else if (b) {
                    i23 = 0;
                    lArr2[(int)(l)] = -98;
                    Test.sFld = (short)Test.instanceCount;
                    i24 = 1;
                    do {
                        i23 = i;
                    } while (++i24 < 2);
                } else {
                    Test.iFld >>= i;
                    for (i25 = 1; i25 < 2; ++i25) {
                        i += i23;
                        f = i24;
                        Test.fArrFld[i20 - 1] -= f;
                        iArr2 = iArr2;
                        Test.byFld *= (byte)i25;
                    }
                    switch ((int)((l % 1) + 56)) {
                    case 56:
                        Test.iFld <<= Test.byFld;
                        break;
                    }
                    switch ((int)((l % 2) + 94)) {
                    case 94:
                        i26 -= (int)f;
                        i27 = 1;
                        do {
                            Test.byFld += (byte)i21;
                        } while (++i27 < 2);
                        Test.iFld += 0;
                        break;
                    case 95:
                        if (b) break;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
