package tests.javafuzzer1410;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:54:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static double dFld=-25.50273;
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[][]=new int[N][N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -138);
        FuzzerUtils.init(Test.iArrFld1, 17485);
        FuzzerUtils.init(Test.fArrFld, 1.123F);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1) {

        int i5=125, i6=-2, i7=-46625, i8=-7;
        double d=2.13910;
        boolean b=false;
        float fArr[][]=new float[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 1.518F);
        FuzzerUtils.init(lArr1, 2254709369L);

        i5 = 1;
        do {
            d *= Test.instanceCount;
            i6 += (int)Test.instanceCount;
            Test.iArrFld1 = Test.iArrFld1;
            i6 >>= -11580;
            switch ((i5 % 9) + 24) {
            case 24:
                try {
                    Test.iArrFld[i5 - 1] = (i6 / 241);
                    i6 = (i6 / -48056);
                    i6 = (157 / i5);
                } catch (ArithmeticException a_e) {}
                i6 += (i5 + i5);
                i7 = 1;
                while (++i7 < 5) {
                    switch (((55978 >>> 1) % 10) + 3) {
                    case 3:
                        i6 += (i7 * i7);
                        break;
                    case 4:
                        i8 = 1;
                        while (++i8 < 1) {
                            if (i7 != 0) {
                                vMeth_check_sum += l1 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + (b ? 1 : 0) +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
                                return;
                            }
                            Test.iArrFld1[i7 + 1][i5] = i6;
                            i6 = i5;
                        }
                    case 5:
                        i6 += i5;
                        break;
                    case 6:
                        fArr[i5 - 1][i5 - 1] = (float)d;
                        break;
                    case 7:
                        Test.iArrFld[i5 + 1] >>>= (int)l1;
                    case 8:
                    case 9:
                        i6 = i5;
                        break;
                    case 10:
                        b = b;
                    case 11:
                        i6 >>>= (int)Test.instanceCount;
                        break;
                    case 12:
                        i6 = i8;
                        break;
                    }
                }
                break;
            case 25:
                Test.iArrFld1[i5][i5] <<= i6;
                break;
            case 26:
                i6 *= i7;
                break;
            case 27:
                Test.instanceCount <<= l1;
                break;
            case 28:
                lArr1[i5 + 1] = i6;
                break;
            case 29:
                try {
                    Test.iArrFld[i5] = (i8 / i5);
                    i6 = (-58220 / i8);
                    i6 = (i5 % 101180569);
                } catch (ArithmeticException a_e) {}
                break;
            case 30:
                Test.iArrFld1[i5 - 1][i5] += -27882;
                break;
            case 31:
                Test.instanceCount = i7;
            case 32:
                i6 = (int)l1;
            default:
                Test.instanceCount = 93;
            }
        } while (++i5 < 324);
        vMeth_check_sum += l1 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth1(int i4) {

        float f=2.829F, f1=-11.571F;
        int i10=-164, i11=0, i12=-96;
        long lArr2[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr2, 840683518733923279L);
        FuzzerUtils.init(byArr, (byte)69);

        f += i4;
        i4 -= ((++i4) >> (++i4));
        Test.instanceCount = (--Test.iArrFld[(i4 >>> 1) % N]);
        vMeth(Test.instanceCount);
        Test.fArrFld[(i4 >>> 1) % N] = Test.fArrFld[(i4 >>> 1) % N];
        for (i10 = 16; 303 > i10; i10++) {
            i11 = 157;
            for (f1 = i10; f1 < 6; f1 += 3) {
                i11 += (234 + (f1 * f1));
                Test.dFld += i11;
                Test.iArrFld = Test.iArrFld;
                i12 = i12;
                Test.dFld = i10;
            }
            i11 -= i4;
            byArr[i10 + 1] *= (byte)i12;
        }
        long meth_res = i4 + Float.floatToIntBits(f) + i10 + i11 + Float.floatToIntBits(f1) + i12 +
            FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        int i1=49252, i2=172, i3=107;
        boolean b1=true;
        short s=6803;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -218L);

        i1 = 1;
        do {
            for (i2 = 1; i2 < 6; i2++) {
                lArr[i2] -= (long)(((Test.instanceCount + -89.560F) + iMeth1(-22)) * i2);
                if (b1) break;
                i3 *= i3;
                i3 += i1;
                s -= (short)i2;
                s += (short)(i2 ^ i1);
                i3 += (i2 * i2);
                if (b1) continue;
                i3 = (int)Test.instanceCount;
            }
            i3 = -53172;
            i3 = (int)l;
            i3 = i3;
        } while (++i1 < 288);
        i3 += (int)3199471957L;
        long meth_res = l + i1 + i2 + i3 + (b1 ? 1 : 0) + s + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=134, i13=3, i14=-62110, i15=-6635, i16=178, i17=6;
        short s1=634;
        float f2=-2.771F, f3=-2.513F;
        byte by=80;
        boolean b2=true;

        i = (iMeth(Test.instanceCount) + s1);
        i13 = 1;
        while (++i13 < 139) {
            i14 = 1;
            while (++i14 < 180) {
                f2 = i14;
                f3 = 1;
                do {
                    i -= -43761;
                    switch ((int)(((f3 % 2) * 5) + 106)) {
                    case 112:
                        switch (((i13 % 8) * 5) + 17) {
                        case 34:
                            i >>>= i13;
                            i |= i;
                            switch (((i14 >>> 1) % 9) + 82) {
                            case 82:
                                by += (byte)i14;
                                Test.iArrFld1[(int)(f3 - 1)][i14 + 1] >>= i;
                                break;
                            case 83:
                                i += (int)f3;
                                Test.dFld = i13;
                                switch (((i >>> 1) % 9) + 96) {
                                case 96:
                                    Test.iArrFld1[i14][i14] = 13;
                                    try {
                                        i = (-29430 % i);
                                        i = (i % -59170);
                                        i = (253 % Test.iArrFld[(int)(f3 + 1)]);
                                    } catch (ArithmeticException a_e) {}
                                    i += (int)(6239106833098137330L + (f3 * f3));
                                    i /= (int)(i | 1);
                                    break;
                                case 97:
                                    i >>= i;
                                    f2 = Test.instanceCount;
                                    i &= (int)Test.instanceCount;
                                    by += (byte)2.139F;
                                case 98:
                                    i = (int)Test.instanceCount;
                                    i15 *= i;
                                    Test.dFld -= i15;
                                case 99:
                                    i *= (int)Test.instanceCount;
                                    f2 += (((f3 * i) + i15) - f3);
                                    i15 *= (int)Test.instanceCount;
                                    break;
                                case 100:
                                    i = -130;
                                    break;
                                case 101:
                                    Test.instanceCount *= i15;
                                case 102:
                                    i += (int)(((f3 * Test.instanceCount) + i15) - i14);
                                case 103:
                                    Test.dFld = i15;
                                    break;
                                case 104:
                                    s1 += (short)f3;
                                    break;
                                }
                                break;
                            case 84:
                                s1 -= (short)i14;
                                break;
                            case 85:
                                f2 += (((f3 * i13) + Test.instanceCount) - i14);
                                break;
                            case 86:
                                Test.iArrFld1[i14][i14 - 1] = i13;
                                break;
                            case 87:
                                by += (byte)(f3 + i15);
                                break;
                            case 88:
                                Test.dFld -= 95.534F;
                                break;
                            case 89:
                                i16 += i13;
                                break;
                            case 90:
                                i15 >>= -17;
                            default:
                                i16 *= -98;
                            }
                            break;
                        case 27:
                            i15 = i16;
                        case 19:
                            i16 &= i15;
                            break;
                        case 52:
                            b2 = b2;
                            break;
                        case 46:
                            Test.fArrFld[i14] = Test.fArrFld[i13 - 1];
                            break;
                        case 31:
                            Test.dFld += i17;
                            break;
                        case 18:
                            f2 += (((f3 * Test.instanceCount) + f3) - i17);
                            break;
                        case 54:
                            Test.dFld *= 34579;
                            break;
                        }
                        break;
                    case 109:
                        i15 -= i13;
                        break;
                    }
                } while (++f3 < 1);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
