package tests.javafuzzer3476;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 09:05:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2128317414L;
    public static boolean bFld=true;
    public static byte byFld=-45;
    public double dFld=-15.38568;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.525F);
        FuzzerUtils.init(Test.lArrFld, 1794477410L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {


        Test.bFld = Test.bFld;
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(boolean b, long l, int i1) {

        int i2=-8, i3=-7953, i4=-7, i5=58575, i6=-16611, i7=225, iArr[]=new int[N];
        long l1=-29149L;
        float f1=51.96F;
        byte by=-72;

        FuzzerUtils.init(iArr, 4975);

        iMeth();
        for (i2 = 3; i2 < 127; ++i2) {
            i1 = i1;
            for (i4 = 1; i4 < 13; ++i4) {
                for (l1 = i4; 2 > l1; l1++) {
                    try {
                        i3 = (-87 % i2);
                        i1 = (i3 % -49439);
                        iArr[(int)(l1 - 1)] = (i5 % i1);
                    } catch (ArithmeticException a_e) {}
                    i1 += (int)(l1 * l1);
                    l >>= i2;
                    switch (((i4 % 1) * 5) + 90) {
                    case 92:
                        switch (((i4 % 8) * 5) + 79) {
                        case 88:
                            i3 *= (int)l;
                            i3 = i2;
                            break;
                        case 85:
                            i6 ^= i5;
                            Test.instanceCount += i5;
                            iArr[i2] += (int)f1;
                            break;
                        case 105:
                            l = i4;
                            break;
                        case 107:
                            i3 += (int)(((l1 * by) + i3) - i3);
                            break;
                        case 109:
                            i3 += (int)l;
                        case 86:
                            l += i7;
                            break;
                        case 103:
                            i1 <<= 121;
                            break;
                        case 114:
                            i7 += (int)(l1 - l1);
                            break;
                        default:
                            Test.fArrFld[(int)(l1)] -= (float)-16.94703;
                        }
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + l + i1 + i2 + i3 + i4 + i5 + l1 + i6 + Float.floatToIntBits(f1) + by + i7 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, float f) {

        float f2=-1.606F;
        int i8=-162, i9=-248, i10=9, i11=-4, i12=42489, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, -3);

        vMeth1(Test.bFld, Test.instanceCount, i);
        iArr1[(i >>> 1) % N][(i >>> 1) % N] = (int)f;
        for (f2 = 11; f2 < 280; f2 += 2) {
            short s=19815;
            i9 = 12;
            do {
                Test.bFld = Test.bFld;
            } while (--i9 > 0);
            try {
                i = (i9 / i9);
                i8 = (iArr1[(int)(f2 + 1)][(-6 >>> 1) % N] / 36911);
                i8 = (iArr1[(int)(f2 + 1)][(int)(f2)] % 19018);
            } catch (ArithmeticException a_e) {}
            iArr1[(int)(f2)][(int)(f2 - 1)] = i;
            i10 = 1;
            do {
                for (i11 = 1; i11 < 1; i11++) {
                    try {
                        i12 = (51709 / i11);
                        i8 = (iArr1[(int)(f2 + 1)][i10 + 1] / -230);
                        i = (206928526 / i9);
                    } catch (ArithmeticException a_e) {}
                }
                i12 += i9;
            } while (++i10 < 12);
            i8 |= i8;
            s -= (short)i12;
            i8 += i11;
        }
        iArr1[(i8 >>> 1) % N][(i10 >>> 1) % N] -= -89;
        vMeth_check_sum += i + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i13=32032, i14=64789, i15=76, i16=-19861, i17=-9840, i18=-2, i19=162, i20=6, i21=-56320, i22=242,
            iArr2[]=new int[N];
        float f3=0.415F, f4=-2.955F;
        short s1=16315;

        FuzzerUtils.init(iArr2, 1569);

        vMeth(i13, -91.463F);
        i14 = 1;
        do {
            i13 += (int)Test.instanceCount;
            for (i15 = i14; i15 < 74; i15++) {
                Test.lArrFld[i15] = Test.byFld;
            }
            i16 += (((i14 * i13) + i14) - i16);
        } while (++i14 < 338);
        for (i17 = 7; i17 < 375; ++i17) {
            Test.instanceCount += i13;
            for (f3 = 3; f3 < 68; f3++) {
                iArr2 = iArr2;
                for (i20 = 1; 2 > i20; ++i20) {
                    if (true) {
                        Test.instanceCount += (i20 + i15);
                        i16 = i21;
                        f4 += (i20 - i21);
                    }
                    i18 *= i18;
                    Test.instanceCount &= i16;
                    i19 = (int)dFld;
                    i21 += i20;
                    iArr2[i17 + 1] = (int)Test.instanceCount;
                    i16 += (int)Test.instanceCount;
                }
                i19 <<= (int)-29298L;
                i13 = (int)Test.instanceCount;
                i19 *= -13;
            }
            i21 = i15;
            iArr2[i17] &= i20;
        }
        i22 = 1;
        while (++i22 < 178) {
            iArr2[i22] -= (int)f4;
            s1 = (short)Test.instanceCount;
            i19 = 5026;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
