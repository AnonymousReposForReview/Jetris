package tests.javafuzzer1737;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:43:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static float fFld=1.885F;
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
        FuzzerUtils.init(Test.iArrFld1, 14);
        FuzzerUtils.init(Test.lArrFld, -171L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i5, boolean b, long l) {

        int i6=10742, i7=-7420, i8=-29293, i9=10454, i10=41776, i11=-16234, i12=13;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        i5 -= -59553;
        i5 *= (int)Test.fFld;
        Test.iArrFld[(i5 >>> 1) % N] = i5;
        Test.iArrFld1[(14579 >>> 1) % N] += i5;
        for (i6 = 10; i6 < 325; ++i6) {
            Test.lArrFld[i6 - 1] >>= 22468;
            Test.fFld *= 911919129L;
            for (i8 = 1; 5 > i8; ++i8) {
                bArr = bArr;
            }
            for (i10 = i6; i10 < 5; i10++) {
                i12 = (int)l;
            }
            if (i5 != 0) {
            }
            i5 += (((i6 * i7) + l) - i12);
        }
        Test.iArrFld = Test.iArrFld1;
        Test.fFld -= l;
        long meth_res = i5 + (b ? 1 : 0) + l + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(bArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1(int i4) {

        boolean b1=false;
        int i13=204, i14=-93, i15=-12, i16=-228, i17=10890;
        double d1=0.16395, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.68510);

        i4 = sMeth(i4, b1, Test.instanceCount);
        i4 = i4;
        i4 |= i4;
        switch ((((-7 >>> 1) % 2) * 5) + 79) {
        case 81:
            i13 = 1;
            while (++i13 < 304) {
                for (i14 = 1; 5 > i14; ++i14) {
                    b1 = false;
                    Test.instanceCount += (((i14 * i15) + i4) - i14);
                    i15 &= i15;
                    Test.iArrFld[i13 + 1] <<= i4;
                    for (i16 = i13; i16 < 2; ++i16) {
                        i4 -= (int)d1;
                        dArr[i16] -= i13;
                        i15 *= i15;
                        i17 += i16;
                    }
                }
            }
            break;
        case 89:
            i17 -= (int)1.844F;
            break;
        }
        vMeth1_check_sum += i4 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void vMeth() {

        int i1=10, i2=151, i3=-23403, i18=195, i19=13;
        double d=28.17326;
        float f1=-108.521F;
        short s=26307;

        for (i1 = 4; i1 < 392; i1++) {
            d *= (-((f1 = i2) / ((-(--i2)) | 1)));
            i3 = 1;
            while (++i3 < 4) {
                Test.instanceCount += i3;
            }
            switch ((((i2++) >>> 1) % 5) + 53) {
            case 53:
                i2 += (i1 - Test.instanceCount);
                vMeth1(i3);
                if (i1 != 0) {
                    vMeth_check_sum += i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i3 + s + i18 +
                        i19;
                    return;
                }
                break;
            case 54:
                i2 += (((i1 * Test.fFld) + Test.instanceCount) - i2);
                d = i2;
                break;
            case 55:
                Test.fFld += (i1 - s);
            case 56:
                for (i18 = 4; i1 < i18; --i18) {
                    i19 = (int)Test.instanceCount;
                    Test.instanceCount += (((i18 * i2) + Test.instanceCount) - i3);
                    Test.iArrFld1[i18 + 1] = i1;
                }
            case 57:
                i2 += (int)(0.53F + (i1 * i1));
                break;
            }
        }
        vMeth_check_sum += i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i3 + s + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        float f=2.406F;
        int i=61420, i20=-35842, i21=4, i22=-149, i23=-8, i24=55359, i25=2, i26=60, i27=9;
        double d2=0.8164;
        boolean b2=false;
        short s1=31853;

        f *= i;
        vMeth();
        try {
            for (i20 = 3; (297 + 400) > i20; i20++) {
                for (i22 = 63; (2 - 400) < i22; i22--) {
                    i24 = 1;
                    while (--i24 > 0) {
                        byte by=69;
                        Test.iArrFld1[i24 + 1] += 127;
                        by -= (byte)Test.instanceCount;
                        switch (((i20 % 1) * 5) + 82) {
                        case 87:
                            d2 = i22;
                            break;
                        default:
                            d2 = Test.fFld;
                        }
                        i23 -= i22;
                        i += (i24 * i24);
                    }
                    if (b2) continue;
                    for (i25 = 1; i25 < (1 + 400); ++i25) {
                        Test.iArrFld[i22] -= (int)Test.instanceCount;
                    }
                    Test.fFld *= i20;
                    i27 = 1;
                    while (++i27 < 1) {
                        switch ((i22 % 3) + 108) {
                        case 108:
                            i23 <<= 45252;
                            i23 += (((i27 * i26) + Test.instanceCount) - i23);
                            i += (int)d2;
                            i26 = i23;
                            break;
                        case 109:
                            f = i21;
                        case 110:
                            i26 *= i23;
                            i |= s1;
                            Test.instanceCount = s1;
                            break;
                        default:
                            i21 += (int)(-1171744395357495418L + (i27 * i27));
                            i21 += (i27 * i27);
                        }
                        Test.instanceCount |= i24;
                    }
                }
            }
        }
        catch (ArithmeticException exc2) {
            Test.lArrFld[(i20 >>> 1) % N] <<= Test.instanceCount;
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            i26 = (int)Test.instanceCount;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
