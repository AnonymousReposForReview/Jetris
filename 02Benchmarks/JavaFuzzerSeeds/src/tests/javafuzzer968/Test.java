package tests.javafuzzer968;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:15:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3509423298L;
    public static volatile float fFld=-2.832F;
    public static short sFld=28754;
    public static volatile byte byFld=101;
    public static double dFld=-79.104985;
    public static int iFld=31943;
    public boolean bFld=false;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.49421);
        FuzzerUtils.init(Test.iArrFld, -8);
        FuzzerUtils.init(Test.byArrFld, (byte)-42);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4, long l2) {

        int i5=-7, i6=13, i7=-219, i8=14, i9=34336, i10=-15349, i11=-3, i12=-8, i13=-46211, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -75);

        i5 = 213;
        do {
            for (i6 = i5; i6 < 8; i6++) {
                i8 = 1;
                while (++i8 < 1) {
                    i3 -= (int)l2;
                }
            }
        } while (--i5 > 0);
        for (i9 = 2; 122 > i9; ++i9) {
            i11 = 1;
            while (++i11 < 13) {
                Test.instanceCount = (long)Test.fFld;
                for (i12 = i11; 1 > i12; i12 += 3) {
                    l2 -= l2;
                    Test.dArrFld[i11 + 1] = i5;
                    iArr[i11 - 1] <<= i6;
                    i4 = (int)-42665L;
                    i4 -= -26454;
                    i13 += (((i12 * i10) + Test.sFld) - i7);
                    i3 |= i3;
                }
            }
        }
        long meth_res = i3 + i4 + l2 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2) {

        double d=-45.79780;
        int i14=-47807, i15=8, i16=31307, i17=-2, i18=236, i19=-1, iArr1[]=new int[N], iArr2[][]=new int[N][N];
        boolean b=true;

        FuzzerUtils.init(iArr1, -11);
        FuzzerUtils.init(iArr2, -78);

        i2 += iMeth(i2, 10, Test.instanceCount);
        iArr1[(7 >>> 1) % N] = (int)d;
        Test.instanceCount = (long)Test.fFld;
        for (i14 = 2; i14 < 275; i14++) {
            if (b) continue;
            Test.byFld += (byte)67.121703;
            i15 >>= i2;
            for (i16 = 1; 6 > i16; i16++) {
                Test.fFld *= i17;
                iArr1[i14 - 1] = (int)Test.fFld;
                b = b;
            }
        }
        iArr2 = FuzzerUtils.int2array(N, (int)114);
        for (i18 = 8; i18 < 219; i18++) {
            Test.fFld = i15;
            Test.instanceCount *= Test.sFld;
        }
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + i14 + i15 + (b ? 1 : 0) + i16 + i17 + i18 + i19 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i1, long l, long l1) {

        int i20=47, i21=-18915, i22=34975, i23=-6;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 122L);

        vMeth1(i1);
        Test.fFld -= i1;
        i1 = (int)Test.dFld;
        i1 = -19408;
        i20 = 1;
        while ((i20 += 3) < 239) {
            for (i21 = 1; i21 < 19; ++i21) {
                i1 *= i21;
            }
            Test.instanceCount += Test.instanceCount;
            lArr[i20] *= l;
            i22 += (i20 + l);
            i23 = 1;
            while (++i23 < 19) {
                Test.iArrFld[i20] += (int)1.254F;
                l *= i20;
                l *= i22;
                Test.instanceCount = (long)Test.fFld;
            }
        }
        vMeth_check_sum += i1 + l + l1 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=54, i24=-86, i25=-79, i26=245, i27=-11, i28=-239, i29=60, i30=-7, i31=82, i32=-6540;

        i <<= i;
        vMeth(i, Test.instanceCount, Test.instanceCount);
        for (i24 = 7; i24 < 330; i24++) {
            Test.fFld = Test.fFld;
            Test.iArrFld = Test.iArrFld;
            i25 -= 113;
            i25 = i24;
            for (i26 = 78; i26 > 4; --i26) {
                Test.instanceCount -= 3;
                Test.byFld += (byte)i26;
                i28 *= i25;
                switch ((i24 % 10) + 22) {
                case 22:
                    lArrFld[i24 - 1] -= i29;
                    i29 |= Test.iFld;
                    for (i30 = 1; 2 > i30; i30++) {
                        Test.iArrFld = Test.iArrFld;
                        i27 -= i29;
                        i = -229;
                        Test.iArrFld[i24 + 1] = i27;
                        Test.iFld = (int)36.316F;
                        i32 += (int)7938193296443225000L;
                        Test.instanceCount = Test.iFld;
                        lArrFld[i30 - 1] -= i32;
                        Test.byArrFld[i24] >>= (byte)i;
                        i25 += Test.iFld;
                    }
                    break;
                case 23:
                case 24:
                case 25:
                    i28 >>>= i28;
                    break;
                case 26:
                    i27 += (((i26 * i30) + i25) - i25);
                    Test.fFld += (i26 * i26);
                    break;
                case 27:
                    i25 += (((i26 * i31) + i26) - Test.instanceCount);
                    bFld = bFld;
                    break;
                case 28:
                    Test.dFld *= Test.instanceCount;
                    break;
                case 29:
                    i31 += i26;
                    break;
                case 30:
                    Test.byFld += (byte)i26;
                    break;
                case 31:
                    Test.instanceCount = Test.sFld;
                    break;
                default:
                    i27 += i29;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
