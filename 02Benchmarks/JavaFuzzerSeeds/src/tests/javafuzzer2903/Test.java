package tests.javafuzzer2903;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:43:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=31544L;
    public static float fFld=-2.73F;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 182);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4) {

        int i5=-42, i6=-12, i7=0, i8=28785, i9=8358;
        float f=0.808F;

        for (i5 = 15; i5 < 327; ++i5) {
            for (i7 = 1; i7 < 5; ++i7) {
                Test.iArrFld[i5 - 1] += i6;
                Test.instanceCount = i7;
                i9 = 1;
                while (++i9 < 2) {
                    Test.instanceCount >>= i9;
                    f = f;
                    i6 += -46351;
                    i4 = i4;
                    Test.iArrFld = Test.iArrFld;
                    f -= -13531;
                }
                Test.instanceCount >>>= i7;
            }
        }
        Test.instanceCount += i9;
        i4 >>= (int)Test.instanceCount;
        Test.iArrFld[(i6 >>> 1) % N] = i7;
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(int i3) {

        int i10=-3, i11=-8, i12=-5, i13=16605, i14=36109;
        float f1=2.764F, f2=62.88F;
        double d=-108.40257, dArr[]=new double[N];
        byte by1=-22;

        FuzzerUtils.init(dArr, 124.107363);

        i3 += (Test.iArrFld[(125 >>> 1) % N] * iMeth(56494));
        Test.iArrFld[(i3 >>> 1) % N] = i3;
        dArr[(i3 >>> 1) % N] += i3;
        i3 = 2;
        for (i10 = 10; i10 < 249; ++i10) {
            for (i12 = 1; i12 < 7; ++i12) {
                Test.instanceCount += Test.instanceCount;
                i3 += (((i12 * i11) + i10) - f1);
                for (f2 = 1; f2 < 2; f2++) {
                    f1 *= (float)d;
                    i11 -= (int)Test.instanceCount;
                    by1 += (byte)(((f2 * f2) + i3) - Test.instanceCount);
                    f1 = i10;
                    Test.instanceCount += (long)(f2 * f2);
                }
            }
        }
        i3 += i10;
        long meth_res = i3 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i14 +
            Double.doubleToLongBits(d) + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, int i, long l1) {

        int i1=-27379, i2=43406, i15=1072, i16=132, i18=12, i19=-48453, i20=13, i21=62645;
        boolean b=true;
        byte by=110;
        float f3=54.597F;
        double d1=76.105244;

        for (i1 = 8; 145 > i1; i1++) {
            if (b) continue;
        }
        by = (byte)(i1 - (-(234 + dMeth(4))));
        for (i15 = 5; i15 < 192; i15++) {
            if (b) {
                l >>= Test.instanceCount;
                vMeth_check_sum += l + i + l1 + i1 + i2 + (b ? 1 : 0) + by + i15 + i16 + Float.floatToIntBits(f3) +
                    Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21;
                return;
            } else {
                f3 += (i15 + i2);
                d1 = -11;
                for (i18 = 1; i18 < 9; i18++) {
                    for (i20 = i18; i20 < 2; ++i20) {
                        Test.instanceCount >>>= i;
                        switch (((i15 % 4) * 5) + 58) {
                        case 61:
                            i2 += (i20 | l1);
                            break;
                        case 73:
                            Test.instanceCount %= (i2 | 1);
                            break;
                        case 70:
                        case 62:
                            Test.instanceCount *= i20;
                            break;
                        default:
                            if (b) continue;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += l + i + l1 + i1 + i2 + (b ? 1 : 0) + by + i15 + i16 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i22=2, i23=6, i24=-12, i25=-26121, i26=31146, i27=-4259, i28=-13117, i29=63813, i30=-47424, i31=-21291;
        byte by2=104;
        float f4=10.305F;
        double d2=-2.13126, dArr1[]=new double[N];
        short s=12601;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(dArr1, -56.38771);
        FuzzerUtils.init(bArr, true);

        vMeth(Test.instanceCount, i22, Test.instanceCount);
        for (i23 = 10; i23 < 278; i23++) {
            i22 += i23;
            Test.instanceCount <<= i23;
            for (i25 = 3; i25 < 94; i25++) {
                if (false) {
                    i22 = i23;
                    i22 += (i25 * i25);
                    i26 = i25;
                }
                by2 >>= (byte)3284775786L;
                for (i27 = 1; i27 < 2; ++i27) {
                    Test.iArrFld[i23] |= i22;
                    Test.instanceCount += (((i27 * Test.fFld) + i26) - i28);
                    i28 /= (int)(i28 | 1);
                }
            }
            for (i29 = 3; i29 < 94; i29++) {
                Test.instanceCount = i22;
                Test.iArrFld[i29 - 1] -= (int)Test.instanceCount;
                dArr1[i29] %= (Test.instanceCount | 1);
                for (f4 = 1; 2 > f4; ++f4) {
                    Test.fFld = i24;
                    i31 *= i29;
                    i30 %= 1;
                    Test.instanceCount += (long)(((f4 * Test.instanceCount) + f4) - i30);
                    i24 += (int)f4;
                    i28 = i28;
                    switch (((i22 >>> 1) % 5) + 117) {
                    case 117:
                        i24 -= (int)d2;
                        bArr[i29 + 1] = Test.bFld;
                        i31 -= i24;
                    case 118:
                        Test.instanceCount |= s;
                    case 119:
                        by2 += (byte)s;
                    case 120:
                        i30 += (int)-65.127085;
                        break;
                    case 121:
                        d2 = 5;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
