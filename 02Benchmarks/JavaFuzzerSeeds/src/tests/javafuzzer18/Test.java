package tests.javafuzzer18;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:00:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-147L;
    public static volatile double dFld=2.116072;
    public static boolean bFld=true;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-14176);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i1=-19968, i2=-157, i3=-130, i4=241, i5=-1, i6=182, iArr[][]=new int[N][N];
        float f=1.520F;
        byte by=-67;
        short s=17484;
        boolean bArr[][]=new boolean[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -110);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, -2146975459L);

        i1 *= i1;
        iArr[(i1 >>> 1) % N][(-12 >>> 1) % N] -= (int)-4L;
        bArr[(i1 >>> 1) % N] = bArr[(i1 >>> 1) % N];
        for (i2 = 19; i2 < 381; i2++) {
            double d=1.72487;
            Test.instanceCount *= -239;
            switch (((i2 % 9) * 5) + 8) {
            case 21:
                d = i3;
                i3 += 16320;
                for (f = 1; f < 5; f++) {
                    Test.sArrFld[i2 + 1] <<= (short)i4;
                    by = (byte)i2;
                    for (i5 = 1; i5 < 2; i5++) {
                        by = (byte)577L;
                        Test.instanceCount -= (long)f;
                        lArr1[i5 + 1] -= by;
                    }
                }
                break;
            case 31:
                i6 |= i1;
                break;
            case 27:
                i3 -= i2;
                break;
            case 30:
                i6 += (int)(229L + (i2 * i2));
            case 53:
                s = (short)Test.instanceCount;
            case 14:
                if (i3 != 0) {
                }
            case 13:
                iArr[i2][i2] %= (int)((long)(d) | 1);
                break;
            case 52:
                iArr[i2 + 1] = iArr[i2];
                break;
            case 18:
                iArr[i2][i2 + 1] = (int)Test.instanceCount;
                break;
            default:
                i3 *= -95;
            }
        }
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + by + i5 + i6 + s + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        boolean b=false;
        int i7=-38389, i8=-9, i9=-35839, i10=-216;
        float f1=-1.160F;
        long lArr2[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr2, -7L);
        FuzzerUtils.init(dArr, 0.4951);

        b = (123.543F != ((--Test.instanceCount) - fMeth()));
        lArr2 = lArr2;
        i7 = 1;
        do {
            i8 += i7;
            i8 *= (int)f1;
            for (i9 = 1; i9 < 9; ++i9) {
                i10 >>= i9;
                dArr[i9 + 1] = Test.dFld;
                i8 += (i9 | Test.instanceCount);
                Test.instanceCount = Test.instanceCount;
            }
        } while (++i7 < 178);
        vMeth_check_sum += (b ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + FuzzerUtils.checkSum(lArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth() {

        long l=7L;
        float f2=36.142F, f3=0.950F;
        int i11=19308, i12=-11, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 158);

        l = 1;
        do {
            vMeth();
            for (f2 = 1; 6 > f2; f2 += 3) {
                iArr1[(int)(l)] = i11;
                f3 += Test.instanceCount;
                i12 += (236 + (f2 * f2));
            }
            Test.instanceCount = i11;
        } while (++l < 256);
        Test.instanceCount = i12;
        long meth_res = l + Float.floatToIntBits(f2) + i11 + Float.floatToIntBits(f3) + i12 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=3, i13=-78, i14=59242, i15=34242, i16=-14201, i17=-13, iArr2[]=new int[N];
        float f4=-6.420F;
        short s1=5315;
        double d1=2.83229;
        byte by1=115;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -11L);
        FuzzerUtils.init(iArr2, -17);

        i += (int)(((lArr[(i >>> 1) % N]--) - 38790) - ((i--) + (14676 + (30843 + iMeth()))));
        Test.instanceCount = Test.instanceCount;
        i += i;
        i += -157;
        for (f4 = 1; f4 < 277; ++f4) {
            i13 /= (int)(i | 1);
            for (i14 = 4; i14 < 91; ++i14) {
                if (Test.bFld) break;
                iArr2[(int)(f4)] -= i15;
                i15 += 8353;
                s1 += (short)i14;
                d1 = 1;
                while (++d1 < 2) {
                    i15 += (int)d1;
                    iArr2[(int)(f4)] >>= (int)Test.instanceCount;
                }
                for (i16 = 2; i16 > 1; i16--) {
                    if (Test.bFld) {
                        i >>= 152;
                    } else if (Test.bFld) {
                        iArr2[(int)(f4)] <<= 9412;
                        i17 += (int)Test.instanceCount;
                    }
                    s1 += (short)i16;
                    Test.instanceCount = -15630;
                    if (Test.bFld) break;
                    i13 |= i17;
                    switch ((int)(((f4 % 2) * 5) + 69)) {
                    case 79:
                        switch ((i14 % 1) + 37) {
                        case 37:
                            Test.instanceCount = i15;
                            iArr2[i14] = i17;
                            break;
                        }
                        iArr2[(int)(f4)] = (int)d1;
                        break;
                    case 75:
                        s1 *= (short)i17;
                        break;
                    }
                    by1 *= (byte)i16;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
