package tests.javafuzzer2047;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:56:39 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3597735411L;
    public static double dFld=55.64525;
    public static short sArrFld[][]=new short[N][N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)13454);
        FuzzerUtils.init(Test.dArrFld, 26.106506);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=-50, i4=0, i5=-39326, i6=-18291, i7=-9, i8=45487, i9=16637, i10=5, iArr[]=new int[N];
        float f1=-101.502F;
        long l=-247L;

        FuzzerUtils.init(iArr, -3);

        for (i3 = 22; i3 < 385; i3++) {
            iArr[i3] = i3;
            Test.instanceCount *= i3;
            for (i5 = 1; i5 < 5; i5++) {
                Test.dArrFld[i5 - 1] = Test.dFld;
                for (i7 = 1; i7 < 2; ++i7) {
                    f1 += (i7 * i5);
                }
                f1 = Test.instanceCount;
                for (i9 = 1; i9 < 2; i9++) {
                    Test.instanceCount -= l;
                    Test.instanceCount = (long)Test.dFld;
                    Test.instanceCount += (i9 * i9);
                }
                l += (i5 * i5);
                l <<= l;
                i10 = (int)Test.instanceCount;
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + l +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(float f, int i) {

        byte by=-29;
        int i1=-102, i2=-7601, i11=-224, i12=-24, i13=-88, iArr1[]=new int[N];
        double d=-1.107835;
        long l1=-14233L, l3=130L;

        FuzzerUtils.init(iArr1, -3);

        by <<= (byte)(i++);
        for (i1 = 4; i1 < 157; i1++) {
            Test.sArrFld[i1 - 1][i1 - 1] = (short)((long)((i * d) - (d * Test.instanceCount)) >>> (long)((i2 * i) - d));
            vMeth2();
            for (i11 = 1; i11 < 10; ++i11) {
                long l2=51907L;
                i2 += (((i11 * i1) + i2) - i12);
                i += (int)l1;
                l2 = l1;
                i *= -53;
                i12 = (int)l1;
                Test.sArrFld[i11 + 1][i1 + 1] = (short)18137;
                iArr1[i1] = i1;
                for (l3 = 2; l3 > 1; l3 -= 2) {
                    i2 += (int)(2.719F + (l3 * l3));
                    f += -92;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i + by + i1 + i2 + Double.doubleToLongBits(d) + i11 + i12 + l1 +
            l3 + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        float f2=1.689F;
        int i14=135;

        vMeth1(f2, i14);
        i14 = 6;
        vMeth_check_sum += Float.floatToIntBits(f2) + i14;
    }

    public void mainTest(String[] strArr1) {


        vMeth();



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
