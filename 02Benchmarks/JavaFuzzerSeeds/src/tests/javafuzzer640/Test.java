package tests.javafuzzer640;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:14:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4649736202597169230L;
    public int iFld=103;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(long l, int i) {

        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        bArr[(-143 >>> 1) % N] = false;
        Test.instanceCount >>= ((Test.iArrFld[(219 >>> 1) % N] / ((Test.instanceCount + i) | 1)) + ((Test.iArrFld[(26
            >>> 1) % N]++) + Test.iArrFld[(-5616 >>> 1) % N]));
        vSmallMeth_check_sum += l + i + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(long l1, float f) {

        int i4=11391, i5=6551, i6=135, i7=63468, i8=-20031, i10=-11;
        boolean b=false;
        float f1=-2.984F;

        i4 = 1;
        while (++i4 < 186) {
            i5 = 1;
            while (++i5 < 9) {
                vSmallMeth(Test.instanceCount, 7);
                i6 = -191;
                switch ((((i4 >>> 1) % 1) * 5) + 43) {
                case 48:
                    if (b) break;
                    Test.iArrFld[i4 + 1] = i6;
                    if (b) {
                        Test.instanceCount = i5;
                        i6 /= 178;
                    }
                    for (i7 = i5; i7 < 1; ++i7) {
                        int i9=-39;
                        i8 >>>= i6;
                        l1 += (i7 * i8);
                        i9 *= i5;
                        Test.instanceCount ^= i10;
                    }
                default:
                    Test.instanceCount = (long)f1;
                }
            }
        }
        vMeth_check_sum += l1 + Float.floatToIntBits(f) + i4 + i5 + i6 + (b ? 1 : 0) + i7 + i8 + i10 +
            Float.floatToIntBits(f1);
    }

    public static int iMeth(int i1, int i2, int i3) {

        float f2=93.430F;
        int i11=87;

        vMeth(Test.instanceCount, f2);
        i11 -= i1;
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f2) + i11;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i12=85, i13=42814, i14=128, i15=-11, i16=-1, i17=-44349, i19=-2, i20=89, i21=-2, i22=45104;
        float f3=0.764F, f4=2.602F;
        byte by=47;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1L);

        for (int smallinvoc=0; smallinvoc<724; smallinvoc++) vSmallMeth(Test.instanceCount *
            (Math.max(Test.instanceCount, Test.instanceCount) - (-iFld)), iMeth(iFld, iFld, iFld));
        iFld *= (int)Test.instanceCount;
        for (i12 = 1; i12 < 354; i12++) {
            short s=-10332;
            i13 -= (int)f3;
            for (i14 = 1; i14 < 71; i14++) {
                i13 &= by;
                iFld -= -3;
                f3 = i15;
                lArr[i12] *= i15;
            }
            for (i16 = 2; i16 < 71; i16++) {
                f3 += i16;
                iFld += i14;
                i13 = (int)f3;
                iFld -= -45682;
                i15 = i16;
            }
            i17 -= i14;
            i13 -= 148;
            iFld = -242;
            s = (short)-2.200F;
            iFld %= (int)(s | 1);
            if (false) {
                i15 = i12;
            } else {
                for (i19 = 4; i19 < 71; i19++) {
                    f3 += (((i19 * i13) + i12) - iFld);
                    try {
                        Test.iArrFld[i12 - 1] = (i20 / i20);
                        i15 = (1561 % i19);
                        i20 = (-114 / iFld);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount -= i12;
                    for (f4 = 1; 2 > f4; ++f4) {
                        Test.instanceCount += i14;
                        i21 *= (int)f4;
                        i22 = -5;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test vMeth iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
