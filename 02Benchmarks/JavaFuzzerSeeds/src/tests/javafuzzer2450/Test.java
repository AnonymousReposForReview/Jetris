package tests.javafuzzer2450;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:50:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1797862261L;
    public double dFld=105.702;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -10);
        FuzzerUtils.init(Test.lArrFld, -4L);
        FuzzerUtils.init(Test.dArrFld, -34.41093);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        boolean b=true;
        int i4=7, i5=14, i6=110;
        float f=100.640F, fArr[]=new float[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-3);
        FuzzerUtils.init(fArr, -6.522F);

        b = b;
        for (i4 = 15; i4 < 253; i4++) {
            i5 = i3;
            if (b) {
                i5 *= (int)Test.instanceCount;
                Test.iArrFld[i4 - 1] = i3;
                b = b;
                Test.instanceCount += (i4 * i4);
                vMeth1_check_sum += i3 + (b ? 1 : 0) + i4 + i5 + Float.floatToIntBits(f) + i6 +
                    FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i3 <<= i5;
            switch ((i4 % 5) + 15) {
            case 15:
                switch ((((i3 >>> 1) % 9) * 5) + 88) {
                case 128:
                    for (f = 1; f < 7; ++f) {
                        i3 |= (int)Test.instanceCount;
                        Test.instanceCount <<= i6;
                        i3 *= (int)Test.instanceCount;
                    }
                    break;
                case 92:
                    i5 += (i4 * i5);
                    break;
                case 101:
                    byArr[i4 - 1] &= (byte)i5;
                    break;
                case 107:
                    Test.instanceCount += (long)f;
                    break;
                case 111:
                    Test.iArrFld[i4] = (int)f;
                    break;
                case 102:
                    Test.lArrFld[i4] += Test.instanceCount;
                    break;
                case 124:
                    i3 -= i3;
                    break;
                case 99:
                    fArr[i4] += f;
                    break;
                case 94:
                    i5 >>= i5;
                    break;
                default:
                    i5 = (int)Test.instanceCount;
                }
                break;
            case 16:
                i6 += i5;
                break;
            case 17:
                i6 += (i4 | Test.instanceCount);
                break;
            case 18:
                Test.instanceCount += 10;
                break;
            case 19:
                i6 = (int)Test.instanceCount;
                break;
            default:
                if (b) continue;
            }
        }
        vMeth1_check_sum += i3 + (b ? 1 : 0) + i4 + i5 + Float.floatToIntBits(f) + i6 + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l) {

        int i7=-6, i8=36426, i9=-14, i10=24, i11=16013, i12=-10877, i13=59700;
        float f1=92.526F;
        double d=0.68610;
        short s=4520;
        boolean b1=false;

        try {
            vMeth1(i7);
            for (i8 = 256 + 400; i8 > 4; i8--) {
                Test.iArrFld[i8] >>= i9;
                try {
                    i9 = (898188487 % i8);
                    i7 = (i7 / i7);
                    i7 = (i9 % i9);
                } catch (ArithmeticException a_e) {}
                f1 += (((i8 * f1) + i7) - i9);
            }
            i9 -= (int)d;
            for (i10 = 13; i10 < (303 + 400); ++i10) {
                f1 = s;
                Test.iArrFld[i10 + 1] += (int)l;
                Test.lArrFld[i10] >>>= i8;
                for (i12 = 1; (4 + 400) > i12; ++i12) {
                    if (b1) break;
                    i7 -= (int)d;
                    i13 -= (int)10L;
                }
            }
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            i11 *= i12;
        }
        vMeth_check_sum += l + i7 + i8 + i9 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i10 + i11 + s +
            i12 + i13 + (b1 ? 1 : 0);
    }

    public static int iMeth() {

        int i2=32087, i14=-69, i15=10, i16=-12, i17=58797;
        long l1=-61972071L;
        float f2=-90.644F;
        byte by=35;

        Test.instanceCount += i2;
        vMeth(Test.instanceCount);
        i14 = 378;
        do {
            for (l1 = 1; l1 < 4; l1++) {
                Test.iArrFld[(int)(l1 + 1)] *= i15;
                Test.instanceCount = (long)f2;
                i2 = 21735;
                for (i16 = 2; i16 > 1; --i16) {
                    by ^= (byte)i15;
                    Test.instanceCount = 2014561713L;
                    Test.dArrFld = Test.dArrFld;
                    i17 >>= by;
                    i15 += i2;
                    f2 = i17;
                    i2 = i2;
                }
            }
        } while (--i14 > 0);
        long meth_res = i2 + i14 + l1 + i15 + Float.floatToIntBits(f2) + i16 + i17 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=228, i1=6, i18=-12, i19=0, i20=-6, i21=-82, i22=-116, i23=13;
        boolean b2=true;
        float f3=-120.810F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)10974);

        Test.instanceCount >>= ((i++) - Long.reverseBytes(++Test.instanceCount));
        i += i;
        i1 = 1;
        while (++i1 < 197) {
            Test.instanceCount = (((i++) - (i++)) * (++i));
            iMeth();
        }
        for (i18 = 5; 363 > i18; i18++) {
            for (i20 = 2; 70 > i20; ++i20) {
                if (b2) continue;
                f3 += i21;
                b2 = b2;
                i *= (int)dFld;
                i *= (int)Test.instanceCount;
                i21 = 1;
                f3 += i20;
                sArr[i18] = (short)i19;
            }
        }
        for (i22 = 10; i22 < 321; i22++) {
            i21 += i22;
        }
        i19 += (int)Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
