package tests.javafuzzer14;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=131L;
    public static byte byFld=124;
    public volatile int iFld=0;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 19);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=-144, i2=-12, i3=-34672, i4=12, i5=-173;
        float f=114.784F;
        double d=-1.112694;

        for (i1 = 254; 4 < i1; --i1) {
            for (i3 = i1; i3 < 7; i3++) {
                f += (i3 * i3);
                i2 <<= (int)Test.instanceCount;
                i5 = 1;
                while (++i5 < 1) {
                    i4 += (i5 * f);
                    i4 *= i3;
                    f += i1;
                    Test.instanceCount = (long)2.28129;
                    f *= (float)d;
                    try {
                        i2 = (i3 % i5);
                        Test.iArrFld[i3] = (Test.iArrFld[i1 - 1] / -55032);
                        Test.iArrFld[i5 + 1] = (-1409732611 / Test.iArrFld[i1]);
                    } catch (ArithmeticException a_e) {}
                    i2 = -35769;
                    i2 += i5;
                    Test.instanceCount += (-16 + (i5 * i5));
                    i2 += (int)d;
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + Double.doubleToLongBits(d);
    }

    public static void vMeth(int i, long l, long l1) {

        int i6=-45, i7=-221, i8=4, i9=10;
        boolean b=true;
        float f1=-43.737F;

        vMeth1();
        i = i;
        for (i6 = 380; i6 > 10; --i6) {
            Test.instanceCount += (-35131 + (i6 * i6));
            i ^= i6;
            switch ((i6 % 1) + 47) {
            case 47:
                i -= i6;
                i = i7;
            default:
                Test.instanceCount = i7;
                for (i8 = 5; i8 > 1; i8--) {
                    i9 += i8;
                    Test.instanceCount -= i8;
                    if (b) break;
                    f1 = l1;
                    i9 += i6;
                }
            }
        }
        vMeth_check_sum += i + l + l1 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + Float.floatToIntBits(f1);
    }

    public static long lMeth() {

        int i10=155, i11=-46537, i12=-37051, i14=-10, i15=138, i16=-59839, i17=-1, i18=-7;
        float f2=-1.833F;
        boolean b1=true;
        long l2=14L;
        double d1=0.89832;

        vMeth(i10, Test.instanceCount, 181L);
        for (i11 = 11; i11 < 398; i11++) {
            i10 >>= i12;
            i12 += (i11 ^ (long)f2);
            if (b1) break;
            if (false) break;
            i10 <<= i11;
            i10 += (int)(-79.768F + (i11 * i11));
            for (i14 = 1; i14 < 4; i14++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    i15 += i16;
                }
                switch (((i11 % 10) * 5) + 80) {
                case 101:
                    Test.instanceCount += Test.instanceCount;
                    i17 -= (int)-3402753164730789724L;
                    l2 += i12;
                    break;
                case 115:
                    Test.byFld += (byte)i15;
                    break;
                case 100:
                    Test.iArrFld[i14] <<= i14;
                    break;
                case 119:
                    Test.iArrFld[i11 + 1] <<= i17;
                    break;
                case 122:
                    d1 *= i11;
                    break;
                case 117:
                    Test.instanceCount -= (long)d1;
                    break;
                case 81:
                case 130:
                    i12 = i15;
                    break;
                case 105:
                    Test.instanceCount *= i11;
                    break;
                case 96:
                    i18 = 183;
                    break;
                default:
                    i18 = 80;
                }
            }
        }
        long meth_res = i10 + i11 + i12 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + i14 + i15 + i16 + i17 + l2 +
            Double.doubleToLongBits(d1) + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=174;
        int i19=-30099, i20=-6, i21=-15, i22=14, i23=-155, i24=-2942, i25=9833;
        double d2=-125.85876, dArr[][]=new double[N][N];
        float f3=88.480F;

        FuzzerUtils.init(dArr, -1.80826);

        s *= (short)lMeth();
        i19 <<= i19;
        for (i20 = 9; 356 > i20; i20++) {
            i21 = -7;
            i19 += i20;
            for (i22 = 4; i22 < 73; ++i22) {
                if (true) {
                    d2 = f3;
                    i23 = 174;
                } else {
                    for (i24 = 1; 2 > i24; ++i24) {
                        Test.instanceCount *= i19;
                        dArr[i20 - 1] = FuzzerUtils.double1array(N, (double)6.93933);
                        switch ((((i24 >>> 1) % 10) * 5) + 15) {
                        case 46:
                            iFld = (int)Test.instanceCount;
                            break;
                        case 23:
                            Test.instanceCount = i20;
                            break;
                        case 24:
                            i21 += i24;
                            f3 += (i24 * i24);
                            Test.instanceCount += i24;
                            break;
                        case 41:
                            Test.iArrFld[i22] = (int)Test.instanceCount;
                            break;
                        case 54:
                            i21 = (int)Test.instanceCount;
                            i21 *= i20;
                            break;
                        case 28:
                            try {
                                i25 = (-5735 % i24);
                                i23 = (63 / iFld);
                                iFld = (i24 % i22);
                            } catch (ArithmeticException a_e) {}
                            f3 -= -6;
                            iFld += -59764;
                            Test.instanceCount = i25;
                        case 56:
                            f3 += (i24 * i24);
                            i25 = (int)f3;
                            i25 -= i21;
                            iFld = 2;
                            break;
                        case 39:
                            Test.instanceCount = 32294;
                        case 20:
                            Test.iArrFld[i22 + 1] = (int)Test.instanceCount;
                            break;
                        case 61:
                            Test.instanceCount -= i19;
                            break;
                        }
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
