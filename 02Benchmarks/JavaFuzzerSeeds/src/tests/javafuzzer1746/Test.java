package tests.javafuzzer1746;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:59:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static byte byFld=32;
    public static float fFld=1.485F;
    public static long lFld=3561363966L;
    public static volatile boolean bFld=true;
    public volatile int iFld=11;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -11);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth(int i6) {

        long l1=3L;
        float f2=-2.410F;

        l1 -= (long)f2;
        long meth_res = i6 + l1 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i15) {

        int i16=-3682, i17=-1, i18=2, i19=28812, i20=-4;
        float f3=0.995F;
        boolean b=true;
        short s=17156;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 6.120436);

        for (i16 = 3; i16 < 129; i16++) {
            i15 = (int)Test.instanceCount;
            for (f3 = 1; f3 < 12; ++f3) {
                i15 = Test.byFld;
                Test.fFld += (135 + (f3 * f3));
                i17 -= (int)Test.instanceCount;
                if (b) break;
                i17 = (int)1.9945;
                Test.instanceCount = s;
                dArr[i16 + 1] += 2.531F;
                i18 *= i18;
            }
            for (i19 = i16; i19 < 12; i19 += 2) {
                i20 += 31;
                Test.iArrFld1[i19] |= (int)Test.instanceCount;
                i15 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i15 + i16 + i17 + Float.floatToIntBits(f3) + i18 + (b ? 1 : 0) + s + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l2, long l3, int i14) {

        int i21=184, i22=-43708, i23=32, i24=-119, i25=-6, i26=159, i27=1;
        double d2=0.84472;
        short s1=-26547;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.848F);

        vMeth1(204);
        for (i21 = 10; i21 < 202; ++i21) {
            i22 = (int)3L;
            for (i23 = i21; i23 < 8; ++i23) {
                i14 *= i14;
                Test.iArrFld1[i23] *= i14;
                i25 += i14;
                Test.fFld = 2.361F;
                i14 = (int)l3;
                fArr[i23 + 1] *= i25;
                d2 = i24;
            }
            for (i26 = 1; i26 < 8; i26++) {
                i24 >>= (int)Test.lFld;
                i27 = s1;
                i25 += i23;
            }
        }
        vMeth_check_sum += l2 + l3 + i14 + i21 + i22 + i23 + i24 + i25 + Double.doubleToLongBits(d2) + i26 + i27 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(long l) {

        int i5=8568, i7=52762, i8=0, i9=-30717, i10=11, i11=6, i12=-14580, i13=-13;
        float f1=1.514F;
        double d=99.107459, d1=2.88493;

        i5 *= (int)(((-11 + (Test.instanceCount = (long)f1)) + (i5 - i5)) + ((-5479 + iMeth(i5)) - (d + 22329L)));
        for (d1 = 2; 135 > d1; ++d1) {
            for (i8 = 1; i8 < 12; ++i8) {
                Test.instanceCount += (long)(121.220F + (i8 * i8));
                for (i10 = 1; 2 > i10; ++i10) {
                    i7 += Math.max(i9, (int)((--l) ^ (l * i9)));
                    f1 += (i10 * i11);
                }
                i11 = Math.abs(i8);
                i7 = (--i9);
                Test.instanceCount += i8;
                for (i12 = 1; i12 < 2; ++i12) {
                    vMeth(-247L, l, i11);
                    i13 = i11;
                    i9 = i13;
                    i9 = -14;
                }
            }
        }
        long meth_res = l + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) +
            i7 + i8 + i9 + i10 + i11 + i12 + i13;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=105, i1=54503, i2=56671, i3=25634, i4=4424, i28=28130, i29=18, i30=-9, i31=51;
        boolean bArr[]=new boolean[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr1, -105.80122);

        for (i = 238; i > 9; i--) {
            Test.instanceCount = ((i1 + (++Test.instanceCount)) + iArrFld[i - 1]);
            i2 = 1;
            while (++i2 < 110) {
                for (i3 = 1; 1 > i3; i3++) {
                    float f=-8.410F;
                    f -= (Test.instanceCount--);
                    i4 += (i3 - i3);
                    f += (Test.instanceCount++);
                    if (bArr[i3 + 1] = ((--Test.byFld) <= lMeth(3L))) break;
                    dArr1[i] += i;
                    bArr[i2 - 1] = Test.bFld;
                }
                for (i28 = i; i28 < 1; i28++) {
                    i1 += (int)(7882834804130807368L + (i28 * i28));
                    Test.fFld = i28;
                    i4 += (int)Test.fFld;
                    i1 -= (int)Test.lFld;
                    Test.byFld *= (byte)1.18F;
                    Test.instanceCount += -242;
                }
                for (i30 = 1; 1 > i30; i30++) {
                    i29 = 14;
                    switch (((i31 >>> 1) % 1) + 72) {
                    case 72:
                        i29 ^= i1;
                        iFld += i28;
                        i4 = (int)Test.lFld;
                        i31 -= i;
                        break;
                    default:
                    }
                    i31 += -94;
                    i31 += i30;
                    switch ((i2 % 2) + 6) {
                    case 6:
                        iArrFld[i30 - 1] = iFld;
                        i29 *= (int)-161064079L;
                        i1 -= 12;
                        break;
                    case 7:
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
