package tests.javafuzzer1364;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:52:16 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1970293688599001437L;
    public static double dFld=-2.40800;
    public static volatile short sFld=25373;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 59.638F);
        FuzzerUtils.init(Test.lArrFld, 250L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        int i7=-189, i8=176, i9=14, i10=0, i11=-7423, i12=0, iArr[]=new int[N];
        byte by1=26;
        long l=4549349905632136943L, lArr1[]=new long[N];
        boolean b1=false;
        float f1=73.25F;

        FuzzerUtils.init(lArr1, -194524280L);
        FuzzerUtils.init(iArr, -11);

        for (i7 = 325; i7 > 17; --i7) {
            for (i9 = i7; i9 < 5; ++i9) {
                Test.instanceCount = i10;
                for (i11 = 1; i11 < 1; ++i11) {
                    i12 += by1;
                    l += i11;
                    i8 = (int)Test.dFld;
                    if (b1) continue;
                    b1 = b1;
                    if (i6 != 0) {
                    }
                    Test.fArrFld[i7] = 99L;
                    lArr1[i7 - 1] = (long)f1;
                    iArr[i9] -= (int)l;
                    i6 -= (int)f1;
                }
                i8 += (124 + (i9 * i9));
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + i11 + i12 + by1 + l + (b1 ? 1 : 0) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i4=93, i5=-57623, i13=-12, i14=162, i15=31, i16=7131;
        boolean b=false;
        byte by=-26;

        Test.fArrFld[(i4 >>> 1) % N] = (float)(--Test.dFld);
        i5 = 1;
        while (++i5 < 281) {
            i4 = i4;
            i4 %= (int)((i4--) | 1);
            b = b;
            i4 += (i5 + i5);
            by -= (byte)Math.abs((i4++) + (i4 - i4));
            iMeth(i4);
        }
        i4 += i4;
        for (i13 = 196; i13 > 8; i13--) {
            i4 = i5;
            for (i15 = 1; 8 > i15; i15++) {
                i14 += i15;
                i16 *= i13;
                i14 = i14;
            }
        }
        vMeth1_check_sum += i4 + i5 + (b ? 1 : 0) + by + i13 + i14 + i15 + i16;
    }

    public static void vMeth(int i, short s, int i1) {

        float f=2.174F;
        int i2=-26090, i3=-7, i17=52012, i18=-20719, i19=27396, i20=54058, i21=11, i22=-2;
        boolean b2=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 26726L);

        i += (int)((i - (i1 + i1)) - ((f % (Test.instanceCount | 1)) / ((++i) | 1)));
        for (i2 = 2; i2 < 327; ++i2) {
            Test.dFld = lArr[i2];
        }
        vMeth1();
        b2 = b2;
        i = i1;
        Test.fArrFld[(i3 >>> 1) % N] -= i1;
        for (i17 = 14; 326 > i17; ++i17) {
            i3 += (int)Test.dFld;
            try {
                i1 = (6927 / i17);
                i = (i17 / i1);
                i1 = (i1 % -224);
            } catch (ArithmeticException a_e) {}
            for (i19 = i17; 5 > i19; ++i19) {
                for (i21 = 1; i21 < 1; ++i21) {
                    i20 += i3;
                    i = i18;
                    s >>= (short)115;
                }
            }
        }
        vMeth_check_sum += i + s + i1 + Float.floatToIntBits(f) + i2 + i3 + (b2 ? 1 : 0) + i17 + i18 + i19 + i20 + i21
            + i22 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i23=-103, i25=234, i26=2, i27=-19400, i28=-10, i29=26985, i30=-4, i31=-127, i32=-61444, iArr1[]=new int[N];
        byte by2=-45;
        long l1=253383955L;
        float f2=-35.97F, f3=51.197F;

        FuzzerUtils.init(iArr1, -15927);

        vMeth(i23, Test.sFld, i23);
        Test.lArrFld[(i23 >>> 1) % N][(i23 >>> 1) % N] -= -239;
        for (int i24 : iArr1) {
            Test.instanceCount += i23;
            Test.instanceCount = by2;
            for (i25 = 1; i25 < 63; ++i25) {
                i26 >>= i23;
            }
            i26 += i23;
            i27 = 1;
            do {
                Test.instanceCount -= i23;
                i23 <<= (int)-52L;
                i24 = i27;
                i24 -= i25;
                i26 = i24;
                Test.instanceCount *= 95L;
                i24 += -10;
                for (l1 = 1; 1 > l1; l1++) {
                    iArr1 = iArr1;
                }
                for (f2 = 1; f2 < 1; f2 += 2) {
                    i23 <<= i23;
                    iArr1[i27] -= i23;
                }
            } while (++i27 < 63);
            i30 = 1;
            while (++i30 < 63) {
                i24 += i25;
                Test.instanceCount += i29;
                for (i31 = i30; i31 < 1; ++i31) {
                    i32 >>>= i32;
                    f3 *= i30;
                    f3 += (((i31 * i30) + i31) - i31);
                }
                i29 += i30;
                Test.instanceCount <<= i30;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
