package tests.javafuzzer3455;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:36:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-73L;
    public int iFld=-84;
    public static double dFld=1.93763;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
        FuzzerUtils.init(Test.lArrFld, 609341947557084079L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=17, i4=-29, i5=-223, i6=11, i7=-170;
        short s=-6688;
        byte by=53;
        float f=-92.771F;
        boolean b=true;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 1657985267L);

        Test.iArrFld = Test.iArrFld;
        lArr[(i3 >>> 1) % N][(i3 >>> 1) % N] = (long)-99.577F;
        i3 = (int)Test.instanceCount;
        i3 >>= i3;
        i4 = 1;
        do {
            i5 = 10;
            do {
                for (i6 = 1; i6 < 1; i6++) {
                    s -= (short)i5;
                    Test.instanceCount = by;
                    Test.instanceCount = i6;
                    switch ((i5 % 1) + 45) {
                    case 45:
                        i3 ^= s;
                        if (b) {
                            i3 = i3;
                            f = s;
                        } else if (b) {
                            Test.iArrFld[i5 - 1] <<= s;
                        }
                        break;
                    }
                }
            } while (--i5 > 0);
        } while (++i4 < 153);
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + s + by + Float.floatToIntBits(f) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i2) {

        int i8=-61772, i9=-13, i10=-126, i11=125, i12=33812, i13=-143;
        float f1=120.651F;
        byte by1=19;

        vMeth2();
        for (i8 = 358; 14 < i8; i8 -= 2) {
            for (i10 = i8; i10 < 9; i10++) {
                Test.iArrFld[i10 + 1] *= i9;
                i2 += (int)Test.instanceCount;
            }
            for (i12 = 9; i8 < i12; i12--) {
                i2 = i2;
                switch (((i12 % 7) * 5) + 56) {
                case 87:
                    i13 <<= i12;
                    i2 = i2;
                case 83:
                    i11 <<= i8;
                    f1 -= -123.910F;
                    break;
                case 70:
                    Test.lArrFld[i12 - 1][i8] <<= Test.instanceCount;
                    break;
                case 84:
                    i2 += i12;
                    by1 >>>= (byte)i10;
                    break;
                case 82:
                    i2 <<= i13;
                    break;
                case 71:
                    i11 >>= i12;
                case 85:
                    Test.instanceCount = i11;
                    break;
                }
            }
        }
        vMeth1_check_sum += i2 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + by1;
    }

    public static void vMeth(int i, int i1) {

        int i14=-7, i15=-78, i16=9880, i17=-53, i18=-92, i19=-7292, i20=-53043;
        boolean b1=false;
        float f2=-45.944F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -109.72812);

        vMeth1(i);
        i14 += -33666;
        b1 = true;
        for (i15 = 4; i15 < 302; i15++) {
            for (i17 = 1; i17 < 6; ++i17) {
                i1 += 116;
                for (i19 = 1; i19 < 2; ++i19) {
                    i16 += (i19 * Test.instanceCount);
                    i -= 22;
                    i20 += (i19 * i19);
                    i14 += i19;
                    Test.instanceCount += (((i19 * i17) + Test.instanceCount) - i19);
                    dArr[i15] *= Test.instanceCount;
                    Test.iArrFld[i19 - 1] >>= i19;
                }
                Test.iArrFld[i15 + 1] += (int)f2;
            }
        }
        vMeth_check_sum += i + i1 + i14 + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        short s1=-18009;
        int i21=-22627, i22=92, i23=-194, i24=-21, i25=-5, i26=166, i27=-123, i28=39, i29=-183, iArr[]=new int[N];
        byte by2=21, byArr[]=new byte[N];
        float f3=2.766F;

        FuzzerUtils.init(iArr, 8);
        FuzzerUtils.init(byArr, (byte)-68);

        iArr[(iFld >>> 1) % N] -= (Math.abs(iFld--) + iFld);
        vMeth(iFld, iFld);
        iFld += s1;
        iFld = iFld;
        for (i21 = 375; i21 > 17; i21 -= 2) {
            Test.dFld -= by2;
            i23 = 1;
            do {
                i22 -= (int)Test.instanceCount;
                switch ((((i22 >>> 1) % 5) * 5) + 102) {
                case 111:
                    byArr[i23] += (byte)Test.dFld;
                    iFld += (((i23 * iFld) + i21) - i22);
                    break;
                case 118:
                    for (i24 = 1; i24 < 1; ++i24) {
                        i25 -= i25;
                        i22 += (int)Test.instanceCount;
                        i26 %= (int)(Test.instanceCount | 1);
                        if (false) break;
                        Test.instanceCount = (long)Test.dFld;
                        Test.dFld *= i27;
                        f3 = i22;
                    }
                    Test.instanceCount *= by2;
                    i22 = iFld;
                    Test.instanceCount += (i23 + i22);
                case 109:
                    f3 += i23;
                    Test.dFld = Test.instanceCount;
                    f3 *= i27;
                    i22 = (int)Test.instanceCount;
                    break;
                case 119:
                    for (i28 = 1; i28 < 1; ++i28) {
                        iFld += i23;
                        i29 >>= (int)Test.instanceCount;
                        f3 *= Test.instanceCount;
                    }
                    break;
                case 113:
                    i22 -= 14;
                    break;
                }
            } while (++i23 < 140);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
