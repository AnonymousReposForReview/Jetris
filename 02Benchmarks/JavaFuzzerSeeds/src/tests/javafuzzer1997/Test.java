package tests.javafuzzer1997;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:09:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-420098807L;
    public float fFld=1.763F;
    public long lFld=3540495541L;
    public static double dFld=2.89278;
    public byte byFld=33;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -89.64203);
        FuzzerUtils.init(Test.iArrFld, 16);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i17, int i18) {


        i17 = i17;
        vMeth_check_sum += l1 + i17 + i18;
    }

    public static long lMeth1(int i9, long l, int i10) {

        int i11=12, i12=1, i13=-192, i14=1, i15=-1531, i16=-14, iArr[]=new int[N];
        float f=-4.883F;
        byte by=98;
        double d=42.58562;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr, -139);
        FuzzerUtils.init(lArr, 3L);

        for (i11 = 4; i11 < 253; i11++) {
            i12 += (int)(11L + (i11 * i11));
        }
        i13 = 1;
        while (++i13 < 327) {
            try {
                i12 = (37635 % Test.iArrFld[i13 + 1]);
                Test.iArrFld[i13] = (Test.iArrFld[i13 + 1] % 24051);
                i10 = (-9086 / i12);
            } catch (ArithmeticException a_e) {}
        }
        i9 |= ((-(Test.iArrFld[(i12 >>> 1) % N]--)) + i13);
        f += (++Test.iArrFld[(i11 >>> 1) % N]);
        i14 = 1;
        while (++i14 < 397) {
            i9 &= Test.iArrFld[i14 + 1];
            Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (iArr = iArr)));
            for (i15 = i14; i15 < 4; ++i15) {
                lArr[i15 + 1][i15] -= (((Test.instanceCount--) * (i15 - Test.instanceCount)) + Math.abs((int)(i16 =
                    (int)l)));
                vMeth(57L, 227, -36463);
                Test.iArrFld[(i15 >>> 1) % N] += i13;
                lArr[i15 - 1][i14 - 1] = by;
                iArr[i14 + 1] += (int)d;
            }
        }
        long meth_res = i9 + l + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + i14 + i15 + i16 + by +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public long lMeth(int i3, int i4, int i5) {

        int i6=68, i7=22, i8=220, i19=78, i20=-46636;
        short s=-1362;
        double d1=16.15494;

        i3 -= (int)Test.dArrFld[(63738 >>> 1) % N];
        for (i6 = 13; 280 > i6; ++i6) {
            i8 = 1;
            do {
                Test.instanceCount = (long)(--fFld);
                i3 = (int)(s + ((i3 * i5) - lMeth1(i5, 238L, i4)));
                switch (((i8 % 7) * 5) + 64) {
                case 81:
                case 67:
                    for (i19 = 1; i19 > 1; i19--) {
                        i3 += i4;
                        Test.instanceCount -= i19;
                        d1 += Test.instanceCount;
                        Test.instanceCount = i4;
                        s += (short)(0.873F + (i19 * i19));
                        i20 = (int)Test.instanceCount;
                        i3 = i5;
                        Test.instanceCount = i5;
                    }
                    break;
                case 86:
                    Test.instanceCount = i20;
                case 65:
                    Test.instanceCount = (long)31.30195;
                    break;
                case 66:
                    Test.iArrFld[i6] *= i19;
                    break;
                case 70:
                    Test.instanceCount += i8;
                    break;
                case 72:
                    fFld += -30540;
                    break;
                default:
                    i20 -= (int)1.396F;
                }
            } while (++i8 < 6);
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + s + i19 + i20 + Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=-377, i2=14, i21=33563, i22=-20672, i23=-229, i24=13664, i25=147, i26=-23;
        double d2=0.91434, d3=116.66573;
        boolean b=false;
        short s1=-30115;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, 2494140346L);
        FuzzerUtils.init(fArr, 109.363F);
        FuzzerUtils.init(byArr, (byte)30);

        switch ((((((int)(Test.instanceCount - i)) >>> 1) % 9) * 5) + 127) {
        case 158:
            for (i1 = 236; 2 < i1; i1 -= 3) {
                Test.instanceCount = (long)((-8.285F + lMeth(i2, i1, i1)) * fFld);
            }
            break;
        case 131:
            if (b) {
                d2 = 1;
                while (++d2 < 216) {
                    Test.instanceCount -= lFld;
                }
                i2 >>= i;
                for (i21 = 4; i21 < 166; ++i21) {
                    lArr1[i21 - 1] ^= i1;
                    Test.instanceCount >>>= i1;
                    i23 = 1;
                    do {
                        i22 -= i1;
                        Test.dFld = byFld;
                    } while (++i23 < 155);
                    i -= (int)d2;
                    for (i24 = i21; 155 > i24; ++i24) {
                        i2 = i21;
                        Test.iArrFld = Test.iArrFld;
                        Test.iArrFld[i24 + 1] = (int)lFld;
                        switch (((i24 % 8) * 5) + 22) {
                        case 33:
                            lFld = Test.instanceCount;
                            break;
                        case 40:
                            switch ((i21 % 9) + 26) {
                            case 26:
                                lArr1[i21] += lFld;
                                break;
                            case 27:
                                Test.iArrFld[i21 - 1] += 14;
                                for (d3 = 1; d3 < 1; d3++) {
                                    b = b;
                                    s1 = (short)104.160F;
                                    Test.dArrFld[(int)(d3 + 1)] = lFld;
                                    lFld -= (long)d3;
                                    i2 *= (int)112.593F;
                                    i25 -= (int)fFld;
                                }
                                break;
                            case 28:
                                Test.iArrFld[i21 + 1] = s1;
                                break;
                            case 29:
                                i26 -= (int)Test.instanceCount;
                            case 30:
                                i2 &= i26;
                                break;
                            case 31:
                                i26 = i22;
                                break;
                            case 32:
                                fFld += (float)d2;
                            case 33:
                                fArr[i24 + 1] -= i21;
                                break;
                            case 34:
                                lFld = Test.instanceCount;
                                break;
                            }
                            break;
                        case 50:
                            i2 = i23;
                            break;
                        case 58:
                            fFld = lFld;
                            break;
                        case 48:
                            lFld = i;
                            break;
                        case 35:
                            i += (((i24 * i24) + lFld) - i1);
                            break;
                        case 41:
                            byFld *= (byte)i26;
                            break;
                        case 34:
                            i = (int)fFld;
                            break;
                        default:
                            i2 += (i24 ^ i2);
                        }
                    }
                }
            } else if (b) {
                i26 -= (int)lFld;
            } else {
                i25 = i23;
            }
            break;
        case 135:
            i22 = (int)lFld;
            break;
        case 140:
            i26 *= 59;
            break;
        case 156:
            i25 = (int)lFld;
            break;
        case 129:
            lArr1[(i2 >>> 1) % N] = i22;
            break;
        case 145:
            Test.dFld *= i25;
        case 157:
            i25 = (int)-16858L;
            break;
        case 164:
            byArr = byArr;
            break;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
