package tests.javafuzzer2119;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:12:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=32003L;
    public static short sFld=-26492;
    public static double dFld=-2.82279;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -65);
        FuzzerUtils.init(Test.lArrFld, 12L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l) {

        int i7=37359, i8=3, i9=-46366, i10=37, i11=-61536, i12=38053;
        float f1=-106.337F, f2=108.38F;

        i7 >>= i7;
        for (i8 = 4; i8 < 247; i8++) {
            Test.dFld = 57486;
            Test.instanceCount = 2056L;
            i9 <<= 4876;
            for (i10 = 1; i10 < 7; ++i10) {
                i9 += (((i10 * i8) + i9) - i7);
            }
            if (false) break;
            l &= i10;
            i7 = (int)7L;
            i11 += (((i8 * Test.instanceCount) + i9) - f1);
            for (f2 = 1; f2 < 7; f2++) {
                Test.iArrFld[(int)(f2)] -= i9;
                i11 = i11;
                i9 <<= (int)l;
            }
        }
        long meth_res = l + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i12;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        float f=-2.986F;
        double d=-27.112969;
        int i6=-61617;

        f -= (float)(((Test.instanceCount + f) - d) - (Test.instanceCount - (Test.sFld * i6)));
        i6 = (int)(((i6 + -183) - (-(i6 + f))) * iMeth1(Test.instanceCount));
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i4=-10, i5=40, i13=-3, i14=-25203, i15=-64;
        double d1=-2.99156;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 124.315F);

        for (i4 = 1; 143 > i4; i4++) {
            i3 += (int)Test.instanceCount;
            Test.sFld &= (short)(((i3 * Test.sFld) - (i5++)) * ((i2 + i2) ^ iMeth()));
            try {
                i3 = (i2 / i5);
                i5 = (i2 / Test.iArrFld[i4]);
                i3 = (i3 / 1883353644);
            } catch (ArithmeticException a_e) {}
            if (i5 != 0) {
                vMeth_check_sum += i2 + i3 + i4 + i5 + i13 + i14 + Double.doubleToLongBits(d1) + i15 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            for (i13 = 1; i13 < 11; i13++) {
                i3 = 4;
                d1 = 1;
                do {
                    Test.instanceCount = i15;
                    if (Test.bFld) break;
                    Test.iArrFld[i4 - 1] += (int)Test.instanceCount;
                    Test.instanceCount &= -143;
                    i15 += i4;
                    i5 = i4;
                    fArr[i4 + 1] = -229L;
                } while (++d1 < 2);
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i13 + i14 + Double.doubleToLongBits(d1) + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=59, i1=97, i16=-34306, i17=-1, i18=-51106, i19=70, i20=26, i21=10;
        float f3=-24.793F;
        long l1=-1000218744866570047L;
        byte by=-80, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)29);

        for (i = 1; i < 132; ++i) {
            vMeth(i, i1);
            for (i16 = 6; 191 > i16; i16++) {
                f3 = i17;
                i1 = i16;
                switch ((i16 % 3) + 84) {
                case 84:
                    i17 -= i16;
                    Test.instanceCount += (i16 * i16);
                    i1 *= (int)Test.instanceCount;
                    Test.iArrFld[i + 1] *= i17;
                    break;
                case 85:
                    switch (((i % 1) * 5) + 71) {
                    case 72:
                        f3 -= i17;
                        break;
                    default:
                        l1 = 19;
                        for (i18 = 1; i18 < 2; i18 += 2) {
                            Test.bFld = Test.bFld;
                            Test.instanceCount += (i18 ^ Test.instanceCount);
                            i1 <<= -93;
                            i17 += (i18 * i18);
                            Test.lArrFld[i] <<= 2490340823L;
                            Test.instanceCount *= i;
                            byArr[i16] *= (byte)Test.dFld;
                            i19 += (((i18 * i17) + by) - f3);
                        }
                        i1 >>= i19;
                    }
                    i1 = i1;
                case 86:
                    for (i20 = i; 2 > i20; i20++) {
                        switch (((i % 8) * 5) + 66) {
                        case 97:
                            Test.instanceCount = i17;
                            i21 >>= i1;
                            by += (byte)i20;
                            break;
                        case 77:
                            i1 += i20;
                        case 83:
                            i21 = -7;
                            break;
                        case 103:
                            Test.instanceCount = i21;
                            break;
                        case 84:
                            i19 += (int)Test.instanceCount;
                            break;
                        case 67:
                            f3 -= -1.410F;
                            break;
                        case 68:
                            f3 *= 151L;
                            break;
                        case 92:
                            i19 *= i20;
                        }
                    }
                    break;
                default:
                    l1 = i20;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
