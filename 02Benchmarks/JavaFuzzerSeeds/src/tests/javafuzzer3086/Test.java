package tests.javafuzzer3086;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:34:32 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=30366L;
    public volatile float fFld=1.925F;
    public static byte byFld=3;
    public short sFld=30352;
    public double dFld=1.6206;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=38627, i7=3, iArr[]=new int[N];
        float f=75.284F, f1=-2.183F;
        boolean b=false;
        short sArr[][]=new short[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -7211);
        FuzzerUtils.init(sArr, (short)16982);
        FuzzerUtils.init(dArr, 33.120056);

        try {
            i6 = 1;
            do {
                switch (((i6 % 9) * 5) + 104) {
                case 125:
                case 128:
                    iArr[i6 - 1] -= 3;
                    i7 += Test.byFld;
                    break;
                case 124:
                    i7 = i6;
                case 144:
                    f /= -10;
                    break;
                case 140:
                case 143:
                    iArr[i6] -= (int)Test.instanceCount;
                    Test.instanceCount = i6;
                case 118:
                    if (b) {
                        if (b) {
                            sArr = sArr;
                        } else if (b) {
                            f1 = 1;
                            do {
                                i7 += (int)f1;
                                iArr[(int)(f1)] ^= i7;
                            } while (++f1 < 5);
                        } else if (b) {
                            dArr[i6 + 1] = -93;
                        }
                    } else if (b) {
                        iArr = FuzzerUtils.int1array(N, (int)0);
                    } else {
                        f += (i6 - Test.byFld);
                        vMeth2_check_sum += i6 + i7 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + (b ? 1 : 0)
                            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    break;
                case 134:
                    iArr[i6] = (int)Test.instanceCount;
                    break;
                case 117:
                    iArr = iArr;
                    break;
                default:
                    i7 = (int)Test.instanceCount;
                }
            } while (++i6 < 311);
        }
        catch (UserDefinedExceptionTest exc1) {
            Test.instanceCount = i7;
        }
        vMeth2_check_sum += i6 + i7 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i3) {

        int i4=70, i5=-7, i8=52049, i9=39435, iArr1[]=new int[N];
        float f2=-2.692F, fArr[][]=new float[N][N];
        double d=0.94157;
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 0.11F);
        FuzzerUtils.init(iArr1, -249);
        FuzzerUtils.init(byArr, (byte)109);

        for (i4 = 17; i4 < 352; ++i4) {
            vMeth2();
            for (i8 = 1; i8 < 5; i8++) {
                i9 -= -31665;
                switch ((i4 % 8) + 113) {
                case 113:
                    f2 -= i5;
                    d = i9;
                    Test.instanceCount += (i8 + i9);
                    Test.instanceCount = i3;
                    break;
                case 114:
                    Test.instanceCount += i8;
                    fArr = fArr;
                    break;
                case 115:
                    i9 -= 83;
                    Test.instanceCount -= -229L;
                    Test.instanceCount = Test.instanceCount;
                case 116:
                    if (b1) continue;
                case 117:
                    iArr1[i8] = 7;
                case 118:
                    fArr[i8 - 1][i4 - 1] -= i8;
                case 119:
                case 120:
                    byArr[i4 + 1] >>= (byte)i3;
                    break;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i8 + i9 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) + (b1 ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i, int i1, int i2) {

        int i10=-80, i11=8388, i12=-12, i13=-209, i14=56059, i15=2488;
        double d1=-1.122483;
        byte by=50;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -156L);

        vMeth1(i2);
        i2 += i1;
        for (i10 = 9; i10 < 227; i10++) {
            d1 = Test.instanceCount;
            for (i12 = 1; 7 > i12; i12++) {
                i2 >>>= (int)Test.instanceCount;
                lArr[i10] = i2;
            }
            by = (byte)14;
            Test.instanceCount += (long)-1.16382;
            if (b2) break;
            for (i14 = i10; 7 > i14; ++i14) {
                Test.instanceCount += (i14 * i14);
                i11 -= (int)Test.instanceCount;
                i11 = 57976;
                i13 += i2;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 + by + (b2 ? 1 : 0) + i14
            + i15 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=34496, i17=-4, i18=203, i19=-31945, i20=18917, i21=-57871, i22=-13, i23=7, i24=8;
        long l=-8752160014695809975L, lArr1[]=new long[N];
        boolean b3=true;

        FuzzerUtils.init(lArr1, 287951224106581449L);

        fFld *= -2;
        vMeth(i16, i16, i16);
        for (i17 = 2; 336 > i17; i17++) {
            Test.instanceCount = 81L;
            for (i19 = 75; 2 < i19; --i19) {
                i18 &= 250;
                i20 += (int)(3607330754263491468L + (i19 * i19));
                i20 = 30307;
                i18 += i18;
            }
            l = 1;
            while (++l < 75) {
                sFld += (short)(l * l);
                i21 = 1;
                while ((i21 -= 3) > 0) {
                    dFld -= 153;
                    iArrFld[i17 + 1] -= i17;
                    i16 += (i21 ^ i22);
                    b3 = b3;
                }
                switch ((i17 % 2) + 126) {
                case 126:
                    i18 <<= i21;
                    fFld = 34157;
                    sFld += (short)fFld;
                    break;
                case 127:
                    switch (((i19 >>> 1) % 6) + 75) {
                    case 75:
                        iArrFld[(int)(l - 1)] += -5;
                        iArrFld[i17 - 1] |= i22;
                        i18 *= -32518;
                        break;
                    case 76:
                        for (i23 = 1; i23 > 1; --i23) {
                            i20 &= (int)l;
                            i22 >>= (int)-165377890L;
                            lArr1[i23 - 1] *= l;
                            Test.instanceCount -= (long)1.672F;
                            Test.instanceCount += i21;
                        }
                        break;
                    case 77:
                        sFld ^= (short)i19;
                        break;
                    case 78:
                        iArrFld[i17 + 1] = i24;
                        break;
                    case 79:
                        i22 += (int)(l + i18);
                        break;
                    case 80:
                        iArrFld[(int)(l - 1)] >>= (int)-1663153910019838798L;
                    }
                    break;
                default:
                    i24 *= (int)dFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
