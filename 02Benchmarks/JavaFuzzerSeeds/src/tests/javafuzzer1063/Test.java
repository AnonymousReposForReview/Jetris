package tests.javafuzzer1063;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:48:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-21L;
    public static int iFld=-58;
    public static double dFld=96.98453;
    public static byte byFld=-13;
    public static int iFld1=27;
    public boolean bFld=true;
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -12L);
    }

    public static long lMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        long l=-61L;
        float f2=-28.455F, f3=0.45F;
        boolean b=true;
        int i5=10, i6=-8, i7=-10, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 13);

        l = Test.iFld;
        Test.iFld = Test.iFld;
        if (b) {
            iArr1[(-212 >>> 1) % N] += Test.iFld;
            Test.byFld *= (byte)f2;
            l += Test.iFld;
        }
        Test.iFld -= Test.iFld;
        Test.iFld = Test.iFld;
        if (b) {
            iArr1[(Test.iFld >>> 1) % N] += Test.byFld;
            for (i5 = 242; i5 > 15; i5 -= 2) {
                i6 += (i5 * i5);
                for (f3 = 1; f3 < 14; f3++) {
                    iArr1[(int)(f3 + 1)] += i7;
                    l = i6;
                }
            }
        } else {
            l += i5;
        }
        long meth_res = l + Float.floatToIntBits(f2) + (b ? 1 : 0) + i5 + i6 + Float.floatToIntBits(f3) + i7 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth(int i3, int i4) {

        int i8=163, i9=0, i10=-16977, i11=-56007, i12=-51, iArr2[]=new int[N], iArr3[][]=new int[N][N];
        boolean b1=true;

        FuzzerUtils.init(iArr2, 39493);
        FuzzerUtils.init(iArr3, 62463);

        i4 = iMeth();
        Test.byFld -= (byte)i4;
        i8 = 1;
        while (++i8 < 364) {
            for (i9 = 1; 5 > i9; ++i9) {
                for (i11 = i8; 2 > i11; ++i11) {
                    Test.instanceCount += (i11 ^ Test.iFld);
                    Test.iFld += (i11 - Test.instanceCount);
                    switch ((i8 % 1) + 40) {
                    case 40:
                        Test.iFld *= i11;
                        Test.instanceCount <<= i10;
                        break;
                    default:
                        iArr2[i11] >>= i8;
                        iArr3 = iArr3;
                        i12 &= -55450;
                        Test.instanceCount += Test.instanceCount;
                    }
                    b1 = b1;
                }
            }
        }
        long meth_res = i3 + i4 + i8 + i9 + i10 + i11 + i12 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(iArr3);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public long lMeth(int i1, int i2) {

        float f1=-67.1004F;
        int i13=0, i14=23441, i15=14, iArr4[]=new int[N];

        FuzzerUtils.init(iArr4, -23150);

        f1 = (i1 - sMeth(Test.iFld, -10));
        i2 *= i2;
        for (i13 = 4; 265 > i13; ++i13) {
            i14 >>= Test.iFld;
            i15 = 1;
            while (++i15 < 6) {
                Test.instanceCount >>= -24775;
                i14 = -26696;
                f1 -= Test.instanceCount;
                Test.dFld += Test.dFld;
                iArr4 = iArr4;
                if (false) continue;
                i1 -= 11;
                i2 += i2;
            }
            iArr4[i13 + 1] >>= (int)Test.instanceCount;
            i14 = (int)Test.instanceCount;
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f1) + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr4);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=0.897F;
        int i=-16949, i16=-23473, i17=157, i18=-16517, i19=65370, i20=-44189, iArr[]=new int[N];
        double d=-78.120637, dArr[]=new double[N];
        short s=7919;

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(dArr, -103.82838);

        Test.instanceCount <<= (long)(-((Test.iFld * Test.dFld) + (Test.iFld--)));
        Test.dFld -= Test.iFld;
        Test.iFld = (int)(Test.iFld - ((f - Test.iFld) + (Test.iFld + Test.iFld)));
        i = 1;
        do {
            Test.iFld += (iArr[i] -= (Test.iFld ^= (-Math.min(Test.iFld, Test.iFld))));
            Test.lArrFld[i] |= (Math.min(-97, (int)(-36 + lMeth(Test.iFld, i))) % (i | 1));
            d = 1;
            do {
                Test.instanceCount = Test.iFld1;
                iArr[(int)(d)] *= Test.iFld1;
                iArr[(int)(d)] = Test.iFld;
                for (i16 = 1; i16 > 1; i16 -= 2) {
                    Test.iFld1 += (int)(3L + (i16 * i16));
                    if (true) continue;
                }
                s += (short)f;
                Test.iFld >>= (int)Test.instanceCount;
                for (i18 = i; 1 > i18; ++i18) {
                    Test.iFld += (((i18 * Test.iFld1) + i16) - i19);
                    Test.iFld = Test.iFld;
                    switch (((Test.iFld1 >>> 1) % 5) + 12) {
                    case 12:
                        switch (((i % 7) * 5) + 27) {
                        case 43:
                            iArr[(int)(d + 1)] *= 93;
                            i20 = (int)51266L;
                            i20 -= (int)4204866073L;
                            break;
                        case 46:
                            Test.iFld = Test.iFld;
                            i17 >>= i17;
                            break;
                        case 33:
                            bFld = bFld;
                            i20 += i18;
                            break;
                        case 31:
                            Test.instanceCount = -5L;
                            i19 = Test.byFld;
                            i17 += i16;
                        case 54:
                            Test.byFld = (byte)Test.dFld;
                            break;
                        case 57:
                            dArr[(int)(d + 1)] += Test.iFld1;
                            break;
                        case 38:
                            iArr[i + 1] += i17;
                            break;
                        }
                    case 13:
                        i19 += (i18 - Test.instanceCount);
                        break;
                    case 14:
                        Test.iFld1 = 201;
                        break;
                    case 15:
                        Test.dFld += -1.7024;
                        break;
                    case 16:
                        if (bFld) continue;
                    default:
                        i20 *= Test.byFld;
                    }
                }
            } while (++d < 118);
        } while (++i < 213);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  sMeth ->  sMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
