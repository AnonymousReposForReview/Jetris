package tests.javafuzzer2591;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:59:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static double dFld=2.38973;
    public static volatile boolean bFld=false;
    public static byte byFld=66;
    public static int iFld=-140;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -64);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i8, float f, int i9) {

        int i10=2, i11=7;
        float f1=63.31F;

        i9 = (int)f;
        Test.byFld >>= (byte)i8;
        i10 = 1;
        do {
            f += i9;
            Test.iArrFld[i10 - 1] += 8576;
            for (f1 = 7; f1 > 1; f1--) {
                i8 += (int)((long)f1 | i10);
                i11 += (int)(f1 * f1);
                Test.dFld = 4;
                i11 >>= -164;
            }
            i11 = i9;
        } while (++i10 < 220);
        long meth_res = i8 + Float.floatToIntBits(f) + i9 + i10 + Float.floatToIntBits(f1) + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static float fMeth() {

        int i7=-10496, i12=-5, i13=5;
        float f2=-1.583F;
        short s1=-31706;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)114);

        i7 = (int)lMeth(-2, f2, i7);
        i7 = s1;
        i7 = 19304;
        i7 >>= 0;
        Test.iArrFld[(i7 >>> 1) % N] = (int)Test.instanceCount;
        i7 *= i7;
        i7 <<= (int)Test.instanceCount;
        if (Test.bFld) {
            for (i12 = 168; 8 < i12; i12--) {
                i13 += (int)f2;
                Test.byFld = (byte)i12;
                i7 += i7;
                i13 += i12;
            }
            Test.iArrFld[(i13 >>> 1) % N] = i13;
            i13 = (int)f2;
        } else if (Test.bFld) {
            byArr = byArr;
        }
        long meth_res = i7 + Float.floatToIntBits(f2) + s1 + i12 + i13 + FuzzerUtils.checkSum(byArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(long l, byte by, long l1) {

        int i4=5, i5=3, i6=4802, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 110);

        i4 = (int)Test.dFld;
        for (i5 = 7; 194 > i5; ++i5) {
            Test.bFld = (!Test.bFld);
            iArr1[i5 + 1] &= (int)(fMeth() - Test.byFld);
            iArr1 = FuzzerUtils.int1array(N, (int)-53338);
        }
        vMeth_check_sum += l + by + l1 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=72, i1=-212, i2=-36654, i3=7, iArr[][]=new int[N][N];
        double d=121.69269, d1=-7.28571;
        boolean b=false;
        short s=-29532;
        float f3=0.916F;

        FuzzerUtils.init(iArr, 126);

        for (i = 4; i < 247; ++i) {
            Test.instanceCount += i;
            i2 = 1;
            do {
                i3 = 1;
                do {
                    switch (((i1 >>> 1) % 8) + 84) {
                    case 84:
                        try {
                            i1 = (-62658 % i2);
                            i1 = (i2 / -1437646550);
                            i1 = (i / -129032223);
                        } catch (ArithmeticException a_e) {}
                        iArr[i + 1][i] -= (int)(++Test.instanceCount);
                        iArr[i3][i2 + 1] *= i1;
                        i1 *= ((i1++) + Math.min(iArr[i3][i2 - 1] -= i3, i3));
                    case 85:
                        i1 = (int)(Test.instanceCount--);
                        i1 = (i1--);
                        d = -119.1012F;
                        break;
                    case 86:
                        if (b) continue;
                        i1 = iArr[i3][i3];
                        switch ((((-6 * i3) >>> 1) % 10) + 102) {
                        case 102:
                            s &= (short)Math.abs(i3);
                            i1 += (-113 + (i3 * i3));
                            break;
                        case 103:
                            i1 = (iArr[i3 + 1][i - 1] - ((i3 * i3) - (++i1)));
                            i1 /= (int)((i1--) | 1);
                            break;
                        case 104:
                            vMeth(7893770451862445172L, Test.byFld, Test.instanceCount);
                            break;
                        case 105:
                            i1 <<= i1;
                            d1 = i;
                            if (b) break;
                            break;
                        case 106:
                            if (Test.bFld) continue;
                            Test.instanceCount = i1;
                            Test.instanceCount = (long)d;
                            break;
                        case 107:
                            i1 /= (int)(Test.instanceCount | 1);
                            f3 = i3;
                            i1 = (int)Test.instanceCount;
                            break;
                        case 108:
                            i1 = i;
                        case 109:
                            i1 += (int)1.707F;
                            break;
                        case 110:
                            Test.dFld = f3;
                            break;
                        case 111:
                            try {
                                i1 = (90 / i3);
                                i1 = (i1 / i1);
                                Test.iArrFld[i] = (Test.iArrFld[i] % 220);
                            } catch (ArithmeticException a_e) {}
                            break;
                        }
                    case 87:
                        try {
                            i1 = (i % i1);
                            Test.iArrFld[(i >>> 1) % N] = (-1720351385 % i3);
                            i1 = (i2 / i3);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 88:
                        i1 -= -14;
                        break;
                    case 89:
                        Test.byFld += (byte)(i3 + Test.instanceCount);
                        break;
                    case 90:
                        i1 += Test.iFld;
                        break;
                    case 91:
                        Test.instanceCount = i2;
                        break;
                    default:
                        Test.instanceCount = 70;
                    }
                } while ((i3 -= 2) > 0);
            } while (++i2 < 103);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
