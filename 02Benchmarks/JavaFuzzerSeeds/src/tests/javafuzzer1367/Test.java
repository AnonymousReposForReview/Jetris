package tests.javafuzzer1367;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:52:22 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-19384L;
    public static byte byFld=127;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -67.477F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        float f=-27.598F;
        short s1=-5738;
        long l=108L, lArr[]=new long[N];
        int i6=11, i7=-44470, i8=-57751, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -55487);
        FuzzerUtils.init(lArr, 2085207525L);

        f = s1;
        i5 += (int)f;
        i5 = i5;
        f -= i5;
        iArr[(i5 >>> 1) % N] -= (int)Test.instanceCount;
        l = 1;
        while (++l < 128) {
            Test.instanceCount += (((l * i5) + i5) - i5);
            i6 = 1;
            do {
                i5 += (i6 * i6);
                f = i6;
                lArr[(int)(l)] = 51364;
                for (i7 = 1; 1 > i7; i7++) {
                    i5 += (i7 ^ l);
                }
                iArr[i6 - 1] += (int)f;
                Test.instanceCount += (long)1.64490;
            } while (++i6 < 12);
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f) + s1 + l + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i4, byte by, boolean b1) {

        long l1=-6349292281121042404L, l2=117L;
        int i9=-13, i10=-28, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -33478);

        vMeth1(i4);
        i4 = -13;
        for (l1 = 7; l1 < 159; l1++) {
            double d=-55.59859;
            float f1=0.552F;
            Test.instanceCount -= l1;
            i9 *= i4;
            if (true) continue;
            if (b1) continue;
            switch ((int)(((l1 % 6) * 5) + 117)) {
            case 141:
            case 128:
                i4 |= -139;
                break;
            case 142:
                switch ((((i9 >>> 1) % 10) * 5) + 103) {
                case 137:
                    for (l2 = 1; l2 < 10; ++l2) {
                        i4 <<= i9;
                        i4 -= i4;
                        i10 <<= i4;
                        i10 += i4;
                    }
                case 151:
                    i4 += (int)l1;
                case 153:
                    if (false) continue;
                case 133:
                    by = (byte)143L;
                    break;
                case 126:
                    d += i9;
                    break;
                case 135:
                    i4 = (int)-29229L;
                    break;
                case 134:
                    i9 >>= i10;
                    break;
                case 139:
                    f1 = i9;
                    break;
                case 113:
                    iArr1[(int)(l1)] = i4;
                    break;
                case 152:
                    i9 = i9;
                }
                break;
            case 132:
                if (i9 != 0) {
                    vMeth_check_sum += i4 + by + (b1 ? 1 : 0) + l1 + i9 + l2 + i10 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                break;
            case 137:
                i4 &= i10;
                break;
            case 145:
                if (i4 != 0) {
                    vMeth_check_sum += i4 + by + (b1 ? 1 : 0) + l1 + i9 + l2 + i10 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            default:
                f1 += i10;
            }
        }
        vMeth_check_sum += i4 + by + (b1 ? 1 : 0) + l1 + i9 + l2 + i10 + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i3) {

        short s=9165;
        boolean b2=false;
        int i11=-31782, i12=28230, i13=-61165, iArr2[]=new int[N];
        float f2=0.754F;

        FuzzerUtils.init(iArr2, -3);

        s >>= (short)i3;
        vMeth(i3, Test.byFld, b2);
        b2 = false;
        for (i11 = 14; 263 > i11; ++i11) {
            try {
                i12 = (i12 % -933);
                i3 = (15816 % iArr2[i11]);
                iArr2[i11 + 1] = (i12 / 50655);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount ^= Test.byFld;
        }
        i13 = 1;
        do {
            Test.instanceCount += Test.instanceCount;
            i3 -= (int)-104L;
            try {
                iArr2[i13 + 1] = (i11 % -65096);
                i12 = (-36382 / i12);
                i3 = (iArr2[i13 - 1] / -1713770666);
            } catch (ArithmeticException a_e) {}
            f2 += (i13 * i13);
            iArr2 = iArr2;
            f2 -= i3;
            i3 += (i13 * i13);
            f2 = i12;
        } while (++i13 < 270);
        long meth_res = i3 + s + (b2 ? 1 : 0) + i11 + i12 + i13 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-253, i1=-51335, i2=74, i15=9, i16=24, i17=139, i18=-18641, i19=-18523, i20=-10, i21=-52547, i22=32354,
            i23=106, i24=-113, iArr3[]=new int[N];
        boolean b=false;
        long l3=-9L, l4=14L;
        double d1=-1.54384;
        float f3=16.221F;

        FuzzerUtils.init(iArr3, -150);

        if (b) {
            if (b) {
                i = -22187;
            }
            for (i1 = 8; i1 < 139; i1++) {
                i2 = (int)(lMeth(i) + Test.instanceCount);
                for (l3 = 9; l3 < 191; l3++) {
                    i = i1;
                    d1 -= i15;
                    f3 += -13L;
                    Test.fArrFld[i1 + 1] += i16;
                }
                i = (int)1124398821L;
                f3 += (-45581 + (i1 * i1));
                i16 -= i;
                for (i17 = 8; i17 < 191; ++i17) {
                    for (i19 = i17; 2 > i19; ++i19) {
                        iArr3[i1 + 1] = (int)Test.instanceCount;
                        Test.instanceCount *= i15;
                        iArr3[i17] -= 33;
                    }
                    i15 = (int)Test.instanceCount;
                    for (i21 = 1; i21 < 2; ++i21) {
                        iArr3[(i2 >>> 1) % N] += (int)l4;
                        l4 = i15;
                    }
                    for (i23 = i17; i23 < 2; i23++) {
                        i *= (int)l4;
                        iArr3[i1] *= (int)l4;
                        Test.instanceCount *= i1;
                        Test.byFld = (byte)-33865;
                        iArr3[i23 - 1] = i19;
                    }
                }
                i2 += (int)f3;
                try {
                    i22 = (-16 / i23);
                    i20 = (i17 / -1401700798);
                    i15 = (i24 % -239);
                } catch (ArithmeticException a_e) {}
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
