package tests.javafuzzer1571;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:09:41 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=207L;
    public short sFld=13775;
    public float fFld=-127.1020F;
    public static double dFld=2.114881;
    public static int iFld=-20024;
    public float fArrFld[][]=new float[N][N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s, int i6) {

        int i7=-71, i8=110, i9=33287, i10=-6836, i11=49, i12=-8, iArr[]=new int[N];
        float f=-27.417F;

        FuzzerUtils.init(iArr, -132);

        for (i7 = 14; 245 > i7; ++i7) {
            if (i8 != 0) {
                vMeth1_check_sum += s + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            Test.instanceCount >>= Test.instanceCount;
            for (i9 = 7; i9 > 1; i9 -= 2) {
                i10 *= i7;
                f -= i9;
                for (i11 = 1; 3 > i11; i11++) {
                    Test.instanceCount += -141;
                    i10 *= i10;
                    iArr[i11] = (int)-2.757F;
                    s += (short)27822;
                    Test.instanceCount = i7;
                    i10 = i11;
                    i12 += (int)Test.instanceCount;
                    i8 += (((i11 * Test.instanceCount) + i11) - i6);
                }
            }
        }
        vMeth1_check_sum += s + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        short s1=-10803;
        int i13=200, i14=18, i15=5, i16=9, i17=-23039, i18=-13, i19=-12, i20=20050;
        boolean b=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 73.126698);

        vMeth1(s1, i13);
        try {
            for (i14 = 354; i14 > 1; --i14) {
                Test.instanceCount += i15;
                Test.instanceCount -= i14;
            }
            i15 = (int)-2166L;
            Test.instanceCount = -237;
            i13 = (int)Test.instanceCount;
        }
        catch (UserDefinedExceptionTest exc1) {
            i16 = 1;
            do {
                dArr[i16] += i15;
                for (i17 = i16; i17 < 7; i17++) {
                    if (b) {
                        for (i19 = 1; i19 > i17; --i19) {
                            i13 += i19;
                            Test.instanceCount += i15;
                        }
                        vMeth_check_sum += s1 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + (b ? 1 : 0) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    } else if (b) {
                        b = true;
                    }
                }
            } while (++i16 < 221);
        }
        vMeth_check_sum += s1 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public int iMeth(long l) {

        int i4=4, i5=64544, i21=-53111, i22=-42957, i23=-4, iArr1[]=new int[N];
        double d=1.90821;

        FuzzerUtils.init(iArr1, 12);

        for (i4 = 6; 128 > i4; ++i4) {
            vMeth();
            i5 |= i5;
            i5 <<= i5;
            try {
                iArr1[i4] = (i5 / i4);
                i5 = (iArr1[i4 + 1] / iArr1[i4]);
                iArr1[i4] = (iArr1[i4 + 1] % 44842);
            } catch (ArithmeticException a_e) {}
            i5 = (int)Test.instanceCount;
        }
        i5 = 39;
        l >>= l;
        for (i21 = 3; 251 > i21; ++i21) {
            d += i5;
            i22 += sFld;
            i5 *= (int)Test.instanceCount;
        }
        i23 = 1;
        while (++i23 < 130) {
            d = d;
            i22 += i5;
        }
        long meth_res = l + i4 + i5 + i21 + i22 + Double.doubleToLongBits(d) + i23 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=12, i1=24419, i2=-121, i3=35022, i24=2701, i25=-15978, i26=-6, i27=-7, iArr2[]=new int[N];
        double d1=1.119990;
        boolean b1=true, b2=true;
        byte by=-69;

        FuzzerUtils.init(iArr2, -67);

        for (i = 18; i < 350; i += 2) {
            if (b1) {
                for (i2 = i; i2 < 151; ++i2) {
                    if (iMeth(Test.instanceCount) == i3) continue;
                    for (d1 = 1; d1 > 1; d1 -= 2) {
                        iArr2[(int)(d1 - 1)] -= i;
                        i24 += (int)(d1 + fFld);
                        if (b1) continue;
                    }
                    for (i25 = 1; i25 < 1; ++i25) {
                        i1 = (int)fFld;
                        i1 += i25;
                        fFld = fFld;
                        Test.dFld += i25;
                        fArrFld = fArrFld;
                        i3 ^= i;
                    }
                    try {
                        i1 = (15372 % iArr2[i - 1]);
                        iArr2[i] = (12605 / i1);
                        i1 = (35153 / i2);
                    } catch (ArithmeticException a_e) {}
                    i3 = Test.iFld;
                    iArr2[i] -= Test.iFld;
                    Test.iFld += (i2 ^ i26);
                    i27 = 1;
                    while (++i27 < 1) {
                        switch (((Test.iFld >>> 1) % 8) + 66) {
                        case 66:
                            Test.instanceCount += i27;
                            fFld = Test.iFld;
                            fFld = Test.instanceCount;
                            break;
                        case 67:
                            iArr2[i - 1] = Test.iFld;
                            fArrFld[i - 1][i27 + 1] *= 118;
                            break;
                        case 68:
                            if (b1) break;
                            by -= (byte)i1;
                            Test.dFld = fFld;
                            i1 = i;
                            break;
                        case 69:
                            if (b2) continue;
                            break;
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                            Test.iFld += (int)Test.instanceCount;
                            break;
                        default:
                            i24 |= i1;
                        }
                    }
                }
            } else {
                i1 += i25;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
