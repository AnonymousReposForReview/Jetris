package tests.javafuzzer3201;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:48:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8755366063619287564L;
    public static float fFld=12.781F;
    public boolean bFld=false;
    public short sFld=-10157;
    public static int iArrFld[]=new int[N];
    public byte byArrFld[][]=new byte[N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=21842, i3=14, i4=57573, i5=-253, i6=-31, i7=-22187, i8=-63836;
        float f=2.375F;
        byte by=23;
        short s=3339;
        double d=-1.1114;

        for (i2 = 2; i2 < 327; ++i2) {
            switch (((i2 >>> 1) % 2) + 8) {
            case 8:
                for (i4 = 1; i4 < 5; i4++) {
                    try {
                        i5 = (i5 % -15998);
                        i3 = (i5 % 25893);
                        Test.iArrFld[i4] = (Test.iArrFld[i2] % i2);
                    } catch (ArithmeticException a_e) {}
                    f += (i4 * i4);
                    i3 -= i2;
                    i5 += (((i4 * by) + Test.instanceCount) - Test.instanceCount);
                    i6 = 1;
                    while (++i6 < 2) {
                        i5 += s;
                        f += i6;
                    }
                }
                d -= f;
                i3 -= i2;
                break;
            case 9:
                for (i7 = 1; 5 > i7; ++i7) {
                    try {
                        Test.iArrFld[i7 - 1] = (-147 / i2);
                        i8 = (31928 % i3);
                        i8 = (-9937 / i2);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount ^= i3;
                }
                break;
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + by + i6 + s + Double.doubleToLongBits(d) + i7
            + i8;
    }

    public static void vMeth1() {

        int i=-216, i1=4, i9=-66, i10=-22074;
        double d1=-109.106939;

        for (i = 5; i < 295; i++) {
            i1 *= ((++i1) * (i1--));
        }
        i1 *= (++i1);
        vMeth2();
        for (i9 = 5; i9 < 157; ++i9) {
            try {
                i1 = (880991157 / Test.iArrFld[i9]);
                i1 = (i9 / i10);
                i10 = (i10 % 174);
            } catch (ArithmeticException a_e) {}
            Test.iArrFld[i9 + 1] = i9;
        }
        d1 = i;
        vMeth1_check_sum += i + i1 + i9 + i10 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(long l) {

        int i11=11;

        vMeth1();
        i11 &= i11;
        Test.iArrFld[(i11 >>> 1) % N] = i11;
        vMeth_check_sum += l + i11;
    }

    public void mainTest(String[] strArr1) {

        int i12=3, i13=10, i14=-1, i15=-2, i16=-3, i17=-92, i18=231, i19=-122, i20=-12, iArr[]=new int[N];
        byte by1=44;
        double d2=-44.75630;
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)-22491);
        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(lArr, -7683705451978037010L);

        vMeth(Test.instanceCount);
        for (i12 = 7; i12 < 173; ++i12) {
            if (bFld) {
                Test.instanceCount += (long)(1.254F + (i12 * i12));
                for (i14 = i12; i14 < 151; i14++) {
                    switch (i12 + 56) {
                    case 56:
                        i15 += i14;
                        if (bFld) {
                            i13 += (int)Test.fFld;
                            i15 = i12;
                            i13 += i14;
                            Test.iArrFld = Test.iArrFld;
                        }
                        break;
                    case 57:
                        switch (((-39147 >>> 1) % 3) + 115) {
                        case 115:
                            for (i16 = i12; i16 < 1; ++i16) {
                                byArrFld = FuzzerUtils.byte2array(N, (byte)39);
                                i17 -= (int)Test.instanceCount;
                                Test.instanceCount += (((i16 * i17) + Test.fFld) - i16);
                            }
                            Test.iArrFld[i14] -= i13;
                            sArr[i14 + 1] *= (short)12;
                            break;
                        case 116:
                            Test.fFld -= i17;
                            i15 = 10;
                            break;
                        case 117:
                        default:
                            Test.instanceCount += Test.instanceCount;
                            by1 >>>= (byte)Test.instanceCount;
                            Test.fFld *= (float)d2;
                            sFld -= (short)i15;
                        }
                        break;
                    case 58:
                        try {
                            i17 = (i17 % Test.iArrFld[i12 + 1]);
                            i17 = (104 % Test.iArrFld[i14 + 1]);
                            Test.iArrFld[(i12 >>> 1) % N] = (-155 % i13);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 59:
                        switch (((i12 % 1) * 5) + 126) {
                        case 127:
                            Test.instanceCount >>>= i15;
                            by1 |= (byte)168;
                            break;
                        }
                        if (bFld) continue;
                        break;
                    case 60:
                        i17 += (int)d2;
                        break;
                    case 61:
                        Test.instanceCount += (i14 + i13);
                    case 62:
                        i13 += -223;
                        break;
                    case 63:
                        Test.fFld = i16;
                        break;
                    case 64:
                        Test.iArrFld[i12 - 1] += (int)d2;
                        break;
                    case 65:
                        i13 += (((i14 * Test.fFld) + i14) - Test.instanceCount);
                        break;
                    case 66:
                        iArr[i14 - 1] += i16;
                        break;
                    case 67:
                        fArrFld[i12 + 1] = Test.instanceCount;
                    case 68:
                        Test.fFld -= 27679;
                        break;
                    case 69:
                        i17 &= -248;
                    case 70:
                        i13 -= i13;
                    case 71:
                        Test.instanceCount -= i17;
                        break;
                    case 72:
                        Test.fFld += i17;
                        break;
                    case 73:
                        Test.instanceCount += i14;
                        break;
                    case 74:
                        i15 = (int)Test.instanceCount;
                        break;
                    case 75:
                        i18 = i17;
                    case 76:
                        i15 += i13;
                        break;
                    case 77:
                        Test.fFld += (float)-25.17761;
                        break;
                    case 78:
                        Test.iArrFld[i12 - 1] -= by1;
                    case 79:
                        i15 >>= 250;
                        break;
                    case 80:
                        Test.fFld *= by1;
                    case 81:
                        Test.instanceCount += i14;
                        break;
                    case 82:
                        try {
                            Test.iArrFld[i12] = (i16 / i15);
                            iArr[i12] = (Test.iArrFld[i12 + 1] / 318155781);
                            Test.iArrFld[i14 - 1] = (iArr[i12] % i18);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 83:
                        Test.fFld += Test.fFld;
                    case 84:
                        i18 = 6;
                        break;
                    case 85:
                        i18 += (((i14 * Test.instanceCount) + i18) - Test.fFld);
                        break;
                    case 86:
                        Test.iArrFld[i12] ^= i14;
                        break;
                    case 87:
                        i18 = (int)d2;
                        break;
                    case 88:
                        Test.instanceCount |= Test.instanceCount;
                    case 89:
                        lArr[i14 + 1] += i18;
                        break;
                    case 90:
                        if (bFld) continue;
                        break;
                    case 91:
                        iArr[i12] *= (int)Test.instanceCount;
                    case 92:
                        i13 *= (int)-14L;
                        break;
                    case 93:
                        Test.iArrFld = iArr;
                        break;
                    case 94:
                        Test.fFld += i14;
                        break;
                    case 95:
                        i19 -= (int)Test.instanceCount;
                        break;
                    case 96:
                    case 97:
                        Test.instanceCount += Test.instanceCount;
                    case 98:
                        sFld -= (short)Test.instanceCount;
                        break;
                    case 99:
                        d2 -= i15;
                        break;
                    case 100:
                        i17 <<= i12;
                        break;
                    case 101:
                        i13 = i12;
                        break;
                    case 102:
                    case 103:
                        i18 += (((i14 * i13) + i12) - i17);
                        break;
                    case 104:
                        Test.iArrFld[(i12 >>> 1) % N] *= i17;
                        break;
                    case 105:
                        iArr[i14] -= i13;
                        break;
                    case 106:
                        i15 -= i18;
                        break;
                    case 107:
                        Test.instanceCount -= (long)d2;
                        break;
                    case 108:
                        lArr = lArr;
                        break;
                    case 109:
                        Test.fFld -= Test.instanceCount;
                        break;
                    case 110:
                        Test.instanceCount = i17;
                        break;
                    case 111:
                        i17 += 18086;
                        break;
                    case 112:
                        i18 -= (int)Test.instanceCount;
                        break;
                    case 113:
                        i15 = i13;
                        break;
                    case 114:
                        fArrFld[i14 - 1] = by1;
                        break;
                    case 115:
                        i13 |= -63;
                        break;
                    case 116:
                        i18 = i19;
                        break;
                    case 117:
                        i13 = by1;
                        break;
                    case 118:
                    case 119:
                        i19 -= (int)Test.fFld;
                        break;
                    case 120:
                        sFld -= (short)i13;
                        break;
                    case 121:
                        fArrFld[i12] += i20;
                        break;
                    case 122:
                        i15 = (int)9L;
                    case 123:
                    case 124:
                        Test.instanceCount *= -27700;
                        break;
                    case 125:
                        iArr[i12] -= (int)1232059688879628149L;
                        break;
                    default:
                        bFld = bFld;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
