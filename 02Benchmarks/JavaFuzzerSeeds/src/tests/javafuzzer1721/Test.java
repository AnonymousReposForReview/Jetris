package tests.javafuzzer1721;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:30:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public volatile int iFld=14803;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, float f2, int i7) {

        float f3=78.254F;
        int i8=57526, i9=-246;
        double d=119.75303, d1=-93.76840;
        boolean b=true;

        i6 >>= i7;
        for (f3 = 181; 5 < f3; --f3) {
            Test.iArrFld1[(int)(f3)] = i8;
        }
        Test.instanceCount = (long)d;
        Test.iArrFld1[(i8 >>> 1) % N] <<= i6;
        f2 *= i6;
        Test.instanceCount = i6;
        i7 = (int)d;
        i9 = 1;
        do {
            f2 += (i9 * i9);
            f2 += i9;
        } while (++i9 < 381);
        d1 = 1;
        while (++d1 < 126) {
            if (b) {
                d = Test.instanceCount;
                if (i6 != 0) {
                    vMeth2_check_sum += i6 + Float.floatToIntBits(f2) + i7 + Float.floatToIntBits(f3) + i8 +
                        Double.doubleToLongBits(d) + i9 + Double.doubleToLongBits(d1) + (b ? 1 : 0);
                    return;
                }
            }
        }
        vMeth2_check_sum += i6 + Float.floatToIntBits(f2) + i7 + Float.floatToIntBits(f3) + i8 +
            Double.doubleToLongBits(d) + i9 + Double.doubleToLongBits(d1) + (b ? 1 : 0);
    }

    public static void vMeth1(float f1) {

        int i10=2;

        vMeth2(i10, f1, i10);
        Test.instanceCount = 1;
        vMeth1_check_sum += Float.floatToIntBits(f1) + i10;
    }

    public static void vMeth(int i2, int i3, float f) {

        int i4=24075, i5=-26393, i11=-33656, i12=193, i13=-236, iArr[][]=new int[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 43910);
        FuzzerUtils.init(fArr, 0.385F);

        for (i4 = 8; 216 > i4; ++i4) {
            vMeth1(f);
            try {
                Test.iArrFld1[i4 + 1] = (54370 % i2);
                i3 = (i4 % i2);
                i5 = (i4 / 37032);
            } catch (ArithmeticException a_e) {}
            i3 >>= i5;
            iArr = FuzzerUtils.int2array(N, (int)-89);
        }
        i2 &= i5;
        i11 = 1;
        while (++i11 < 288) {
            Test.instanceCount = (long)f;
            i5 = 189;
            for (i12 = 1; i12 < 6; i12 += 3) {
                fArr[i11 + 1] += Test.instanceCount;
                i13 >>= 29727;
                i3 = (int)Test.instanceCount;
                f *= 0.809F;
                i3 = i3;
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=2, i14=36963, i15=4157, i16=71, i17=53492, i18=231, i19=9, i20=57337, i21=-9, i22=-39, i23=50160,
            i24=7104, i25=-6;
        float f4=0.676F;
        long l=6L, l1=-145L;
        boolean b1=false;
        byte by=110, byArr[]=new byte[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 33.83778);
        FuzzerUtils.init(byArr, (byte)61);

        iFld += (Integer.reverseBytes(iFld) - iArrFld[(iFld >>> 1) % N]);
        for (i = 9; i < 188; i += 3) {
            vMeth(-28589, 29398, f4);
            for (l = 8; 259 > l; l++) {
                if (b1) break;
                Test.instanceCount >>>= i14;
                iArrFld[i] = i;
                try {
                    i1 = (iFld % 61333);
                    iFld = (i1 % i14);
                    i14 = (207 % iArrFld[(int)(l)]);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount >>= iFld;
            }
            iFld += -59910;
            if (b1) continue;
        }
        Test.iArrFld1[(i >>> 1) % N] = i14;
        i15 = 1;
        do {
            i16 = 64;
            while (--i16 > 0) {
                by -= (byte)i;
            }
            dArr[(i >>> 1) % N] -= i1;
        } while (++i15 < 391);
        Test.iArrFld1[(i16 >>> 1) % N] = i1;
        i1 = iFld;
        for (i17 = 7; i17 < 150; i17 += 3) {
            for (i19 = 2; i19 < 387; i19++) {
                i20 += i1;
                Test.instanceCount &= l;
            }
            for (i21 = 16; 391 > i21; ++i21) {
                iFld *= (int)2.66758;
            }
            i23 = 1;
            do {
                Test.instanceCount = i15;
                for (i24 = 1; i24 < 2; i24++) {
                    byArr = byArr;
                    l1 += (i24 * i24);
                    Test.iArrFld1[i17] = (int)l1;
                }
            } while (++i23 < i17);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
