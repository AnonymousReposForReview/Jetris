package tests.javafuzzer527;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:17:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public byte byFld=113;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 39856);
        FuzzerUtils.init(Test.fArrFld, 0.367F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i6, float f1, int i7) {

        int i8=237, i9=-146, i10=-177, i11=-39165, i12=-37274;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -99.875F);

        i8 = 1;
        do {
            if (b) {
                i6 += (i8 * i8);
                if (false) {
                    fArr = fArr;
                } else {
                    i6 -= (int)Test.instanceCount;
                    i7 *= (int)Test.instanceCount;
                    i6 = i8;
                    i6 += i8;
                }
                for (i9 = i8; i9 < 4; ++i9) {
                    Test.iArrFld1[i8] = (int)81.26701;
                    for (i11 = 1; i11 < 1; i11 += 2) {
                        i10 += (int)Test.instanceCount;
                        i7 = i9;
                        f1 = i12;
                    }
                }
            } else if (b) {
                Test.instanceCount = i6;
            }
        } while (++i8 < 381);
        long meth_res = i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(byte by) {

        int i5=-94;
        short s1=-3975;

        i5 = -36015;
        i5 = (int)(((-(--i5)) - lMeth(i5, -1.881F, i5)) - i5);
        i5 >>= 252;
        s1 += (short)6;
        vMeth_check_sum += by + i5 + s1;
    }

    public static int iMeth(short s, int i2) {

        float f=-46.180F;
        int i3=-15239, i4=-10, i13=-14, i14=-30910, i15=30573;
        byte by1=28;
        double d1=2.34434;
        boolean b1=false;

        s <<= (short)(((i2 - i2) - (i2 - i2)) * f);
        for (i3 = 386; i3 > 11; i3 -= 3) {
            vMeth(by1);
            i2 = (int)d1;
            i2 += i2;
        }
        for (i13 = 6; i13 < 355; ++i13) {
            f += (12 + (i13 * i13));
            if (b1) {
                Test.instanceCount = i14;
                i15 = 1;
                while (++i15 < 5) {
                    i14 += (i15 ^ i3);
                    i14 *= i14;
                }
            } else if (b1) {
                f = -23072;
                i14 += (((i13 * i13) + i4) - by1);
                Test.fArrFld[i13 - 1][i13 - 1] -= f;
            } else if (b1) {
                Test.instanceCount >>>= i13;
            } else {
                Test.instanceCount = Test.instanceCount;
            }
        }
        long meth_res = s + i2 + Float.floatToIntBits(f) + i3 + i4 + by1 + Double.doubleToLongBits(d1) + i13 + i14 +
            i15 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-86, i1=-209, i16=78, i17=8;
        double d=94.44445;
        short s2=1393;
        float f2=-98.474F;
        long l=-178L;
        boolean b2=true;

        i >>= iArrFld[(i >>> 1) % N];
        for (d = 6; d < 196; d++) {
            iArrFld[(int)(d)] <<= (int)Long.reverseBytes(Long.reverseBytes(Test.instanceCount) + iMeth(s2, i));
            f2 -= i1;
            Test.instanceCount >>= 31344;
            Test.instanceCount <<= i1;
            i = i;
            f2 += (float)(d * Test.instanceCount);
            for (i16 = 4; i16 < 132; ++i16) {
                i = 9;
                Test.instanceCount += (91 + (i16 * i16));
                Test.fArrFld[(int)(d - 1)][i16] += 42327;
                byFld += (byte)d;
                i1 = (int)Test.instanceCount;
                l = 1;
                while (++l < 2) {
                    i -= (int)l;
                    Test.instanceCount = 166L;
                    if (b2) break;
                    switch ((i16 % 5) + 96) {
                    case 96:
                        Test.instanceCount += l;
                    case 97:
                        i1 >>>= 52;
                        break;
                    case 98:
                    case 99:
                        i *= s2;
                        if (b2) continue;
                        b2 = b2;
                        i <<= -338;
                        break;
                    case 100:
                        i17 >>= -27020;
                        b2 = b2;
                        break;
                    }
                }
                iArrFld[(int)(d)] = 69;
                i += (int)Test.instanceCount;
                i17 = i16;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
