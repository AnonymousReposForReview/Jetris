package tests.javafuzzer24;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:17:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1050214503L;
    public static float fFld=-118.196F;
    public static double dFld=0.38544;
    public byte byFld=-93;
    public static int iFld=79;

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {

        int i8=-6029, i9=11, i10=-5, i11=-2458, i12=-6, i13=-9, i14=-61348, i15=6, iArr[]=new int[N];
        byte by2=28;
        short s=-26404;

        FuzzerUtils.init(iArr, 179);

        i6 = i6;
        for (i8 = 14; i8 < 224; i8++) {
            for (i10 = 8; i10 > 1; i10 -= 2) {
                i9 >>= i8;
                if (i7 != 0) {
                }
                i9 *= (int)Test.instanceCount;
                iArr[i10] = i10;
            }
            for (i12 = i8; i12 < 8; i12++) {
                Test.dFld *= Test.dFld;
                i5 += (((i12 * i7) + i13) - i11);
                Test.instanceCount += (long)Test.dFld;
                Test.fFld -= Test.fFld;
            }
            for (i14 = i8; i14 < 8; ++i14) {
                i7 <<= by2;
                s += (short)(i14 * i14);
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + by2 + s +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth(long l, int i4) {

        byte by1=37;

        Test.instanceCount = Math.abs((int)(Test.fFld + (l - i4)));
        by1 -= (byte)Math.max(iMeth(i4, i4, i4), i4);
        i4 ^= (int)l;
        long meth_res = l + i4 + by1;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(byte by, int i) {

        int i1=47097, i2=-13, i3=-124, i16=-21062;
        double d=-17.113320;

        i1 = 197;
        while (--i1 > 0) {
            for (i2 = 1; i2 < 8; ++i2) {
                i3 += (((i2 * i2) + i1) - Test.instanceCount);
                Test.fFld = sMeth(Test.instanceCount, i2);
                Test.instanceCount += (-2 + (i2 * i2));
                Test.dFld *= i2;
                Test.fFld += by;
            }
            i3 = (int)Test.fFld;
            Test.dFld = i3;
            i3 *= i3;
            Test.instanceCount >>= i3;
            if (i3 != 0) {
                vMeth_check_sum += by + i + i1 + i2 + i3 + Double.doubleToLongBits(d) + i16;
                return;
            }
            for (d = i1; d < 8; ++d) {
                i16 += (int)d;
                i += i1;
            }
        }
        vMeth_check_sum += by + i + i1 + i2 + i3 + Double.doubleToLongBits(d) + i16;
    }

    public void mainTest(String[] strArr1) {

        double d1=-76.101565;
        int i17=-6, i18=-22372, i19=9, i20=-12, i21=233, i23=170, i24=11590, i25=0, i26=40841, i27=60812, iArr1[]=new
            int[N];
        short s1=6844;
        long l1=-60729L, l2=-224L;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -35790);
        FuzzerUtils.init(fArr, 12.398F);

        vMeth(byFld, Test.iFld);
        for (d1 = 154; d1 > 9; d1--) {
            Test.iFld -= -8642;
        }
        iArr1[(-137 >>> 1) % N] >>= Test.iFld;
        i17 *= (int)Test.instanceCount;
        for (i18 = 215; i18 > 10; i18--) {
            Test.iFld <<= (int)Test.instanceCount;
            Test.iFld >>= (int)-10L;
            for (i20 = 122; i20 > i18; i20--) {
                int i22=12;
                Test.iFld = (int)Test.fFld;
                Test.instanceCount += (i20 * i20);
                i22 = i17;
                fArr[i18] += s1;
                i23 = 1;
                while (++i23 < 1) {
                    Test.iFld += (i23 - i21);
                }
                for (i24 = 1; i24 > 1; i24--) {
                    i25 = i18;
                }
                i19 *= s1;
                l1 -= Test.iFld;
            }
            switch ((((Test.iFld >>> 1) % 5) * 5) + 121) {
            case 128:
                i19 >>>= 29784;
                i17 *= i24;
                break;
            case 134:
                for (i26 = 3; 122 > i26; i26++) {
                    i25 *= (int)-61207L;
                    i17 *= (int)d1;
                    if (b) continue;
                    i17 = (int)-25295L;
                    l2 = 1;
                    while (++l2 < 2) {
                        Test.iFld = i18;
                    }
                    iArr1[i18] += -54692;
                }
                break;
            case 144:
                i19 += i18;
                break;
            case 126:
                fArr[i18] -= l1;
                break;
            case 122:
            default:
                fArr[i18 - 1] -= i17;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
