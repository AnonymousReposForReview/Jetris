package tests.javafuzzer2283;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:27:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3758093282183085223L;
    public static volatile int iFld=0;
    public static float fFld=80.670F;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -13L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        int i5=15, i6=240, i7=-5, i8=3, i9=-33839, iArr[]=new int[N];
        float f=-112.557F, f1=0.265F;
        boolean b=false;
        double d=-100.11584;

        FuzzerUtils.init(iArr, 1);

        Test.iFld = (int)Test.instanceCount;
        for (i5 = 15; i5 < 394; ++i5) {
            Test.iFld = i6;
            Test.iFld -= (int)f;
        }
        b = b;
        for (f1 = 4; 355 > f1; ++f1) {
            switch ((int)(((f1 % 2) * 5) + 119)) {
            case 120:
                for (i8 = 1; i8 < 5; ++i8) {
                    iArr[(int)(f1)] <<= 68;
                    Test.lArrFld[i8 + 1] *= i5;
                    iArr[i8] = i8;
                    d = d;
                    i7 -= (int)f;
                    iArr[i8 - 1] -= i4;
                }
                break;
            case 126:
                Test.iFld = -63;
            default:
                f = Test.iFld;
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f) + (b ? 1 : 0) + Float.floatToIntBits(f1) + i7 + i8 +
            i9 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i10=59382, i11=-135, i12=-70, i13=-65142, i14=50680, i15=7109, iArr1[]=new int[N];
        byte by=95;
        boolean b1=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -203);
        FuzzerUtils.init(dArr, 49.123808);

        vMeth2(Test.iFld);
        if (b1) {
            Test.fFld = Test.instanceCount;
            Test.iFld -= Test.iFld;
            Test.instanceCount = Test.iFld;
            for (i10 = 3; i10 < 155; i10++) {
                for (i12 = 1; 10 > i12; i12++) {
                    iArr1[i10] = 246;
                    switch (((-14 >>> 1) % 6) + 19) {
                    case 19:
                        i11 += i12;
                        Test.fFld += i10;
                        for (i14 = 1; i14 < 2; i14++) {
                            dArr[i12 + 1] -= i10;
                            Test.instanceCount += i14;
                            Test.fFld += Test.iFld;
                        }
                        break;
                    case 20:
                        try {
                            i13 = (i13 / -36473);
                            i11 = (i15 % i11);
                            iArr1[i12] = (i15 / 85);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 21:
                        i15 = -17952;
                        break;
                    case 22:
                        Test.iFld += by;
                    case 23:
                    case 24:
                        Test.lArrFld[i10] += i10;
                        break;
                    }
                }
            }
        } else if (b1) {
            Test.instanceCount = i11;
        }
        vMeth1_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i=195, i1=91, i2=166, i3=-29809;
        double d1=-64.5616, dArr1[]=new double[N];
        short s=7618;
        byte by1=81;
        float fArr[]=new float[N];

        FuzzerUtils.init(dArr1, -8.974);
        FuzzerUtils.init(fArr, 86.762F);

        if (Test.bFld) {
            for (i = 4; 305 > i; i++) {
                for (i2 = 1; 5 > i2; ++i2) {
                    i3 += (i2 - i3);
                    vMeth1();
                    Test.instanceCount = (long)d1;
                    s ^= by1;
                    dArr1[(i >>> 1) % N] += i2;
                    i1 <<= i1;
                    fArr[i] = Test.instanceCount;
                    Test.fFld += (i2 * Test.iFld);
                    Test.bFld = false;
                }
                if (Test.bFld) continue;
                Test.instanceCount += i;
            }
            Test.iFld += i2;
        } else if (Test.bFld) {
            Test.lArrFld[(i2 >>> 1) % N] ^= i2;
        } else {
            i1 = (int)Test.instanceCount;
        }
        vMeth_check_sum += i + i1 + i2 + i3 + Double.doubleToLongBits(d1) + s + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=-250, i17=-30085, i18=5, i19=191, i20=37, i21=920, i22=-55221, i23=4169, i24=-2, i25=-10, iArr2[]=new
            int[N];
        short s1=25815;

        FuzzerUtils.init(iArr2, 11);

        vMeth();
        Test.iFld = (int)56.490F;
        Test.instanceCount = (long)-1.387F;
        for (i16 = 10; i16 < 223; ++i16) {
            Test.instanceCount += (long)(-39.80F + (i16 * i16));
            iArr2[i16] -= i16;
        }
        for (i18 = 12; i18 < 300; i18 += 3) {
            i20 = 1;
            while (++i20 < 261) {
                iArr2[i18 + 1] = i19;
                i19 += (i20 - i18);
                Test.fFld = Test.fFld;
                i17 >>>= i19;
                i17 += (((i20 * Test.instanceCount) + Test.fFld) - i17);
                Test.bFld = true;
            }
            if (true) {
                Test.instanceCount += (((i18 * i18) + Test.fFld) - Test.iFld);
                Test.instanceCount >>= i19;
            } else {
                for (i21 = 9; i21 < 261; ++i21) {
                    for (i23 = 2; 1 < i23; i23--) {
                        s1 -= (short)i19;
                        iArr2[i21 - 1] /= (int)(i19 | 1);
                    }
                    i17 *= i18;
                    if (Test.bFld) {
                        i22 -= (int)Test.instanceCount;
                        i25 = 1;
                        while ((i25 += 2) < 2) {
                            if (Test.bFld) break;
                            switch (((i19 >>> 1) % 3) + 78) {
                            case 78:
                                Test.instanceCount = Test.instanceCount;
                                i22 *= i22;
                                i22 <<= (int)Test.instanceCount;
                                break;
                            case 79:
                                iArr2[i25 + 1] <<= i20;
                                break;
                            case 80:
                                iArr2[i21] -= i23;
                                break;
                            }
                        }
                    } else if (Test.bFld) {
                        i22 = i17;
                    } else {
                        Test.fFld *= -117;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
