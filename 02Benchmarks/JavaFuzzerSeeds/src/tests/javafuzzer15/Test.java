package tests.javafuzzer15;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=49707L;
    public static byte byFld=15;
    public static int iFld=-195;
    public static double dFld=1.101731;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -26104);
        FuzzerUtils.init(Test.lArrFld, -223L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        int i4=-30598, i5=-96, i6=52465, i7=-81;
        double d=-2.5417;
        float f1=62.541F;

        Test.lArrFld[(i3 >>> 1) % N] -= Test.iFld;
        Test.lArrFld[(9 >>> 1) % N] -= Test.iFld;
        Test.byFld = (byte)Test.iFld;
        Test.instanceCount <<= Test.iFld;
        for (i4 = 2; i4 < 274; ++i4) {
            Test.dFld = Test.iFld;
            Test.dFld -= Test.instanceCount;
            i6 = 1;
            while (++i6 < 6) {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)134);
                Test.iFld -= i6;
            }
            if (Test.bFld) break;
            Test.iArrFld[i4 + 1] = (int)Test.instanceCount;
            for (d = 1; d < 6; d++) {
                Test.dFld += i5;
                f1 += -32037;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + i7 + Float.floatToIntBits(f1);
    }

    public static int iMeth(short s, int i2) {

        float f2=-2.267F;
        int i8=3, i9=4, i10=-15127;
        double dArr[]=new double[N], dArr1[][]=new double[N][N];

        FuzzerUtils.init(dArr, 1.22664);
        FuzzerUtils.init(dArr1, -63.98689);

        vMeth1(i2);
        f2 = Test.iFld;
        for (double d1 : dArr) {
            for (i8 = 1; i8 < 4; i8++) {
                if (Test.bFld) continue;
                i9 -= (int)f2;
                Test.iFld = i2;
                if (false) {
                    dArr[i8 + 1] = Test.instanceCount;
                    i10 = 1;
                    do {
                        f2 = i2;
                        Test.instanceCount &= Test.instanceCount;
                        Test.iFld >>= i8;
                        Test.instanceCount = i2;
                        i9 += i10;
                    } while (++i10 < 2);
                } else if (Test.bFld) {
                    dArr1[i8 + 1][i8] = Test.byFld;
                }
            }
        }
        long meth_res = s + i2 + Float.floatToIntBits(f2) + i8 + i9 + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, boolean b) {

        int i=-227, i1=-1, i11=-10, i12=-7, i13=-90, i14=39907, i15=-16678, i16=34663;
        double d2=-2.26358;

        for (i = 7; i < 124; i++) {
            iMeth((short)(-7741), i1);
        }
        for (d2 = 141; d2 > 6; d2--) {
            Test.iFld += (int)d2;
        }
        Test.iArrFld[(-60437 >>> 1) % N] = i11;
        for (i12 = 9; i12 < 356; i12++) {
            Test.instanceCount += (i12 - i12);
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-172);
            i14 = 1;
            do {
                for (i15 = i12; i15 < 1; ++i15) {
                    if (b) break;
                    i16 += Test.byFld;
                    i16 -= i11;
                    i13 -= (int)Test.dFld;
                    i11 |= i;
                }
            } while (++i14 < 5);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + (b ? 1 : 0) + i + i1 + Double.doubleToLongBits(d2) + i11 + i12 +
            i13 + i14 + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        float f3=45.379F;

        Test.byFld = (byte)((--Test.iFld) + ((241 - (Test.instanceCount - -14L)) + Test.iArrFld[(Test.iFld >>> 1) %
            N]));
        vMeth(f3, Test.bFld);
        Test.iFld += Test.iFld;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
