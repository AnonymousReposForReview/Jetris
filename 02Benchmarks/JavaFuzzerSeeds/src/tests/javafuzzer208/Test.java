package tests.javafuzzer208;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:09:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2683523280L;
    public static volatile boolean bFld=false;
    public static short sFld=5405;
    public long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 14.36809);
        FuzzerUtils.init(Test.lArrFld1, 13L);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f, double d3, short s) {

        int i7=0, i8=-63963, i10=-13, i11=27, i12=-28685, iArr1[]=new int[N];
        float fArr[]=new float[N];
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(fArr, 96.1002F);
        FuzzerUtils.init(iArr1, 12186);
        FuzzerUtils.init(bArr1, true);

        for (i7 = 18; i7 < 359; ++i7) {
            i8 <<= (int)2L;
        }
        i8 = (int)-2.110197;
        fArr[(i7 >>> 1) % N] = 14582;
        i8 = -31416;
        switch (((-32268 >>> 1) % 6) + 86) {
        case 86:
            for (int i9 : iArr1) {
                fArr[(i8 >>> 1) % N] += f;
                f -= i7;
            }
            i8 -= (int)Test.instanceCount;
            i8 -= (int)Test.instanceCount;
            break;
        case 87:
            for (i10 = 9; i10 < 252; ++i10) {
                i12 = 1;
                while (++i12 < 7) {
                    d3 += d3;
                    i11 += (i12 * i12);
                }
            }
            break;
        case 88:
            i8 = i11;
            break;
        case 89:
            i8 += (int)Test.instanceCount;
            break;
        case 90:
            bArr1[(i7 >>> 1) % N] = Test.bFld;
            break;
        case 91:
            i11 = i7;
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d3) + s + i7 + i8 + i10 + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr1);
    }

    public static double dMeth(double d2, long l) {

        int i5=-1, i6=-2, i13=-2, i14=84, iArr2[]=new int[N];
        float f1=2.837F;
        short s1=9263;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -21492);

        if (Test.bFld) {
            for (i5 = 13; i5 < 364; ++i5) {
                Test.bFld = ((Test.bFld = Test.bFld) | (bArr[i5] = bArr[i5]));
                vMeth(f1, d2, s1);
                switch ((((1 >>> 1) % 4) * 5) + 8) {
                case 28:
                    switch ((i5 % 3) + 88) {
                    case 88:
                        f1 = Test.instanceCount;
                        l -= (long)f1;
                        f1 += -173;
                        iArr2[i5] = i6;
                        break;
                    case 89:
                        for (i13 = 1; 5 > i13; ++i13) {
                            i14 |= i14;
                            iArr2[i5] = i6;
                            i14 -= (int)-190713160L;
                            l += -162;
                        }
                        break;
                    case 90:
                    }
                    break;
                case 10:
                    f1 += Test.instanceCount;
                    break;
                case 24:
                    i14 = (int)Test.instanceCount;
                    break;
                case 20:
                    Test.dArrFld[i5] *= l;
                    break;
                default:
                    i14 *= i5;
                }
            }
        } else {
            iArr2[(13 >>> 1) % N] = i14;
        }
        long meth_res = Double.doubleToLongBits(d2) + l + i5 + i6 + Float.floatToIntBits(f1) + s1 + i13 + i14 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(double d1) {

        int i15=-15, i16=-58172, i17=55057, i18=-5, i19=10, i20=-63977, i21=3;
        float f2=-4.57F;

        dMeth(d1, Test.instanceCount);
        for (i15 = 295; i15 > 6; i15--) {
            f2 -= Test.instanceCount;
            i16 <<= i16;
        }
        i17 = 258;
        while ((i17 -= 2) > 0) {
            i16 = (int)13L;
        }
        for (i18 = 5; i18 < 180; ++i18) {
            Test.instanceCount = i18;
            for (i20 = 9; i20 > 1; i20 -= 2) {
                if (Test.bFld) {
                    i19 = -201;
                    i21 += (((i20 * i19) + i21) - i19);
                    if (i20 != 0) {
                    }
                    Test.lArrFld1[i20] = (long)f2;
                } else {
                    i19 -= i17;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i15 + i16 + Float.floatToIntBits(f2) + i17 + i18 + i19 + i20 +
            i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=48374, i1=-8, i2=-14, i3=26351, i4=190, i22=0, i23=-11, i24=-43947, iArr[]=new int[N];
        double d=1.17299;
        float f3=-53.558F;

        FuzzerUtils.init(iArr, -28775);

        for (i = 10; i < 183; ++i) {
            i1 >>= (int)lArrFld[i];
        }
        i1 <<= (i1--);
        for (i2 = 3; i2 < 297; i2++) {
            for (d = 3; d < 86; ++d) {
                iArr[i2 - 1] += iMeth(d);
                i1 += (int)((long)d ^ Test.instanceCount);
                Test.instanceCount += -4231532758L;
                Test.bFld = false;
            }
            if (Test.bFld) {
                f3 += i2;
            } else if (Test.bFld) {
                i1 += (((i2 * Test.instanceCount) + Test.sFld) - i2);
                i3 = i4;
                if (Test.bFld) break;
                for (i22 = 2; i22 < 86; ++i22) {
                    i4 *= i3;
                    Test.bFld = Test.bFld;
                    i3 += (int)-1161L;
                    i23 = i23;
                    i4 = (int)Test.instanceCount;
                    i23 = (int)Test.instanceCount;
                }
            } else {
                if (Test.bFld) break;
                if (Test.bFld) {
                    i3 *= (int)f3;
                    i24 = 1;
                    do {
                        Test.instanceCount += (((i24 * f3) + f3) - i3);
                        iArr[i24 + 1] -= -8;
                        i4 += i22;
                        i4 += i;
                        i1 = i;
                    } while (++i24 < 86);
                } else if (true) {
                    i1 *= 28418;
                } else if (Test.bFld) {
                    Test.sFld = (short)i1;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
