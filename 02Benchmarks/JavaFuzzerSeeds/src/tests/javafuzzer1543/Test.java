package tests.javafuzzer1543;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:25:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-22352L;
    public static long lFld=-7L;
    public volatile long lFld1=9L;
    public static boolean bFld=true;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by) {

        int i11=205, i12=-972, iArr[]=new int[N];
        float f=-2.172F;

        FuzzerUtils.init(iArr, -65254);

        for (i11 = 9; i11 < 223; ++i11) {
            f -= by;
            iArr[i11 - 1] *= (int)Test.instanceCount;
            i12 += i12;
            i12 += i11;
        }
        i12 += i12;
        vMeth2_check_sum += by + i11 + i12 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3, int i4) {

        int i5=192, i6=225, i7=247, i8=-56022, i9=-194, i10=13, i13=111, iArr1[]=new int[N];
        byte by1=24, byArr[]=new byte[N];
        double d=-36.33083;
        float f1=44.269F, f2=54.656F;
        short s=4429;

        FuzzerUtils.init(byArr, (byte)70);
        FuzzerUtils.init(iArr1, 9);

        for (i5 = 12; i5 < 224; i5++) {
            for (i7 = 1; i7 < 8; i7++) {
                for (i9 = 1; i9 < 2; i9++) {
                    vMeth2(by1);
                    i2 += (i9 * i3);
                    i2 = (int)Test.instanceCount;
                    d *= f1;
                    byArr = byArr;
                }
                for (f2 = 2; f2 > 1; f2 -= 2) {
                    s |= (short)Test.instanceCount;
                    by1 <<= by1;
                }
                Test.instanceCount /= (i6 | 1);
                s -= (short)d;
                iArr1 = FuzzerUtils.int1array(N, (int)1);
                i2 = -11;
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + by1 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i13 + s + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i=70, i1=-61255, i14=-1, i15=-119, i16=-13, i17=-54085;
        float f3=0.832F;
        boolean b1=false;
        double d1=-2.34803;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);

        for (i = 253; i > 3; --i) {
            boolean b=true;
            i1 = i;
            if (b) continue;
            i1 += (int)((++Test.instanceCount) * Test.instanceCount);
        }
        vMeth1(i, i1, i1);
        for (i14 = 13; i14 < 369; i14++) {
            f3 += f3;
            Test.instanceCount -= -4;
            if (b1) break;
            for (i16 = 1; i16 < 5; i16++) {
                i15 += (int)f3;
                Test.instanceCount = i17;
                d1 -= 964462406L;
                i1 += i15;
                lArr[i14 - 1] &= i14;
            }
        }
        vMeth_check_sum += i + i1 + i14 + i15 + Float.floatToIntBits(f3) + (b1 ? 1 : 0) + i16 + i17 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=12, i19=-12, i20=-57305, i21=66, i22=97, i23=84, i24=-161, i25=164, i26=4, i27=-18688, i28=48741,
            i29=102, iArr2[]=new int[N];
        short s1=-2103;
        double d2=0.110497, d3=106.125761;
        long l=-7L, lArr1[]=new long[N];
        float f4=54.422F;

        FuzzerUtils.init(lArr1, -3247488857L);
        FuzzerUtils.init(iArr2, -7);

        vMeth();
        i18 = (int)Test.instanceCount;
        if (Test.bFld) {
            for (i19 = 13; i19 < 238; ++i19) {
                Test.instanceCount += (((i19 * i18) + i18) - Test.instanceCount);
                i18 = s1;
                if (true) {
                    for (i21 = 112; 7 < i21; i21 -= 2) {
                        lArr1[i21] = s1;
                        Test.instanceCount += (i21 ^ Test.instanceCount);
                        for (i23 = 1; 3 > i23; ++i23) {
                            d2 %= (l | 1);
                            lArr1[(i20 >>> 1) % N] = i21;
                            i18 += i21;
                        }
                        i20 += (int)(-1.986F + (i21 * i21));
                        i20 -= i22;
                    }
                    f4 = i21;
                    try {
                        i18 = (i19 / 57153);
                        i18 = (4408 / i18);
                        iArr2[i19] = (i24 / i23);
                    } catch (ArithmeticException a_e) {}
                    l += (i19 + i18);
                } else if (false) {
                    i20 += i19;
                    for (d3 = 1; d3 < 112; d3++) {
                        Test.lFld = i23;
                    }
                } else {
                    i24 &= 201;
                }
                for (i26 = 3; i26 < 112; i26++) {
                    f4 = l;
                    i20 |= i25;
                    f4 += (i26 * i26);
                    for (i28 = 1; i28 < 2; i28++) {
                        i25 >>>= (int)lFld1;
                        s1 -= (short)i29;
                    }
                }
            }
        } else {
            iArr2[(-244 >>> 1) % N] = i22;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
