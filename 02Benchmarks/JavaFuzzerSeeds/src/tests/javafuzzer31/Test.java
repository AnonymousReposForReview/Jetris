package tests.javafuzzer31;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:25:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4669629494956130042L;
    public static volatile int iFld=-24649;
    public short sFld=-179;
    public static volatile int iFld1=8;
    public static float fFld=-1.633F;
    public double dFld=-126.104661;
    public static long lArrFld[]=new long[N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1L);
    }

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(short s1, int i10, long l2) {

        boolean b=false;

        b = true;
        vMeth_check_sum += s1 + i10 + l2 + (b ? 1 : 0);
    }

    public static int iMeth(long l1, int i6, int i7) {

        int i8=-31975, i9=9, i11=-27417, i12=-7, i13=-17246, i14=60630, i15=-4, i16=43801;
        short s2=3243;
        double d=17.40503;
        boolean b1=false, bArr[]=new boolean[N];
        float f1=-6.729F;

        FuzzerUtils.init(bArr, false);

        for (i8 = 13; 306 > i8; ++i8) {
            vMeth(s2, i9, l1);
            if (b1) {
                i7 += (int)d;
                Test.lArrFld[i8 - 1] = i9;
                for (i11 = 1; 6 > i11; i11++) {
                    for (i13 = 2; i13 > 1; i13--) {
                        i14 += i13;
                    }
                    bArr[i8 - 1] = b1;
                }
                i12 = i6;
            } else if (b1) {
                i9 += i8;
                for (i15 = 1; i15 < 6; i15++) {
                    i12 += (-35705 + (i15 * i15));
                    i6 += (((i15 * i8) + i8) - i13);
                }
                i9 += (i8 * f1);
            } else {
                s2 = (short)i14;
            }
        }
        long meth_res = l1 + i6 + i7 + i8 + i9 + s2 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + (b1 ? 1 : 0)
            + i15 + i16 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(short s, int i1, float f) {

        int i2=22392, i3=13, i4=-74, i5=-36759;
        double d1=-111.102876;
        boolean b2=true;

        i1 = i1;
        for (i2 = 5; i2 < 203; ++i2) {
            i3 -= (int)(((f + i1) - (i3--)) + (-(Test.instanceCount / ((long)(f) | 1))));
        }
        for (long l : Test.lArrFld) {
            for (i4 = 1; i4 < 4; ++i4) {
                if (iMeth(-142L, Test.iFld, i4) != d1) continue;
                f = (float)d1;
                i3 = i4;
                f %= ((long)(d1) | 1);
                f += i4;
                l += (long)(0.933F + (i4 * i4));
                i1 >>>= i2;
                Test.instanceCount *= i2;
                i5 += (int)f;
            }
            if (b2) continue;
        }
        long meth_res = s + i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d1) + (b2 ? 1 :
            0);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i17=29673, i18=-155, i19=-11, i20=-10, i21=39687, i22=32, i23=12, i24=8000, i25=-241, i26=-39386,
            i28=50912, i29=-186, i30=107, i31=-11, i32=0, i33=7;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.27531);

        i = 1;
        while (++i < 319) {
            fMeth(sFld, Test.iFld, 16.542F);
        }
        Test.iFld = i;
        Test.iFld += (int)Test.instanceCount;
        for (i17 = 9; 192 > i17; ++i17) {
            Test.iFld += 0;
            Test.iFld = i;
        }
        for (i19 = 4; i19 < 123; ++i19) {
            Test.iFld1 += i19;
            i20 |= sFld;
            for (i21 = 10; 211 > i21; ++i21) {
                i18 -= (int)Test.instanceCount;
                for (i23 = 1; 2 > i23; ++i23) {
                    Test.instanceCount <<= i19;
                    Test.fFld -= Test.instanceCount;
                    sFld -= (short)-24;
                }
            }
        }
        iArrFld[(i18 >>> 1) % N] = -6;
        for (i25 = 364; i25 > 13; i25--) {
            for (i28 = 3; i28 < 72; i28++) {
                i26 += (i28 * i23);
                switch (((i17 >>> 1) % 3) + 112) {
                case 112:
                case 113:
                    i29 <<= (int)Test.instanceCount;
                    break;
                case 114:
                    dFld -= Test.instanceCount;
                    i22 = (int)dFld;
                    break;
                }
            }
            for (i30 = 4; 72 > i30; ++i30) {
                for (i32 = 1; i32 < 2; i32++) {
                    Test.fFld = 8716;
                    Test.lArrFld[i25 - 1] *= -134;
                    Test.instanceCount += i32;
                    i22 += i23;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
