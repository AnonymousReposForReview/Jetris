package tests.javafuzzer3400;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:25:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10964L;
    public static double dFld=125.85181;
    public static volatile float fFld=0.834F;
    public boolean bFld=true;
    public int iFld=78;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(double d, int i7, int i8) {

        float f=64.347F;
        int i9=0, i10=201, i11=47, i12=-13;

        f += i7;
        i7 -= (int)f;
        if (false) {
            i7 -= i7;
        } else {
            f = i7;
            i8 = (int)Test.instanceCount;
            i8 = (int)-10L;
            for (i9 = 14; i9 < 391; ++i9) {
                for (i11 = 1; i11 < 4; i11 += 2) {
                    i7 *= i12;
                    Test.instanceCount = Test.instanceCount;
                }
                Test.iArrFld[i9 + 1] |= (int)Test.instanceCount;
                f += 58812;
                i10 <<= -54038;
                i12 = i11;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i1, int i2, int i3) {

        short s=-25419;
        int i4=172, i5=-2, i6=8, i13=-61488, i14=-10, i15=19, i16=-7;
        double dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr, 126.41314);
        FuzzerUtils.init(lArr, 189L);

        Test.instanceCount += (i3 += s);
        for (i4 = 11; i4 < 245; ++i4) {
            i5 = (int)(((++i3) + Test.instanceCount) + ((i3--) * (-2.802F - (i2 <<= i6))));
            Test.dFld = ((dArr[i4 + 1]++) - fMeth(-1.119874, i6, i5));
            i6 <<= i4;
            try {
                Test.iArrFld[i4 - 1] = (-1533453277 / i6);
                i3 = (i3 / 44887);
                i5 = (Test.iArrFld[i4 - 1] / Test.iArrFld[i4 - 1]);
            } catch (ArithmeticException a_e) {}
            i13 = 7;
            do {
                boolean b1=true;
                i2 = i1;
                for (i14 = i4; i14 < 1; i14++) {
                    Test.dFld = Test.instanceCount;
                    i6 &= i2;
                }
                switch ((i4 % 10) + 72) {
                case 72:
                    i1 -= -3;
                    i3 += i2;
                    s *= (short)i4;
                    break;
                case 73:
                    i1 -= i6;
                    break;
                case 74:
                    if (i3 != 0) {
                        vMeth1_check_sum += i1 + i2 + i3 + s + i4 + i5 + i6 + i13 + i14 + i15 + i16 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    break;
                case 75:
                    if (b1) continue;
                case 76:
                    lArr[i13][i13] += Test.instanceCount;
                    break;
                case 77:
                    i1 += (i13 - i1);
                    break;
                case 78:
                    Test.instanceCount += i13;
                    break;
                case 79:
                case 80:
                    Test.instanceCount <<= i13;
                    break;
                case 81:
                    Test.iArrFld[i13 + 1] = i16;
                }
            } while (--i13 > 0);
        }
        vMeth1_check_sum += i1 + i2 + i3 + s + i4 + i5 + i6 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i, boolean b) {

        int i17=12, i18=4, i19=-27437, i20=5725;
        long l=0L;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 1.77539);

        vMeth1(i, i, i);
        i17 = 1;
        while (++i17 < 157) {
            Test.instanceCount = i;
            i += (i17 | i17);
            switch (((30173 >>> 1) % 7) + 115) {
            case 115:
                dArr1[i17 - 1] += -1L;
                break;
            case 116:
                Test.instanceCount += i;
                switch (((i17 >>> 1) % 7) + 61) {
                case 61:
                case 62:
                    Test.iArrFld[i17 + 1] = 163;
                    i += (((i17 * i) + i) - l);
                    i += (int)Test.fFld;
                    for (i18 = 1; i18 < 10; ++i18) {
                        i19 -= (int)Test.fFld;
                    }
                    break;
                case 63:
                    i19 = (int)0L;
                    i19 /= (int)(Test.instanceCount | 1);
                    break;
                case 64:
                    i += (int)-1529178772463765218L;
                    break;
                case 65:
                    l = l;
                case 66:
                    l += i17;
                    break;
                case 67:
                    Test.iArrFld[i17 - 1] *= i18;
                    break;
                }
            case 117:
                Test.dFld = i19;
                break;
            case 118:
                Test.fFld += (((i17 * i20) + Test.instanceCount) - i18);
            case 119:
                Test.instanceCount = i20;
                break;
            case 120:
                Test.fFld *= 8;
            case 121:
                i19 += (i17 ^ l);
            }
        }
        vMeth_check_sum += i + (b ? 1 : 0) + i17 + l + i18 + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i21=39995, i22=21, i23=-29, i24=193, i25=-23363, i26=-2, i27=10, i28=-2438, i29=-20044, i30=-65, i31=-28,
            iArr[]=new int[N];
        short s1=-10298;
        float f1=-38.313F;
        double dArr2[]=new double[N];

        FuzzerUtils.init(iArr, 47557);
        FuzzerUtils.init(dArr2, 65.97565);

        iArr = (iArr = (iArr = iArr));
        vMeth(i21, bFld);
        i22 = 1;
        while (++i22 < 237) {
            switch ((((i21 >>> 1) % 6) * 5) + 100) {
            case 121:
                for (i23 = 2; i23 < 106; ++i23) {
                    i24 = i21;
                    i21 = i23;
                    i24 >>= (int)Test.instanceCount;
                    iArr[i23 + 1] >>= -42883;
                }
                switch (((i22 % 10) * 5) + 125) {
                case 155:
                    i21 += (i22 * Test.fFld);
                    for (i25 = 2; i25 < 106; ++i25) {
                        i21 += (i25 + Test.instanceCount);
                        bFld = bFld;
                        for (i27 = 1; i27 < 2; i27++) {
                            i26 *= i26;
                        }
                        for (i29 = i25; i29 < 2; i29++) {
                            i30 = (int)Test.instanceCount;
                            s1 = (short)-153;
                        }
                        Test.fFld -= i30;
                        switch (((i22 % 6) * 5) + 124) {
                        case 151:
                            for (f1 = 1; 2 > f1; f1++) {
                                int i32=-7;
                                switch ((int)(((f1 % 1) * 5) + 118)) {
                                case 122:
                                    dArr2[(int)(f1)] = i29;
                                    Test.instanceCount -= i29;
                                    switch (((i26 >>> 1) % 2) + 79) {
                                    case 79:
                                        i32 = i29;
                                        Test.fFld += (f1 - i21);
                                        iArr[i22 - 1] += i25;
                                        i31 += (int)Test.instanceCount;
                                        break;
                                    case 80:
                                        iArr[i22] = 11;
                                        break;
                                    }
                                    break;
                                default:
                                    Test.instanceCount = i31;
                                }
                            }
                            break;
                        case 135:
                            Test.instanceCount = i21;
                            break;
                        case 142:
                            i28 += i25;
                            break;
                        case 149:
                            iArr[i22 + 1] = i22;
                        case 146:
                        case 154:
                            Test.fFld += 205L;
                            break;
                        }
                    }
                    break;
                case 126:
                    Test.fFld += i22;
                case 129:
                    i31 = (int)Test.instanceCount;
                case 161:
                    i21 ^= (int)Test.instanceCount;
                    break;
                case 173:
                    i21 += (int)Test.dFld;
                    break;
                case 145:
                    i31 >>= (int)54281L;
                    break;
                case 135:
                    s1 = s1;
                case 159:
                    i26 = i31;
                    break;
                case 136:
                    i31 += i22;
                    break;
                case 127:
                    dArr2[i22] -= i30;
                    break;
                }
            case 103:
                iFld += i29;
                break;
            case 125:
            case 120:
                i21 += i23;
                break;
            case 107:
                Test.iArrFld = Test.iArrFld;
                break;
            case 118:
                iFld >>= iFld;
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
