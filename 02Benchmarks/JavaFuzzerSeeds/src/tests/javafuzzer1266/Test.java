package tests.javafuzzer1266;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:32:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=173L;
    public static float fFld=-76.491F;
    public static boolean bFld=true;
    public double dFld=-101.64671;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, float f, int i6) {

        int i7=-37546, i8=13, i9=188, i10=6, i11=2426;
        double d1=0.93721;
        byte by=93;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1560509367L);

        for (i7 = 9; i7 < 267; i7++) {
            i9 = 6;
            while (--i9 > 0) {
                f -= Test.instanceCount;
                for (i10 = i7; i10 < 1; i10++) {
                    d1 += i7;
                    i6 = i8;
                    if (false) {
                        by *= (byte)i9;
                        b1 = false;
                        i6 = (int)Test.instanceCount;
                    } else if (b1) {
                        Test.instanceCount += i10;
                    } else {
                        lArr[i9 + 1] = -242;
                        Test.instanceCount += 228;
                        if (b1) continue;
                    }
                    i6 <<= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1)
            + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(double d) {

        int i12=64299, i13=29117, i14=-6, i15=-8, i16=-2;
        boolean b2=false;
        double dArr[][]=new double[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 125.1323);
        FuzzerUtils.init(lArr1, 659440676L);

        vMeth1(i12, -57.657F, i12);
        i12 = i12;
        i13 = 1;
        while (++i13 < 215) {
            for (i14 = 1; i14 < 7; ++i14) {
                if (b2) break;
                if (b2) {
                    i12 *= i13;
                }
                i15 = (int)-51L;
                dArr[i13][i14 - 1] = 2.713F;
                b2 = b2;
                lArr1[i14] <<= -68;
                if (i13 != 0) {
                }
                i16 <<= i15;
            }
            Test.iArrFld[i13 - 1] = i12;
            i12 = i12;
        }
        long meth_res = Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b, int i2) {

        int i3=93, i4=10, i17=-127, i18=-13, i19=-15087, iArr[]=new int[N];
        byte by1=-95;
        double d2=0.43652;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -15320);
        FuzzerUtils.init(lArr2, 38229L);

        for (i3 = 124; i3 > 5; i3--) {
            i4 += (-4315 + (i3 * i3));
            switch (((i3 % 8) * 5) + 32) {
            case 41:
                iArr[i3] >>= -57863;
                break;
            case 67:
                if (b) {
                    Test.fFld += (((i3 * i4) + Test.instanceCount) - i4);
                    Test.instanceCount += (lMeth(0.26215) * i4);
                } else {
                    i4 += i2;
                }
                break;
            case 64:
                for (i17 = 13; i17 > 1; i17--) {
                    i19 = i19;
                }
                i19 = i2;
                by1 = (byte)190L;
                lArr2[i3 - 1] = i17;
                break;
            case 43:
                d2 -= i3;
                Test.iArrFld[i3 + 1] <<= -7;
            case 54:
                i4 >>= i19;
                break;
            case 60:
                b = b;
                break;
            case 51:
                try {
                    i4 = (158 / i17);
                    i19 = (1260737744 / i3);
                    Test.iArrFld[(i2 >>> 1) % N] = (350669029 / iArr[i3 + 1]);
                } catch (ArithmeticException a_e) {}
                break;
            case 69:
                Test.fFld = i3;
                break;
            default:
                iArr = Test.iArrFld;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i2 + i3 + i4 + i17 + i18 + i19 + by1 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=48477, i1=-36313, i20=-10, i21=-77, i22=32778, i23=-11, i24=-229, i25=56864, i26=25, i27=-16457, i28=137,
            i29=4;
        float f1=2.851F;
        byte by2=-26;
        short s=-15573, sArr[]=new short[N];
        boolean b3=true;
        long l=-2892445372410137687L;

        FuzzerUtils.init(sArr, (short)-1105);

        for (i = 13; i < 301; i += 2) {
            vMeth(Test.bFld, 2);
            i1 = (int)f1;
            for (i20 = 7; i20 < 174; i20++) {
                for (i22 = 2; i22 > 1; --i22) {
                    i23 = by2;
                    i23 = i1;
                    s += (short)f1;
                    Test.iArrFld[i20 - 1] = s;
                    i1 += (i22 | i21);
                    i21 += i1;
                    if (Test.bFld) continue;
                }
                Test.instanceCount = i22;
                Test.bFld = Test.bFld;
                sArr[i20 - 1] *= by2;
            }
            for (i24 = 10; i24 < 174; ++i24) {
                Test.iArrFld[i] <<= s;
            }
            Test.bFld = b3;
            Test.instanceCount -= -170;
            switch ((i % 9) + 25) {
            case 25:
                Test.fFld *= i25;
                i23 += i;
                for (i26 = 6; i26 < 174; ++i26) {
                    f1 = by2;
                    i25 &= s;
                    i29 = 1;
                    do {
                        Test.iArrFld[i26] <<= by2;
                        i1 = i23;
                        Test.iArrFld[i29 - 1] = (int)dFld;
                        l = 1;
                    } while (++i29 < 2);
                }
                break;
            case 26:
                Test.fFld = s;
                break;
            case 27:
                by2 <<= (byte)i20;
                break;
            case 28:
                if (true) continue;
                break;
            case 29:
                Test.fFld += i;
                break;
            case 30:
                i27 = i1;
                break;
            case 31:
                lArrFld[i - 1] >>= s;
                break;
            case 32:
                i27 = i29;
                break;
            case 33:
                lArrFld[i + 1] += (long)dFld;
            default:
                Test.iArrFld[i + 1] >>= (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
