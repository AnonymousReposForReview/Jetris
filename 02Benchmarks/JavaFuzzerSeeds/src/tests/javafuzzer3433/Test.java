package tests.javafuzzer3433;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:16:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7765750658840794200L;
    public static float fFld=93.315F;
    public static boolean bFld=false;
    public static byte byFld=15;
    public static short sFld=-22514;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -32061);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, long l2) {

        short s=-12908;

        i4 += i4;
        i4 += s;
        Test.fFld = i4;
        i4 *= i4;
        i4 = (int)l2;
        Test.bFld = true;
        vMeth2_check_sum += i4 + l2 + s;
    }

    public static void vMeth1(long l, long l1, boolean b) {

        int i1=7, i2=36, i3=-11, i5=-7, i6=-237, i7=11, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -13725);

        i1 >>= i1;
        i2 = 1;
        do {
            double d1=0.68314;
            if (i1 != (Test.fFld - ((++iArr[i2 + 1]) + d1))) continue;
            i3 = 1;
            while (++i3 < 6) {
                try {
                    i1 = (i3 / iArr[i2 - 1]);
                    i1 = (i1 % 61560);
                    i1 = (-65313 / iArr[i2 + 1]);
                } catch (ArithmeticException a_e) {}
                vMeth2(i2, l1);
                iArr[i3 - 1] = i3;
                i5 = 1;
                do {
                    i1 = i2;
                    Test.byFld += (byte)(i5 | Test.sFld);
                    iArr[i5 - 1] += i1;
                    i1 *= (int)l;
                } while (++i5 < 1);
                for (i6 = 1; i6 < 1; ++i6) {
                    Test.fFld = i3;
                    iArr[i2 - 1] = i5;
                }
            }
        } while (++i2 < 293);
        vMeth1_check_sum += l + l1 + (b ? 1 : 0) + i1 + i2 + i3 + i5 + i6 + i7 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d, int i) {

        long l3=-43423L, lArr[]=new long[N];
        int i8=243, i9=12, i10=14, i11=11267;
        double d2=0.110302;

        FuzzerUtils.init(lArr, -6626102993970018755L);

        vMeth1(Test.instanceCount, Test.instanceCount, false);
        for (l3 = 190; 7 < l3; l3 -= 2) {
            for (i9 = 1; i9 < 17; i9++) {
                i10 = i10;
                i10 -= 27423;
                i8 += (((i9 * i9) + i8) - i10);
                i |= Test.byFld;
                i8 += (((i9 * l3) + i) - Test.instanceCount);
            }
        }
        Test.iArrFld[(i10 >>> 1) % N] *= Test.byFld;
        if (Test.bFld) {
            for (d2 = 2; d2 < 338; ++d2) {
                switch ((int)((d2 % 3) + 35)) {
                case 35:
                    i += (int)(((d2 * Test.fFld) + i8) - Test.instanceCount);
                    i11 += (int)d2;
                case 36:
                    Test.instanceCount += (long)Test.fFld;
                    break;
                case 37:
                    lArr[(int)(d2 + 1)] ^= 12500;
                    break;
                default:
                    d = i9;
                }
            }
        } else {
            Test.fFld = i9;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + l3 + i8 + i9 + i10 + Double.doubleToLongBits(d2) + i11 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i12=-155, i13=185, i14=-90, i15=-178, i16=-225, i17=63194, i18=159, i19=-10, i20=-12, i21=-95;
        double d3=0.19050, d4=94.102000;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, 9L);
        FuzzerUtils.init(fArr, -25.899F);

        vMeth(126.16599, i12);
        i12 >>= i12;
        for (i13 = 2; i13 < 362; ++i13) {
            Test.instanceCount -= 107;
            i14 = i12;
            Test.fFld = (float)d3;
        }
        for (i15 = 20; i15 < 347; ++i15) {
            Test.byFld += (byte)i12;
        }
        for (i17 = 1; i17 < 123; i17 += 3) {
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-4);
            i12 += 68;
            i12 = 139;
            Test.iArrFld[i17 - 1] = i18;
            if (Test.bFld) {
                if (Test.bFld) break;
                Test.iArrFld[i17 + 1] -= i16;
            } else if (Test.bFld) {
                i14 = Test.byFld;
                i16 *= i12;
            } else {
                i19 = 1;
                do {
                    i20 = 1;
                    do {
                        Test.iArrFld[i19 - 1] -= i15;
                        d3 *= i14;
                        i18 -= (int)Test.instanceCount;
                        lArr1[i17 + 1] -= Test.instanceCount;
                        i16 -= i15;
                        Test.fFld -= Test.sFld;
                    } while (++i20 < 4);
                    for (d4 = 1; d4 < 4; ++d4) {
                        int i22=-8406;
                        i22 += (int)(d4 * d4);
                        fArr[(int)(d4 + 1)] = i15;
                        Test.iArrFld[i17 - 1] = (int)Test.fFld;
                    }
                } while (++i19 < 201);
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
