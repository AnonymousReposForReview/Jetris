package tests.javafuzzer3479;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 09:05:25 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=8947495513185010486L;
    public static int iFld=58496;
    public int iFld1=-49387;
    public static byte byFld=103;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 53.771F);
        FuzzerUtils.init(Test.iArrFld, 143);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f=-1.948F;
        byte by=90;

        Test.iFld = (int)Test.instanceCount;
        Test.fArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        f += 128;
        Test.iArrFld = Test.iArrFld;
        by = (byte)Test.instanceCount;
        Test.iFld |= Test.iFld;
        long meth_res = Float.floatToIntBits(f) + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, double d, int i2) {

        short s=-32068;
        float f1=-2.786F;

        Test.iFld = (int)((s <<= (short)(27378L * iMeth())) + l);
        i2 += Test.iFld;
        l = (long)f1;
        vMeth1_check_sum += l + Double.doubleToLongBits(d) + i2 + s + Float.floatToIntBits(f1);
    }

    public void vMeth() {

        double d1=-47.28073;
        float f2=0.418F;
        int i3=52466, i4=164, i5=179, i7=10, iArr[]=new int[N];
        boolean b=false;
        long l1=101L;
        byte by1=-105;

        FuzzerUtils.init(iArr, 33);

        Test.iFld &= iArr[(Test.iFld >>> 1) % N];
        vMeth1(Test.instanceCount, d1, Test.iFld);
        Test.iFld = Test.iFld;
        f2 = Test.iFld;
        for (i3 = 4; i3 < 398; ++i3) {
            f2 -= Test.iFld;
            if (b) break;
            i5 = 1;
            while (++i5 < 4) {
                iFld1 += (i5 + l1);
                by1 -= (byte)Test.iFld;
            }
            i7 = 1;
            while (++i7 < 4) {
                Test.iArrFld[i7] = (int)f2;
                if (b) break;
                i4 += (int)(-3595893016L + (i7 * i7));
                Test.instanceCount = i5;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i3 + i4 + (b ? 1 : 0) + i5 + l1 +
            by1 + i7 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-13725, i1=11, i8=30112, i9=-10, i10=-9, i11=47, i12=35;
        float f3=30.264F;
        double d2=101.61667;
        boolean b1=true;

        for (i = 7; i < 398; i++) {
            i1 = (int)Test.instanceCount;
            vMeth();
            for (i8 = i; 64 > i8; i8++) {
                i1 >>= iFld1;
                Test.fArrFld[i] = i1;
                for (i10 = i8; i10 < 1; ++i10) {
                    Test.iArrFld[i8 - 1] = -12;
                    iFld1 += (i10 - i9);
                }
                for (f3 = i8; f3 < 1; ++f3) {
                    Test.instanceCount += (12 + (f3 * f3));
                    i9 >>= i12;
                    Test.instanceCount += (long)(((f3 * iFld1) + iFld1) - iFld1);
                    i12 = (int)-58016L;
                    switch ((i % 6) + 59) {
                    case 59:
                        Test.iArrFld[i] &= i12;
                        break;
                    case 60:
                        iFld1 += i1;
                        d2 *= -43;
                        i12 += -13533;
                        Test.instanceCount += (long)(f3 - i1);
                        break;
                    case 61:
                    case 62:
                        if (b1) continue;
                        switch (((i8 >>> 1) % 1) + 55) {
                        case 55:
                            if (b1) {
                                Test.iArrFld[i] >>= (int)Test.instanceCount;
                            } else {
                                i12 += (int)f3;
                                i9 += Test.iFld;
                                Test.iArrFld[(int)(f3)] = i12;
                            }
                            Test.iArrFld[i8] = Test.iFld;
                            if (b1) continue;
                            break;
                        }
                        Test.iFld *= i10;
                        break;
                    case 63:
                        Test.byFld += (byte)(f3 * f3);
                        break;
                    case 64:
                        Test.instanceCount = i1;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
