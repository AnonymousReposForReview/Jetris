package tests.javafuzzer1682;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:22:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-61430L;
    public static byte byFld=11;
    public static boolean bFld=false;
    public volatile short sFld=-14363;
    public int iFld=-14;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 603236618267807771L);
        FuzzerUtils.init(Test.iArrFld, 33217);
        FuzzerUtils.init(Test.dArrFld, 0.29090);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(float f, int i6) {

        double d=25.109559, d1=0.128709, dArr[]=new double[N];
        int i7=-179, i8=-12446, i9=-11, iArr1[]=new int[N];

        FuzzerUtils.init(dArr, -126.115877);
        FuzzerUtils.init(iArr1, 2);

        i6 += (int)d;
        i6 = (int)d;
        dArr[(i6 >>> 1) % N] -= i6;
        i6 -= i6;
        for (i7 = 1; 360 > i7; i7++) {
            Test.bFld = true;
            Test.byFld += (byte)(((i7 * i8) + i8) - i6);
            i6 -= (int)Test.instanceCount;
            i8 = i6;
            Test.lArrFld[i7 + 1][i7 + 1] -= -9;
            for (d1 = 1; 5 > d1; ++d1) {
                i6 += i9;
                iArr1[i7 - 1] -= (int)-81.978F;
                d *= -147;
                if (Test.bFld) break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i6 + Double.doubleToLongBits(d) + i7 + i8 +
            Double.doubleToLongBits(d1) + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i3, int i4, int i5) {

        float f1=2.874F, f2=-1.672F, fArr[]=new float[N];
        int i10=-12, i11=95, i12=-11, i13=-54419, iArr[]=new int[N];
        double d2=0.88393, dArr1[]=new double[N];
        short s=7107;

        FuzzerUtils.init(iArr, -13);
        FuzzerUtils.init(fArr, 2.380F);
        FuzzerUtils.init(dArr1, 68.105184);

        iArr[(i5 >>> 1) % N] *= (int)(i3 + ((i4 * Test.byFld) * (Test.instanceCount * i4)));
        iArr[(i3 >>> 1) % N] += (int)fMeth(-2.210F, i3);
        for (f1 = 249; f1 > 8; --f1) {
            iArr[(int)(f1)] += i3;
            switch ((int)((f1 * 5) + 48)) {
            case 286:
                for (i11 = 1; i11 < 7; i11 += 3) {
                    i13 = 1;
                    while (++i13 < 4) {
                        fArr[(int)(f1 + 1)] -= 6;
                        d2 += Test.instanceCount;
                        d2 = i10;
                        Test.instanceCount += (long)f1;
                        i5 += 36574;
                        if (Test.bFld) break;
                        Test.instanceCount = i12;
                        Test.instanceCount -= i4;
                    }
                }
            case 257:
                Test.instanceCount += (long)f1;
            case 325:
                Test.instanceCount = (long)d2;
                break;
            case 384:
                f2 = Test.instanceCount;
            case 326:
                f2 = f1;
                break;
            case 189:
                i4 = (int)Test.instanceCount;
                break;
            case 107:
                i4 += i11;
                break;
            case 178:
                i4 += i4;
                break;
            case 54:
                i12 = (int)-37621L;
            case 351:
                Test.instanceCount += (long)((long)f1 | Test.instanceCount);
                break;
            case 175:
                d2 = i12;
                break;
            case 242:
                d2 -= i4;
                break;
            case 135:
                i4 >>>= (int)Test.instanceCount;
                break;
            case 222:
                i12 &= i11;
                break;
            case 182:
                d2 -= i11;
            case 279:
                fArr[(int)(f1 - 1)] = i12;
                break;
            case 236:
                fArr[(int)(f1)] += i3;
                break;
            case 297:
                i10 = i5;
                break;
            case 109:
                i4 -= i4;
            case 140:
                i4 ^= (int)6L;
                break;
            case 374:
                i4 -= Test.byFld;
                break;
            case 110:
                i10 -= i4;
                break;
            case 66:
                f2 *= i11;
            case 157:
                i5 += (int)f1;
                break;
            case 57:
                i4 >>= 25;
            case 192:
                i12 = i3;
            case 256:
                i4 += (int)(f1 + i10);
            case 339:
                if (Test.bFld) break;
                break;
            case 142:
                Test.instanceCount %= (i3 | 1);
            case 296:
                i5 *= i4;
                break;
            case 239:
                fArr[(int)(f1)] *= -13392;
                break;
            case 259:
                i12 += (int)97.27380;
                break;
            case 52:
                iArr[(int)(f1)] += (int)d2;
                break;
            case 146:
                Test.instanceCount = i13;
                break;
            case 234:
            case 59:
                iArr[(int)(f1)] <<= -84;
                break;
            case 248:
                i10 = i3;
                break;
            case 353:
                d2 += i10;
                break;
            case 329:
                Test.instanceCount += (long)f1;
                break;
            case 327:
                i12 <<= -15781;
            case 218:
                Test.instanceCount = (long)f2;
                break;
            case 150:
                Test.byFld |= (byte)14007;
                break;
            case 366:
                f2 += Test.instanceCount;
                break;
            case 388:
                i12 += (int)d2;
            case 390:
                i10 = (int)Test.instanceCount;
                break;
            case 202:
                Test.bFld = Test.bFld;
                break;
            case 306:
                i12 &= i11;
                break;
            case 200:
                f2 -= i5;
            case 277:
                iArr[(int)(f1 - 1)] = (int)3410983928196399787L;
                break;
            case 347:
                Test.instanceCount = i5;
                break;
            case 71:
                i4 += (89 + (f1 * f1));
                break;
            case 144:
                Test.bFld = true;
                break;
            case 195:
                i10 += (int)((long)f1 | (long)f2);
                break;
            case 62:
                Test.instanceCount = Test.instanceCount;
            case 64:
                i5 += i10;
            case 283:
                f2 += -7066L;
                break;
            case 134:
                i12 -= i3;
                break;
            case 214:
                iArr[(int)(f1 - 1)] = (int)-67L;
                break;
            case 350:
                i10 += (int)((long)f1 | i10);
                break;
            case 272:
                iArr[(int)(f1 + 1)] -= i10;
                break;
            case 181:
                Test.instanceCount += (-220 + (f1 * f1));
                break;
            case 302:
                d2 *= i11;
            case 250:
                Test.instanceCount -= Test.byFld;
                break;
            case 73:
                iArr[(int)(f1 - 1)] *= i11;
                break;
            case 111:
                Test.lArrFld[(int)(f1 + 1)][(0 >>> 1) % N] *= 0;
                break;
            case 94:
                i3 += (int)(f1 * i13);
                break;
            case 227:
                i4 += i10;
                break;
            case 249:
                i10 += (int)((long)f1 | i5);
                break;
            case 136:
                d2 += Test.instanceCount;
                break;
            case 321:
                i3 += (int)(((f1 * i11) + i4) - s);
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(d2) + Float.floatToIntBits(f2) + s + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth(int i, long l) {

        int i1=-83, i2=-62330, i16=-15453, i17=-171, i20=-30099, i21=-14;
        float f3=-26.661F;
        double dArr2[]=new double[N];

        FuzzerUtils.init(dArr2, 2.49903);

        for (i1 = 11; i1 < 349; i1++) {
            vMeth1(i1, -5, 0);
            Test.iArrFld[i1 + 1] ^= i2;
            i2 += (int)f3;
        }
        for (i16 = 9; i16 < 198; i16++) {
            Test.instanceCount *= i16;
            i2 = (int)-54.56446;
            dArr2[i16 - 1] = i;
        }
        for (int i18 : Test.iArrFld) {
            i >>>= 10;
            for (i20 = 1; i20 < 4; ++i20) {
                Test.iArrFld[i20] = Test.byFld;
                Test.instanceCount = i1;
                i2 += (17 + (i20 * i20));
            }
            i17 = (int)f3;
        }
        vMeth_check_sum += i + l + i1 + i2 + Float.floatToIntBits(f3) + i16 + i17 + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2));
    }

    public void mainTest(String[] strArr1) {

        int i22=-57524, i23=33235, i24=9959, i25=-31144, i26=11, i27=83, i28=-13914, i29=-148, i30=7;
        double d4=-2.108210, d5=2.58561;
        float f4=89.782F;

        vMeth(i22, Test.instanceCount);
        Test.bFld = Test.bFld;
        for (i23 = 4; i23 < 205; ++i23) {
            i22 /= (int)((long)(d4) | 1);
            for (i25 = 3; i25 < 125; ++i25) {
                f4 -= (float)d4;
                i24 -= i22;
                Test.iArrFld[i23] -= i24;
                Test.dArrFld[i25 - 1] -= i22;
                Test.instanceCount = i23;
                Test.instanceCount -= -700;
                Test.lArrFld[i25 - 1][i25] /= (i22 | 1);
            }
            i26 <<= i26;
            f4 = sFld;
            Test.iArrFld[i23] -= (int)47.999F;
            i24 += (i23 ^ iFld);
        }
        try {
            for (i27 = 9; i27 < 226; i27++) {
                i29 = 1;
                while (++i29 < 116) {
                    Test.instanceCount = sFld;
                    sFld ^= (short)-13;
                    if (false) continue;
                    i22 <<= (int)Test.instanceCount;
                    i30 = 1;
                    while (++i30 < 1) {
                        i26 -= (int)Test.instanceCount;
                        i26 = 172;
                        f4 = -60391;
                        i26 += (i30 | i28);
                        i28 -= i23;
                        iFld += -6;
                    }
                }
            }
        }
        catch (NegativeArraySizeException exc1) {
            fArrFld[(107 >>> 1) % N] -= (float)d5;
        }
        finally {
            Test.instanceCount = -12L;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
