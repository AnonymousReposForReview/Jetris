package tests.javafuzzer472;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:23:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-43869L;
    public static int iFld=-8;
    public short sFld=-14580;
    public byte byFld=-17;
    public static volatile boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 47596);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static long lMeth() {

        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        bArr[(Test.iFld >>> 1) % N] = (b = ((Test.iFld + Test.instanceCount) != Test.iFld));
        long meth_res = (b ? 1 : 0) + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(float f) {

        int i6=0, i7=-4, i8=-65268, i9=8561;
        double d=2.2175, d1=63.49254, d2=-2.11783;
        byte by=-107;
        boolean b1=true, bArr1[]=new boolean[N];

        FuzzerUtils.init(bArr1, true);

        Test.iFld *= 58702;
        Test.instanceCount <<= i6;
        for (i7 = 1; i7 < 354; ++i7) {
            i8 += (((i7 * i7) + i7) - Test.iFld);
            i8 -= -9;
            for (d = 1; d < 5; ++d) {
                d1 -= 158;
                d2 = 1;
                while (++d2 < 2) {
                    bArr1[(int)(d - 1)] = true;
                    i9 += (11 + (d2 * d2));
                    Test.instanceCount *= -89;
                    Test.iFld = 39;
                    Test.instanceCount += (long)(d2 - by);
                    if (i9 != 0) {
                    }
                    bArr1[(int)(d2 + 1)] = b1;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(bArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i4=138, i5=-11, i10=2, i11=-203, i12=204, i13=-7, i14=-31578, i15=53919;
        float f1=78.389F, f2=-2.201F;
        boolean b2=true;
        double d3=45.12516, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.30322);

        for (i4 = 8; i4 < 138; ++i4) {
            Test.iArrFld[i4] -= (iMeth1(f1) - Test.iFld);
            i5 -= Test.iFld;
            for (i10 = 1; 12 > i10; i10++) {
                for (f2 = 1; f2 < 2; ++f2) {
                    if (b2) continue;
                }
                Test.iArrFld[i10] <<= i4;
                i11 = -27786;
            }
            d3 -= i5;
            dArr[i4] = i12;
            i12 += i5;
            i13 = 12;
            while (--i13 > 0) {
                for (i14 = i13; i14 < 1; i14++) {
                    f1 += (i14 * Test.instanceCount);
                    Test.instanceCount -= -247;
                }
            }
        }
        long meth_res = i4 + i5 + Float.floatToIntBits(f1) + i10 + i11 + Float.floatToIntBits(f2) + i12 + (b2 ? 1 : 0)
            + Double.doubleToLongBits(d3) + i13 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i16=-46, i17=-28370, i18=13, i19=-17482, i20=-168, i21=230, i22=9, i23=-6;
        byte by1=-19;

        Test.iFld *= (int)(Test.iFld -= (int)((Test.iFld -= (int)Test.instanceCount) - iMeth()));
        Test.instanceCount >>= Test.iFld;
        for (i16 = 22; i16 < 352; ++i16) {
            short s=-32662;
            by1 |= (byte)s;
            for (i18 = 1; i18 < 5; ++i18) {
                i17 += Test.iFld;
                i17 += (i18 * i18);
                i17 += i19;
                for (i20 = 1; i20 < 2; i20 += 2) {
                    i19 += i20;
                    Test.instanceCount &= i18;
                }
                for (i22 = 1; i22 < 2; ++i22) {
                    i21 += i20;
                    Test.iFld = (int)1.46625;
                    s += (short)4032440618L;
                }
            }
        }
        vMeth_check_sum += i16 + i17 + by1 + i18 + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=188, i2=-12616, i3=216, i24=50199;
        float f3=2.372F, f4=92.182F;
        double d4=31.39016;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 52915L);

        Test.iArrFld[(i >>> 1) % N] = (int)lMeth();
        i1 = 1;
        do {
            for (i2 = 8; i2 < 169; ++i2) {
                i3 = (--i);
                vMeth();
                lArr[i2 + 1] += Test.instanceCount;
                f3 = (float)d4;
                switch ((i1 % 1) + 79) {
                case 79:
                    i += (i2 * i1);
                    f4 = 1;
                    while (++f4 < 2) {
                        Test.iArrFld[i2] ^= i2;
                        Test.iArrFld[(int)(f4 + 1)] = i2;
                        i3 <<= i3;
                        Test.iFld += (int)f4;
                        fArrFld[i1 - 1][(int)(f4 + 1)] -= 29716;
                        i3 += sFld;
                        Test.iFld = i3;
                        d4 += Test.instanceCount;
                        f3 += f4;
                        Test.instanceCount &= -46;
                    }
                    byFld <<= (byte)i2;
                    Test.iFld |= i2;
                default:
                    i24 = 2;
                    do {
                        Test.iFld = (int)Test.instanceCount;
                        Test.iArrFld[i1] = i1;
                        i3 = (int)f3;
                        lArr[i1] = Test.iFld;
                        i += i24;
                        Test.iFld += (i24 + i3);
                        if (Test.bFld) break;
                    } while (--i24 > 0);
                }
            }
        } while (++i1 < 148);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
