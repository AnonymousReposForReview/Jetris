package tests.javafuzzer141;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:01:53 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1622305828L;
    public static boolean bFld=false;
    public static byte byFld=-24;
    public static short sFld=2255;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1069974596782086118L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=39578, i8=-20244, i9=-2, iArr[]=new int[N];
        float f=2.339F, f1=-96.340F;
        boolean b=false;
        short s1=20173;
        long lArr[]=new long[N], lArr1[]=new long[N];

        FuzzerUtils.init(lArr, 3923984795L);
        FuzzerUtils.init(lArr1, 2614952347L);
        FuzzerUtils.init(iArr, -37300);

        lArr[(i7 >>> 1) % N] = (long)f;
        f -= 27913;
        i7 += (int)Test.instanceCount;
        i7 = i7;
        for (i8 = 18; i8 < 337; ++i8) {
            if (true) break;
        }
        f1 = 1;
        do {
            lArr1[(int)(f1 - 1)] += -1;
            if (b) break;
        } while (++f1 < 141);
        i9 -= i9;
        b = b;
        s1 = (short)i8;
        i9 *= -33357;
        iArr[(i9 >>> 1) % N] <<= i8;
        i9 &= i8;
        vMeth2_check_sum += i7 + Float.floatToIntBits(f) + i8 + i9 + Float.floatToIntBits(f1) + (b ? 1 : 0) + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5, int i6) {

        short s=-16918;

        s = (short)(i5--);
        vMeth2();
        vMeth1_check_sum += i5 + i6 + s;
    }

    public static void vMeth(int i1, double d, int i2) {

        int i3=-37531, i4=28, i10=202, iArr1[]=new int[N];
        float f2=-61.738F, f3=2.37F;

        FuzzerUtils.init(iArr1, 20618);

        for (i3 = 2; 223 > i3; ++i3) {
            if (false) {
                vMeth1(i1, i3);
                f2 = 1;
                while (++f2 < 7) {
                    if (Test.bFld) continue;
                    i1 ^= 12;
                    f3 /= ((long)(d) | 1);
                    Test.instanceCount -= i4;
                    i10 = 1;
                    while (++i10 < 1) {
                        i4 -= i3;
                        d = i4;
                        f3 *= i10;
                        iArr1 = iArr1;
                        i2 = i3;
                        Test.byFld ^= (byte)i1;
                    }
                }
                vMeth_check_sum += i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + Float.floatToIntBits(f2) +
                    Float.floatToIntBits(f3) + i10 + FuzzerUtils.checkSum(iArr1);
                return;
            } else {
                if (i1 != 0) {
                    vMeth_check_sum += i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + Float.floatToIntBits(f2) +
                        Float.floatToIntBits(f3) + i10 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + Float.floatToIntBits(f2) +
            Float.floatToIntBits(f3) + i10 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        long l=0L;
        int i=-242, i11=-25, i12=-33496, i13=-6, i14=-212, iArr2[]=new int[N];
        double d1=2.72279;
        float f4=65.18F, fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 2);
        FuzzerUtils.init(fArr, -1.684F);

        for (l = 249; l > 2; --l) {
            if (Test.bFld) {
                vMeth(i, d1, i);
                f4 += i;
            } else if (Test.bFld) {
                i |= -41;
                switch ((int)(((l % 2) * 5) + 86)) {
                case 93:
                    Test.bFld = false;
                    Test.instanceCount -= Test.sFld;
                case 96:
                    d1 -= l;
                    i /= (int)((long)(f4) | 1);
                    break;
                }
            } else {
                f4 += (l * Test.instanceCount);
                i -= 122;
                iArr2[(int)(l)] = i;
            }
            Test.lArrFld[(int)(l)] = l;
            iArr2 = iArr2;
            for (i11 = 2; i11 < 102; i11 += 3) {
                i12 = i11;
                for (i13 = 1; 4 > i13; i13++) {
                    Test.instanceCount = i12;
                    i += (11 + (i13 * i13));
                    iArr2[i11 - 1] -= 26531;
                    fArr = fArr;
                    if (Test.bFld) {
                        i14 = i13;
                        Test.lArrFld[(int)(l - 1)] = i;
                    } else if (Test.bFld) {
                        i14 *= i12;
                        i = i13;
                        i12 *= Test.sFld;
                    } else if (Test.bFld) {
                        i14 = (int)l;
                        i12 -= i13;
                    } else {
                        Test.sFld &= (short)i11;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
