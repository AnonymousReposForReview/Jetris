package tests.javafuzzer2180;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:46:53 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1L;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6) {

        int i7=-4, i8=-3, i9=24313, i10=7, iArr2[]=new int[N];
        boolean b=true;
        short s=17215;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -53564);
        FuzzerUtils.init(fArr, 47.693F);

        for (i7 = 6; i7 < 179; i7++) {
            for (i9 = 9; 1 < i9; --i9) {
                Test.instanceCount += i7;
                i6 = i6;
                i6 += (i9 - i8);
                if (b) break;
                i8 <<= i7;
                i8 += (((i9 * i8) + i8) - Test.instanceCount);
                s = (short)i10;
                iArr2 = iArr2;
            }
            if (false) {
                i8 += i9;
            } else {
                fArr[i7] += i10;
            }
            i8 *= i6;
        }
        i8 *= i8;
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) + s + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i5, long l1) {

        int iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, -64086);

        iArr1[(i5 >>> 1) % N] = (iArr1[(i5 >>> 1) % N] = (iArr1[(i5 >>> 1) % N] = (iArr1[(i5 >>> 1) % N] = iArr1[(i5
            >>> 1) % N])));
        vMeth1(4);
        vMeth_check_sum += i5 + l1 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, int i2, int i3) {

        long l=10L, lArr[]=new long[N];
        int i4=12, i11=-55770, i12=-13413, i13=-2, i14=14, iArr3[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(lArr, -12L);
        FuzzerUtils.init(iArr3, -5);

        if (b1) {
            for (l = 236; l > 5; l -= 2) {
                vMeth(i4, Test.instanceCount);
                lArr[(int)(l + 1)] = i2;
                iArr3[(int)(l + 1)] *= i4;
                iArr3[(int)(l)] += 7;
                i11 = 1;
                while (++i11 < 14) {
                    i4 += (((i11 * Test.instanceCount) + l) - Test.instanceCount);
                    i4 *= (int)-1.13629;
                }
            }
            i2 -= i11;
            for (i12 = 267; i12 > 5; i12--) {
                if (i11 != 0) {
                }
            }
            i14 = 1;
            do {
                i13 += i4;
                iArr3 = iArr3;
            } while (++i14 < 194);
        } else if (b1) {
        } else {
            Test.instanceCount += 15;
        }
        long meth_res = i1 + i2 + i3 + l + i4 + i11 + i12 + i13 + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-107, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -44091);

        iArr[(i >>> 1) % N] <<= (++i);
        i -= iMeth(i, i, i);
        i = 11;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
