package tests.javafuzzer1371;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:08:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3618877325320631691L;
    public double dFld=0.43534;
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -1.95608);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i8, int i9) {

        int i10=-14607, i11=-1858, i12=-7034, i13=55576, i14=17125, iArr1[]=new int[N];
        boolean b=false;
        short s=-14072;

        FuzzerUtils.init(iArr1, -230);

        Test.instanceCount >>>= i9;
        for (i10 = 22; i10 < 377; i10++) {
            i12 = 1;
            do {
                i13 = 1;
                do {
                    b = b;
                    Test.instanceCount -= -79;
                    i11 >>= i13;
                    Test.instanceCount >>= i10;
                    i11 = (int)153L;
                    i9 >>= i13;
                } while (++i13 < 1);
            } while (++i12 < 5);
            i9 /= (int)(i8 | 1);
            Test.instanceCount += i10;
            i14 = 1;
            while (++i14 < 5) {
                iArr1[i14 - 1] += (int)Test.instanceCount;
                s = (short)i11;
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + i14 + s + FuzzerUtils.checkSum(iArr1);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i7) {

        int i15=7, i16=-2774, i17=-7, i18=-112, i19=245, iArr2[]=new int[N];
        byte by1=39;
        float f1=-61.341F;
        double d1=0.72953;

        FuzzerUtils.init(iArr2, -163);

        i7 = (-iMeth2(i7, i7));
        for (i15 = 124; i15 > 7; --i15) {
            by1 = (byte)-8;
            Test.instanceCount += i15;
            i17 = 1;
            do {
                switch ((i17 % 2) + 84) {
                case 84:
                    for (i18 = i17; i18 < 1; i18++) {
                        Test.instanceCount += (i18 - i15);
                        f1 += (float)85.31185;
                        d1 = 72.73652;
                        iArr2[i17 - 1] += (int)Test.instanceCount;
                        f1 -= i7;
                        f1 -= i18;
                        Test.dArrFld[i15] *= Test.instanceCount;
                        if (i15 != 0) {
                        }
                    }
                    break;
                case 85:
                    i16 = 3;
                    break;
                }
            } while (++i17 < 13);
        }
        long meth_res = i7 + i15 + i16 + by1 + i17 + i18 + i19 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1)
            + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, int i1) {

        int i2=-34, i3=-65089, i4=-4, i5=98, i6=63156, iArr[]=new int[N];
        long l1=10L, l2=144L, lArr[]=new long[N];
        float f=114.384F;
        byte by=-87;

        FuzzerUtils.init(lArr, -7L);
        FuzzerUtils.init(iArr, 57628);

        for (i2 = 13; i2 < 363; i2++) {
            for (l1 = 1; l1 < 5; l1 += 2) {
                double d=102.61301;
                lArr[i2 + 1] >>>= (i2 * ((i3 &= i4) * (5 + iArr[i2 + 1])));
                d += ((Math.max(i2, i2) + (i1 - 251)) * (i3--));
                switch (((((int)(d + i2)) >>> 1) % 1) + 22) {
                case 22:
                    for (i5 = 1; i5 < 3; ++i5) {
                        switch ((i2 % 2) + 17) {
                        case 17:
                            f = (by++);
                            break;
                        case 18:
                            i3 += (int)(--l);
                            i1 *= iMeth1(i6);
                            break;
                        }
                        i3 -= (int)l1;
                        i3 *= (int)-2508985942L;
                        f += i2;
                        i6 += (((i5 * i2) + i4) - l1);
                        i3 -= (int)l2;
                    }
                default:
                    d *= 183L;
                }
            }
        }
        long meth_res = l + i1 + i2 + i3 + l1 + i4 + i5 + i6 + Float.floatToIntBits(f) + by + l2 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-227, i20=-214, i21=162, i22=-56064, i23=47876, i24=-11, i25=-3858, i26=-64097, iArr3[]=new int[N];
        float f2=2.771F, f3=-2.922F, fArr[]=new float[N];
        byte by2=-17;
        boolean b1=true;

        FuzzerUtils.init(iArr3, 56);
        FuzzerUtils.init(fArr, 87.460F);

        i = iMeth(-5391687118487878528L, i);
        for (i20 = 315; i20 > 8; --i20) {
            iArr3[i20] <<= i;
            i22 = 1;
            do {
                i ^= 11;
                i21 += (((i22 * f2) + i21) - i);
            } while (++i22 < 82);
            f2 %= (i22 | 1);
            for (i23 = 2; i23 < 82; ++i23) {
                int i27=38731;
                for (i25 = 1; i25 < 2; ++i25) {
                    double d2=-2.114455;
                    i += (int)Test.instanceCount;
                    i -= -10046;
                    iArr3[i20 + 1] *= (int)d2;
                }
                dFld = Test.instanceCount;
                i21 = i24;
                i -= by2;
                if (b1) break;
                switch (((i >>> 1) % 5) + 69) {
                case 69:
                    i %= -25;
                    i24 = i24;
                    fArr[i23 + 1] += 0;
                    i24 = (int)Test.instanceCount;
                    break;
                case 70:
                    iArr3[i20 + 1] += (int)13L;
                    i24 >>= -63;
                    break;
                case 71:
                    i26 >>= (int)Test.instanceCount;
                    i = i27;
                    break;
                case 72:
                    i26 = i20;
                    f3 += (i23 - by2);
                case 73:
                    iArr3[i23] -= i20;
                    iArr3[i23 + 1] &= (int)Test.instanceCount;
                    iArr3[i23] += i21;
                default:
                    iArr3[i20 + 1] = i25;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
