package tests.javafuzzer2369;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:39:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public volatile byte byFld=-98;
    public static byte byFld1=3;
    public static double dFld=0.73296;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -33933);
        FuzzerUtils.init(Test.lArrFld, 4027302703L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, long l4, int i4) {

        int i5=-87, i6=-49591, i7=-226, i8=12;
        double d=8.111124;
        boolean b=true;
        float f1=2.605F;

        i5 = 1;
        while (++i5 < 213) {
            d *= i3;
        }
        i6 = 1;
        do {
            i4 += i7;
            i4 += (((i6 * i4) + i7) - i3);
            i7 /= (int)(Test.instanceCount | 1);
            i7 += i6;
            b = b;
            i7 = (int)f1;
            i4 *= (int)f1;
            i3 = i6;
            i8 = 1;
            while (++i8 < 5) {
                i3 *= -57777;
                i7 += 40;
                f1 += Test.byFld1;
            }
        } while (++i6 < 311);
        long meth_res = i3 + l4 + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + (b ? 1 : 0) +
            Float.floatToIntBits(f1) + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l1, long l2, long l3) {

        int i9=-22699;

        Test.instanceCount = Integer.reverseBytes((int)((Test.instanceCount++) % (iMeth(i9, l2, 2) | 1)));
        i9 = i9;
        vMeth1_check_sum += l1 + l2 + l3 + i9;
    }

    public static void vMeth(int i1, short s, int i2) {

        int i10=-13, i11=-14008, i12=159, i13=-3, i14=36831;

        vMeth1(Test.instanceCount, 36886L, Test.instanceCount);
        i10 = 1;
        while (++i10 < 237) {
            Test.iArrFld[i10] -= i2;
            i2 += i10;
            for (i11 = i10; i11 < 7; i11++) {
                for (i13 = i11; i13 < 1; i13++) {
                    i14 += i13;
                    Test.lArrFld[(i14 >>> 1) % N] = i11;
                    switch (((i13 % 8) * 5) + 13) {
                    case 14:
                        i2 = i13;
                        break;
                    case 49:
                        i12 += (-55 + (i13 * i13));
                        i2 += (-35498 + (i13 * i13));
                        break;
                    case 42:
                        Test.instanceCount += -11;
                    case 37:
                        i12 <<= i10;
                        Test.byFld1 = (byte)i14;
                    case 18:
                        i14 += -55186;
                        break;
                    case 44:
                        Test.instanceCount -= i11;
                        break;
                    case 41:
                        i14 >>= 9;
                        break;
                    case 46:
                        Test.dFld *= i1;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + s + i2 + i10 + i11 + i12 + i13 + i14;
    }

    public void mainTest(String[] strArr1) {

        float f=-2.7F;
        long l=-3211380733L;
        int i=-23826, i15=38260, i16=-16335, i17=-1978, i18=-119, i19=45776;
        short s1=30815;
        boolean b1=false;

        f = byFld;
        for (l = 9; l < 392; ++l) {
            vMeth(-121, s1, i);
            i <<= i;
            i >>= (int)Test.instanceCount;
            for (i15 = 2; i15 < 66; i15++) {
                Test.lArrFld[(int)(l)] *= s1;
                i16 = i;
                if (b1) {
                    i16 -= i15;
                } else if (b1) {
                    i <<= byFld;
                    for (i17 = i15; i17 < 2; ++i17) {
                        i16 >>>= i17;
                        i16 += i17;
                        Test.instanceCount = i15;
                        if (b1) {
                            s1 += (short)(((i17 * i) + l) - i18);
                            i18 -= (int)Test.dFld;
                            Test.instanceCount ^= i16;
                        }
                        Test.dFld = i;
                        dArrFld[i17 - 1] *= s1;
                        i16 = i15;
                    }
                } else {
                    Test.instanceCount = i18;
                }
                i18 = i16;
                byFld |= (byte)-211;
            }
            Test.dFld = f;
        }
        i18 -= i;
        i = i18;
        Test.instanceCount -= i19;
        i = 6;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
