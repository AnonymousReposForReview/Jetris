package tests.javafuzzer516;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:59:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-214L;
    public double dFld=75.19037;
    public float fFld=-94.494F;
    public boolean bFld=true;
    public static volatile int iFld=-8;
    public byte byFld=7;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -2885);
        FuzzerUtils.init(Test.sArrFld, (short)-10771);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, long l1) {

        double d=-1.129768, d1=0.48542, d2=74.84172, dArr[]=new double[N];
        int i6=-5, i7=95, i8=-166;
        short s1=30172;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 1.368F);
        FuzzerUtils.init(lArr, -145407610L);
        FuzzerUtils.init(dArr, 0.74863);

        l1 <<= i4;
        i4 += i4;
        fArr[(i4 >>> 1) % N] = i4;
        switch ((((i4 >>> 1) % 5) * 5) + 16) {
        case 34:
            for (int i5 : Test.iArrFld) {
                for (d = 4; d > 1; --d) {
                    for (i7 = 1; i7 < 2; ++i7) {
                        Test.sArrFld[(int)(d - 1)] *= (short)59832;
                        i6 *= i6;
                        d1 += s1;
                        i4 *= (int)-20L;
                        lArr[i7 - 1] += i7;
                        lArr[i7] <<= i5;
                        Test.iArrFld[i7] *= i7;
                    }
                    Test.iArrFld[(int)(d)] = i8;
                }
            }
            break;
        case 19:
            i6 = 3;
            break;
        case 18:
            Test.iArrFld[(i8 >>> 1) % N] += (int)1.884F;
            break;
        case 40:
            Test.instanceCount = i4;
            break;
        case 36:
        default:
            dArr[(i8 >>> 1) % N] -= d2;
        }
        long meth_res = i4 + l1 + Double.doubleToLongBits(d) + i6 + i7 + i8 + Double.doubleToLongBits(d1) + s1 +
            Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i3) {

        int i9=60704, i10=0, i11=12, i12=13, i13=-140;
        byte by=69;
        boolean b=true, bArr[]=new boolean[N];
        float fArr1[]=new float[N];
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(fArr1, 2.322F);
        FuzzerUtils.init(dArr1, 54.18606);
        FuzzerUtils.init(bArr, true);

        iMeth(i3, Test.instanceCount);
        fArr1[(Test.iFld >>> 1) % N] = i3;
        for (i9 = 12; 254 > i9; i9++) {
            i3 += i3;
            i3 = i10;
            l &= by;
            for (i11 = 1; i11 < 7; i11++) {
                i13 = 1;
                do {
                    dArr1[i13][i11] -= l;
                    bArr[i13 + 1] = b;
                    Test.iArrFld[i13] = i10;
                    i3 = Test.iFld;
                    i3 += i3;
                    i12 *= by;
                    Test.iArrFld[i11 - 1] = by;
                } while (++i13 < 2);
            }
        }
        vMeth1_check_sum += l + i3 + i9 + i10 + by + i11 + i12 + i13 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))
            + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(short s) {

        int i14=39318, i15=254;
        float f=116.317F;
        boolean b1=true;

        vMeth1(Test.instanceCount, Test.iFld);
        for (i14 = 8; 243 > i14; ++i14) {
            f += (i14 * s);
            b1 = b1;
            switch (((i15 >>> 1) % 2) + 87) {
            case 87:
                Test.iFld *= i14;
                if (b1) continue;
                break;
            case 88:
                Test.instanceCount *= i15;
                if (b1) {
                    i15 = (int)-10L;
                    if (b1) {
                        i15 = (int)3453163247021311006L;
                        Test.iArrFld[i14 - 1] += (int)f;
                        Test.instanceCount ^= Test.instanceCount;
                    } else {
                        Test.instanceCount *= (long)f;
                    }
                }
                break;
            }
        }
        vMeth_check_sum += s + i14 + i15 + Float.floatToIntBits(f) + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i1=1, i2=-12, i16=-245, i17=-240, i18=52532, i19=63, i20=-20765, i21=-7, i22=10, i23=-10, i24=-185;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -9093001833709776702L);

        switch (((((int)(dFld + 59074)) >>> 1) % 10) + 98) {
        case 98:
            fFld *= ((i++) + ((i++) >> Long.reverseBytes(Test.instanceCount)));
            break;
        case 99:
            for (i1 = 7; i1 < 226; i1++) {
                short s2=11287;
                if (bFld) {
                    i2 &= (int)Test.instanceCount;
                }
                vMeth(s2);
                for (i16 = i1; i16 < 115; ++i16) {
                    for (i18 = 1; i18 < 1; ++i18) {
                        Test.iFld += i18;
                        Test.instanceCount >>>= 2053846237L;
                    }
                    Test.iFld >>>= (int)-3826858444L;
                }
                for (i20 = 3; i20 < 115; i20++) {
                    Test.iArrFld[i1] = i18;
                    switch (((i1 % 10) * 5) + 39) {
                    case 82:
                        i21 = i19;
                        break;
                    case 52:
                        i21 += i16;
                        break;
                    case 75:
                        i19 -= i2;
                        byFld += (byte)i20;
                        break;
                    case 63:
                        lArr1[i20 + 1] -= 2;
                        lArr1[i20 - 1] = Test.instanceCount;
                        break;
                    case 87:
                        Test.instanceCount |= 9;
                        for (i22 = 2; 1 < i22; i22 -= 3) {
                            Test.iFld = i22;
                            Test.instanceCount += (41 + (i22 * i22));
                            switch ((i1 % 8) + 28) {
                            case 28:
                                i19 += (((i22 * i18) + Test.instanceCount) - Test.iFld);
                                Test.instanceCount = 237;
                                Test.iFld += (((i22 * i23) + Test.instanceCount) - i21);
                                break;
                            case 29:
                                i19 += (int)dFld;
                                i2 -= (int)-7539312298613711017L;
                                break;
                            case 30:
                            case 31:
                                byFld = (byte)Test.instanceCount;
                                break;
                            case 32:
                                fFld -= (float)0.95678;
                                break;
                            case 33:
                                i17 *= i23;
                                break;
                            case 34:
                                i21 += 11;
                            case 35:
                                Test.iArrFld[i1 + 1] = i19;
                                break;
                            }
                        }
                    case 79:
                        i2 += (((i20 * i2) + i21) - Test.iFld);
                        break;
                    case 56:
                        try {
                            i19 = (-882519586 / Test.iArrFld[i1]);
                            Test.iArrFld[i1 + 1] = (i24 % i1);
                            i24 = (-65 % i16);
                        } catch (ArithmeticException a_e) {}
                    case 58:
                        Test.instanceCount -= i2;
                    case 44:
                        Test.instanceCount *= (long)fFld;
                    case 83:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    default:
                        Test.iArrFld[i1] += (int)1.105734;
                    }
                }
            }
        case 100:
            i2 >>= i;
            break;
        case 101:
            dFld += -2708758586L;
            break;
        case 102:
            Test.sArrFld[(i >>> 1) % N] >>= (short)i18;
            break;
        case 103:
            Test.iArrFld[(i16 >>> 1) % N] += i18;
            break;
        case 104:
            Test.iFld += i20;
            break;
        case 105:
            Test.iArrFld[(i17 >>> 1) % N] <<= 201;
            break;
        case 106:
            Test.iArrFld = FuzzerUtils.int1array(N, (int)-32099);
        case 107:
            i19 = i22;
            break;
        default:
            i *= (int)dFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
