package tests.javafuzzer1219;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:41:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=861L;
    public static float fFld=-55.755F;
    public long lArrFld[]=new long[N];
    public static volatile byte byArrFld[]=new byte[N];
    public static long lArrFld1[]=new long[N];
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)127);
        FuzzerUtils.init(Test.lArrFld1, 7843L);
        FuzzerUtils.init(Test.dArrFld, -72.7801);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l2, int i7) {

        int i8=-3, i9=-17185, i10=-31, i11=-2, i12=0, i13=239, i14=-7577, iArr2[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -192);
        FuzzerUtils.init(fArr, -77.1013F);

        for (i8 = 228; i8 > 1; --i8) {
            for (i10 = 1; 7 > i10; ++i10) {
                i12 = 2;
                do {
                    i7 += (int)4083L;
                    iArr2[i12 + 1] = (int)Test.instanceCount;
                    if (i12 != 0) {
                    }
                    Test.fFld /= (float)-84.29733;
                    fArr[i8 + 1] = i11;
                } while (--i12 > 0);
            }
            i9 = i12;
            Test.dArrFld[i8][i8 - 1] += i9;
            Test.fFld *= i8;
        }
        for (i13 = 12; 200 > i13; i13 += 2) {
            i14 >>>= 7;
            Test.instanceCount += i13;
        }
        Test.dArrFld[(i8 >>> 1) % N][(-3 >>> 1) % N] -= i14;
        long meth_res = l2 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l1) {

        int i15=8414, i16=15316, i17=14, i18=4, i19=4, i20=157, iArr3[]=new int[N], iArr4[]=new int[N];
        byte by=-47;
        double d=102.35268;

        FuzzerUtils.init(iArr3, 2);
        FuzzerUtils.init(iArr4, 4);

        iMeth1(l1, i15);
        l1 += i15;
        i15 += i15;
        i16 = 1;
        do {
            Test.instanceCount += (i16 | (long)Test.fFld);
        } while (++i16 < 153);
        i17 = 1;
        do {
            i15 = i15;
            iArr3[i17] -= (int)l1;
        } while (++i17 < 331);
        i15 >>= by;
        i18 = 1;
        do {
            i15 += (i18 * Test.fFld);
        } while (++i18 < 213);
        for (i19 = 14; 314 > i19; ++i19) {
            i15 = i20;
            iArr4[i19] -= i17;
            d -= i20;
        }
        vMeth_check_sum += l1 + i15 + i16 + i17 + by + i18 + i19 + i20 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(iArr4);
    }

    public static int iMeth(boolean b, float f1, long l) {

        int i6=-234, i21=-105, i22=-5871, i23=12, i24=7, iArr1[]=new int[N];
        long l5=8018807157866916486L;
        double d1=-105.90278;

        FuzzerUtils.init(iArr1, -40027);

        iArr1[(i6 >>> 1) % N] = (++Test.byArrFld[(i6 >>> 1) % N]);
        Test.lArrFld1[(i6 >>> 1) % N] *= (++iArr1[(i6 >>> 1) % N]);
        vMeth(l);
        i6 = -14024;
        for (i21 = 3; 218 > i21; ++i21) {
            i22 -= (int)l;
            if (true) {
                for (l5 = 1; l5 < 7; l5++) {
                    b = true;
                    i23 *= i21;
                    i24 = 2;
                    while (--i24 > 0) {
                        if (b) break;
                        try {
                            iArr1[i21] = (iArr1[i21] / iArr1[(int)(l5 - 1)]);
                            iArr1[(int)(l5)] = (i23 / -59815);
                            i23 = (52637 % i22);
                        } catch (ArithmeticException a_e) {}
                        if (i21 != 0) {
                        }
                        if (i21 != 0) {
                        }
                    }
                }
            } else if (b) {
                d1 -= -114;
            } else {
                Test.instanceCount = (long)12.886F;
            }
        }
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f1) + l + i6 + i21 + i22 + l5 + i23 + i24 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=35668, i1=55, i2=23003, i3=-104, i4=12, i5=233, i25=3, iArr[]=new int[N];
        float f=124.948F;
        double d2=118.73292;

        FuzzerUtils.init(iArr, -12610);

        for (i = 13; i < 396; ++i) {
            lArrFld[i + 1] += (long)(f--);
            switch (((i % 2) * 5) + 96) {
            case 102:
                for (i2 = 1; i2 < 66; i2++) {
                    for (i4 = 1; i4 < 2; ++i4) {
                        boolean b1=false;
                        byte by1=-63;
                        if ((++Test.instanceCount) >= ((iArr[i4] + (i4 * Test.instanceCount)) - i4)) continue;
                        i5 = i2;
                        i5 += (i4 * i1);
                        i1 >>= iMeth(b1, Test.fFld, 24L);
                        iArr[i - 1] >>= 5;
                        lArrFld[i] = i1;
                        i1 += i1;
                        i5 -= i25;
                        switch (((i4 % 3) * 5) + 95) {
                        case 102:
                            if (b1) {
                                d2 += i25;
                                Test.instanceCount = (long)-2.433F;
                                iArr[i2] >>>= i5;
                                iArr[i] += (int)Test.instanceCount;
                            } else if (false) {
                                Test.fFld -= f;
                                by1 += (byte)(i4 | by1);
                                i3 += (-35842 + (i4 * i4));
                                i1 *= i3;
                            } else if (b1) {
                                i5 += (i4 ^ Test.instanceCount);
                                f += -25774L;
                            } else {
                                iArr[i] += (int)Test.instanceCount;
                                by1 = (byte)i;
                                iArr[i + 1] += (int)Test.fFld;
                                i25 = -48;
                            }
                            break;
                        case 108:
                            if (true) continue;
                        case 101:
                            i1 = i25;
                            break;
                        }
                    }
                }
                break;
            case 104:
                i3 += (i | i);
            default:
                i5 += (i | i1);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
