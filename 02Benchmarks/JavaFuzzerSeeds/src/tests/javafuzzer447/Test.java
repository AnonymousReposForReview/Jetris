package tests.javafuzzer447;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:02:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=46L;
    public short sFld=-17406;
    public static volatile float fFld=54.919F;
    public static long lFld=-215L;
    public static volatile double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 115.120380);
        FuzzerUtils.init(Test.lArrFld, -45421L);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3, double d1) {

        int i4=-143, i5=-12, i6=-8, i7=-13, i8=-147, i9=25747, i10=-57400, iArr1[]=new int[N];
        boolean b1=true;
        long l1=-1L;
        float f=-2.941F, fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, -53066);
        FuzzerUtils.init(fArr, 1.563F);

        for (i4 = 16; i4 < 322; i4++) {
            switch (((i4 >>> 1) % 2) + 70) {
            case 70:
                switch (((i6 >>> 1) % 8) + 12) {
                case 12:
                    for (i7 = i4; i7 < 5; ++i7) {
                        iArr1[i7 + 1] -= i3;
                        for (i9 = 1; 1 > i9; i9++) {
                            i3 += i9;
                            i6 |= i10;
                        }
                    }
                    switch (((i4 % 2) * 5) + 84) {
                    case 85:
                        i3 = i4;
                        if (b1) break;
                        fArr[i4 - 1][i4] -= i5;
                        break;
                    case 88:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    }
                    i10 += i4;
                    l1 = (long)d1;
                    break;
                case 13:
                    f -= f;
                case 14:
                    i2 -= -22;
                case 15:
                    if (false) continue;
                    break;
                case 16:
                    i3 += (int)f;
                    break;
                case 17:
                    i3 = -48;
                    break;
                case 18:
                    iArr1[i4 + 1] %= -21228;
                case 19:
                    f += (((i4 * Test.instanceCount) + f) - i7);
                    break;
                }
            case 71:
                i2 = -40622;
            default:
                i3 <<= -4;
            }
        }
        vMeth1_check_sum += i2 + i3 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + (b1 ? 1 : 0) +
            l1 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i1, boolean b) {

        double d2=-45.3189;
        int i11=6, i12=-9, i13=4, i14=36171, i15=9, i16=182, i17=-16842, iArr2[]=new int[N];
        short s=-9549, sArr[]=new short[N];
        byte by=-33, byArr[]=new byte[N];
        long l2=174L;
        boolean bArr[]=new boolean[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(sArr, (short)2767);
        FuzzerUtils.init(iArr2, -40146);
        FuzzerUtils.init(byArr, (byte)71);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr1, 1.512F);

        vMeth1(i1, -7, d2);
        d2 = i1;
        i1 = i1;
        Test.fFld -= i1;
        try {
            for (i11 = 9; i11 < 147; i11 += 3) {
                switch ((i11 * 5) + 31) {
                case 183:
                    Test.lArrFld[i11] = i11;
                case 307:
                    for (i13 = 2; i13 < 33; i13++) {
                        Test.instanceCount += s;
                    }
                    break;
                case 72:
                    sArr[i11] <<= (short)-13;
                    iArr2[i11 + 1] = i11;
                    break;
                case 247:
                    byArr[i11 + 1] = (byte)i14;
                    if (false) break;
                    i12 = i11;
                    break;
                case 38:
                    by %= (byte)(i1 | 1);
                    break;
                case 120:
                    by += (byte)(i11 * i11);
                    break;
                case 203:
                case 168:
                    iArr2[i11 + 1] -= (int)d2;
                    break;
                case 36:
                    Test.instanceCount += i15;
                    break;
                case 90:
                    Test.instanceCount += (((i11 * Test.fFld) + i12) - i11);
                    break;
                case 32:
                case 357:
                    Test.instanceCount += (i11 * i11);
                case 128:
                    i1 = (int)Test.instanceCount;
                    break;
                case 174:
                    i14 = i11;
                    break;
                case 352:
                    i12 = i15;
                    break;
                case 235:
                    bArr[i11] = b;
                case 55:
                    Test.instanceCount += Test.instanceCount;
                    break;
                case 302:
                    Test.instanceCount += (((i11 * Test.instanceCount) + i1) - i12);
                    break;
                case 34:
                    Test.fFld += i15;
                case 209:
                    i15 -= (int)Test.instanceCount;
                    break;
                case 341:
                    s >>>= (short)Test.instanceCount;
                case 240:
                    iArr2[i11 + 1] = -13;
                case 330:
                    iArr2[i11] -= (int)Test.instanceCount;
                    break;
                case 284:
                case 244:
                    i14 += (i11 * i11);
                    break;
                case 276:
                    i14 = (int)l2;
                case 239:
                    i1 = (int)Test.fFld;
                    break;
                case 199:
                    by = (byte)i15;
                    break;
                case 129:
                    l2 -= i13;
                    break;
                case 184:
                    i1 += (int)d2;
                    break;
                case 299:
                    Test.fFld += (i11 - by);
                    break;
                case 306:
                    try {
                        i12 = (1270073820 % i14);
                        i12 = (i13 / 19);
                        i15 = (-157 / iArr2[i11 - 1]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 317:
                    d2 = -95.50F;
                    break;
                case 370:
                    Test.lArrFld[i11 + 1] += 12;
                case 272:
                    try {
                        i16 = (i12 / -207256559);
                        i16 = (-13 / iArr2[i11 - 1]);
                        i12 = (-406777204 % i16);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 73:
                    iArr2[i11 - 1] *= (int)Test.instanceCount;
                    break;
                case 252:
                    i16 += (i11 * i11);
                    break;
                case 100:
                    Test.lArrFld[i11 + 1] = 19079;
                    break;
                case 319:
                    i14 = i11;
                case 334:
                    iArr2[i11 - 1] >>= i11;
                    break;
                case 326:
                    if (b) break;
                case 220:
                    i12 ^= i14;
                    break;
                case 189:
                    i1 = (int)Test.instanceCount;
                    break;
                case 344:
                    l2 += i1;
                    break;
                case 323:
                    i14 *= (int)Test.instanceCount;
                case 282:
                    b = b;
                    break;
                case 228:
                    i16 = i11;
                    break;
                case 245:
                    by -= (byte)54;
                    break;
                case 208:
                    i14 = (int)Test.instanceCount;
                    break;
                case 186:
                    by &= (byte)1397765363541730291L;
                case 46:
                    try {
                        i14 = (-1127813800 % iArr2[i11 + 1]);
                        i16 = (i11 / 24376);
                        i14 = (-9185 % i1);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 314:
                    if (b) continue;
                    break;
                case 237:
                    i15 += i16;
                case 140:
                    Test.fFld -= s;
                    break;
                case 264:
                    i15 = (int)d2;
                    break;
                case 132:
                    i16 -= (int)Test.instanceCount;
                    break;
                case 337:
                    l2 += (((i11 * Test.instanceCount) + i13) - i16);
                    break;
                case 278:
                    l2 = Test.lFld;
                    break;
                case 182:
                    try {
                        i17 = (465032100 / i11);
                        iArr2[i11 + 1] = (188 % i11);
                        i12 = (i13 / i17);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 296:
                    i17 &= i11;
                    break;
                case 176:
                    d2 = i16;
                case 57:
                    i12 *= i12;
                    break;
                case 91:
                    if (false) break;
                    break;
                case 241:
                    i1 = i11;
                    break;
                case 88:
                    Test.instanceCount += l2;
                    break;
                case 156:
                    i17 = -241;
                    break;
                case 60:
                    iArr2[i11] += (int)8L;
                    break;
                case 107:
                    i17 -= (int)Test.fFld;
                case 207:
                    i1 = -147;
                    break;
                case 191:
                    i14 += (i11 - Test.lFld);
                    break;
                default:
                    Test.lArrFld = FuzzerUtils.long1array(N, (long)2L);
                }
            }
        }
        catch (NullPointerException exc1) {
            iArr2[(i16 >>> 1) % N] *= i15;
        }
        finally {
            i17 -= i1;
        }
        vMeth_check_sum += i1 + (b ? 1 : 0) + Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + s + by + i15 + l2 +
            i16 + i17 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static double dMeth(long l) {

        int i18=118, i19=-4, i20=5, i21=-6, i22=-33169, i23=-38585, i24=246, iArr3[]=new int[N];
        byte by1=-97;
        short s1=4216;

        FuzzerUtils.init(iArr3, -23);

        vMeth(i18, true);
        for (i19 = 8; i19 < 147; i19++) {
            for (i21 = 1; i21 < 11; i21++) {
                iArr3[i19 + 1] *= i19;
                i22 |= i22;
                Test.fFld += i21;
                for (i23 = 1; i23 < 2; ++i23) {
                    Test.instanceCount = i20;
                }
                i22 *= i24;
                i18 = (int)7979L;
                Test.fFld += (i21 - i23);
                i18 += (196 + (i21 * i21));
                by1 += (byte)33;
            }
            i20 *= s1;
            i24 = i20;
        }
        long meth_res = l + i18 + i19 + i20 + i21 + i22 + i23 + i24 + by1 + s1 + FuzzerUtils.checkSum(iArr3);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=0.60889;
        int i25=-28336, i26=13, i27=4, i28=-5, i29=118, i30=-14, i31=33020, i32=56519, iArr[]=new int[N];
        short sArr1[]=new short[N];

        FuzzerUtils.init(iArr, -13);
        FuzzerUtils.init(sArr1, (short)-11314);

        for (int i : iArr) {
            Test.dArrFld[(i >>> 1) % N] -= Test.lArrFld[(i >>> 1) % N];
            d = (((i * sFld) * (Test.instanceCount + i)) - dMeth(Test.instanceCount));
            for (i25 = 1; i25 < 63; i25++) {
                i26 *= i26;
                i += i;
                for (i27 = 1; i27 < 2; i27++) {
                    switch (((i27 % 1) * 5) + 79) {
                    case 82:
                        i *= i28;
                        break;
                    }
                    sArr1[i25 - 1] += (short)Test.lFld;
                }
                i = -4;
                Test.lArrFld[i25] |= i26;
                i &= i26;
                i = i25;
            }
            for (i29 = 1; 63 > i29; i29++) {
                for (i31 = 1; i31 < 2; ++i31) {
                    Test.instanceCount = i26;
                    i30 -= (int)Test.fFld;
                    i28 += (i31 + i26);
                    i26 += (((i31 * Test.fFld) + i) - Test.instanceCount);
                    i28 += i31;
                    i30 += i31;
                }
                Test.fFld = Test.fFld;
                iArr[i29] += i31;
                i26 >>= i29;
                i26 += (i29 + i27);
                Test.instanceCount -= Test.instanceCount;
                i *= (int)d;
                Test.instanceCount *= Test.lFld;
                sArr1[i29 + 1] -= (short)i28;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
