package tests.javafuzzer2857;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:33:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-31774L;
    public static int iFld=-94;
    public static int iFld1=-165;
    public static float fFld=41.588F;
    public static byte byFld=-84;
    public double dFld=2.108386;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -68L);
        FuzzerUtils.init(Test.fArrFld, 68.294F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1() {

        int i8=-63666, i9=-2, i10=7, i11=10, i12=-20064, iArr2[][]=new int[N][N];
        double d1=0.102377;
        float f=117.78F;
        byte by=118;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 4371760698703310886L);
        FuzzerUtils.init(iArr2, 12);

        for (i8 = 4; i8 < 235; i8++) {
            i10 = 1;
            do {
                Test.instanceCount *= (long)d1;
                lArr[i8 + 1] *= Test.instanceCount;
                i9 = (int)Test.instanceCount;
                for (i11 = i10; i11 < 1; i11++) {
                    boolean b2=false;
                    i9 += (i11 * i11);
                    if (b2) break;
                    iArr2[i8 - 1][i10] = (int)Test.instanceCount;
                    Test.iFld >>= (int)Test.instanceCount;
                    f /= (i11 | 1);
                }
                by += (byte)i10;
                d1 += 13;
                if (false) break;
                i9 += (i10 * i10);
            } while (++i10 < 7);
        }
        long meth_res = i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + Float.floatToIntBits(f) + by +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b1, int i6, int i7) {

        int i13=7938, i14=-6, i15=234, i16=4, iArr1[][]=new int[N][N];
        short s=-17428;
        byte by1=-78;

        FuzzerUtils.init(iArr1, 1);

        iArr1[(i7 >>> 1) % N][(i6 >>> 1) % N] = (int)lMeth1();
        for (i13 = 3; 362 > i13; i13++) {
            Test.instanceCount += (i13 ^ s);
            Test.lArrFld[i13 + 1] <<= Test.instanceCount;
            by1 = (byte)Test.iFld;
            for (i15 = 1; i15 < 5; i15++) {
                double d2=16.97846;
                i6 &= i6;
                i14 += (((i15 * Test.instanceCount) + Test.instanceCount) - i16);
                i6 -= i6;
                i16 >>>= Test.iFld1;
                Test.fArrFld[i15 + 1] = i15;
                b1 = true;
                d2 = i13;
                Test.fArrFld[i15 - 1] *= Test.instanceCount;
                iArr1[i15 + 1][i15] += i15;
            }
        }
        vMeth_check_sum += (b1 ? 1 : 0) + i6 + i7 + i13 + i14 + s + by1 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth() {

        double d=-101.94205;
        int i4=-59620, i5=0, i17=49514, i18=2, i19=12, i20=7, i21=-22481, iArr[]=new int[N];
        boolean b3=true;
        short s1=-69;

        FuzzerUtils.init(iArr, -19);

        d = ((Test.instanceCount--) - iArr[(-48215 >>> 1) % N]);
        i4 = 1;
        do {
            Test.instanceCount >>= ((++Test.iFld) * ((Test.iFld * 6279) * Math.abs(i5)));
        } while (++i4 < 192);
        vMeth(b3, -9, 13);
        iArr[(Test.iFld1 >>> 1) % N] *= (int)Test.fFld;
        d = s1;
        for (i17 = 1; i17 < 165; ++i17) {
            i19 = 1;
            while (++i19 < 10) {
                Test.byFld >>>= (byte)i17;
                Test.fFld -= Test.iFld1;
            }
            Test.iFld *= Test.iFld1;
        }
        i18 = i18;
        i20 = 1;
        while (++i20 < 224) {
            i21 = -20498;
            iArr[i20 - 1] = i19;
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + i5 + (b3 ? 1 : 0) + s1 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=13, i2=18266, i3=-4, i22=12648, i23=243, i24=3;
        boolean b=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.56731);

        for (i = 1; i < 223; i++) {
            for (i2 = 4; i2 < 113; i2++) {
                i3 -= i;
                switch ((i2 % 8) + 73) {
                case 73:
                    b = ((i1 + (i2 * -60311L)) <= i1);
                    break;
                case 74:
                    Test.instanceCount += Math.abs((i3 * i3) * iArrFld[i + 1]);
                    i1 += (((i2 * Test.instanceCount) + i3) - i);
                    i1 <<= i2;
                    Test.instanceCount = (long)(lMeth() * -2.263F);
                    break;
                case 75:
                    for (i22 = i2; i22 < 2; i22++) {
                        Test.instanceCount = i;
                        iArrFld[i] = i1;
                        i3 += (((i22 * i23) + Test.instanceCount) - i3);
                        Test.iFld1 = Test.iFld1;
                    }
                    iArrFld = iArrFld;
                    break;
                case 76:
                    Test.instanceCount = Test.instanceCount;
                    i24 = 1;
                    while (++i24 < 2) {
                        dFld -= Test.byFld;
                        dArr[i2 + 1] -= Test.iFld;
                        dArr[i2] *= Test.iFld;
                        i1 = i24;
                        i3 ^= (int)Test.instanceCount;
                        i3 = i1;
                        Test.iFld1 = Test.iFld;
                        Test.iFld *= -47;
                        b = b;
                    }
                    break;
                case 77:
                    iArrFld[i] -= (int)120.472F;
                    i23 += Test.byFld;
                    i1 *= -47031;
                    break;
                case 78:
                    i23 += (i2 | Test.instanceCount);
                    break;
                case 79:
                    Test.lArrFld[i] = -204;
                case 80:
                    Test.iFld += (i2 | i);
                    break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
