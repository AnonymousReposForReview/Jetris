package tests.javafuzzer1577;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:13:09 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-7L;
    public static byte byFld=-59;
    public static int iFld=245;
    public static float fFld=-18.909F;
    public int iFld1=-217;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2485891408L);
        FuzzerUtils.init(Test.fArrFld, 0.177F);
        FuzzerUtils.init(Test.iArrFld, -9);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i4) {

        double d=50.109912;
        boolean b=true;
        int i5=-253, i6=58761, i7=54197;
        long l2=107L;
        byte by=-106;

        i4 = (int)d;
        l -= Test.instanceCount;
        for (long l1 : Test.lArrFld) {
            i4 = i4;
            if (b) {
                i4 >>= (int)l;
            }
            for (i5 = 4; i5 > 1; i5--) {
                for (l2 = 1; 2 > l2; ++l2) {
                    Test.lArrFld[i5] <<= i5;
                    if (b) {
                        switch ((i5 % 1) + 29) {
                        case 29:
                            d += i7;
                            d = i7;
                            i7 += (int)l;
                            break;
                        default:
                            Test.fArrFld[(int)(l2 - 1)] = Test.instanceCount;
                        }
                    } else if (b) {
                        by -= (byte)d;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i4 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i5 + i6 + l2 + i7 + by;
    }

    public static void vMeth() {

        int i8=-1;

        vMeth1(-45448L, i8);
        vMeth_check_sum += i8;
    }

    public static long lMeth() {

        int i2=-42591, i3=-47582, i9=60767, i10=12, i11=41014, i12=14, i13=-11, i14=2;

        for (i2 = 310; i2 > 7; i2 -= 2) {
            vMeth();
            for (i9 = i2; i9 < 10; i9 += 3) {
                i3 += (((i9 * i9) + i9) - Test.byFld);
                for (i11 = 1; i11 < 1; i11++) {
                    i10 = i3;
                }
                switch (((i9 % 7) * 5) + 47) {
                case 72:
                    if (Test.iFld != 0) {
                    }
                    break;
                case 79:
                    for (i13 = 1; i13 > 1; i13--) {
                        i3 = (int)Test.instanceCount;
                        Test.iArrFld[i13 - 1] = 20153;
                        Test.lArrFld[i13] += i12;
                    }
                    break;
                case 61:
                    i10 -= (int)-3354764787L;
                    i14 = (int)-2257362264L;
                    break;
                case 71:
                    i14 += i10;
                    break;
                case 80:
                    Test.fFld -= 52728;
                    break;
                case 62:
                    Test.lArrFld[i2 - 1] -= Test.instanceCount;
                    break;
                case 58:
                    Test.iArrFld[i9] -= i10;
                    break;
                default:
                    Test.fFld += i9;
                }
            }
        }
        long meth_res = i2 + i3 + i9 + i10 + i11 + i12 + i13 + i14;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=-66, i15=-13, i16=-12441, i17=0, i18=-29749, i19=-2, i20=-4, i21=-25352;
        double d1=-99.83192;
        boolean b1=true;
        short s=2476;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-99);

        for (i = 270; 2 < i; i--) {
            Test.instanceCount >>= (((Test.instanceCount + 14364) + lMeth()) >> 71);
            Test.instanceCount *= i1;
            Test.instanceCount += (((i * i) + i1) - i1);
            try {
                i1 = (i1 / iFld1);
                Test.iArrFld[i - 1] = (i1 % 104);
                i1 = (23481 / i1);
            } catch (ArithmeticException a_e) {}
            for (i15 = 4; i15 < 94; ++i15) {
                i1 &= -4;
                Test.instanceCount = Test.byFld;
            }
            d1 -= i1;
            Test.lArrFld[i + 1] ^= i;
            iFld1 += (i * Test.fFld);
            Test.instanceCount = -16586;
            d1 = i15;
        }
        switch ((((i15 >>> 1) % 9) * 5) + 33) {
        case 58:
            for (i17 = 168; i17 > 2; --i17) {
                Test.fArrFld[i17] = i17;
                Test.iFld += (int)Test.instanceCount;
                for (i19 = i17; i19 < 151; i19++) {
                    iFld1 += (i19 * i19);
                }
                Test.instanceCount *= -17600;
                if (b1) {
                    i21 = 1;
                    while ((i21 += 3) < 151) {
                        i16 = i;
                        i16 += (23744 + (i21 * i21));
                        Test.iArrFld[i21 + 1] += i1;
                        iFld1 += (i21 ^ iFld1);
                    }
                } else {
                    i18 = (int)Test.instanceCount;
                }
                Test.iArrFld[i17 - 1] = Test.iFld;
            }
            break;
        case 46:
            i16 &= i20;
            s = (short)i18;
            break;
        case 35:
            Test.iFld += 1;
            break;
        case 52:
            Test.lArrFld[(-200 >>> 1) % N] <<= Test.instanceCount;
            break;
        case 76:
            Test.lArrFld[(Test.iFld >>> 1) % N] += i21;
            break;
        case 57:
            Test.iFld *= i15;
            break;
        case 43:
            byArr[(i17 >>> 1) % N] -= (byte)-14080;
            break;
        case 61:
            Test.instanceCount |= 1;
            break;
        case 49:
            Test.fFld *= i21;
        default:
            i20 *= (int)Test.fFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
