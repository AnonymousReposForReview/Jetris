package tests.javafuzzer3117;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 02:04:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-56L;
    public static byte byFld=11;
    public static short sFld=-31894;
    public int iFld=25;
    public static volatile float fFld=123.584F;
    public static double dFld=58.93469;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3971231059164215067L);
        FuzzerUtils.init(Test.dArrFld, -55.87674);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, boolean b1, int i5) {

        double d1=-2.90302;
        int i6=156, i7=11, i8=-9, i9=51451, iArr[][]=new int[N][N];
        short s=-4350;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1287690938774011183L);
        FuzzerUtils.init(iArr, 27180);

        i4 *= (int)4L;
        d1 = 1;
        while (++d1 < 176) {
            for (i6 = 1; i6 < 9; ++i6) {
                lArr[(int)(d1 + 1)] = Test.instanceCount;
                for (i8 = 1; i8 < 2; i8++) {
                    if (b1) {
                        i4 -= (int)Test.instanceCount;
                    } else if (false) {
                        i9 += i4;
                        i9 <<= (int)Test.instanceCount;
                        Test.instanceCount >>= 37381;
                        iArr[i8 - 1][(int)(d1 - 1)] = i9;
                    } else if (b1) {
                        i4 = i7;
                    } else {
                    }
                }
                Test.instanceCount <<= i5;
            }
            i5 += (int)1.340F;
        }
        i4 *= s;
        vMeth1_check_sum += i4 + (b1 ? 1 : 0) + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + s +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(double d, int i3, float f) {

        boolean b2=false;
        int i10=5, i11=-9, i12=-186, i13=4473, i14=-26009, iArr1[]=new int[N];
        float f1=91.438F, fArr[]=new float[N];
        short s1=13847;

        FuzzerUtils.init(iArr1, 35208);
        FuzzerUtils.init(fArr, 124.241F);

        vMeth1(i3, b2, i3);
        for (i10 = 6; i10 < 148; ++i10) {
            f1 += Test.instanceCount;
            switch ((((i11 >>> 1) % 4) * 5) + 88) {
            case 103:
                for (i12 = 1; i12 < 11; i12++) {
                    i11 = 53995;
                    i13 = i13;
                    Test.instanceCount = 18008;
                }
                break;
            case 90:
                i11 -= (int)Test.instanceCount;
                Test.instanceCount = s1;
                break;
            case 106:
                i11 += (i10 * i10);
                iArr1[i10 + 1] = i3;
                break;
            case 91:
                fArr[i10] -= 5;
            default:
                Test.byFld = (byte)i11;
                i14 = (int)f;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i3 + Float.floatToIntBits(f) + (b2 ? 1 : 0) + i10 + i11 +
            Float.floatToIntBits(f1) + i12 + i13 + s1 + i14 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(boolean b, long l, int i) {

        int i1=7, i2=-55365, i15=13, i16=125, i17=12, iArr2[]=new int[N];
        double d2=23.78480;
        float f2=-8.740F, fArr1[]=new float[N];
        byte byArr[]=new byte[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr2, 56362);
        FuzzerUtils.init(byArr, (byte)-112);
        FuzzerUtils.init(fArr1, 1.961F);
        FuzzerUtils.init(lArr1, 230767907L);

        for (i1 = 5; 377 > i1; i1++) {
            i2 = (int)(Test.instanceCount * (Math.abs(i2) - (-3424817200L * iMeth(d2, 13, 16.231F))));
            for (i15 = 1; 5 > i15; ++i15) {
                switch ((i15 % 7) + 50) {
                case 50:
                    iArr2[i15 + 1] = (int)49.114801;
                    i16 <<= i2;
                    break;
                case 51:
                    i17 = 1;
                    while (++i17 < 2) {
                        iArr2[i15 + 1] >>= i2;
                        Test.byFld += (byte)i;
                        byArr[i15 - 1] = (byte)i16;
                        i16 <<= (int)Test.instanceCount;
                        iArr2[i1] -= (int)f2;
                        i16 -= (int)f2;
                        fArr1[i15 + 1] += 6558120530866423907L;
                        try {
                            i2 = (i16 % 177);
                            i = (35313 / i);
                            i2 = (-58899 % i);
                        } catch (ArithmeticException a_e) {}
                    }
                case 52:
                    i2 -= Test.sFld;
                case 53:
                    lArr1[i1 + 1][i15] <<= 9281;
                case 54:
                    i16 = (int)50941L;
                    break;
                case 55:
                    i16 = -9;
                    break;
                case 56:
                    iArr2[(i16 >>> 1) % N] += i15;
                default:
                    i2 = 17857;
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + l + i + i1 + i2 + Double.doubleToLongBits(d2) + i15 + i16 + i17 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        boolean b3=false;
        int i18=-9, i19=-28806, i20=-160, i21=-6379, i22=1, i23=-5, i24=-3, i25=-229, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, -26);

        vMeth(b3, 8021094134441250763L, iFld);
        Test.lArrFld[(iFld >>> 1) % N] >>= Test.instanceCount;
        iArr3[(iFld >>> 1) % N] *= -194;
        for (i18 = 1; i18 < 127; ++i18) {
            Test.sFld += (short)i18;
            Test.fFld = 57;
            iFld += i18;
        }
        for (i20 = 4; i20 < 326; i20++) {
            i19 -= i19;
            switch (((i20 % 3) * 5) + 122) {
            case 124:
                switch ((i20 % 10) + 50) {
                case 50:
                    b3 = b3;
                    Test.dFld = Test.instanceCount;
                    iFld -= 29;
                    break;
                case 51:
                    for (i22 = 3; 78 > i22; ++i22) {
                        Test.byFld *= (byte)i20;
                        Test.instanceCount = -13L;
                        iArr3 = iArr3;
                        i19 *= i22;
                        Test.dFld = i20;
                        for (i24 = i22; i24 < 2; i24++) {
                            Test.instanceCount += (i24 + i25);
                            Test.instanceCount = (long)Test.dFld;
                            b3 = b3;
                            i21 -= (int)Test.fFld;
                            i21 = i19;
                            Test.fFld += (i24 * i24);
                            Test.instanceCount -= Test.instanceCount;
                            Test.dArrFld[i24 - 1] -= i22;
                            if (b3) continue;
                        }
                    }
                    break;
                case 52:
                    Test.instanceCount -= iFld;
                    break;
                case 53:
                    Test.instanceCount += iFld;
                    break;
                case 54:
                    Test.fFld *= 0.380F;
                    break;
                case 55:
                    Test.fFld *= 28;
                case 56:
                    Test.instanceCount += Test.instanceCount;
                    break;
                case 57:
                    i19 = (int)Test.instanceCount;
                case 58:
                    try {
                        i19 = (i22 / iArr3[i20 + 1]);
                        iArr3[i20 + 1] = (i19 % iFld);
                        i19 = (100 % i22);
                    } catch (ArithmeticException a_e) {}
                case 59:
                    Test.instanceCount += i20;
                    break;
                default:
                    Test.instanceCount = -10;
                }
            case 129:
                i21 += (int)Test.instanceCount;
                break;
            case 137:
                Test.fFld += (i20 * i20);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
