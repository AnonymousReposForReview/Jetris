package tests.javafuzzer2254;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:00:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1333788323L;
    public long lFld=-2342020294L;
    public static byte byFld=-64;
    public static volatile float fFld=-1.800F;
    public double dFld=0.2327;
    public int iArrFld[]=new int[N];

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l) {

        int i6=-5, i7=12, i8=-104, i9=11, i10=223, iArr1[]=new int[N];
        short s=32553;

        FuzzerUtils.init(iArr1, 51461);

        for (i6 = 1; 219 > i6; ++i6) {
            i7 *= i6;
            for (i8 = i6; i8 < 7; ++i8) {
                iArr1[i6] = i7;
                i7 += (i8 * i8);
                if (i6 != 0) {
                }
                i10 = 1;
                do {
                    i9 += s;
                    i7 += (((i10 * i9) + i10) - i7);
                    i9 += i8;
                    i7 += -62726;
                    i7 += (0 + (i10 * i10));
                    iArr1[i6] = i10;
                    i9 = (int)l;
                } while (--i10 > 0);
                i9 = (int)-40.993F;
            }
        }
        long meth_res = l + i6 + i7 + i8 + i9 + i10 + s + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        float f=-35.1002F;
        int i4=252, i5=-10, i11=-15, i12=-127, i13=53, i14=0, i15=-248, iArr[]=new int[N];
        short s1=-15926;
        byte by=91;

        FuzzerUtils.init(iArr, -137);

        Test.instanceCount = (long)((f++) + (iArr[(i2 >>> 1) % N] - (i3++)));
        for (i4 = 5; 200 > i4; i4++) {
            i1 *= ((iMeth(Test.instanceCount) - i5) + s1);
            for (i11 = i4; 8 > i11; i11++) {
                Test.instanceCount &= i3;
                i13 = s1;
                Test.instanceCount -= i2;
                Test.instanceCount -= by;
                Test.instanceCount += (0L + (i11 * i11));
                i3 += i11;
                switch ((((i1 >>> 1) % 2) * 5) + 113) {
                case 119:
                    Test.instanceCount += i11;
                    break;
                case 114:
                    for (i14 = 1; i14 < 1; ++i14) {
                        s1 += (short)(((i14 * i13) + i13) - i13);
                        i5 -= i4;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + s1 + i11 + i12 + i13 + by + i14 + i15 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i) {

        double d=1.10205;

        i += (int)d;
        vMeth(-8, i, i);
        vSmallMeth_check_sum += i + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        int i16=15356, i17=-10, i18=11, i19=106, i20=-8, i21=103, i22=8, i23=46856, i24=12;
        short s2=-31544, sArr[][]=new short[N][N];
        float f2=93.958F;
        long lArr[]=new long[N];
        double dArr[]=new double[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, -6606771579040898111L);
        FuzzerUtils.init(dArr, 2.130567);
        FuzzerUtils.init(sArr, (short)-18495);
        FuzzerUtils.init(byArr, (byte)-50);

        for (int smallinvoc=0; smallinvoc<110; smallinvoc++) vSmallMeth(i16);
        for (i17 = 19; i17 < 328; i17++) {
            for (i19 = 4; i19 < 81; ++i19) {
                i18 += i19;
                switch (((35 >>> 1) % 2) + 113) {
                case 113:
                    for (i21 = 1; i21 < 2; i21++) {
                        boolean b=true;
                        float f1=-122.720F;
                        i20 = (int)Test.instanceCount;
                        i18 >>= -27049;
                        switch (i19 + 21) {
                        case 21:
                            Test.instanceCount += i21;
                            break;
                        case 22:
                            i16 <<= i18;
                            i20 += (i21 + i18);
                            i22 = i22;
                            break;
                        case 23:
                            iArrFld[i17] = 8451;
                            i16 += i21;
                            iArrFld[i21 + 1] >>= (int)lFld;
                            iArrFld[i17] = (int)Test.instanceCount;
                            break;
                        case 24:
                            Test.instanceCount = i20;
                            break;
                        case 25:
                            i20 -= (int)lFld;
                            break;
                        case 26:
                            b = b;
                            i18 += (i21 ^ i21);
                            break;
                        case 27:
                            f1 *= f1;
                            break;
                        case 28:
                            if (b) break;
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 29:
                            b = true;
                            i22 -= Test.byFld;
                            break;
                        case 30:
                            iArrFld[(i18 >>> 1) % N] >>= i21;
                            Test.fFld = Test.fFld;
                            b = b;
                            i23 += (i21 | i17);
                        case 31:
                            i18 = i22;
                            break;
                        case 32:
                        case 33:
                            lFld = 153;
                            break;
                        case 34:
                            i18 *= i18;
                        case 35:
                            iArrFld[i17 - 1] -= -23801;
                            break;
                        case 36:
                            i23 += (int)f1;
                        case 37:
                            s2 ^= (short)-6873603692156628500L;
                            break;
                        case 38:
                            Test.byFld = (byte)-1795901287L;
                            break;
                        case 39:
                            i16 = i19;
                        case 40:
                            i16 = i23;
                            break;
                        case 41:
                            iArrFld[i19 + 1] *= 0;
                            break;
                        case 42:
                            dFld -= i24;
                        case 43:
                            lFld = i16;
                        case 44:
                            i23 += (int)lFld;
                            break;
                        case 45:
                            lFld = i23;
                        case 46:
                            i18 = s2;
                            break;
                        case 47:
                            f1 = 52787;
                        case 48:
                            lArr[i17 - 1] -= i21;
                            break;
                        case 49:
                            i24 = i21;
                            break;
                        case 50:
                            i20 += 0;
                            break;
                        case 51:
                        case 52:
                            i24 = (int)lFld;
                        case 53:
                            try {
                                i18 = (iArrFld[i17 - 1] / -57);
                                i23 = (i19 / 15139);
                                i24 = (i16 % i23);
                            } catch (ArithmeticException a_e) {}
                        case 54:
                            i24 += i16;
                            break;
                        case 55:
                            i16 += (int)(-3672039728L + (i21 * i21));
                            break;
                        case 56:
                            dArr[i21] -= i21;
                            break;
                        case 57:
                            i16 = i18;
                            break;
                        case 58:
                            i23 -= i20;
                            break;
                        case 59:
                            i24 += (int)dFld;
                            break;
                        case 60:
                            Test.instanceCount -= Test.instanceCount;
                            break;
                        case 61:
                            i23 += (38431 + (i21 * i21));
                            break;
                        case 62:
                            lArr = lArr;
                            break;
                        case 63:
                            i18 -= (int)55.350F;
                            break;
                        case 64:
                            i23 = (int)Test.instanceCount;
                            break;
                        case 65:
                            if (b) continue;
                            break;
                        case 66:
                            iArrFld[i21] += i19;
                            break;
                        case 67:
                            i16 += (i21 * i23);
                            break;
                        case 68:
                            sArr[i19 + 1][(i21 >>> 1) % N] = Test.byFld;
                            break;
                        case 69:
                            byArr[i19] <<= (byte)lFld;
                            break;
                        case 70:
                            lFld = (long)dFld;
                            break;
                        case 71:
                            lFld += (((i21 * Test.instanceCount) + i20) - i21);
                            break;
                        case 72:
                            Test.instanceCount += (i21 * i17);
                            break;
                        case 73:
                            f2 += i21;
                            break;
                        case 74:
                            dFld += Test.fFld;
                            break;
                        case 75:
                            iArrFld = FuzzerUtils.int1array(N, (int)3);
                            break;
                        case 76:
                            i20 -= (int)Test.instanceCount;
                            break;
                        case 77:
                            lArr[i17 - 1] = i16;
                            break;
                        case 78:
                            lFld >>= lFld;
                            break;
                        case 79:
                            try {
                                i23 = (i21 / -15);
                                iArrFld[i21 + 1] = (i20 % i23);
                                i18 = (-38 % i21);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 80:
                            i16 -= i17;
                            break;
                        case 81:
                            Test.fFld += i21;
                            break;
                        case 82:
                            i24 = i23;
                            break;
                        case 83:
                            i18 -= (int)-101L;
                            break;
                        case 84:
                            i22 &= 239;
                            break;
                        case 85:
                            i24 = i18;
                        case 86:
                            f2 = i22;
                        case 87:
                            iArrFld[i19] += i21;
                        case 88:
                            s2 ^= (short)i16;
                            break;
                        case 89:
                        case 90:
                            i18 += i20;
                            break;
                        default:
                            i18 += (i21 * i21);
                        }
                    }
                    break;
                case 114:
                    iArrFld[i19] = 212;
                    break;
                default:
                    lFld = i23;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
