package tests.javafuzzer3289;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:39:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=877L;
    public volatile double dFld=-38.62149;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1037);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-34542, i4=-12, i6=7, i7=15545, i8=215, i9=43620, iArr[]=new int[N];
        double d=-75.59578;
        boolean b=true, b1=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(fArr, 33.473F);

        for (i3 = 8; i3 < 249; ++i3) {
            int i5=-40443;
            i5 *= (int)d;
            for (i6 = 1; i6 < 7; i6++) {
                Test.instanceCount *= i5;
                i4 = i3;
                iArr[i3 + 1] = 1692;
                fArr[i3 - 1] = 61L;
                if (false) continue;
            }
        }
        i7 = i4;
        iArr[(i6 >>> 1) % N] -= (int)Test.instanceCount;
        for (i8 = 256; i8 > 2; --i8) {
            fArr[i8] = (float)d;
            b = b1;
            i9 += (-57631 + (i8 * i8));
            iArr[i8 - 1] -= (int)Test.instanceCount;
        }
        vMeth1_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + (b ? 1 : 0) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(float f1) {

        int i10=-54308, i11=-9, i12=3;
        double d1=0.94933;
        long l=-1975913973L;
        boolean b2=false;

        vMeth1();
        i10 = i10;
        i10 = i10;
        i10 = (int)Test.instanceCount;
        if (b2) {
            Test.instanceCount = (long)d1;
            for (i11 = 3; i11 < 202; ++i11) {
                if (false) {
                    i10 -= 0;
                    i12 = i11;
                    vMeth_check_sum += Float.floatToIntBits(f1) + i10 + Double.doubleToLongBits(d1) + i11 + i12 + l +
                        (b2 ? 1 : 0);
                    return;
                } else {
                    switch ((i11 % 1) + 51) {
                    case 51:
                        i12 <<= i10;
                        l = 1;
                        do {
                            d1 += l;
                            b2 = true;
                        } while (++l < 8);
                        break;
                    default:
                        f1 *= i11;
                    }
                }
            }
        } else if (b2) {
            i12 = i11;
        } else if (b2) {
            i12 -= i11;
        } else {
            i12 *= (int)f1;
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i10 + Double.doubleToLongBits(d1) + i11 + i12 + l + (b2 ? 1 : 0);
    }

    public static int iMeth(float f, int i2) {

        int i13=14, i14=6, i15=-165, i16=-6, i17=-51, i18=-216;
        double d2=-95.40231;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 127.327F);

        vMeth(f);
        for (i13 = 157; 3 < i13; i13--) {
            switch ((i13 % 1) + 27) {
            case 27:
                Test.instanceCount += i13;
                f += i2;
                for (i15 = 1; i15 < 10; ++i15) {
                    d2 *= Test.instanceCount;
                }
                break;
            default:
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-143);
                fArr1[i13 - 1] = Test.instanceCount;
                Test.instanceCount -= i2;
            }
            for (i17 = 1; 10 > i17; i17 += 2) {
                f *= f;
                Test.iArrFld[i13] += i14;
                Test.iArrFld[i17 + 1] &= i13;
                i18 %= (int)-1.926F;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d2) + i17 + i18
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-22804, i1=-107;
        float f2=-2.367F;
        byte by=-9;

        for (i = 15; i < 298; ++i) {
            Test.instanceCount += Math.min((int)((++i1) * (Test.instanceCount * i)), -iMeth(f2, i1));
            dFld -= 9;
            i1 += (i * i);
        }
        Test.instanceCount <<= Test.instanceCount;
        f2 += Test.instanceCount;
        by = (byte)Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
