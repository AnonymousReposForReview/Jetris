package tests.javafuzzer1739;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:44:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3641462474406900638L;
    public static volatile short sFld=15528;
    public static boolean bFld=true;
    public static double dFld=-78.28089;
    public static long lFld=6L;
    public static int iFld=9;
    public static volatile byte byFld=122;
    public static float fFld=-39.597F;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 8L);
        FuzzerUtils.init(Test.fArrFld, -2.224F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        int i7=-148, i8=35, i9=43627, i10=13, i11=-9, i12=14, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 5);

        i6 += (int)Test.instanceCount;
        if (Test.bFld) {
            for (i7 = 21; 380 > i7; i7 += 3) {
                i8 = (int)Test.instanceCount;
                Test.instanceCount = i5;
                iArr1[i7 - 1] *= i8;
                i5 = i6;
                i8 *= i5;
                Test.instanceCount ^= i6;
                for (i9 = 1; i9 < 13; i9++) {
                    Test.instanceCount -= Test.sFld;
                }
                Test.instanceCount >>>= Test.instanceCount;
                for (i11 = 1; i11 < 13; i11++) {
                    iArr1 = iArr1;
                    i5 *= 1618;
                }
            }
        } else if (Test.bFld) {
            i8 *= (int)2668219083L;
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i2, int i3, int i4) {

        float f=-2.302F;
        int i13=-241, i14=-214, i15=25749, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -96);

        i3 *= (int)((iArr[(i2 >>> 1) % N] + (i3 - f)) + (-Math.abs(i2)));
        Test.instanceCount = (--Test.sFld);
        vMeth2(i4, i2);
        for (i13 = 181; 9 < i13; --i13) {
            Test.instanceCount = (long)f;
            iArr[i13] = (int)f;
            if (i3 != 0) {
                vMeth1_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f) + i13 + i14 + i15 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            i15 = 1;
            do {
                i2 -= (int)-230L;
                f = i14;
                i3 = i13;
                i3 += (((i15 * Test.instanceCount) + i3) - i2);
            } while (++i15 < 9);
            i2 = (int)Test.instanceCount;
            i3 = i14;
            i4 = i2;
        }
        vMeth1_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f) + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, long l1, int i1) {

        int i16=1, i17=1, i18=-19, i19=247, i20=-35776;

        vMeth1(i1, 12, i);
        for (long l2 : Test.lArrFld) {
            i16 = 1;
            while (++i16 < 4) {
                for (i17 = 1; i17 < 1; ++i17) {
                    Test.dFld = i1;
                }
                i *= i16;
                if (Test.bFld) break;
                Test.lFld >>= i16;
                Test.fArrFld[i16] = l2;
                i18 = (int)Test.lFld;
                i1 -= i1;
                for (i19 = 1; i19 > i16; i19--) {
                    l1 -= (long)-106.955F;
                    i1 += i19;
                    i18 -= -180;
                }
            }
        }
        vMeth_check_sum += i + l1 + i1 + i16 + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        float f1=0.494F;
        int i21=18, i22=-8, i23=3, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(iArr2, 65300);

        for (long l : lArr) {
            vMeth(Test.iFld, Test.instanceCount, Test.iFld);
            Test.iFld <<= -5;
            Test.dFld -= Test.instanceCount;
            switch (((Test.iFld >>> 1) % 1) + 99) {
            case 99:
                if (Test.bFld) continue;
                for (f1 = 3; 63 > f1; ++f1) {
                    i21 -= Test.sFld;
                    iArr2[(int)(f1)] += 30;
                    Test.iFld >>>= -32205;
                    for (i22 = 1; i22 < 2; i22 += 2) {
                        i21 -= (int)-111L;
                        i21 >>= Test.byFld;
                        i23 *= Test.byFld;
                        switch ((i22 % 6) + 13) {
                        case 13:
                            Test.fFld += i22;
                        case 14:
                            Test.iFld += (i22 | i22);
                            iArr2[(int)(f1 - 1)] <<= i23;
                            Test.fFld = i22;
                            Test.iFld >>>= i21;
                        case 15:
                            lArr[i22] -= (long)Test.fFld;
                            i23 += i22;
                            Test.fFld -= Test.instanceCount;
                            break;
                        case 16:
                            i23 |= i21;
                            i21 += (i22 * i23);
                            i23 += (int)l;
                        case 17:
                            Test.instanceCount *= (long)Test.dFld;
                            Test.fArrFld[i22 + 1] -= i21;
                            i23 *= Test.iFld;
                            break;
                        case 18:
                            Test.iFld = i23;
                            break;
                        default:
                            Test.fFld -= i23;
                        }
                    }
                }
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
