package tests.javafuzzer1117;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:43:06 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-26627L;
    public double dFld=0.22540;
    public static short sFld=-32331;
    public static float fFld=-71.366F;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 229);
        FuzzerUtils.init(Test.lArrFld, -254408768L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d) {

        int i13=14, i14=150, i15=-38108, i16=-56658, i17=-10291, i18=242;
        byte by=-29;
        boolean b1=true;

        for (i13 = 4; i13 < 248; i13++) {
            for (i15 = 1; i15 < 7; i15 += 3) {
                i14 <<= -236;
                by = (byte)Test.sFld;
                if (b1) break;
                for (i17 = 1; i17 < 4; i17++) {
                    if (b1) {
                        if (i15 != 0) {
                            vMeth2_check_sum += Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + by + (b1 ? 1 : 0)
                                + i17 + i18;
                            return;
                        }
                        Test.fFld += Test.instanceCount;
                        d /= (i17 | 1);
                        i16 *= -66;
                    } else if (b1) {
                        i16 >>= (int)Test.instanceCount;
                        i16 += (int)Test.fFld;
                        i18 += (i17 - Test.sFld);
                    } else {
                        i18 -= (int)-1.126792;
                    }
                }
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + i13 + i14 + i15 + i16 + by + (b1 ? 1 : 0) + i17 + i18;
    }

    public static void vMeth1(float f1, int i12, boolean b) {

        double d1=-2.3799;
        int i19=-233, i20=5, i21=-652, i22=-82, i23=-149;
        byte by1=16;

        vMeth2(d1);
        i19 = 1;
        while (++i19 < 294) {
            for (i20 = 1; i20 < 6; i20++) {
                i21 += (i20 - i12);
                i12 += (((i20 * i19) + i12) - by1);
                switch (((i20 % 7) * 5) + 24) {
                case 33:
                    i12 += (146 + (i20 * i20));
                    i21 += i19;
                    i21 += (((i20 * i21) + Test.instanceCount) - by1);
                    Test.iArrFld[i19] -= (int)Test.instanceCount;
                    break;
                case 44:
                    i21 = i19;
                    i21 += (i20 * i20);
                    for (i22 = 2; i22 > 1; i22 -= 2) {
                        Test.instanceCount += (i22 ^ (long)f1);
                        i23 ^= i20;
                    }
                    break;
                case 59:
                    Test.instanceCount -= -1387237416L;
                    break;
                case 26:
                    Test.instanceCount *= i23;
                    break;
                case 57:
                    if (b) continue;
                    break;
                case 51:
                    i23 = by1;
                case 32:
                    Test.lArrFld = Test.lArrFld;
                    break;
                default:
                    i12 >>= i21;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i12 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i19 + i20 +
            i21 + by1 + i22 + i23;
    }

    public static void vMeth(int i8, float f) {

        short s=3290;
        int i9=32260, i10=41627, i11=-83, i24=-14;
        boolean b2=false;
        byte by2=-94;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 0.385F);

        s ^= (short)(4 + (++i8));
        i9 -= (int)(23418 + (Math.abs(57120) - (Test.instanceCount = i8)));
        for (i10 = 8; i10 < 137; i10 += 2) {
            vMeth1(f, -21515, b2);
            fArr1[i10] *= i10;
        }
        Test.lArrFld[(i8 >>> 1) % N] = i8;
        i24 = 352;
        while (--i24 > 0) {
            i8 = i9;
            switch (((i24 >>> 1) % 2) + 78) {
            case 78:
                i11 += (i24 + i8);
                break;
            case 79:
                i9 += (((i24 * i11) + by2) - i8);
                i8 += (i24 + i10);
                Test.fFld += i9;
                break;
            default:
                i9 *= (int)-46L;
                i8 += (int)f;
            }
        }
        vMeth_check_sum += i8 + Float.floatToIntBits(f) + s + i9 + i10 + i11 + (b2 ? 1 : 0) + i24 + by2 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=14, i3=126, i4=-168, i5=2541, i6=17355, i7=12, i25=110, i26=-181, i27=-188, i28=86, i29=-28783,
            i30=18, iArr[]=new int[N];
        float f2=2.932F, fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr, -222);
        FuzzerUtils.init(fArr, 17.733F);

        for (i = 8; 160 > i; ++i) {
            i3 = 1;
            while (++i3 < 165) {
                Test.instanceCount = (i - -80);
                i1 = (++i1);
                for (i4 = 1; i4 < 1; i4++) {
                    i1 -= (Short.reverseBytes((short)(-fArr[i + 1][i3 + 1])) % ((++i1) | 1));
                }
                i5 = 3501;
                for (i6 = 1; i < i6; i6 -= 2) {
                    dFld = i;
                    vMeth(i4, Test.fFld);
                    Test.fFld *= i4;
                }
                i5 = i;
                for (i25 = 1; i25 < 1; ++i25) {
                    i5 = -21823;
                    i5 *= Test.sFld;
                    byArrFld[i25 - 1][i3] += (byte)i3;
                    i5 += 156;
                }
                Test.instanceCount = (long)dFld;
            }
            i1 = i1;
            for (f2 = 165; f2 > 9; f2--) {
                for (i28 = 1; i28 < 2; ++i28) {
                    Test.iArrFld[i] = i5;
                    i5 /= (int)(i29 | 1);
                    i27 += i28;
                    Test.fFld += (i28 * i28);
                    Test.lArrFld[i] = (long)dFld;
                    i30 -= i5;
                }
                Test.instanceCount <<= i30;
                i29 = (int)Test.instanceCount;
                Test.bFld = false;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
