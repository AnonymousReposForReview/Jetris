package tests.javafuzzer3374;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:52:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=16870L;
    public volatile boolean bFld=false;
    public static short sFld=-5797;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1) {


        Test.instanceCount -= 0;
        vMeth2_check_sum += i1;
    }

    public static void vMeth1() {

        int i=233, i2=-2, i3=6, i4=-5, i5=50723, i6=-192, i7=221;
        float f=102.828F;
        short s=4827;

        i = (-i);
        i -= (i++);
        vMeth2(i);
        for (i2 = 1; i2 < 360; i2++) {
            for (i4 = 1; 5 > i4; i4++) {
                f = i3;
                s = (short)i2;
                i5 >>>= i3;
                Test.instanceCount = i5;
                i3 += (i4 - Test.instanceCount);
                for (i6 = i4; i6 < 2; ++i6) {
                    boolean b1=false;
                    if (b1) continue;
                    f = i7;
                    i7 = (int)f;
                }
                Test.instanceCount += (((i4 * Test.instanceCount) + f) - Test.instanceCount);
            }
        }
        vMeth1_check_sum += i + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + s + i6 + i7;
    }

    public static void vMeth(boolean b) {

        double d=-92.98665;
        int i8=-183, i9=-945, i10=9, i11=9532, i12=-7;
        float f1=0.498F, f2=19.340F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 0L);

        vMeth1();
        for (d = 5; d < 192; d++) {
            for (f1 = 1; f1 < 9; ++f1) {
                i10 = 1;
                while (++i10 < 2) {
                    i8 <<= i8;
                    Test.instanceCount = i8;
                    f2 += (i10 - i8);
                    lArr[(int)(d)] = Test.instanceCount;
                    i9 = i9;
                }
                i11 = 2;
                do {
                    i8 >>= -176;
                    f2 %= (Test.instanceCount | 1);
                    i9 += (6 + (i11 * i11));
                    b = b;
                    i12 >>= -10009;
                } while ((i11 -= 3) > 0);
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d) + i8 + Float.floatToIntBits(f1) + i9 + i10 +
            Float.floatToIntBits(f2) + i11 + i12 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i13=-241, i14=-1, i15=-13316, i16=-1, i17=-234, i18=49, i19=12, i20=6461, iArr[]=new int[N];
        float f3=-2.670F;
        double d1=98.123479, dArr[]=new double[N];
        long l=-2796198121L;

        FuzzerUtils.init(dArr, 35.92184);
        FuzzerUtils.init(iArr, -1);

        vMeth(bFld);
        Test.instanceCount &= 13L;
        for (i13 = 4; i13 < 255; i13++) {
            i14 += (int)Test.instanceCount;
            for (i15 = i13; i15 < 100; ++i15) {
                switch (((i15 >>> 1) % 3) + 23) {
                case 23:
                    for (i17 = i15; 1 > i17; i17++) {
                        f3 /= ((long)(d1) | 1);
                        dArr[(i13 >>> 1) % N] += Test.sFld;
                        l = 1363413282L;
                        f3 = i17;
                        i14 = i16;
                        f3 = i15;
                        i14 += i17;
                        i14 <<= i14;
                        switch (((i13 % 1) * 5) + 42) {
                        case 45:
                            i14 = (int)-8930014665227675620L;
                            i16 >>>= i16;
                            break;
                        }
                    }
                    for (i19 = 1; i19 < 1; ++i19) {
                        i18 = (int)f3;
                        dArr[i13 + 1] -= 0.677F;
                        lArrFld[i13] *= 5L;
                        l <<= i14;
                        l = i15;
                        i18 += i19;
                        d1 += i20;
                        i20 += (i19 * i14);
                        if (bFld) continue;
                        i20 &= -49;
                    }
                    i18 += i13;
                    break;
                case 24:
                    i20 = 48174;
                    break;
                case 25:
                default:
                    iArr[i15] *= (int)4618853015848131101L;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
