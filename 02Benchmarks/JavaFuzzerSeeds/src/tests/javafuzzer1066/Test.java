package tests.javafuzzer1066;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:58:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5305718086883487347L;
    public static short sFld=2353;
    public static boolean bFld=false;
    public static int iFld=-4;
    public static volatile int iFld1=-5;
    public static float fFld=-81.303F;
    public double dFld=-24.87356;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 223632594L);
        FuzzerUtils.init(Test.iArrFld, 80);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i4=-62859, i5=-11942, i6=12, i7=4133, i8=-9, i9=-2, i10=39651, i11=8, iArr1[]=new int[N];
        byte by=-31;

        FuzzerUtils.init(iArr1, 20);

        for (i4 = 2; i4 < 323; ++i4) {
            i5 >>= i4;
        }
        for (i6 = 13; i6 < 283; ++i6) {
            boolean b=true;
            if (b) break;
        }
        iArr1[(i4 >>> 1) % N] = Test.sFld;
        i7 -= i4;
        i5 = 0;
        for (i8 = 13; 266 > i8; i8++) {
            i9 += i8;
            by += (byte)(i8 * i5);
        }
        for (i10 = 10; i10 < 231; ++i10) {
            switch ((i10 % 3) + 10) {
            case 10:
                iArr1[i10] >>= i11;
                break;
            case 11:
                i9 -= Test.sFld;
            case 12:
                Test.bFld = Test.bFld;
                break;
            default:
                Test.lArrFld = Test.lArrFld;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + by + i10 + i11 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {

        int i13=-14, i14=148, i15=-4, i16=14, i17=52186;
        byte by1=-54;
        double d=94.127584, d1=-89.105107;
        float f1=109.413F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.513F);

        fMeth();
        for (i13 = 7; i13 < 143; ++i13) {
            i14 &= i13;
            fArr[i13] += by1;
            if (Test.bFld) {
                Test.instanceCount += (((i13 * i14) + Test.instanceCount) - i14);
            } else {
                for (i15 = i13; 12 > i15; ++i15) {
                    Test.lArrFld[i13] |= by1;
                    switch (((i15 % 7) * 5) + 66) {
                    case 86:
                        i16 += i14;
                        for (d = 1; d < 1; d++) {
                            Test.iArrFld[i15 + 1] = -45;
                            i14 += (int)d;
                            fArr[(int)(d + 1)] *= Test.instanceCount;
                            try {
                                i16 = (i13 / 7284);
                                i16 = (Test.iArrFld[(int)(d - 1)] / 67);
                                i14 = (i17 / i15);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 99:
                        Test.instanceCount -= Test.instanceCount;
                    case 67:
                        d1 = i13;
                        break;
                    case 79:
                        f1 = Test.instanceCount;
                    case 98:
                        i16 += 36082;
                        break;
                    case 84:
                        i17 ^= i14;
                        break;
                    case 80:
                        by1 += (byte)(((i15 * i15) + Test.instanceCount) - f1);
                        break;
                    default:
                        by1 += (byte)(i15 ^ i16);
                    }
                }
            }
        }
        long meth_res = i13 + i14 + by1 + i15 + i16 + Double.doubleToLongBits(d) + i17 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l) {

        long l1=1543564217L, l2=88L;
        float f=2.845F, fArr1[]=new float[N];
        int i18=-39982, i19=-56505, i20=-116, i21=-6, i22=254, i23=46012, i24=-14;
        byte by2=-6, byArr[]=new byte[N];
        double d2=36.5143, dArr[]=new double[N];

        FuzzerUtils.init(byArr, (byte)-40);
        FuzzerUtils.init(dArr, -61.53975);
        FuzzerUtils.init(fArr1, 1.490F);

        l1 = 1;
        while (++l1 < 330) {
            f -= ((l++) - iMeth());
            i18 = Test.iFld;
            i18 += (int)(((l1 * by2) + Test.iFld) - Test.instanceCount);
            i18 &= i18;
        }
        for (i19 = 1; i19 < 149; ++i19) {
            i21 = 1;
            while (++i21 < 11) {
                l += i21;
                Test.iFld = by2;
                for (i22 = 1; 1 > i22; i22++) {
                    byArr[i21 - 1] = (byte)f;
                    switch (i19 * 5) {
                    case 266:
                        Test.bFld = Test.bFld;
                        break;
                    case 71:
                        i18 += (((i22 * l1) + i18) - i20);
                        Test.instanceCount += Test.sFld;
                        break;
                    case 14:
                        Test.iArrFld[i21 - 1] <<= i22;
                    case 242:
                        if (Test.bFld) continue;
                        break;
                    case 312:
                        f += (i22 * i22);
                        break;
                    case 30:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    case 272:
                        Test.iFld = i21;
                        break;
                    case 87:
                        Test.instanceCount += (i22 | i20);
                        break;
                    case 44:
                        dArr[i22] += f;
                    case 17:
                        Test.instanceCount = i19;
                        break;
                    case 169:
                        l += (((i22 * f) + i21) - f);
                    case 118:
                        i18 &= i18;
                        break;
                    case 330:
                        Test.lArrFld[i19 - 1] = i21;
                        break;
                    case 335:
                        d2 -= i19;
                        break;
                    case 82:
                    case 309:
                        Test.iFld *= Test.iFld;
                        break;
                    case 175:
                        Test.lArrFld[i19 - 1] -= by2;
                        break;
                    case 79:
                        Test.instanceCount += (((i22 * Test.iFld) + f) - Test.iFld);
                        break;
                    case 221:
                        i23 *= i19;
                        break;
                    case 256:
                    case 12:
                        Test.iArrFld[i19 + 1] = (int)d2;
                        break;
                    case 166:
                        Test.bFld = false;
                    case 229:
                        try {
                            i23 = (i21 / 33016);
                            i18 = (15823 / i20);
                            i18 = (Test.iArrFld[i21] % Test.iArrFld[i19]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 158:
                        Test.iFld = i20;
                    case 350:
                        i23 >>= i22;
                        break;
                    case 259:
                        d2 *= by2;
                    case 206:
                        i23 -= i21;
                        break;
                    case 276:
                        try {
                            i20 = (i19 / Test.iFld);
                            i23 = (i23 / 573992863);
                            i20 = (194 % i23);
                        } catch (ArithmeticException a_e) {}
                    case 125:
                        l += (-228 + (i22 * i22));
                        break;
                    case 180:
                        i23 = (int)2.779F;
                    case 153:
                        Test.bFld = Test.bFld;
                        break;
                    case 162:
                        Test.iArrFld[i19 + 1] <<= by2;
                        break;
                    case 296:
                        d2 += i23;
                    case 331:
                        l += (i22 * i22);
                        break;
                    case 68:
                        try {
                            i18 = (Test.iFld % i22);
                            i20 = (3366 / i21);
                            Test.iFld = (i23 % 45368);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 194:
                        fArr1[i19 + 1] += i24;
                        break;
                    case 128:
                        if (Test.bFld) continue;
                        break;
                    case 19:
                        if (i24 != 0) {
                            vMeth_check_sum += l + l1 + Float.floatToIntBits(f) + i18 + by2 + i19 + i20 + i21 + i22 +
                                i23 + Double.doubleToLongBits(d2) + i24 + l2 + FuzzerUtils.checkSum(byArr) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                            return;
                        }
                        break;
                    case 336:
                        i20 = 94;
                    case 48:
                        d2 -= l1;
                        break;
                    case 115:
                        i23 += i24;
                        break;
                    case 32:
                        i20 = i18;
                        break;
                    case 329:
                        i18 += (((i22 * Test.iFld) + f) - i24);
                        break;
                    case 218:
                        Test.iFld = (int)d2;
                        break;
                    case 344:
                        i20 += i22;
                        break;
                    case 182:
                        i24 += (((i22 * i19) + f) - i23);
                        break;
                    case 188:
                        i20 *= (int)l;
                    case 69:
                        dArr[i19] += 9;
                        break;
                    case 253:
                        i18 *= (int)-5L;
                        break;
                    case 133:
                        i18 *= (int)l;
                        break;
                    case 155:
                    case 310:
                        Test.instanceCount -= i21;
                        break;
                    case 280:
                        Test.iArrFld[i21] -= (int)f;
                    case 332:
                        d2 -= i21;
                    case 293:
                        f += i22;
                        break;
                    case 177:
                        f += (i22 + i24);
                    case 95:
                        i20 *= i22;
                        break;
                    case 35:
                        i24 -= 0;
                        break;
                    case 99:
                        l2 = -49489;
                    case 91:
                        Test.instanceCount += i22;
                        break;
                    case 235:
                        i23 += (int)l;
                        break;
                    case 337:
                        Test.iFld ^= i24;
                        break;
                    case 122:
                        fArr1[(i19 >>> 1) % N] = i21;
                        break;
                    case 84:
                        Test.iArrFld[i21 - 1] -= i18;
                        break;
                    case 230:
                        d2 *= -128;
                    case 225:
                        l *= Test.iFld1;
                        break;
                    case 251:
                        Test.iArrFld[i19 - 1] *= i24;
                        break;
                    case 320:
                        i20 += (i22 - l2);
                        break;
                    case 47:
                        l = -568822255011628949L;
                        break;
                    case 297:
                        i20 = (int)l2;
                        break;
                    default:
                        Test.iFld += Test.iFld;
                    }
                }
            }
        }
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f) + i18 + by2 + i19 + i20 + i21 + i22 + i23 +
            Double.doubleToLongBits(d2) + i24 + l2 + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=-5, i2=-14936, i3=-209, i25=28454, i26=4, i27=178, i28=125, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -49318);

        Test.instanceCount -= (i--);
        for (i1 = 380; i1 > 19; i1 -= 2) {
            i3 = iArr[i1 - 1][i1 - 1];
            Test.instanceCount += (((i1 * i2) + i2) - i);
            i3 = i3;
            vMeth(-1856431070070850675L);
            Test.fFld += i1;
            for (i25 = 4; i25 < 139; i25++) {
                fArrFld[i25 - 1] = 49413;
                for (i27 = 1; i27 < 2; ++i27) {
                    i28 = i26;
                    switch ((i25 % 1) + 3) {
                    case 3:
                        Test.sFld -= (short)i26;
                        iArr[i25][i1 - 1] = (int)-7430112872516683882L;
                        fArrFld[i27 - 1] = 7;
                    }
                    Test.iFld %= (int)(Test.instanceCount | 1);
                    i26 = -4;
                    switch (((i1 % 4) * 5) + 126) {
                    case 127:
                        Test.iArrFld[i27] += i26;
                        break;
                    case 129:
                        i += 37;
                        i3 += (((i27 * Test.instanceCount) + Test.fFld) - Test.fFld);
                        switch (((i1 % 2) * 5) + 1) {
                        case 11:
                        case 8:
                            i -= (int)dFld;
                            Test.iFld = i26;
                            break;
                        }
                        Test.instanceCount *= 26606;
                        break;
                    case 138:
                        i3 += (int)(-6271L + (i27 * i27));
                    case 135:
                        if (Test.bFld) {
                            iArr[i27 - 1][i27 + 1] *= (int)Test.fFld;
                            fArrFld[i1 - 1] /= 51.719F;
                        } else {
                            i26 += 18157;
                        }
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
