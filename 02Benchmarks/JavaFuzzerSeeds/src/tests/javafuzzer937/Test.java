package tests.javafuzzer937;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:50:22 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7929L;
    public int iFld=-21650;
    public static volatile boolean bFld=false;
    public static volatile double dFld=-27.373;
    public static int iFld1=-105;
    public static float fFld=2.947F;
    public static short sFld=-15685;

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=2149, i4=5823, i5=-182, iArr[]=new int[N];
        float f=46.530F, f1=2.36F, f2=12.394F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -34513L);
        FuzzerUtils.init(iArr, 10);

        i3 = 1;
        do {
            for (f = 1; f < 6; ++f) {
                switch ((((i4 >>> 1) % 6) * 5) + 26) {
                case 56:
                    i4 += 2;
                    for (f1 = i3; f1 < 2; f1++) {
                        i5 = 67;
                        lArr[(int)(f1 - 1)] = i4;
                        i4 -= -2;
                        f2 = i5;
                        f2 = i5;
                        Test.instanceCount += (long)f1;
                        if (Test.bFld) continue;
                        lArr[(int)(f1)] += i3;
                        Test.instanceCount -= (long)Test.dFld;
                        if (i5 != 0) {
                            vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + i5 +
                                Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                    }
                    break;
                case 40:
                    i4 += (int)f;
                    break;
                case 28:
                    i5 -= i4;
                case 34:
                    Test.instanceCount -= -4;
                    break;
                case 54:
                    iArr[i3 - 1] ^= i3;
                case 52:
                    i5 = 4617;
                    break;
                default:
                    i5 += (int)(f * f);
                }
            }
        } while (++i3 < 291);
        vMeth1_check_sum += i3 + Float.floatToIntBits(f) + i4 + Float.floatToIntBits(f1) + i5 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=-61651, i6=72, i7=-5, i8=-1, i9=-1, i10=-176, iArr1[]=new int[N];
        float f3=70.486F;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)8276);
        FuzzerUtils.init(iArr1, 237);

        Test.instanceCount += i2;
        vMeth1();
        i2 = (int)36.43211;
        i2 &= i2;
        Test.instanceCount -= Test.instanceCount;
        for (i6 = 7; i6 < 311; ++i6) {
            Test.iFld1 += (i6 | Test.instanceCount);
            Test.instanceCount += Test.iFld1;
            for (f3 = 1; f3 < 5; f3++) {
                for (i9 = 1; i9 < 2; ++i9) {
                    sArr[i6 - 1][i9] >>>= (short)i10;
                    i7 = (int)Test.dFld;
                }
                iArr1[(int)(f3 + 1)] += i6;
                i8 *= i7;
            }
            Test.fFld += 1201159159361594641L;
        }
        vMeth_check_sum += i2 + i6 + i7 + Float.floatToIntBits(f3) + i8 + i9 + i10 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static boolean bMeth() {

        long l=-123L;
        int i11=-6, i12=-129, i13=0, i14=12318, i15=-253, i16=10776, i17=-49641, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -33231);

        vMeth();
        l = 374;
        do {
            Test.dFld += i11;
            i12 += (int)(((l * i12) + i12) - Test.iFld1);
        } while (--l > 0);
        i11 = i12;
        for (i13 = 6; i13 < 328; i13++) {
            i12 = (int)1.185F;
            iArr2[(i14 >>> 1) % N] -= (int)Test.fFld;
            Test.fFld += (i13 * i13);
            i15 = 1;
            do {
                i14 /= (int)((long)(Test.fFld) | 1);
            } while (++i15 < 5);
        }
        for (i16 = 14; i16 < 227; i16++) {
            iArr2[i16] = i16;
            Test.iFld1 -= i13;
            Test.fFld += (((i16 * i16) + i11) - l);
        }
        long meth_res = l + i11 + i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=84, i1=26107, i18=96, i19=-62603, i20=-177, i21=9, i22=-38980, i23=14, i24=220, i25=0, i26=-224, i27=-13,
            iArr3[]=new int[N];
        byte by=60;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -90.75F);
        FuzzerUtils.init(iArr3, 83);

        fArr[(iFld >>> 1) % N] = 0.953F;
        for (i = 9; i < 374; i += 3) {
            bMeth();
            by += (byte)i;
            iArr3[i + 1] |= i;
            i1 += iFld;
            Test.dFld += -39662;
            Test.instanceCount = Test.iFld1;
            Test.instanceCount += -964;
            for (i18 = 3; 207 > i18; ++i18) {
                i19 = (int)Test.instanceCount;
                fArr[i18 + 1] -= Test.instanceCount;
                for (i20 = 2; i20 > 1; --i20) {
                    iArr3[i] += i;
                    Test.fFld *= Test.fFld;
                    iArr3[i18 - 1] = i1;
                    Test.iFld1 += (((i20 * i19) + Test.instanceCount) - i20);
                    Test.instanceCount += 120;
                }
                i1 = i;
                Test.bFld = true;
                iFld += (int)Test.instanceCount;
                fArr[i - 1] += i1;
                i19 += (-32661 + (i18 * i18));
            }
            Test.sFld ^= (short)-3L;
        }
        for (i22 = 2; i22 < 152; ++i22) {
            for (i24 = 4; 167 > i24; i24++) {
                for (i26 = 1; 2 > i26; ++i26) {
                    Test.instanceCount += i20;
                    iArr3[i22 - 1] = i1;
                    iArr3[i26 - 1] += 5;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
