package tests.javafuzzer364;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:50:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static volatile byte byFld=-116;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f2, int i4) {

        int i5=0, i6=-88, i7=211, i8=12238, i9=157, i10=-10;
        short s=32085;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 0.19464);

        for (i5 = 4; i5 < 351; i5++) {
            Test.byFld = (byte)8;
            for (i7 = 1; 5 > i7; i7++) {
                i6 = (int)f2;
                Test.byFld = (byte)i4;
                if (false) break;
                for (i9 = 1; i9 < 2; i9 += 2) {
                    dArr1[i7 + 1] += i7;
                    i4 = i4;
                    Test.byFld = (byte)i10;
                    switch (((i5 % 3) * 5) + 107) {
                    case 116:
                        f2 += i8;
                        i10 = -43;
                        f2 += 61131L;
                        i8 += (((i9 * s) + i6) - Test.instanceCount);
                        break;
                    case 113:
                        i10 -= i7;
                        break;
                    case 119:
                        Test.instanceCount = i8;
                    default:
                        i6 += i9;
                    }
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f2) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth1(int i3, float f1) {

        byte by=5;
        double d=0.65235, dArr[]=new double[N];
        int i11=-101, i12=63002, i13=85, i14=-5, i15=9;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, -74.110931);
        FuzzerUtils.init(lArr, -3254792840L);

        i3 = (int)(dArr[(i3 >>> 1) % N]--);
        lArr[(i3 >>> 1) % N] = (long)(((i3 + f1) + (-(i3 = by))) + d);
        vMeth2(f1, i3);
        i3 = (int)Test.instanceCount;
        i3 <<= -10;
        i3 |= i3;
        i11 = 230;
        while (--i11 > 0) {
            for (i12 = i11; i12 < 7; ++i12) {
                if (b) break;
                i13 = i11;
                by = (byte)i11;
                for (i14 = 1; i14 > 1; i14--) {
                    i15 %= (int)(i13 | 1);
                    i3 += 247;
                    by %= (byte)(Test.instanceCount | 1);
                }
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f1) + by + Double.doubleToLongBits(d) + i11 + i12 + i13 + (b ? 1
            : 0) + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {

        int i=8, i1=-6, i2=11, iArr[]=new int[N];
        float f=1.130F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 42496);
        FuzzerUtils.init(lArr1, 5007549403267116434L);

        switch (((i >>> 1) % 8) + 10) {
        case 10:
            i ^= ((i += i) - (-(i++)));
            f /= ((l = (long)((i++) + (f + -31))) | 1);
            break;
        case 11:
        case 12:
            i *= (int)((i--) - ((l * l) | (long)(f / (i | 1))));
            for (i1 = 158; i1 > 2; i1 -= 2) {
                i2 -= ((--iArr[i1]) - i);
                i = (i--);
                vMeth1(7, f);
                i -= i2;
                i += (i1 - i2);
                i = i2;
                f = i1;
            }
            i >>= i2;
            break;
        case 13:
            i2 *= (int)2051801637L;
            f *= i2;
        case 14:
            i *= i1;
            break;
        case 15:
            lArr1[(i >>> 1) % N] ^= i1;
            break;
        case 16:
            i2 = -9;
            break;
        case 17:
        default:
            iArr[(i1 >>> 1) % N] -= i2;
        }
        vMeth_check_sum += l + i + Float.floatToIntBits(f) + i1 + i2 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i16=11, i17=39761, i18=14, i19=34564, i20=-5, i21=13, i22=83, i23=103, iArr1[][]=new int[N][N];
        short s1=420;
        float f3=-87.136F;
        double dArr2[]=new double[N];

        FuzzerUtils.init(iArr1, -63423);
        FuzzerUtils.init(dArr2, -121.104587);

        vMeth(-2866435979L);
        i16 = 1;
        do {
            i17 += (i16 * i16);
        } while (++i16 < 278);
        Test.instanceCount += (long)-1.101088;
        i18 = 1;
        do {
            i17 -= s1;
            i17 += (i18 * i18);
            f3 += (((i18 * Test.byFld) + i17) - f3);
            iArr1[i18 + 1][i18] = (int)-2159866767103060207L;
            iArr1[i18 - 1][i18 + 1] += i18;
            i19 = 69;
            do {
                i17 = (int)36.344F;
                f3 = i17;
                i17 = i18;
                switch (((i18 % 2) * 5) + 100) {
                case 104:
                    iArr1[i19 - 1][i19 + 1] = (int)Test.instanceCount;
                    for (i20 = 1; 3 > i20; ++i20) {
                        dArr2 = dArr2;
                        i21 <<= i20;
                    }
                    for (i22 = 1; i22 < 3; ++i22) {
                        boolean b1=false;
                        i23 = i20;
                        i23 += (int)(2163254451L + (i22 * i22));
                        Test.instanceCount = -3;
                        iArr1[i22][i18] >>>= i17;
                        f3 = 756;
                        Test.instanceCount >>= i19;
                        b1 = true;
                        i17 = (int)-125124467L;
                        s1 += (short)f3;
                        Test.instanceCount += (i22 + i16);
                    }
                    break;
                case 109:
                    f3 += (float)-1.79188;
                    break;
                }
            } while ((i19 -= 3) > 0);
        } while (++i18 < 367);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
