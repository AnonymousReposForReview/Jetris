package tests.javafuzzer673;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:41:57 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-9L;
    public static float fFld=92.902F;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(byte by) {

        int i3=-5, i4=51817, i5=-52090, i6=15868, i7=177;
        long l=27724L, lArr[]=new long[N];
        boolean b=false;
        double d=2.7519;
        short s=20401;

        FuzzerUtils.init(lArr, -2531031281L);

        for (i3 = 4; 229 > i3; i3++) {
            lArr[i3] = Test.instanceCount;
            i4 += i3;
            Test.instanceCount = -185L;
            for (l = 1; l < 7; l++) {
                b = true;
                for (i6 = i3; i6 < 2; ++i6) {
                    Test.instanceCount >>= i4;
                    if (i5 != 0) {
                    }
                    i7 += (int)d;
                    i7 <<= 3;
                    lArr[(int)(l - 1)] ^= 46393;
                }
                if (i6 != 0) {
                }
                s += (short)(l + Test.instanceCount);
            }
            d = i5;
        }
        long meth_res = by + i3 + i4 + l + i5 + (b ? 1 : 0) + i6 + i7 + Double.doubleToLongBits(d) + s +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i2=8, i8=33090, i9=-3732;
        byte by1=54;
        short s1=-19416;

        i2 = 1;
        do {
            Test.instanceCount = Math.abs(lMeth(by1));
            i8 = 1;
            do {
                i9 %= (int)(s1 | 1);
                s1 = (short)Test.instanceCount;
                Test.instanceCount += i8;
                i9 = 29788;
                i9 >>= i2;
                i9 = i9;
                i9 *= i8;
                i9 += (i8 | i9);
                i9 >>= s1;
                i9 += i8;
            } while (++i8 < 6);
        } while (++i2 < 275);
        i9 <<= i9;
        i9 >>= i9;
        long meth_res = i2 + by1 + i8 + i9 + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=50112, i1=-12, i10=-15097, i11=-8, i12=24698, i13=-152, iArr[][]=new int[N][N];
        double d1=-1.40170;
        byte by2=-111;

        FuzzerUtils.init(iArr, -34939);

        i = 1;
        do {
            i1 = iMeth();
            iArr[i + 1][i] = i1;
            i1 = i1;
            i1 += i1;
            i10 = 1;
            do {
                for (i11 = 1; i11 < 1; ++i11) {
                    Test.instanceCount = -2900118514596594650L;
                    d1 = Test.instanceCount;
                    Test.fFld += (i11 * by2);
                    Test.instanceCount *= i1;
                    Test.instanceCount = i12;
                    iArr[i][i] = i13;
                    iArr[i11 + 1][i10] += i;
                    i13 += i11;
                }
            } while (++i10 < 8);
        } while (++i < 194);
        vMeth_check_sum += i + i1 + i10 + i11 + i12 + Double.doubleToLongBits(d1) + by2 + i13 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=-181, i15=103, i16=80, i17=14068, i18=213, i19=-26, i20=-188, iArr1[]=new int[N];
        double d2=1.82541;
        byte by3=69;

        FuzzerUtils.init(iArr1, -2431);

        vMeth();
        for (i14 = 4; i14 < 387; i14++) {
            for (i16 = 1; i16 < 66; ++i16) {
                d2 -= Test.instanceCount;
                Test.instanceCount = i16;
                i18 = 2;
                while ((i18 -= 2) > 0) {
                    i17 += (i18 * i18);
                    i15 += i14;
                    i17 -= i17;
                    i15 /= (int)-23L;
                    iArr1[i14 - 1] += (int)Test.instanceCount;
                    Test.fFld += (i18 * Test.instanceCount);
                    i17 = 41421;
                    by3 += (byte)i16;
                }
                i15 <<= i14;
                i15 = i17;
            }
            i17 = (int)Test.instanceCount;
            i19 = 1;
            while (++i19 < 66) {
                i15 = (int)Test.instanceCount;
                Test.instanceCount += (i19 - Test.instanceCount);
                iArr1[i14 + 1] = 7;
                i20 = 1;
                do {
                    i15 *= i17;
                    iArr1[i14 - 1] += i15;
                    i15 *= -4;
                    i17 += i20;
                    i17 *= (int)Test.instanceCount;
                    Test.instanceCount <<= -509;
                    iArr1[i14] |= 81;
                } while (++i20 < 1);
                by3 += (byte)(-191 + (i19 * i19));
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
