package tests.javafuzzer1568;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:09:33 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1978412823L;
    public static int iFld=-10;
    public static boolean bFld=true;
    public static int iFld1=-91;
    public static float fFld=-43.429F;
    public static double dFld=1.44577;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3) {

        float f1=-2.839F;
        int i4=-4371, i5=85, i6=251, i7=-199, i8=-65251, i9=-6, i10=93, iArr[]=new int[N];
        boolean b=false;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(sArr, (short)31054);

        iArr[(i3 >>> 1) % N] -= (int)f1;
        for (i4 = 18; i4 < 368; ++i4) {
            iArr[i4 - 1] = i5;
        }
        Test.instanceCount = Test.instanceCount;
        i6 = 1;
        while (++i6 < 146) {
            for (i7 = 1; i7 < 11; ++i7) {
                Test.instanceCount >>>= i7;
                i3 += (i7 ^ i4);
            }
            if (b) break;
            i5 += (i6 + i5);
            for (i9 = 1; i9 < 11; ++i9) {
                i5 -= (int)Test.instanceCount;
                Test.iFld = i8;
                sArr[i6][i6] -= (short)i3;
                if (i7 != 0) {
                    vMeth2_check_sum += i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10
                        + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
                    return;
                }
            }
        }
        vMeth2_check_sum += i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(int i2, float f) {

        int i11=-110, i12=-6, i13=163, i14=32809;
        short s=24260;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.93931);

        vMeth2(-239);
        Test.iFld -= Test.iFld;
        for (double d : dArr) {
            if (Test.bFld) break;
            for (i11 = 1; i11 < 4; ++i11) {
                i2 <<= (int)Test.instanceCount;
                dArr[i11] = Test.iFld;
                s -= (short)i2;
                i2 *= (int)f;
                for (i13 = 2; i13 > i11; i13--) {
                    f += i13;
                    Test.instanceCount = i11;
                    Test.iFld = i12;
                    i12 = i13;
                }
                Test.iFld += (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f) + i11 + i12 + s + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i, int i1) {

        float f2=2.861F;

        vMeth1(Test.iFld, f2);
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i15=39313, i16=33734, i17=-5, i18=-57781, i19=48467, i20=8, i21=204, i22=-1, iArr1[]=new int[N];
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -25212);
        FuzzerUtils.init(lArr, 17955L);
        FuzzerUtils.init(fArr, -68.934F);

        vMeth(Test.iFld, Test.iFld);
        Test.iFld1 = Test.iFld1;
        for (i15 = 209; i15 > 4; i15 -= 3) {
            iArr1 = FuzzerUtils.int1array(N, (int)40);
        }
        Test.iFld -= -56540;
        Test.instanceCount = Test.instanceCount;
        i17 = 1;
        do {
            for (i18 = 6; i18 < 96; i18++) {
                Test.iFld1 = i18;
                Test.iFld += Test.iFld1;
            }
            Test.instanceCount += (i17 | Test.instanceCount);
            Test.instanceCount += (((i17 * i19) + i18) - i15);
            for (i20 = 5; i20 < 96; ++i20) {
                Test.fFld -= Test.fFld;
                i16 -= (int)Test.dFld;
                i22 = 1;
                while (++i22 < 2) {
                    i19 += (i22 | Test.iFld);
                    Test.iFld -= (int)Test.fFld;
                    if (Test.bFld) break;
                    Test.iFld1 += (i22 + Test.instanceCount);
                    i21 -= (int)Test.dFld;
                    i16 += (i22 - Test.instanceCount);
                    if (Test.bFld) {
                        Test.instanceCount += (((i22 * Test.instanceCount) + i20) - Test.iFld);
                        lArr = lArr;
                        Test.iArrFld[i17 + 1] += (int)Test.instanceCount;
                    } else if (Test.bFld) {
                        fArr = fArr;
                    } else if (Test.bFld) {
                        Test.instanceCount += 54120;
                    } else {
                        Test.iArrFld[i22] = (int)Test.instanceCount;
                        Test.instanceCount /= 17032;
                    }
                }
            }
        } while (++i17 < 261);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
