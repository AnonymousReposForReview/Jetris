package tests.javafuzzer1954;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:25:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2091608736L;
    public static short sFld=15685;
    public static short sArrFld[]=new short[N];
    public volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)25312);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i9, int i10, int i11) {

        double d=2.32304;
        int i12=19818, i13=12, i15=14, i16=207, i17=5, i18=-62, iArr[]=new int[N];
        float f1=122.329F, fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(fArr, -73.428F);
        FuzzerUtils.init(lArr1, 10622L);

        iArr[(i11 >>> 1) % N] <<= i9;
        i10 -= i9;
        i9 /= (int)(Test.instanceCount | 1);
        d = 128;
        do {
            i10 += (int)((long)d ^ i11);
            i11 -= i9;
        } while ((d -= 2) > 0);
        for (i12 = 7; 169 > i12; ++i12) {
            fArr[(i9 >>> 1) % N] = i13;
            i9 = (int)Test.instanceCount;
            for (i15 = 1; i15 < 10; i15++) {
                for (i17 = 1; i17 < 2; i17++) {
                    i10 += (i17 ^ (long)f1);
                    i16 >>>= (int)-33295L;
                    lArr1[i17] >>= i17;
                    i11 |= i17;
                }
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + i15 + i16 + i17 + i18 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
            + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i8) {

        double d1=96.71693;
        int i19=-12, i20=8, i21=-33218, i22=-4, i23=-64616, i24=17307, i25=0, iArr1[]=new int[N];
        boolean b1=false;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 8.509F);
        FuzzerUtils.init(iArr1, -216);

        i8 += (int)lMeth(i8, i8, i8);
        d1 = -56.86964;
        for (i19 = 7; i19 < 261; ++i19) {
            fArr1[i19] -= Test.sFld;
            for (i21 = 1; i21 < 6; i21 += 3) {
                for (i23 = 1; i23 < 6; ++i23) {
                    float f2=0.827F;
                    try {
                        i25 = (i8 % i23);
                        iArr1[i21] = (39555 % i23);
                        i20 = (55055 % i24);
                    } catch (ArithmeticException a_e) {}
                    i25 = i23;
                    if (b1) {
                        i25 += i23;
                        iArr1[i23] = i21;
                        i24 = (int)Test.instanceCount;
                    } else {
                        if (false) {
                            Test.instanceCount = i20;
                            i24 = i23;
                        } else {
                            f2 -= i19;
                        }
                        vMeth1_check_sum += i8 + Double.doubleToLongBits(d1) + i19 + i20 + i21 + i22 + i23 + i24 + i25
                            + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i8 + Double.doubleToLongBits(d1) + i19 + i20 + i21 + i22 + i23 + i24 + i25 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i3, long l, int i4) {

        long l1=-246L, lArr[]=new long[N];
        boolean b=true;
        float f=-1.931F;
        int i5=133, i6=7, i7=13943, i26=-7, i27=-6032, iArr2[]=new int[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 6317697102753754111L);
        FuzzerUtils.init(byArr, (byte)-66);
        FuzzerUtils.init(iArr2, -52904);

        i3 *= i3;
        l1 = 1;
        while (++l1 < 392) {
            if (b = ((-lArr[(int)(l1 + 1)]) != ((f + i3) + (--i5)))) break;
            l += (long)(((f + i4) - (++Test.sArrFld[(int)(l1 + 1)])) - ((-145 + byArr[(int)(l1 + 1)]) + 102));
            switch (((Math.abs(i3) >>> 1) % 2) + 7) {
            case 7:
                Test.instanceCount >>= (long)((f - lArr[(int)(l1)]) - i4);
                break;
            case 8:
                for (i6 = 1; i6 < 4; i6++) {
                    vMeth1(-132);
                }
                break;
            default:
                i7 |= 21741;
                try {
                    i4 = (i7 % iArr2[(i4 >>> 1) % N]);
                    iArr2[(int)(l1)] = (i4 % -57);
                    i7 = (i5 / i5);
                } catch (ArithmeticException a_e) {}
                for (i26 = 1; i26 < 4; i26++) {
                    i4 += i26;
                    i4 *= i4;
                    Test.instanceCount = i27;
                    i3 = i7;
                }
            }
        }
        vMeth_check_sum += i3 + l + i4 + l1 + (b ? 1 : 0) + Float.floatToIntBits(f) + i5 + i6 + i7 + i26 + i27 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=78, i1=51113, i2=10, i28=6, i29=-5, i30=-35230, i31=-59707, i32=-26555, i33=-25999, i34=0;
        double d2=-68.96620;
        byte by=-24;
        float f3=-85.466F, fArr2[][]=new float[N][N];
        boolean b2=true;

        FuzzerUtils.init(fArr2, -2.287F);

        switch (((((int)(i - Test.instanceCount)) >>> 1) % 10) + 45) {
        case 45:
            i *= (++i);
            for (i1 = 1; 152 > i1; i1++) {
                vMeth(i1, 20L, 8160);
                for (i28 = i1; 166 > i28; i28 += 2) {
                    for (i30 = 1; i30 < 1; i30++) {
                        i31 += i30;
                    }
                    i2 -= -8;
                    i31 *= i29;
                }
                for (i32 = 10; i32 < 166; i32++) {
                    fArr2[i1 - 1][i32 - 1] -= i30;
                    d2 = 47141;
                    i31 *= i;
                    i31 -= i2;
                    i34 = 2;
                    do {
                        i29 <<= (int)Test.instanceCount;
                        Test.instanceCount *= i2;
                        Test.instanceCount += (((i34 * Test.instanceCount) + i29) - Test.instanceCount);
                        i2 = -41168;
                        i = i30;
                        Test.instanceCount += i34;
                        switch ((((i33 >>> 1) % 2) * 5) + 10) {
                        case 13:
                            Test.instanceCount >>= -1636059576L;
                            try {
                                i = (i % 190);
                                i33 = (i % i31);
                                i33 = (i28 % 59898);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 12:
                            i31 += (int)Test.instanceCount;
                            i2 <<= 45078;
                            i29 ^= (int)Test.instanceCount;
                            i31 /= (int)(i31 | 1);
                            break;
                        }
                        i33 = i32;
                    } while ((i34 -= 3) > 0);
                    i |= (int)61755L;
                }
            }
            break;
        case 46:
            Test.instanceCount *= by;
        case 47:
            i -= i1;
            break;
        case 48:
            fArr2 = fArr2;
            break;
        case 49:
            Test.instanceCount = i28;
        case 50:
            Test.instanceCount *= i32;
            break;
        case 51:
            i2 %= (int)(i31 | 1);
        case 52:
            f3 -= i34;
            break;
        case 53:
            b2 = b2;
        case 54:
            iArrFld[(i2 >>> 1) % N][(i1 >>> 1) % N] *= (int)-69.24219;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
