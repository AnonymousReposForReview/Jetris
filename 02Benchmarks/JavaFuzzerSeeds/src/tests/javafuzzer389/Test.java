package tests.javafuzzer389;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:09:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5497405123342001324L;
    public static boolean bFld=true;
    public static volatile float fFld=93.762F;
    public static byte byFld=-110;
    public static volatile short sFld=-18457;
    public int iFld=1;
    public static float fFld1=-2.211F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 166);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7) {

        int i8=14, i9=47, i10=181, i11=-7, iArr1[][]=new int[N][N];
        double d1=-65.124491;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 30);
        FuzzerUtils.init(lArr, 62759L);

        for (i8 = 16; i8 < 281; ++i8) {
            for (i10 = 6; 1 < i10; --i10) {
                iArr1[i8 - 1][i10] = (int)d1;
                lArr[i8] *= Test.instanceCount;
                iArr1[i10][i10] = i9;
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(short s, int i5, double d) {

        int i6=-4, i12=-14, i13=-14, i14=10571, i15=41464, i16=61010, i17=-25176, i18=-32652, iArr2[]=new int[N],
            iArr3[][]=new int[N][N];
        long l=6684489337637095577L, lArr1[]=new long[N];
        float fArr[]=new float[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 0.651F);
        FuzzerUtils.init(byArr, (byte)-47);
        FuzzerUtils.init(lArr1, 25271L);
        FuzzerUtils.init(iArr2, -42231);
        FuzzerUtils.init(iArr3, -2);

        i6 = 1;
        do {
            vMeth1(i6);
            for (i12 = 1; i12 < 13; i12++) {
                i5 ^= i6;
                for (i14 = 1; i14 < 2; i14++) {
                    long l1=-2052763258L;
                    switch ((i6 * 5) + 9) {
                    case 211:
                        i5 += (int)(48881L + (i14 * i14));
                        break;
                    case 145:
                        i15 <<= i13;
                    case 71:
                    case 285:
                    case 73:
                        d += Test.instanceCount;
                        i5 = i6;
                        Test.instanceCount += i14;
                    case 334:
                        i15 -= (int)Test.instanceCount;
                        i13 >>= (int)l;
                        Test.instanceCount >>= i13;
                        break;
                    case 100:
                        Test.instanceCount += (i14 | s);
                        break;
                    case 244:
                        i5 = (int)Test.instanceCount;
                        break;
                    case 111:
                        if (Test.bFld) continue;
                    case 185:
                        i5 += i14;
                        break;
                    case 196:
                        i5 += (i14 - i14);
                        break;
                    case 288:
                        fArr[i12] += i13;
                    case 273:
                        d -= -93;
                        break;
                    case 149:
                        Test.instanceCount <<= i14;
                    case 281:
                        i5 -= i6;
                        break;
                    case 51:
                        if (false) break;
                        break;
                    case 307:
                        i16 = (int)Test.fFld;
                        break;
                    case 304:
                        byArr[i6] <<= (byte)i6;
                        break;
                    case 276:
                        i5 += (-25069 + (i14 * i14));
                    case 142:
                        lArr1[i6] &= i16;
                    case 25:
                        iArr2 = FuzzerUtils.int1array(N, (int)-86);
                        break;
                    case 197:
                        d += 55988L;
                        break;
                    case 341:
                        i13 = i5;
                        break;
                    case 101:
                        Test.fFld += i6;
                        break;
                    case 327:
                    case 269:
                        iArr2[i12 + 1] = i15;
                        break;
                    case 24:
                        d -= 61.480F;
                    case 257:
                        if (i16 != 0) {
                            vMeth_check_sum += s + i5 + Double.doubleToLongBits(d) + i6 + i12 + i13 + i14 + i15 + l +
                                i16 + i17 + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2)
                                + FuzzerUtils.checkSum(iArr3);
                            return;
                        }
                        break;
                    case 317:
                        i13 += i14;
                    case 248:
                        l = l;
                        break;
                    case 55:
                        l -= (long)Test.fFld;
                    case 351:
                        i16 = 25639;
                        break;
                    case 156:
                        i13 += (i14 | l);
                    case 35:
                        i16 += (i14 | i12);
                        break;
                    case 300:
                        byArr[i14] = Test.byFld;
                        break;
                    case 299:
                        i17 += i14;
                        break;
                    case 58:
                        i16 -= (int)l;
                        break;
                    case 198:
                        Test.instanceCount = i15;
                        break;
                    case 265:
                        Test.instanceCount += (i14 ^ i13);
                        break;
                    case 343:
                        Test.fFld += (i14 * i14);
                        break;
                    case 108:
                        i13 *= i15;
                        break;
                    case 267:
                        i15 += (-11 + (i14 * i14));
                        break;
                    case 75:
                        i5 = 8;
                        break;
                    case 251:
                        i16 = i6;
                        break;
                    case 228:
                        s *= (short)d;
                        break;
                    case 186:
                        d *= d;
                        break;
                    case 115:
                        iArr3[i6][i6] >>>= 241;
                    case 69:
                        i5 <<= i17;
                    case 344:
                        l = Test.instanceCount;
                    case 253:
                        Test.fFld += (i14 * i14);
                    case 12:
                        l1 = 2572;
                        break;
                    case 328:
                        iArr2[i12 - 1] = (int)l;
                    case 175:
                        i17 -= Test.byFld;
                    case 266:
                        s /= (short)((long)(d) | 1);
                        break;
                    case 49:
                        l1 += (((i14 * i12) + Test.fFld) - i15);
                        break;
                    case 296:
                        i16 = i15;
                    case 329:
                        i18 = i13;
                    case 312:
                        iArr2[i14 - 1] = i18;
                    case 23:
                        i17 = (int)Test.fFld;
                    case 83:
                        i5 += (int)-4139323603L;
                        break;
                    case 245:
                        d = i5;
                        break;
                    case 323:
                        lArr1[i14] >>= l1;
                        break;
                    case 226:
                        i15 = i5;
                        break;
                    case 34:
                    case 144:
                        i13 -= (int)d;
                        break;
                    case 155:
                        Test.instanceCount = i16;
                        break;
                    case 106:
                        fArr[i6 - 1] *= l1;
                        break;
                    case 333:
                        lArr1[i6 + 1] = i6;
                    case 236:
                        i18 = i13;
                        break;
                    case 72:
                        d *= i12;
                    }
                }
            }
        } while (++i6 < 125);
        vMeth_check_sum += s + i5 + Double.doubleToLongBits(d) + i6 + i12 + i13 + i14 + i15 + l + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3);
    }

    public static int iMeth(int i) {

        int i1=24, i2=-179, i3=-1, i4=4, i19=-39160, i20=78, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -218);

        i = (int)Test.instanceCount;
        for (i1 = 249; 3 < i1; i1 -= 2) {
            Test.instanceCount = iArr[i1][i1 - 1];
            for (i3 = i1; i3 < 13; i3++) {
                vMeth((short)(7312), i4, 1.94997);
                if (Test.bFld) break;
            }
            Test.instanceCount *= i3;
            i2 += (i1 * i1);
            for (i19 = 1; 13 > i19; ++i19) {
                i4 += i20;
                i20 += i4;
                Test.fFld /= (i3 | 1);
                Test.instanceCount += (0 + (i19 * i19));
                Test.fFld -= i1;
                i20 -= Test.sFld;
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + i19 + i20 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d2=-2.66759;
        int i21=4, i22=195, i23=-12, i24=125, i25=12, i26=-208, i27=-119;
        long lArr2[]=new long[N];
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(lArr2, -9L);
        FuzzerUtils.init(byArr1, (byte)-89);

        iMeth(14);
        iFld = iFld;
        Test.byFld -= (byte)d2;
        iFld = (int)Test.instanceCount;
        iFld += (int)Test.fFld;
        i21 = 1;
        while (++i21 < 273) {
            try {
                iFld = (49561271 / Test.iArrFld[i21]);
                iFld = (-1923952543 % iFld);
                iFld = (-73 % i21);
            } catch (ArithmeticException a_e) {}
            for (i22 = 5; i22 < 92; i22++) {
                i24 = 1;
                while (++i24 < 2) {
                    iFld += (i24 + iFld);
                }
                Test.iArrFld[i21 + 1] += i24;
                i23 -= Test.sFld;
                Test.bFld = Test.bFld;
                switch (((i21 % 10) * 5) + 26) {
                case 32:
                    for (i25 = i22; i25 < 2; ++i25) {
                        if (Test.bFld) {
                            switch (((i26 >>> 1) % 5) + 77) {
                            case 77:
                                switch ((((-5 >>> 1) % 2) * 5) + 106) {
                                case 114:
                                    Test.instanceCount += (((i25 * i24) + i24) - i26);
                                    Test.bFld = Test.bFld;
                                    iFld = i22;
                                case 115:
                                    d2 *= -19.110193;
                                    try {
                                        i23 = (i23 % 1429178874);
                                        Test.iArrFld[i22] = (455625566 / iFld);
                                        Test.iArrFld[i21 - 1] = (i25 % -97);
                                    } catch (ArithmeticException a_e) {}
                                    break;
                                }
                                Test.iArrFld[i22 + 1] *= i26;
                                Test.instanceCount += (((i25 * Test.fFld) + iFld) - i22);
                                break;
                            case 78:
                                Test.instanceCount = Test.instanceCount;
                                break;
                            case 79:
                                iFld <<= (int)Test.instanceCount;
                                iFld += i26;
                                i26 = i24;
                                lArr2[i22 - 1] -= i23;
                            case 80:
                                byArr1[i21 + 1] >>= (byte)-2L;
                            case 81:
                                lArr2[i25 + 1] *= (long)Test.fFld1;
                                break;
                            }
                        } else {
                            Test.instanceCount = -8;
                        }
                    }
                    break;
                case 59:
                    i23 += (int)Test.fFld1;
                    break;
                case 70:
                    i27 -= i24;
                    break;
                case 56:
                    Test.instanceCount >>= 3;
                case 68:
                    if (true) continue;
                case 52:
                    i27 -= i22;
                    break;
                case 41:
                    if (Test.bFld) break;
                    break;
                case 58:
                    Test.fFld1 += Test.instanceCount;
                    break;
                case 65:
                    Test.instanceCount >>= i24;
                case 66:
                    Test.fFld += -14;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
