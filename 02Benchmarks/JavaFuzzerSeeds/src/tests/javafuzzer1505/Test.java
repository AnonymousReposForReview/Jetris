package tests.javafuzzer1505;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:41:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public volatile int iFld=139;
    public static boolean bFld=true;
    public static float fFld=-1.318F;
    public static float fArrFld[]=new float[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -46.684F);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i=38687, i1=171, i2=62409, i3=44608, i4=-73, i5=-1, i6=-35326, i7=31, i8=7, iArr[]=new int[N];
        byte by=-120;
        float f=0.882F;
        double d=125.5713;

        FuzzerUtils.init(iArr, -14424);

        i = 1;
        while (++i < 216) {
            i1 = i;
            i1 += by;
        }
        for (i2 = 15; i2 < 349; ++i2) {
            for (i4 = 1; 5 > i4; ++i4) {
                for (i6 = 2; i6 > 1; --i6) {
                    if (i7 != 0) {
                        vMeth2_check_sum += i + i1 + by + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 +
                            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    i5 -= 8683;
                }
                iArr[i4 - 1] = (int)f;
                i3 += (int)(-64L + (i4 * i4));
                i8 = 1;
                while (++i8 < 2) {
                    Test.bArrFld[i2] = Test.bFld;
                    i1 -= (int)d;
                    i1 = (int)-4L;
                    i3 <<= -3374;
                }
            }
        }
        vMeth2_check_sum += i + i1 + by + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i9=-10000, i10=56154, i11=-57929, i12=-59490, iArr1[]=new int[N];
        float f1=57.222F;
        short s=-17344, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)13681);
        FuzzerUtils.init(iArr1, 57330);

        vMeth2();
        for (i9 = 8; i9 < 140; i9++) {
            i10 += i10;
            for (i11 = 1; i11 < 12; i11++) {
                Test.instanceCount += (i11 * i11);
                switch (((i9 % 8) * 5) + 65) {
                case 104:
                    f1 = Test.instanceCount;
                    sArr[i11 - 1] += (short)f1;
                    i10 += (int)-1L;
                    iArr1 = iArr1;
                case 82:
                    f1 *= i10;
                    break;
                case 84:
                    f1 += (i11 * i11);
                    break;
                case 93:
                case 103:
                case 91:
                    f1 += (((i11 * i9) + i11) - Test.instanceCount);
                    i12 += (((i11 * i12) + Test.instanceCount) - s);
                    if (false) break;
                    break;
                case 94:
                    i10 = i9;
                case 90:
                    i12 = (int)Test.instanceCount;
                    break;
                }
            }
        }
        vMeth1_check_sum += i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + s + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l) {

        int i13=-8, i14=143, i15=-36528, i16=-160;
        double d1=0.122062;
        short s1=28498;

        vMeth1();
        for (i13 = 7; i13 < 364; i13++) {
            switch ((i13 % 2) + 76) {
            case 76:
                if (Test.bFld) break;
                Test.fFld *= i13;
                for (i15 = 1; 5 > i15; ++i15) {
                    try {
                        i16 = (i13 / i13);
                        i16 = (1796517245 / i13);
                        i14 = (i15 / -35218);
                    } catch (ArithmeticException a_e) {}
                    d1 *= Test.fFld;
                    i16 += i13;
                    if (true) {
                        i16 = (int)l;
                        i16 -= (int)199L;
                        i16 += (int)-2.248F;
                        i16 += i14;
                    } else if (Test.bFld) {
                        i16 <<= i16;
                    } else if (Test.bFld) {
                        Test.instanceCount -= i15;
                    }
                }
                break;
            case 77:
                i14 -= (int)Test.instanceCount;
                break;
            default:
                i16 = s1;
            }
        }
        vMeth_check_sum += l + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + s1;
    }

    public void mainTest(String[] strArr1) {

        int i17=-13, i18=-189, i19=-66, i20=33275, i21=63, i22=-22, i23=-129, iArr2[]=new int[N];
        short s2=-5140;
        byte by1=-110;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1932823878554488632L);
        FuzzerUtils.init(iArr2, 7);

        Test.instanceCount = (long)((Test.fArrFld[(iFld >>> 1) % N] / (lArr[(iFld >>> 1) % N] | 1)) - ((iFld * iFld) -
            iFld));
        Test.bFld = (((iFld / (iFld | 1)) < (iFld += iFld)) && ((Test.instanceCount = -1741180957927449511L) == (-(iFld
            + -93.779F))));
        iFld %= (int)(iFld | 1);
        vMeth(Test.instanceCount);
        for (i17 = 7; i17 < 123; ++i17) {
            s2 += (short)(((i17 * i17) + Test.fFld) - Test.fFld);
            Test.fFld += 45950;
            lArr = lArr;
            Test.instanceCount = i17;
            i18 += i17;
            if (Test.bFld) break;
            switch ((i17 % 2) + 108) {
            case 108:
                Test.instanceCount = -231;
                iFld -= iFld;
                try {
                    i18 = (-199 % i17);
                    iFld = (28344 / iArr2[i17]);
                    iFld = (70 / iArr2[i17 + 1]);
                } catch (ArithmeticException a_e) {}
                break;
            case 109:
                for (i19 = i17; i19 < 216; ++i19) {
                    by1 += (byte)(-88 + (i19 * i19));
                    Test.fFld *= 10319;
                    iFld = iFld;
                    iArr2[(i20 >>> 1) % N] -= i18;
                }
                Test.instanceCount -= i19;
                i20 = (int)Test.fFld;
                i18 += (i17 - i20);
                break;
            default:
                iFld = 12;
                i21 = 1;
                do {
                    Test.instanceCount >>>= i19;
                    for (i22 = 1; i22 < 1; ++i22) {
                        Test.fFld += (((i22 * i20) + i21) - iFld);
                        Test.fFld += i22;
                        s2 >>= (short)i22;
                    }
                } while (++i21 < 216);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
