package tests.javafuzzer3155;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 02:59:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=220L;
    public static float fFld=0.172F;
    public static short sFld=14265;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 6L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {


        Test.instanceCount <<= Test.instanceCount;
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        long l=-1575544383L;
        int i3=58, i4=43, i5=144, i6=-8, i7=36083, i8=0, i9=-235, iArr[]=new int[N];
        double d=1.103094;

        FuzzerUtils.init(iArr, -48171);

        for (l = 2; l < 125; ++l) {
            for (i4 = 1; i4 < 13; ++i4) {
                iMeth();
                d *= Test.fFld;
                i3 -= (int)Test.instanceCount;
                i5 -= (int)81L;
            }
            i3 |= 0;
            iArr[(int)(l + 1)] <<= i4;
            Test.fFld += Test.fFld;
            for (i6 = 1; i6 < 13; ++i6) {
                for (i8 = 1; i8 < 2; i8++) {
                    i3 = (int)Test.instanceCount;
                }
                i5 = (int)l;
            }
            Test.sFld = (short)i7;
        }
        i3 *= i5;
        vMeth1_check_sum += l + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i1, byte by, int i2) {

        int i10=-1, i11=-205;
        long l1=8L;
        float fArr[]=new float[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, -2.806F);
        FuzzerUtils.init(dArr, 1.62565);

        by = (byte)((++fArr[(i2 >>> 1) % N]) * (i1--));
        dArr[(i1 >>> 1) % N] = (i1++);
        fArr[(i1 >>> 1) % N] = (i2 = i2);
        vMeth1();
        for (i10 = 6; i10 < 250; ++i10) {
            Test.instanceCount = Test.instanceCount;
            i1 *= by;
            l1 = 1;
            while (++l1 < 7) {
                i1 += i1;
                i2 += (int)l1;
                i11 += (int)l1;
            }
            Test.instanceCount /= -128;
            if (i1 != 0) {
                vMeth_check_sum += i1 + by + i2 + i10 + i11 + l1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))
                    + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            i11 -= i1;
        }
        Test.lArrFld[(i11 >>> 1) % N] *= Test.instanceCount;
        vMeth_check_sum += i1 + by + i2 + i10 + i11 + l1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-148, i12=-230, i13=0, i14=-12, i15=-2, iArr1[]=new int[N];
        byte by1=-85, by2=-54;
        double d1=0.109153, d2=0.31684;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -93.278F);
        FuzzerUtils.init(iArr1, 5);

        i = (int)Test.instanceCount;
        vMeth(i, by1, i);
        Test.instanceCount -= -10;
        fArr1[(i >>> 1) % N] += i;
        for (i12 = 6; 266 > i12; ++i12) {
            for (i14 = 6; i14 < 97; ++i14) {
                Test.fFld += (float)d1;
                Test.instanceCount += by2;
                i = Test.sFld;
                d1 += i;
                switch (((i14 % 1) * 5) + 45) {
                case 49:
                    i = 14;
                    d2 = 1;
                    while ((d2 += 2) < 2) {
                        i >>= (int)Test.instanceCount;
                        i >>= 12;
                        i13 += i;
                        if (false) {
                            iArr1[(int)(d2)] *= i;
                            i15 = -108;
                            i15 = (int)Test.instanceCount;
                            i -= i15;
                        } else if (false) {
                            i += (496 + (d2 * d2));
                            fArr1[(int)(d2)] = 1;
                        } else {
                            Test.instanceCount -= (long)Test.fFld;
                            i *= i12;
                            i15 += (int)d2;
                        }
                        i13 -= (int)Test.instanceCount;
                        Test.instanceCount = i;
                        d1 *= i15;
                        i13 += (int)-56.85287;
                    }
                default:
                    i = (int)Test.fFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
