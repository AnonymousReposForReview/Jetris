package tests.javafuzzer149;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:03:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4000L;
    public static float fFld=67.824F;
    public static byte byFld=-119;
    public static boolean bArrFld[]=new boolean[N];
    public long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-79;

        i5 -= i5;
        vMeth1_check_sum += i5;
    }

    public static void vMeth() {

        int i6=-239, i7=35254, i8=7911, i11=-97, iArr1[]=new int[N];
        double d1=-24.92232;
        boolean b=true;
        long l=5540822882680128895L;
        short s1=16986;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-87);
        FuzzerUtils.init(iArr1, -14);

        vMeth1();
        for (byte by : byArr) {
            i6 -= -6;
            d1 = i6;
            for (i7 = 1; i7 < 4; i7++) {
                b = b;
            }
            d1 = Test.instanceCount;
            i8 >>= -8584;
            Test.fFld += i6;
            i8 <<= (int)Test.instanceCount;
            for (l = 1; l < 4; ++l) {
                i8 >>>= (int)l;
            }
            i8 = (int)Test.instanceCount;
            if (b) break;
        }
        s1 = (short)i8;
        vMeth_check_sum += i6 + Double.doubleToLongBits(d1) + i7 + i8 + (b ? 1 : 0) + l + i11 + s1 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth() {

        int i3=-92, i4=14, i12=5, i13=7, i14=199, i15=-54512, i16=13, iArr[]=new int[N];
        short s=-31075;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -225);
        FuzzerUtils.init(lArr, 5975265884870204858L);

        for (i3 = 1; i3 < 148; ++i3) {
            i4 += (int)((++Test.instanceCount) - iArr[i3 - 1]);
            Test.instanceCount += s;
        }
        vMeth();
        for (i12 = 3; i12 < 311; ++i12) {
            for (i14 = 1; i14 < 5; i14++) {
                i16 = 2;
                do {
                    if (false) {
                        switch ((i14 % 7) + 58) {
                        case 58:
                            i4 >>>= i15;
                            Test.byFld += (byte)i3;
                            lArr[i16 - 1] += i14;
                        case 59:
                            i4 -= (int)-198L;
                            i15 *= i16;
                            break;
                        case 60:
                        case 61:
                            lArr[i16] = i12;
                            break;
                        case 62:
                            Test.instanceCount <<= i4;
                        case 63:
                            Test.fFld %= (Test.instanceCount | 1);
                            break;
                        case 64:
                            Test.fFld = -69;
                            break;
                        }
                    } else {
                        Test.instanceCount += i16;
                    }
                } while (--i16 > 0);
            }
        }
        long meth_res = i3 + i4 + s + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.36143, d2=71.72346;
        int i=11, i1=-63438, i2=-3, i17=-56567, i18=37255, i19=38, i20=174, i21=-5, iArr2[]=new int[N];
        boolean b1=false;
        short s2=31588, sArr[]=new short[N];

        FuzzerUtils.init(iArr2, -6923);
        FuzzerUtils.init(sArr, (short)-18384);

        for (d = 2; d < 163; d++) {
            for (i1 = 5; i1 < 156; ++i1) {
                lMeth();
                for (i17 = 1; 2 > i17; i17++) {
                    if (false) {
                        switch ((((i2 >>> 1) % 1) * 5) + 87) {
                        case 90:
                            Test.fFld = i18;
                            Test.fFld = i1;
                            break;
                        }
                        d2 -= i1;
                        Test.fFld += (((i17 * Test.instanceCount) + i1) - i2);
                        i18 += i1;
                    } else if (b1) {
                        Test.byFld -= (byte)i1;
                    }
                    try {
                        i2 = (-254 / i2);
                        i = (i % 1202);
                        i18 = (46004 / iArr2[i1]);
                    } catch (ArithmeticException a_e) {}
                }
                for (i19 = 1; i19 < 2; i19++) {
                    Test.fFld = -51.921F;
                    Test.bArrFld[i19 - 1] = b1;
                    Test.instanceCount >>>= -52;
                    lArrFld[(int)(d)] <<= 3180387881L;
                    i20 += 6;
                }
                i21 = 1;
                do {
                    Test.byFld = (byte)i20;
                    if (b1) {
                        switch ((i1 % 7) + 1) {
                        case 1:
                            b1 = b1;
                            fArrFld[(int)(d)] += Test.instanceCount;
                            i20 -= (int)Test.fFld;
                            switch ((((i >>> 1) % 5) * 5) + 72) {
                            case 82:
                                Test.instanceCount = (long)d2;
                                i2 = i19;
                                break;
                            case 84:
                                Test.byFld = (byte)i2;
                                break;
                            case 80:
                                i18 += 133;
                                break;
                            case 97:
                                lArrFld[i1] = i19;
                            case 85:
                                Test.fFld = i17;
                                break;
                            }
                            break;
                        case 2:
                            Test.byFld += (byte)(i21 * i21);
                        case 3:
                            sArr[i21 + 1] -= (short)i1;
                            break;
                        case 4:
                            d2 -= i21;
                        case 5:
                            if (b1) break;
                            break;
                        case 6:
                            i2 += i1;
                            break;
                        case 7:
                            iArr2[i21] *= s2;
                        }
                    } else if (b1) {
                        i18 = i;
                    } else if (b1) {
                        i += (((i21 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    }
                } while (++i21 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
