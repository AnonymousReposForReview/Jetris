package tests.javafuzzer1240;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:06:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-212L;
    public static int iFld=-7;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -8);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-4, i7=76, i8=-195, i9=-3, i10=5, i11=194, i12=250;
        double d1=0.51319;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -691L);

        if (b) {
            for (i6 = 377; 5 < i6; i6 -= 3) {
                i7 -= i7;
                Test.instanceCount *= Test.instanceCount;
                i7 /= (int)(Test.iFld | 1);
            }
            i8 = i8;
            for (i9 = 15; 280 > i9; i9++) {
                i8 += (i9 + Test.instanceCount);
                Test.iArrFld[i9 - 1] = (int)Test.instanceCount;
                i10 = (int)d1;
                i7 >>= i7;
                i10 *= i10;
                for (i11 = 1; i11 < 6; ++i11) {
                    lArr[i11 + 1] *= Test.iFld;
                    i7 += i11;
                }
            }
        } else if (b) {
            Test.instanceCount = i6;
        } else {
            i12 += i7;
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(long l, int i5) {


        vMeth1();
        long meth_res = l + i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4) {

        int i13=129, i14=-182, i15=57456, i16=76;
        short s=-9502;
        double d2=0.94812;

        Test.instanceCount *= iMeth(Test.instanceCount, i4);
        i13 = 1;
        do {
            i14 = 5;
            do {
                Test.instanceCount += (long)-2.7948;
                Test.iFld += (i14 * i14);
                s *= (short)Test.instanceCount;
                d2 *= i4;
                for (i15 = 1; i15 < 1; ++i15) {
                    i4 = i14;
                    Test.iFld = s;
                    Test.iArrFld[i13] = i16;
                    Test.iArrFld[i15 - 1] = 39535;
                }
                Test.instanceCount += i4;
                i16 |= Test.iFld;
                Test.iFld += i13;
            } while (--i14 > 0);
        } while (++i13 < 304);
        vMeth_check_sum += i4 + i13 + i14 + s + Double.doubleToLongBits(d2) + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i=186, i1=60641, i2=-130, i3=50;
        double d=0.63601;
        byte by=-105;
        float f=1.64F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -6L);

        for (i = 11; i < 179; ++i) {
            i1 = i1;
            for (i2 = 9; i2 < 149; ++i2) {
                boolean b1=true;
                Test.instanceCount *= (long)(((i1 = i1) - i2) - d);
                switch (((((i3--) >>> 1) % 9) * 5) + 93) {
                case 112:
                    i1 += ((Math.abs(i3) * Test.iArrFld[i2 + 1]) * Test.iArrFld[i]);
                    break;
                case 118:
                    vMeth(i);
                    i3 += (int)Test.instanceCount;
                    Test.iArrFld[i + 1] += i3;
                    d = i2;
                    break;
                case 98:
                    d = -51;
                    Test.iFld += i2;
                    i1 += (i2 + i3);
                    d = i3;
                    break;
                case 124:
                    i1 += (i2 - Test.instanceCount);
                    switch ((((i2 >>> 1) % 1) * 5) + 76) {
                    case 78:
                        Test.instanceCount += (216 + (i2 * i2));
                    }
                    Test.iArrFld[i - 1] = i2;
                    i3 -= -10850;
                    break;
                case 119:
                    by += (byte)(((i2 * Test.instanceCount) + i3) - i3);
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 110:
                    i1 = (int)f;
                    lArr1[i - 1] -= i2;
                case 101:
                    if (b1) {
                        i3 += (i2 * i2);
                        Test.instanceCount += i2;
                    } else {
                        Test.instanceCount >>= Test.instanceCount;
                    }
                    Test.iArrFld[i] = (int)Test.instanceCount;
                    break;
                case 135:
                    Test.instanceCount = Test.iFld;
                    break;
                case 96:
                    Test.instanceCount = i2;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
