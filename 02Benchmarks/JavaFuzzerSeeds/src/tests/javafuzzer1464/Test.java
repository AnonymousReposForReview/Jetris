package tests.javafuzzer1464;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:08:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4016339968L;
    public static volatile float fFld=-2.374F;
    public static boolean bFld=true;
    public int iFld=-35053;
    public static double dFld=2.106056;
    public byte byFld=91;
    public static short sArrFld[]=new short[N];
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-12579);
        FuzzerUtils.init(Test.iArrFld, -52272);
        FuzzerUtils.init(Test.lArrFld, 1311500834L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i9) {

        int i10=-50922, i11=63674, i12=-48934, i13=-70, i14=-4;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3098929424935731935L);

        i9 += (int)Test.instanceCount;
        for (i10 = 8; i10 < 320; i10 += 2) {
            short s=-951;
            Test.instanceCount -= 10L;
            lArr = FuzzerUtils.long1array(N, (long)2650271750L);
            if (Test.bFld) break;
            lArr[i10 + 1] *= s;
            i11 = i9;
            i9 = i10;
            s += (short)Test.instanceCount;
            Test.instanceCount *= (long)-1.261F;
            i9 ^= i10;
            Test.instanceCount = i11;
        }
        for (i12 = 15; i12 < 353; i12++) {
            i14 += (i12 ^ i12);
            i11 += i12;
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4) {

        int i5=-27291, i6=13, i7=-163, i8=-39, i15=-110, i16=4, i17=3, i18=5, iArr[]=new int[N];
        byte by=-89;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(lArr1, -3433723237040977137L);

        for (i5 = 3; 188 > i5; ++i5) {
            for (i7 = 9; i7 > 1; i7--) {
                double d=1.54575;
                i8 += (++iArr[i5 - 1]);
                i6 = (int)(-((d++) - iMeth1(i6)));
                lArr1[i7 - 1][i5 - 1] |= -184;
                for (i15 = 1; i15 < 2; ++i15) {
                    i8 = by;
                    Test.instanceCount = (long)Test.fFld;
                    i8 = i6;
                }
                i6 = (int)Test.fFld;
            }
            for (i17 = 1; i17 < 9; i17++) {
                Test.instanceCount <<= i7;
                i18 += (((i17 * i7) + i5) - i16);
                Test.instanceCount = i7;
                Test.instanceCount += i17;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i15 + i16 + by + i17 + i18 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i2, int i3) {

        int i19=43988, i20=-14, i21=-11, i22=11;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -118L);

        i2 *= (int)(((-139 + iMeth(i2)) * Test.instanceCount) - Test.instanceCount);
        for (i19 = 1; i19 < 136; i19++) {
            if (i3 != 0) {
                vMeth_check_sum += i2 + i3 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(lArr2);
                return;
            }
            i3 = i3;
            i21 = 1;
            while (++i21 < 12) {
                lArr2[i19] -= i19;
                i3 += i21;
                i3 += (i21 * i21);
                i22 = 1;
                while (++i22 < 1) {
                    Test.bFld = Test.bFld;
                    if (i3 != 0) {
                        vMeth_check_sum += i2 + i3 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(lArr2);
                        return;
                    }
                    Test.sArrFld[i21] += (short)i2;
                    i3 += (73 + (i22 * i22));
                    i3 += i19;
                    Test.instanceCount <<= 1;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-11970, i1=13, i23=-74, i24=-5091, i25=-40080, i26=-1148, i27=93, i28=0, i29=189, iArr1[]=new int[N];
        long l=-2219086353L;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(dArr, 0.105990);

        for (i = 388; i > 14; --i) {
            Test.fFld = (++i1);
            vMeth(iFld, iFld);
            try {
                iFld = (iFld % 1826182931);
                iArr1[(iFld >>> 1) % N] = (i % i1);
                i1 = (-147 / iFld);
            } catch (ArithmeticException a_e) {}
            i23 = 1;
            while (++i23 < 67) {
                Test.dFld += i;
                for (i24 = 1; 1 > i24; i24++) {
                    switch ((i23 % 1) + 5) {
                    case 5:
                        i1 >>= -12;
                        iFld ^= (int)Test.instanceCount;
                        break;
                    }
                    iArr1[i23] += (int)l;
                    i1 <<= -55785;
                    iArr1[i23] = i24;
                    i1 += i24;
                    l += Test.instanceCount;
                    dArr[i24] -= iFld;
                    iFld = i1;
                    i25 -= (int)Test.instanceCount;
                }
                l *= (long)Test.fFld;
                l -= (long)Test.dFld;
                iArr1[i23] *= i24;
                for (i26 = 1; i26 < 1; ++i26) {
                    iArr1[i + 1] = iFld;
                    i25 = -60875;
                    Test.iArrFld[i26 - 1] -= (int)Test.fFld;
                    i25 |= i25;
                    i27 = -1185;
                }
                for (i28 = 1; i28 > i23; i28 -= 2) {
                    Test.lArrFld[i + 1] *= byFld;
                }
                i25 += (((i23 * i25) + i25) - i27);
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
