package tests.javafuzzer1058;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:43:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-133L;
    public static volatile short sFld=-8756;
    public static double dFld=-36.126194;
    public static int iFld=-71;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 34374);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i2) {

        int i3=3115, i4=46844, i5=16012, i6=6, i7=-38382;
        float f1=-86.546F;
        boolean b=true;
        long l1=-61495L;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 114.91929);

        for (i3 = 15; 271 > i3; ++i3) {
            i4 >>= i2;
            f1 += (((i3 * i2) + i4) - i3);
            Test.iArrFld[i3 - 1] = (int)Test.dFld;
            Test.iFld <<= Test.iFld;
            i2 -= i3;
            if (false) {
                for (i5 = 1; 6 > i5; ++i5) {
                    Test.iArrFld[i5 + 1] *= 9;
                    Test.iFld += i5;
                    i4 = Test.iFld;
                    if (b) break;
                    for (l1 = 1; l1 < 2; l1++) {
                        i7 = i2;
                        i7 -= i2;
                    }
                }
            } else if (b) {
                if (b) continue;
            } else if (b) {
                dArr[i3 + 1] -= Test.dFld;
            }
        }
        long meth_res = i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + (b ? 1 : 0) + l1 + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, long l) {

        int i8=56329, i9=18604, i10=10024, i11=183, i12=-103, i13=-5, i14=-14, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, -48075);

        iArr1[(i1 >>> 1) % N] = (iArr1[(7 >>> 1) % N] = (iArr1[(21 >>> 1) % N] = (iArr1[(i1 >>> 1) % N] = iArr1[(2 >>>
            1) % N])));
        iArr1[(i1 >>> 1) % N][(-14 >>> 1) % N] >>= (int)(Test.instanceCount++);
        l = ((iMeth(i1) - 2) + Test.instanceCount);
        iArr1[(i1 >>> 1) % N][(212 >>> 1) % N] += Test.iFld;
        i1 *= i1;
        i1 -= (int)Test.instanceCount;
        Test.instanceCount = i1;
        for (i8 = 16; i8 < 290; i8++) {
            for (i10 = 1; i10 < 6; ++i10) {
                Test.instanceCount += (11 + (i10 * i10));
                switch (((i12 >>> 1) % 6) + 84) {
                case 84:
                    for (i13 = 1; i13 < 2; ++i13) {
                        i9 += i13;
                        Test.dFld = 59105L;
                        i14 += (((i13 * l) + i13) - i11);
                    }
                case 85:
                case 86:
                    i1 += (i10 | i9);
                    break;
                case 87:
                    i11 += (i10 * i10);
                    break;
                case 88:
                    if (Test.bFld) break;
                case 89:
                    i9 = i1;
                    break;
                }
            }
        }
        vMeth1_check_sum += i1 + l + i8 + i9 + i10 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {


        vMeth1(Test.iFld, Test.instanceCount);
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=104, i15=6, i16=-44280, i17=0, i18=-38978, i20=-42, i21=-12, i22=-98, i23=-2, i24=-147, i25=-18,
            iArr[][]=new int[N][N];
        float f=-2.458F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -73.748F);
        FuzzerUtils.init(iArr, 27657);

        fArr[(6 >>> 1) % N] -= (i -= (int)(fArr[(i >>> 1) % N] * (f * Test.instanceCount)));
        Test.sFld += (short)iArr[(i >>> 1) % N][(i >>> 1) % N];
        Test.instanceCount = Test.instanceCount;
        if (true) {
            vMeth();
            for (i15 = 7; i15 < 165; ++i15) {
                for (i17 = 9; i17 < 159; ++i17) {
                    Test.dFld = i18;
                }
                iArr[i15][i15] += i18;
                Test.bFld = Test.bFld;
                Test.iFld += (((i15 * i) + Test.iFld) - i18);
                f = Test.iFld;
                for (i20 = i15; i20 < 159; i20++) {
                    Test.dFld += i15;
                    Test.instanceCount += (long)Test.dFld;
                    f += (5.102F + (i20 * i20));
                    i += (i20 ^ i20);
                    Test.instanceCount -= (long)Test.dFld;
                    i16 <<= -99;
                    Test.sFld %= (short)(i16 | 1);
                    Test.instanceCount = i21;
                    Test.instanceCount |= Test.iFld;
                }
            }
            i16 += 48;
            Test.iFld *= Test.iFld;
        } else if (Test.bFld) {
            i16 = i18;
        }
        Test.instanceCount -= i17;
        for (i22 = 17; i22 < 372; i22++) {
            for (i24 = 71; i24 > i22; i24--) {
                i += (((i24 * Test.instanceCount) + i18) - f);
            }
            i25 = Test.iFld;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
