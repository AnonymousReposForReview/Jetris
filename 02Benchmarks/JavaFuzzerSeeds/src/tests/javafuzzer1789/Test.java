package tests.javafuzzer1789;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:20:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=42091L;
    public int iFld=10;
    public static int iFld1=0;
    public static double dFld=-86.113393;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -62);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        short s=5390;
        long l=189L;
        int i8=18476, i9=-7, i10=-5, i11=-9, i12=7, i13=25978;
        byte by=-11;
        boolean b=true;

        Test.instanceCount = s;
        i7 += 73;
        if (b) {
            for (l = 142; 5 < l; --l) {
                for (i9 = (int)(l); i9 < 11; i9++) {
                    Test.iArrFld[(int)(l)] = (int)6785124154587921292L;
                    i11 = 1;
                    while ((i11 -= 2) > 0) {
                        Test.iFld1 += i11;
                        Test.iFld1 = i9;
                        Test.instanceCount = Test.iFld1;
                    }
                    for (i12 = 1; i12 > 1; --i12) {
                        Test.iArrFld[(int)(l)] = i12;
                        by += (byte)i12;
                        Test.iFld1 += (((i12 * Test.instanceCount) + i8) - l);
                        i8 = (int)Test.instanceCount;
                    }
                }
            }
        } else if (b) {
            i10 -= (int)Test.instanceCount;
        }
        vMeth2_check_sum += i7 + s + l + i8 + i9 + i10 + i11 + i12 + i13 + by + (b ? 1 : 0);
    }

    public static void vMeth1(int i6) {


        vMeth2(i6);
        vMeth1_check_sum += i6;
    }

    public static void vMeth(int i, float f, int i1) {

        int i2=-7, i3=-9, i4=6, i5=-133, i14=53151;
        boolean b1=false;
        float f1=-2.786F;
        double d=0.117268;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -2063671732L);

        for (i2 = 4; 235 > i2; i2++) {
            for (i4 = 1; i4 < 7; ++i4) {
                i1 = (int)(--lArr[i2 - 1]);
                Test.instanceCount = (long)((i4 * (-(f + f))) - f);
                i <<= i3;
                try {
                    Test.iFld1 = (Test.iArrFld[i2 + 1] % -1697900960);
                    Test.iArrFld[i4 - 1] = (Test.iArrFld[i4] % Test.iFld1);
                    Test.iArrFld[i4 + 1] = (-13 / Test.iArrFld[i2 + 1]);
                } catch (ArithmeticException a_e) {}
                vMeth1(i4);
                if (b1) continue;
            }
            i = -231;
            Test.instanceCount += i2;
            for (f1 = 7; f1 > 1; f1 -= 2) {
                i5 <<= i1;
                Test.instanceCount >>= -42086;
                d *= Test.instanceCount;
                f = (float)Test.dFld;
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + i2 + i3 + i4 + i5 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f1) + i14 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        float f2=0.542F;

        Test.iArrFld[(iFld >>> 1) % N] -= iFld;
        vMeth(iFld, f2, Test.iFld1);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
