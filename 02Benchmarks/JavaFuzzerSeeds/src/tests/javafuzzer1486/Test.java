package tests.javafuzzer1486;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:18:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static volatile boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 171);
        FuzzerUtils.init(Test.fArrFld, 32.115F);
    }

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public double dMeth(boolean b, float f) {

        int i=-126;

        i = (int)(Math.abs(-194) + ((13L * Integer.reverseBytes(i)) / ((-97 - (i++)) | 1)));
        long meth_res = (b ? 1 : 0) + Float.floatToIntBits(f) + i;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i4, int i5, int i6) {

        float f3=0.526F, fArr[]=new float[N];
        int i7=149, i8=-11, i9=-7, i10=20, i11=-250, i12=82, i13=-11510;
        boolean b1=false;

        FuzzerUtils.init(fArr, 0.984F);

        fArr[(7 >>> 1) % N] -= i4;
        f3 = Test.instanceCount;
        for (i7 = 7; 285 > i7; ++i7) {
            Test.instanceCount *= i6;
            for (i9 = 6; 1 < i9; i9--) {
                for (i11 = 1; i11 < 2; i11++) {
                    b1 = b1;
                    i12 += (-10 + (i11 * i11));
                    i6 -= i12;
                    i12 = i5;
                    Test.iArrFld[i7] -= (int)Test.instanceCount;
                    fArr[i11 - 1] -= 90;
                }
                i4 += (i9 + i13);
            }
            i8 = i8;
            Test.iArrFld[i7] = i9;
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f3) + i7 + i8 + i9 + i10 + i11 + i12 + (b1 ? 1 : 0) +
            i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(int i3) {

        int i14=-148, i15=42632, i16=61, i17=-12, i18=-12;
        double d=0.16666;
        short s=8783;

        vMeth(i3, i3, i3);
        i3 -= -10;
        for (i14 = 21; i14 < 347; i14 += 3) {
            for (d = 1; 14 > d; d++) {
                switch ((i14 % 1) + 111) {
                case 111:
                    Test.fArrFld = Test.fArrFld;
                    Test.bFld = Test.bFld;
                    i16 += i3;
                    for (i17 = i14; i17 < 2; ++i17) {
                        Test.instanceCount = i15;
                        i15 *= i16;
                        i3 -= (int)Test.instanceCount;
                        i3 += (i17 + s);
                        i3 += i17;
                        i15 = i15;
                    }
                default:
                    i15 = -28973;
                }
            }
        }
        long meth_res = i3 + i14 + i15 + Double.doubleToLongBits(d) + i16 + i17 + i18 + s;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f2, long l) {

        int i19=42657, i20=49, i21=10, i22=49731;

        lMeth(i19);
        i19 -= (int)l;
        i19 = (int)f2;
        Test.iArrFld[(i19 >>> 1) % N] += i19;
        Test.instanceCount = (long)-38.57270;
        l += (long)f2;
        Test.iArrFld[(-5671 >>> 1) % N] -= i19;
        i19 -= (int)l;
        i19 = i19;
        Test.iArrFld[(i19 >>> 1) % N] -= -3;
        i19 *= (int)1.292F;
        for (i20 = 7; i20 < 254; ++i20) {
            i22 = 1;
            while (++i22 < 7) {
                Test.iArrFld[i22 + 1] &= i21;
                i21 = (int)Test.instanceCount;
            }
        }
        long meth_res = Float.floatToIntBits(f2) + l + i19 + i20 + i21 + i22;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=2.314F;
        int i1=121, i2=42091, i23=-45, i24=-12063, i25=7, i26=116;
        double d1=29.68329;
        byte by=9;

        Test.instanceCount -= (long)((-dMeth(true, f1)) - (~Math.abs(-36520)));
        for (i1 = 189; 4 < i1; --i1) {
            f1 += iMeth(f1, Test.instanceCount);
            i2 = i1;
            for (i23 = 8; i23 < 136; ++i23) {
                Test.iArrFld[i23 + 1] += i24;
                i2 = i2;
                d1 *= i23;
                i25 = 1;
                do {
                    short s1=-18672;
                    switch (((i24 >>> 1) % 6) + 96) {
                    case 96:
                        Test.fArrFld[i1 - 1] = by;
                        switch (((i25 % 5) * 5) + 120) {
                        case 139:
                            i24 *= i1;
                            Test.instanceCount += (((i25 * i25) + i2) - Test.instanceCount);
                            i26 += (i25 - i1);
                            break;
                        case 144:
                        case 135:
                        case 138:
                            s1 %= (short)(i24 | 1);
                            i26 <<= -8144;
                            f1 += (i25 - i23);
                            i24 += (int)(0.819F + (i25 * i25));
                            break;
                        case 142:
                            i24 *= 167;
                            i26 = 20977;
                            Test.instanceCount -= (long)d1;
                            break;
                        default:
                            Test.instanceCount = i24;
                        }
                        break;
                    case 97:
                        Test.iArrFld = Test.iArrFld;
                        i26 <<= (int)Test.instanceCount;
                        i2 += i2;
                    case 98:
                    case 99:
                        i26 -= 10;
                        break;
                    case 100:
                        i2 += i25;
                        i26 = i26;
                        i26 *= (int)-166L;
                    case 101:
                        i2 += i25;
                        break;
                    default:
                        lArrFld = lArrFld;
                    }
                } while (++i25 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
