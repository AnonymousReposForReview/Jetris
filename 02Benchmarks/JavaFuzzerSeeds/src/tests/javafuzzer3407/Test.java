package tests.javafuzzer3407;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:36:23 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1603368465L;
    public static double dFld=56.123306;
    public static byte byFld=-124;
    public static int iFld=-89;
    public static float fFld=-91.36F;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -134);
        FuzzerUtils.init(Test.fArrFld, 1.815F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(double d, int i11) {

        int i12=-8, i13=-1, i14=-41130;
        long l1=-180L;
        float f1=-2.721F;
        short s=-3656;
        double dArr[]=new double[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(dArr, -73.63257);
        FuzzerUtils.init(bArr, false);

        for (i12 = 9; i12 < 170; i12++) {
            Test.iArrFld[i12 - 1] *= -17415;
            Test.byFld *= (byte)-9;
            i14 = 1;
            do {
                Test.iArrFld[i12] >>= i13;
                Test.instanceCount = i12;
                l1 = i11;
                l1 <<= i13;
                Test.iFld += (int)f1;
                s ^= (short)i13;
                Test.iFld += (int)-79.80490;
                dArr[i12 + 1] *= 1L;
            } while (++i14 < 10);
            f1 = (float)122.51122;
            d -= i12;
            bArr = FuzzerUtils.boolean1array(N, (boolean)true);
        }
        long meth_res = Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + l1 + Float.floatToIntBits(f1) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6, float f, long l) {

        int i7=-18058, i8=-10, i9=38139, i10=41960, i15=-27739, i16=49077;
        short s1=-13812;

        Test.instanceCount = (i6--);
        for (i7 = 13; i7 < 351; ++i7) {
            for (i9 = i7; 5 > i9; i9++) {
                l += (((i9 * i8) + i7) - i7);
                i6 *= (int)(iMeth(-123.113348, -22712) * l);
            }
            i10 = i7;
            for (i15 = 1; i15 < 5; ++i15) {
                i8 -= i16;
                i6 -= i16;
                s1 = (short)i8;
                i6 = (int)l;
                Test.iArrFld = Test.iArrFld;
                Test.byFld += (byte)(-4 + (i15 * i15));
                i8 >>= i7;
                Test.iArrFld[i7] >>= (int)3466611720L;
            }
        }
        vMeth1_check_sum += i6 + Float.floatToIntBits(f) + l + i7 + i8 + i9 + i10 + i15 + i16 + s1;
    }

    public static void vMeth(int i, int i1) {

        int i2=253, i3=12, i4=-224, i5=-57, i17=48583, i18=6, iArr[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, 9);

        for (i2 = 6; i2 < 294; i2++) {
            i3 *= ((-(i1 / (i3 | 1))) * (iArr[i2 - 1]++));
            i1 = (int)(i1 - ((i1 + -9197) + (Test.dFld - i3)));
            i3 += (int)(i3 = (int)(iArr[i2 + 1] >>>= (int)(Test.instanceCount + -1674564595L)));
            for (i4 = i2; i4 < 6; ++i4) {
                vMeth1(Test.iFld, Test.fFld, Test.instanceCount);
                Test.fArrFld[i2 - 1] -= i4;
                Test.dFld = Test.iFld;
                i5 = i1;
                for (i17 = i2; i17 < 1; ++i17) {
                    if (b) {
                        Test.fArrFld[i4] -= i17;
                        iArr[i17] = i4;
                        Test.dFld = Test.dFld;
                    } else {
                        Test.iArrFld[i17 + 1] = i3;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i17 + i18 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        long l2=-13L;
        int i19=-242, i20=-11, i21=-130, i22=-10, i23=-56496, i24=-34074, i25=7, i26=-32859;

        vMeth(14, Test.iFld);
        Test.fFld -= Test.iFld;
        l2 = 1;
        while (++l2 < 305) {
            for (i19 = (int)(l2); i19 < 82; ++i19) {
                Test.iFld += i19;
                i20 = -24311;
                i20 -= i19;
                i20 += Test.iFld;
                Test.byFld = (byte)Test.iFld;
                Test.iFld = i20;
                Test.instanceCount = l2;
                i20 = (int)-1370203310L;
                if (true) {
                    i20 >>= -7;
                    for (i21 = 1; i21 < 1; i21++) {
                        i22 >>= Test.byFld;
                        i22 -= 129;
                        i22 = Test.iFld;
                        Test.iFld -= (int)Test.dFld;
                        i20 <<= i19;
                    }
                    for (i23 = 1; i23 < 1; i23++) {
                        Test.instanceCount = i23;
                        Test.instanceCount *= -14063;
                        i24 += Test.iFld;
                    }
                    for (i25 = 1; i25 < 1; i25++) {
                        i24 = 87;
                        Test.dFld += i23;
                    }
                } else {
                    Test.iFld += i19;
                }
            }
            Test.instanceCount = i21;
        }
        Test.fFld -= -22L;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
