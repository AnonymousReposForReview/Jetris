package tests.javafuzzer3275;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:32:02 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-5185L;
    public static short sFld=-25387;
    public float fFld=1.44F;
    public byte byFld=-86;
    public static volatile int iFld=3;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 84);
        FuzzerUtils.init(Test.lArrFld, -218L);
        FuzzerUtils.init(Test.lArrFld1, -2986481674563883966L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, long l1, long l2) {

        int i4=18153, i5=9;
        boolean b=true;
        float f=0.212F;

        i4 = 1;
        while (++i4 < 369) {
            switch ((i4 % 2) + 50) {
            case 50:
                if (b) break;
                if (b) break;
                break;
            case 51:
                i3 = i3;
                f += f;
                Test.lArrFld[i4 - 1][i4] = -18640;
                break;
            }
            if (i3 != 0) {
                vMeth2_check_sum += i3 + l1 + l2 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f) + i5;
                return;
            }
            if (b) break;
            Test.iArrFld = Test.iArrFld;
            i5 = 1;
            while (++i5 < 5) {
                if (b) break;
                i3 += (i5 | Test.sFld);
                i3 = i5;
                if (i3 != 0) {
                    vMeth2_check_sum += i3 + l1 + l2 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f) + i5;
                    return;
                }
            }
        }
        vMeth2_check_sum += i3 + l1 + l2 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f) + i5;
    }

    public static void vMeth1(int i2) {

        int i6=-82, i7=208, i8=65, i9=13, i10=34, i11=1, i12=56563;
        double d=0.57919;
        boolean b1=false;
        float f1=-2.999F;

        i2 *= -2;
        i2 -= (++i2);
        vMeth2(36548, Test.instanceCount, Test.instanceCount);
        for (i6 = 6; 320 > i6; i6++) {
            byte by=-97;
            i7 += i6;
            switch (((i6 >>> 1) % 8) + 17) {
            case 17:
                switch (((i6 % 7) * 5) + 9) {
                case 33:
                    for (i8 = 1; i8 < 5; ++i8) {
                        i2 &= 178;
                        if (i8 != 0) {
                            vMeth1_check_sum += i2 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 +
                                (b1 ? 1 : 0) + Float.floatToIntBits(f1);
                            return;
                        }
                    }
                    break;
                case 35:
                    for (i10 = 1; i10 < 5; i10++) {
                        i2 += (int)-41.423F;
                        Test.instanceCount -= i10;
                    }
                case 32:
                    i11 = (int)d;
                    by = (byte)i9;
                case 36:
                    i9 += i6;
                case 34:
                    i9 = -3;
                case 11:
                    i12 += -98;
                    break;
                case 14:
                    by *= by;
                    break;
                default:
                    i9 -= i11;
                }
                break;
            case 18:
                b1 = false;
                break;
            case 19:
                b1 = b1;
                break;
            case 20:
                f1 *= i2;
                break;
            case 21:
                f1 = i10;
                break;
            case 22:
            case 23:
                i12 -= (int)-1426351427L;
                break;
            case 24:
                by += (byte)i6;
                break;
            }
        }
        vMeth1_check_sum += i2 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f1);
    }

    public static void vMeth(long l, int i1) {

        int i13=-5;
        byte by1=30;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 134L);

        i1 = (int)(Integer.reverseBytes(i1) * lArr[(-8 >>> 1) % N]);
        vMeth1(i1);
        i13 = 1;
        while (++i13 < 342) {
            i1 <<= (int)Test.instanceCount;
        }
        l >>>= i1;
        by1 = (byte)l;
        vMeth_check_sum += l + i1 + i13 + by1 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=4, i15=0, i16=198, i17=144, i18=-14, i19=17345;
        boolean b2=false;
        float f2=-2.331F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-6);

        for (int i : Test.iArrFld) {
            vMeth(Test.instanceCount, i);
            fFld = i;
            Test.sFld &= (short)i;
            fFld += byFld;
            if (b2) {
                Test.instanceCount <<= i;
                Test.iArrFld = Test.iArrFld;
                i14 = 1;
                do {
                    for (i15 = 1; i15 < 1; ++i15) {
                        fFld += i14;
                        Test.instanceCount += (((i15 * i14) + Test.instanceCount) - i15);
                        i16 -= (int)Test.instanceCount;
                        Test.instanceCount = 2319;
                    }
                    i16 = i16;
                    Test.sFld >>= (short)i;
                    i += (i14 - i16);
                } while (++i14 < 63);
            } else {
                for (f2 = 63; 1 < f2; f2--) {
                    i -= i16;
                    i17 += (int)(f2 * f2);
                    Test.iArrFld[(int)(f2)] = i;
                    i17 = i16;
                    i17 <<= i;
                    Test.iFld |= i15;
                    i16 += (int)f2;
                }
                for (i18 = 1; i18 < 63; ++i18) {
                    byArr[i18 + 1] += (byte)9;
                    fFld = Test.instanceCount;
                }
            }
            i16 += (int)Test.instanceCount;
            byFld = (byte)-228;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
