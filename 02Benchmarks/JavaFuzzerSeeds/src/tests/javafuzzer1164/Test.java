package tests.javafuzzer1164;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:56:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6694630981482792966L;
    public float fFld=-2.692F;
    public static double dFld=0.60551;
    public static short sFld=19338;
    public boolean bFld=false;
    public int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by) {

        int i4=-186, i5=-52, iArr[]=new int[N];
        float f=-5.291F;
        double d2=125.80673;
        boolean b=true;

        FuzzerUtils.init(iArr, -14);

        for (i4 = 360; i4 > 19; i4 -= 3) {
            f = i4;
            Test.instanceCount += i4;
            Test.instanceCount += (i4 + Test.instanceCount);
            i5 -= i5;
            try {
                i5 = (-239 / i5);
                iArr[i4] = (1511083064 / i4);
                i5 = (i4 / i5);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount += (i4 + i5);
            d2 = i4;
            i5 *= i5;
            i5 *= (int)-2.21393;
            i5 &= -7;
        }
        d2 = Test.instanceCount;
        b = b;
        i5 >>= i5;
        f *= Test.instanceCount;
        vMeth1_check_sum += by + i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i3) {

        int i6=-171, i7=-149, i8=25186, i9=-13, i10=-57760, i11=-34453;
        boolean b1=false;
        short s1=-2525;

        vMeth1((byte)(97));
        i3 += -43;
        Test.dFld -= -13;
        for (i6 = 338; i6 > 19; i6 -= 3) {
            if (b1) break;
            s1 = (short)i3;
            Test.instanceCount = -93;
            for (i8 = 15; i8 > 1; --i8) {
                i9 += (i8 - i6);
                i3 = (int)Test.instanceCount;
                i9 += i6;
            }
            for (i10 = i6; i10 < 15; i10++) {
                i7 >>= (int)Test.instanceCount;
                Test.instanceCount = i8;
                i11 *= i10;
            }
        }
        vMeth_check_sum += i3 + i6 + i7 + (b1 ? 1 : 0) + s1 + i8 + i9 + i10 + i11;
    }

    public short sMeth(int i2, double d1, short s) {

        float f1=2.708F;
        int i12=-71, i13=-106, i14=0;
        boolean b2=true;

        i2 -= (i2++);
        iArrFld = (iArrFld = (iArrFld = (iArrFld = iArrFld)));
        fFld *= i2;
        Test.instanceCount <<= (Test.instanceCount--);
        vMeth(i2);
        f1 = 1;
        while (++f1 < 199) {
            i2 >>= (int)-8L;
            i2 -= -32716;
        }
        for (i12 = 4; i12 < 199; i12++) {
            i2 >>= (int)Test.instanceCount;
        }
        i13 = (int)-3038566956L;
        i14 = 1;
        while (++i14 < 349) {
            i2 *= i2;
            Test.instanceCount += (i14 * i14);
            if (b2) break;
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + s + Float.floatToIntBits(f1) + i12 + i13 + i14 + (b2 ? 1 :
            0);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=81.75861, dArr[]=new double[N];
        int i=-10, i1=-5, i15=2, i16=-4, i17=9, i18=-8, i19=0, i20=-18248, i21=0;
        byte by1=-122;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 68.14F);
        FuzzerUtils.init(dArr, 2.122595);

        d += (((219 + (++iArrFld[(i >>> 1) % N])) + (Test.instanceCount * i)) - Math.min(--i, iArrFld[(4 >>> 1) %
            N]--));
        i1 = 1;
        while (++i1 < 202) {
            iArrFld[i1 + 1] = (int)(((Test.instanceCount + i) % (sMeth(i, d, Test.sFld) | 1)) >> i);
        }
        fArr[(i >>> 1) % N] = i;
        d *= 14;
        for (i15 = 11; i15 < 183; i15++) {
            i16 += (int)Test.instanceCount;
            by1 <<= (byte)i1;
        }
        Test.instanceCount -= i1;
        i17 = 1;
        do {
            iArrFld[i17] = (int)3987936639L;
            Test.instanceCount += i;
            iArrFld[i17] -= i;
            i16 = (int)Test.instanceCount;
            iArrFld1[(i15 >>> 1) % N] += i1;
            if (bFld) {
                try {
                    iArrFld1[i17 + 1] = (43762 % i);
                    i = (-178 % i15);
                    i16 = (i16 % i15);
                } catch (ArithmeticException a_e) {}
                if (bFld) continue;
                fFld += i16;
            }
        } while (++i17 < 320);
        i16 += i1;
        for (i18 = 5; i18 < 121; i18 += 3) {
            i16 += (-84 + (i18 * i18));
            i16 += (int)fFld;
            if (bFld) {
                for (i20 = 123; i20 > 1; i20 -= 3) {
                    fFld = Test.instanceCount;
                    switch ((i18 % 2) + 56) {
                    case 56:
                        Test.instanceCount = by1;
                        dArr[i18] *= i16;
                        dArr[i20] += Test.instanceCount;
                        break;
                    case 57:
                        i21 += i15;
                        break;
                    default:
                        i21 -= i1;
                    }
                }
            } else if (bFld) {
                i = (int)Test.instanceCount;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
