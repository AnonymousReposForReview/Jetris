package tests.javafuzzer930;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:50:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2431195372L;
    public float fFld=0.322F;
    public static double dFld=2.32984;
    public static byte byFld=-1;
    public static short sFld=-13482;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -2.21056);
        FuzzerUtils.init(Test.iArrFld, -31);
        FuzzerUtils.init(Test.lArrFld, 247L);
        FuzzerUtils.init(Test.fArrFld, -123.989F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, float f) {

        int i9=3869, i10=31, i11=-50180, i12=232, i13=-19279, i14=-158;
        boolean b=true;

        for (i9 = 5; i9 < 297; ++i9) {
            for (i11 = i9; i11 < 6; i11++) {
                for (i13 = 1; 1 > i13; i13 += 3) {
                    f = -140L;
                    if (i9 != 0) {
                        vMeth1_check_sum += i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + i14 + (b ?
                            1 : 0);
                        return;
                    }
                    i12 >>= (int)Test.instanceCount;
                    switch (((i11 % 9) * 5) + 72) {
                    case 112:
                        f += i7;
                        i7 -= (int)43.515F;
                        i10 = i10;
                        i14 += (i13 | i10);
                        break;
                    case 78:
                        Test.dFld = i8;
                        i12 <<= -17128;
                        Test.instanceCount = i7;
                        break;
                    case 88:
                        i8 += (i13 * i13);
                    case 102:
                        Test.dArrFld[i9] = 13;
                        break;
                    case 117:
                        i14 += i12;
                        break;
                    case 82:
                        i10 = i10;
                    case 106:
                        i7 /= 25947;
                        break;
                    case 113:
                        i12 *= i11;
                        break;
                    case 111:
                        Test.byFld = (byte)i12;
                        break;
                    default:
                        b = b;
                    }
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0);
    }

    public static int iMeth(int i6) {

        int i15=-25464, i16=-147, i17=-23961, i18=10788, i19=150, i20=-5;

        vMeth1(i6, i6, 2.982F);
        i6 = (int)6592122353483367040L;
        for (i15 = 5; i15 < 170; ++i15) {
            Test.byFld += (byte)(((i15 * i15) + Test.instanceCount) - i15);
            Test.instanceCount = Test.instanceCount;
        }
        i16 += (int)148L;
        Test.iArrFld[(4 >>> 1) % N] = i16;
        i16 %= (int)(i6 | 1);
        for (i17 = 17; i17 < 302; i17++) {
            Test.lArrFld[i17 - 1] <<= i18;
            for (i19 = 1; 6 > i19; ++i19) {
                Test.instanceCount += (13178L + (i19 * i19));
                i20 = i17;
                i16 >>= Test.sFld;
                Test.fArrFld[i19 - 1] = i15;
            }
        }
        long meth_res = i6 + i15 + i16 + i17 + i18 + i19 + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1) {

        int i2=5166, i3=-90, i4=-49, i5=-13, i21=16864, i22=84, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -14);

        for (i2 = 377; i2 > 5; --i2) {
            i3 += (i2 + fFld);
            for (i4 = 1; i4 < 5; ++i4) {
                iArr[i2 + 1] += iMeth(i);
                i *= i3;
                i1 >>>= -29296;
                fFld -= Test.byFld;
                Test.byFld = (byte)i1;
                i += i4;
                for (i21 = 1; 2 > i21; i21++) {
                    if (true) continue;
                    Test.byFld >>= (byte)i3;
                    fFld += i3;
                    i = i21;
                    iArr[i2] += 187;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i21 + i22 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i23=6, i24=-14, i25=-86, i26=-231, i27=-171, i28=150, i29=9, i30=-176, i31=14, i32=-56380, i33=11;
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-30);

        vMeth(i23, i23);
        Test.instanceCount += -54261;
        for (i24 = 4; i24 < 290; ++i24) {
            for (i26 = 1; 88 > i26; ++i26) {
                fFld -= i26;
                fFld += (i26 * i26);
            }
            i23 *= (int)Test.instanceCount;
            i23 -= 65466;
            i25 = i26;
            Test.iArrFld = Test.iArrFld;
        }
        i28 = 1;
        do {
            Test.instanceCount <<= i24;
            b1 = b1;
        } while (++i28 < 207);
        for (i29 = 10; i29 < 393; ++i29) {
            fFld = i23;
            if (b1) break;
            Test.instanceCount = i27;
            for (i31 = 2; i31 < 66; ++i31) {
                i33 = 2;
                do {
                    switch ((i33 % 10) + 33) {
                    case 33:
                        fFld += 6;
                    case 34:
                        Test.instanceCount -= i32;
                        Test.iArrFld = Test.iArrFld;
                        fFld += (i33 - Test.instanceCount);
                        break;
                    case 35:
                        switch (((i33 % 5) * 5) + 52) {
                        case 72:
                            byArr[i33 - 1] >>= (byte)i24;
                            break;
                        case 73:
                            Test.byFld += (byte)(i33 * i33);
                            i25 >>>= (int)Test.instanceCount;
                            i30 = 65;
                            i27 = i32;
                            break;
                        case 66:
                            i30 = 63811;
                            break;
                        case 65:
                            if (false) continue;
                            break;
                        case 77:
                            i23 *= i26;
                            break;
                        }
                        break;
                    case 36:
                        i23 = (int)Test.instanceCount;
                        break;
                    case 37:
                        Test.iArrFld[i33 + 1] -= (int)Test.instanceCount;
                    case 38:
                        i27 ^= (int)Test.instanceCount;
                        break;
                    case 39:
                        i32 = 7;
                    case 40:
                        i27 >>= i27;
                        break;
                    case 41:
                        i23 -= i28;
                        break;
                    case 42:
                        i23 += (i33 | i27);
                    }
                } while ((i33 -= 3) > 0);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
