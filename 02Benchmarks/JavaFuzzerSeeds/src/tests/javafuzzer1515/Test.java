package tests.javafuzzer1515;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:56:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-246L;
    public static float fFld=-17.1000F;
    public int iArrFld[]=new int[N];

    public static long byMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i10, int i11) {

        int i12=-4, i13=-2, i14=14, i15=58950, i16=73, i17=28148, iArr[]=new int[N];
        byte by=-65;
        double d2=-104.108723;

        FuzzerUtils.init(iArr, 47980);

        for (i12 = 5; i12 < 213; i12++) {
            Test.fFld += i11;
        }
        for (i14 = 5; i14 < 339; i14++) {
            for (i16 = 1; i16 < 5; i16 += 2) {
                by = (byte)-137;
                i10 |= i16;
                Test.fFld += i14;
                Test.fFld += Test.instanceCount;
                iArr[i14 + 1] += (int)Test.instanceCount;
                d2 += Test.instanceCount;
                Test.instanceCount += i16;
                i17 -= i16;
                Test.instanceCount = i15;
            }
            iArr[i14] = (int)Test.instanceCount;
            i15 *= (int)Test.instanceCount;
        }
        long meth_res = i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + by + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i5, boolean b, double d1) {

        int i6=10415, i7=-8, i8=-3, i9=-7;

        Test.fFld = (i5--);
        for (i6 = 16; i6 < 300; i6++) {
            i7 += (((i6 * i5) + Test.instanceCount) - Test.instanceCount);
            for (i8 = 1; 6 > i8; i8++) {
                if (b) break;
                i5 &= iMeth1(16346, i9);
                i7 |= i6;
                b = b;
            }
        }
        long meth_res = i5 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static byte byMeth() {

        double d=1.24648;
        int i4=-59006, i18=-43, i19=3, i20=14, i21=5510, i22=-8613, i23=-8487, i24=41889, iArr1[]=new int[N];
        long l=-1446845658709341674L;
        boolean b1=false;

        FuzzerUtils.init(iArr1, 139);

        d *= (i4 * Math.abs(--i4));
        i4 &= (int)(iMeth(20125, true, d) ^ Test.instanceCount);
        for (i18 = 8; 140 > i18; ++i18) {
            i4 += (int)Test.instanceCount;
            iArr1 = iArr1;
            for (i20 = i18; i20 < 12; ++i20) {
                for (l = 1; 1 > l; l++) {
                    i4 += 10;
                }
                i19 -= -19363;
                i21 += (int)-199977332L;
            }
            if (b1) {
                try {
                    iArr1[i18] = (iArr1[i18] % 158);
                    i21 = (i22 / 45194);
                    i22 = (i21 / -41476);
                } catch (ArithmeticException a_e) {}
                for (i23 = 1; i23 < 12; ++i23) {
                    i19 += (int)d;
                }
            } else {
                d = d;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + i18 + i19 + i20 + i21 + l + i22 + i23 + i24 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=-16640;
        int i=-11, i1=254, i2=48517, i3=-137, i25=9, i26=-8, i27=0, i28=210, i29=-2, i30=169;
        double d3=-1.129140, dArr[]=new double[N];
        byte by1=-124;

        FuzzerUtils.init(dArr, 0.98219);

        s += (short)-2942735046L;
        for (i = 10; i < 233; i++) {
            for (i2 = 1; i2 < 113; ++i2) {
                i3 = (byMeth() * i);
                iArrFld[i + 1] += (int)Test.instanceCount;
                Test.fFld += i2;
                iArrFld[i2] = i;
                Test.fFld *= 44402;
            }
            i3 = -51545;
            iArrFld[i + 1] = (int)Test.instanceCount;
            i1 -= i2;
            for (i25 = 5; i25 < 113; ++i25) {
                for (i27 = 1; i27 < 2; i27++) {
                    i26 *= i26;
                    dArr[i - 1] += d3;
                    iArrFld[i] = -136;
                    i3 += (i27 | i);
                    iArrFld[i - 1] = (int)Test.fFld;
                }
                Test.instanceCount += -33831;
                i26 += (i25 * i25);
                for (i29 = 1; 2 > i29; i29++) {
                    Test.fFld -= by1;
                    i3 += -6;
                    i30 = i2;
                    i30 = i3;
                    i3 ^= -9;
                    i28 = (int)Test.instanceCount;
                    iArrFld[i29 - 1] = (int)d3;
                    i26 = (int)Test.instanceCount;
                    iArrFld[i - 1] *= (int)35101L;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  iMeth ->  iMeth byMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
