package tests.javafuzzer3060;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:21:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public long lFld=190L;
    public boolean bFld=false;
    public static double dFld=2.109170;
    public static int iFld=-150;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4) {

        int i5=1, i6=15601, i7=-46457, i8=24987, i9=-210, i10=83, i11=2;
        float f1=2.680F;
        double d=0.87583;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 6L);

        for (i5 = 19; i5 < 356; ++i5) {
            for (i7 = i5; 5 > i7; ++i7) {
                Test.instanceCount = i5;
                i4 = (int)Test.instanceCount;
                Test.instanceCount *= (long)f1;
                for (i9 = 1; i9 > i5; --i9) {
                    Test.iArrFld[i5 - 1][i5 + 1] = (int)Test.instanceCount;
                    i6 %= (int)(i7 | 1);
                }
                Test.instanceCount *= i9;
                Test.instanceCount = i5;
                Test.instanceCount = i4;
            }
        }
        for (long l : lArr1) {
            for (d = 1; d < 4; ++d) {
                f1 += (float)(d + i10);
                i4 += (int)d;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + Double.doubleToLongBits(d) + i11
            + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i3=-213;

        i3 += (int)(-((32.89151 * (71.969F + (Test.iArrFld[(i3 >>> 1) % N][(i3 >>> 1) % N] >>= i3))) * iMeth1(i3)));
        Test.instanceCount = Test.instanceCount;
        long meth_res = i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i1, int i2, boolean b) {

        float f=-1.739F;
        int i12=29813, i13=10, i14=9, i15=10, i16=241, i17=-198;
        double d1=-1.10610;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 26447L);

        i1 = (int)((i1 & (long)(f * i1)) * (iMeth() - i2));
        lArr2 = lArr2;
        for (i12 = 6; i12 < 280; i12 += 3) {
            for (i14 = 1; i14 < 17; ++i14) {
                i2 = (int)-4093L;
                i1 += i15;
                Test.iArrFld[i14 - 1][i12] = i2;
                for (i16 = 2; i16 > 1; --i16) {
                    if (b) {
                        i1 *= (int)d1;
                        f += ((long)i16 ^ (long)i13);
                        vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 +
                            i16 + i17 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr2);
                        return;
                    } else {
                        Test.iArrFld[i14 - 1][i12 - 1] -= (int)lFld;
                        i2 = i17;
                    }
                    i15 = (int)d1;
                    f *= i15;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-14057, i18=8, i19=-52632, i20=22553, i21=11, i22=224, i23=29206, i24=56508, i25=147;
        float f2=0.322F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 2.775F);
        FuzzerUtils.init(lArr, -44388L);

        fArr[(i >>> 1) % N] += (Test.instanceCount++);
        lArr[(i >>> 1) % N] = (-(i--));
        vMeth(i, 3058, bFld);
        i -= (int)Test.dFld;
        bFld = bFld;
        i *= (int)lFld;
        for (i18 = 235; i18 > 7; i18 -= 2) {
            i20 = 220;
            while ((i20 -= 2) > 0) {
                Test.iArrFld[i18 - 1][i20] -= (int)-42252L;
                i19 += i20;
                i19 = i20;
                lArr = lArr;
                i19 = i20;
                if (bFld) continue;
                i = 17;
                i19 += (i20 - i);
            }
            for (i21 = 12; i21 < 220; ++i21) {
                i19 *= 0;
                for (i23 = 1; i23 < 2; ++i23) {
                    bFld = true;
                    i22 *= (int)lFld;
                    i += 4868;
                    i += i18;
                    i19 += i;
                    i19 = i19;
                }
                i += i21;
                for (f2 = i21; f2 < 2; f2++) {
                    Test.iFld = (int)Test.dFld;
                    i *= Test.iFld;
                    i22 += (int)Test.instanceCount;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
