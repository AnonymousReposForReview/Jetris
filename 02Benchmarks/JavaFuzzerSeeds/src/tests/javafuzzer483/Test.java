package tests.javafuzzer483;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:33:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-150L;
    public static float fFld=-53.299F;
    public static double dFld=-1.71459;
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];
    public static volatile int iArrFld[]=new int[N];
    public int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -13L);
        FuzzerUtils.init(Test.byArrFld, (byte)-79);
        FuzzerUtils.init(Test.iArrFld, 7);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1, int i8, int i9) {

        int i10=37625, i11=12790, i12=-49, i13=-144, i14=-244, iArr[]=new int[N];
        double d=-2.2597;
        short s=-6056;
        float f1=-100.603F;

        FuzzerUtils.init(iArr, -176);

        for (i10 = 4; i10 < 326; ++i10) {
            d %= (i10 | 1);
            i8 += (45231 + (i10 * i10));
            Test.instanceCount += (i10 * i10);
        }
        Test.instanceCount += (long)33.514F;
        i11 = i9;
        iArr[(0 >>> 1) % N] = s;
        for (i12 = 18; i12 < 332; i12 += 2) {
            i11 -= -7;
        }
        f1 = 1;
        while (++f1 < 357) {
            i14 = 1;
            while (++i14 < 5) {
                i8 += -13;
                i8 -= 29108;
                Test.instanceCount += (((i14 * i9) + Test.instanceCount) - i13);
                iArr[i14] = 101;
            }
        }
        long meth_res = l1 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + s + i12 + i13 +
            Float.floatToIntBits(f1) + i14 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i15=45738, i16=82, i17=11, i18=6, i19=-54, i20=43138, i21=-7, i22=1;
        boolean b1=false;

        Test.fFld -= iMeth1(Test.instanceCount, i15, 53717);
        for (i16 = 5; 291 > i16; ++i16) {
            for (i18 = 6; i18 > 1; i18--) {
                for (i20 = 2; i20 > i18; i20--) {
                    i21 |= i20;
                    i15 += (-60119 + (i20 * i20));
                    i21 = i15;
                    Test.fFld -= 197;
                    i19 += i20;
                    Test.byArrFld[i20] += (byte)Test.instanceCount;
                }
                b1 = b1;
            }
            Test.iArrFld[i16] /= (int)(i21 | 1);
        }
        i19 = i18;
        i22 %= (int)983025943134488652L;
        i19 = i16;
        long meth_res = i15 + i16 + i17 + i18 + i19 + i20 + i21 + (b1 ? 1 : 0) + i22;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, boolean b) {

        int i1=35161, i2=10, i3=4, i4=-12, i5=29, i6=195, i7=14, i23=4, i24=-226;
        float f=101.71F;
        short s1=-22037;

        if (b) {
            i1 = -120;
            for (i2 = 333; 5 < i2; --i2) {
                for (i4 = 5; i4 > 1; i4 -= 2) {
                    i3 = (int)f;
                    for (i6 = i2; i6 < 3; i6 += 3) {
                        i3 %= (int)(((long)(((--i3) * (f * Test.instanceCount)) - (iMeth() - -25917))) | 1);
                        i1 >>= (int)208L;
                    }
                    i7 -= (int)l;
                    i7 >>= (int)l;
                }
                s1 = (short)i1;
                for (i23 = 1; i23 < 5; ++i23) {
                    if (b) break;
                    i5 = i3;
                    i24 += i23;
                }
            }
        } else if (b) {
            i24 = (int)Test.instanceCount;
        } else if (b) {
            Test.iArrFld[(-152 >>> 1) % N] += (int)Test.instanceCount;
        } else {
            i7 = (int)Test.instanceCount;
        }
        vMeth_check_sum += l + (b ? 1 : 0) + i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + s1 + i23 +
            i24;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i25=-231, i26=-35841, i27=35683, i28=-202, i29=56112, i30=4, i31=14, i32=-64285, i33=13, i34=207,
            i35=97, i36=-3903, i37=-145, i38=52535;
        boolean b2=false;
        byte by=-59;
        short s2=-6038;

        i = 1;
        do {
            vMeth(-2741685081L, b2);
            iArrFld1 = FuzzerUtils.int2array(N, (int)6);
        } while (++i < 266);
        for (i25 = 9; i25 < 300; ++i25) {
            i26 *= (int)Test.fFld;
            Test.instanceCount = Test.instanceCount;
            i26 -= (int)Test.dFld;
            for (i27 = 1; i27 < 86; i27++) {
                i29 = 1;
                while (++i29 < 2) {
                    Test.instanceCount >>= by;
                }
                if (b2) break;
                s2 += (short)i25;
                by -= (byte)Test.instanceCount;
            }
            b2 = b2;
            for (i30 = 86; 3 < i30; i30--) {
                Test.instanceCount = by;
            }
        }
        Test.lArrFld[(i28 >>> 1) % N] >>= 9;
        Test.iArrFld[(i29 >>> 1) % N] = (int)Test.fFld;
        Test.lArrFld[(i28 >>> 1) % N] += i28;
        for (i32 = 237; i32 > 5; --i32) {
            Test.instanceCount >>= Test.instanceCount;
            for (i34 = 2; i34 < 108; i34++) {
                Test.instanceCount += (i34 ^ i30);
            }
            i28 &= i35;
            i36 = 1;
            do {
                i33 += (((i36 * i32) + i32) - i32);
            } while (++i36 < 108);
            for (i37 = i32; 108 > i37; i37++) {
                Test.fFld -= Test.instanceCount;
                i26 <<= (int)Test.instanceCount;
                i26 /= -100;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
