package tests.javafuzzer636;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:08:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-203L;
    public static int iFld=2;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 4);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9, double d, long l) {

        float f1=114.262F;
        int i10=0, i11=33181, i12=-139, i13=-20518, i14=-5;
        boolean b=false;

        f1 = i9;
        Test.instanceCount -= i9;
        i10 = 1;
        while (++i10 < 385) {
            for (i11 = 1; i11 < 4; ++i11) {
                Test.iArrFld[i10 - 1] += i9;
                Test.instanceCount += i11;
                i12 = i10;
                i9 += (int)-103.43018;
                i12 = i9;
                switch ((i11 % 2) + 73) {
                case 73:
                    for (i13 = 1; i13 < 2; ++i13) {
                        i9 += (int)(21790L + (i13 * i13));
                        i9 -= -125;
                        f1 = -4999092453796672149L;
                        if (b) continue;
                    }
                    break;
                case 74:
                    l = i14;
                }
            }
        }
        long meth_res = i9 + Double.doubleToLongBits(d) + l + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 +
            (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i5=42326, i6=-80, i7=9150, i8=7510, i15=-131, i16=30794, i17=5;
        float f=-89.189F;
        double d1=-127.115031, dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, -2.91249);

        for (i5 = 19; i5 < 334; i5 += 3) {
            i6 -= (i6 * ((--Test.iArrFld[i5 - 1]) - (i6 + i6)));
            for (i7 = 1; i7 < 15; i7++) {
                switch (((i7 % 2) * 5) + 63) {
                case 69:
                    Test.instanceCount += (i7 * i7);
                    f += Integer.reverseBytes(iMeth(i7, d1, Test.instanceCount));
                    dArr[i5 + 1][i5] = i8;
                    break;
                case 68:
                    i15 = 1;
                    do {
                        if (i15 != 0) {
                        }
                    } while (++i15 < 2);
                    i8 -= (int)Test.instanceCount;
                    Test.iArrFld[i5 + 1] >>= i15;
                    for (i16 = 2; i16 > i7; i16--) {
                        Test.instanceCount += (long)f;
                        Test.iArrFld[i16] += (int)f;
                        i6 *= i7;
                    }
                default:
                    Test.iArrFld[i5] += i16;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i) {

        int i2=9, i3=-8, i4=-190, i18=-164, i19=-1, i20=-50897, i21=-55802, iArr[]=new int[N];
        short s=1763;
        boolean b1=false;
        byte by=18;
        float f2=26.740F;

        FuzzerUtils.init(iArr, -93);

        for (int i1 : iArr) {
            try {
                i = (59 % iArr[(i >>> 1) % N]);
                i = (9426 % i1);
                i = (i1 % -2048369270);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount = (i1++);
            for (i2 = 1; i2 < 4; i2++) {
                i += (-19692 + (i2 * i2));
                if ((Test.instanceCount++) < (++s)) continue;
            }
        }
        i4 = 1;
        do {
            i3 += (2645 + (i4 * i4));
            i = (int)((i + lMeth()) * i3);
            switch ((i4 % 8) + 32) {
            case 32:
                for (i18 = 1; i18 < 5; i18 += 3) {
                    i3 <<= i19;
                    for (i20 = 1; i20 < 5; i20 += 2) {
                        if (b1) continue;
                        i3 += -204;
                    }
                }
                break;
            case 33:
                Test.instanceCount = i2;
            case 34:
                i >>= i3;
                break;
            case 35:
                i21 = 110;
            case 36:
                i21 += i21;
                break;
            case 37:
                i19 += (int)Test.instanceCount;
            case 38:
                by = (byte)Test.instanceCount;
                break;
            case 39:
                i3 += (i4 * i4);
                break;
            default:
                i3 += (i4 | (long)f2);
            }
        } while (++i4 < 337);
        vMeth_check_sum += i + i2 + i3 + s + i4 + i18 + i19 + i20 + i21 + (b1 ? 1 : 0) + by + Float.floatToIntBits(f2)
            + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.iFld);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
