package tests.javafuzzer5;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-189L;
    public byte byFld=61;
    public static short sFld=5175;
    public long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -137);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1) {

        int i10=147;

        i10 -= i10;
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i10;
    }

    public static void vMeth() {

        int i5=15704, i6=12724, i7=13, i8=-9, i9=-34031, iArr[]=new int[N];
        double d=2.62733;
        float f1=-2.45F;

        FuzzerUtils.init(iArr, -13);

        i5 += (int)Test.instanceCount;
        for (i6 = 6; i6 < 271; i6++) {
            Test.instanceCount <<= ((Math.abs(37763L) - (i7 * i5)) + i7);
            i7 = i5;
            i8 = 1;
            do {
                for (d = i6; d < 1; d++) {
                    i9 += (int)(d * d);
                    vMeth1(d);
                    i7 += (int)46L;
                    i7 += 4084;
                    Test.instanceCount *= (long)d;
                    i7 += (int)Test.instanceCount;
                }
                Test.instanceCount += (i8 | (long)f1);
                i9 -= i6;
                try {
                    i7 = (i6 % 39);
                    i5 = (i8 / i5);
                    i9 = (iArr[i6] % 15783);
                } catch (ArithmeticException a_e) {}
            } while (++i8 < 6);
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + i9 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(float f, long l) {

        int i11=-10, i12=-187, i13=35, i14=-32832, i15=-60892;
        long l1=2359109347L, lArr[]=new long[N];
        short s=-16898;
        double d2=-1.87512;
        boolean b1=false;

        FuzzerUtils.init(lArr, -5255612321522529991L);

        vMeth();
        if (b1) {
            for (i11 = 4; i11 < 222; ++i11) {
                lArr[i11] = l;
                for (l1 = 1; l1 < 7; l1++) {
                    boolean b=false;
                    i13 >>= i11;
                    l = i11;
                    i12 += (int)(((l1 * i12) + i11) - i12);
                    l = (long)f;
                    for (i14 = 1; i14 < 2; i14++) {
                        i15 <<= (int)l;
                        f += (((i14 * Test.instanceCount) + i15) - l);
                        s = (short)l1;
                    }
                    if (b) continue;
                }
                i15 *= (int)d2;
            }
        } else {
            Test.instanceCount = i13;
        }
        long meth_res = Float.floatToIntBits(f) + l + i11 + i12 + l1 + i13 + i14 + i15 + s +
            Double.doubleToLongBits(d2) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-38013, i1=-24256, i2=-3, i3=6, i4=-22, i16=-41338, i17=-9, i18=-7, i20=-88, i21=2, i22=44257;
        float f2=-3.442F;

        i = 1;
        while (++i < 201) {
            i1 = 1;
            do {
                Test.instanceCount += ((-(++i2)) - (-(Test.instanceCount + i)));
                i2 = Integer.reverseBytes(Integer.reverseBytes((int)(i + 84.113957)));
                for (i3 = 1; i3 < 1; ++i3) {
                    i4 <<= (int)((Long.reverseBytes(Test.instanceCount) + (byFld * Test.instanceCount)) % (lArrFld[i3 +
                        1] | 1));
                    i2 -= ((-i2) - i1);
                    if (lMeth(f2, Test.instanceCount) <= Test.instanceCount) continue;
                    i2 = i3;
                    byFld >>= (byte)Test.instanceCount;
                    Test.iArrFld[i1] = i3;
                    f2 = Test.instanceCount;
                    i4 = (int)61456L;
                }
                i4 <<= i1;
                for (i16 = 1; i16 < 1; i16++) {
                    i2 >>= (int)Test.instanceCount;
                }
            } while (++i1 < 125);
        }
        i18 = 339;
        while (--i18 > 0) {
            i2 = i4;
            i2 *= (int)f2;
            f2 += i18;
            for (i20 = 1; 74 > i20; i20++) {
                i17 = i4;
            }
        }
        i22 = 1;
        while (++i22 < 257) {
            boolean b2=false;
            if (b2) continue;
            i17 += i22;
            Test.sFld += (short)(i22 * i22);
            Test.sFld = (short)i2;
        }
        i17 = i16;
        Test.instanceCount = i18;
        Test.instanceCount >>= i;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
