package tests.javafuzzer2863;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:44:23 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-43L;
    public static volatile short sFld=31692;
    public static boolean bFld=true;
    public static byte byFld=71;
    public static byte byArrFld[]=new byte[N];
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)76);
        FuzzerUtils.init(Test.dArrFld, 100.63733);
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=7, i7=-196, i8=-14, i9=-101, i10=-26713, i11=13, i12=2, iArr[]=new int[N];
        double d1=27.20289;
        float f2=0.969F;
        byte by=-63;

        FuzzerUtils.init(iArr, 167);

        i6 += i6;
        if (Test.bFld) {
            d1 *= Test.instanceCount;
            Test.instanceCount /= 50974;
        } else if (Test.bFld) {
            for (i7 = 247; i7 > 2; --i7) {
                iArr[i7] += i8;
                Test.instanceCount += (i7 * i7);
                i8 = (int)Test.instanceCount;
                for (i9 = 1; 7 > i9; ++i9) {
                    f2 *= -78;
                    for (i11 = 1; 2 > i11; ++i11) {
                        f2 += (((i11 * i7) + Test.instanceCount) - i11);
                        f2 -= i10;
                        by <<= (byte)i7;
                        by *= (byte)i6;
                    }
                }
            }
        } else if (Test.bFld) {
            f2 += i7;
        }
        vMeth2_check_sum += i6 + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 +
            i12 + by + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l1) {

        int i5=3, i13=0, i14=-104;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)-21886);

        i5 += i5;
        i5 -= i5;
        vMeth2();
        for (double d2 : Test.dArrFld) {
            float f3=-1.814F;
            f3 = l1;
            i5 = i5;
            Test.instanceCount = i5;
            sArr[(i5 >>> 1) % N] = sArr[(-211 >>> 1) % N];
            for (i13 = 1; 4 > i13; i13 += 2) {
                l1 *= (long)f3;
                i14 -= -40330;
                f3 += (float)d2;
                i14 = (int)Test.instanceCount;
                i5 = (int)f3;
                Test.iArrFld[i13] <<= i14;
            }
        }
        vMeth1_check_sum += l1 + i5 + i13 + i14 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i4, float f1, long l) {

        int i15=16845, i16=-211, i17=195, i18=-152, i19=2656, i20=-144, i21=41946, i22=1070, i23=-160, i24=60809, i25=2;
        double d3=-2.14573;
        boolean b=false;

        vMeth1(Test.instanceCount);
        for (i15 = 6; 363 > i15; i15++) {
            for (i17 = 5; i17 > 1; i17 -= 2) {
                for (i19 = 1; i19 < 3; ++i19) {
                    i16 += i19;
                    Test.instanceCount &= 25105;
                }
            }
            i18 *= i19;
            if (b) {
                i16 -= i15;
                for (i21 = 1; i21 < 5; ++i21) {
                    i22 = i22;
                    for (i23 = i15; i23 < 2; i23++) {
                        i24 += (int)d3;
                        d3 -= f1;
                        Test.sFld = (short)i25;
                    }
                }
            } else {
                Test.iArrFld[i15 + 1] -= i24;
            }
        }
        vMeth_check_sum += i4 + Float.floatToIntBits(f1) + l + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 +
            i24 + Double.doubleToLongBits(d3) + i25 + (b ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=-32445, i1=44495, i2=64297, i3=-14, i26=3, i27=117, i28=-206, iArr1[][]=new int[N][N];
        double d=0.110117;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -373428891177684010L);
        FuzzerUtils.init(iArr1, 8);

        for (i = 7; 308 > i; i++) {
            for (i2 = 2; i2 < 84; i2++) {
                float f=-1.266F;
                f *= (i2 - ((-43636 - (i2 >>> Test.instanceCount)) + (-(Test.sFld - i))));
                switch (((i2 % 4) * 5) + 30) {
                case 47:
                    Test.byArrFld[i] <<= (byte)(2561053145372826209L * (Test.instanceCount - (d = i2)));
                    vMeth(i, f, Test.instanceCount);
                    i1 += i2;
                    i1 <<= i1;
                    break;
                case 31:
                    Test.iArrFld[i + 1] += (int)Test.instanceCount;
                    i1 |= i26;
                    Test.iArrFld[i] <<= (int)58L;
                    break;
                case 49:
                    d -= i1;
                    break;
                case 34:
                    i27 = 1;
                    do {
                        lArr[i27 - 1] = i26;
                        lArr[i2] = i28;
                        i1 = i2;
                        Test.iArrFld[i2] = 69;
                        iArr1[i - 1][i2 + 1] = -3864;
                        i1 |= (int)Test.instanceCount;
                        i3 = i28;
                        Test.byFld = (byte)i26;
                        i3 %= (int)(i | 1);
                        switch ((((i26 >>> 1) % 7) * 5) + 82) {
                        case 100:
                        case 114:
                        case 90:
                            if (Test.bFld) break;
                            i3 = (int)Test.instanceCount;
                            break;
                        case 111:
                            Test.instanceCount += (i27 * i3);
                            Test.byFld += (byte)-79.26F;
                            break;
                        case 84:
                            i26 %= -5;
                            iArr1[i2][i27 - 1] = (int)8587100069383674511L;
                            break;
                        case 91:
                            i28 += (i27 + i2);
                            break;
                        case 86:
                            i3 &= (int)Test.instanceCount;
                        }
                    } while (++i27 < 2);
                    break;
                default:
                    Test.instanceCount -= i26;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
