package tests.javafuzzer1416;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:59:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static double dFld=-92.29536;
    public static boolean bFld=true;
    public short sFld=-12880;
    public static volatile long lFld=-1834768484L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -64110);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5, double d) {


        i4 = (int)d;
        vMeth2_check_sum += i4 + i5 + Double.doubleToLongBits(d);
    }

    public static void vMeth1() {

        int i2=-3, i3=-36216, i6=20554, i7=8, i8=32322, i9=13, i10=194, i11=-15131;
        boolean b=false;

        for (i2 = 1; i2 < 139; ++i2) {
            vMeth2(i3, i3, Test.dFld);
            i3 += (((i2 * i3) + i2) - Test.instanceCount);
            Test.instanceCount += i3;
            for (i6 = 1; i6 < 11; i6++) {
                i3 >>= i2;
            }
            if (false) {
                i7 += (((i2 * Test.instanceCount) + Test.instanceCount) - i3);
            } else if (b) {
                Test.instanceCount <<= 15101;
                for (i8 = 1; i8 < 11; ++i8) {
                    Test.iArrFld[i8 + 1] += i6;
                    i7 *= i3;
                    for (i10 = 1; i10 < 2; ++i10) {
                        Test.iArrFld[i8 + 1] ^= (int)Test.instanceCount;
                        i9 = i9;
                    }
                }
            } else if (b) {
            } else {
                Test.dFld = i9;
            }
        }
        vMeth1_check_sum += i2 + i3 + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0);
    }

    public static void vMeth() {

        short s=-15340;
        int i=49870, i1=11, i12=6, i13=23016, i14=164;
        float f=2.792F;
        byte by=66;

        s = (short)((++i) * i);
        for (f = 11; f < 187; f++) {
            Test.instanceCount *= ((-(by - i1)) + (--Test.instanceCount));
            vMeth1();
            i1 *= -10;
            i1 = (int)f;
            i += (int)f;
            for (i12 = 1; i12 < 9; i12++) {
                i1 ^= i12;
                Test.iArrFld[i12 + 1] = (int)f;
            }
            i14 = 1;
            while (++i14 < 9) {
                Test.iArrFld[(int)(f + 1)] = i1;
                if (Test.bFld) continue;
                i13 <<= (int)7L;
            }
            Test.dFld = Test.dFld;
        }
        vMeth_check_sum += s + i + Float.floatToIntBits(f) + i1 + by + i12 + i13 + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=132, i16=-113, i17=154, i18=105, i19=-4662, i20=-42056, i21=17, i22=6, iArr[]=new int[N];
        byte by1=-59, byArr[]=new byte[N];
        float f1=-2.894F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 8567L);
        FuzzerUtils.init(iArr, 188);
        FuzzerUtils.init(byArr, (byte)-2);

        vMeth();
        for (i15 = 5; i15 < 141; i15++) {
            if (Test.bFld) {
                i17 = 184;
                while ((i17 -= 2) > 0) {
                    i16 >>= -12;
                    for (i18 = 1; i18 < 2; ++i18) {
                        i16 += (((i18 * i20) + by1) - sFld);
                        lArr = lArr;
                        switch ((((i19 >>> 1) % 1) * 5) + 71) {
                        case 72:
                        }
                        f1 += f1;
                        i20 &= i20;
                        Test.instanceCount -= Test.instanceCount;
                        i19 -= i19;
                        Test.iArrFld = iArr;
                    }
                    for (i21 = 1; i21 < 2; i21++) {
                        int i23=-187;
                        f1 += (i21 - i20);
                        i16 = (int)Test.dFld;
                        lArr[i17][i21] -= 5;
                        sFld = (short)i19;
                        Test.instanceCount = -36;
                        switch (((i15 % 4) * 5) + 114) {
                        case 131:
                            Test.instanceCount += (i21 * Test.instanceCount);
                            break;
                        case 124:
                            if (Test.bFld) continue;
                            iArr[i15] <<= -6545;
                            switch (((i16 >>> 1) % 8) + 12) {
                            case 12:
                                switch (((i21 % 4) * 5) + 5) {
                                case 25:
                                    Test.bFld = Test.bFld;
                                    Test.dFld = 62015;
                                    i20 >>= (int)Test.lFld;
                                    break;
                                case 15:
                                    Test.iArrFld[i15] = -44927;
                                    break;
                                case 20:
                                    i19 = i18;
                                    break;
                                case 7:
                                    i20 >>= i18;
                                    break;
                                default:
                                    Test.lFld >>= i18;
                                }
                                break;
                            case 13:
                                i16 = i20;
                                break;
                            case 14:
                                lArr[i15 + 1][i21 - 1] *= (long)f1;
                                break;
                            case 15:
                                i22 ^= i23;
                                break;
                            case 16:
                                i19 -= i16;
                                break;
                            case 17:
                                Test.instanceCount += i21;
                                break;
                            case 18:
                                i16 >>= 10555;
                                break;
                            case 19:
                                Test.instanceCount = i18;
                            }
                            break;
                        case 115:
                            Test.iArrFld[i15 + 1] *= i16;
                            break;
                        case 116:
                            Test.iArrFld[i15] -= i22;
                        default:
                            Test.dFld = Test.instanceCount;
                        }
                    }
                }
            } else if (Test.bFld) {
                byArr[i15 + 1] *= (byte)i20;
            } else {
                i20 -= i22;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
