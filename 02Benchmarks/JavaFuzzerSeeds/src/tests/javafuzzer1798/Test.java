package tests.javafuzzer1798;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:24:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-20642L;
    public static double dFld=10.104613;
    public static short sFld=-5124;
    public long lFld=4L;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 237L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f=0.172F, f1=-63.911F;
        int i=-24103, i1=-30890, i2=33, i3=46499, i4=-10;
        long l1=33056L;
        boolean b1=false;

        f = 1;
        do {
            i += (int)(((f * i) + i) - i);
            i *= i;
            f1 += (f * f);
            i += (int)(f * f);
            Test.lArrFld[(int)(f + 1)] = i;
            i = i;
            switch (((42 >>> 1) % 6) + 80) {
            case 80:
                for (i1 = 1; 8 > i1; ++i1) {
                    for (i3 = 1; i3 < 2; i3++) {
                        i2 = i3;
                        i4 <<= (int)-739361900L;
                        Test.instanceCount |= i;
                    }
                }
                l1 = i3;
                l1 -= (long)Test.dFld;
                break;
            case 81:
                i2 <<= Test.sFld;
            case 82:
                i += (int)(f + i);
                break;
            case 83:
                i2 += (int)(f * Test.instanceCount);
                break;
            case 84:
                if (b1) break;
                break;
            case 85:
                Test.dFld -= i;
                break;
            }
        } while (++f < 206);
        vMeth2_check_sum += Float.floatToIntBits(f) + i + Float.floatToIntBits(f1) + i1 + i2 + i3 + i4 + l1 + (b1 ? 1 :
            0);
    }

    public void vMeth1(long l, boolean b) {

        int i5=-10, i6=-2, i7=-41659, i8=6, i9=-18999, iArr[]=new int[N];
        float f2=97.474F;
        long l2=180L;
        byte by=-108;

        FuzzerUtils.init(iArr, 0);

        vMeth2();
        i5 += i5;
        f2 = 1;
        do {
            i5 += (int)f2;
            i6 = 1;
            while (++i6 < 5) {
                Test.dFld += Test.instanceCount;
            }
            i7 = 1;
            while (++i7 < 5) {
                l2 >>= 11335L;
                iArr[(int)(f2 - 1)] = (int)Test.dFld;
                l -= i6;
                l2 -= (long)Test.dFld;
                for (i8 = 1; 1 > i8; i8++) {
                    i9 <<= i9;
                    by = (byte)f2;
                }
            }
        } while (++f2 < 339);
        i5 = i7;
        vMeth1_check_sum += l + (b ? 1 : 0) + i5 + Float.floatToIntBits(f2) + i6 + i7 + l2 + i8 + i9 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(short s) {

        boolean b2=false;
        double d=-30.118045, d1=-12.63338;
        int i10=-3, i11=9, i12=20871, i13=-43499, i14=8;
        float f3=-1.679F;

        vMeth1(103338288566810846L, b2);
        for (d = 7; 284 > d; ++d) {
            i10 += (int)d;
            i10 += (int)(((d * Test.instanceCount) + i10) - i10);
            for (i11 = 6; i11 > 1; --i11) {
                for (d1 = 1; d1 < 2; ++d1) {
                    i10 += (int)(((d1 * f3) + Test.instanceCount) - i11);
                    i10 = i10;
                    i10 = i14;
                    if (b2) {
                        Test.instanceCount += (long)f3;
                        f3 += (float)(((d1 * lFld) + i10) - i10);
                        i12 += (int)-72L;
                        f3 += f3;
                        vMeth_check_sum += s + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i10 + i11 + i12 +
                            Double.doubleToLongBits(d1) + i13 + Float.floatToIntBits(f3) + i14;
                        return;
                    } else if (b2) {
                        i10 += (int)((long)d1 | Test.instanceCount);
                    } else {
                        lFld += (long)d1;
                    }
                }
            }
        }
        vMeth_check_sum += s + (b2 ? 1 : 0) + Double.doubleToLongBits(d) + i10 + i11 + i12 +
            Double.doubleToLongBits(d1) + i13 + Float.floatToIntBits(f3) + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=225, i16=135, i17=37650, i18=-135, i19=170, i20=151, i21=62476, i22=-55975, i23=42753, i24=198,
            i25=-233, i26=-10275, iArr1[]=new int[N];
        float f4=-116.8F;
        boolean b3=true;
        byte by1=-60;

        FuzzerUtils.init(iArr1, -40435);

        vMeth(Test.sFld);
        i15 += (int)Test.instanceCount;
        i15 += (int)f4;
        for (i16 = 7; i16 < 312; i16++) {
            switch ((i16 % 3) + 79) {
            case 79:
                for (i18 = 3; 82 > i18; i18 += 3) {
                    for (i21 = 4; i21 > 1; i21--) {
                        i15 += (i21 - i15);
                        b3 = b3;
                        i22 += (((i21 * by1) + i15) - i15);
                        i17 *= 26231;
                    }
                    if (b3) continue;
                    Test.lArrFld[i16 - 1] = i22;
                    lFld = Test.sFld;
                    i17 = i18;
                    i15 >>>= 12;
                }
                break;
            case 80:
                for (i23 = 2; i23 < 82; ++i23) {
                    iArr1 = iArr1;
                    by1 = (byte)Test.dFld;
                    i19 = i23;
                    for (i25 = i16; i25 < 2; i25++) {
                        Test.lArrFld[i23] *= (long)Test.dFld;
                        i26 += (i25 * i25);
                        i24 += (i25 + i21);
                        iArr1[i25] = i23;
                        i15 -= i23;
                        lFld = -132;
                    }
                    Test.sFld = (short)i22;
                }
                i20 = i18;
                break;
            case 81:
            default:
                i22 *= Test.sFld;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
