package tests.javafuzzer1634;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:32:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5529129745848636969L;
    public static byte byFld=-23;
    public int iFld=507;
    public static short sFld=5514;
    public double dFld=1.97192;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -140);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        short s=-5522;
        int i4=-160, i5=-13, i6=-4973, i7=-2773, i8=22, i9=-33031, i10=13, i11=-14;
        float f=0.325F;
        boolean b=false;

        s *= (short)i4;
        i4 -= i4;
        for (i5 = 15; i5 < 289; i5 += 2) {
            i6 = 9;
        }
        i7 = 1;
        do {
            try {
                i4 = (6 % i5);
                i4 = (-157 % i6);
                i6 = (i7 % i6);
            } catch (ArithmeticException a_e) {}
            for (i8 = 1; i8 < 14; i8++) {
                for (i10 = i7; i10 < 2; ++i10) {
                    s *= (short)f;
                    i6 ^= Test.byFld;
                    i4 = i10;
                    i11 -= i10;
                    if (b) continue;
                    i4 <<= i6;
                    i9 = i7;
                }
            }
        } while ((i7 += 2) < 224);
        vMeth1_check_sum += s + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + (b ? 1 : 0);
    }

    public static int iMeth(int i1, int i2, int i3) {


        vMeth1();
        long meth_res = i1 + i2 + i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i12=-3067, i13=82, i14=-1, i15=169, i16=26862, i17=-53, i18=-2;
        float f1=1.576F;
        double d=102.116459;
        boolean b1=true;

        i -= Math.max(iMeth(i, i, i), 165);
        for (i12 = 8; i12 < 343; i12++) {
            for (f1 = 1; 5 > f1; ++f1) {
                if (i13 != 0) {
                    vMeth_check_sum += i + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + i16 +
                        Double.doubleToLongBits(d) + i17 + i18 + (b1 ? 1 : 0);
                    return;
                }
                for (i15 = 1; i15 < 2; ++i15) {
                    float f2=0.154F;
                    Test.iArrFld[i15] += i;
                    i13 <<= 2;
                    f2 -= i12;
                }
                for (d = 1; d < 2; ++d) {
                    i17 >>= i14;
                    i16 %= (int)(i16 | 1);
                }
                Test.instanceCount = i;
                i18 = 1;
                do {
                    Test.instanceCount = i16;
                    b1 = true;
                } while (++i18 < 2);
            }
        }
        vMeth_check_sum += i + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + i16 + Double.doubleToLongBits(d) +
            i17 + i18 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        float f3=0.967F, f4=50.510F;
        int i20=0, i21=9, i22=3, i23=-7, i24=25881, i25=246, i26=-57, i27=-154, i28=-1798;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12L);

        vMeth(iFld);
        f3 += Test.instanceCount;
        for (int i19 : Test.iArrFld) {
            i20 = 1;
            do {
                iFld = i20;
                Test.byFld += (byte)(((i20 * f3) + Test.sFld) - i19);
                Test.instanceCount &= i19;
                f3 -= i20;
                i19 = i20;
                dFld = i19;
                Test.instanceCount = Test.instanceCount;
                i19 *= iFld;
            } while (++i20 < 63);
            iFld -= i20;
            iFld -= i19;
        }
        for (i21 = 5; i21 < 398; i21++) {
            i23 -= (int)Test.instanceCount;
            f3 = f3;
            i23 = iFld;
            if (b2) {
                for (i24 = i21; i24 < 64; i24++) {
                    if (true) break;
                    i22 += (i24 ^ i25);
                    Test.sFld *= (short)i23;
                }
                lArr[i21 + 1] -= i24;
                i22 *= i21;
            } else if (b2) {
                iFld = i21;
                for (f4 = 1; f4 < 64; f4++) {
                    for (i27 = i21; i27 < 2; ++i27) {
                        i22 >>= i25;
                        i28 >>= (int)Test.instanceCount;
                    }
                }
            } else if (b2) {
                i22 -= (int)dFld;
            } else {
                i25 = (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
