package tests.javafuzzer3112;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:55:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-122L;
    public static float fFld=2.364F;
    public static boolean bFld=false;
    public int iFld=-36532;
    public volatile double dFld=-73.78386;
    public static short sFld=13154;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 97);
        FuzzerUtils.init(Test.fArrFld, 90.156F);
        FuzzerUtils.init(Test.lArrFld, -11L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        float f1=0.652F;
        int i7=9, i8=-61842, i9=5, i10=-105, i11=-133, i12=-50865;
        double dArr[][]=new double[N][N];
        short sArr[]=new short[N];

        FuzzerUtils.init(dArr, 0.99558);
        FuzzerUtils.init(sArr, (short)29190);

        f1 = i5;
        i5 -= i5;
        for (i7 = 13; i7 < 369; ++i7) {
            switch ((i7 % 2) + 56) {
            case 56:
                dArr[i7 - 1][i7] = 1;
                sArr[i7] += (short)f1;
                i8 += (i7 - Test.instanceCount);
            case 57:
                for (i9 = 1; i9 < 5; i9++) {
                    Test.iArrFld[i9 + 1] = (int)1.7037;
                    if (i8 != 0) {
                        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 + i12 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
                        return;
                    }
                    for (i11 = 1; i11 < 2; ++i11) {
                        Test.iArrFld = Test.iArrFld;
                        Test.instanceCount >>>= i9;
                        i6 = i11;
                        i10 += (((i11 * i8) + i6) - i8);
                    }
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1() {

        int i3=2351, i4=9;
        boolean b=true;
        byte by=-93;
        long l1=563657862L;

        for (i3 = 4; i3 < 176; i3++) {
            vMeth2(i4, i3);
            if (b) break;
            by = (byte)Test.instanceCount;
            switch (((-21118 >>> 1) % 5) + 111) {
            case 111:
                l1 = 1;
                while (++l1 < 9) {
                    if (b) continue;
                    Test.fFld += (((l1 * l1) + i3) - Test.instanceCount);
                    Test.instanceCount *= i4;
                    Test.instanceCount += l1;
                    i4 *= 33987;
                    Test.iArrFld[i3 + 1] /= (int)(i3 | 1);
                    Test.fArrFld[(int)(l1 + 1)] += i4;
                    i4 = i4;
                }
                i4 -= (int)l1;
                break;
            case 112:
                Test.instanceCount *= by;
            case 113:
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-10);
                break;
            case 114:
                i4 = i3;
                break;
            case 115:
                by = (byte)Test.instanceCount;
                break;
            }
        }
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + by + l1;
    }

    public static void vMeth(long l) {

        int i13=-157, i14=11, i15=169, i16=9;
        byte by1=23;

        vMeth1();
        for (i13 = 12; i13 < 287; i13++) {
            Test.fFld += (-65 + (i13 * i13));
            i14 |= i13;
            i14 += by1;
            i14 = (int)181L;
            i14 -= i13;
        }
        if (Test.bFld) {
            i14 += i14;
            for (i15 = 3; i15 < 385; ++i15) {
                i14 = i15;
                i16 >>>= i16;
                i14 = (int)l;
            }
        } else if (Test.bFld) {
            i16 *= (int)Test.fFld;
            Test.lArrFld[(i14 >>> 1) % N] -= i15;
        } else if (true) {
            Test.lArrFld[(i13 >>> 1) % N] -= by1;
        } else {
            Test.instanceCount *= (long)-1.64748;
        }
        vMeth_check_sum += l + i13 + i14 + by1 + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        float f=-1.168F;
        int i=57313, i1=48199, i2=-26461, i17=-14, i18=144, i19=-81, i20=-3873, i21=-7, i22=238, i23=1;

        for (f = 161; f > 8; f -= 3) {
            for (i1 = 1; i1 < f; ++i1) {
                vMeth(Test.instanceCount);
                i17 = 1;
                do {
                    i2 *= i1;
                    Test.fFld = Test.fFld;
                    try {
                        i = (iFld / iFld);
                        i = (iFld % 117);
                        i = (iFld / 49050);
                    } catch (ArithmeticException a_e) {}
                    i *= (int)Test.instanceCount;
                    Test.instanceCount += i17;
                    i = i;
                } while (++i17 < 2);
            }
            Test.lArrFld[(int)(f)] = i1;
            switch ((int)(((f % 8) * 5) + 65)) {
            case 66:
                iFld += (int)(f * f);
                dFld -= iFld;
                i = i1;
            case 92:
                Test.iArrFld[(int)(f)] = (int)Test.instanceCount;
                Test.fFld *= i17;
                for (i18 = 10; i18 < 198; ++i18) {
                    i <<= i17;
                    switch ((int)(((f % 4) * 5) + 54)) {
                    case 72:
                        iFld = i18;
                        break;
                    case 70:
                        dFld *= iFld;
                        break;
                    case 65:
                        for (i20 = 3; i20 > 1; i20--) {
                            i2 += (i20 * i20);
                        }
                        switch ((int)((f % 7) + 123)) {
                        case 123:
                            for (i22 = 1; i22 < 3; i22++) {
                                Test.bFld = false;
                                i2 *= (int)Test.instanceCount;
                                iFld += iFld;
                                Test.iArrFld[i18 + 1] = i18;
                            }
                            break;
                        case 124:
                            i23 += (i18 + iFld);
                            break;
                        case 125:
                        case 126:
                            Test.fFld += i18;
                            break;
                        case 127:
                        case 128:
                            Test.lArrFld[(int)(f)] = i22;
                            break;
                        case 129:
                            i19 -= i1;
                            break;
                        default:
                            Test.fFld = (float)-67.123481;
                        }
                    case 62:
                        Test.iArrFld[(int)(f)] += (int)Test.instanceCount;
                        break;
                    }
                }
                break;
            case 80:
                i19 = (int)Test.instanceCount;
                break;
            case 82:
                Test.instanceCount = -29029;
                break;
            case 69:
                i23 -= Test.sFld;
                break;
            case 95:
                iFld = iFld;
                break;
            case 81:
                Test.sFld += (short)(((f * Test.sFld) + Test.instanceCount) - Test.instanceCount);
                break;
            case 98:
                Test.iArrFld[(int)(f - 1)] |= (int)Test.instanceCount;
                break;
            default:
                Test.lArrFld[(int)(f + 1)] += i20;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
