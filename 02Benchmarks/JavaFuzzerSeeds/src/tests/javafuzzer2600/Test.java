package tests.javafuzzer2600;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:12:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5653982080561855712L;
    public static double dFld=-2.45633;
    public float fFld=43.554F;
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 36);
        FuzzerUtils.init(Test.lArrFld, -5L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9) {

        int i10=48, i11=132, i12=-30320, i13=-4, i14=44303, i15=22;
        byte by=27;
        double d=2.91059, dArr[]=new double[N];
        float f1=108.106F;
        short s=-7292;

        FuzzerUtils.init(dArr, 1.44070);

        for (i10 = 6; i10 < 273; ++i10) {
            i11 /= (int)(i10 | 1);
            Test.iArrFld[i10 + 1] = i9;
            i9 += (int)(1703917971631237386L + (i10 * i10));
            for (i12 = 1; 6 > i12; i12++) {
                for (i14 = 1; i14 < 2; ++i14) {
                    i11 += i14;
                    i11 += (((i14 * Test.instanceCount) + by) - by);
                    d *= f1;
                    dArr[i12 + 1] = -115.1011F;
                    i9 = s;
                    Test.iArrFld[i10] = i11;
                    Test.instanceCount += i14;
                    i15 = i15;
                    i13 = (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + by + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + s + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i6, int i7, long l) {

        float f=-2.289F;
        int i8=-6590, i16=59577, i17=-15, i18=0, i19=54;
        short s1=677;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, -1.115234);

        for (f = 1; 393 > f; ++f) {
            vMeth1(i7);
            i8 += (int)l;
            i8 += (int)(1602466548L + (f * f));
            for (i16 = 1; i16 < 4; ++i16) {
                l += i7;
                for (i18 = 1; i18 < 2; ++i18) {
                    Test.iArrFld[(int)(f)] -= (int)Test.instanceCount;
                    s1 -= (short)i16;
                    dArr1[i16] += i7;
                    i8 = i19;
                    i7 += 60;
                    i7 += (i18 - i16);
                    Test.instanceCount *= i17;
                    if (i6 != 0) {
                        vMeth_check_sum += i6 + i7 + l + Float.floatToIntBits(f) + i8 + i16 + i17 + i18 + i19 + s1 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
                        return;
                    }
                }
            }
        }
        vMeth_check_sum += i6 + i7 + l + Float.floatToIntBits(f) + i8 + i16 + i17 + i18 + i19 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static int iMeth() {

        int i2=-11, i3=12, i4=40725, i5=13, i20=-400, i21=7;
        short s2=-7060;
        byte by1=120;
        float f2=-26.611F;

        for (i2 = 5; i2 < 290; i2++) {
            try {
                Test.iArrFld[i2 + 1] = (-36187 / i2);
                Test.iArrFld[i2 + 1] = (i3 / -31821);
                i3 = (i2 / Test.iArrFld[i2]);
            } catch (ArithmeticException a_e) {}
            for (i4 = 1; i4 < 6; i4++) {
                vMeth(i2, i5, Test.instanceCount);
                for (i20 = i2; i20 < 2; i20++) {
                    Test.iArrFld[i4] = (int)Test.instanceCount;
                    s2 *= (short)i20;
                    by1 += (byte)f2;
                    i3 += (i20 * i20);
                    i21 = i21;
                }
                i5 = (int)Test.instanceCount;
                i3 = i4;
                Test.iArrFld[i2] += (int)f2;
                i21 -= 0;
                Test.iArrFld[i4] -= i3;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i20 + i21 + s2 + by1 + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-19242, i1=4, i22=16340, i23=12, i24=0, i25=-10, i26=-15, i27=-113, i28=15936, i29=-48;
        boolean b=true;
        short s3=27493;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.798F);

        for (i = 7; i < 382; ++i) {
            iMeth();
            switch (((i % 7) * 5) + 73) {
            case 77:
            case 108:
                Test.iArrFld = Test.iArrFld;
                Test.iArrFld[i] &= 114;
                i1 >>>= (int)-83145889L;
                break;
            case 93:
                i22 = 1;
                while (++i22 < 67) {
                    sArrFld[i] <<= (short)Test.instanceCount;
                    Test.dFld = -250;
                    if (b) continue;
                }
                break;
            case 79:
            case 107:
                for (i23 = 2; 67 > i23; ++i23) {
                    fArr[i23] -= i;
                    Test.instanceCount = (long)Test.dFld;
                    Test.instanceCount = i24;
                    sArrFld[i] = (short)i1;
                    s3 &= (short)205;
                    i1 = (int)fFld;
                    for (i25 = 1; i25 < 2; ++i25) {
                        i1 += i25;
                        i24 *= (int)-2.498F;
                        i27 *= i;
                        Test.iArrFld[i] *= s3;
                    }
                    Test.iArrFld[i - 1] >>= 9;
                }
                for (i28 = 4; 67 > i28; ++i28) {
                    if (b) break;
                    i26 += (int)fFld;
                    switch (((i % 3) * 5) + 107) {
                    case 114:
                        i24 <<= i22;
                        Test.iArrFld[i28 - 1] = (int)Test.instanceCount;
                        break;
                    case 120:
                        fFld += (((i28 * i29) + Test.instanceCount) - i25);
                        break;
                    case 116:
                        Test.lArrFld[i][i28 - 1] >>= i26;
                    default:
                        Test.instanceCount <<= 0;
                    }
                }
                break;
            case 84:
                Test.dFld += i27;
                break;
            case 97:
                i24 <<= i28;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
