package tests.javafuzzer506;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:46:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static byte byFld=28;
    public static boolean bFld=false;
    public int iFld=88;
    public float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i3, long l2) {

        double d=-119.52920;
        int i4=12194, i5=-226, i6=186, i7=13277, i8=-14;
        float f2=-81.83F, fArr[]=new float[N];
        short s=9004;

        FuzzerUtils.init(fArr, 125.450F);

        d -= d;
        i3 *= i3;
        for (i4 = 3; i4 < 133; i4++) {
            i6 = 1;
            while (++i6 < 12) {
                i5 += i6;
                for (i7 = 1; i7 < 1; i7++) {
                    i3 = i4;
                    if (i6 != 0) {
                    }
                    Test.instanceCount += (((i7 * i7) + Test.instanceCount) - f2);
                    Test.byFld += (byte)(((i7 * i6) + i8) - l2);
                    f2 -= (float)d;
                    i8 >>= 0;
                    i3 += (i7 ^ i5);
                    fArr[i7 + 1] -= 0.624F;
                    s += (short)(i7 * f2);
                }
            }
        }
        long meth_res = i3 + l2 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth1(int i1, float f1, int i2) {

        double d1=2.90586;
        int i9=-24424, i10=-59, i11=-244, i12=-10, i13=41919, i14=142;
        short s1=19786;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -845297672026917581L);

        fMeth(i1, Test.instanceCount);
        i1 *= (int)d1;
        for (i9 = 3; i9 < 323; i9++) {
            fArrFld[i9] -= -225;
            for (i11 = 1; i11 < 5; i11++) {
                Test.iArrFld[i11 - 1] <<= s1;
                i2 -= (int)1.680F;
                i2 -= i10;
                for (i13 = 1; 2 > i13; ++i13) {
                    f1 = i10;
                    f1 /= -43571L;
                    if (Test.bFld) continue;
                }
                lArr[i11][i11] >>= i11;
            }
            Test.byFld += (byte)33549;
            Test.iArrFld[i9 - 1] <<= -68;
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f1) + i2 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 +
            s1 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(long l, long l1) {

        int i=-9, i15=11, i16=-57726;
        double d2=107.119379;

        for (float f : fArrFld) {
            i = 1;
            while (++i < 4) {
                vMeth1(i, f, i);
                iFld -= (int)d2;
                d2 = iFld;
                for (i15 = 1; 1 > i15; i15++) {
                    switch (((i % 5) * 5) + 120) {
                    case 133:
                        Test.bFld = Test.bFld;
                    case 123:
                        i16 = (int)l;
                        break;
                    case 135:
                        i16 -= i;
                    case 125:
                        Test.instanceCount += (i15 * i15);
                        i16 = (int)Test.instanceCount;
                        d2 += i;
                        if (Test.bFld) break;
                        break;
                    case 145:
                        i16 += i15;
                    default:
                        i16 = -56;
                    }
                }
            }
        }
        vMeth_check_sum += l + l1 + i + Double.doubleToLongBits(d2) + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i17=38581, i18=19326, i19=-1, i20=10, i21=-5, i22=124, i23=-6, i24=-163, i25=57;
        float f3=87.43F;
        short s2=16;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -2915698084238789504L);

        vMeth(Test.instanceCount, -6387025697919504217L);
        for (i17 = 361; i17 > 9; i17--) {
            iFld /= (int)(i19 | 1);
            Test.iArrFld[(i17 >>> 1) % N] -= i17;
            f3 *= 114;
            i19 -= (int)f3;
            for (i20 = 72; i20 > 4; --i20) {
                f3 = f3;
                for (i22 = 1; 2 > i22; ++i22) {
                    if (Test.bFld) break;
                }
                for (i24 = 1; 2 > i24; ++i24) {
                    switch ((i17 % 1) + 45) {
                    case 45:
                        dArrFld[i17 + 1] = i17;
                        i19 -= (int)Test.instanceCount;
                        if (Test.bFld) {
                            s2 = (short)i19;
                            i18 += i25;
                        } else {
                            Test.instanceCount = i20;
                            if (false) {
                                Test.instanceCount += iFld;
                            } else if (Test.bFld) {
                                i25 /= (int)(Test.instanceCount | 1);
                            } else if (Test.bFld) {
                                switch (((i24 % 2) * 5) + 87) {
                                case 88:
                                    dArrFld = FuzzerUtils.double1array(N, (double)9.117130);
                                    i18 += i24;
                                    s2 -= s2;
                                    break;
                                case 94:
                                    i23 += (int)Test.instanceCount;
                                    i18 += (int)15095L;
                                }
                                lArr1[i20 + 1][i24] = 7;
                            } else {
                                if (Test.bFld) continue;
                                Test.instanceCount += (i24 - i17);
                            }
                        }
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
