package tests.javafuzzer832;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:32:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=58L;
    public double dFld=121.96879;
    public byte byFld=-43;
    public static float fFld=2.109F;
    public int iFld=223;
    public int iArrFld[]=new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=34914, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, 11);

        Test.instanceCount *= i6;
        i6 += i6;
        iArr1[(i6 >>> 1) % N] = iArr1[(i6 >>> 1) % N];
        i6 = i6;
        vMeth1_check_sum += i6 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i4, int i5) {

        double d=0.98074;
        int i7=4, iArr2[][]=new int[N][N];

        FuzzerUtils.init(iArr2, -62);

        vMeth1();
        i4 *= -51030;
        for (d = 8; d < 390; d++) {
            i5 += i4;
            i5 += i5;
            Test.instanceCount += (long)d;
            iArr2[(int)(d)][(int)(d + 1)] = (int)Test.instanceCount;
            iArr2[(int)(d - 1)][(int)(d - 1)] <<= i7;
            iArr2[(int)(d)][(int)(d - 1)] *= (int)Test.fFld;
            i7 = i4;
            i5 += (int)(865L + (d * d));
            Test.instanceCount -= i4;
        }
        i4 += i4;
        vMeth_check_sum += i4 + i5 + Double.doubleToLongBits(d) + i7 + FuzzerUtils.checkSum(iArr2);
    }

    public long lMeth() {

        int i3=-88, i8=-40;
        boolean b=true;

        i3 = (int)(3L - (Math.abs(241) + (i3--)));
        b = b;
        i3 -= (++byFld);
        vMeth(i3, i8);
        iArrFld[(i3 >>> 1) % N] = i8;
        Test.instanceCount /= (Test.instanceCount | 1);
        long meth_res = i3 + (b ? 1 : 0) + i8;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-132, i1=-164, i2=26621, i9=63792, i10=2, i11=14, i12=51, i13=18925, i14=-34761, iArr[]=new int[N];
        double d1=0.18810;

        FuzzerUtils.init(iArr, -108);

        i += (int)(((dFld * -1168805074L) * byFld) - iArr[(i >>> 1) % N]);
        for (i1 = 5; i1 < 137; i1++) {
            i2 *= i2;
            iArr[i1 + 1] -= (int)(((++iArr[i1 + 1]) / ((iArr[i1 - 1]--) | 1)) * lMeth());
            iFld >>= (int)-5049504837287901266L;
            for (i9 = 5; i9 < 190; i9++) {
                Test.fFld = Test.instanceCount;
            }
            iArrFld[i1] *= 128;
        }
        i11 = 1;
        do {
            for (d1 = i11; d1 < 113; ++d1) {
                dFld = d1;
                iArrFld[(int)(d1 + 1)] -= iFld;
                Test.instanceCount >>= 8;
                Test.fFld += i11;
                iFld -= (int)Test.instanceCount;
                for (i13 = 1; i13 > 1; i13 -= 3) {
                    boolean b1=true;
                    i12 += iFld;
                    switch ((int)(((d1 % 2) * 5) + 30)) {
                    case 33:
                        Test.instanceCount += (((i13 * i13) + Test.fFld) - Test.instanceCount);
                        i10 = i13;
                        iArr[i13] ^= i13;
                    case 34:
                        iArrFld[(int)(d1 - 1)] = (int)-1.1007F;
                        if (b1) break;
                        break;
                    default:
                        i10 *= (int)Test.fFld;
                        switch ((((58 >>> 1) % 6) * 5) + 46) {
                        case 62:
                        case 65:
                            i = (int)Test.instanceCount;
                            i12 *= i11;
                            if (b1) continue;
                            iFld *= i12;
                            break;
                        case 69:
                        case 68:
                            b1 = b1;
                            break;
                        case 54:
                            b1 = b1;
                            break;
                        case 55:
                            Test.instanceCount = i;
                            break;
                        }
                    }
                }
            }
        } while (++i11 < 222);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
