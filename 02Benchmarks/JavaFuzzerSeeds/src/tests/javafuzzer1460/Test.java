package tests.javafuzzer1460;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:03:25 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3811950602L;
    public static float fFld=0.902F;
    public static int iFld=-5;
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -197L);
        FuzzerUtils.init(Test.byArrFld, (byte)-50);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, int i4, double d) {

        int i5=73, i6=-139, i7=250, i8=-82, i9=-13, i10=-254, i11=32736, i12=-6, i13=-11;
        long l1=-8L;

        Test.lArrFld = FuzzerUtils.long1array(N, (long)-987377697L);
        d = 5;
        for (i5 = 193; i5 > 11; i5 -= 2) {
            for (i7 = i5; i7 < 17; ++i7) {
                i9 = 1;
                while (++i9 < 1) {
                    l1 -= i3;
                }
                for (i10 = 1; i10 > 1; i10 -= 3) {
                    Test.byArrFld[i5] -= (byte)Test.instanceCount;
                }
                Test.fFld = i6;
                i6 *= i5;
                for (i12 = 1; i12 < 1; ++i12) {
                    if (i13 != 0) {
                        vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + l1 + i10 +
                            i11 + i12 + i13;
                        return;
                    }
                    i11 = (int)Test.instanceCount;
                    i8 += -223;
                    i6 = (int)Test.fFld;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + l1 + i10 + i11 + i12 + i13;
    }

    public static void vMeth1() {

        double d1=-49.81463;
        int i14=10105, i15=-2, i16=4556, i17=9929, i18=-158, i19=-14, i20=-110, i21=29, iArr1[]=new int[N];
        byte by1=50;
        boolean b=false;

        FuzzerUtils.init(iArr1, 112);

        vMeth2(Test.iFld, Test.iFld, d1);
        Test.iFld >>= Test.iFld;
        Test.fFld -= Test.iFld;
        for (i14 = 8; i14 < 313; i14++) {
            i15 = i15;
        }
        for (i16 = 8; i16 < 277; i16++) {
            Test.instanceCount = -186;
            for (i18 = 1; i18 < 6; i18++) {
                iArr1[i16 + 1] -= Test.iFld;
                by1 *= (byte)i14;
                if (b) continue;
                Test.instanceCount <<= Test.instanceCount;
                for (i20 = 1; i20 < 2; ++i20) {
                    b = b;
                    i21 += (i20 * i20);
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i14 + i15 + i16 + i17 + i18 + i19 + by1 + (b ? 1 : 0) + i20 +
            i21 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l) {

        int i=12278, i1=14, i2=96, iArr[]=new int[N];
        byte by=41;
        float f=73.727F;
        double d2=0.109377, dArr[]=new double[N];
        boolean b1=true;
        short s=-13861;

        FuzzerUtils.init(iArr, 8);
        FuzzerUtils.init(dArr, 0.115602);

        for (i = 14; i < 365; i++) {
            iArr[i] %= (int)((Test.lArrFld[i - 1] + i) | 1);
            by >>= (byte)(((--i1) + (f + i)) + ((i - i1) + (i1 % (Test.instanceCount | 1))));
            Test.instanceCount -= (long)dArr[i];
            l -= (l += l);
            i2 = 1;
            while (++i2 < 5) {
                i1 <<= (-(iArr[i2 + 1] * (++i1)));
                i1 += (i1--);
                i1 %= (int)((-(i + (i1 - i1))) | 1);
            }
            vMeth1();
        }
        i1 /= (int)(Test.iFld | 1);
        d2 = 183;
        do {
            Test.lArrFld[(int)(d2)] = l;
            b1 = true;
            iArr[(int)(d2 - 1)] *= s;
        } while (--d2 > 0);
        vMeth_check_sum += l + i + i1 + by + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0)
            + s + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i22=4, i23=-6, i24=-2, i25=34146, i26=-190, i27=116, iArr2[]=new int[N];
        double d3=0.12412;
        long l2=-2659958140L;
        byte by2=64;

        FuzzerUtils.init(iArr2, 7);

        vMeth(Test.instanceCount);
        Test.lArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        Test.instanceCount = Test.iFld;
        for (i22 = 3; i22 < 259; i22 += 2) {
            for (i24 = 196; i24 > i22; i24 -= 3) {
                for (i26 = 1; 1 > i26; i26++) {
                    short s1=505;
                    Test.fFld += i22;
                    switch ((((i24 >>> 1) % 4) * 5) + 54) {
                    case 68:
                        switch ((((i26 >>> 1) % 4) * 5) + 52) {
                        case 70:
                            Test.iFld -= i24;
                            Test.iFld *= i25;
                            switch (((i26 >>> 1) % 2) + 84) {
                            case 84:
                            case 85:
                                d3 = i26;
                                i23 -= (int)Test.instanceCount;
                                iArr2[i26 - 1] -= i23;
                                break;
                            }
                            l2 = l2;
                            break;
                        case 67:
                            d3 = Test.fFld;
                            i23 = by2;
                            s1 *= s1;
                            i27 = Test.iFld;
                            break;
                        case 57:
                            d3 *= Test.iFld;
                            fArrFld[i24] *= i26;
                            Test.fFld += Test.instanceCount;
                            iArr2[i24] -= 23358;
                            break;
                        case 54:
                        }
                        s1 += (short)i26;
                        iArr2[i26 + 1] -= i25;
                        Test.fFld = i23;
                        break;
                    case 58:
                    case 70:
                        iArr2[i26 - 1] += (int)l2;
                        break;
                    case 71:
                        i23 -= Test.iFld;
                        i23 >>= (int)Test.instanceCount;
                        break;
                    default:
                        i27 = i26;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
