package tests.javafuzzer1044;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:14:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=146L;
    public static int iFld=-1;
    public static double dFld=2.68714;
    public byte byFld=113;
    public short sFld=-5890;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[]=new short[N];
    public static float fArrFld[][]=new float[N][N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 151);
        FuzzerUtils.init(Test.sArrFld, (short)10120);
        FuzzerUtils.init(Test.fArrFld, 89.430F);
        FuzzerUtils.init(Test.byArrFld, (byte)-97);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static float fMeth(int i1) {


        i1 %= (int)(((i1 * Test.iArrFld[(i1 >>> 1) % N]) + (i1++)) | 1);
        i1 >>>= (int)(((i1 - -34.206F) + (i1 * -2)) * ((i1 + i1) + (Test.instanceCount + -27)));
        long meth_res = i1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth2() {

        double d=-2.32440;
        int i3=64741, i4=10, i5=3675;
        float f2=-30.1016F;
        short s=-22456;
        byte by=-32;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -40584L);

        d = 1;
        do {
            Test.iFld = 0;
            Test.iArrFld[(int)(d + 1)] += Test.iFld;
            Test.iFld = -21486;
            i3 = 1;
            do {
                for (i4 = 1; 1 > i4; ++i4) {
                    Test.iFld += (((i4 * i3) + i4) - f2);
                    i5 += s;
                    if (true) break;
                    Test.instanceCount = (long)-2.592F;
                    Test.iFld -= Test.iFld;
                    f2 += i4;
                    f2 *= Test.iFld;
                    f2 += f2;
                }
                lArr[i3] = by;
            } while (++i3 < 7);
        } while (++d < 218);
        vMeth2_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + Float.floatToIntBits(f2) + s + by +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(float f1) {

        long l=-1352439024987880326L, lArr1[][]=new long[N][N];
        int i2=2, i6=-12, i7=-179, i8=22465, i9=44904, i10=4;
        boolean b=false;

        FuzzerUtils.init(lArr1, 4L);

        for (l = 14; 350 > l; ++l) {
            Test.sArrFld[(int)(l)] = (short)(Test.instanceCount++);
            switch ((int)((l % 5) + 80)) {
            case 80:
                vMeth2();
                break;
            case 81:
                Test.instanceCount = 2L;
            case 82:
                if (true) continue;
                for (i6 = 1; i6 < 5; ++i6) {
                    Test.instanceCount = l;
                    for (i8 = 1; i8 < 2; i8++) {
                        f1 = i6;
                        Test.iFld += 7;
                        Test.fArrFld[i6 - 1][(int)(l - 1)] += Test.iFld;
                        Test.iFld = i10;
                    }
                    i9 = (int)Test.instanceCount;
                    lArr1[i6][i6 + 1] -= i8;
                }
            case 83:
                i9 %= (int)((long)(Test.dFld) | 1);
                break;
            case 84:
                i7 = i2;
                break;
            default:
                b = b;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + l + i2 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i, float f) {

        float f3=2.149F;
        int i11=-13, i12=160, i13=-2;
        byte by1=72;
        short s1=-5485;

        i = (int)fMeth(i++);
        vMeth1(f);
        for (f3 = 1; f3 < 376; f3++) {
            i11 = i;
            Test.dFld = f;
            for (i12 = 1; i12 < 5; i12++) {
                Test.iFld = i11;
                Test.instanceCount >>= 6;
                Test.iArrFld[i12 + 1] -= i13;
                i += i12;
                by1 += (byte)88;
                i += (i12 * i12);
                s1 = (short)Test.iFld;
                i13 += (((i12 * i12) + i11) - i);
                i13 -= -47;
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + Float.floatToIntBits(f3) + i11 + i12 + i13 + by1 + s1;
    }

    public void mainTest(String[] strArr1) {

        float f4=-73.51F;
        int i14=-62982, i15=198, i16=-38, i17=12, i18=-42004, i19=-3, i20=10, i21=-11, i22=-7;
        long l1=-213L, l2=-8L;
        boolean b1=true;

        vMeth(Test.iFld, f4);
        i14 = 1;
        do {
            i15 = 1;
            while ((i15 += 2) < 368) {
                Test.iFld += (((i15 * i14) + byFld) - i15);
                Test.iFld += (i15 | i15);
                Test.iFld = i14;
            }
            i16 = 1;
            while (++i16 < 368) {
                Test.iFld += -13;
                Test.iFld <<= Test.iFld;
            }
            for (i17 = i14; i17 < 368; i17++) {
                Test.instanceCount = i15;
                f4 += (((i17 * f4) + i14) - i14);
                i18 = i17;
            }
        } while ((i14 += 3) < 204);
        Test.iFld -= (int)71L;
        for (l1 = 7; l1 < 365; ++l1) {
            switch ((int)((l1 % 2) + 71)) {
            case 71:
                for (i20 = (int)(l1); i20 < 70; i20 += 2) {
                    i18 >>= i19;
                    i18 ^= i16;
                    b1 = b1;
                    sFld = (short)f4;
                    i21 += i20;
                    if (false) continue;
                    f4 *= -6;
                }
                for (l2 = 4; l2 < 70; ++l2) {
                    Test.dFld *= l2;
                    Test.instanceCount = i19;
                    Test.instanceCount = i20;
                    i22 -= (int)f4;
                    Test.byArrFld[(int)(l2 + 1)] -= (byte)i17;
                }
                break;
            case 72:
                i19 -= i18;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
