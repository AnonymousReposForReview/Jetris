package tests.javafuzzer1081;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:15:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3242066003608924833L;
    public double dFld=-1.65142;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 6L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth1(int i6) {


        Test.instanceCount &= i6;
        vMeth1_check_sum += i6;
    }

    public static int iMeth(int i7, int i8) {

        int i9=-8, i10=59822, i11=118, i12=-9, i13=-65283, i14=-2, i15=58, iArr1[]=new int[N];
        double d1=92.47817;
        short s=-23977;
        float f1=0.361F;
        byte by=-21;

        FuzzerUtils.init(iArr1, -13);

        i9 = 1;
        do {
            for (i10 = 6; i10 > 1; i10--) {
                iArr1[i10 - 1] = (int)(((d1 + d1) + (i8++)) - ((-12.641F + (d1 * 18L)) - (i7 / (i9 | 1))));
                s += (short)i11;
                iArr1[i9 + 1] -= (++i7);
                vMeth1(i10);
            }
            i11 -= i7;
            i7 += (((i9 * i7) + f1) - i10);
            for (i12 = 1; i12 < 6; ++i12) {
                Test.lArrFld[i12] /= (Test.instanceCount | 1);
                f1 *= Test.instanceCount;
                i11 = by;
                for (i14 = 1; i14 < 2; i14++) {
                    Test.instanceCount <<= Test.instanceCount;
                }
                Test.lArrFld[i12] -= i13;
            }
        } while (++i9 < 298);
        long meth_res = i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + s + Float.floatToIntBits(f1) + i12 +
            i13 + by + i14 + i15 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-234, i2=-9, i3=192, i4=2, i5=-116, i16=-221, iArr[]=new int[N];
        float f=46.230F;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)127);
        FuzzerUtils.init(iArr, 10);

        i1 = 1;
        while ((i1 += 2) < 282) {
            Test.instanceCount = (long)f;
            for (i2 = 1; i2 < 11; i2++) {
                i3 >>= (++i3);
                for (i4 = 1; i4 < 2; ++i4) {
                    double d=-13.48819;
                    d += (((++f) + (Test.instanceCount - i5)) - Test.instanceCount);
                    byArr[i2][i4 - 1] += (byte)-1;
                    d += Float.intBitsToFloat(i);
                    iArr[i1 - 1] = (iArr[i2 + 1] << iArr[i1 - 1]);
                    Test.instanceCount += i4;
                    switch (((((-103 + i4) >>> 1) % 5) * 5) + 72) {
                    case 84:
                        vMeth1(iMeth(i16, i3));
                        d *= Test.instanceCount;
                        iArr[i1] *= i;
                        break;
                    case 90:
                    case 93:
                        i >>= -57963;
                        break;
                    case 73:
                        i += i4;
                        break;
                    case 74:
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i16 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-1, i18=10, i19=-7362, i20=-9, i21=-4, i22=7407, i23=54922, i24=-14, i25=-4, i26=-82, i27=-14,
            iArr2[][]=new int[N][N], iArr3[]=new int[N];
        float f2=0.497F, f3=-1.370F, fArr[]=new float[N];
        double d2=-1.20916;
        short s1=-469;
        boolean b=false, bArr[]=new boolean[N];
        byte by1=43;

        FuzzerUtils.init(iArr2, 2);
        FuzzerUtils.init(fArr, 94.512F);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr3, 86);

        vMeth(9);
        i17 *= (int)f2;
        for (d2 = 11; d2 < 210; ++d2) {
            for (i19 = 4; i19 < 126; i19++) {
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.lArrFld[(int)(d2 - 1)] -= Test.instanceCount;
                    i17 *= i21;
                }
                dFld = i22;
            }
            f2 += (float)(((d2 * s1) + i21) - i20);
            i18 += (int)Test.instanceCount;
            for (i23 = 4; i23 < 126; ++i23) {
                iArr2[(int)(d2 + 1)][(int)(d2)] = i22;
                i24 = i18;
                iArr2[i23 + 1][i23] += (int)Test.instanceCount;
                iArr2[(int)(d2)][(int)(d2 - 1)] -= (int)3490650484L;
                if (b) continue;
                i20 += (-5 + (i23 * i23));
                i20 >>>= i21;
                for (i25 = 1; 2 > i25; i25++) {
                    dFld *= by1;
                    switch (i23 + 111) {
                    case 111:
                        i20 = (int)Test.instanceCount;
                        i18 += (((i25 * i19) + Test.instanceCount) - f2);
                        i18 -= i24;
                        f3 = i24;
                        break;
                    case 112:
                        i17 += i25;
                        i17 *= i18;
                        Test.instanceCount %= -215;
                        i20 += i24;
                        break;
                    case 113:
                        f2 = i23;
                        break;
                    case 114:
                        i17 >>= i25;
                    case 115:
                        i26 += (int)Test.instanceCount;
                    case 116:
                        f2 += i24;
                    case 117:
                        Test.instanceCount += (i25 * i25);
                    case 118:
                    case 119:
                        Test.instanceCount >>= i25;
                        break;
                    case 120:
                        try {
                            i24 = (i20 % 160);
                            i26 = (i17 / -152);
                            i24 = (i26 / 24);
                        } catch (ArithmeticException a_e) {}
                    case 121:
                        i26 >>>= i19;
                        break;
                    case 122:
                        Test.instanceCount += (i25 | s1);
                        break;
                    case 123:
                        try {
                            i24 = (i18 / -103);
                            i20 = (-48702 / i22);
                            i18 = (i22 % i24);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 124:
                    case 125:
                        iArrFld[(int)(d2 - 1)] = i21;
                        break;
                    case 126:
                    case 127:
                        if (false) continue;
                    case 128:
                        i24 += -32;
                        break;
                    case 129:
                        Test.instanceCount += (((i25 * i21) + i19) - i19);
                        break;
                    case 130:
                        i18 *= i18;
                        break;
                    case 131:
                        try {
                            i26 = (i24 / -24805);
                            i24 = (55873 % i17);
                            i24 = (i18 / -1848);
                        } catch (ArithmeticException a_e) {}
                    case 132:
                        iArrFld = FuzzerUtils.int1array(N, (int)41028);
                    case 133:
                        Test.instanceCount *= i21;
                        break;
                    case 134:
                        i20 >>>= by1;
                        break;
                    case 135:
                        i26 = i18;
                        break;
                    case 136:
                        i24 *= (int)Test.instanceCount;
                        break;
                    case 137:
                        i24 -= (int)Test.instanceCount;
                        break;
                    case 138:
                    case 139:
                        i20 = i26;
                        break;
                    case 140:
                        if (false) continue;
                        break;
                    case 141:
                        i26 = i27;
                        break;
                    case 142:
                        Test.lArrFld[i25] ^= Test.instanceCount;
                        break;
                    case 143:
                        i27 += (i25 * i19);
                        break;
                    case 144:
                    case 145:
                    case 146:
                        i20 = s1;
                        break;
                    case 147:
                        i22 = i24;
                        break;
                    case 148:
                        i27 -= i27;
                    case 149:
                        i27 -= (int)Test.instanceCount;
                        break;
                    case 150:
                        Test.instanceCount += (1 + (i25 * i25));
                    case 151:
                        i17 += i25;
                    case 152:
                        iArr2[(0 >>> 1) % N][i25] *= i17;
                        break;
                    case 153:
                        Test.instanceCount *= 42;
                        break;
                    case 154:
                        i17 += i25;
                    case 155:
                        i20 += (((i25 * i26) + Test.instanceCount) - i19);
                        break;
                    case 156:
                        i22 += i23;
                        break;
                    case 157:
                        Test.instanceCount = -58;
                        break;
                    case 158:
                        i24 += (((i25 * i20) + i21) - i22);
                    case 159:
                        Test.instanceCount *= (long)-1.762F;
                        break;
                    case 160:
                        Test.instanceCount -= (long)f2;
                    case 161:
                        f3 *= -12L;
                    case 162:
                        fArr[i25 - 1] = 116;
                        break;
                    case 163:
                        i22 <<= s1;
                        break;
                    case 164:
                        i26 += i25;
                        break;
                    case 165:
                    case 166:
                        i26 += i25;
                        break;
                    case 167:
                        by1 -= (byte)Test.instanceCount;
                        break;
                    case 168:
                        bArr[(int)(d2)] = b;
                    case 169:
                        Test.instanceCount >>>= i21;
                        break;
                    case 170:
                        i27 %= (int)(i23 | 1);
                        break;
                    case 171:
                        iArrFld[i23 - 1] = (int)Test.instanceCount;
                        break;
                    case 172:
                        if (b) break;
                        break;
                    case 173:
                        i27 = i23;
                        break;
                    case 174:
                        i27 += -2;
                        break;
                    case 175:
                    case 176:
                        i17 += (int)Test.instanceCount;
                        break;
                    case 177:
                        f2 += (float)dFld;
                        break;
                    case 178:
                        Test.lArrFld[(int)(d2 + 1)] = i23;
                        break;
                    case 179:
                        Test.instanceCount += (i25 ^ i26);
                        break;
                    case 180:
                        f3 = -46.26F;
                        break;
                    default:
                        try {
                            i27 = (i23 % iArr3[(int)(d2 - 1)]);
                            i26 = (iArr3[i23] % i18);
                            i18 = (1978282653 / i22);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
