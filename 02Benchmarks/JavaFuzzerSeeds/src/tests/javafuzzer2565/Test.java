package tests.javafuzzer2565;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:39:43 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-52337L;
    public static boolean bFld=true;
    public static short sFld=23693;
    public static volatile byte byArrFld[][]=new byte[N][N];
    public static volatile long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)10);
        FuzzerUtils.init(Test.lArrFld, -2596515017157939276L);
        FuzzerUtils.init(Test.sArrFld, (short)-1377);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s1, boolean b, int i7) {

        float f1=120.876F;
        int i8=248, i9=-61, i10=112, i11=-6, i12=51, i13=3412;
        long l1=1420952800L;

        Test.lArrFld[(i7 >>> 1) % N] = i7;
        i7 -= i7;
        f1 = i7;
        i7 = (int)f1;
        for (i8 = 183; i8 > 11; i8 -= 3) {
            Test.instanceCount = i9;
        }
        if (b) {
            for (i10 = 5; i10 < 183; ++i10) {
                if (true) continue;
                i7 = s1;
                i7 <<= -1;
                for (i12 = 1; i12 < 9; i12++) {
                    f1 += i10;
                }
                s1 += (short)(i10 + i10);
                Test.instanceCount <<= i13;
            }
        } else {
            Test.instanceCount >>= l1;
        }
        long meth_res = s1 + (b ? 1 : 0) + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + i12 + i13 + l1;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i3=-36142, i4=-167, i5=140, i6=56, iArr[]=new int[N];
        short s=-24791;
        float f=-8.846F, fArr[]=new float[N], fArr1[]=new float[N];
        byte by=-22;
        double d=1.55517;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -14565);
        FuzzerUtils.init(lArr, -135L);
        FuzzerUtils.init(fArr, 0.174F);
        FuzzerUtils.init(fArr1, -2.671F);

        for (int i2 : iArr) {
            for (i3 = 1; 4 > i3; i3++) {
                for (i5 = 1; i5 < 2; i5++) {
                    lArr[i5 - 1] *= (++s);
                    if (Test.bFld) {
                        f -= ((by + (i * f)) + i6);
                        fArr = (fArr1 = FuzzerUtils.float1array(N, (float)2.408F));
                        Test.byArrFld[i3 - 1][i3] = (byte)((iMeth1(s, Test.bFld, i3) + -253) - 2.27494);
                        i >>= i3;
                    } else if (true) {
                        i4 += 5375;
                        if (Test.bFld) break;
                        d -= 6433263651518906633L;
                        Test.instanceCount += -2932431259L;
                    } else {
                        i1 |= 93;
                        Test.instanceCount += (long)-2.625F;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i3 + i4 + i5 + i6 + s + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static int iMeth() {

        int i14=33746, i15=-24, i16=-3, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 1);

        vMeth(i14, i14);
        for (i15 = 5; i15 < 235; i15++) {
            i16 >>= i14;
            Test.instanceCount = i14;
            i16 += i15;
            Test.lArrFld[i15] = -10;
            i16 *= i14;
            Test.instanceCount += Test.instanceCount;
            iArr1 = iArr1;
            i14 *= i16;
        }
        i14 += Test.sFld;
        i14 = i14;
        long meth_res = i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-189, i18=3, i19=-196, i20=14209, i21=55555, i22=-23233, i23=-60, i24=-36, i25=123, i26=4, i27=5,
            i29=-12, i30=6, i31=26132, iArr2[]=new int[N];
        byte by1=58;
        float f2=123.739F;
        double d1=0.118636;
        long l2=5477012178585064084L;
        short s2=2901;

        FuzzerUtils.init(iArr2, -75);

        iMeth();
        iArr2[(i17 >>> 1) % N] = by1;
        for (i18 = 13; i18 < 241; ++i18) {
            iArr2 = iArr2;
            f2 -= 1017;
            i17 <<= i18;
            i20 = 1;
            do {
                Test.instanceCount += (i20 | i17);
                Test.instanceCount -= (long)f2;
            } while (++i20 < 110);
            i17 += 10461;
            iArr2[i18 - 1] -= (int)103L;
        }
        i19 = i19;
        for (i21 = 3; i21 < 150; i21 += 2) {
            d1 -= i21;
            switch (i21 + 115) {
            case 115:
                for (i23 = 20; 343 > i23; i23++) {
                    switch ((((i17 >>> 1) % 2) * 5) + 10) {
                    case 19:
                        i17 += (i23 * f2);
                        Test.sFld += (short)i23;
                        for (i25 = 1; i25 < 2; i25++) {
                            switch (((i21 % 7) * 5) + 117) {
                            case 148:
                                i26 += (i25 * i20);
                                try {
                                    iArr2[i21 + 1] = (12801 / iArr2[i25]);
                                    i17 = (i24 % -1463128620);
                                    i19 = (i25 % i18);
                                } catch (ArithmeticException a_e) {}
                                i22 += (((i25 * i20) + i23) - Test.instanceCount);
                                if (Test.bFld) continue;
                                break;
                            case 150:
                                Test.instanceCount += 41820;
                                break;
                            case 126:
                                if (Test.bFld) {
                                    Test.sFld *= (short)17063;
                                    by1 += (byte)i17;
                                }
                                i19 = i20;
                                break;
                            case 140:
                                Test.instanceCount += (i25 ^ i24);
                                break;
                            case 124:
                                iArr2[i23 - 1] = i22;
                                break;
                            case 138:
                                Test.instanceCount = 74;
                            case 147:
                            default:
                                i24 += i17;
                            }
                        }
                    case 14:
                        i26 += (((i23 * f2) + i27) - Test.instanceCount);
                        break;
                    }
                }
                break;
            case 116:
                i22 -= (int)1630730294L;
                break;
            case 117:
                if (Test.bFld) break;
            case 118:
                Test.sArrFld[i21 - 1] -= (short)2.124068;
                break;
            case 119:
                i17 += (((i21 * i24) + i26) - i17);
                break;
            case 120:
                f2 -= -4;
            case 121:
                Test.instanceCount += (((i21 * Test.instanceCount) + i25) - i25);
                break;
            case 122:
                if (Test.bFld) break;
                break;
            case 123:
                i24 += (int)Test.instanceCount;
            case 124:
                i24 *= i18;
            case 125:
                i27 += (((i21 * i26) + i25) - i21);
                break;
            case 126:
                if (Test.bFld) break;
                break;
            case 127:
                fArrFld[i21 - 1] += i18;
                break;
            case 128:
                iArr2[i21] <<= 24608;
                break;
            case 129:
                i27 = i17;
                break;
            case 130:
                f2 += (i21 * i21);
            case 131:
                Test.bFld = Test.bFld;
                break;
            case 132:
                d1 = 11145;
                break;
            case 133:
                i24 <<= -8;
                break;
            case 134:
                by1 += (byte)Test.instanceCount;
                break;
            case 135:
                i26 += (i21 * i18);
                break;
            case 136:
            case 137:
                by1 = (byte)Test.sFld;
                break;
            case 138:
                fArrFld[i21 - 1] = 1.518F;
                break;
            case 139:
                i27 = 11;
                break;
            case 140:
            case 141:
                i26 >>= 61416;
            case 142:
                d1 = Test.instanceCount;
            case 143:
                i26 += i17;
                break;
            case 144:
                i27 += (i21 * i21);
                break;
            case 145:
                Test.bFld = false;
                break;
            case 146:
                Test.instanceCount += Test.instanceCount;
                break;
            case 147:
                i24 = (int)-26.544F;
            case 148:
                l2 += (i21 * i21);
                break;
            case 149:
                fArrFld[i21 + 1] += Test.sFld;
            case 150:
                try {
                    i22 = (i26 % 36537);
                    i17 = (i25 / i23);
                    i17 = (i18 / i19);
                } catch (ArithmeticException a_e) {}
                break;
            case 151:
                i19 *= (int)l2;
                break;
            case 152:
                i22 *= i27;
            case 153:
                i26 <<= i21;
            case 154:
                s2 = by1;
            case 155:
                l2 += (((i21 * by1) + i21) - f2);
                break;
            case 156:
                i27 = (int)Test.instanceCount;
                break;
            case 157:
                i26 *= i25;
            case 158:
                i22 -= i19;
                break;
            case 159:
                d1 -= i22;
            case 160:
            case 161:
            case 162:
                Test.lArrFld[i21] = i25;
                break;
            case 163:
                i22 *= i23;
                break;
            case 164:
                i26 = (int)Test.instanceCount;
                break;
            case 165:
                try {
                    i29 = (-58343 / i27);
                    iArr2[i21] = (i19 % i22);
                    iArr2[i21] = (iArr2[(i17 >>> 1) % N] % 35689);
                } catch (ArithmeticException a_e) {}
                break;
            case 166:
                i19 += i21;
                break;
            case 167:
                Test.instanceCount %= (l2 | 1);
                break;
            case 168:
            case 169:
                i22 += i26;
                break;
            case 170:
                i26 *= i20;
                break;
            case 171:
            case 172:
                i19 += (i21 - i30);
            case 173:
                i17 = i26;
                break;
            case 174:
                i24 = i24;
                break;
            case 175:
                iArr2[i21] = i21;
                break;
            case 176:
                i19 -= (int)Test.instanceCount;
                break;
            case 177:
                l2 += l2;
                break;
            case 178:
                l2 *= -187;
                break;
            case 179:
                i29 += (int)Test.instanceCount;
                break;
            case 180:
                i29 += i24;
            case 181:
                if (Test.bFld) continue;
            case 182:
                l2 += i21;
                break;
            case 183:
                i19 = -37;
            case 184:
                l2 += (((i21 * i24) + i26) - i21);
                break;
            default:
                i31 -= (int)f2;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
