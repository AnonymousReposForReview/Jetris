package tests.javafuzzer2634;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:38:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3671312385L;
    public static volatile int iFld=-12;
    public static double dFld=0.65595;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -239);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=10, i7=-5, i8=-41222, i9=46297, i10=16597, i11=-43697, i12=-60503, i13=-6489, i14=107, i15=6;
        boolean b1=true;
        byte by=-44, byArr1[]=new byte[N];
        float f=2.81F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 43.56908);
        FuzzerUtils.init(byArr1, (byte)-35);

        for (i6 = 279; i6 > 17; --i6) {
            if (b1) break;
            for (i8 = i6; i8 < 6; i8 += 3) {
                for (i10 = 1; i10 > i6; i10--) {
                    dArr[i6 + 1] = Test.instanceCount;
                    i11 >>>= by;
                }
                byArr1[i8] = (byte)Test.instanceCount;
                Test.iFld -= i6;
                i9 = i8;
            }
            b1 = true;
            i11 += (i6 * i9);
            for (i12 = 1; i12 < 6; ++i12) {
                for (i14 = 2; i14 > 1; i14 -= 2) {
                    Test.iArrFld[i12] *= (int)f;
                    Test.instanceCount += (long)(-38.746F + (i14 * i14));
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + (b1 ? 1 : 0) + i8 + i9 + i10 + i11 + by + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(byArr1);
    }

    public static long lMeth(boolean b) {

        int i1=72, i2=29836, i3=234, i4=5, i5=51541;
        byte by1=117, byArr[]=new byte[N];
        float f1=44.339F;

        FuzzerUtils.init(byArr, (byte)52);

        i1 = 1;
        while (++i1 < 308) {
            Test.iFld = Test.iFld;
            Test.instanceCount += Test.iFld;
            switch (((i1 % 2) * 5) + 111) {
            case 117:
                if ((b = (b = b)) & (byArr[i1] != (Test.dFld + (Test.instanceCount * i1)))) continue;
                for (i2 = 1; 5 > i2; ++i2) {
                    for (i4 = 1; i4 < 2; i4++) {
                        vMeth1();
                    }
                }
                break;
            case 120:
                Test.instanceCount <<= Test.instanceCount;
                Test.instanceCount += Test.instanceCount;
                break;
            }
            by1 = (byte)Test.dFld;
            i3 += (int)f1;
            Test.iArrFld[i1 + 1] = -9;
            by1 += (byte)(i1 ^ i4);
            Test.instanceCount = by1;
        }
        long meth_res = (b ? 1 : 0) + i1 + i2 + i3 + i4 + i5 + by1 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(short s, int i) {

        float f2=2.697F;
        long l=0L;
        int i16=-141, i17=206, i18=40839;

        i += (i++);
        i += 10428;
        i = (int)lMeth(false);
        Test.instanceCount += (long)f2;
        for (l = 6; l < 337; l++) {
            f2 += i16;
            Test.iArrFld[(int)(l + 1)] = (int)l;
            i -= (int)Test.instanceCount;
            for (i17 = 5; i17 > l; i17--) {
                Test.instanceCount += (i17 * i16);
                i = i18;
                f2 -= i;
                Test.instanceCount += s;
                i = 161;
            }
            i18 += (7 + (l * l));
        }
        vMeth_check_sum += s + i + Float.floatToIntBits(f2) + l + i16 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i20=-7, i21=-158, i22=0, i23=-86;
        boolean b2=true;
        float f3=2.259F;
        short s1=14467;
        long l1=-195L;
        byte by3=82;

        vMeth((short)(-2034), Test.iFld);
        if (true) {
            for (int i19 : Test.iArrFld) {
                for (i20 = 3; i20 < 63; ++i20) {
                    byte by2=35;
                    Test.iFld = i20;
                    if (b2) break;
                    Test.instanceCount = Test.iFld;
                    i19 -= (int)f3;
                    Test.iFld += (((i20 * i20) + by2) - i21);
                    Test.iArrFld[i20] = i20;
                    s1 -= (short)-5054;
                }
                switch (((Test.iFld >>> 1) % 1) + 2) {
                case 2:
                    for (l1 = 1; l1 < 63; l1 += 2) {
                        Test.iArrFld = Test.iArrFld;
                        i19 += (int)(((l1 * i21) + i22) - Test.iFld);
                        switch ((int)((l1 % 3) + 61)) {
                        case 61:
                            f3 += Test.instanceCount;
                            break;
                        case 62:
                            Test.instanceCount = i19;
                            i23 = 1;
                            while (++i23 < 3) {
                                i22 %= (int)(i23 | 1);
                                Test.iArrFld[(int)(l1)] -= i20;
                                Test.instanceCount = i21;
                                Test.iFld -= i20;
                                Test.instanceCount = i23;
                                Test.iFld += (113 + (i23 * i23));
                                Test.iArrFld[i23] >>>= i20;
                                Test.iFld = Test.iFld;
                                Test.iArrFld[(int)(l1)] &= i20;
                                Test.iArrFld[(int)(l1)] = i22;
                            }
                            i21 -= by3;
                            break;
                        case 63:
                            i22 = i19;
                            break;
                        default:
                            f3 += Test.iFld;
                        }
                    }
                    break;
                default:
                    Test.instanceCount = Test.iFld;
                }
            }
        } else if (b2) {
            Test.iFld += (int)l1;
        } else {
            Test.iArrFld[(i22 >>> 1) % N] %= (int)(l1 | 1);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
