package tests.javafuzzer3359;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:38:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9067686591658115678L;
    public static short sFld=-21849;
    public int iFld=-5;
    public static int iFld1=7679;
    public static boolean bFld=true;
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 49.160F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, double d1, byte by) {

        int i5=234, i6=-12, i7=65481, i8=146;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.115F);

        for (i5 = 4; 137 > i5; i5++) {
            i6 += (((i5 * i4) + Test.sFld) - i5);
            fArr[i5] -= i4;
            i4 = 11457;
        }
        for (i7 = 20; 337 > i7; i7++) {
            Test.instanceCount -= i6;
            i4 = (int)Test.instanceCount;
            i8 = (int)142L;
        }
        vMeth2_check_sum += i4 + Double.doubleToLongBits(d1) + by + i5 + i6 + i7 + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(boolean b, int i1) {

        int i2=10, i3=-14, i9=-7, i10=-11, iArr[]=new int[N];
        byte by1=-125;
        double d2=0.87075;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2759246547L);
        FuzzerUtils.init(iArr, 6);

        Test.instanceCount = Long.reverseBytes(lArr[(i1 >>> 1) % N]);
        for (i2 = 173; 4 < i2; i2--) {
            vMeth2(i2, -3.115140, by1);
            iArr[i2 - 1] -= (int)d2;
            for (i9 = 1; i9 < 9; i9++) {
                i3 += (int)Test.instanceCount;
                if (b) break;
                i10 *= Test.sFld;
                i1 = Test.sFld;
            }
            i1 += i9;
        }
        i1 = by1;
        i10 = -103;
        for (long l : lArr) {
            i10 = 31969;
            l -= i1;
        }
        vMeth1_check_sum += (b ? 1 : 0) + i1 + i2 + i3 + by1 + Double.doubleToLongBits(d2) + i9 + i10 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        boolean b1=true, bArr[]=new boolean[N];
        float f1=-2.760F;
        double d3=0.69083;
        int i11=153, i12=11916, iArr1[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, -698205650L);
        FuzzerUtils.init(iArr1, -57562);

        vMeth1(b1, iFld);
        iFld = (int)Test.instanceCount;
        f1 = 1;
        do {
            byte by2=-91;
            bArr[(int)(f1)] = b1;
            switch ((int)(((f1 % 9) * 5) + 89)) {
            case 120:
                by2 = (byte)Test.instanceCount;
                lArr1[(int)(f1 - 1)] >>= 11;
                break;
            case 98:
                by2 = (byte)Test.instanceCount;
                iFld >>>= iFld;
                d3 = Test.instanceCount;
                for (i11 = 1; i11 < 5; ++i11) {
                    i12 = i12;
                    iArr1[i11 + 1] = (int)118.77035;
                    i12 += (((i11 * f1) + i12) - Test.instanceCount);
                    lArr1[i11] = i11;
                }
                break;
            case 110:
                Test.iFld1 *= (int)-65.108967;
                break;
            case 104:
                iFld >>= i11;
                break;
            case 121:
                Test.iFld1 += (int)f1;
                break;
            case 115:
                iFld = Test.iFld1;
            case 109:
                Test.instanceCount = Test.instanceCount;
                break;
            case 99:
                i12 = 15168;
                break;
            case 111:
                Test.iFld1 += (int)((long)f1 ^ i11);
                break;
            }
        } while (++f1 < 304);
        vMeth_check_sum += (b1 ? 1 : 0) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d3) + i11 + i12 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=-17.10556;
        int i=-11, i13=236, i14=-156, i15=43, i16=11, i17=149, i18=-31485, i19=-8, iArr2[]=new int[N];
        float f2=-1.354F, f3=2.740F;
        byte by3=2, byArr[]=new byte[N];

        FuzzerUtils.init(iArr2, 50557);
        FuzzerUtils.init(byArr, (byte)84);

        d = i;
        vMeth();
        switch (((Test.iFld1 >>> 1) % 9) + 62) {
        case 62:
            for (f2 = 10; 254 > f2; ++f2) {
                iFld += (int)((long)f2 | iFld);
                f3 += -2;
                i13 <<= iFld;
                iArr2[(int)(f2 - 1)] = Test.iFld1;
                d = i13;
                iFld /= (int)(Test.iFld1 | 1);
                for (i14 = 4; i14 < 103; i14++) {
                    Test.instanceCount = (long)f3;
                    for (i16 = 2; i16 > i14; --i16) {
                        if (Test.bFld) {
                            i = i16;
                            iArr2 = iArr2;
                        }
                        switch (((i14 % 4) * 5) + 94) {
                        case 97:
                        case 98:
                            Test.sFld <<= (short)i16;
                            byArr[(int)(f2)] |= (byte)Test.instanceCount;
                            f3 += (i16 * Test.instanceCount);
                            break;
                        case 114:
                        case 95:
                            iArr2[i16] = i14;
                            Test.fArrFld[i16] -= i16;
                            iFld <<= -2;
                            i17 <<= (int)Test.instanceCount;
                        }
                    }
                    for (i18 = 2; 1 < i18; --i18) {
                        Test.iFld1 |= -230;
                        Test.instanceCount *= Test.instanceCount;
                        i19 = (int)Test.instanceCount;
                        i19 -= i16;
                    }
                    iArr2[(int)(f2)] ^= i17;
                }
            }
            break;
        case 63:
            i19 = (int)d;
            break;
        case 64:
            i15 = (int)46.75781;
        case 65:
            f3 -= Test.iFld1;
            break;
        case 66:
            iFld += -12;
        case 67:
            i15 += (int)f2;
            break;
        case 68:
            i17 += by3;
        case 69:
            iFld |= i15;
        case 70:
            i17 = (int)-2.325F;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
