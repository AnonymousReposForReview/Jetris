package tests.javafuzzer3102;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:49:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static byte byFld=109;
    public static boolean bFld=false;
    public double dFld=1.44842;
    public static volatile int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9);
        FuzzerUtils.init(Test.byArrFld, (byte)-119);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        short s1=-10380;
        int i4=39, i5=-50872, i6=-74, i7=29364, i8=134, i9=-139, i10=-47578;

        s1 = (short)2;
        i4 = (int)Test.instanceCount;
        for (i5 = 4; i5 < 186; ++i5) {
            i6 &= i5;
            for (i7 = 1; i7 < 9; ++i7) {
                i8 += (i7 * i7);
                i8 += (i7 * i7);
                Test.bFld = Test.bFld;
                for (i9 = 1; i9 < 2; ++i9) {
                    s1 += (short)(i9 * i9);
                }
                i6 <<= i9;
                if (true) break;
                Test.instanceCount += (i7 + i8);
                i6 += i10;
            }
            i8 <<= i4;
        }
        long meth_res = s1 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l, int i3, float f) {

        int i11=-40954, i12=-1, i13=48662, i14=20, i15=118;
        short s2=-22853;

        Test.byFld = (byte)(lMeth() - i3);
        i3 = 1759;
        Test.byFld += (byte)Test.instanceCount;
        i11 = 1;
        do {
            f -= 0.886F;
            Test.iArrFld[i11] = (int)f;
            i3 = (int)Test.instanceCount;
            i3 += i11;
            for (i12 = 1; i12 < 5; ++i12) {
                i13 = (int)l;
                for (i14 = i11; i14 < 2; i14++) {
                    i3 += i11;
                    Test.iArrFld[i14] -= (int)f;
                    s2 += (short)i12;
                    Test.byFld += (byte)i15;
                }
            }
        } while (++i11 < 359);
        long meth_res = l + i3 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + s2;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s, int i) {

        int i1=44537, i2=-23292, i16=-2, i17=-156, i18=9, i19=-224;
        boolean b=false;
        float f1=127.915F;
        double d=-56.104625;

        for (i1 = 7; i1 < 144; ++i1) {
            if (b = (b = (iMeth(Test.instanceCount, i1, f1) == i1))) break;
            Test.instanceCount = i2;
            if (Test.bFld) break;
        }
        i = Test.byFld;
        for (i16 = 3; i16 < 302; i16++) {
            for (i18 = 1; i18 < 6; ++i18) {
                i19 += (-49378 + (i18 * i18));
                Test.byArrFld[i16] <<= (byte)i;
                d = 1;
                while ((d += 3) < 2) {
                    i |= i17;
                    i = i16;
                    i2 *= i17;
                    Test.iArrFld[(int)(d + 1)] >>>= i1;
                }
            }
            Test.instanceCount = i17;
        }
        vMeth_check_sum += s + i + i1 + i2 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        short s3=-29075;
        int i20=-79;
        float f2=-2.105F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 76.261F);

        vMeth(s3, i20);
        Test.instanceCount += (long)dFld;
        fArr[(-196 >>> 1) % N] -= f2;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
