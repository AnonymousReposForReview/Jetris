package tests.javafuzzer660;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:31:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=211L;
    public static short sFld=-32020;
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2100109575L);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, long l) {

        float f1=2.1023F;
        int i11=26844, i12=14, i13=-142, i14=-11, i15=69, i16=-38972, i17=-11;
        boolean b=false;
        double d1=-2.48230, d2=96.125364;

        f1 += 83;
        i11 = 1;
        while (++i11 < 205) {
            b = b;
        }
        d1 = 1;
        while (++d1 < 199) {
            for (i12 = 1; 8 > i12; ++i12) {
                for (i14 = 2; i14 > d1; --i14) {
                    d2 = i14;
                    f1 *= Test.instanceCount;
                    i15 = (int)l;
                }
                Test.sFld += (short)i12;
                for (i16 = i12; 2 > i16; i16++) {
                    i17 = i10;
                    Test.iArrFld[(int)(d1 + 1)] = i17;
                    f1 -= i12;
                    i15 = 1;
                }
            }
        }
        long meth_res = i10 + l + Float.floatToIntBits(f1) + i11 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i12 +
            i13 + i14 + i15 + Double.doubleToLongBits(d2) + i16 + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i6, int i7, byte by1) {

        int i8=-125, i9=56241, i18=8, i19=-83, i20=-83, iArr[]=new int[N];
        float f2=123.698F;

        FuzzerUtils.init(iArr, -74);

        Test.lArrFld[(i7 >>> 1) % N] <<= i6;
        for (i8 = 6; 239 > i8; i8++) {
            iArr[i8 - 1] += iMeth(i7, Test.instanceCount);
            i9 *= i7;
            Test.sFld += (short)(i8 + i8);
            f2 = i7;
        }
        for (long l1 : Test.lArrFld) {
            i18 = 1;
            while ((i18 += 3) < 4) {
                i7 >>= (int)l1;
                i6 += (i18 ^ (long)f2);
            }
            Test.sFld <<= (short)l1;
            l1 = i6;
            for (i19 = 1; i19 < 4; ++i19) {
                i6 -= (int)Test.instanceCount;
                i20 = i7;
            }
        }
        long meth_res = i6 + i7 + by1 + i8 + i9 + Float.floatToIntBits(f2) + i18 + i19 + i20 +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=208, i4=48983, i5=16640, i21=-39, i22=-47283, i23=58790;
        double d=-73.28357;
        float f=84.731F, fArr[]=new float[N];
        byte by=-111;
        boolean b1=true;

        FuzzerUtils.init(fArr, 94.186F);

        i1 <<= (int)(Test.lArrFld[(i1 >>> 1) % N] *= (--Test.lArrFld[(i >>> 1) % N]));
        i3 = 1;
        do {
            i2 *= (int)d;
            fArr[i3 - 1] = f;
            if ((-((i3 - -4373) - i2)) == ((Long.reverseBytes(188268700L) + (++Test.instanceCount)) & (i - by))) break;
        } while (++i3 < 200);
        for (i4 = 387; 8 < i4; i4--) {
            Test.instanceCount = lMeth(i2, i4, by);
            switch ((i4 % 5) + 77) {
            case 77:
                Test.instanceCount += (((i4 * i5) + i5) - i);
                Test.iArrFld[i4] += i5;
                break;
            case 78:
                i21 = 1;
                while (++i21 < 4) {
                    Test.instanceCount -= i3;
                    for (i22 = 1; i22 < 1; i22++) {
                        i >>= i;
                        i5 += (int)1.59923;
                    }
                }
                break;
            case 79:
                i = i2;
                break;
            case 80:
                if (b1) continue;
                break;
            case 81:
                Test.lArrFld[i4] += -58;
                break;
            default:
                i2 -= i;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + by + i4 + i5 + i21
            + i22 + i23 + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i24=6;

        vMeth(i24, i24, i24);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
