package tests.javafuzzer2375;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:47:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-45897L;
    public static float fFld=2.424F;
    public static short sFld=-30225;
    public boolean bFld=false;
    public byte byFld=-37;
    public static float fArrFld[][]=new float[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.142F);
        FuzzerUtils.init(Test.lArrFld, 15286L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i10=247, i11=166, i12=-4846, i13=1, i14=-52648, i15=51739, i16=-14, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -9);

        for (i10 = 10; i10 < 354; ++i10) {
            for (i12 = 1; i12 < 5; i12++) {
                for (i14 = 1; i14 < 2; ++i14) {
                    float f2=123.948F;
                    Test.instanceCount *= -7;
                    Test.instanceCount += (((i14 * Test.fFld) + f2) - Test.instanceCount);
                    i13 <<= i14;
                    iArr2[i12] += i13;
                    i16 *= (int)Test.instanceCount;
                    switch (((i14 % 2) * 5) + 67) {
                    case 68:
                        Test.instanceCount = i12;
                        i11 += (i14 * i14);
                        f2 = Test.instanceCount;
                        iArr2[i12] += i16;
                    case 77:
                    default:
                        iArr2[i14 + 1] -= i16;
                    }
                }
                i15 = (int)-1.80338;
            }
        }
        vMeth1_check_sum += i10 + i11 + i12 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth(int i8) {

        float f1=120.118F;
        int i9=13, i17=-3, i18=-8, i19=-15678, i20=-68, i21=62733, iArr3[]=new int[N];
        byte by=6;

        FuzzerUtils.init(iArr3, 4);

        f1 = Test.instanceCount;
        i8 = (int)(((Test.instanceCount--) - (Test.instanceCount % (i9 | 1))) * ((i9 >> i8) + 0.506F));
        vMeth1();
        switch (((i9 >>> 1) % 2) + 12) {
        case 12:
        case 13:
            i8 >>= i9;
            Test.instanceCount = by;
            for (i17 = 5; i17 < 388; i17++) {
                for (i19 = 1; i19 < 4; i19++) {
                    iArr3[i17 - 1] >>>= by;
                    Test.instanceCount = -53960L;
                    i21 = 1;
                    do {
                        double d2=-26.75412;
                        d2 += i19;
                    } while (++i21 < 2);
                    iArr3[i19 - 1] -= i9;
                    i9 = i19;
                    i9 += i19;
                }
            }
            break;
        }
        long meth_res = i8 + Float.floatToIntBits(f1) + i9 + by + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i5) {

        double d1=17.130316, d3=-1.56576;
        int i6=-42035, i7=34, i22=189, i23=-38, i24=-9, i25=45, i26=60, i27=156, i28=10, i29=-237, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -4);

        i5 &= (int)(d1 - (++i5));
        for (i6 = 15; i6 < 334; ++i6) {
            iArr1[i6 + 1] += (int)lMeth(i7);
            for (i22 = 1; 5 > i22; i22++) {
                i5 |= i23;
            }
            try {
                iArr1[i6 - 1] = (i7 % i7);
                i7 = (i7 % -4);
                i23 = (i6 / -725571411);
            } catch (ArithmeticException a_e) {}
            for (i24 = 1; i24 < 5; ++i24) {
                if (true) {
                    for (i26 = i6; 2 > i26; i26++) {
                        d1 -= i5;
                    }
                }
                for (d3 = 1; d3 < 2; ++d3) {
                    Test.fFld -= Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                    i29 += i26;
                    Test.instanceCount *= i6;
                }
            }
        }
        vMeth_check_sum += i5 + Double.doubleToLongBits(d1) + i6 + i7 + i22 + i23 + i24 + i25 + i26 + i27 +
            Double.doubleToLongBits(d3) + i28 + i29 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-244, i1=-179, i2=-13, i3=-92, i4=-162, i30=-26119, i31=185, i32=-24, i33=-4389, iArr[]=new int[N];
        double d=-116.27863;
        float f=-15.653F;

        FuzzerUtils.init(iArr, 12);

        iArr[(i >>> 1) % N] <<= (int)(d - (Test.fArrFld[(i >>> 1) % N][(i >>> 1) % N] + Math.max(i, i)));
        for (f = 10; f < 224; ++f) {
            Test.lArrFld[(int)(f)] += i2;
            i1 = iArr[(int)(f)];
            for (i3 = 4; i3 < 117; ++i3) {
                if (bFld) {
                    switch (((i3 % 2) * 5) + 29) {
                    case 31:
                        i1 -= i2;
                        vMeth(2705);
                        Test.fFld = i1;
                        switch (((8 >>> 1) % 7) + 118) {
                        case 118:
                            i4 = (int)Test.instanceCount;
                            Test.sFld = (short)i3;
                            break;
                        case 119:
                            Test.instanceCount &= -6823633967339328273L;
                            if (bFld) continue;
                            i += (((i3 * i4) + Test.instanceCount) - i2);
                            i4 = i2;
                            break;
                        case 120:
                            i = i1;
                            iArr[(int)(f - 1)] *= i1;
                            bFld = bFld;
                            break;
                        case 121:
                            Test.sFld -= (short)i3;
                        case 122:
                            for (i30 = 1; i30 < 2; ++i30) {
                                Test.fFld *= 3;
                                Test.fArrFld[(int)(f + 1)][i30 - 1] *= i;
                                Test.instanceCount = i4;
                                if (bFld) break;
                            }
                            i = (int)f;
                            break;
                        case 123:
                            for (i32 = 1; i32 < 2; ++i32) {
                                i33 = (int)Test.instanceCount;
                                i31 = i2;
                            }
                        case 124:
                            i += byFld;
                            break;
                        default:
                            if (bFld) break;
                        }
                        break;
                    case 32:
                        Test.sFld += (short)(((i3 * i33) + i4) - i4);
                        break;
                    }
                } else {
                    i4 = (int)Test.instanceCount;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
