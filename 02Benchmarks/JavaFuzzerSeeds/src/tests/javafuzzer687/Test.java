package tests.javafuzzer687;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:01:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        int i8=-48, i9=-93, i10=-2, i11=252, i12=-26560, iArr1[]=new int[N];
        short s=-1248;

        FuzzerUtils.init(iArr1, -34531);

        i8 = 123;
        i9 = 1;
        while (++i9 < 269) {
            i10 = 6;
            do {
                i8 %= 7;
                for (i11 = 2; i11 > 1; i11 -= 2) {
                    i12 += i11;
                    try {
                        i12 = (iArr1[i10] % 34293);
                        i12 = (10 % i8);
                        i8 = (i11 % 667579425);
                    } catch (ArithmeticException a_e) {}
                    i8 = i10;
                    s = (short)l1;
                    i8 += (((i11 * Test.instanceCount) + i12) - i9);
                    i8 <<= i9;
                    i12 /= (int)172L;
                    i12 += (int)0L;
                    i12 += (int)l1;
                    iArr1[i10 - 1] += i10;
                }
            } while ((i10 -= 2) > 0);
        }
        vMeth1_check_sum += l1 + i8 + i9 + i10 + i11 + i12 + s + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1) {

        int i2=-108, i3=87, i4=-214, i5=115, i6=2, i7=-347;
        float f2=-1.983F, fArr[]=new float[N];
        double d=-13.91781;

        FuzzerUtils.init(fArr, 58.667F);

        for (i2 = 8; i2 < 135; ++i2) {
            for (i4 = i2; i4 < 12; i4++) {
                i5 += (18248 + (i4 * i4));
                for (i6 = i4; i6 < 1; i6++) {
                    vMeth1(Test.instanceCount);
                    i3 += (i6 * i6);
                    Test.instanceCount += (i6 * i6);
                    switch ((i4 % 2) + 124) {
                    case 124:
                        fArr[i2] += f2;
                        d -= 4L;
                        Test.iArrFld[i6][i6] -= (int)Test.instanceCount;
                        break;
                    case 125:
                        Test.instanceCount += i6;
                        if (false) {
                            i3 *= i6;
                        } else {
                            i1 += (((i6 * Test.instanceCount) + i4) - i7);
                        }
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(long l) {

        int i13=2;

        vMeth(i13);
        Test.instanceCount <<= i13;
        long meth_res = l + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=63227, iArr[]=new int[N];
        float f=116.857F;

        FuzzerUtils.init(iArr, -47307);

        iArr[(i >>> 1) % N] = (int)Test.instanceCount;
        f = 1;
        while (++f < 126) {
            float f1=83.932F;
            f1 = (++i);
            iArr[(int)(f + 1)] -= iMeth(Test.instanceCount);
            i = i;
        }
        iArr[(i >>> 1) % N] -= (int)23.184F;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
