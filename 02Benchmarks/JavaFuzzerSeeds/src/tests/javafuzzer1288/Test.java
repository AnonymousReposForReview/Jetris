package tests.javafuzzer1288;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:40:40 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=6899L;
    public static int iFld=-5658;
    public static double dFld=2.126298;
    public static volatile int iFld1=46;
    public static volatile byte byArrFld[][]=new byte[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-85);
        FuzzerUtils.init(Test.iArrFld, 79);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i5, float f1) {


        i5 = i5;
        vMeth2_check_sum += Float.floatToIntBits(f) + i5 + Float.floatToIntBits(f1);
    }

    public static void vMeth1() {

        float f2=-8.924F, fArr[]=new float[N];
        int i6=-26, i7=-2;
        double d=1.40973;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -132L);
        FuzzerUtils.init(fArr, 83.344F);

        vMeth2(2.100F, Test.iFld, f2);
        for (i6 = 1; 194 > i6; i6++) {
            lArr = lArr;
            i7 += (i6 | Test.iFld);
        }
        Test.iFld = (int)f2;
        lArr[(i6 >>> 1) % N] = Test.iFld;
        f2 -= Test.instanceCount;
        i7 &= (int)-4L;
        Test.byArrFld[(i6 >>> 1) % N][(i7 >>> 1) % N] += (byte)i7;
        Test.instanceCount += (long)f2;
        d = 1;
        while (++d < 237) {
            switch ((int)((d % 10) + 65)) {
            case 65:
                Test.iFld -= (int)47.31070;
                i7 += (int)(79.740F + (d * d));
                i7 += (int)(d * d);
            case 66:
                i7 >>= -247;
                break;
            case 67:
                Test.instanceCount = i6;
                break;
            case 68:
                Test.iFld |= Test.iFld;
                break;
            case 69:
                Test.iFld += (int)31.242F;
                break;
            case 70:
                i7 %= (int)-6551068365927777286L;
                break;
            case 71:
                f2 /= (Test.instanceCount | 1);
            case 72:
                Test.instanceCount += (long)(((d * i6) + i6) - Test.iFld);
                break;
            case 73:
                i7 = (int)Test.instanceCount;
                break;
            case 74:
                lArr[(int)(d - 1)] <<= i6;
                break;
            default:
                if (Test.iFld != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f2) + i6 + i7 + Double.doubleToLongBits(d) +
                        FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i6 + i7 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l, long l1, int i2) {

        int i3=20811, i4=48788, i8=-47, i9=-40689, i10=53047, i11=-14499;
        boolean b=true;
        float f4=103.65F;
        double d1=0.32281;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -29514L);

        for (i3 = 9; i3 < 318; i3++) {
            vMeth1();
            l1 ^= i2;
            lArr1[i3 + 1] <<= i4;
            switch (((i4 >>> 1) % 5) + 105) {
            case 105:
                if (b) {
                    l = 0;
                } else {
                    for (i8 = 1; i8 < 5; ++i8) {
                        Test.iFld >>= i4;
                        for (i10 = 1; i10 < 2; i10++) {
                            Test.iArrFld[i10 + 1] >>= -17121;
                            lArr1[i3] *= 218;
                            i11 = (int)f4;
                            lArr1[i3 + 1] += i9;
                            d1 -= i4;
                        }
                    }
                }
                break;
            case 106:
                i11 += (i3 * i3);
                break;
            case 107:
                d1 *= Test.iFld;
            case 108:
                l1 |= i2;
                break;
            case 109:
                l1 &= Test.iFld;
                break;
            }
        }
        vMeth_check_sum += l + l1 + i2 + i3 + i4 + (b ? 1 : 0) + i8 + i9 + i10 + i11 + Float.floatToIntBits(f4) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=42, i1=-34, i12=-7, i13=6112, i14=-121;
        short s=19312, s1=-12314;
        boolean b1=true;
        byte by=-16;
        float f5=-2.677F, fArr1[]=new float[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -185L);
        FuzzerUtils.init(fArr1, -58.791F);

        for (i = 1; 313 > i; i++) {
            if (b1) {
                vMeth(Test.instanceCount, 135L, i1);
                Test.dFld += Test.instanceCount;
            } else if (b1) {
                s = (short)i;
            } else {
                i12 = 1;
                while (++i12 < 81) {
                    Test.instanceCount += i12;
                    for (i13 = 1; 1 > i13; ++i13) {
                        switch (((-5701 >>> 1) % 8) + 116) {
                        case 116:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 117:
                            switch (((i13 >>> 1) % 7) + 78) {
                            case 78:
                                i1 = (int)Test.instanceCount;
                                i1 += (i13 - i12);
                                i1 += (i13 * i13);
                                break;
                            case 79:
                                Test.instanceCount *= i1;
                                break;
                            case 80:
                                Test.iFld += (i13 - Test.iFld);
                                if (b1) continue;
                            case 81:
                            case 82:
                                Test.iArrFld[i13] = Test.iFld;
                                Test.dFld -= 85.867F;
                                lArr2 = lArr2;
                                s = (short)i12;
                                break;
                            case 83:
                                lArr2[i13] *= Test.iFld;
                                by -= (byte)i13;
                                i14 += i;
                                switch (((i % 7) * 5) + 97) {
                                case 105:
                                    switch ((((-7 >>> 1) % 1) * 5) + 15) {
                                    case 19:
                                        Test.iFld = (int)Test.instanceCount;
                                        Test.instanceCount = i14;
                                        break;
                                    }
                                    s1 >>>= (short)i1;
                                    Test.instanceCount = i13;
                                    break;
                                case 103:
                                    fArr1[i13 + 1] += i14;
                                    break;
                                case 100:
                                    i14 += i13;
                                    break;
                                case 121:
                                    Test.instanceCount = i12;
                                    break;
                                case 113:
                                    i1 = i;
                                    break;
                                case 109:
                                    f5 -= f5;
                                    break;
                                case 116:
                                    Test.dFld -= Test.instanceCount;
                                    break;
                                default:
                                    Test.instanceCount -= Test.instanceCount;
                                }
                            case 84:
                                Test.instanceCount += (i13 ^ Test.iFld1);
                            }
                            break;
                        case 118:
                            if (b1) break;
                            break;
                        case 119:
                        case 120:
                            s1 += (short)(-32526 + (i13 * i13));
                            break;
                        case 121:
                            Test.instanceCount = Test.iFld;
                            break;
                        case 122:
                            Test.iArrFld = Test.iArrFld;
                            break;
                        case 123:
                            Test.iArrFld[i12 - 1] *= i14;
                            break;
                        default:
                            f5 -= 48577;
                        }
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
