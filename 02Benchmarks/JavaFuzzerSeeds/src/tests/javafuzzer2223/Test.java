package tests.javafuzzer2223;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:23:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2881842207L;
    public boolean bFld=false;
    public static double dFld=-30.64557;
    public int iFld=-28935;
    public short sFld=-24435;
    public float fFld=-9.902F;
    public static volatile boolean bFld1=true;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -5777940380121184622L);
        FuzzerUtils.init(Test.iArrFld1, 19157);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, boolean b1, int i5) {

        int i6=-11874, i7=-59627, i8=57, i9=147, i10=-10, i11=27389, iArr[]=new int[N];
        float f=110.655F;
        short s=-19532;
        double d1=-70.7792;

        FuzzerUtils.init(iArr, 1);

        i6 = 1;
        do {
            for (i7 = 8; 1 < i7; i7 -= 3) {
                i8 -= (int)Test.instanceCount;
                b = true;
                iArr[i7] &= (int)Test.instanceCount;
                Test.dFld += i6;
                f += s;
                i8 *= i7;
                i8 += i7;
                for (i9 = 4; i9 > 1; i9--) {
                    d1 -= i5;
                }
                i11 = 1;
                while (++i11 < 4) {
                    Test.instanceCount += Test.instanceCount;
                    i8 -= i6;
                    b1 = false;
                }
            }
        } while (++i6 < 194);
        vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + s + i9 + i10 +
            Double.doubleToLongBits(d1) + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(double d) {

        long l1=6924389029466393238L;
        int i4=10, i12=-58, i13=27920, i14=28208, i15=16396, i16=6;
        boolean b2=false;
        float f1=-18.748F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 0.539F);

        l1 = 1;
        while (++l1 < 129) {
            Test.instanceCount += (i4++);
            vMeth1(b2, b2, i4);
            Test.instanceCount += (l1 * l1);
            for (i12 = 1; 12 > i12; i12++) {
                for (i14 = 1; i14 < 2; ++i14) {
                    i15 >>>= -15916;
                }
                i13 *= i14;
                Test.instanceCount += (i12 + l1);
                for (f1 = 2; 1 < f1; f1 -= 3) {
                    i13 += i15;
                    Test.instanceCount = i12;
                    Test.iArrFld1[(int)(f1)] -= i13;
                }
                fArr1[i12] -= i4;
            }
            i15 += (int)l1;
        }
        long meth_res = Double.doubleToLongBits(d) + l1 + i4 + (b2 ? 1 : 0) + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f1) + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l, int i1) {

        int i2=59, i3=0, i17=48521, i18=-165;
        byte by=-108;

        for (i2 = 18; i2 < 361; ++i2) {
            i3 = (int)(Test.lArrFld[i2 - 1] - i2);
            if (bFld = (bFld = (iMeth(Test.dFld) > i2))) break;
            i1 += (i2 ^ i2);
            iFld -= iFld;
            for (i17 = 1; i17 < 5; i17++) {
                sFld = (short)19;
                i18 += (((i17 * i2) + i18) - l);
                switch (((i18 >>> 1) % 8) + 102) {
                case 102:
                    i1 += i1;
                    i1 = i2;
                case 103:
                    i18 -= i1;
                    l <<= 12;
                    fFld = i2;
                    break;
                case 104:
                    by *= (byte)-131;
                    break;
                case 105:
                    i1 -= (int)Test.instanceCount;
                    break;
                case 106:
                    iArrFld[i2 + 1] += i1;
                case 107:
                    Test.lArrFld[i17 + 1] >>= 30;
                    break;
                case 108:
                    try {
                        i3 = (-204 % i18);
                        Test.iArrFld1[i2] = (-808835651 % i3);
                        i3 = (168 % iArrFld[i2]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 109:
                    i1 >>= i1;
                default:
                    i18 += (((i17 * fFld) + sFld) - i1);
                }
            }
        }
        vMeth_check_sum += l + i1 + i2 + i3 + i17 + i18 + by;
    }

    public void mainTest(String[] strArr1) {

        int i=-8269, i19=-3, i20=-22941, i21=-206, i22=11, i23=-69, i24=-42;
        byte by1=-63;
        short s1=5630;
        float fArr[]=new float[N];
        double dArr[]=new double[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(fArr, -72.860F);
        FuzzerUtils.init(dArr, 0.58141);
        FuzzerUtils.init(bArr, false);

        fArr = (fArr = (fArr = (fArr = fArr)));
        dArr[(i >>> 1) % N] -= (--iArrFld[(i >>> 1) % N]);
        i = (~(i--));
        vMeth(Test.instanceCount, 12);
        for (i19 = 7; 293 > i19; i19++) {
            switch ((i19 % 1) + 88) {
            case 88:
                Test.iArrFld1[i19 + 1] = i19;
                i21 = 1;
                while (++i21 < 88) {
                    Test.instanceCount = i;
                }
                i20 += (i19 ^ i);
                break;
            default:
                switch ((i19 % 8) + 86) {
                case 86:
                    i22 = 1;
                    do {
                        fFld += i22;
                        i = by1;
                        i20 = sFld;
                        Test.dFld += -46736;
                        if (bFld) break;
                        Test.instanceCount = Test.instanceCount;
                        switch ((i19 * 5) + 106) {
                        case 178:
                            i20 = i20;
                            fFld = (float)Test.dFld;
                            break;
                        case 235:
                            i = i21;
                            i20 += (int)-1.989F;
                            iFld -= (int)1.681F;
                            Test.instanceCount += (-62679L + (i22 * i22));
                            break;
                        case 246:
                            fArr[i22 + 1] *= i21;
                            Test.instanceCount += (i22 - i);
                            Test.lArrFld[i22 - 1] += iFld;
                            break;
                        case 115:
                            iFld <<= (int)Test.instanceCount;
                            Test.instanceCount >>= i;
                            break;
                        case 208:
                            bArr[i22] = false;
                        case 195:
                            iFld += by1;
                            break;
                        case 411:
                            Test.lArrFld[i22 + 1] = i19;
                            break;
                        case 232:
                            by1 += (byte)i22;
                        case 260:
                            Test.instanceCount += (long)-61.837F;
                        case 415:
                            i20 |= (int)Test.instanceCount;
                            break;
                        case 386:
                            try {
                                i = (167 % i19);
                                i20 = (i20 % i);
                                i = (29070 % iArrFld[i22]);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 264:
                            i20 = by1;
                            break;
                        case 179:
                            dArr[i22] /= (by1 | 1);
                            break;
                        case 337:
                            fFld = fFld;
                            break;
                        case 417:
                            if (false) break;
                            break;
                        case 259:
                            iFld += i22;
                            break;
                        case 126:
                            i23 += i22;
                        case 407:
                        case 119:
                            fArr[i19 - 1] -= -30954;
                            break;
                        case 277:
                            iFld = i20;
                        case 274:
                            iFld -= (int)Test.instanceCount;
                            break;
                        case 252:
                            try {
                                i23 = (i19 / i23);
                                i = (Test.iArrFld1[i22] / i22);
                                i20 = (i21 / iFld);
                            } catch (ArithmeticException a_e) {}
                        case 404:
                            if (Test.bFld1) continue;
                            break;
                        case 229:
                            s1 += (short)(i22 + s1);
                            break;
                        case 275:
                            i = (int)Test.instanceCount;
                            break;
                        case 202:
                            i20 += (int)Test.instanceCount;
                            break;
                        case 189:
                            if (Test.bFld1) break;
                            break;
                        case 306:
                            i23 %= (int)((long)(fFld) | 1);
                            break;
                        case 422:
                            iFld &= iFld;
                            break;
                        case 165:
                            i <<= iFld;
                            break;
                        case 234:
                        case 447:
                            fFld -= i21;
                            break;
                        case 368:
                            i = i23;
                        case 212:
                            Test.dFld = iFld;
                            break;
                        case 405:
                            i20 ^= 0;
                        case 320:
                            i = (int)Test.instanceCount;
                            break;
                        case 248:
                            Test.lArrFld[i22 + 1] = iFld;
                            break;
                        case 299:
                            i20 += (((i22 * Test.instanceCount) + i21) - i);
                            break;
                        case 441:
                            bFld = bFld;
                            break;
                        case 440:
                            Test.iArrFld1[i19] = i21;
                            break;
                        case 321:
                            i20 -= iFld;
                            break;
                        case 414:
                            i20 += i22;
                            break;
                        case 421:
                            fFld -= 81.824F;
                            break;
                        case 190:
                            i20 >>= -5;
                        case 122:
                            Test.lArrFld[i22 - 1] = (long)40.125171;
                            break;
                        case 269:
                            i23 += (((i22 * i) + Test.instanceCount) - Test.instanceCount);
                            break;
                        case 267:
                        case 169:
                            fFld = -969150956L;
                            break;
                        case 289:
                            iFld -= i;
                            break;
                        case 204:
                            i20 += (-44937 + (i22 * i22));
                        case 138:
                            Test.instanceCount += (i22 * i22);
                        case 437:
                            iFld += (((i22 * Test.instanceCount) + i20) - i19);
                            break;
                        case 439:
                            iFld >>>= (int)Test.instanceCount;
                            break;
                        case 394:
                            iFld -= iFld;
                        case 310:
                            fFld += fFld;
                            break;
                        case 303:
                            iFld = (int)fFld;
                            break;
                        case 199:
                            iFld -= (int)Test.instanceCount;
                        case 185:
                            dArr[i19] *= Test.instanceCount;
                        case 403:
                            Test.instanceCount *= i;
                            break;
                        case 350:
                            iFld += (int)Test.dFld;
                            break;
                        case 312:
                            fFld -= -45367;
                        case 451:
                            s1 = (short)i;
                            break;
                        case 300:
                            i = i20;
                            break;
                        case 341:
                        case 361:
                        case 276:
                            i *= i19;
                            break;
                        case 352:
                            fArr[i22 + 1] += 41;
                            break;
                        case 305:
                            i20 += -11;
                        case 224:
                            i = (int)Test.instanceCount;
                        case 329:
                            iFld += (i22 * i22);
                        default:
                            i24 += (i22 * i22);
                        }
                    } while (++i22 < 88);
                    break;
                case 87:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 88:
                    iArrFld[i19 - 1] += i24;
                case 89:
                    i24 += (i19 * i19);
                    break;
                case 90:
                    i24 = s1;
                    break;
                case 91:
                    fFld = i21;
                case 92:
                    try {
                        i = (iFld % Test.iArrFld1[i19 - 1]);
                        i23 = (Test.iArrFld1[i19 - 1] / -1321392698);
                        iFld = (Test.iArrFld1[i19 - 1] / iArrFld[i19]);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 93:
                default:
                    Test.instanceCount *= i21;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
