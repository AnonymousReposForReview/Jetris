package tests.javafuzzer2104;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:08:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=20614L;
    public double dFld=2.91715;
    public short sFld=30146;
    public int iFld=252;
    public static byte byFld=-110;
    public int iFld1=6;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -164);
        FuzzerUtils.init(Test.fArrFld, -78.131F);
        FuzzerUtils.init(Test.lArrFld, -22229L);
        FuzzerUtils.init(Test.iArrFld1, 90);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l, int i12) {

        int i14=-127, i15=179, i16=-50308;
        double d1=46.25739, dArr[]=new double[N];
        long l1=412552662988497273L;
        boolean b1=false;

        FuzzerUtils.init(dArr, 20.24549);

        i12 = i12;
        for (int i13 : Test.iArrFld) {
            Test.iArrFld[(i12 >>> 1) % N] <<= (int)Test.instanceCount;
        }
        for (float f3 : Test.fArrFld) {
            if (false) {
                i12 = 225;
                for (i14 = 1; 4 > i14; i14++) {
                    Test.byFld += (byte)(((i14 * i12) + Test.instanceCount) - i14);
                    d1 = i14;
                    i15 += (((i14 * i15) + f3) - i14);
                    Test.fArrFld[i14] -= i15;
                }
                for (l1 = 1; l1 < 4; l1++) {
                    Test.iArrFld[(int)(l1)] += i12;
                    Test.iArrFld[(int)(l1 + 1)] = i12;
                    b1 = b1;
                }
            } else if (b1) {
                f3 = 2530451830700921780L;
            }
        }
        vMeth_check_sum += l + i12 + i14 + i15 + Double.doubleToLongBits(d1) + l1 + i16 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static float fMeth(double d) {

        int i10=231, i11=19;
        float f2=-1.721F;

        i10 = (int)Math.abs((long)((i10 + f2) - (--i11)));
        i10 = (Test.iArrFld[(30 >>> 1) % N]++);
        vMeth(Test.instanceCount, i11);
        long meth_res = Double.doubleToLongBits(d) + i10 + Float.floatToIntBits(f2) + i11;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(float f1) {

        int i5=32484, i6=5, i7=-57753, i8=-1278, i9=-48365;
        boolean b=false;

        for (i5 = 16; i5 < 321; ++i5) {
            i6 = (int)((sFld + (i6 += (int)1.539F)) + (f1 / (((long)(-(dFld * Test.instanceCount))) | 1)));
            i6 <<= ((i6--) * ((i5 - -63563) * (Test.iArrFld[i5 + 1]--)));
        }
        for (i7 = 3; 213 > i7; i7 += 3) {
            f1 += i5;
            i9 = 1;
            while (++i9 < 22) {
                Test.iArrFld[i7] -= (int)(((iFld - Test.byFld) - (i8 * f1)) + ((-72 * (--i8)) * (Test.instanceCount *
                    i7)));
                switch ((i7 % 6) + 58) {
                case 58:
                    i8 *= (-(i6 + (++i8)));
                    if (b) break;
                case 59:
                    switch (((i9 % 4) * 5) + 21) {
                    case 30:
                        i8 = i6;
                        iFld = (int)((fMeth(-27.78158) + f1) - Test.instanceCount);
                        iFld += i8;
                        break;
                    case 33:
                        i8 += -7;
                        break;
                    case 40:
                        if (b) continue;
                        break;
                    case 37:
                        i8 = i9;
                    }
                    break;
                case 60:
                    Test.lArrFld[i7 + 1] = i8;
                    break;
                case 61:
                    if (b) continue;
                    break;
                case 62:
                    i6 >>= i7;
                    break;
                case 63:
                    Test.iArrFld1 = FuzzerUtils.int1array(N, (int)-144);
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=13, i1=70, i2=-1, i3=72, i4=53623, i17=7, i18=9908, i19=65060, i20=48032, i21=1, i22=-102, i23=-14;
        float f=-2.694F;
        boolean b2=true, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        i = 1;
        while (++i < 137) {
            if (bArr[i + 1]) break;
            for (i1 = i; i1 < 183; i1++) {
                for (i3 = 1; i3 < 1; i3++) {
                    f *= Test.instanceCount;
                    i2 += (i3 * i3);
                    Test.instanceCount = (long)(((i4 - Test.instanceCount) - (2628 + Math.max(Test.instanceCount,
                        41901L))) + (dFld + Math.abs(-46799)));
                    i2 = iMeth(f);
                    Test.instanceCount <<= i4;
                    f = Test.instanceCount;
                    i4 = sFld;
                    if (b2) break;
                    i2 -= i3;
                }
                f += (((i1 * f) + i3) - i4);
                Test.instanceCount += i;
            }
            for (i17 = 11; i17 < 183; i17++) {
                iFld += (((i17 * iFld) + f) - i2);
                i2 = (int)Test.instanceCount;
                iFld += i17;
            }
            Test.iArrFld1 = Test.iArrFld;
            for (i19 = 10; i19 < 183; ++i19) {
                i4 = (int)Test.instanceCount;
            }
        }
        for (i21 = 19; i21 < 386; ++i21) {
            switch (((i21 % 4) * 5) + 82) {
            case 102:
                Test.byFld += (byte)(i21 * i21);
                Test.iArrFld1[i21 + 1] += i22;
                f -= i;
                i2 += (((i21 * iFld1) + i23) - i);
                break;
            case 84:
                i22 += (((i21 * iFld) + f) - i21);
                iFld += i18;
                break;
            case 94:
                i2 += (int)(90.216F + (i21 * i21));
                break;
            case 85:
                iFld1 <<= i22;
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
