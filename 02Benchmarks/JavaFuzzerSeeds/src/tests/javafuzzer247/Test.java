package tests.javafuzzer247;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:54:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=979778151L;
    public static short sFld=30625;
    public static boolean bFld=false;
    public volatile int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -37097L);
        FuzzerUtils.init(Test.fArrFld, 11.133F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, boolean b, byte by) {

        int i6=2, i7=-10526, i8=64923, i9=0, i10=-20981, i11=-90, i12=-8, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 59089);

        for (i6 = 281; 1 < i6; --i6) {
            Test.instanceCount += i6;
            i7 += (int)Test.instanceCount;
            for (i8 = 1; i8 < 6; i8++) {
                i7 >>>= by;
                i5 += (int)Test.instanceCount;
                Test.instanceCount = i5;
                i5 >>= i7;
                for (i10 = i6; i10 < 2; ++i10) {
                    by -= (byte)Test.instanceCount;
                    iArr[i6] *= Test.sFld;
                    iArr[i8 - 1] = by;
                    i11 &= i10;
                    try {
                        i11 = (i12 / 6801);
                        i12 = (-20369307 / i12);
                        iArr[i10 - 1] = (5091 / i8);
                    } catch (ArithmeticException a_e) {}
                    i5 = (int)Test.instanceCount;
                }
            }
        }
        vMeth2_check_sum += i5 + (b ? 1 : 0) + by + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i4, short s) {

        boolean b1=false;
        byte by1=-77;
        float f=65.504F, f1=-109.501F;
        int i13=219, i14=44091, i15=54416, iArr1[]=new int[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr1, 2);
        FuzzerUtils.init(lArr, 27826L);

        vMeth2(i4, b1, by1);
        i4 -= i4;
        Test.instanceCount >>= i4;
        iArr1[(i4 >>> 1) % N] += (int)f;
        for (i13 = 5; i13 < 269; ++i13) {
            Test.sFld += (short)(i13 - i13);
            for (f1 = 1; f1 < 6; f1++) {
                switch (((i4 >>> 1) % 5) + 48) {
                case 48:
                    i4 <<= i4;
                    Test.lArrFld = Test.lArrFld;
                case 49:
                    Test.fArrFld[(int)(f1 + 1)] -= i15;
                    break;
                case 50:
                    lArr = lArr;
                    break;
                case 51:
                    i15 += i14;
                    if (true) break;
                    break;
                case 52:
                    i4 = (int)Test.instanceCount;
                    break;
                default:
                    i4 = i14;
                }
            }
        }
        vMeth1_check_sum += i4 + s + (b1 ? 1 : 0) + by1 + Float.floatToIntBits(f) + i13 + i14 +
            Float.floatToIntBits(f1) + i15 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i, int i1) {

        int i2=-11, i16=5, i17=70, i18=3;
        double d=97.44221;
        float f2=-2.735F;

        i2 = 1;
        do {
            i1 = Math.abs((int)((Test.instanceCount * i1) * (iArrFld[i2 + 1]++)));
            i1 <<= i2;
        } while (++i2 < 380);
        vMeth1(i, Test.sFld);
        d = 1;
        do {
            f2 += (float)(d - f2);
            try {
                i = (39401 % i);
                i = (iArrFld[(int)(d - 1)] / 9526);
                iArrFld[(int)(d)] = (181 / iArrFld[(int)(d)]);
            } catch (ArithmeticException a_e) {}
            switch (((i1 >>> 1) % 5) + 32) {
            case 32:
            case 33:
            case 34:
                i1 = i2;
                f2 = Test.sFld;
                i1 = i1;
                break;
            case 35:
                i16 = 1;
                do {
                    for (i17 = 1; 1 > i17; i17++) {
                        i = i16;
                        i = (int)Test.instanceCount;
                    }
                } while (++i16 < 5);
                break;
            case 36:
                i += Test.sFld;
                break;
            default:
                Test.instanceCount += (long)f2;
            }
        } while (++d < 306);
        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i16 + i17 + i18;
    }

    public void mainTest(String[] strArr1) {

        int i19=-33305, i20=-46607, i21=92, i22=4, i23=5, i24=184, i25=5, i26=19811, i27=29, iArr2[][]=new int[N][N];
        float f3=73.190F;
        double d1=77.28533, d2=0.58171;
        byte by2=-127;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, -59074);

        vMeth(i19, i19);
        i20 = 1;
        while (++i20 < 269) {
            for (i21 = 5; 93 > i21; ++i21) {
                if (Test.bFld) {
                    switch (((i21 % 2) * 5) + 126) {
                    case 134:
                        i22 = i22;
                        bArr[i20] = Test.bFld;
                        f3 *= f3;
                        i22 -= i19;
                        break;
                    case 131:
                        d1 -= i21;
                        i19 += (((i21 * i22) + Test.instanceCount) - i21);
                        f3 += Test.instanceCount;
                        break;
                    }
                    i19 = i21;
                } else {
                    Test.bFld = false;
                    i19 = 53096;
                }
                iArrFld[i20] -= by2;
            }
            i19 = (int)-2.50207;
        }
        iArrFld[(i22 >>> 1) % N] = i22;
        d2 = 181;
        do {
            by2 <<= (byte)i20;
            i23 = 1;
            while (++i23 < 139) {
                Test.instanceCount += i23;
                Test.instanceCount = i22;
            }
        } while (--d2 > 0);
        iArr2 = iArr2;
        i22 ^= -4;
        i19 -= (int)Test.instanceCount;
        for (i24 = 7; i24 < 245; i24++) {
            for (i26 = i24; 106 > i26; ++i26) {
                i27 = i23;
                i25 += i26;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
