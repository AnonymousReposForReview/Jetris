package tests.javafuzzer1884;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:21:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4943030838311137361L;
    public static boolean bFld=true;
    public static volatile byte byFld=-79;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f1, int i6) {

        int i7=-30, i8=195, i10=3, iArr2[]=new int[N];
        double d=1.58989;
        byte by1=127;

        FuzzerUtils.init(iArr2, 26917);

        for (i7 = 6; i7 < 375; i7++) {
            Test.instanceCount >>>= Test.instanceCount;
        }
        d += by1;
        switch ((((i6 >>> 1) % 5) * 5) + 85) {
        case 95:
        case 91:
            i6 %= (int)(i6 | 1);
            d += i8;
            i8 += (int)d;
            for (int i9 : iArr2) {
                iArr2[(i10 >>> 1) % N] -= 251;
                i10 = (int)Test.instanceCount;
                i6 = i7;
                i10 -= -3;
                iArr2[(138 >>> 1) % N] = i10;
                Test.instanceCount *= i9;
                if (Test.bFld) break;
            }
            break;
        case 97:
            i6 += by1;
        case 108:
            iArr2[(7188 >>> 1) % N] -= 27283;
            break;
        case 96:
        default:
            i8 &= i8;
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i6 + i7 + i8 + Double.doubleToLongBits(d) + by1 + i10 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(short s, int i2, long l) {

        int i3=-40795, i4=-1, i11=-14403, i12=172, iArr1[]=new int[N];
        float f2=44.1013F, fArr[]=new float[N];
        double dArr[][]=new double[N][N];
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr1, -33);
        FuzzerUtils.init(dArr, 0.84391);
        FuzzerUtils.init(byArr, (byte)-119);
        FuzzerUtils.init(fArr, 0.338F);

        for (i3 = 7; i3 < 298; i3++) {
            switch ((i3 % 6) + 74) {
            case 74:
                i4 = i4;
                Test.instanceCount |= i3;
                break;
            case 75:
                vMeth1(f2, i3);
                switch ((i3 % 9) + 79) {
                case 79:
                    for (i11 = 1; 6 > i11; ++i11) {
                        dArr[i3][i11] *= s;
                        i2 = i2;
                        Test.instanceCount = Test.instanceCount;
                        i2 = i4;
                        iArr1[i11] ^= 0;
                        i12 += (-4 + (i11 * i11));
                        if (Test.bFld) continue;
                    }
                    break;
                case 80:
                    if (true) continue;
                    break;
                case 81:
                    i4 += (-41934 + (i3 * i3));
                case 82:
                    i2 &= Test.byFld;
                    break;
                case 83:
                    f2 += i2;
                    break;
                case 84:
                    Test.instanceCount -= i3;
                    break;
                case 85:
                case 86:
                    iArr1[i3] -= i4;
                    break;
                case 87:
                    i2 += i4;
                    break;
                }
                break;
            case 76:
                byArr[i3][i3 - 1] = (byte)i3;
                break;
            case 77:
                fArr[i3] -= -2.97F;
                break;
            case 78:
                i2 ^= i11;
                break;
            case 79:
                if (i12 != 0) {
                    vMeth_check_sum += s + i2 + l + i3 + i4 + Float.floatToIntBits(f2) + i11 + i12 +
                        FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                        FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            default:
                i2 = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += s + i2 + l + i3 + i4 + Float.floatToIntBits(f2) + i11 + i12 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth() {

        short s1=-20893;
        int i13=3, i14=-72, i15=5, i16=64829, i17=8, iArr3[]=new int[N];
        float f3=122.1015F;
        double d1=-1.117233;

        FuzzerUtils.init(iArr3, 36412);

        vMeth(s1, i13, -1428384948321882693L);
        iArr3 = iArr3;
        i13 -= (int)-6L;
        f3 = f3;
        for (i14 = 4; i14 < 154; ++i14) {
            Test.instanceCount -= i13;
            Test.byFld *= (byte)Test.instanceCount;
            i13 -= i13;
            for (i16 = i14; i16 < 11; i16++) {
                if (false) continue;
                iArr3[i16] *= i13;
                d1 += i16;
                f3 += (i16 - i15);
                i13 *= i17;
                i13 &= i16;
            }
        }
        long meth_res = s1 + i13 + Float.floatToIntBits(f3) + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr3);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-61664, i1=6, i18=-210, i19=-9, i20=33441, i21=166, i22=10, i23=-144, i24=7, i25=-156, i26=34273, i27=51,
            iArr[]=new int[N];
        float f=2.523F, f4=-1.291F;
        byte by=-118;
        short s2=3915;
        double d2=0.24344;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(lArr, -8L);

        for (i = 11; i < 181; ++i) {
            i1 -= Math.min(--i1, i);
            f += (-(i1 = by));
            iArr[i - 1] = (int)(Math.max(i, i) + (fMeth() - 65467));
            lArr[i + 1] = i;
            i1 >>= 6;
            Test.instanceCount += (i * i);
            i1 -= (int)Test.instanceCount;
        }
        for (i18 = 5; i18 < 271; ++i18) {
            iArr[i18] -= i19;
            f -= s2;
            i1 -= s2;
        }
        for (i20 = 1; i20 < 340; i20++) {
            i1 *= (int)-63.951F;
            i1 -= s2;
        }
        i22 = 205;
        do {
            switch ((i22 % 6) + 99) {
            case 99:
                i21 += i21;
            case 100:
                for (i23 = 6; i23 < 122; i23 += 2) {
                    Test.instanceCount += (i23 * i23);
                    for (f4 = 1; 3 > f4; ++f4) {
                        i19 -= i25;
                        i25 += i24;
                        i19 = (int)Test.instanceCount;
                        i21 += (int)(((f4 * Test.instanceCount) + i21) - Test.instanceCount);
                        i24 += i22;
                    }
                    d2 -= Test.instanceCount;
                    for (i26 = 1; 3 > i26; i26++) {
                        Test.instanceCount *= Test.instanceCount;
                        i27 += i25;
                    }
                }
                break;
            case 101:
                iArr[i22] += s2;
                break;
            case 102:
            case 103:
                iArr[i22 + 1] = (int)Test.instanceCount;
                break;
            case 104:
                f += i;
            }
        } while (--i22 > 0);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
