package tests.javafuzzer3298;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:40:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=46263L;
    public int iFld=59166;
    public static double dFld=127.125067;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 7859273670787538117L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1, int i2) {


        i2 -= i2;
        Test.instanceCount = i2;
        vMeth1_check_sum += l + l1 + i2;
    }

    public static void vMeth(int i) {

        int i1=-235, i3=10, i4=-136, iArr[]=new int[N];
        double d=-25.107548;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -10445);
        FuzzerUtils.init(lArr, -9L);

        iArr[(i >>> 1) % N] -= (++i);
        i1 = 1;
        while (++i1 < 383) {
            vMeth1(Test.instanceCount, Test.instanceCount, -21);
            i = (int)Test.instanceCount;
            i -= (int)Test.instanceCount;
            for (i3 = 1; i3 < 4; i3++) {
                i4 >>= i1;
                i = i4;
                i4 += (i3 * i3);
                if (b) {
                    i += (i3 * Test.instanceCount);
                    lArr[i1 - 1] = (long)10.411F;
                    i = i1;
                } else if (b) {
                    iArr[i3 - 1] *= (int)d;
                } else if (b) {
                    i4 = -483;
                }
            }
        }
        vMeth_check_sum += i + i1 + i3 + i4 + Double.doubleToLongBits(d) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth() {

        int i5=4, i6=-6, i7=35526, i8=-215, i9=3, i10=4, i11=120;
        float f=36.661F;
        short s=25891;

        vMeth(48841);
        i5 = (int)f;
        for (i6 = 8; 264 > i6; i6 += 3) {
            for (i8 = 1; 18 > i8; i8++) {
                i5 = (int)Test.instanceCount;
                Test.dFld *= -14831;
                Test.instanceCount = (long)f;
                s = (short)i9;
                for (i10 = 1; i10 < 2; ++i10) {
                    i9 = (int)Test.instanceCount;
                    i7 -= i7;
                    i11 += (int)(-1.553F + (i10 * i10));
                    if (i6 != 0) {
                    }
                    Test.instanceCount %= (i6 | 1);
                    Test.bFld = Test.bFld;
                }
            }
        }
        long meth_res = i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + s + i10 + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l2=-3259803318L;
        int i12=-36, i13=10427, i14=-61334, iArr1[]=new int[N];
        short s1=-9435;

        FuzzerUtils.init(iArr1, -14);

        iFld = -61049;
        lMeth();
        iFld += (int)Test.dFld;
        l2 = 1;
        do {
            iFld += iFld;
            iFld = 3;
            switch ((((iFld >>> 1) % 1) * 5) + 68) {
            case 70:
                if (Test.bFld) {
                    iFld += (int)(l2 + iFld);
                }
                for (i12 = 66; 2 < i12; i12--) {
                    Test.lArrFld[(int)(l2)] >>= i12;
                    iArr1[(int)(l2 - 1)] *= i13;
                    i13 += s1;
                    Test.dFld = iFld;
                    iFld += i12;
                    iArr1[(int)(l2)] = (int)Test.instanceCount;
                    i14 = 1;
                    while (++i14 < 2) {
                        byte by=-113;
                        by += (byte)i12;
                        dArrFld[(int)(l2)] -= iFld;
                        Test.instanceCount = i13;
                    }
                    Test.instanceCount += i12;
                }
                Test.instanceCount = i14;
            }
            iFld += (int)(((l2 * iFld) + iFld) - i13);
            iFld &= s1;
        } while (++l2 < 384);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
