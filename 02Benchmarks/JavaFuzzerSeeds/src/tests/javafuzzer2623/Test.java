package tests.javafuzzer2623;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:37:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7L;
    public int iFld=12107;
    public int iFld1=-136;
    public static short sFld=-14676;
    public byte byFld=-57;
    public float fFld=-1.872F;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-15);
        FuzzerUtils.init(Test.iArrFld, 16049);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, int i5, int i6) {

        int i7=11, i8=-12, i9=1, iArr[]=new int[N];
        double d1=2.121070;
        float f1=-104.183F;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 38824);
        FuzzerUtils.init(lArr, -61547L);

        for (i7 = 6; i7 < 126; ++i7) {
            switch ((i7 % 1) + 58) {
            case 58:
                iArr[i7 + 1] = (int)l;
                l -= (long)d1;
                break;
            default:
                f1 = 1;
                do {
                    i9 = 1;
                    do {
                        if (b) continue;
                        iArr[i9 + 1] -= i6;
                        switch ((((i8 >>> 1) % 5) * 5) + 87) {
                        case 93:
                            lArr[(i5 >>> 1) % N] *= -3;
                            break;
                        case 96:
                            i6 = i8;
                            Test.instanceCount *= (long)f1;
                            break;
                        case 97:
                            i8 >>= i9;
                            i8 = i8;
                        case 111:
                            l <<= l;
                            break;
                        case 109:
                            iArr[(int)(f1 + 1)] = i7;
                            break;
                        default:
                            Test.sFld >>= (short)i5;
                        }
                    } while (++i9 < 1);
                } while (++f1 < 13);
            }
        }
        long meth_res = l + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i9 + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        float f=-73.982F;
        int i10=20240, i11=-188, i12=58, i13=-22810, i14=-3;
        byte by=100;
        boolean b1=true, bArr[]=new boolean[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -115.2111);
        FuzzerUtils.init(bArr, true);

        f = (-iMeth1(-3L, i10, i10));
        dArr[(-10200 >>> 1) % N] -= 27879;
        i11 = 1;
        while (++i11 < 372) {
            bArr[i11] = true;
            i12 = 1;
            while (++i12 < 5) {
                for (i13 = 1; i13 > 1; i13 -= 3) {
                    Test.iArrFld[i11] = i13;
                    i10 += i13;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-49282);
                    f -= by;
                    i10 <<= 98;
                }
                i14 *= i12;
                if (b1) break;
                i14 = (int)-65141L;
                if (b1) break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + i14 + by + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i) {

        int i1=-9, i2=199, i3=59767, i4=-102;
        boolean b2=false;
        float f2=40.723F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 3903075644L);

        for (i1 = 1; i1 < 258; ++i1) {
            for (i3 = i1; 6 > i3; ++i3) {
                i4 <<= i1;
                iMeth();
                i |= (int)Test.instanceCount;
                lArr1[i1 - 1] *= Test.instanceCount;
                if (b2) {
                    i2 += (i3 * i3);
                    i4 = Test.sFld;
                } else if (b2) {
                    b2 = b2;
                } else if (b2) {
                    Test.byArrFld[i1 - 1] += (byte)i;
                } else {
                    i = i3;
                    Test.sFld -= (short)f2;
                }
                i += i3;
                Test.iArrFld[i3 + 1] = i1;
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + (b2 ? 1 : 0) + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-72.131004, dArr1[]=new double[N];
        float f3=2.714F;
        int i15=-204, i16=-3673, i17=236, i18=-24944, i19=76, i20=1, i21=29, i22=31859, i23=-13120, i24=7, i25=12,
            i26=29083, iArr1[]=new int[N];

        FuzzerUtils.init(dArr1, 0.59136);
        FuzzerUtils.init(iArr1, 7);

        iFld = (++iFld);
        d += 36988;
        iFld1 = (int)(((++Test.byArrFld[(iFld1 >>> 1) % N]) << (++iFld)) | ((Test.instanceCount % (iFld | 1)) +
            lMeth(iFld1)));
        iFld1 += iFld;
        f3 *= byFld;
        dArr1[(iFld >>> 1) % N] = 4;
        for (i15 = 287; i15 > 6; --i15) {
            iFld = -95;
            Test.iArrFld[i15 - 1] >>= i15;
            iFld1 >>= iFld1;
        }
        Test.sFld >>= (short)iFld;
        for (i17 = 146; i17 > 5; --i17) {
            fFld += (((i17 * i18) + Test.instanceCount) - iFld);
            for (i19 = 3; i19 < 178; ++i19) {
                Test.instanceCount = iFld;
                i20 += (i19 ^ Test.instanceCount);
            }
            i16 >>= i18;
            Test.iArrFld[i17] |= i18;
            sArrFld = sArrFld;
            iFld += byFld;
        }
        iFld += (int)-23.142F;
        for (i21 = 1; 243 > i21; ++i21) {
            for (i23 = i21; i23 < 104; i23++) {
                i20 = (int)Test.instanceCount;
                for (i25 = 1; i25 < 1; i25++) {
                    switch (((i25 % 1) * 5) + 73) {
                    case 78:
                        iArr1[i21] = (int)Test.instanceCount;
                        Test.iArrFld[i21 - 1] >>= i17;
                        iFld |= (int)Test.instanceCount;
                        Test.instanceCount ^= Test.sFld;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
