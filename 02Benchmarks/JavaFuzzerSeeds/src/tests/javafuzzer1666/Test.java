package tests.javafuzzer1666;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:04:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static boolean bFld=false;
    public static double dFld=-14.19788;
    public static byte byFld=51;
    public int iFld=148;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 168);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3, int i4) {

        short s=30490;
        double d=0.86314;
        int i5=-9, i6=1511, i7=-4605, i8=-6, i9=20, i10=-204, i11=59642, i12=-54927;
        float f1=-2.940F;

        s += (short)i4;
        d = i4;
        i4 *= (int)-3976261064L;
        for (i5 = 6; i5 < 353; ++i5) {
            for (i7 = 5; 1 < i7; i7--) {
                Test.iArrFld[i5 - 1] = i3;
                d = i7;
            }
            Test.instanceCount += (i5 + i4);
            for (i9 = 1; i9 < 5; i9++) {
                for (i11 = i5; 2 > i11; i11++) {
                    i8 -= (int)d;
                    i10 += (((i11 * i10) + i12) - Test.instanceCount);
                    f1 = 4241436859L;
                    i4 *= (int)-9L;
                    i4 += (i11 | i4);
                }
            }
        }
        long meth_res = i3 + i4 + s + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
            Float.floatToIntBits(f1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static double dMeth(int i2) {

        double d1=0.38898;
        int i13=17697, i14=-39238, i15=9, i16=13462, i17=-22, i18=26034;

        Test.iArrFld[(i2 >>> 1) % N] += (int)lMeth(50655, i2);
        d1 = i2;
        for (i13 = 16; i13 < 268; i13++) {
            try {
                Test.iArrFld[i13] = (i2 / i2);
                i14 = (1259846537 / i2);
                i2 = (i2 % -232);
            } catch (ArithmeticException a_e) {}
            for (i15 = i13; i15 < 6; ++i15) {
                for (i17 = 1; 1 > i17; i17 += 2) {
                    i2 += i17;
                    Test.iArrFld[i13 + 1] -= i14;
                    Test.instanceCount += Test.instanceCount;
                    if (Test.bFld) {
                        Test.instanceCount += 30959;
                    }
                    i14 = (int)Test.instanceCount;
                    if (Test.bFld) break;
                    try {
                        i18 = (Test.iArrFld[i15 - 1] / 38977);
                        i2 = (i13 % 238);
                        i14 = (i2 % i13);
                    } catch (ArithmeticException a_e) {}
                    d1 = 62785L;
                }
            }
        }
        long meth_res = i2 + Double.doubleToLongBits(d1) + i13 + i14 + i15 + i16 + i17 + i18;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-10, i19=-12430, i20=10, i21=-10;
        float f=4.80F, fArr[]=new float[N];
        long l=-136L;
        short s1=-3735;

        FuzzerUtils.init(fArr, -1.474F);

        i = (i--);
        i1 = 1;
        do {
            switch ((i1 % 6) + 6) {
            case 6:
                i += i1;
                break;
            case 7:
                f += (float)dMeth(i);
                Test.instanceCount *= -44;
                break;
            case 8:
                for (i19 = 1; i19 < 12; ++i19) {
                    fArr[i1] = i19;
                    i21 = 2;
                    do {
                        Test.dFld += 2.86650;
                    } while (--i21 > 0);
                    Test.byFld *= (byte)l;
                    i = i19;
                    s1 -= (short)Test.dFld;
                    f += (i19 * i19);
                    if (Test.bFld) break;
                }
            case 9:
                if (Test.bFld) continue;
                break;
            case 10:
                if (true) break;
                break;
            case 11:
                i += i19;
                break;
            default:
                i20 = Test.byFld;
            }
        } while (++i1 < 129);
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + i19 + i20 + i21 + l + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i22=-63920, i23=4, i24=54;
        float f2=0.610F;
        short s2=1478;
        double d2=-98.75219;

        vMeth(iFld);
        for (i22 = 12; i22 < 383; ++i22) {
            i23 += i22;
            iFld -= (int)Test.instanceCount;
            f2 = -199;
            iFld >>>= s2;
            Test.iArrFld[i22 + 1] = 1;
            i24 = 1;
            do {
                i23 += (i24 ^ i24);
                f2 -= -40072;
                iFld = 30;
                d2 = 1;
                while ((d2 -= 3) > 0) {
                    Test.iArrFld[i22] <<= (int)Test.instanceCount;
                    i23 = i22;
                    Test.iArrFld[i22] >>= i22;
                    i23 = iFld;
                    switch ((int)((d2 % 8) + 93)) {
                    case 93:
                        iFld += i22;
                        f2 = Test.byFld;
                        iFld += iFld;
                        Test.instanceCount += (long)(((d2 * Test.instanceCount) + Test.instanceCount) - i23);
                    case 94:
                        iFld += (int)(((d2 * i24) + i23) - i23);
                        break;
                    case 95:
                        Test.instanceCount >>= i23;
                        fArrFld[i24] -= f2;
                        break;
                    case 96:
                        Test.instanceCount += iFld;
                        iFld >>>= i24;
                        if (Test.bFld) break;
                        iFld -= i22;
                        break;
                    case 97:
                        Test.iArrFld[i22 + 1] -= Test.byFld;
                        i23 += i23;
                        break;
                    case 98:
                        iFld += (int)(d2 - Test.instanceCount);
                        break;
                    case 99:
                        f2 += Test.instanceCount;
                    case 100:
                        if (true) break;
                    default:
                        if (Test.bFld) break;
                    }
                }
            } while (++i24 < 68);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
