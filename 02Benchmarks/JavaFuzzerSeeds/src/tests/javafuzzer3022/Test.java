package tests.javafuzzer3022;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:46:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=51048L;
    public static boolean bFld=true;
    public static volatile byte byFld=-90;
    public static int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 42809);
        FuzzerUtils.init(Test.dArrFld, 2.2240);
    }

    public static long iMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i4=5901, i5=0, i6=58, i7=-235, i8=23247, i9=224, i10=-1;
        byte by=127;
        float f1=0.87F;
        short s=-6077;
        double d2=-52.61338;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -50579L);

        Test.iArrFld[(i4 >>> 1) % N] >>= i4;
        for (i5 = 18; i5 < 363; ++i5) {
            i6 += i5;
            for (i7 = 1; i7 < 5; i7++) {
                i4 += (i7 ^ Test.instanceCount);
            }
            Test.iArrFld[i5] += i4;
            lArr[i5] |= 114L;
            for (i9 = 5; 1 < i9; i9--) {
                i4 += i9;
                i6 ^= i4;
                i6 += i8;
                i6 = by;
                f1 += (i9 * i9);
            }
        }
        s -= (short)i10;
        f1 += (float)d2;
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + by + Float.floatToIntBits(f1) + s +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth(int i3, long l1) {

        float f=94.395F, fArr[]=new float[N];
        int i12=44, i13=-199, i14=12, i15=191;

        FuzzerUtils.init(fArr, 2.278F);

        i3 *= (int)f;
        fArr[(i3 >>> 1) % N] -= (l1++);
        iMeth1();
        for (double d3 : Test.dArrFld) {
            fArr = FuzzerUtils.float1array(N, (float)127.226F);
            i3 |= Test.byFld;
            Test.iArrFld[(i3 >>> 1) % N] -= (int)-69.45384;
            if (Test.bFld) {
                i12 = 1;
                while (++i12 < 4) {
                    for (i13 = 1; i13 < 1; ++i13) {
                        f = i13;
                        i3 -= i3;
                        i3 = (int)Test.instanceCount;
                        i14 -= (int)Test.instanceCount;
                        i15 -= i14;
                    }
                }
            }
        }
        long meth_res = i3 + l1 + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static int iMeth(long l) {

        int i2=-46338, i16=-2, i17=11556, iArr[]=new int[N];
        double d1=9.28643;
        float f2=-118.896F;
        byte byArr[]=new byte[N];
        boolean bArr[]=new boolean[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(byArr, (byte)-2);
        FuzzerUtils.init(iArr, -4);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(sArr, (short)-31798);

        i2 -= (int)((-byArr[(i2 >>> 1) % N]) - ((i2 + d1) - (i2 + 114)));
        i2 <<= (++i2);
        switch (((((int)(d1 - i2)) >>> 1) % 10) + 49) {
        case 49:
            l = (++i2);
            if (((Test.bFld = (bArr[(i2 >>> 1) % N] = Test.bFld)) || (!(Test.bFld = false))) || ((bArr[(i2 >>> 1) % N]
                = bArr[(0 >>> 1) % N]) & bMeth(i2, 3270327072844321286L))) {
                i2 = (int)(((i2 = (int)l) * (--i2)) * (iArr[(i2 >>> 1) % N]--));
            } else {
                l <<= l;
                Test.iArrFld[(i2 >>> 1) % N] = i2;
                i2 += i2;
                sArr[(i2 >>> 1) % N] = (short)Test.instanceCount;
            }
            break;
        case 50:
            i2 = i2;
            l *= (long)f2;
            break;
        case 51:
            for (i16 = 3; i16 < 270; i16++) {
                if (Test.bFld) continue;
                i2 += (((i16 * i2) + f2) - i16);
            }
        case 52:
            Test.iArrFld[(i17 >>> 1) % N] /= (int)(i2 | 1);
            break;
        case 53:
            i17 = -237;
        case 54:
            l >>= -41;
        case 55:
            l += i16;
        case 56:
            d1 -= -61;
            break;
        case 57:
        case 58:
        }
        long meth_res = l + i2 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f2) + i16 + i17 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-131, i1=-84, i18=-39773, i19=-54626, i20=-40622, i21=-14, i22=-6379, i23=62582, i24=114, i25=209,
            i26=-53912;
        double d=-2.72837;
        float f3=1.759F;
        long l2=-2L;
        short s1=28545;

        i = 1;
        while (++i < 162) {
            for (d = 2; d < 155; d++) {
                Test.instanceCount >>>= Math.min(-58147, i1);
                i1 += iMeth(Test.instanceCount);
                for (i18 = 1; i18 < 2; ++i18) {
                    i1 -= (int)Test.instanceCount;
                    Test.instanceCount += (i18 * i18);
                    f3 += i18;
                    i19 += 644;
                    Test.iArrFld[i18] -= 41932;
                    i1 >>= 7;
                    Test.iArrFld[i18 - 1] = -41759;
                    if (Test.bFld) break;
                    i19 >>>= i;
                    i1 += i18;
                }
            }
            f3 += i;
        }
        for (l2 = 8; l2 < 390; ++l2) {
            Test.dArrFld[(int)(l2)] = l2;
            for (i21 = (int)(l2); 66 > i21; ++i21) {
                for (i23 = 1; i23 < 1; i23++) {
                    i20 = (int)2.111F;
                    i22 |= i22;
                }
                i20 += i21;
                s1 += (short)(i21 - Test.instanceCount);
                if (Test.bFld) break;
            }
            i24 += 1;
        }
        for (i25 = 16; i25 < 339; i25++) {
            i19 += i25;
        }
        s1 += (short)i23;
        f3 += s1;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  bMeth ->  bMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 bMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
