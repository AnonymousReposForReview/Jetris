package tests.javafuzzer3077;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:32:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=440800850L;
    public static float fFld=-41.1003F;
    public static volatile short sFld=-28636;
    public static double dFld=55.68354;
    public static volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -26946);
        FuzzerUtils.init(Test.fArrFld, 1.644F);
        FuzzerUtils.init(Test.lArrFld, 3L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=10, i9=12, i10=-4, i11=5, i12=2, i13=-11, i14=12518, i15=-162;
        double d1=-2.120280;
        float f=-1.503F;

        for (i8 = 363; i8 > 1; i8--) {
            i9 = (int)Test.instanceCount;
            Test.fArrFld[i8 + 1] = (float)d1;
            for (i10 = 1; i10 < 5; i10++) {
                i12 -= i13;
                Test.instanceCount = i8;
                Test.fArrFld[i8] *= Test.instanceCount;
                for (i14 = 1; i14 < 2; ++i14) {
                    f = -3430274974L;
                    Test.fArrFld[i10 - 1] = 6322;
                    Test.instanceCount -= i9;
                    i9 -= (int)-5L;
                    i9 >>= (int)Test.instanceCount;
                    Test.iArrFld[i10] += i14;
                    i12 += (((i14 * i11) + i12) - Test.instanceCount);
                }
            }
        }
        vMeth2_check_sum += i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f);
    }

    public static void vMeth1() {

        int i7=0, i16=-17474, i17=4, i18=222, i19=44927;
        long l1=90L, l2=-9L, lArr1[]=new long[N];
        double d2=-17.110427;
        boolean bArr[][]=new boolean[N][N], bArr1[][]=new boolean[N][N];

        FuzzerUtils.init(lArr1, 15349L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(bArr1, true);

        Test.iArrFld[(0 >>> 1) % N] = (int)(-(lArr1[(i7 >>> 1) % N]--));
        vMeth2();
        for (l1 = 6; l1 < 159; l1 += 2) {
            bArr[(int)(l1 + 1)] = bArr1[(int)(l1 - 1)];
            i16 += (int)(l1 | i7);
            for (d2 = 1; d2 < 20; ++d2) {
                for (i18 = 1; i18 < 2; ++i18) {
                    l2 += (71 + (i18 * i18));
                    i19 += -7;
                    i17 = (int)d2;
                }
            }
            i7 = i19;
            i19 += (int)(((l1 * l1) + i7) - Test.instanceCount);
            i16 &= i19;
            Test.instanceCount = i17;
            lArr1[(int)(l1)] += i16;
        }
        vMeth1_check_sum += i7 + l1 + i16 + Double.doubleToLongBits(d2) + i17 + i18 + i19 + l2 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(bArr1);
    }

    public static void vMeth(int i1) {

        int i2=60124, i3=12, i4=-192, i5=3, i6=35598, i20=11;
        double d3=-65.116446;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -10L);

        for (long l : lArr) {
            for (i2 = 4; i2 > 1; i2 -= 2) {
                for (i4 = 1; i4 < 4; i4++) {
                    i3 &= (int)(Test.instanceCount <<= i2);
                }
            }
            i6 = 1;
            do {
                vMeth1();
                d3 += i2;
                l <<= i4;
                i5 = i6;
            } while (++i6 < 4);
            i1 += i4;
            i5 += -2;
            i20 = (int)Test.fFld;
        }
        i1 = -10;
        Test.instanceCount *= i2;
        i1 += (int)Test.instanceCount;
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d3) + i20 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr3) {

        int i23=3529, i24=-10936, i25=1, i26=-162, i27=48847, i28=139;
        short s=21654;
        byte by=84;
        boolean b=false;

        vMeth(-69);
        for (int i22 : Test.iArrFld) {
            Test.instanceCount = i22;
            for (i23 = 2; i23 < 63; i23++) {
                i24 = -36;
                i24 = i24;
                s <<= (short)i22;
                i24 += (((i23 * i22) + by) - Test.instanceCount);
                i24 += (i23 * i23);
                i22 = i23;
            }
            for (i25 = 3; i25 < 63; i25++) {
                if (b) {
                    i22 += (i25 * i26);
                    Test.fFld = 8;
                    i24 += (i25 * i25);
                    i24 += i25;
                } else {
                    Test.lArrFld[i25 + 1] *= i23;
                    i22 += (((i25 * i25) + i22) - Test.sFld);
                    i26 += (int)(-31773L + (i25 * i25));
                }
                Test.dFld = i22;
                i26 += i25;
                for (i27 = i25; i27 < 2; ++i27) {
                    switch (((i22 >>> 1) % 8) + 37) {
                    case 37:
                        if (b) {
                            i26 += (i27 * i27);
                        } else if (b) {
                            if (b) continue;
                        }
                        i22 = s;
                        Test.dFld *= i27;
                        Test.instanceCount -= i24;
                        break;
                    case 38:
                        Test.lArrFld[i27] = Test.instanceCount;
                        break;
                    case 39:
                        i24 += i27;
                        break;
                    case 40:
                        i24 *= (int)Test.instanceCount;
                        break;
                    case 41:
                        i24 -= i25;
                        break;
                    case 42:
                        i28 -= (int)-31.349F;
                    case 43:
                        i22 += (i27 * i27);
                    case 44:
                        Test.instanceCount -= i25;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
