package tests.javafuzzer1247;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:15:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=356703586L;
    public static volatile double dFld=1.78059;
    public volatile short sFld=-7096;
    public static byte byFld=122;
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.333F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i10) {

        int i11=3, i12=2, i13=-7, i14=80, i15=2, i16=12, i17=-66, i18=0, iArr1[]=new int[N];
        float f1=0.138F;
        byte by=-48;
        boolean b1=false;

        FuzzerUtils.init(iArr1, 60);

        for (i11 = 121; i11 > 1; --i11) {
            f1 += Test.instanceCount;
            iArr1[i11 - 1] = i11;
            for (i13 = 1; i13 < 13; ++i13) {
                i14 = -16701;
                i10 = i13;
                for (i15 = 1; 2 > i15; i15++) {
                    i10 %= (int)(Test.instanceCount | 1);
                    i12 += (((i15 * Test.instanceCount) + f1) - Test.instanceCount);
                }
                for (i17 = 1; i17 < 2; ++i17) {
                    i16 = (int)Test.instanceCount;
                    by = (byte)i17;
                    if (true) {
                        i10 -= i12;
                    } else if (true) {
                        if (b1) continue;
                    } else {
                        iArr1 = FuzzerUtils.int1array(N, (int)-3);
                    }
                }
            }
        }
        vMeth1_check_sum += i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + i17 + i18 + by + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(int i7, int i8) {

        int i9=-9, i19=5787, i20=7;
        short s1=-16305;
        float f2=-112.749F, f3=0.14F;

        i9 = 1;
        do {
            s1 += (short)248;
            vMeth1(1);
            switch (((i9 % 7) * 5) + 104) {
            case 133:
                lArrFld[i9 - 1] -= (long)f2;
                Test.instanceCount *= i9;
                i19 = 1;
                do {
                    for (f3 = 1; f3 < 1; f3++) {
                        f2 = i20;
                        iArrFld[i9 - 1] = -81;
                        i7 += -226;
                        Test.dFld = -35319L;
                    }
                    i20 += i19;
                    if (i20 != 0) {
                    }
                    i20 -= (int)Test.instanceCount;
                } while (++i19 < 11);
                break;
            case 114:
                i20 += i9;
                break;
            case 130:
            case 124:
                i8 = i7;
                break;
            case 106:
                Test.fArrFld[i9 - 1][i9 - 1] *= i9;
            case 132:
                i8 <<= i20;
                break;
            case 138:
                Test.dFld = Test.instanceCount;
                break;
            default:
                Test.instanceCount <<= Test.instanceCount;
            }
        } while (++i9 < 143);
        long meth_res = i7 + i8 + i9 + s1 + Float.floatToIntBits(f2) + i19 + Float.floatToIntBits(f3) + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i5, int i6, long l1) {

        double d=0.108937;
        int i21=-54, i22=-64710, i23=174, i24=-28, i25=-7, i26=-25484;
        float f4=-98.55F;

        iMeth(-5, i5);
        for (d = 8; d < 213; d++) {
            for (i22 = 1; i22 < 8; ++i22) {
                iArrFld[(int)(d - 1)] -= i22;
                switch ((int)((d % 7) + 11)) {
                case 11:
                    switch ((int)((d % 5) + 112)) {
                    case 112:
                        i24 = 1;
                        do {
                            i6 += (((i24 * f4) + l1) - i21);
                            iArrFld[i24 - 1] = i6;
                            f4 -= i5;
                        } while (++i24 < 2);
                        for (i25 = 1; i25 < 2; i25++) {
                            l1 &= i21;
                            Test.instanceCount += i25;
                            Test.instanceCount = (long)d;
                        }
                        break;
                    case 113:
                    case 114:
                        l1 += (-59524L + (i22 * i22));
                    case 115:
                        Test.dFld += Test.dFld;
                        break;
                    case 116:
                        i5 += i21;
                    }
                    break;
                case 12:
                    i5 = sFld;
                case 13:
                    i26 += (i22 * i23);
                case 14:
                case 15:
                    i21 += (-226 + (i22 * i22));
                    break;
                case 16:
                    iArrFld[(int)(d)] += (int)1.121563;
                    break;
                case 17:
                    iArrFld = iArrFld;
                    break;
                default:
                    f4 = i24;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + l1 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + Float.floatToIntBits(f4)
            + i25 + i26;
    }

    public void mainTest(String[] strArr1) {

        int i=89, i1=7, i2=-87, i3=2342, i4=5871, i27=1, i28=-2, i29=64, i30=-34514, iArr[]=new int[N];
        long l=-2220320020L;
        boolean b=true;
        float f=-1.765F;
        byte by1=-5;

        FuzzerUtils.init(iArr, 5705);

        for (i = 8; i < 195; ++i) {
            for (i2 = 3; i2 < 134; i2++) {
                switch (((iArr[(-14637 >>> 1) % N] >>> 1) % 9) + 40) {
                case 40:
                    for (l = 1; l < 2; l++) {
                        short s=-29124;
                        Test.instanceCount = (i3 = Math.abs(Math.abs(i4)));
                        i3 = (int)(((Test.instanceCount * s) - i) % (i | 1));
                        i3 += (int)(-5.258F + (l * l));
                        Test.instanceCount -= (i1++);
                        b = (b = (b = (f >= Test.instanceCount)));
                        vMeth(2, i, 2845159021L);
                        i4 = i2;
                        f += (((l * i2) + i1) - l);
                        i3 -= i1;
                    }
                    if (b) continue;
                    i27 = 2;
                    do {
                        i1 += (-13 + (i27 * i27));
                        i3 -= i4;
                        i1 += (((i27 * i4) + i2) - f);
                        f += i4;
                        Test.instanceCount *= i3;
                        i3 = (int)2775037373L;
                        Test.instanceCount += Test.instanceCount;
                        i4 &= (int)Test.instanceCount;
                    } while (--i27 > 0);
                    Test.instanceCount += (i2 * i2);
                    break;
                case 41:
                    sFld += (short)(((i2 * i2) + i27) - i);
                    for (i28 = 2; i28 > 1; i28 -= 2) {
                        by1 <<= (byte)l;
                        i4 += i28;
                        f -= Test.byFld;
                        Test.instanceCount = (long)f;
                    }
                    break;
                case 42:
                    iArrFld[i] <<= i1;
                    break;
                case 43:
                    iArr[i - 1] -= i2;
                    break;
                case 44:
                    Test.dFld -= i27;
                case 45:
                    Test.instanceCount = -94;
                    break;
                case 46:
                    Test.instanceCount += i30;
                case 47:
                    iArrFld[i2 - 1] = (int)Test.instanceCount;
                    break;
                case 48:
                    i4 += i3;
                    break;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
