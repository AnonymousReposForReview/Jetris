package tests.javafuzzer453;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:05:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2498012332L;
    public static int iFld=-139;
    public static float fFld=-2.542F;
    public static short sFld=15356;
    public volatile int iArrFld[][]=new int[N][N];
    public double dArrFld[]=new double[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i, long l) {

        int i1=0, i2=-7575;
        float f=43.115F;

        for (i1 = 13; i1 < 260; i1++) {
            Test.iFld += (((i1 * i1) + Test.instanceCount) - i2);
        }
        f = i1;
        vMeth1_check_sum += i + l + i1 + i2 + Float.floatToIntBits(f);
    }

    public static void vMeth() {

        float f1=1.20F, f2=48.586F;
        int i3=134, i4=183, i5=1138, i6=147, i7=3, iArr[]=new int[N];
        short s=16055;

        FuzzerUtils.init(iArr, -4);

        vMeth1(Test.iFld, 2234357521L);
        for (f1 = 11; f1 < 251; f1++) {
            for (i4 = (int)(f1); 7 > i4; ++i4) {
                i3 += (((i4 * Test.iFld) + i3) - i5);
                iArr[i4] -= 59;
                i3 = (int)Test.instanceCount;
                Test.iFld -= i5;
                f2 = s;
                i3 <<= i3;
            }
            i5 = i4;
            Test.iFld = i5;
            for (i6 = 1; 7 > i6; i6++) {
                f2 -= i6;
                Test.instanceCount = i5;
                s = (short)i3;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i3 + i4 + i5 + Float.floatToIntBits(f2) + s + i6 + i7 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i8=-36524, i9=-7, i10=45670, i11=223, i12=8, i13=0, iArr1[]=new int[N];
        double d=-105.1068;
        float f3=0.581F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1139037322L);
        FuzzerUtils.init(iArr1, 0);

        vMeth();
        for (i8 = 323; i8 > 6; --i8) {
            for (i10 = 5; i10 > 1; i10 -= 2) {
                i9 = (int)d;
                lArr[i10 + 1] |= -6;
                Test.iFld += i10;
                Test.iFld = -51679;
                d += Test.instanceCount;
                i11 = Test.iFld;
            }
        }
        for (i12 = 193; 4 < i12; i12 -= 3) {
            Test.instanceCount += (i12 + Test.instanceCount);
            Test.iFld += i12;
            iArr1[i12] <<= i11;
            f3 += (-85 + (i12 * i12));
            Test.iFld += i12;
        }
        long meth_res = i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=-12, i15=-4, i16=52258, i17=96, i18=177;
        byte by=-108;
        double d1=71.96995;
        long l1=58829L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 122L);

        Test.iFld *= (int)(Test.iFld += (int)-111.746F);
        Test.iFld = iMeth();
        i14 = 1;
        do {
            Test.iFld = i14;
            by += (byte)(i14 + by);
            for (i15 = 3; i15 < 136; ++i15) {
                Test.fFld += (i15 * Test.instanceCount);
                iArrFld[i14 - 1][i14] = Test.sFld;
                Test.iFld = i16;
                for (i17 = 2; i17 > 1; i17 -= 3) {
                    switch ((i15 % 5) + 18) {
                    case 18:
                        Test.sFld += (short)i17;
                        i16 += (i17 * i17);
                        dArrFld[i14 - 1] += Test.instanceCount;
                        Test.instanceCount += (((i17 * i17) + Test.instanceCount) - Test.instanceCount);
                        break;
                    case 19:
                        Test.iFld += (i17 * i17);
                        Test.instanceCount *= i17;
                        i18 += (i17 | Test.iFld);
                    case 20:
                    case 21:
                        i16 = i15;
                        d1 = Test.instanceCount;
                        break;
                    case 22:
                        i16 = i14;
                        break;
                    }
                    i16 -= 30401;
                    lArr1[i15 + 1] = i18;
                    i18 *= by;
                    i18 -= (int)Test.instanceCount;
                    switch ((i17 % 1) + 84) {
                    case 84:
                        Test.iFld %= (int)((long)(d1) | 1);
                        l1 |= i14;
                        i18 -= i17;
                        break;
                    }
                    i16 -= i17;
                }
            }
        } while (++i14 < 184);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
