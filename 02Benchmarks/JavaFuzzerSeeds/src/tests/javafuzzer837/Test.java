package tests.javafuzzer837;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:47:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=287L;
    public int iFld=138;
    public static volatile boolean bFld=true;
    public short sFld=889;
    public int iArrFld[]=new int[N];

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i1=-28, i2=-1, iArr[]=new int[N];
        float f=108.684F;

        FuzzerUtils.init(iArr, -6);

        i1 = 323;
        do {
            if (i1 != 0) {
            }
            i2 += 2;
            if (Test.bFld) {
                iArr[i1] = i1;
                Test.instanceCount += (i1 - i1);
            } else {
                i2 += (i1 * i1);
                i2 *= i2;
            }
            i2 += i1;
            f %= (i1 | 1);
            iArr[i1 - 1] = (int)1350423337L;
            i2 = i1;
            i2 *= i1;
            f += (i1 - i2);
        } while (--i1 > 0);
        iArr[(i1 >>> 1) % N] <<= (int)-221637382L;
        long meth_res = i1 + i2 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void vMeth() {

        int i3=217, i4=-202, i5=-8, i6=-25016, i7=2, i8=7, i9=4, iArr1[]=new int[N];
        float f1=-122.844F;

        FuzzerUtils.init(iArr1, -11);

        iFld = (int)(dMeth() - iFld);
        iFld += (int)Test.instanceCount;
        for (i3 = 6; i3 < 393; i3++) {
            switch ((i3 % 9) + 13) {
            case 13:
                i4 *= (int)f1;
                iFld *= i4;
                f1 -= iFld;
                for (i5 = 1; i5 < 4; ++i5) {
                    f1 = i5;
                    for (i7 = i3; i7 < 2; ++i7) {
                        switch (((i5 % 3) * 5) + 95) {
                        case 105:
                            if (Test.bFld) continue;
                            iArr1[i5 - 1] = i8;
                            i4 |= i5;
                            break;
                        case 101:
                            iArr1[i5 + 1] -= i4;
                            break;
                        case 103:
                            Test.instanceCount = i4;
                        }
                    }
                }
                break;
            case 14:
                iArr1 = iArrFld;
                break;
            case 15:
                i9 += i5;
                break;
            case 16:
                i4 = iFld;
                break;
            case 17:
                if (i5 != 0) {
                    vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                break;
            case 18:
            case 19:
                i4 += (int)2452788006L;
            case 20:
                Test.instanceCount += i3;
                break;
            case 21:
                i4 = sFld;
                break;
            default:
                i9 += (i3 - Test.instanceCount);
            }
        }
        vMeth_check_sum += i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
    }

    public long lMeth() {

        byte by=-110;
        short s=-10954;
        double d=1.90276;
        int i=-50099, i10=-8, i11=-20742;
        boolean b=true;

        by <<= (byte)((iArrFld[(iFld >>> 1) % N] += s) + -66);
        Test.instanceCount *= (iArrFld[(iFld >>> 1) % N]--);
        for (d = 395; 4 < d; d -= 2) {
            s <<= (short)-37641;
            vMeth();
            for (i10 = (int)(d); i10 < 8; i10 += 2) {
                float f2=-2.880F;
                Test.instanceCount |= Test.instanceCount;
                i = i;
                switch (((i10 % 6) * 5) + 65) {
                case 94:
                    iArrFld[i10 - 1] *= (int)Test.instanceCount;
                    break;
                case 88:
                    if (b) continue;
                    break;
                case 87:
                    i11 = (int)Test.instanceCount;
                    iFld = iFld;
                case 70:
                    Test.bFld = b;
                    f2 = i10;
                case 90:
                    i11 += i10;
                    break;
                case 68:
                    iFld %= (int)(Test.instanceCount | 1);
                }
            }
        }
        long meth_res = by + s + Double.doubleToLongBits(d) + i + i10 + i11 + (b ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {


        iFld -= (int)(lMeth() + 34375L);
        Test.instanceCount = iFld;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
