package tests.javafuzzer427;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:33:34 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7737L;
    public static float fFld=-34.866F;
    public static double dFld=2.58257;
    public static boolean bFld=true;
    public float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3) {

        int i4=-49, i5=12646, i6=60511, i7=1, i8=38940, i9=-3;
        byte by1=-127;

        Test.fFld = (float)Test.dFld;
        for (i4 = 11; i4 < 250; ++i4) {
            for (i6 = 1; i6 < 7; i6 += 3) {
                by1 = (byte)Test.instanceCount;
                Test.iArrFld[i6 - 1] = (int)Test.instanceCount;
                for (i8 = i6; i8 < 4; i8++) {
                    i7 = i6;
                    i7 -= i4;
                    Test.iArrFld[i4 - 1] = i8;
                    Test.dFld += Test.instanceCount;
                    Test.dFld += 3987873368L;
                    Test.bFld = Test.bFld;
                    i5 += (int)2.119537;
                }
                i9 = by1;
                Test.instanceCount += (-456 + (i6 * i6));
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + by1 + i8 + i9;
    }

    public void vMeth1(int i1, long l) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -47061);

        Test.instanceCount += Math.abs(iArr[(i1 >>> 1) % N]--);
        vMeth2(i1, i1);
        vMeth1_check_sum += i1 + l + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(boolean b, int i) {

        int i10=10, i11=121, i12=10, i13=27583, i14=-222, i15=44666, i16=-20;

        vMeth1(i, Test.instanceCount);
        i = i;
        for (i10 = 5; i10 < 319; ++i10) {
            i ^= i11;
            i = (int)Test.fFld;
        }
        i12 = 1;
        do {
            Test.fFld += i10;
            for (i13 = 1; i13 < 5; i13++) {
                for (i15 = 1; 2 > i15; ++i15) {
                    i14 = (int)Test.instanceCount;
                    if (b) break;
                    Test.iArrFld[i13 + 1] <<= -66;
                    i14 ^= i14;
                }
            }
            i11 ^= (int)584068037L;
            i16 *= 12;
        } while (++i12 < 375);
        vMeth_check_sum += (b ? 1 : 0) + i + i10 + i11 + i12 + i13 + i14 + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        byte by=96;
        int i17=-11, i18=5, i19=10, i20=6, i21=9, i22=185, i23=-8, i24=16108, i25=-30240;
        short s=-6453;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 16657L);

        by -= (byte)((fArrFld[(102 >>> 1) % N] * Test.fFld) + -85.16462);
        vMeth(true, i17);
        for (i18 = 7; i18 < 153; ++i18) {
            Test.fFld -= i18;
            Test.instanceCount <<= i17;
        }
        i20 = 1;
        do {
            Test.dFld = s;
            for (i21 = 11; i21 < 183; ++i21) {
                i17 = i21;
                lArr = lArr;
                Test.instanceCount -= i19;
                i17 -= i21;
                try {
                    i22 = (i22 % 123);
                    i19 = (-702296416 % i22);
                    i19 = (Test.iArrFld[i21] / i22);
                } catch (ArithmeticException a_e) {}
            }
            Test.instanceCount *= i22;
            Test.iArrFld[i20] = by;
            if (Test.bFld) continue;
            i23 = 1;
            while (++i23 < 183) {
                i22 = i20;
                i19 >>= s;
                for (i24 = 1; i24 < 1; i24++) {
                    i22 = i18;
                    Test.fFld += i19;
                    i19 += (int)Test.instanceCount;
                    Test.instanceCount += 12;
                }
                switch ((((i25 >>> 1) % 8) * 5) + 7) {
                case 46:
                    Test.instanceCount >>= i17;
                case 10:
                    if (Test.bFld) {
                        i22 = (int)-3213003204L;
                    } else {
                        i19 *= i23;
                    }
                    i19 = i25;
                    break;
                case 29:
                    i17 *= (int)Test.instanceCount;
                case 45:
                    i17 = (int)Test.instanceCount;
                    break;
                case 36:
                    Test.fFld = Test.instanceCount;
                case 22:
                    i17 *= i25;
                case 9:
                    s += (short)(i23 + i19);
                    break;
                case 23:
                    i25 += i23;
                    break;
                }
            }
        } while (++i20 < 137);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
