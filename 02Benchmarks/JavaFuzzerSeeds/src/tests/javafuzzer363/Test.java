package tests.javafuzzer363;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:50:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=17188L;
    public int iFld=45;
    public long lFld=-121L;
    public static double dFld=10.92910;
    public static short sFld=-12538;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 10L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(short s, int i2, int i3) {

        int i4=-8, i5=-246, i6=209, iArr1[]=new int[N];
        float f=39.182F;

        FuzzerUtils.init(iArr1, 0);

        for (i4 = 190; i4 > 7; --i4) {
            Test.lArrFld[i4] = Test.instanceCount;
        }
        i6 = 144;
        do {
            s -= (short)Test.dFld;
            i3 = (int)54.14292;
            i5 += (int)Test.instanceCount;
            i5 = i4;
            f *= i5;
            i5 = (int)Test.instanceCount;
            Test.lArrFld[i6 - 1] <<= i5;
            Test.dFld += Test.dFld;
        } while (--i6 > 0);
        Test.instanceCount = 138L;
        i2 -= (int)-63.81378;
        f = i6;
        vMeth2_check_sum += s + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, long l1) {

        short s1=19401;
        int i8=-4;

        vMeth2(s1, i8, i8);
        vMeth1_check_sum += l + l1 + s1 + i8;
    }

    public static void vMeth(int i1) {

        int i9=-9, i10=-148, i11=-18, i12=-4109, i13=-6, i14=5, i15=20635, i16=43964;
        float f1=71.328F;

        vMeth1(Test.instanceCount, 49386L);
        i1 -= -18205;
        for (i9 = 1; i9 < 123; ++i9) {
            i1 += (i9 * i9);
            for (i11 = 1; i11 < 13; ++i11) {
                for (i13 = i9; 2 > i13; ++i13) {
                    i1 = i12;
                    f1 -= i1;
                    Test.dFld -= -14L;
                    Test.sFld *= (short)f1;
                }
                Test.instanceCount = i11;
                Test.instanceCount += i11;
                for (i15 = 1; i15 < 2; i15++) {
                    boolean b1=true;
                    f1 = (float)Test.dFld;
                    b1 = b1;
                }
            }
        }
        vMeth_check_sum += i1 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i=2696, i17=80, i18=2, i19=116, i20=-237, i21=-9384, i22=-98, i23=50537, iArr[]=new int[N];
        boolean b=true;
        float f2=-2.982F, f3=1.235F, fArr[]=new float[N];
        byte by=89;

        FuzzerUtils.init(iArr, -222);
        FuzzerUtils.init(fArr, 1.665F);

        i = 1;
        do {
            iFld <<= iFld;
            iFld += (int)(((i - lFld) + -22516) - (iArr[i + 1]++));
            if (b = (b & (b ^ (lFld <= lFld)))) continue;
            vMeth(iFld);
            for (i17 = i; 69 > i17; i17 += 3) {
                for (i19 = 1; 1 > i19; i19++) {
                    i20 -= 61;
                    Test.instanceCount = 3052;
                    fArr[i19 + 1] -= (float)Test.dFld;
                    i18 = i19;
                    i18 <<= 113;
                    iArr[i17] += i17;
                    iArr[i17 - 1] -= (int)lFld;
                }
            }
            for (f2 = 2; f2 < 69; f2++) {
                iArr[(int)(f2)] = -8;
                f3 -= f3;
                switch (((i % 9) * 5) + 95) {
                case 125:
                    f3 += (f2 + i);
                    for (i22 = (int)(f2); i22 < 2; i22++) {
                        i21 = i22;
                        iArr[i22] -= i;
                        f3 -= 49176;
                    }
                    break;
                case 103:
                case 123:
                    iFld = i18;
                    i21 += (113 + (f2 * f2));
                    break;
                case 134:
                    i23 = (int)lFld;
                    f3 /= 1;
                    by += (byte)(((f2 * iFld) + f2) - Test.instanceCount);
                    iFld += (int)(f2 + i21);
                    break;
                case 98:
                    f3 += f2;
                    break;
                case 107:
                    i23 = by;
                    break;
                case 96:
                    iFld += i23;
                    break;
                case 110:
                    f3 *= (float)Test.dFld;
                case 113:
                    f3 = i17;
                    break;
                default:
                    Test.sFld = (short)i;
                }
            }
        } while (++i < 365);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
