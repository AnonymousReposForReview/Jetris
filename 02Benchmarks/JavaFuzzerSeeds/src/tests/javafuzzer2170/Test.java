package tests.javafuzzer2170;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:44:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6524692185531891628L;
    public static float fFld=1.286F;
    public static double dFld=107.13193;
    public static volatile byte byFld=121;
    public long lArrFld[]=new long[N];
    public static long lArrFld1[]=new long[N];
    public int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld1, 124L);
        FuzzerUtils.init(Test.dArrFld, 16.69738);
    }

    public static long lMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static double dMeth() {

        int i7=4921, i8=4, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -54600);

        for (i7 = 201; i7 > 8; i7 -= 2) {
            i8 = (int)(iArr[i7 - 1] -= (int)((0 - (Test.dFld * i7)) * (i7 - Test.instanceCount)));
        }
        long meth_res = i7 + i8 + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static long lMeth1() {

        int i11=-23856, i12=7, i13=-10, i14=-27276, i15=-1, i16=-9, iArr2[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr2, -25169);

        Test.instanceCount = Test.byFld;
        iArr2[(i11 >>> 1) % N] -= (int)73.805F;
        for (i12 = 9; i12 < 233; ++i12) {
            i13 |= i13;
            b = b;
            i11 += i13;
            i14 = 1;
            do {
                for (i15 = i12; i15 < 1; ++i15) {
                    if (b) {
                        Test.instanceCount *= i12;
                        Test.instanceCount = (long)Test.dFld;
                        Test.instanceCount = i14;
                    } else if (b) {
                        i13 = (int)Test.instanceCount;
                        if (i12 != 0) {
                        }
                        i13 <<= i12;
                    }
                }
            } while (++i14 < 7);
        }
        long meth_res = i11 + i12 + i13 + (b ? 1 : 0) + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i9=56, i10=3, i17=13, i18=-56, i19=-2, i20=41266, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 206);
        FuzzerUtils.init(fArr, 0.215F);

        for (i9 = 13; 387 > i9; ++i9) {
            i10 *= i10;
            iArr1[i9 + 1] = (Test.byFld--);
            i10 >>= (int)(((-37.22640 - (i9 - Test.dFld)) + (++i10)) - fArr[i9 + 1]);
            i10 = (int)((lMeth1() - 178) - i9);
            for (i17 = 1; i17 < 5; i17++) {
                i18 += i17;
                for (i19 = i9; i19 < 2; i19++) {
                    long l=73L;
                    l = i20;
                    i10 = 5380;
                    iArr1[i9 - 1] &= (int)5L;
                    i20 *= (int)l;
                    Test.lArrFld1[i17] = -85;
                    Test.fFld -= l;
                    i10 += i18;
                }
            }
        }
        vMeth_check_sum += i9 + i10 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(int i1, int i2, int i3) {

        int i4=-18109, i5=-95, i6=11, i21=1, i22=6, i23=-19522, i24=-147, iArr3[]=new int[N];
        short s=1572;

        FuzzerUtils.init(iArr3, -41791);

        for (i4 = 11; i4 < 245; i4 += 2) {
            i6 += (((i4 * i1) + Test.fFld) - i1);
            i5 *= (int)Math.abs(dMeth());
            vMeth();
            i5 = i2;
            Test.lArrFld1[i4 + 1] <<= i5;
            for (i21 = i4; 13 > i21; i21++) {
                Test.fFld *= i3;
                i2 += (i21 * i3);
                Test.fFld += i1;
                for (i23 = i4; 1 > i23; ++i23) {
                    i6 *= i24;
                    iArr3[i21 - 1] -= (int)Test.instanceCount;
                }
                iArr3[i21 + 1] *= s;
                iArr3[i4] >>>= (int)Test.instanceCount;
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i21 + i22 + i23 + i24 + s + FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-32135, i25=13, i26=-28008, i27=-179, i28=11, i29=-2;
        boolean b1=true;
        float f=0.676F;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)6599);

        i = (int)(lArrFld[(-16624 >>> 1) % N] * ((i - i) / ((Test.instanceCount + Test.instanceCount) | 1)));
        i = (int)lMeth(i, i, i);
        for (i25 = 6; i25 < 292; i25++) {
            for (i27 = 5; 88 > i27; i27++) {
                i %= (int)(i28 | 1);
                if (b1) break;
                i29 = 1;
                while (++i29 < 2) {
                    Test.byFld = (byte)i27;
                }
                lArrFld[i27 - 1] = -111;
                i -= i26;
                Test.dFld += i28;
                f = 1;
                do {
                    i = i27;
                    Test.fFld += (((f * Test.instanceCount) + i27) - Test.instanceCount);
                    iArrFld[i27] *= (int)-4.676F;
                    i26 *= i27;
                    switch ((i27 % 9) + 31) {
                    case 31:
                        i26 += (int)(((f * i) + Test.instanceCount) - Test.instanceCount);
                        i = i27;
                        i = i;
                        Test.lArrFld1[i27 + 1] = (long)1.92F;
                        break;
                    case 32:
                        if (b1) continue;
                        i26 -= i26;
                    case 33:
                        sArr[i25 + 1] = sArr[(int)(f - 1)];
                        break;
                    case 34:
                        Test.fFld += -5379;
                        i26 *= i;
                        i26 *= i29;
                        break;
                    case 35:
                        iArrFld = iArrFld;
                        Test.instanceCount -= -2520838387L;
                        break;
                    case 36:
                        i28 += (int)f;
                        break;
                    case 37:
                    case 38:
                        i28 <<= i25;
                        break;
                    case 39:
                        Test.instanceCount += (long)(f + i);
                        break;
                    default:
                        Test.dArrFld[(int)(f - 1)] += i;
                    }
                } while (++f < 2);
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  dMeth ->  dMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
