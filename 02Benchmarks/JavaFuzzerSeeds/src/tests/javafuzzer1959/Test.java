package tests.javafuzzer1959;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:30:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=183L;
    public static int iFld=9;
    public static float fFld=-2.399F;
    public double dFld=-1.116749;
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -47912L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth(long l) {

        int i=13, iArr[]=new int[N];
        float f=27.660F;

        FuzzerUtils.init(iArr, 2);

        i = i;
        i += (int)(((-(i++)) * (--l)) + (Test.instanceCount--));
        i <<= i;
        f += ((iArr[(i >>> 1) % N]--) * ((-9362 * (i * i)) - 0.69F));
        vMeth_check_sum += l + i + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(int i2, int i3, float f2) {

        int i4=142, i5=11509, i6=195, i7=51200, i8=11799, i9=-1, iArr2[]=new int[N];
        double d=85.96306;
        short s=19124;

        FuzzerUtils.init(iArr2, 3);

        f2 = f2;
        for (i4 = 8; i4 < 215; ++i4) {
            for (i6 = i4; i6 < 8; i6++) {
                for (i8 = 1; i8 < 1; ++i8) {
                    Test.instanceCount -= Test.iFld;
                    i3 &= (int)-23L;
                    iArr2[i6 + 1] *= (int)d;
                    switch (((i7 >>> 1) % 4) + 84) {
                    case 84:
                        iArr2[i6] = (int)Test.instanceCount;
                        Test.iFld = i7;
                        break;
                    case 85:
                        Test.instanceCount = i5;
                        Test.instanceCount += i8;
                        Test.iFld += (i8 * i8);
                        break;
                    case 86:
                        s = (short)d;
                        break;
                    case 87:
                        i7 += i2;
                        break;
                    default:
                        i5 <<= s;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f2) + i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) +
            s + FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        boolean b=false;
        int i10=-28, i11=9, i12=37766, i13=8, iArr1[][]=new int[N][N];
        float f3=0.992F;
        double d1=58.71327;

        FuzzerUtils.init(iArr1, -233);

        iArr1[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] = iMeth1(Test.iFld, Test.iFld, -1.384F);
        b = b;
        for (i10 = 11; i10 < 183; i10 += 2) {
            i12 = 1;
            do {
                Test.iFld = (int)Test.instanceCount;
                i13 = 1;
                do {
                    switch ((i10 % 2) + 55) {
                    case 55:
                        i11 += i12;
                        f3 -= -6;
                        break;
                    case 56:
                        Test.iFld = (int)Test.instanceCount;
                        Test.instanceCount += (i13 * Test.iFld);
                    default:
                        if (b) continue;
                        d1 = Test.instanceCount;
                        if (b) continue;
                    }
                    Test.instanceCount |= 2;
                } while (++i13 < 1);
            } while (++i12 < 18);
        }
        vMeth1_check_sum += (b ? 1 : 0) + i10 + i11 + i12 + i13 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(int i1) {

        int i14=-2, i15=154, i16=18375, i17=-339, i18=7;

        vMeth1();
        i14 = 1;
        do {
            Test.iFld = i14;
            Test.instanceCount += i14;
            for (i15 = 6; i15 > 1; i15--) {
                Test.iFld *= (int)-1.325F;
                Test.instanceCount += (i15 | Test.instanceCount);
                Test.lArrFld[i14 - 1] = 8;
                Test.iFld = i14;
            }
            for (i17 = 6; i17 > 1; --i17) {
                short s1=8318;
                i16 = s1;
                Test.lArrFld[i14] -= i15;
                Test.fFld += (i17 + Test.fFld);
                dFld += Test.iFld;
                dFld += i17;
            }
        } while (++i14 < 294);
        long meth_res = i1 + i14 + i15 + i16 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f1=5.284F;
        int i19=33796, i21=15567, i22=6, i23=-7, iArr3[]=new int[N];
        byte by=-91, byArr[][]=new byte[N][N];
        short s2=21154;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.23620);
        FuzzerUtils.init(iArr3, 4);
        FuzzerUtils.init(byArr, (byte)-60);

        vMeth(Test.instanceCount);
        vMeth((long)(Test.instanceCount -= (long)(--dArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N])));
        Test.iFld = (236 - Math.abs((int)(f1 + Test.instanceCount)));
        vMeth((long)(Test.instanceCount += (long)(iMeth(Test.iFld) + dFld)));
        Test.iFld = Test.iFld;
        Test.fFld = f1;
        i19 = 1;
        do {
            Test.instanceCount += (((i19 * i19) + i19) - i19);
            Test.instanceCount *= by;
            s2 -= (short)-234;
            by = (byte)i19;
            Test.iFld += i19;
            i21 = 1;
            while (++i21 < 175) {
                f1 += (i21 * i21);
                byArr[i19][i19 + 1] = (byte)Test.iFld;
                for (i22 = 1; i22 < 1; ++i22) {
                    int i24=-7;
                    iArr3[i22] ^= i23;
                    Test.instanceCount -= i24;
                    i23 += i19;
                    Test.iFld ^= (int)Test.instanceCount;
                    Test.instanceCount += (i22 ^ s2);
                    i23 -= i21;
                    Test.instanceCount += (i22 * i22);
                    iArr3[i19] = by;
                    Test.iFld <<= (int)Test.instanceCount;
                    iArr3[i19 - 1] = i21;
                }
            }
            Test.instanceCount += -31521;
            i23 += (int)f1;
        } while (++i19 < 143);
        Test.iFld *= (int)Test.instanceCount;
        Test.lArrFld = FuzzerUtils.long1array(N, (long)-701892805L);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
