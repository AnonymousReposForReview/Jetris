package tests.javafuzzer685;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:01:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-24009L;
    public static short sFld=14632;
    public static boolean bFld=false;
    public static double dFld=100.39170;
    public static float fFld=-69.1F;
    public static int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -36961);
        FuzzerUtils.init(Test.fArrFld, 0.88F);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, float f) {

        float f1=40.455F;
        int i5=178, i6=168, i7=0, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 11);

        i4 *= i4;
        iArr2[(i4 >>> 1) % N] -= (int)f;
        Test.iArrFld = Test.iArrFld;
        Test.sFld = (short)i4;
        for (f1 = 9; f1 < 393; ++f1) {
            if (Test.bFld) {
                i6 = 1;
                while (++i6 < 4) {
                    i5 = i6;
                    i4 *= -235;
                    i4 = i4;
                }
                i7 = 1;
                do {
                    i5 += (i7 - Test.instanceCount);
                    Test.instanceCount += i7;
                    Test.iArrFld[(int)(f1 + 1)][i7] = i5;
                    i4 += (i7 + i7);
                } while (++i7 < 4);
            } else if (true) {
                i5 <<= i7;
            } else if (Test.bFld) {
                f += 192;
            }
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + i6 + i7 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth() {

        int i3=-2, i9=-4476, i10=-60, iArr1[][]=new int[N][N], iArr3[]=new int[N];
        float f2=58.587F;
        byte by=8;

        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(iArr3, 53653);

        iArr1[(19 >>> 1) % N][(i3 >>> 1) % N] = (int)(i3 = (int)((iArr1[(i3 >>> 1) % N][(i3 >>> 1) % N] += i3) *
            (Test.instanceCount << i3)));
        iArr1 = (iArr1 = FuzzerUtils.int2array(N, (int)-5));
        vMeth1(i3, f2);
        by += (byte)f2;
        i3 *= by;
        i3 += i3;
        i3 = -119;
        for (int i8 : iArr3) {
            Test.instanceCount -= by;
            Test.dFld += i3;
            for (i9 = 1; i9 < 4; i9 += 3) {
                Test.fArrFld[i9] = i10;
            }
            Test.instanceCount += 28041;
            Test.instanceCount -= 7L;
            Test.iArrFld[(i9 >>> 1) % N] = FuzzerUtils.int1array(N, (int)48721);
        }
        long meth_res = i3 + Float.floatToIntBits(f2) + by + i9 + i10 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i=-7, i1=-21216, i2=-104, i11=0, i12=77, i13=33812, i14=-12096, i15=-7, i16=-21091, iArr[]=new int[N];
        float f3=36.986F;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(bArr, true);

        for (i = 10; 326 > i; ++i) {
            iArr[i + 1] = -20167;
            i1 -= (int)((i2--) + lMeth());
            i2 += (int)127.45743;
            i1 *= i;
            for (i11 = 1; i11 < 5; i11++) {
                Test.iArrFld[i11][i11] = (int)f3;
                for (i13 = 2; i13 > 1; i13--) {
                    i15 -= i1;
                    bArr[i - 1][i13 + 1] = Test.bFld;
                    Test.dFld = i1;
                    i15 >>>= i16;
                    i2 >>= i11;
                }
                i16 *= i11;
                i1 = -171;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i11 + i12 + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=-12, i18=52408, i19=-34939, i20=-214, i21=-7, i22=10, i23=-57111, i24=26270, i25=28504, i26=-141,
            i27=-2, i28=-61;
        double d=2.70896;

        vMeth();
        i17 = i17;
        i17 -= i17;
        Test.fFld -= i17;
        Test.sFld *= (short)Test.fFld;
        for (i18 = 8; i18 < 283; i18++) {
            for (i20 = 2; i20 < 91; ++i20) {
                for (d = 1; d < 2; d += 2) {
                    Test.instanceCount += -10L;
                    i21 = (int)Test.instanceCount;
                }
                if (true) {
                    switch (((i18 % 5) * 5) + 25) {
                    case 34:
                        Test.iArrFld[i20][i20 + 1] /= (int)(i22 | 1);
                    case 39:
                        for (i23 = i18; i23 < 2; i23++) {
                            Test.instanceCount += i23;
                            Test.iArrFld[i23] = Test.iArrFld[i18 + 1];
                            Test.instanceCount = (long)Test.dFld;
                            i19 = i19;
                            i19 = i24;
                            Test.iArrFld[i23][i18] = i18;
                            i19 = i21;
                        }
                        for (i25 = 1; i25 < 2; ++i25) {
                            Test.fFld *= (float)d;
                            Test.instanceCount *= i25;
                            i24 *= i22;
                        }
                        i19 >>>= Test.sFld;
                        break;
                    case 45:
                        for (i27 = 1; i27 < 2; ++i27) {
                            i28 -= Test.sFld;
                            Test.dFld = Test.instanceCount;
                            i19 &= 220;
                        }
                        break;
                    case 32:
                        i24 = i21;
                        break;
                    case 47:
                    default:
                        Test.iArrFld[i18 + 1][i20] += (int)Test.instanceCount;
                    }
                } else {
                    Test.instanceCount = i22;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
