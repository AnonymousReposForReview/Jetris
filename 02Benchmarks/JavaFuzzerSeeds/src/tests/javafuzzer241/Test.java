package tests.javafuzzer241;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:49:40 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static int iFld=189;
    public static double dFld=-17.118872;
    public static byte byFld=7;
    public static short sFld=21716;
    public static boolean bFld=true;
    public long lArrFld[]=new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i6=34407, i7=146, i8=61014, iArr1[]=new int[N];
        float f=0.314F, f1=-1.709F;
        boolean b=false;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -76);
        FuzzerUtils.init(lArr, -4162281434163176217L);
        FuzzerUtils.init(dArr, -1.75854);

        i6 = 1;
        do {
            Test.iFld -= (int)Test.instanceCount;
            i7 = 1;
            while (++i7 < 5) {
                iArr1[i6 + 1] = 181;
            }
        } while (++i6 < 369);
        lArr[(-34667 >>> 1) % N] *= (long)-1.233F;
        Test.instanceCount -= Test.iFld;
        if (b) {
            iArr1[(8 >>> 1) % N] *= Test.iFld;
            for (f = 1; f < 281; f++) {
                if (b) continue;
                iArr1[(int)(f + 1)] = -159;
                iArr1[(int)(f)] += i6;
                f1 = 1;
                while (++f1 < 6) {
                    double d=-82.99082;
                    dArr[(int)(f + 1)] = d;
                    Test.instanceCount += (long)((long)f1 | i6);
                }
            }
        } else if (b) {
            i8 ^= i8;
        } else {
            i8 = (int)Test.instanceCount;
        }
        long meth_res = i6 + i7 + Float.floatToIntBits(f) + i8 + (b ? 1 : 0) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i4=-55262, i5=-13, i10=-60070, i11=3, i12=242, i13=-6, i14=0, i15=24028, iArr[]=new int[N];
        float f2=0.74F;

        FuzzerUtils.init(iArr, 11);

        for (i4 = 6; i4 < 390; ++i4) {
            if (i2 != 0) {
                vMeth_check_sum += i2 + i3 + i4 + i5 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            iArr[i4 - 1] *= (int)Test.instanceCount;
            i5 = (int)Math.max(lMeth(), Test.instanceCount);
        }
        iArr = FuzzerUtils.int1array(N, (int)-7660);
        Test.iFld += Test.iFld;
        for (i10 = 5; i10 < 170; ++i10) {
            for (i12 = 1; 10 > i12; i12++) {
                i11 -= i5;
                i3 >>= i5;
            }
            i11 += i2;
            for (i14 = 1; 10 > i14; i14++) {
                Test.iFld += (i14 ^ (long)f2);
            }
            i15 = i10;
            i11 = i12;
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1) {

        int i16=-9, i17=-183, i18=-51912, i19=-2, i20=-14833, iArr2[]=new int[N];
        boolean b1=false, bArr[]=new boolean[N];
        float f3=0.793F;
        short s=1654;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2565127328475739929L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr2, 4);

        vMeth(i1, i1);
        i16 = 1;
        do {
            for (i17 = 6; 1 < i17; i17--) {
                Test.dFld += 2.3394;
                lArr1[i17] -= 6249481280419338469L;
                for (i19 = 1; i19 < 2; ++i19) {
                    i20 <<= i1;
                    bArr[i17] = b1;
                    Test.iFld -= (int)f3;
                    i18 <<= i20;
                    Test.dFld *= Test.instanceCount;
                    switch ((((i20 >>> 1) % 8) * 5) + 82) {
                    case 118:
                        Test.dFld = s;
                        Test.iFld = s;
                        break;
                    case 105:
                        iArr2 = iArr2;
                        break;
                    case 98:
                        f3 = 45;
                        break;
                    case 113:
                        Test.iFld -= Test.byFld;
                        break;
                    case 104:
                        Test.instanceCount += Test.instanceCount;
                        break;
                    case 85:
                        iArr2[i17 - 1] |= Test.byFld;
                    case 93:
                        f3 += (-55233 + (i19 * i19));
                        break;
                    case 106:
                        Test.instanceCount += (i19 - Test.instanceCount);
                        break;
                    default:
                        Test.byFld -= (byte)i16;
                    }
                }
            }
        } while (++i16 < 294);
        long meth_res = i1 + i16 + i17 + i18 + i19 + i20 + (b1 ? 1 : 0) + Float.floatToIntBits(f3) + s +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=28578, i21=-14701, i22=100, i23=48109, i24=63973, i25=-56275, i26=-6, i27=2104;
        float f5=-2.640F;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, 6L);

        i = i;
        iMeth(Test.iFld);
        Test.instanceCount = Test.iFld;
        i21 = 1;
        while (++i21 < 150) {
            lArrFld[i21 + 1] = i21;
            if (Test.bFld) {
                i -= Test.sFld;
            } else {
                i = Test.iFld;
                for (i22 = 2; i22 < 167; ++i22) {
                    Test.instanceCount &= Test.iFld;
                    for (i24 = 1; i24 < 2; i24++) {
                        float f4=2.269F;
                        f4 *= i21;
                        lArr2 = lArr2;
                        i = i24;
                        Test.dFld += Test.instanceCount;
                        if (Test.bFld) continue;
                        i += (int)(-57854L + (i24 * i24));
                        Test.instanceCount += (i24 - i22);
                        Test.iFld ^= 62980;
                        i23 += i24;
                        Test.bFld = Test.bFld;
                    }
                    Test.instanceCount -= (long)29.331F;
                }
            }
            f5 += -54585;
        }
        Test.dFld = Test.instanceCount;
        for (i26 = 8; i26 < 319; i26++) {
            i23 += i26;
        }
        i -= i21;
        i23 = -19081;
        Test.dFld += -1.128893;
        Test.instanceCount = i21;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
