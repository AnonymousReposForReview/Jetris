package tests.javafuzzer969;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:15:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3454506209L;
    public static int iFld=-9;
    public int iFld1=-56;
    public static volatile float fFld=0.621F;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -62938);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        double d1=29.112491;

        d1 = Test.iFld;
        long meth_res = Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(byte by, double d) {

        float f=-2.587F;
        int i1=-2, i2=-137, i3=-1, i4=-125, i5=-7, i6=11;
        boolean b=true;
        short s1=7964;
        long l=10L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)85);

        lMeth();
        f -= Test.iFld;
        for (i1 = 4; i1 < 213; ++i1) {
            Test.iFld -= Test.iFld;
            if (b) continue;
            for (i3 = 1; i3 < 8; ++i3) {
                byArr[i3] = (byte)s1;
                i2 += (((i3 * i1) + f) - i3);
                i2 += (((i3 * i2) + Test.instanceCount) - f);
            }
            d += i3;
            for (i5 = 8; i5 > 1; i5--) {
                Test.iArrFld = Test.iArrFld;
                Test.iFld += (int)Test.instanceCount;
                i4 += (int)Test.instanceCount;
                l *= i6;
            }
        }
        long meth_res = by + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i1 + i2 + (b ? 1 : 0) + i3 + i4 +
            s1 + i5 + i6 + l + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(short s, int i) {

        byte by1=46;
        double d2=-83.68169;
        int i7=-5, i8=-188, i9=-111, i10=-8, i11=-47, i12=28, i13=-172;
        long l1=201L;
        float f1=-28.114F;
        boolean b1=true;

        iMeth(by1, d2);
        if (b1) {
            for (i7 = 9; 161 > i7; ++i7) {
                for (i9 = 1; i9 < 10; ++i9) {
                    for (l1 = 1; 2 > l1; ++l1) {
                        i -= (int)Test.instanceCount;
                        i8 += (int)(l1 * l1);
                        i8 += (int)l1;
                        Test.iFld = i9;
                    }
                }
                for (i12 = 1; i12 < 10; i12++) {
                    i8 += (((i12 * i10) + i13) - i);
                    switch ((((i10 >>> 1) % 9) * 5) + 36) {
                    case 47:
                        Test.iArrFld[i7 + 1] >>= by1;
                        Test.iArrFld[i12] = (int)-83L;
                        break;
                    case 80:
                        Test.iArrFld[i7 + 1] /= (int)(i7 | 1);
                    case 69:
                        d2 -= s;
                        break;
                    case 56:
                        Test.instanceCount += i12;
                    case 53:
                        Test.iArrFld[i7] = (int)l1;
                        break;
                    case 43:
                    case 50:
                        Test.instanceCount = i8;
                        break;
                    case 55:
                        f1 = l1;
                        break;
                    case 77:
                        Test.iFld &= -20371;
                    }
                }
            }
        } else if (b1) {
            i = (int)d2;
        }
        vMeth_check_sum += s + i + by1 + Double.doubleToLongBits(d2) + i7 + i8 + i9 + i10 + l1 + i11 + i12 + i13 +
            Float.floatToIntBits(f1) + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        short s2=4388;
        boolean b2=true;
        int i14=196, i15=17095, i16=-21108, i17=0, i18=192;
        long l2=-2792234748L;
        byte by2=72;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.97721);

        switch (((((int)(Test.iFld = (int)Test.instanceCount)) >>> 1) % 10) + 69) {
        case 69:
            if (b2) {
                vMeth(s2, Test.iFld);
            } else {
                Test.iFld <<= Test.iFld;
            }
            bArrFld[(Test.iFld >>> 1) % N] = b2;
            break;
        case 70:
        case 71:
            Test.instanceCount ^= Test.iFld;
            Test.iFld <<= (int)Test.instanceCount;
            iFld1 = (int)57008L;
        case 72:
            if (b2) {
                for (i14 = 198; 10 < i14; i14--) {
                    float f2=-31.548F;
                    f2 += i14;
                    Test.iArrFld[i14 - 1] -= (int)Test.instanceCount;
                    for (l2 = 5; l2 < 133; l2++) {
                        b2 = true;
                        if (b2) {
                            iFld1 *= i15;
                            Test.iArrFld[(int)(l2 - 1)] = (int)l2;
                            Test.iFld >>= i15;
                            f2 += (l2 - f2);
                        } else {
                            for (i17 = 1; i17 < 2; ++i17) {
                                f2 -= i14;
                                i15 += 114;
                                i15 = (int)-113.419F;
                                Test.iArrFld[i17] = i17;
                                i15 = s2;
                                Test.instanceCount <<= 37796;
                                Test.instanceCount += (i17 * i17);
                                i18 += (i17 + i16);
                                b2 = true;
                                Test.instanceCount = Test.iFld;
                            }
                        }
                    }
                }
            } else if (b2) {
                Test.instanceCount = Test.iFld;
            } else {
                Test.iFld += by2;
            }
            break;
        case 73:
            b2 = b2;
            break;
        case 74:
            dArr[(i14 >>> 1) % N] *= i18;
            break;
        case 75:
            Test.iArrFld[(iFld1 >>> 1) % N] += (int)Test.fFld;
            break;
        case 76:
            i16 = (int)Test.instanceCount;
        case 77:
            i16 -= Test.iFld;
            break;
        case 78:
            Test.iArrFld[(i18 >>> 1) % N] += i17;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
