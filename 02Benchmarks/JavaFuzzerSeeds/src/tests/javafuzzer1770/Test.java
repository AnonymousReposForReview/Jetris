package tests.javafuzzer1770;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:13:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4037627793947146108L;
    public float fFld=-9.787F;
    public byte byFld=-123;
    public static boolean bFld=false;
    public double dFld=-75.112420;
    public long lFld=-3003251521428672818L;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -64871L);
        FuzzerUtils.init(Test.iArrFld, -36222);
        FuzzerUtils.init(Test.iArrFld1, -176);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public float fMeth(long l, float f1, int i1) {

        int i2=-20110, i3=14, i4=19391, i5=-56, i6=-11519, i7=6, i8=-3;
        short s=-17443;
        double d=2.40437;

        for (i2 = 255; 4 < i2; i2 -= 3) {
            for (i4 = 1; i4 < 19; i4++) {
                i6 = 1;
                while (++i6 < 2) {
                    i5 -= i6;
                    Test.instanceCount -= i1;
                    i3 = i2;
                    s *= (short)i1;
                }
                i5 += (i4 * i4);
                if (false) continue;
                l = (long)d;
                if (false) continue;
                s = (short)i4;
            }
            for (i7 = 1; i7 < 19; i7++) {
                i5 >>= i6;
                if (i7 != 0) {
                }
            }
        }
        long meth_res = l + Float.floatToIntBits(f1) + i1 + i2 + i3 + i4 + i5 + i6 + s + Double.doubleToLongBits(d) +
            i7 + i8;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth1(int i) {

        int i9=-1, i10=204, i11=10, iArr[]=new int[N];
        double d1=1.18290;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 48262);
        FuzzerUtils.init(fArr, -1.176F);
        FuzzerUtils.init(lArr, 35L);

        i += (int)(((-(111.386F * fMeth(Test.instanceCount, fFld, i))) * -11L) + fFld);
        fFld = -8;
        Test.instanceCount %= (i | 1);
        for (i9 = 16; i9 < 268; i9++) {
            fFld += (((i9 * i) + i9) - Test.instanceCount);
            i11 = 1;
            while (++i11 < 6) {
                i >>>= i9;
                fFld += (float)d1;
            }
            iArr[i9] = (int)-12400L;
            d1 = d1;
            Test.instanceCount += i9;
            Test.instanceCount -= i9;
            i = (int)fFld;
            fArr[i9 + 1] = i10;
        }
        lArr = lArr;
        vMeth1_check_sum += i + i9 + i10 + i11 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(float f) {

        int i12=33252, i13=-65025, i14=-14, i15=64154, i16=44504;
        double d2=75.85582;

        vMeth1(i12);
        i12 = -13;
        i13 = 1;
        do {
            byFld %= (byte)(Test.instanceCount | 1);
        } while (++i13 < 364);
        Test.lArrFld[(-56201 >>> 1) % N] = 99;
        Test.iArrFld[(i12 >>> 1) % N] += i13;
        i12 -= (int)Test.instanceCount;
        Test.iArrFld[(i12 >>> 1) % N] *= i13;
        for (i14 = 8; i14 < 318; i14++) {
            Test.iArrFld1 = Test.iArrFld1;
            i12 += i12;
            i15 -= (int)d2;
        }
        i16 = 1;
        do {
            Test.bFld = false;
        } while (++i16 < 327);
        Test.lArrFld[(i14 >>> 1) % N] = Test.instanceCount;
        vMeth_check_sum += Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) + i16;
    }

    public void mainTest(String[] strArr1) {

        int i17=34381, i18=-123, i19=-5, i20=13;
        long l1=-48310L, l2=-1378753812L;
        double d3=49.96623, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.25048);

        vMeth(fFld);
        if (true) {
            Test.instanceCount -= (long)dFld;
            i17 /= (int)(Test.instanceCount | 1);
            i17 -= i17;
        } else if (Test.bFld) {
            for (i18 = 4; i18 < 201; ++i18) {
                short s1=-8282;
                i19 &= (int)Test.instanceCount;
                switch ((i18 % 8) + 98) {
                case 98:
                    Test.iArrFld1[i18][i18] >>= (int)Test.instanceCount;
                    break;
                case 99:
                    i17 <<= 12;
                    if (Test.bFld) {
                    } else {
                        i17 += i19;
                        i19 <<= (int)Test.instanceCount;
                        s1 -= (short)i19;
                    }
                    dFld *= fFld;
                    break;
                case 100:
                    for (l1 = 1; l1 < 127; ++l1) {
                        Test.instanceCount = 5;
                        Test.iArrFld1[(int)(l1)][i18 + 1] >>= s1;
                        i17 = i18;
                        Test.iArrFld[(int)(l1)] = i17;
                    }
                    d3 = 1;
                    while (++d3 < 127) {
                        i20 -= i18;
                        s1 >>= (short)Test.instanceCount;
                        Test.instanceCount *= l2;
                        i19 += (int)49066L;
                        lFld = (long)dFld;
                        dArr = dArr;
                    }
                    lFld ^= i17;
                case 101:
                    l2 += (3 + (i18 * i18));
                    dArr[i18] = l1;
                    break;
                case 102:
                    dFld -= i17;
                    break;
                case 103:
                    i17 = i19;
                    break;
                case 104:
                    Test.iArrFld1[i18 + 1][i18] -= i20;
                    break;
                case 105:
                    byFld = byFld;
                    break;
                }
            }
        } else if (Test.bFld) {
            i19 = (int)-15373L;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
