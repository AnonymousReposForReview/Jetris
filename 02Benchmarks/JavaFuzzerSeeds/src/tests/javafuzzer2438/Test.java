package tests.javafuzzer2438;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:38:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6453078908258942832L;
    public static volatile int iFld=-175;
    public static float fFld=-2.397F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
        FuzzerUtils.init(Test.lArrFld, 8194832030323575765L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2) {

        int i4=87, i5=-92, i6=-49113, i7=-28369, i8=-22, i9=20010, i10=44254;

        for (i4 = 8; 218 > i4; i4++) {
            l1 = Test.instanceCount;
            l2 <<= l1;
            for (i6 = 1; i6 < 8; i6++) {
                try {
                    Test.iArrFld[i6 - 1] = (-189 % i5);
                    i5 = (i6 % -64);
                    i7 = (i8 % -40762);
                } catch (ArithmeticException a_e) {}
                if (i6 != 0) {
                    vMeth2_check_sum += l1 + l2 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
                    return;
                }
                i8 *= i5;
                for (i9 = 2; 1 < i9; i9 -= 2) {
                    float f=94.479F;
                    f = i6;
                    i5 += i4;
                    i8 += (i9 + i10);
                    i5 = (int)3005806922L;
                    i10 <<= i10;
                    Test.iArrFld[i9 + 1] %= (int)64253982689645913L;
                    i10 += (int)l2;
                }
            }
        }
        vMeth2_check_sum += l1 + l2 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
    }

    public static void vMeth1(int i, int i1, long l) {

        int i2=85, i3=46931, i11=-8, i12=-5, i13=154, i14=63, i15=-6;
        double d=-27.78709, dArr[]=new double[N];
        float f1=-23.122F;
        boolean b=false;

        FuzzerUtils.init(dArr, 15.33610);

        for (i2 = 19; i2 < 388; ++i2) {
            vMeth2(l, l);
            i = i3;
            for (d = 1; d < 5; d++) {
                for (i12 = (int)(d); i12 < 2; i12++) {
                    dArr[i2] = i12;
                    i = (int)f1;
                    b = b;
                    if (b) continue;
                    Test.instanceCount += i1;
                }
                i11 = i1;
                i += (int)(d * i2);
                for (i14 = 1; i14 < 2; i14++) {
                    i13 += i1;
                }
                Test.instanceCount += (long)(d * d);
            }
        }
        vMeth1_check_sum += i + i1 + l + i2 + i3 + Double.doubleToLongBits(d) + i11 + i12 + i13 +
            Float.floatToIntBits(f1) + (b ? 1 : 0) + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        float f2=86.161F;
        double d1=-1.24501;
        int i16=-6, i17=16898, i18=5, i19=-17111;
        short s=-17556;
        byte by=56;

        vMeth1(Test.iFld, Test.iFld, -1510005866345057187L);
        f2 = (float)d1;
        i16 = 1;
        do {
            Test.iFld += (i16 + Test.instanceCount);
            i17 = 1;
            while (++i17 < 10) {
                Test.iFld += (i17 - s);
                Test.iArrFld[i17 + 1] = i16;
                Test.instanceCount -= i16;
            }
            Test.instanceCount += Test.instanceCount;
            Test.iFld += (((i16 * by) + Test.iFld) - Test.iFld);
            if (true) break;
            for (i18 = 1; i18 < 10; i18 += 3) {
                Test.iArrFld[i16] += i17;
                Test.instanceCount &= i18;
                Test.iFld = Test.iFld;
            }
        } while (++i16 < 157);
        vMeth_check_sum += Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i16 + i17 + s + by + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        int i20=-7, i21=23411, i22=-2, i23=-10, i24=80, i25=3, i26=42633, i27=-132, i28=-1, i29=-8, i30=2, i31=164;
        byte by1=-47;
        double d2=1.83484;
        short s1=4336;
        boolean b1=false;
        long l3=9L;

        vMeth();
        for (i20 = 7; i20 < 151; ++i20) {
            switch ((i20 % 2) + 12) {
            case 12:
                i22 = 1;
                while (++i22 < 174) {
                    by1 = (byte)-157;
                    i21 += (int)d2;
                }
                i21 = i20;
                break;
            case 13:
                if (b1) {
                    Test.instanceCount += (i20 + s1);
                } else {
                    i21 += (i20 - s1);
                    for (i23 = 1; i23 < 174; ++i23) {
                        for (i25 = 1; i25 < 2; i25++) {
                            Test.iFld ^= i20;
                            Test.iFld -= i23;
                            if (b1) break;
                            i26 += i23;
                            Test.lArrFld[i25][i23] = -34579;
                        }
                        Test.instanceCount += i23;
                        Test.iFld = (int)Test.instanceCount;
                        i24 -= (int)1153232724L;
                        Test.instanceCount += i24;
                    }
                    by1 += (byte)(((i20 * Test.fFld) + i21) - Test.instanceCount);
                }
                for (i27 = 174; 9 < i27; i27 -= 3) {
                    Test.iArrFld[i27 + 1] >>= (int)Test.instanceCount;
                }
                Test.lArrFld[i20 + 1][i20 + 1] = i22;
                for (i29 = 4; 174 > i29; ++i29) {
                    for (l3 = 1; 2 > l3; ++l3) {
                        i26 |= (int)Test.instanceCount;
                        i31 += (int)(l3 * l3);
                    }
                    Test.instanceCount = Test.instanceCount;
                }
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
