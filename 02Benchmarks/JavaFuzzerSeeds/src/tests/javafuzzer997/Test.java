package tests.javafuzzer997;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:48:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static float fFld=-41.541F;
    public int iFld=-6571;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i6, int i7) {

        short s=11834;
        int i8=13, i9=244, iArr[]=new int[N];
        double d=2.2828;
        byte by1=124;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 205722215213249680L);
        FuzzerUtils.init(iArr, -2);

        i7 -= (int)Test.instanceCount;
        s += (short)Test.instanceCount;
        i8 = 1;
        do {
            f1 -= i7;
            i9 = 11;
            while (--i9 > 0) {
                i6 *= i9;
                lArr[i9] -= 84;
                switch ((i9 % 4) + 70) {
                case 70:
                    i6 += (57843 + (i9 * i9));
                    Test.instanceCount = s;
                    break;
                case 71:
                    switch ((i9 % 6) + 86) {
                    case 86:
                        d = -57.84F;
                        iArr[(i6 >>> 1) % N] -= s;
                        Test.instanceCount = i8;
                        if (i6 != 0) {
                            vMeth2_check_sum += Float.floatToIntBits(f1) + i6 + i7 + s + i8 + i9 +
                                Double.doubleToLongBits(d) + by1 + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        break;
                    case 87:
                        Test.instanceCount -= Test.instanceCount;
                        break;
                    case 88:
                        d *= f1;
                    case 89:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 90:
                        i7 += (((i9 * by1) + i9) - Test.instanceCount);
                        break;
                    case 91:
                        d = d;
                        break;
                    }
                    break;
                case 72:
                    f1 -= i7;
                    break;
                case 73:
                    i7 = (int)Test.instanceCount;
                }
            }
        } while (++i8 < 146);
        vMeth2_check_sum += Float.floatToIntBits(f1) + i6 + i7 + s + i8 + i9 + Double.doubleToLongBits(d) + by1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, byte by, int i3) {

        int i4=13, i5=5, i10=9, i11=-128, i12=-39943;
        short s1=9806;

        for (i4 = 6; i4 < 175; i4 += 2) {
            vMeth2(1.389F, i2, 5);
            i5 = (int)Test.instanceCount;
            for (i10 = 1; i10 < 18; ++i10) {
                by &= (byte)i3;
                i5 <<= i3;
                i11 += s1;
                i3 >>>= i11;
                i11 += (((i10 * i4) + Test.instanceCount) - Test.instanceCount);
                i3 -= by;
                i12 = 1;
                do {
                    i5 = 20711;
                    i5 += (int)Test.fFld;
                    i11 = i12;
                    i11 += (i12 ^ i5);
                } while (++i12 < 2);
            }
        }
        vMeth1_check_sum += i2 + by + i3 + i4 + i5 + i10 + i11 + s1 + i12;
    }

    public static void vMeth(int i, float f, int i1) {

        byte by2=-127;
        short s2=28662;
        int i13=8, i14=47393, i15=-156, iArr1[]=new int[N];
        double d1=32.40176;
        long l=131L;

        FuzzerUtils.init(iArr1, -14);

        i = (int)(++f);
        vMeth1(i1, by2, i1);
        Test.instanceCount *= 169;
        i = i1;
        Test.instanceCount &= i;
        s2 *= (short)4741;
        i <<= i;
        for (i13 = 7; i13 < 226; i13 += 2) {
            Test.fFld *= Test.fFld;
            iArr1 = iArr1;
            d1 -= i15;
        }
        l = 144;
        while (--l > 0) {
            Test.fFld += l;
            i15 += (int)(l - i14);
            Test.fFld -= i;
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + i1 + by2 + s2 + i13 + i14 + Double.doubleToLongBits(d1) + i15
            + l + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {


        vMeth(5879, 42.990F, iFld);
        iFld = (int)Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
