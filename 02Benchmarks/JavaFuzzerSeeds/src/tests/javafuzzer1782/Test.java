package tests.javafuzzer1782;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:20:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1770243860L;
    public static byte byFld=-7;
    public static boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[][]=new boolean[N][N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 17892);
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.lArrFld, -1295370092449558158L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth(int i, int i1) {

        int i2=-9, i3=37;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -136L);

        for (i2 = 15; i2 < 297; ++i2) {
            lArr[i2] >>>= (i3++);
        }
        vMeth_check_sum += i + i1 + i2 + i3 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth2(int i7, int i8) {

        int i9=48197, i10=-31633, i11=-12, i12=11, i13=-5, i14=-171;
        boolean b=false;
        double d=122.27545;
        float f=-34.139F;

        Test.iArrFld[(i8 >>> 1) % N] *= i7;
        for (i9 = 9; i9 < 145; ++i9) {
            i10 = 94;
            for (i11 = 12; i11 > i9; --i11) {
                if (b) continue;
                d = i10;
                i13 = 1;
                do {
                    f *= -17645;
                    if (b) break;
                    i10 *= (int)Test.instanceCount;
                    Test.instanceCount += (-209 + (i13 * i13));
                    i14 *= (int)Test.instanceCount;
                    i10 += (-3 + (i13 * i13));
                    Test.instanceCount <<= i9;
                    Test.bArrFld[i9 - 1][i13 + 1] = b;
                } while (++i13 < 1);
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i13 +
            Float.floatToIntBits(f) + i14;
    }

    public static void vMeth1(int i6) {


        Test.byFld *= (byte)((i6 ^ i6) - (i6++));
        vMeth2(12, i6);
        vMeth1_check_sum += i6;
    }

    public static long lMeth(int i5, long l) {

        int i15=24978, i16=-47282, i17=-30040, i18=-243;
        float f1=-2.910F;

        vMeth1(36);
        i15 = 1;
        do {
            i5 = i15;
            for (i16 = 1; i16 < 8; i16++) {
                i17 *= -58896;
                i5 += i15;
                i18 = 2;
                while (--i18 > 0) {
                    Test.iArrFld[i18 - 1] *= (int)l;
                    i5 = (int)l;
                    Test.lArrFld[i16] = i5;
                    i17 -= (int)l;
                    switch (((i18 % 1) * 5) + 65) {
                    case 68:
                        Test.bFld = Test.bFld;
                        f1 -= i18;
                        break;
                    default:
                        f1 += (-63500 + (i18 * i18));
                    }
                }
            }
        } while (++i15 < 203);
        long meth_res = i5 + l + i15 + i16 + i17 + i18 + Float.floatToIntBits(f1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i4=-93, i19=-46578, i20=7, i21=25749, i22=54814, i23=-231, i24=-14399, i25=-12708, i26=-13, i27=200,
            i28=-42452;
        double d1=-57.32549, d2=-80.106021;
        float f2=-104.678F, f3=116.352F;
        short s=-24911;

        vMeth(--i4, (int)(i4 * lMeth(i4, Test.instanceCount)));
        Test.instanceCount -= i4;
        Test.lArrFld[(5 >>> 1) % N] = i4;
        i19 = 1;
        while ((i19 += 3) < 346) {
            for (i20 = 6; i20 < 218; i20++) {
                d1 -= i21;
                i21 -= (int)1.119025;
                for (i22 = i20; i22 < 2; ++i22) {
                    i23 += i22;
                    i23 = (int)Test.instanceCount;
                    i4 *= (int)d1;
                    f2 = s;
                }
                Test.instanceCount %= ((long)(d1) | 1);
            }
            Test.instanceCount = 63492;
        }
        s -= Test.byFld;
        Test.byFld -= (byte)i23;
        i24 = 1;
        do {
            Test.byFld = (byte)i24;
            if (Test.bFld) {
                i23 += (-1 + (i24 * i24));
            }
        } while (++i24 < 129);
        for (i25 = 13; 214 > i25; i25++) {
            for (f3 = 5; f3 < 125; ++f3) {
                Test.lArrFld[(i23 >>> 1) % N] = i25;
                Test.iArrFld[i25 - 1] = -146;
                i21 += (int)f3;
                for (d2 = 1; d2 < 2; ++d2) {
                    i27 += (int)(((d2 * Test.instanceCount) + i26) - Test.instanceCount);
                }
                i21 += (int)(f3 * i27);
                f2 = Test.instanceCount;
                i28 = i27;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
