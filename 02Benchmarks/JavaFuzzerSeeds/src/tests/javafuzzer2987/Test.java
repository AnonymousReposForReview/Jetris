package tests.javafuzzer2987;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:27:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static volatile float fFld=-38.749F;
    public int iFld=223;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -12L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-114, i5=-3, i6=158, i7=180, i8=-65394, iArr[]=new int[N];
        boolean b=false;
        float f=1.528F;

        FuzzerUtils.init(iArr, 11);

        for (i4 = 13; i4 < 318; ++i4) {
            if (b) break;
            Test.instanceCount -= Test.instanceCount;
            i5 += (((i4 * i5) + i4) - i5);
            Test.lArrFld = Test.lArrFld;
            iArr[i4 + 1] ^= (int)Test.instanceCount;
            for (i6 = 1; i6 < 5; i6++) {
                f = Test.instanceCount;
                f -= 0.939F;
                i5 = 4;
                i7 -= i6;
                iArr[i6 + 1] = i4;
                i8 = 1;
                do {
                    i5 >>= i7;
                    i7 += (int)(-7962L + (i8 * i8));
                } while (++i8 < 2);
            }
        }
        vMeth2_check_sum += i4 + i5 + (b ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f) + i8 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, int i3, short s) {

        int i9=-99, i10=-10, i11=-24325, i12=-3, i13=-21, i14=115;
        double d=-46.122234;
        float f1=-112.414F;
        boolean b1=false;

        vMeth2();
        for (i9 = 1; 224 > i9; ++i9) {
            i2 += (i9 * i2);
            d = i3;
            if (b1) {
                i2 = i10;
                for (i11 = i9; i11 < 7; i11++) {
                    for (i13 = 1; i13 > i11; i13 -= 2) {
                        f1 += 11;
                        i12 = (int)d;
                        i12 += i13;
                        Test.instanceCount = Test.instanceCount;
                        if (b1) break;
                        Test.instanceCount += i14;
                        i2 += i3;
                    }
                }
            } else {
                i14 = i13;
            }
        }
        vMeth1_check_sum += i2 + i3 + s + i9 + i10 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 +
            Float.floatToIntBits(f1) + (b1 ? 1 : 0);
    }

    public static void vMeth() {

        int i15=-6, i16=68, i17=-146, i18=-5, i19=5, i20=-76, i21=-29634;
        short s1=14299;
        long l=2879502821L;
        double d1=61.112175;
        float f2=-1.778F;
        byte by=-101;

        vMeth1(i15, i15, s1);
        for (i16 = 2; i16 < 192; i16++) {
            i17 += (((i16 * i17) + i17) - Test.instanceCount);
            l = 1;
            while (++l < 8) {
                for (i18 = 1; i18 < 1; ++i18) {
                    i19 += (((i18 * i17) + i19) - i18);
                    i19 <<= i17;
                    d1 -= i18;
                    i19 &= -7;
                }
                i19 *= (int)-61.103983;
                for (i20 = 1; i20 < 1; ++i20) {
                    switch ((int)(((l % 8) * 5) + 89)) {
                    case 112:
                        i17 -= 0;
                        break;
                    case 120:
                        if (true) break;
                        Test.instanceCount = i20;
                        break;
                    case 93:
                        i21 += (i20 * i20);
                        break;
                    case 122:
                        i15 -= (int)f2;
                        break;
                    case 116:
                        Test.instanceCount >>>= -67;
                        break;
                    case 92:
                        by += (byte)i18;
                        break;
                    case 101:
                        Test.instanceCount *= by;
                        break;
                    case 97:
                    default:
                        d1 -= d1;
                    }
                }
            }
        }
        vMeth_check_sum += i15 + s1 + i16 + i17 + l + i18 + i19 + Double.doubleToLongBits(d1) + i20 + i21 +
            Float.floatToIntBits(f2) + by;
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i1=31488, i22=251, i23=-5, i24=-10190, i25=-55593, iArr1[]=new int[N];
        short s2=-29212;
        double d2=-125.94014;
        long l1=-1063822917L;
        byte by1=-18;
        boolean b2=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -97.33F);
        FuzzerUtils.init(iArr1, 0);

        for (i = 3; 320 > i; i++) {
            vMeth();
            for (i22 = 3; i22 < 79; i22++) {
                for (i24 = 1; i24 < 2; ++i24) {
                    Test.instanceCount += i23;
                    switch (((i24 % 8) * 5) + 114) {
                    case 133:
                        i25 += (i24 * i24);
                        fArr[i24 + 1] = i;
                        s2 += (short)i;
                        break;
                    case 131:
                        i23 *= (int)Test.instanceCount;
                        i23 += (((i24 * Test.fFld) + i) - Test.fFld);
                        iArr1[i] <<= i25;
                        break;
                    case 141:
                        d2 -= Test.instanceCount;
                        Test.lArrFld[i24 + 1] >>= i1;
                        break;
                    case 148:
                        i25 = 82;
                        l1 = i22;
                    case 140:
                        i25 += i;
                        if (b2) {
                            i23 >>= i25;
                            iArr1[i24 - 1] ^= i25;
                            by1 += (byte)Test.fFld;
                        } else if (b2) {
                            i1 += (i24 * i24);
                            l1 -= i24;
                            if (true) {
                                if (b2) {
                                    Test.instanceCount *= 2146;
                                    iFld -= iFld;
                                    Test.lArrFld[i24] <<= i23;
                                    i23 += (i24 ^ (long)Test.fFld);
                                } else {
                                    i23 = i;
                                }
                            } else {
                                i23 %= -129;
                            }
                        } else if (b2) {
                            iFld = -45;
                        } else {
                            i1 = iFld;
                        }
                        break;
                    case 130:
                        l1 >>= Test.instanceCount;
                    case 115:
                        l1 += (i24 + Test.fFld);
                        break;
                    case 152:
                        i23 = (int)Test.instanceCount;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
