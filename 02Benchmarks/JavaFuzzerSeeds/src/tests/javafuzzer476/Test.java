package tests.javafuzzer476;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:32:18 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5L;
    public static volatile float fFld=2.910F;
    public static boolean bFld=false;
    public short sFld=10128;
    public static byte byFld=121;
    public static double dFld=-5.62045;
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 28.316F);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, long l3) {

        int i6=-3, i7=-3, i8=28165, i9=-4, i10=-55, i11=118, i12=45931, i13=48725, i14=7, iArr[]=new int[N];
        short s1=-2138;
        float f1=-1.611F;
        double dArr[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 36.70419);
        FuzzerUtils.init(lArr1, -245L);
        FuzzerUtils.init(iArr, -2184);

        for (i6 = 13; i6 < 214; ++i6) {
            l3 -= s1;
            Test.fFld -= i7;
            for (i8 = 1; i8 < 8; ++i8) {
                i9 = (int)Test.fFld;
                dArr[i6] *= -3;
                Test.fFld += i8;
                l3 += i6;
            }
            lArr1[i6 - 1] -= i9;
        }
        for (f1 = 198; f1 > 8; f1--) {
            for (i11 = (int)(f1); i11 < 8; i11++) {
                for (i13 = i11; 1 > i13; ++i13) {
                    i5 += (int)l3;
                    iArr[i13] >>>= i14;
                    Test.fFld -= i11;
                }
            }
        }
        vMeth1_check_sum += i5 + l3 + i6 + i7 + s1 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static double dMeth(int i4, long l1, long l2) {

        short s=24079;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 44L);

        lArr[(i4 >>> 1) % N] = (i4 * i4);
        lArr[(i4 >>> 1) % N] >>= (((-(l1 + Test.instanceCount)) - (s + i4)) + (--i4));
        vMeth1(i4, Test.instanceCount);
        i4 = i4;
        Test.bFld = Test.bFld;
        i4 = (int)-40858L;
        long meth_res = i4 + l1 + l2 + s + FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, float f) {

        int i1=1, i2=10080, i3=5, i15=-12, i16=-12, i17=-50654, iArr1[]=new int[N];
        double d=18.124520;

        FuzzerUtils.init(iArr1, 10500);

        i1 = 1;
        do {
            for (i2 = 1; i2 < 17; i2++) {
                dMeth(i3, l, -6132L);
                i15 = 1;
                do {
                    Test.fFld -= Test.instanceCount;
                    iArr1 = iArr1;
                    if (true) continue;
                } while (++i15 < 2);
                i3 |= i15;
                d += i3;
                for (i16 = 1; i16 < 2; i16++) {
                    i17 = -8;
                    i3 >>>= i1;
                    i3 *= i2;
                }
                i17 *= (int)l;
            }
            i17 += i1;
        } while ((i1 += 2) < 187);
        vMeth_check_sum += l + Float.floatToIntBits(f) + i1 + i2 + i3 + i15 + Double.doubleToLongBits(d) + i16 + i17 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-139, i18=-50880, i19=742, i20=14, i21=5, i22=-116, i23=96, i24=-31944, iArr2[]=new int[N];
        long l4=224L;

        FuzzerUtils.init(iArr2, -3);

        i = (--i);
        vMeth(Test.instanceCount, Test.fFld);
        for (i18 = 4; 274 > i18; i18++) {
            Test.instanceCount = 166;
            i20 = 1;
            while (++i20 < 93) {
                sFld -= (short)Test.instanceCount;
                Test.byFld = (byte)i19;
                for (i21 = 1; i21 < 1; ++i21) {
                    i -= -14;
                    Test.instanceCount = Test.instanceCount;
                    i = i19;
                }
                i = Test.byFld;
                Test.instanceCount >>= -103;
                l4 = 1;
                do {
                    i22 = (int)8L;
                    Test.dFld += l4;
                    Test.instanceCount -= (long)Test.dFld;
                    Test.fArrFld[(int)(l4 + 1)] += -14296;
                    Test.fArrFld[(int)(l4)] -= i;
                    Test.fFld -= i;
                    i19 = 0;
                } while (++l4 < 1);
                i -= (int)Test.fFld;
                i19 += 9496;
                for (i23 = 1; i23 < 1; i23++) {
                    iArr2[i18] = i21;
                    iArr2 = FuzzerUtils.int1array(N, (int)-9);
                    i = i20;
                    i22 += i20;
                    i = sFld;
                    try {
                        i22 = (54741 / i);
                        i22 = (-403528936 / i23);
                        i24 = (-221 % iArr2[i23 + 1]);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
