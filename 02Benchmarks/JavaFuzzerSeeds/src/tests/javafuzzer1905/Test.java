package tests.javafuzzer1905;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:28:25 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4015757088L;
    public static float fFld=-1.637F;
    public volatile int iFld=-13438;
    public static float fArrFld[]=new float[N];
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -76.972F);
        FuzzerUtils.init(Test.lArrFld, 40727L);
        FuzzerUtils.init(Test.iArrFld, 38563);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, int i9) {

        int i10=191, i11=-58879, i12=-167, i13=-53, i14=2, i15=53, i16=-9, iArr[]=new int[N];
        double d=1.44366;

        FuzzerUtils.init(iArr, -58164);

        i10 = 1;
        do {
            i8 *= -26887;
            Test.instanceCount = i10;
            for (i11 = 1; i11 < 10; ++i11) {
                iArr[i11] %= (int)(i12 | 1);
                switch ((i11 % 10) + 94) {
                case 94:
                    for (i13 = 1; i13 < 2; ++i13) {
                        Test.instanceCount = i9;
                    }
                    i14 += (i11 | Test.instanceCount);
                    i12 += -44;
                    Test.instanceCount += (i11 - i15);
                case 95:
                    i9 += (((i11 * i8) + i9) - Test.fFld);
                    i8 += (((i11 * i8) + i9) - i15);
                    i8 += (((i11 * i14) + i12) - i9);
                    d = Test.instanceCount;
                    break;
                case 96:
                    i15 += -126;
                    break;
                case 97:
                    iArr[i10] -= i8;
                    break;
                case 98:
                    if (i14 != 0) {
                        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) +
                            i16 + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                case 99:
                    Test.instanceCount -= i10;
                    break;
                case 100:
                    i16 += (i11 * i11);
                    break;
                case 101:
                    iArr[i11 - 1] += i8;
                case 102:
                    Test.fArrFld[i11 + 1] -= i11;
                    break;
                case 103:
                    d -= i9;
                }
            }
        } while (++i10 < 153);
        vMeth2_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) + i16 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i4) {

        int i5=5, i6=52145, i7=-73, i17=30101, i18=63957, i19=-120, i20=-4227, i21=60178;

        for (i5 = 20; i5 < 323; i5++) {
            i7 *= 33650;
        }
        vMeth2(i5, -171);
        i6 -= (int)Test.instanceCount;
        i17 = 1;
        do {
            i7 -= (int)1.872F;
            for (i18 = 1; i18 < 4; i18++) {
                for (i20 = 2; i20 > 1; i20 -= 2) {
                    Test.lArrFld = Test.lArrFld;
                    i19 += i5;
                    Test.lArrFld[i20 - 1] = i6;
                }
                Test.fFld *= Test.instanceCount;
                Test.instanceCount += Test.instanceCount;
                Test.instanceCount -= i20;
                Test.instanceCount >>>= i20;
            }
        } while (++i17 < 389);
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i17 + i18 + i19 + i20 + i21;
    }

    public static void vMeth(int i, int i1) {

        int i2=8, i3=-128, i23=-7, i24=-110, i25=27, i26=-109, i27=1, i28=-8798, i29=-18317;
        boolean b=true;
        byte by=24;
        short s=2541;

        for (i2 = 4; i2 < 130; ++i2) {
            i1 += (((i2 * i1) + Test.fFld) - i3);
            vMeth1(i1);
        }
        b = b;
        for (int i22 : Test.iArrFld) {
            Test.iArrFld[(i23 >>> 1) % N] *= i22;
            for (i24 = 1; 4 > i24; ++i24) {
                Test.instanceCount >>= -53153;
            }
        }
        for (i26 = 5; i26 < 386; i26++) {
            for (i28 = 1; 4 > i28; i28++) {
                Test.fArrFld[i26 - 1] = -8.836F;
                i1 += (54613 + (i28 * i28));
                i25 >>>= i28;
            }
            i29 += (-47576 + (i26 * i26));
        }
        by = (byte)s;
        vMeth_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + i23 + i24 + i25 + i26 + i27 + i28 + i29 + by + s;
    }

    public void mainTest(String[] strArr1) {

        int i30=51759, i31=-13, i32=7, i33=-22256, i34=28601, i35=2, i36=37, i37=-1, i38=-182;
        boolean b1=true;
        double d1=107.81303, dArr[]=new double[N];
        long l=-26241L;
        byte by1=-40;

        FuzzerUtils.init(dArr, -26.34848);

        vMeth(62, iFld);
        Test.iArrFld[(iFld >>> 1) % N] = iFld;
        iFld = iFld;
        for (i30 = 4; i30 < 173; ++i30) {
            i31 = iFld;
            i31 *= iFld;
            i31 += (((i30 * i31) + Test.instanceCount) - Test.instanceCount);
        }
        for (i32 = 11; i32 < 231; ++i32) {
            Test.iArrFld[i32] *= (int)Test.fFld;
        }
        b1 = b1;
        for (i34 = 7; i34 < 345; ++i34) {
            try {
                i31 = (i34 % 86);
                i31 = (-34 % iFld);
                iFld = (i32 / i31);
            } catch (ArithmeticException a_e) {}
            i33 = (int)Test.instanceCount;
            Test.iArrFld[i34 - 1] = (int)Test.instanceCount;
            dArr[i34] += i33;
        }
        dArr = dArr;
        i35 ^= i34;
        d1 = iFld;
        for (l = 14; 227 > l; l++) {
            Test.instanceCount -= (long)1.780F;
            i35 += i36;
            if (false) {
                by1 += (byte)l;
                Test.instanceCount += i31;
                Test.iArrFld[(int)(l - 1)] = i30;
            }
            for (i37 = 2; i37 < 118; i37++) {
                Test.fFld += (i37 * i37);
                iFld = i31;
                i36 = i34;
            }
            Test.iArrFld[(int)(l - 1)] >>= i37;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
