package tests.javafuzzer1082;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:15:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public int iFld=47341;
    public static byte byFld=121;
    public volatile int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(short s1, int i7) {

        int i8=-6, i9=-10, i10=76, i11=1, i12=-26873, i13=50570, iArr2[]=new int[N];
        long l1=-1066981061L;
        double d1=-2.22304;
        boolean b=false;

        FuzzerUtils.init(iArr2, 45236);

        for (i8 = 330; i8 > 15; --i8) {
            for (i10 = 1; i10 < 5; ++i10) {
                try {
                    i11 = (i9 / i7);
                    i11 = (470488113 % i7);
                    i7 = (iArr2[i8 - 1] / -40558);
                } catch (ArithmeticException a_e) {}
                for (l1 = 1; l1 < 2; l1 += 3) {
                    i7 += (int)(((l1 * Test.instanceCount) + i13) - s1);
                    d1 *= i13;
                    iArr2[i10] >>= (int)Test.instanceCount;
                    i13 = i9;
                    i7 = (int)l1;
                    i12 += (int)(-2.167F + (l1 * l1));
                    iArr2[i8] = (int)d1;
                    i9 += (int)l1;
                    b = b;
                    d1 -= i13;
                }
            }
            d1 /= -56761;
        }
        long meth_res = s1 + i7 + i8 + i9 + i10 + i11 + l1 + i12 + i13 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l) {

        int i6=3, i14=-49, i15=-58519, i16=52654, i17=80, iArr1[]=new int[N];
        float f1=0.268F;
        double d=0.21235;
        short s=23581, sArr[]=new short[N];
        boolean b1=false;
        long l2=157L;

        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(sArr, (short)-5183);

        i6 = (int)(((f1 - d) * 4147384642L) + (i6 * (iArr1[(i6 >>> 1) % N] = -25989)));
        i6 = (int)29.733F;
        Test.instanceCount -= (((i6 * s) - (i6 + Test.instanceCount)) - (lMeth(s, i6) & -3130));
        for (i14 = 5; i14 < 154; i14++) {
            i6 += i14;
            i15 -= i6;
            i6 *= i15;
            Test.instanceCount >>= Test.byFld;
            i6 += (((i14 * i6) + i14) - Test.byFld);
            if (b1) continue;
            for (i16 = 11; i16 > i14; --i16) {
                Test.instanceCount = i16;
                sArr[i16 - 1] += (short)f1;
                d += l;
                l2 *= -218L;
            }
        }
        vMeth1_check_sum += l + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + s + i14 + i15 + (b1 ? 1 :
            0) + i16 + i17 + l2 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i5) {

        double d2=0.18523;
        int i18=35716, i19=-60751, i20=-128, i21=252, i22=2, iArr[]=new int[N];
        short s2=-14642;
        long l3=-210L;

        FuzzerUtils.init(iArr, 15357);

        i5 = iArr[(151 >>> 1) % N];
        vMeth1(Test.instanceCount);
        d2 = Test.instanceCount;
        i18 = 1;
        do {
            for (i19 = i18; i19 < 5; i19++) {
                s2 = (short)Test.instanceCount;
                l3 = Test.instanceCount;
                for (i21 = 1; 1 > i21; i21 += 2) {
                    iArr[i21 + 1] <<= i19;
                    Test.instanceCount = i18;
                    i20 = i19;
                    i20 = i21;
                    i22 = (int)l3;
                    iArr[i21] -= (int)l3;
                    if (i18 != 0) {
                        vMeth_check_sum += i5 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + s2 + l3 + i21 + i22 +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                }
            }
        } while (++i18 < 371);
        vMeth_check_sum += i5 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + s2 + l3 + i21 + i22 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i1=-99, i2=10, i3=-54, i4=153, i23=5, i24=-12, i25=-54110, i26=-164, i27=179;
        float f=16.403F;
        boolean b2=true;
        double d3=64.115229, dArr[]=new double[N];
        byte by=-46;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1855826217L);
        FuzzerUtils.init(dArr, 105.120893);

        for (i = 324; i > 6; i -= 3) {
            i1 += (((i * f) + i1) - iFld);
            i2 += ((i2--) * (iFld = (i - i)));
            switch ((i % 2) + 102) {
            case 102:
                iFld *= (int)((i + Test.instanceCount) + iFld);
                for (i3 = 10; i3 < 236; ++i3) {
                    vMeth(i2);
                    for (i23 = i; i23 < 2; i23++) {
                        f += f;
                        if (b2) continue;
                        f = Test.byFld;
                        i1 += i23;
                        lArr[i3] %= ((long)(f) | 1);
                        switch (((i23 % 1) * 5) + 93) {
                        case 95:
                            lArr = lArr;
                            break;
                        }
                        iArrFld[(i >>> 1) % N] += (int)Test.instanceCount;
                    }
                    Test.instanceCount = (long)-2.888F;
                    f *= (float)d3;
                    i25 = 1;
                    do {
                        i24 >>= i24;
                        Test.instanceCount += i23;
                    } while (++i25 < 2);
                    iFld += (i3 * i3);
                    i1 /= (int)(i2 | 1);
                    iFld -= i23;
                    dArr[i - 1] *= by;
                }
                break;
            case 103:
                i1 = (int)Test.instanceCount;
                i4 = i3;
                for (i26 = i; i26 < 236; i26++) {
                    i4 <<= -14;
                    iFld -= iFld;
                }
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
