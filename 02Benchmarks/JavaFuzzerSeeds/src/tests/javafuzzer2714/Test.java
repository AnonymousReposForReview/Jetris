package tests.javafuzzer2714;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:08:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-162L;
    public static float fFld=1.556F;
    public static volatile long lFld=-21L;
    public static volatile int iFld=11;
    public static int iFld1=-10;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 167);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1, long l, long l1) {

        int i2=-59865, i3=250, i4=-25649, i5=-12, i6=-240, i7=14;
        double d=44.77165;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 7.456F);
        FuzzerUtils.init(lArr, 16495L);

        i1 = -5;
        i1 = (int)5L;
        i1 += i1;
        Test.fFld *= Test.fFld;
        Test.iArrFld[(i1 >>> 1) % N] = i1;
        i1 &= -4;
        l %= ((long)(Test.fFld) | 1);
        for (i2 = 262; i2 > 5; i2 -= 2) {
            i4 = 1;
            do {
                fArr[i4 + 1] += i1;
                for (i5 = 1; i5 < 1; ++i5) {
                    d -= i3;
                    i1 *= (int)l1;
                    lArr[i5 + 1] *= i1;
                    l1 += (((i5 * i7) + i7) - i7);
                }
            } while (++i4 < 12);
        }
        vMeth2_check_sum += i1 + l + l1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + i7 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i) {

        int i8=52, i9=-92, i10=-130, i11=51;
        long l2=-6767020641668063582L;

        vMeth2(123, Test.instanceCount, Test.instanceCount);
        i8 = 1;
        do {
            i -= i;
            i += i8;
        } while (++i8 < 205);
        Test.iArrFld[(i >>> 1) % N] >>= -10622;
        Test.instanceCount >>= i8;
        i = i;
        for (l2 = 5; l2 < 289; l2++) {
            boolean b=false;
            i9 -= (int)-2.145F;
            for (i10 = 1; i10 < 6; i10++) {
                i9 *= i10;
            }
            Test.iArrFld[(int)(l2)] *= (int)l2;
            b = b;
            Test.fFld = i9;
            Test.iArrFld[(int)(l2 + 1)] >>= i8;
        }
        vMeth1_check_sum += i + i8 + l2 + i9 + i10 + i11;
    }

    public static void vMeth(float f) {

        int i12=19763, i13=-154, i14=55874, i15=118, i16=9;
        double d1=1.130762, d2=104.30222;
        short s=-19395;

        vMeth1(i12);
        i12 = (int)d1;
        i13 = 1;
        while (++i13 < 336) {
            i12 = (int)f;
            switch (((i13 % 2) * 5) + 38) {
            case 48:
                f *= i13;
                break;
            case 42:
                for (i14 = i13; i14 < 5; i14++) {
                    Test.lFld <<= i15;
                    Test.iArrFld[i13 + 1] = (int)Test.instanceCount;
                }
                break;
            }
            Test.iArrFld[i13] = s;
            i12 -= i12;
            for (d2 = 1; d2 < 5; ++d2) {
                i15 = (int)f;
                Test.lFld += (long)(((d2 * f) + Test.instanceCount) - i14);
                i16 = i12;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i12 + Double.doubleToLongBits(d1) + i13 + i14 + i15 + s +
            Double.doubleToLongBits(d2) + i16;
    }

    public void mainTest(String[] strArr1) {

        int i17=35773, i18=-10, i19=-12659, i20=-6, i21=-21, i22=-25603;
        boolean b1=true;
        double d3=112.14564, dArr[]=new double[N];
        short s1=17825;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(dArr, 40.73883);
        FuzzerUtils.init(fArr1, 3.217F);

        Test.instanceCount += (Test.instanceCount--);
        vMeth(113.793F);
        i17 = 1;
        while (++i17 < 146) {
            i18 = 1;
            while (++i18 < 172) {
                b1 = false;
                Test.iFld &= i17;
                Test.lFld = (long)d3;
            }
            switch ((((186 >>> 1) % 7) * 5) + 51) {
            case 80:
                if (b1) {
                    for (i19 = 1; i19 < 172; ++i19) {
                        byte by=118;
                        i20 += (((i19 * Test.lFld) + i18) - by);
                        switch (((i20 >>> 1) % 2) + 111) {
                        case 111:
                            dArr[i17] += Test.iFld;
                            break;
                        case 112:
                        }
                        Test.fFld += (-12799 + (i19 * i19));
                        for (i21 = 1; i21 < 2; i21++) {
                            if (b1) {
                                Test.fFld = 142;
                                s1 = (short)i20;
                                i22 += (i21 * i21);
                                if (b1) {
                                    i20 &= 5;
                                    switch (((i19 % 2) * 5) + 25) {
                                    case 27:
                                        fArr1[i17][i19 + 1] += (float)d3;
                                        b1 = b1;
                                        break;
                                    case 31:
                                        switch ((i19 % 2) + 122) {
                                        case 122:
                                            Test.iArrFld = FuzzerUtils.int1array(N, (int)14);
                                            if (b1) continue;
                                            try {
                                                i20 = (Test.iArrFld[i17] % 59010);
                                                i20 = (-163 % Test.iFld);
                                                Test.iArrFld[i19 + 1] = (i20 % -59277);
                                            } catch (ArithmeticException a_e) {}
                                            d3 = -1.693F;
                                            break;
                                        case 123:
                                            by += (byte)(((i21 * i19) + Test.fFld) - i20);
                                        }
                                        break;
                                    default:
                                        i20 >>>= Test.iFld;
                                    }
                                }
                            } else if (b1) {
                                i20 -= 35;
                            } else if (b1) {
                                Test.fFld += i18;
                            }
                        }
                    }
                } else {
                    i22 *= (int)-4129186895717653809L;
                }
            case 78:
                i22 += (((i17 * Test.fFld) + Test.iFld1) - i20);
                break;
            case 65:
                d3 -= -173;
                break;
            case 60:
            case 81:
                Test.instanceCount += Test.instanceCount;
                break;
            case 61:
                Test.iFld = -52519;
                break;
            case 72:
                dArr = dArr;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
