package tests.javafuzzer302;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:34:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1480053548L;
    public byte byFld=34;
    public static double dFld=-1.84580;
    public static volatile boolean bFld=true;
    public short sFld=-5520;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2982281537L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, float f1) {

        int i6=-6, i7=-22361, i8=253, i9=26735;
        byte by=43;
        boolean b=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.124293);

        for (i6 = 4; i6 < 365; ++i6) {
            i7 *= (int)Test.instanceCount;
            i5 >>= i7;
            i5 = i5;
            for (i8 = 1; i8 < 5; i8++) {
                switch (((i6 % 7) * 5) + 74) {
                case 106:
                    i7 = i5;
                    i7 >>= by;
                    break;
                case 104:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 80:
                    dArr[i8 + 1] = i8;
                    if (b) continue;
                case 109:
                    by >>= (byte)i5;
                    break;
                case 97:
                    i7 = (int)Test.dFld;
                    i9 = i9;
                    i5 = i6;
                case 98:
                    i5 /= (int)(Test.instanceCount | 1);
                    break;
                case 87:
                    i7 >>>= (int)Test.instanceCount;
                    break;
                }
            }
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + by + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(int i4) {

        float f2=0.245F;
        int i10=-39069, i11=-55094, i12=10, i13=-7, i14=-252, iArr1[]=new int[N];
        short s=7605;

        FuzzerUtils.init(iArr1, 11295);

        vMeth1(i4, f2);
        i10 = 1;
        do {
            for (i11 = 1; i11 < 5; ++i11) {
                if (true) {
                    Test.dFld -= s;
                    for (i13 = 1; i13 < 2; ++i13) {
                        iArr1[i13 + 1] = i11;
                        i14 += (i13 | i14);
                        iArr1[i10] += i10;
                        i14 >>= i4;
                        if (Test.bFld) break;
                        iArr1[i10 + 1] *= (int)Test.instanceCount;
                        iArr1[i13 + 1] <<= i10;
                        i14 += i12;
                        f2 = f2;
                    }
                } else if (Test.bFld) {
                    f2 += i10;
                }
            }
        } while (++i10 < 373);
        long meth_res = i4 + Float.floatToIntBits(f2) + i10 + i11 + i12 + s + i13 + i14 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i3=-33, i15=214, i16=1, i17=-13;
        double d=-42.62194;
        float f=0.506F;
        long l1=-1864960977L;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-15273);

        Test.instanceCount >>= (long)((Test.instanceCount = (i3 + 6)) + ((i3--) % ((long)(d) | 1)));
        Test.instanceCount >>>= (i3++);
        d += ((i3 * (Test.instanceCount - 56.77745)) - byFld);
        Test.instanceCount >>= Math.max(Test.instanceCount--, -53 - sArr[(i3 >>> 1) % N]);
        f /= ((Test.instanceCount--) | 1);
        i3 = ((iMeth(i3) - i3) - i3);
        for (long l : Test.lArrFld) {
            if (Test.bFld) {
                for (i15 = 1; i15 < 4; i15++) {
                    i16 += (i15 ^ Test.instanceCount);
                }
                for (l1 = 1; l1 < 4; l1++) {
                    iArrFld[(int)(l1 - 1)] = 137;
                    i3 = (int)f;
                    l += l1;
                }
                if (Test.bFld) break;
            } else if (Test.bFld) {
                f -= i17;
            }
        }
        vMeth_check_sum += i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i15 + i16 + l1 + i17 +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=6, i1=32, i2=238, i18=3, i19=-3021, i20=-195, i21=46741, i22=116, i23=92, iArr[]=new int[N];
        double d1=72.84725, dArr1[]=new double[N];
        float f3=0.144F;

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(dArr1, -59.119422);

        i = (i - iArr[(242 >>> 1) % N]);
        i = (int)((Test.instanceCount = (-6L + (i - i))) - -78);
        for (i1 = 10; i1 < 191; i1 += 2) {
            vMeth();
            switch (((i1 >>> 1) % 4) + 121) {
            case 121:
                for (i18 = 1; i18 < 278; ++i18) {
                    Test.instanceCount = sFld;
                    i <<= 20104;
                    for (d1 = 1; d1 < 2; ++d1) {
                        Test.dFld *= 2.79973;
                    }
                    i20 = (int)Test.instanceCount;
                    iArrFld = iArrFld;
                    Test.bFld = true;
                    i21 = 1;
                    do {
                        i19 = i19;
                        i += -171;
                        i19 |= 61814;
                        i19 += (i21 * i21);
                        dArr1[i21] *= i19;
                        Test.lArrFld[i1 - 1] = i20;
                        i2 |= i21;
                        Test.instanceCount += (long)f3;
                        Test.instanceCount += (-47610 + (i21 * i21));
                        i = i21;
                    } while (++i21 < 2);
                    i = i1;
                    Test.instanceCount += (((i18 * f3) + i19) - i19);
                    i -= (int)Test.instanceCount;
                }
                for (i22 = 8; i22 < 278; ++i22) {
                    f3 *= i22;
                    byFld += (byte)i22;
                }
                break;
            case 122:
                sFld -= sFld;
            case 123:
                i2 = i1;
                break;
            case 124:
                i19 += (i1 * i1);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
