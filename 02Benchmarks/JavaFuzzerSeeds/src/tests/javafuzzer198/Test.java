package tests.javafuzzer198;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:03:56 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1615400898587357317L;
    public int iFld=-38323;
    public static double dFld=42.129679;
    public static volatile boolean bFld=true;
    public static byte byFld=41;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f2) {

        int i6=122, i7=5, i8=9944, i9=88, i10=-213, i11=-37, i12=-44155, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 11L);
        FuzzerUtils.init(iArr1, -10);

        Test.instanceCount = i6;
        lArr[(i6 >>> 1) % N] &= 7554579360813932293L;
        for (i7 = 1; i7 < 376; i7++) {
            i8 += (i7 + Test.instanceCount);
            i6 += i7;
            i6 += (i7 * i7);
            Test.dFld *= 0.524F;
            for (i9 = 1; i9 < 5; ++i9) {
                iArr1[i7] = i9;
                i8 = (int)Test.instanceCount;
                for (i11 = 1; 2 > i11; i11++) {
                    f2 += (89 + (i11 * i11));
                    i6 = 5;
                    Test.instanceCount = 8;
                    Test.instanceCount = i10;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f2) + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, int i2, int i3) {

        int i4=7021, i5=-62122, i13=9, i14=7, i15=2, i16=216, i17=9922, i18=-8548, iArr2[]=new int[N];
        float f3=0.337F;
        byte by=2;

        FuzzerUtils.init(iArr2, -228);

        for (i4 = 4; 242 > i4; ++i4) {
            l += (i4 * i4);
        }
        i5 |= (++i3);
        vMeth2(f3);
        i2 = i4;
        i2 <<= by;
        for (i13 = 20; i13 < 351; i13++) {
            for (i15 = 5; i15 > 1; --i15) {
                for (i17 = 1; i17 < 2; ++i17) {
                    boolean b=false;
                    i5 += i5;
                    if (b) {
                        Test.dFld -= f3;
                    } else {
                        i5 = i3;
                        if (false) break;
                    }
                    iArr2[i17] += i5;
                }
            }
        }
        vMeth1_check_sum += l + i2 + i3 + i4 + i5 + Float.floatToIntBits(f3) + by + i13 + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(float f, float f1) {

        double d=0.74530, dArr[]=new double[N];
        int i=-175, iArr[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 0.128054);
        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(lArr1, -153L);

        for (d = 5; d < 287; d++) {
            i *= (int)((i - (++dArr[(int)(d)])) * -2);
            i *= i;
            i += (int)d;
        }
        for (int i1 : iArr) {
            vMeth1(Test.instanceCount, i, i);
            if (Test.bFld) break;
            i1 = i1;
            switch (((i >>> 1) % 2) + 82) {
            case 82:
            case 83:
                switch ((((i1 >>> 1) % 2) * 5) + 112) {
                case 116:
                    if (Test.bFld) {
                        Test.dFld = f;
                        if (i != 0) {
                            vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) +
                                Double.doubleToLongBits(d) + i + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                            return;
                        }
                        Test.instanceCount = 1;
                        lArr1[(-23271 >>> 1) % N] *= -89L;
                    }
                case 115:
                    i1 -= Test.byFld;
                    break;
                default:
                    if (i1 != 0) {
                        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) +
                            Double.doubleToLongBits(d) + i + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
                        return;
                    }
                }
                break;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f4=-2.822F;
        int i19=-67, i20=-33224, i21=-25724, i22=-2, i23=2, i24=119, i25=11, i26=-53971, i27=41367;
        long l1=-2292182563L;
        boolean b1=false;

        Test.instanceCount <<= (((iFld--) - Integer.reverseBytes(iFld)) * (Test.instanceCount = (iFld++)));
        vMeth(f4, f4);
        iArrFld[(iFld >>> 1) % N] = (int)f4;
        for (i19 = 19; i19 < 335; i19++) {
            i20 -= (int)5L;
            iFld -= i19;
            for (i21 = 80; i21 > i19; --i21) {
                i22 += (((i21 * i22) + i19) - i20);
                Test.instanceCount *= 5611L;
                iFld = i19;
            }
        }
        for (i23 = 4; i23 < 194; i23++) {
            iArrFld[i23] = i22;
            for (i25 = i23; i25 < 132; i25++) {
                i22 += -46;
                Test.instanceCount >>= i20;
                i24 = -14;
                i26 += (i25 ^ i22);
                iFld = (int)Test.instanceCount;
                Test.instanceCount = i24;
            }
            switch ((i23 % 7) + 23) {
            case 23:
                iArrFld[i23] <<= i20;
                i22 += i23;
                iArrFld[i23 - 1] = (int)Test.instanceCount;
                break;
            case 24:
                f4 += 27229;
                i22 |= i26;
                break;
            case 25:
                i20 += i19;
                Test.instanceCount %= (iFld | 1);
                for (l1 = 5; l1 < 132; l1++) {
                    Test.instanceCount >>= i26;
                    i26 += (-49 + (l1 * l1));
                }
                break;
            case 26:
                f4 = (float)Test.dFld;
            case 27:
                iArrFld[i23 + 1] = iFld;
                break;
            case 28:
                Test.instanceCount = i19;
                break;
            case 29:
                b1 = b1;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
