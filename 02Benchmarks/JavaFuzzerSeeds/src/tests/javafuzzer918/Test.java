package tests.javafuzzer918;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:32:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=15175L;
    public volatile short sFld=5350;
    public static boolean bFld=false;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -10L);
        FuzzerUtils.init(Test.iArrFld, 21180);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static void vMeth(int i3, float f, int i4) {

        short s=-8677;

        i4 |= (++s);
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + i4 + s;
    }

    public static int iMeth2(double d2, int i11) {

        int i12=122, i13=199, i14=-14, i15=5, i16=188, i17=-2373, i18=2, i19=218;
        byte by1=-19;
        float f5=-114.143F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 51044L);

        i11 += 43290;
        for (i12 = 6; 204 > i12; i12++) {
            lArr1[i12] *= Test.instanceCount;
            for (i14 = 1; i14 < 8; ++i14) {
                float f4=120.650F;
                f4 += i14;
                i11 -= (int)Test.instanceCount;
                by1 = (byte)-102;
            }
            f5 *= i11;
            f5 = Test.instanceCount;
            Test.lArrFld = FuzzerUtils.long2array(N, (long)-43891L);
            if (i11 != 0) {
            }
            for (i16 = 8; i16 > i12; --i16) {
                for (i18 = 1; 1 > i18; i18++) {
                    i13 = (int)Test.instanceCount;
                }
                d2 = i16;
            }
        }
        long meth_res = Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + i15 + by1 + Float.floatToIntBits(f5) +
            i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(lArr1);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(long l) {

        int i8=-182, i9=16, i10=-254, i20=-5, i21=-91, i22=0;
        float f3=0.426F;
        byte by=30;
        double d3=0.42544;
        short s2=20528;

        for (i8 = 9; i8 < 200; ++i8) {
            Test.instanceCount -= (long)(++f3);
            i10 ^= (int)l;
            switch ((i8 % 2) + 72) {
            case 72:
                by += (byte)(i8 * i8);
                iMeth2(d3, i10);
                for (i20 = i8; i20 < 8; i20++) {
                    i22 = 1;
                    while (++i22 < 1) {
                        d3 = i9;
                        switch (((i8 % 8) * 5) + 84) {
                        case 118:
                            i21 = i21;
                        case 123:
                            i9 = i9;
                            if (Test.bFld) continue;
                            Test.bFld = Test.bFld;
                        case 95:
                            i21 += (((i22 * i9) + by) - s2);
                            break;
                        case 119:
                            by |= (byte)i22;
                            break;
                        case 92:
                            s2 <<= (short)-41;
                            break;
                        case 86:
                            i10 >>>= i21;
                            break;
                        case 105:
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)-14);
                            break;
                        case 103:
                            i21 += (int)(-2685862906865092899L + (i22 * i22));
                            break;
                        default:
                            s2 += (short)(i22 * l);
                        }
                    }
                }
                break;
            case 73:
                i21 += i22;
            }
        }
        long meth_res = l + i8 + i9 + Float.floatToIntBits(f3) + i10 + by + Double.doubleToLongBits(d3) + i20 + i21 +
            i22 + s2;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i7, short s1, double d1) {

        boolean b=false, b1=true;
        float f2=0.753F;

        b = b1;
        d1 += Math.min((int)((i7 >>= (int)Test.instanceCount) % (((long)(f2 * i7)) | 1)),
            (int)(iMeth1(Test.instanceCount) - Test.instanceCount));
        Test.iArrFld[(i7 >>> 1) % N] >>= 78;
        long meth_res = i7 + s1 + Double.doubleToLongBits(d1) + (b ? 1 : 0) + (b1 ? 1 : 0) + Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=47, i1=1728, i2=-5, i5=13, i6=-49441, i23=11, i24=10512, i25=21237, iArr[][]=new int[N][N];
        double d=85.60109;
        float f1=-63.969F;
        byte by2=-111;
        long lArr[]=new long[N], lArr2[]=new long[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(lArr, 2545813774935830149L);
        FuzzerUtils.init(lArr2, -9L);

        for (i = 16; 344 > i; i++) {
            i2 = 1;
            while (++i2 < 77) {
                Test.instanceCount += (long)(sFld += (short)d);
                vMeth(iArr[i - 1][i], (i2 * (535503360L - (iArr[i2][i2] = i))) * iArr[i2][i], (int)((long)(f1 - (i2 -
                    d)) | (i1++)));
                for (i5 = 1; 1 > i5; i5++) {
                    i6 = (iArr[i + 1][i2 - 1] - -123);
                    Test.instanceCount += i5;
                    lArr[(i >>> 1) % N] >>>= (Test.instanceCount--);
                    vMeth(--i1, (i - (i1++)) + iMeth(i1, (short)(20197), d), i2);
                    dArrFld[i2] -= i6;
                }
                sArrFld[i2] = (short)i6;
                Test.instanceCount += i2;
                Test.lArrFld[i2 + 1][i2] = by2;
            }
            i6 *= i5;
            i23 = 77;
            while (--i23 > 0) {
                for (i24 = 1; i24 < 1; i24++) {
                    if (Test.bFld) break;
                    Test.iArrFld[i23] = i24;
                    i25 += i;
                    lArr2[i + 1] = i5;
                    if (Test.bFld) {
                        Test.instanceCount += (((i24 * i) + sFld) - i1);
                        i25 += i24;
                        i6 = sFld;
                        f1 -= i6;
                    } else if (Test.bFld) {
                        sFld += (short)i24;
                        f1 = 177;
                        Test.iArrFld[i24 - 1] = (int)d;
                        Test.iArrFld[i23] = 6;
                    } else {
                        Test.instanceCount += (i24 | sFld);
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
