package tests.javafuzzer2947;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:36:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=193L;
    public static short sFld=17638;
    public double dFld=-90.79133;
    public float fFld=-52.833F;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i3, int i4) {

        int i5=-144, i6=-11, i7=3928, i8=16178;
        boolean b=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -80.88413);

        Test.instanceCount <<= i3;
        for (i5 = 6; i5 < 339; ++i5) {
            for (i7 = 1; 5 > i7; i7++) {
                float f1=0.763F;
                i8 *= Test.sFld;
                i6 *= (int)f1;
                if (false) continue;
                dArr[i7 - 1] *= i8;
                Test.instanceCount += i7;
                Test.instanceCount += i7;
                Test.instanceCount += (i7 + i4);
                if (b) continue;
                i6 += i7;
            }
            Test.instanceCount += (i5 + Test.instanceCount);
            Test.instanceCount -= i5;
        }
        vMeth2_check_sum += l + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1() {

        int i1=-132, i2=-37, i9=-14, i10=251, i11=-12, i12=85, iArr[]=new int[N];
        float f=1.47F;
        double d=-109.54469;

        FuzzerUtils.init(iArr, 5527);

        for (i1 = 14; i1 < 378; ++i1) {
            byte by=18;
            by += (byte)(i1 - f);
            i2 %= (int)((i2--) | 1);
            i2 = i2;
            vMeth2(Test.instanceCount, i1, i2);
            for (i9 = 1; i9 < 5; i9++) {
                i10 ^= i1;
                iArr[i9 + 1] -= (int)2.859F;
                i10 -= i2;
                Test.sFld = (short)41832L;
                for (i11 = 1; i11 < 2; ++i11) {
                    switch ((i11 % 4) + 82) {
                    case 82:
                        Test.instanceCount ^= i11;
                        break;
                    case 83:
                        if (true) continue;
                        if (i9 != 0) {
                            vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 +
                                Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        break;
                    case 84:
                        f += i1;
                    case 85:
                        Test.instanceCount -= (long)d;
                        break;
                    default:
                        i2 &= i9;
                    }
                }
            }
        }
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i) {

        int i13=-63, i14=-10, i15=227, i16=-148, i17=-6;
        float f2=-41.983F, f3=1.641F;
        double d1=69.98193;
        boolean b1=false;

        vMeth1();
        for (i13 = 1; i13 < 137; i13++) {
            switch (((i13 % 4) * 5) + 105) {
            case 114:
                for (i15 = 1; i15 < 12; ++i15) {
                    f2 = 1;
                    while (++f2 < 2) {
                        Test.sFld += (short)d1;
                    }
                    if (b1) continue;
                    i17 = 2;
                    while (--i17 > 0) {
                        i = i17;
                        Test.instanceCount = Test.instanceCount;
                        i14 -= (int)Test.instanceCount;
                        Test.iArrFld[i13] = (int)Test.instanceCount;
                        f3 = Test.instanceCount;
                    }
                    if (i15 != 0) {
                        vMeth_check_sum += i + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) +
                            Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + i17 + Float.floatToIntBits(f3);
                        return;
                    }
                    b1 = b1;
                }
                break;
            case 121:
                if (b1) continue;
                break;
            case 112:
                Test.instanceCount += (long)62.928F;
                break;
            case 124:
                b1 = b1;
                break;
            default:
                if (i != 0) {
                    vMeth_check_sum += i + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) +
                        Double.doubleToLongBits(d1) + (b1 ? 1 : 0) + i17 + Float.floatToIntBits(f3);
                    return;
                }
            }
        }
        vMeth_check_sum += i + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + (b1 ? 1
            : 0) + i17 + Float.floatToIntBits(f3);
    }

    public void mainTest(String[] strArr1) {

        int i18=18, i19=-236, i20=4, i21=5, i22=10302, i23=-249, i24=2, i25=-35172, i26=16177;
        byte by1=83;
        boolean b2=false;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.777F);

        vMeth(i18);
        dFld += i18;
        fArr[(i18 >>> 1) % N][(i18 >>> 1) % N] *= Test.instanceCount;
        for (i19 = 10; i19 < 162; i19 += 3) {
            Test.sFld = (short)3;
            i21 *= 4;
            i21 = 228;
            Test.sFld += (short)(i19 | Test.instanceCount);
            dFld = 0;
            fArr[i19][i19 - 1] += i19;
        }
        by1 /= (byte)1.58486;
        if (b2) {
            i18 += (int)Test.instanceCount;
            fFld += i21;
            for (i22 = 15; i22 < 333; i22++) {
                for (i24 = i22; 79 > i24; i24++) {
                    Test.instanceCount = i19;
                    i23 += -6;
                    Test.instanceCount *= i24;
                    i25 /= 5047;
                    i18 += i24;
                    Test.instanceCount += (((i24 * i20) + i23) - by1);
                    i23 += (i24 * Test.instanceCount);
                    Test.instanceCount = Test.instanceCount;
                }
                Test.sFld += (short)(i22 | i24);
                i26 = 79;
                while (--i26 > 0) {
                    Test.instanceCount = -637988538L;
                    b2 = b2;
                    i23 -= i25;
                    i21 += (i26 * Test.instanceCount);
                }
            }
        } else if (false) {
            fFld = 156;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
