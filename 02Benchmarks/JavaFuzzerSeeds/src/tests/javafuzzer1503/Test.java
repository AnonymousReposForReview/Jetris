package tests.javafuzzer1503;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:33:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-20357L;
    public static volatile short sFld=25562;
    public static float fFld=-2.457F;
    public static volatile boolean bFld=false;
    public static byte byFld=-46;
    public volatile int iFld=-176;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)19526);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i6, int i7) {

        long l1=-2238632189675479385L, lArr[][]=new long[N][N];
        int i8=60866, i9=23, i10=-138, i11=38853, i12=-235, i13=28476, iArr[]=new int[N];
        byte byArr[][]=new byte[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -240);
        FuzzerUtils.init(byArr, (byte)-87);
        FuzzerUtils.init(lArr, -37683L);
        FuzzerUtils.init(fArr, -2.516F);

        for (l1 = 1; l1 < 198; l1++) {
            for (i9 = 1; i9 < 8; ++i9) {
                for (i11 = 1; 2 > i11; ++i11) {
                    iArr[i9] *= i7;
                    iArr[i9] = Test.sFld;
                    i6 = (int)Test.instanceCount;
                    i13 += (int)0L;
                    byArr[i9][i11 - 1] *= (byte)f;
                }
                i13 += (int)l1;
                i7 = (int)Test.instanceCount;
                lArr[(int)(l1 + 1)][(int)(l1 - 1)] = i9;
                f *= i11;
                fArr[i9] = Test.instanceCount;
                i8 += (int)f;
                Test.instanceCount += (i9 | i9);
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i6 + i7 + l1 + i8 + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i5) {

        int i14=40592, i15=23910, i16=-6634;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.106512);

        vMeth2(Test.fFld, i5, i5);
        for (i14 = 14; i14 < 249; ++i14) {
            if (Test.bFld) break;
            Test.fFld = i15;
            i15 += (((i14 * i14) + Test.instanceCount) - i14);
            i5 = (int)Test.instanceCount;
            i5 = i5;
        }
        i16 = 1;
        while (++i16 < 388) {
            i5 += (((i16 * i14) + Test.instanceCount) - i5);
            i5 = i14;
        }
        i5 = i14;
        Test.byFld -= (byte)i15;
        i5 >>>= i14;
        dArr[(i14 >>> 1) % N] = Test.fFld;
        i15 *= i16;
        vMeth1_check_sum += i5 + i14 + i15 + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i3=67, i4=55, i17=-188, i18=7, i19=188, iArr1[]=new int[N];
        long l2=-42947L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2427473638L);
        FuzzerUtils.init(iArr1, -204);

        for (i3 = 12; 245 > i3; i3++) {
            switch (((((int)(Test.instanceCount * 45229L)) >>> 1) % 9) + 36) {
            case 36:
                vMeth1(i3);
                Test.sArrFld[i3 - 1] = (short)i3;
                Test.fFld = -189;
                i17 = 1;
                do {
                    Test.fFld *= i3;
                    Test.fFld += i17;
                    Test.instanceCount *= i3;
                    for (i18 = 1; i18 < 1; i18++) {
                        Test.instanceCount >>= Test.instanceCount;
                        Test.fFld += (i18 * i18);
                        lArr1[i18] -= Test.instanceCount;
                        Test.instanceCount += i18;
                        Test.sFld >>= (short)1;
                    }
                } while (++i17 < 7);
                break;
            case 37:
                lArr1[i3 + 1] = i18;
                break;
            case 38:
                Test.bFld = true;
                break;
            case 39:
                i19 = i3;
                break;
            case 40:
                iArr1[i3] -= i3;
            case 41:
                iArr1[i3] &= (int)l2;
            case 42:
                lArr1 = FuzzerUtils.long1array(N, (long)48904L);
                break;
            case 43:
                i4 >>= i19;
                break;
            case 44:
                l2 = l2;
                break;
            default:
                if (i3 != 0) {
                    vMeth_check_sum += i3 + i4 + i17 + i18 + i19 + l2 + FuzzerUtils.checkSum(lArr1) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i17 + i18 + i19 + l2 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=142, i1=6, i2=-42689, i20=26207, i21=11, i22=-93, i23=-183, i24=53484, i25=57150, iArr2[]=new int[N];
        long l=-1L;
        double d=1.48883;

        FuzzerUtils.init(iArr2, -8);

        for (i = 10; i < 244; ++i) {
            for (l = 107; l > 3; l--) {
                i1 += (int)(l * l);
                Test.instanceCount *= (Integer.reverseBytes((int)(d + 22295L)) >> (long)((i2 * 1.123075) - i1));
                vMeth();
                Test.bFld = Test.bFld;
                Test.fFld += l;
                Test.instanceCount += (((l * i) + Test.instanceCount) - l);
                d = i;
            }
            Test.instanceCount += i2;
            d = i2;
            for (i20 = 4; i20 < 107; ++i20) {
                i21 += -6;
                Test.instanceCount += (i20 * i20);
                iArr2[i + 1] &= (int)Test.instanceCount;
                i21 = (int)d;
                if (false) continue;
                if (Test.bFld) {
                    for (i22 = 2; i22 > 1; i22--) {
                        Test.instanceCount += (i22 ^ l);
                        Test.instanceCount += (((i22 * l) + i20) - i21);
                        if (Test.bFld) {
                            Test.byFld += (byte)Test.fFld;
                            i1 += (i22 * l);
                        } else {
                            Test.instanceCount = l;
                        }
                    }
                    for (i24 = 2; i24 > 1; i24--) {
                        Test.instanceCount >>= i21;
                        iFld = i20;
                        if (Test.bFld) continue;
                        i21 = -6789;
                    }
                } else if (Test.bFld) {
                    Test.instanceCount += -1;
                } else if (true) {
                    iArr2[i20] >>= i24;
                } else {
                    Test.instanceCount *= (long)d;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
