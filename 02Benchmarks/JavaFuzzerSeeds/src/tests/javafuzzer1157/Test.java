package tests.javafuzzer1157;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:55:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7845375854767956498L;
    public double dFld=0.94681;
    public static double dFld1=-2.72318;
    public static volatile boolean bFld=false;
    public short sFld=-4968;
    public volatile long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -146);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth() {

        int i3=-14693;

        Test.instanceCount *= (long)(Test.dFld1 + ((i3 + Test.instanceCount) + (i3--)));
        long meth_res = i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i4) {

        int i5=-3, i6=942, i7=22878, i8=199, i9=-2;
        long l1=-4189491379494264334L;
        byte by=-10;

        iMeth();
        for (i5 = 5; 201 > i5; ++i5) {
            i6 += (((i5 * i5) + Test.instanceCount) - i4);
            if (Test.bFld) continue;
            for (i7 = 1; i7 < 8; i7++) {
                i8 = i4;
                i4 += (i7 - i7);
                i8 += (16093 + (i7 * i7));
                for (l1 = 1; l1 < 2; ++l1) {
                    i9 = i5;
                    Test.instanceCount += (l1 * l1);
                    by += (byte)l1;
                    i9 = i8;
                    if (Test.bFld) break;
                    if (i8 != 0) {
                        vMeth1_check_sum += l + i4 + i5 + i6 + i7 + i8 + l1 + i9 + by;
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i4 + i5 + i6 + i7 + i8 + l1 + i9 + by;
    }

    public void vMeth(int i) {

        int i1=12, i2=-25792, iArr[]=new int[N];
        float f=-2.882F;

        FuzzerUtils.init(iArr, 13845);

        dFld -= lArrFld[(i >>> 1) % N][(i >>> 1) % N];
        iArr[(i >>> 1) % N] *= -74;
        for (i1 = 9; i1 < 214; ++i1) {
            i2 = iMeth();
            i = (int)((-(iArr[i1] -= (int)Test.instanceCount)) - ((i2 - i2) + f));
            vMeth1(126L, -198);
            sFld += (short)(i1 * i1);
        }
        i <<= (int)-123L;
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i10=14, i11=-64095, i12=-4, i13=-106, i14=132, i15=-137, i16=7, i17=-11475, i18=-34691;
        long l2=-48644L;
        byte by1=126;
        float f1=-2.295F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)9049);

        vMeth(i10);
        i10 -= i10;
        for (l2 = 268; l2 > 16; --l2) {
            Test.instanceCount += (l2 * l2);
            i10 *= 31693;
            for (i12 = 6; i12 < 100; i12++) {
                i13 -= i10;
                lArrFld[(int)(l2)][(int)(l2)] >>= i13;
                i13 *= i10;
                i10 &= (int)Test.instanceCount;
                i10 *= by1;
                Test.iArrFld[(int)(l2)] *= (int)dFld;
            }
            i13 = (int)l2;
        }
        try {
            Test.instanceCount = i11;
            for (i14 = 1; i14 < 159; ++i14) {
                Test.instanceCount = i14;
                i11 -= i10;
                Test.bFld = true;
                Test.instanceCount += -215L;
                for (i16 = 3; 159 > i16; i16++) {
                    Test.iArrFld[i16] <<= i10;
                    i18 = 1;
                    do {
                        if (Test.bFld) {
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)38);
                            i10 -= i15;
                            sArr[i14 - 1] = (short)i13;
                            i11 = -18430;
                        } else {
                            Test.iArrFld[i18 + 1] += (int)Test.instanceCount;
                        }
                        i10 += (i18 * i18);
                    } while (++i18 < 2);
                }
            }
        }
        catch (ArithmeticException exc1) {
            Test.instanceCount += Test.instanceCount;
        }
        finally {
            f1 += i11;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest vMeth1
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
