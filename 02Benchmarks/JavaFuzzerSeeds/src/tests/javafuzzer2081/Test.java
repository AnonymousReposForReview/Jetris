package tests.javafuzzer2081;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:41:53 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=218849684L;
    public static boolean bFld=false;
    public static float fFld=1.3F;
    public int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        int i9=9657, i10=-63484, i11=-229, i12=-96, i13=66, i14=142;
        byte by=-63;
        boolean b=false;
        float f=65.762F;

        for (i9 = 8; 378 > i9; i9++) {
            i7 += i9;
            Test.instanceCount = by;
            if (b) {
                Test.instanceCount -= i8;
            }
            for (i11 = i9; i11 < 5; ++i11) {
                switch ((i11 % 1) + 112) {
                case 112:
                    f += (i11 * i11);
                    Test.instanceCount *= i12;
                    for (i13 = 1; i13 < 1; i13 += 2) {
                        i10 = 243;
                        i10 = i8;
                        i12 = (int)Test.instanceCount;
                        i8 = i14;
                        if (i10 != 0) {
                            vMeth1_check_sum += i7 + i8 + i9 + i10 + by + (b ? 1 : 0) + i11 + i12 +
                                Float.floatToIntBits(f) + i13 + i14;
                            return;
                        }
                    }
                    break;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + by + (b ? 1 : 0) + i11 + i12 + Float.floatToIntBits(f) + i13 + i14;
    }

    public static void vMeth(int i3, int i4) {

        int i5=-47890, i6=17341, i15=4, i16=0, i17=-63853, i18=7122, i19=60493;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 7943541455543991186L);
        FuzzerUtils.init(fArr, 118.350F);

        for (i5 = 3; i5 < 395; ++i5) {
            vMeth1(i4, -155);
            Test.instanceCount -= i6;
            lArr[i5 + 1] = Test.instanceCount;
        }
        i15 = 1;
        while (++i15 < 392) {
            short s1=4429;
            for (i16 = i15; i16 < 4; i16++) {
                Test.instanceCount += (i16 * i16);
                fArr[i15 - 1] += i3;
                i17 += i16;
            }
            i4 += -191;
            Test.instanceCount += i15;
            if (Test.bFld) {
                for (i18 = 1; 4 > i18; i18++) {
                    if (Test.bFld) break;
                    Test.instanceCount += (i18 * i18);
                }
            } else if (Test.bFld) {
                i3 += (((i15 * i18) + i19) - s1);
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i15 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(int i1, int i2) {

        int i20=15, i21=-159, i22=-2, i23=-23335, i24=126;
        short s2=-14605;
        float f1=126.796F, f2=-73.866F;

        vMeth(i1, i2);
        for (i20 = 133; i20 > 7; i20 -= 2) {
            s2 *= (short)i20;
            for (i22 = 1; i22 < 24; i22++) {
                f1 += (i22 - i20);
                i21 += (i22 * i22);
                i23 = i20;
                i1 = i21;
                i21 += -7;
                i2 *= i23;
                for (f2 = 1; f2 < 2; ++f2) {
                    f1 -= (float)65.112692;
                    i1 += (int)(-35978L + (f2 * f2));
                    Test.instanceCount ^= i22;
                }
                i24 -= i2;
            }
        }
        long meth_res = i1 + i2 + i20 + i21 + s2 + i22 + i23 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) +
            i24;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-220, i25=-44, i26=-6, i27=6, i28=8580, i29=7, i30=4052, i31=-126, i32=4665, i33=19498, i34=-63859,
            i35=-125, i36=228;
        short s=-20689;
        double d=-84.78227;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr1, 0.783F);

        i *= (i - ((i * s) * (--i)));
        i |= iMeth(i, i);
        for (i25 = 20; i25 < 364; i25++) {
            Test.fFld = i25;
            i += (int)d;
            i = i25;
            fArr1[i25 + 1][i25 - 1] -= i25;
            if (Test.bFld) break;
            iArrFld = iArrFld;
            iArrFld[i25] -= i26;
            for (i27 = 4; i27 < 73; ++i27) {
                lArrFld = FuzzerUtils.long1array(N, (long)-8375259842495994722L);
                for (i29 = 2; 1 < i29; --i29) {
                    i26 = i29;
                }
                i30 = i26;
                Test.fFld += i25;
                i30 *= i;
                for (i31 = 1; 2 > i31; ++i31) {
                    i26 <<= (int)Test.instanceCount;
                    i = i31;
                    iArrFld[i31] += i31;
                }
                i32 += (int)(14.587F + (i27 * i27));
                i28 ^= (int)Test.instanceCount;
                Test.fFld -= -10411;
            }
        }
        for (i33 = 3; i33 < 144; ++i33) {
            iArrFld = iArrFld;
            Test.bFld = true;
            for (i35 = 6; i35 < 178; ++i35) {
                i28 += i35;
                i30 = i25;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
