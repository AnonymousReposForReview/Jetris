package tests.javafuzzer3380;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:57:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static short sFld=25499;
    public static byte byFld=-69;
    public double dFld=-67.126090;
    public int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i1, int i2) {

        int i3=63640, i4=-34770, i5=24093, i6=-15173, i7=-9;
        boolean b=false, bArr[]=new boolean[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -76L);
        FuzzerUtils.init(bArr, true);

        for (i3 = 13; i3 < 274; i3 += 2) {
            i2 <<= i3;
            i4 += i3;
            Test.instanceCount >>= i4;
            Test.instanceCount -= Test.instanceCount;
            i5 = 1;
            while (++i5 < 12) {
                lArr[i3 + 1][i3] -= i1;
                for (i6 = 1; 1 < i6; --i6) {
                    Test.instanceCount *= i6;
                    Test.instanceCount = i4;
                    i2 >>= -12;
                    switch (((i3 % 1) * 5) + 44) {
                    case 45:
                        i1 += (i6 ^ i4);
                        break;
                    default:
                        Test.instanceCount >>= Test.instanceCount;
                        bArr[i6 - 1] = b;
                    }
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(bArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {

        int i8=63609;

        fMeth(-156, i8);
        long meth_res = i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        int i9=-218, i10=178, i11=-37284, i12=130, i13=55, i14=-4, iArr[]=new int[N];
        float f=-2.759F;
        double dArr[][]=new double[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(dArr, -110.126315);
        FuzzerUtils.init(lArr1, -4087556598L);

        iArr[(i >>> 1) % N] *= (iMeth() - i);
        for (i9 = 9; i9 < 318; ++i9) {
            dArr[i9][i9] += Test.sFld;
            for (i11 = 1; i11 < 5; ++i11) {
                i10 >>= -111;
                i12 = Test.sFld;
                i = i11;
                for (i13 = i9; i13 < 2; ++i13) {
                    boolean b1=true;
                    lArr1[i13] <<= i11;
                    i += (i13 - Test.instanceCount);
                    if (b1) break;
                    i10 += (int)f;
                }
                i10 ^= -48828;
                Test.sFld %= (short)(Test.instanceCount | 1);
                Test.instanceCount <<= Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i15=-7, i16=-102, i17=-6, i18=11907, i19=-24, i20=0, i21=32, i22=-186, i23=3, i24=-228, i25=0;
        float f1=2.671F;

        vMeth(i15);
        i15 = -19863;
        for (i16 = 255; 13 < i16; i16 -= 2) {
            i15 <<= i16;
        }
        iArrFld[(i17 >>> 1) % N][(i18 >>> 1) % N] -= (int)Test.instanceCount;
        i15 *= i15;
        i17 = i16;
        i15 |= Test.byFld;
        i15 -= i17;
        for (i19 = 5; 269 > i19; i19++) {
            dFld *= i18;
        }
        i20 += (int)Test.instanceCount;
        for (i21 = 302; i21 > 4; --i21) {
            i15 *= i21;
            Test.instanceCount += (40688 + (i21 * i21));
            for (i23 = 2; i23 < 84; ++i23) {
                i17 += (int)Test.instanceCount;
                f1 += (i23 - i21);
                i25 = 2;
                while (--i25 > 0) {
                    i24 = i24;
                    i15 *= i22;
                    switch (((i25 >>> 1) % 2) + 8) {
                    case 8:
                        i18 += (i25 * i25);
                        Test.lArrFld[i25] = (long)dFld;
                        i18 *= -57858;
                        i22 += (i25 ^ Test.instanceCount);
                        break;
                    case 9:
                        fArrFld[i23 + 1] *= i19;
                        i15 += (i25 * i17);
                        i17 += (int)Test.instanceCount;
                        break;
                    default:
                        f1 = Test.instanceCount;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
