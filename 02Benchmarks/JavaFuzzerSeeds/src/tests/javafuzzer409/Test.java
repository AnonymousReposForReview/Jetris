package tests.javafuzzer409;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:19:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-287462868749843067L;
    public volatile int iFld=14;
    public static float fFld=-70.514F;
    public static int iFld1=-5;
    public static double dFld=-27.81405;
    public short sFld=-18600;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 11L);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i2) {


        i2 >>>= 164;
        long meth_res = i2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static byte byMeth(int i, int i1) {


        i = (int)(i - lMeth(i));
        long meth_res = i + i1;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth() {

        long l=47631L;
        int i3=-14, i4=-9, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -15018);

        Test.fFld += (byMeth(Test.iFld1, Test.iFld1) * Test.iFld1);
        for (l = 2; l < 164; ++l) {
            iArr[(int)(l)] >>= (int)106L;
            Test.fFld += (l + i3);
            Test.iFld1 = Test.iFld1;
        }
        i3 += Test.iFld1;
        iArr[(-36237 >>> 1) % N] += i3;
        for (long l1 : Test.lArrFld) {
            Test.dFld -= i3;
            l1 ^= Test.iFld1;
        }
        Test.iFld1 = Test.iFld1;
        Test.fFld += i3;
        i4 = 1;
        while (++i4 < 292) {
            Test.iFld1 += (int)Test.dFld;
            Test.fFld -= l;
        }
        vMeth_check_sum += l + i3 + i4 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i5=154, i6=8, i7=217, i8=31258, iArr1[]=new int[N];
        double d=50.15465;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.659F);
        FuzzerUtils.init(iArr1, -85);

        Test.instanceCount += iFld;
        iFld += (int)(++Test.instanceCount);
        vMeth();
        for (i5 = 8; i5 < 192; ++i5) {
            Test.lArrFld[i5] += i5;
            switch (((i5 % 2) * 5) + 18) {
            case 25:
                d = 1;
                do {
                    Test.dFld *= Test.fFld;
                    for (i7 = 1; i7 < 1; i7++) {
                        Test.lArrFld[(int)(d - 1)] *= (long)Test.fFld;
                        fArr[i7 - 1] += i5;
                        i8 = i5;
                        iFld -= Test.iFld1;
                        try {
                            Test.iFld1 = (iArr1[i5] / Test.iFld1);
                            iFld = (Test.iFld1 % iFld);
                            i6 = (-1342546226 / i7);
                        } catch (ArithmeticException a_e) {}
                        switch (((i7 % 4) * 5) + 85) {
                        case 95:
                            Test.iFld1 -= iFld;
                        case 97:
                            Test.instanceCount += i7;
                            i6 = iFld;
                            Test.instanceCount <<= 22;
                            break;
                        case 88:
                            try {
                                i8 = (Test.iFld1 % i6);
                                iArr1[(int)(d)] = (i5 / -184);
                                i8 = (2 % i6);
                            } catch (ArithmeticException a_e) {}
                            Test.instanceCount = i6;
                            break;
                        case 99:
                            iFld -= (int)Test.instanceCount;
                            Test.instanceCount = i7;
                            break;
                        default:
                            Test.fFld += 23467L;
                        }
                    }
                    iArr1[i5] += (int)Test.fFld;
                } while (++d < 136);
                break;
            case 20:
                if (false) {
                    Test.lArrFld[i5] |= Test.iFld1;
                } else if (b) {
                    Test.instanceCount = sFld;
                    i6 ^= i8;
                } else if (b) {
                    Test.instanceCount |= i5;
                } else {
                    Test.instanceCount = Test.instanceCount;
                }
                break;
            default:
                Test.iFld1 = (int)Test.fFld;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
