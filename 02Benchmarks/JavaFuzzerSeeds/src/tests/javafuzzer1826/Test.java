package tests.javafuzzer1826;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:05:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1277651258792002764L;
    public static int iFld=-16457;
    public static short sFld=-28726;
    public double dFld=92.11236;
    public static volatile int iFld1=97;
    public static byte byFld=-50;
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2241213717L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        boolean b1=true;
        int i7=-39989, i8=27786, i9=-160, i10=-6150, i11=-65247, i12=-9, i13=-56502, iArr2[]=new int[N];
        short s=-15592;
        float f1=-2.855F;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, -2);
        FuzzerUtils.init(dArr, 27.21399);

        for (int i6 : iArr2) {
            if (b1) break;
            i6 = i6;
        }
        for (i7 = 6; i7 < 252; i7++) {
            i8 ^= s;
        }
        for (i9 = 6; i9 < 246; i9++) {
            f1 += i8;
            for (i11 = 7; i9 < i11; i11 -= 3) {
                i10 += i12;
                i10 -= (int)f1;
                i8 -= (int)Test.instanceCount;
                i13 = 1;
                while (++i13 < 1) {
                    dArr[i9] *= i11;
                    i8 += (int)f1;
                    i5 >>= i8;
                }
            }
        }
        vMeth1_check_sum += i5 + (b1 ? 1 : 0) + i7 + i8 + s + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(boolean b) {

        int i4=2, i14=155, i15=7627, i16=8, iArr1[][]=new int[N][N];
        double d=0.11446;
        float f2=-80.67F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr1, -88);
        FuzzerUtils.init(bArr, false);

        iArr1[(i4 >>> 1) % N][(i4 >>> 1) % N] += (int)(i4 + (d--));
        i4 = ((i4++) - iArr1[(i4 >>> 1) % N][(i4 >>> 1) % N]);
        vMeth1(-5);
        for (i14 = 1; i14 < 186; ++i14) {
            i15 += (i14 + f2);
            i16 = 1;
            do {
                Test.lArrFld[i16 + 1] = Test.instanceCount;
            } while (++i16 < 9);
            Test.instanceCount += Test.instanceCount;
            bArr[i14] = true;
            i15 = (int)f2;
        }
        i15 += i4;
        vMeth_check_sum += (b ? 1 : 0) + i4 + Double.doubleToLongBits(d) + i14 + i15 + Float.floatToIntBits(f2) + i16 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth() {


        vMeth(false);
        Test.iFld += Test.iFld;
        Test.iFld %= (int)(Test.iFld | 1);
        Test.sFld -= (short)7;
        Test.iFld >>= 3;
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=40, i1=23819, i2=-10, i3=-14, i17=-52827, i18=245, i19=-809, i20=12, i21=183, i22=2, i23=-10, i24=13,
            i25=-29, i26=-226, iArr[]=new int[N];
        float f=-60.614F;
        long l=4L, l1=-6L;
        boolean b2=false;

        FuzzerUtils.init(iArr, -84);

        switch (((((-i) >>> 1) % 1) * 5) + 95) {
        case 100:
            for (i1 = 350; 11 < i1; i1--) {
                i = (int)(((117L + iArr[i1 - 1]) * i) - ((i--) - -20L));
                for (f = 74; f > i1; --f) {
                    i *= (int)(116.477F - ((l++) * (i3 + i3)));
                    i <<= iMeth();
                    i2 += 3;
                    if (b2) continue;
                    i17 <<= (int)l;
                    for (i18 = 1; i18 < 1; i18++) {
                        i19 -= 10;
                        Test.iFld = i2;
                        dFld /= -5514557643055583999L;
                    }
                }
                i20 += (6 + (i1 * i1));
            }
            for (i21 = 158; i21 > 9; i21--) {
                i19 = (int)-6.6108;
                i20 &= i;
                i2 += (((i21 * Test.iFld) + i1) - f);
            }
        }
        try {
            i23 += (int)dFld;
        }
        catch (NegativeArraySizeException exc1) {
            i24 = 189;
            while (--i24 > 0) {
                dFld = i19;
                i *= 10;
                i2 ^= (int)Test.instanceCount;
                l1 = 1;
                do {
                    i17 = 3;
                    i23 = i24;
                    for (i25 = 1; i25 < 1; ++i25) {
                        i17 += -13713;
                        Test.iFld1 = Test.byFld;
                    }
                } while (++l1 < 133);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
