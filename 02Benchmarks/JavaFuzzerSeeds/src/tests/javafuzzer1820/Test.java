package tests.javafuzzer1820;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:46:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=145L;
    public static short sFld=-24395;
    public static boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, int i5, double d2) {

        double d3=-34.103752;
        int i6=4, i7=-5, i8=176, i9=-135, iArr[]=new int[N];
        byte by=-121;

        FuzzerUtils.init(iArr, 59636);

        for (d3 = 18; d3 < 289; d3++) {
            i6 <<= 227;
            iArr[(int)(d3)] &= i6;
            i7 |= i5;
            l += (long)(d3 - by);
            Test.sFld = (short)i6;
            d2 *= i7;
            i7 *= (int)Test.instanceCount;
            if (Test.bFld) continue;
        }
        i5 |= i7;
        by = (byte)82.525F;
        iArr[(i6 >>> 1) % N] -= (int)Test.instanceCount;
        for (i8 = 10; i8 < 296; i8++) {
            Test.bFld = Test.bFld;
            iArr[i8] += (int)Test.instanceCount;
        }
        long meth_res = l + i5 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(d3) + i6 + i7 + by + i8 + i9 +
            FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(double d, int i2, double d1) {

        int i3=61067, i4=-32953, i11=1, i12=-47, i13=-214, i14=-178, iArr1[]=new int[N];
        float f1=2.956F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 49548L);
        FuzzerUtils.init(iArr1, -54439);
        FuzzerUtils.init(fArr, -34.636F);

        for (i3 = 10; i3 < 235; i3++) {
            lArr[i3] |= (long)((++i4) - fMeth(Test.instanceCount, i3, d));
            for (i11 = 7; i11 > 1; i11 -= 2) {
                iArr1[i11 - 1] += 2;
                i4 -= i3;
                for (i13 = i3; i13 < 3; i13++) {
                    float f=-109.121F;
                    Test.instanceCount += (i13 * i4);
                    f -= -57;
                    i14 += i13;
                }
                i12 <<= i12;
                iArr1[i11] -= i2;
                i4 *= i14;
                d1 += Test.instanceCount;
                f1 -= 9;
            }
            fArr[i3] = 64863;
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + Double.doubleToLongBits(d1) + i3 + i4 + i11 + i12 + i13 + i14
            + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-14, i1=-3, i15=0, i16=-11, iArr2[]=new int[N];
        double d4=1.115361;
        float f2=-23.956F;

        FuzzerUtils.init(iArr2, 5);

        i = 1;
        do {
            i1 = (iMeth(d4, -46976, d4) - -14);
            Test.instanceCount -= i;
            switch (((i % 4) * 5) + 8) {
            case 25:
                for (i15 = i; i15 < 26; i15++) {
                    switch (((i >>> 1) % 2) + 117) {
                    case 117:
                        i16 <<= -28;
                        switch ((i % 1) + 119) {
                        case 119:
                            iArr2[i15] = (int)d4;
                            i1 *= (int)f2;
                            f2 += i15;
                            i16 += i15;
                            break;
                        }
                        break;
                    case 118:
                        i16 *= (int)Test.instanceCount;
                        i1 += (i15 + i);
                        iArr2 = FuzzerUtils.int1array(N, (int)52110);
                        break;
                    default:
                        i16 += (((i15 * Test.sFld) + i) - Test.instanceCount);
                    }
                }
                break;
            case 11:
                if (true) break;
            case 24:
                i1 *= i1;
                break;
            case 19:
                iArr2[i + 1] -= i;
                break;
            default:
                iArr2[i - 1] = i16;
            }
        } while ((i += 3) < 180);
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d4) + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {


        vMeth();


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
