package tests.javafuzzer946;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:51:36 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7L;
    public int iFld=184;
    public static float fFld=0.175F;
    public static int iFld1=0;
    public static volatile boolean bFld=true;
    public double dFld=0.11025;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, long l) {

        int i10=161, i11=38821, i12=56, i13=165, i14=-4, i15=-11;
        double d1=-5.125042;
        byte by=116;

        for (i10 = 2; i10 < 225; ++i10) {
            short s1=12777;
            i11 = s1;
            for (i12 = 1; 7 > i12; i12++) {
                try {
                    i9 = (30728 % i13);
                    i11 = (143 / Test.iArrFld[i12 + 1]);
                    i11 = (i11 / i11);
                } catch (ArithmeticException a_e) {}
            }
            i13 *= (int)l;
            i13 = (int)Test.instanceCount;
            Test.iArrFld[i10 - 1] += i13;
            i9 = (int)Test.instanceCount;
            i9 -= (int)d1;
            for (i14 = 1; 7 > i14; i14++) {
                by += (byte)l;
                Test.instanceCount *= Test.instanceCount;
                i11 += (int)l;
                i13 += (int)Test.instanceCount;
                d1 = Test.instanceCount;
            }
        }
        vMeth1_check_sum += i9 + l + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + by;
    }

    public static void vMeth(int i7, int i8) {

        double d2=2.45712, d3=-34.130453, dArr[]=new double[N];
        int i16=-64, i17=-212, i18=97, i19=11, i20=51, i21=-2, i22=-14;
        byte by1=40, byArr[]=new byte[N];
        short s2=401;
        long lArr[]=new long[N];
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(dArr, 63.48521);
        FuzzerUtils.init(lArr, -9216352096069831548L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte)90);

        vMeth1(i7, 45383L);
        d2 = 1;
        do {
            for (i16 = (int)(d2); i16 < 11; i16++) {
                Test.instanceCount <<= -96;
                for (i18 = 1; 1 > i18; ++i18) {
                    boolean b=false;
                    i19 = (int)-1957747902998048325L;
                    i20 *= i17;
                    dArr[i18] = Test.instanceCount;
                    switch ((((i16 >>> 1) % 4) * 5) + 86) {
                    case 105:
                        try {
                            i20 = (i18 % i19);
                            Test.iArrFld[(int)(d2)] = (i18 % -53382);
                            i7 = (i8 / i16);
                        } catch (ArithmeticException a_e) {}
                    case 99:
                        switch (i16 + 64) {
                        case 64:
                            Test.fFld += i7;
                            i17 = i8;
                            i7 += (3 + (i18 * i18));
                            Test.iArrFld[i18 + 1] -= i8;
                            break;
                        case 65:
                            lArr[i16 - 1] = Test.instanceCount;
                            break;
                        case 66:
                            Test.instanceCount += i18;
                        case 67:
                            if (b) continue;
                            break;
                        case 68:
                            i7 += Test.iFld1;
                            break;
                        case 69:
                            i19 = 23201;
                            break;
                        case 70:
                            Test.iFld1 *= (int)d2;
                            break;
                        case 71:
                            i17 >>= Test.iFld1;
                            break;
                        case 72:
                            Test.instanceCount += i18;
                            break;
                        case 73:
                        case 74:
                            Test.iArrFld[i18] += (int)Test.fFld;
                            break;
                        case 75:
                            i21 = i19;
                            break;
                        case 76:
                            bArr[i18 - 1][i18] = b;
                            break;
                        case 77:
                            bArr[(int)(d2 + 1)][(int)(d2 - 1)] = true;
                            break;
                        case 78:
                            i17 %= (int)(Test.instanceCount | 1);
                            break;
                        case 79:
                            Test.instanceCount = (long)Test.fFld;
                            break;
                        case 80:
                            Test.fFld = 3200276474L;
                            break;
                        case 81:
                            Test.instanceCount += (((i18 * i21) + Test.instanceCount) - Test.instanceCount);
                            break;
                        case 82:
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)8527);
                            break;
                        case 83:
                        case 84:
                            i17 += (i18 | Test.instanceCount);
                        case 85:
                            if (b) break;
                        case 86:
                            Test.iFld1 += (int)Test.fFld;
                            break;
                        case 87:
                            Test.iArrFld[(i16 >>> 1) % N] -= (int)Test.instanceCount;
                            break;
                        case 88:
                            Test.instanceCount = 5;
                            break;
                        case 89:
                            Test.fFld += i18;
                        case 90:
                            Test.fFld -= Test.instanceCount;
                            break;
                        case 91:
                            by1 >>= (byte)i7;
                        case 92:
                            Test.iArrFld[i16] = Test.iFld1;
                            break;
                        case 93:
                            i20 -= i18;
                            break;
                        case 94:
                            try {
                                Test.iFld1 = (-236 % Test.iFld1);
                                i7 = (Test.iArrFld[i18] / Test.iArrFld[i18 - 1]);
                                Test.iArrFld[i18] = (i7 / -231);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 95:
                            b = b;
                            break;
                        case 96:
                            b = b;
                            break;
                        case 97:
                            s2 = (short)i8;
                            break;
                        case 98:
                            Test.instanceCount -= (long)d2;
                            break;
                        case 99:
                            Test.iArrFld[i16] -= i19;
                            break;
                        case 100:
                            i17 >>= 22390;
                            break;
                        case 101:
                            i19 = i18;
                            break;
                        case 102:
                            i7 ^= (int)-86L;
                            break;
                        case 103:
                            lArr[i16 + 1] = Test.instanceCount;
                            break;
                        case 104:
                            s2 -= (short)Test.instanceCount;
                            break;
                        case 105:
                            s2 <<= (short)Test.instanceCount;
                            break;
                        case 106:
                            i8 *= (int)d2;
                        case 107:
                            Test.instanceCount += i19;
                        case 108:
                            i7 += (i18 | i18);
                        case 109:
                            d3 = Test.instanceCount;
                            break;
                        case 110:
                            Test.instanceCount += i18;
                            break;
                        case 111:
                            Test.instanceCount += (i18 - i19);
                        case 112:
                            b = b;
                            break;
                        case 113:
                            s2 += (short)(((i18 * s2) + i20) - i7);
                        case 114:
                            i20 -= (int)d2;
                            break;
                        case 115:
                            s2 += (short)(i18 + Test.iFld1);
                            break;
                        case 116:
                        case 117:
                            i8 -= i21;
                        case 118:
                            i17 += (int)1.240F;
                            break;
                        case 119:
                            i17 -= i18;
                            break;
                        case 120:
                        case 121:
                            by1 += (byte)Test.instanceCount;
                            break;
                        case 122:
                            i7 += (((i18 * i7) + Test.instanceCount) - Test.fFld);
                        case 123:
                            if (b) continue;
                        case 124:
                            Test.fFld = 48017;
                            break;
                        case 125:
                        case 126:
                            i20 += (int)Test.fFld;
                            break;
                        case 127:
                            i20 = (int)Test.instanceCount;
                            break;
                        case 128:
                            s2 += (short)(i18 ^ i21);
                            break;
                        case 129:
                            i21 ^= (int)Test.instanceCount;
                            break;
                        case 130:
                            Test.instanceCount = i18;
                        case 131:
                            i8 += (i18 - i19);
                        case 132:
                            Test.iFld1 += i18;
                            break;
                        case 133:
                        default:
                            byArr = byArr;
                        }
                        break;
                    case 89:
                        i22 += (i18 | i20);
                    case 87:
                        Test.iArrFld[(int)(d2)] = i21;
                        break;
                    default:
                        Test.instanceCount |= i21;
                    }
                }
            }
        } while (++d2 < 148);
        vMeth_check_sum += i7 + i8 + Double.doubleToLongBits(d2) + i16 + i17 + i18 + i19 + i20 + i21 + by1 + s2 +
            Double.doubleToLongBits(d3) + i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(int i1, int i2, int i3) {

        float f=-31.910F;
        double d=-9.122092;
        int i4=139, i5=61094, i6=-6168, i23=-12;

        f -= (float)(d + i1);
        f -= (Test.instanceCount -= 2L);
        i4 = 1;
        do {
            for (i5 = i4; 6 > i5; ++i5) {
                vMeth(i4, i5);
                i23 = 1;
                do {
                    i6 = -106;
                } while (++i23 < 1);
                i2 >>= i5;
                Test.iArrFld[i4 + 1] = (int)Test.instanceCount;
                Test.iArrFld[i4] <<= i3;
                Test.instanceCount -= Test.instanceCount;
                f += (((i5 * i3) + i4) - i3);
            }
            Test.instanceCount = 12;
            i2 += i2;
            Test.bFld = true;
        } while (++i4 < 296);
        long meth_res = i1 + i2 + i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i4 + i5 + i6 + i23;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=-2815, sArr[]=new short[N];
        int i=-12, i24=6, i25=62368, iArr[]=new int[N], iArr1[]=new int[N], iArr2[][]=new int[N][N];
        long l1=-4581192861211043021L, lArr1[]=new long[N];
        byte by2=-109;

        FuzzerUtils.init(iArr, -581);
        FuzzerUtils.init(iArr1, 2);
        FuzzerUtils.init(iArr2, -12);
        FuzzerUtils.init(lArr1, 2931955496L);
        FuzzerUtils.init(sArr, (short)-22035);

        iArr = (iArr = (iArr = (iArr = iArr1)));
        iArr1[(-136 >>> 1) % N] |= (s / ((++iFld) | 1));
        i = 1;
        while (++i < 165) {
            iFld += iMeth(iFld, 120, i);
            i24 = 1;
            while (++i24 < 152) {
                s <<= (short)-2359125577L;
                for (l1 = 1; l1 > 1; --l1) {
                    switch ((i24 % 3) + 108) {
                    case 108:
                        iArr1[(int)(l1 - 1)] *= 232;
                        i25 >>= i;
                        Test.instanceCount += (((l1 * Test.iFld1) + i) - Test.instanceCount);
                        Test.instanceCount = i;
                        break;
                    case 109:
                        if (false) break;
                        switch (((Test.iFld1 >>> 1) % 2) + 74) {
                        case 74:
                            Test.instanceCount += l1;
                            switch ((((Test.iFld1 >>> 1) % 7) * 5) + 95) {
                            case 105:
                                iArr2 = iArr2;
                                Test.iFld1 >>= (int)Test.instanceCount;
                                i25 = iFld;
                                lArr1[i] = (long)-1.329F;
                                break;
                            case 128:
                                switch ((i24 % 6) + 105) {
                                case 105:
                                    i25 |= s;
                                    dFld = s;
                                    Test.iFld1 += (int)Test.fFld;
                                    break;
                                case 106:
                                    lArr1[i24] = by2;
                                    i25 = by2;
                                    break;
                                case 107:
                                    lArr1[i24 + 1] = l1;
                                    Test.instanceCount = 3173322944L;
                                    break;
                                case 108:
                                    try {
                                        Test.iFld1 = (126 / iFld);
                                        i25 = (iArr1[(int)(l1 + 1)] / 110);
                                        iArr2[i24][(int)(l1)] = (iFld / Test.iArrFld[(int)(l1 + 1)]);
                                    } catch (ArithmeticException a_e) {}
                                    break;
                                case 109:
                                case 110:
                                    dFld -= Test.instanceCount;
                                    break;
                                }
                                break;
                            case 120:
                                Test.fFld -= l1;
                                break;
                            case 111:
                                i25 = (int)Test.fFld;
                                break;
                            case 119:
                                sArr = sArr;
                                break;
                            case 102:
                                by2 -= (byte)Test.instanceCount;
                                break;
                            case 127:
                            default:
                                Test.iArrFld[(int)(l1 - 1)] = iFld;
                            }
                        case 75:
                            Test.instanceCount += (l1 - by2);
                            break;
                        default:
                            lArrFld[i + 1] *= (long)dFld;
                        }
                        break;
                    case 110:
                        Test.bFld = Test.bFld;
                        break;
                    default:
                        iFld += (int)Test.instanceCount;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
