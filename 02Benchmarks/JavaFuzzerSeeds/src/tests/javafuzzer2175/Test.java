package tests.javafuzzer2175;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:44:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1938976142L;
    public static double dFld=-16.128674;
    public static float fFld=59.400F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.lArrFld, -4111261443L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, int i10) {

        double d1=104.49702;
        int i11=195, i12=7147, i13=-45156, i14=-28689, i15=12783, i16=-40520;
        float f=-2.236F;
        short s=-20234;
        byte byArr[]=new byte[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-47);
        FuzzerUtils.init(lArr1, -113L);

        d1 -= i9;
        for (i11 = 241; i11 > 14; i11 -= 3) {
            f -= i11;
            f += (i11 * i11);
            for (i13 = 1; i13 < 21; ++i13) {
                Test.instanceCount = i11;
                Test.iArrFld = Test.iArrFld;
                for (i15 = i11; i15 < 2; i15 += 3) {
                    boolean b=false;
                    byArr[i15 - 1] *= (byte)2L;
                    if (b) break;
                    s -= (short)i10;
                    lArr1[i11] >>= -150;
                    lArr1[i11 + 1] -= Test.instanceCount;
                }
                f += i13;
                d1 = i15;
            }
        }
        vMeth1_check_sum += i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + Float.floatToIntBits(f) + i13 + i14 +
            i15 + i16 + s + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i6, long l) {

        int i7=28, i8=-171, i17=36512, i18=131;
        boolean b1=false;

        for (i7 = 12; i7 < 372; i7 += 2) {
            vMeth1(i6, i6);
            Test.dFld = l;
            b1 = false;
            Test.lArrFld[i7 - 1] = i8;
        }
        for (i17 = 166; 8 < i17; --i17) {
            i18 += (i17 * i17);
            i6 += (((i17 * i6) + i7) - i6);
            i18 -= i8;
        }
        vMeth_check_sum += i6 + l + i7 + i8 + (b1 ? 1 : 0) + i17 + i18;
    }

    public static int iMeth(int i1, int i2) {

        int i4=7, i5=-54, i19=5, i20=4, i21=41922, i22=34838, i23=-2;
        long l1=2821376332L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 33680L);

        for (int i3 : Test.iArrFld) {
            Test.iArrFld[(-3 >>> 1) % N] += (int)(lArr[(i2 >>> 1) % N] + -1.195F);
        }
        for (i4 = 12; i4 < 212; i4++) {
            i5 -= ((--i2) * (--i5));
            vMeth(i5, Test.instanceCount);
            i19 = 1;
            while ((i19 += 3) < 8) {
                l1 += (i19 ^ i4);
                i2 += i19;
            }
            for (i20 = 1; i20 < 8; ++i20) {
                for (i22 = i4; 2 > i22; ++i22) {
                    i2 -= (int)Test.dFld;
                }
                i1 += (((i20 * Test.fFld) + Test.fFld) - Test.instanceCount);
                i21 = i19;
                l1 -= i4;
                i1 -= 72;
            }
        }
        long meth_res = i1 + i2 + i4 + i5 + i19 + l1 + i20 + i21 + i22 + i23 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=45508, i24=8, i25=-34, iArr[]=new int[N];
        double d=-14.43876;
        byte by=-100;

        FuzzerUtils.init(iArr, 63827);

        iArr[(i >>> 1) % N] = (int)(d + ((++i) * iArr[(i >>> 1) % N]));
        Test.instanceCount += ((iMeth(i, 1) / (i | 1)) + -176L);
        for (i24 = 9; 226 > i24; i24++) {
            by *= (byte)8495224488719258518L;
            Test.instanceCount <<= 52229;
        }
        i >>= i;
        Test.lArrFld = Test.lArrFld;
        Test.iArrFld[(i24 >>> 1) % N] -= 27571;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
