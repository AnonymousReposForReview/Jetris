package tests.javafuzzer2179;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:46:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=96L;
    public static int iFld=-2;
    public static float fFld=-55.3F;
    public static volatile short sFld=1374;
    public static double dArrFld[]=new double[N];
    public static volatile short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -1.40357);
        FuzzerUtils.init(Test.sArrFld, (short)-28030);
        FuzzerUtils.init(Test.iArrFld, -37773);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        int i7=-5718, i8=-14, i9=31385, i10=0, i11=76;
        double d1=2.2195;

        i6 = (int)Test.instanceCount;
        for (i7 = 13; i7 < 220; ++i7) {
            i8 -= i6;
            i9 = 1;
            while ((i9 += 2) < 8) {
                d1 += Test.instanceCount;
                for (i10 = 1; 2 > i10; i10++) {
                    i6 = (int)Test.instanceCount;
                    Test.instanceCount -= (long)-103.646F;
                    Test.iFld = i8;
                    i11 += (i10 | i10);
                    Test.fFld += i10;
                }
                Test.instanceCount = Test.instanceCount;
            }
            i6 >>>= i6;
            d1 = i7;
            i11 += (((i7 * i6) + Test.fFld) - i9);
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11;
    }

    public static void vMeth1() {

        int i=-14, i1=-4, i2=-36071, i3=-192, i4=11, i5=-10, i12=-14;
        boolean b=false, b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.748F);

        Test.instanceCount <<= (Test.iFld |= (++Test.iFld));
        for (i = 10; i < 370; i++) {
            b = (i1 <= 32750);
            for (i2 = 1; 5 > i2; i2++) {
                for (i4 = 1; i4 < 2; i4++) {
                    Test.instanceCount *= (long)fArr[i4 + 1];
                    Test.fFld += (((i4 * i2) + Test.instanceCount) - i1);
                    vMeth2(i4);
                    i12 = i12;
                    Test.iFld >>= i12;
                    Test.instanceCount += (i4 * i4);
                    switch (((i >>> 1) % 1) + 91) {
                    case 91:
                        fArr[i2 + 1] -= 4;
                        Test.iFld += (int)(-9L + (i4 * i4));
                        if (b1) break;
                    }
                }
            }
        }
        vMeth1_check_sum += i + i1 + (b ? 1 : 0) + i2 + i3 + i4 + i5 + i12 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        double d=-18.55049;
        long l=81L, lArr[]=new long[N];
        int i13=-154, i14=-237, i15=0, iArr[]=new int[N];
        byte by=-121;
        boolean b2=true;
        short s=-23455, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-22844);
        FuzzerUtils.init(lArr, 4100902381174382160L);
        FuzzerUtils.init(iArr, -20721);

        Test.iFld *= sArr[(Test.iFld >>> 1) % N];
        Test.instanceCount <<= (long)((++Test.iFld) * (d += Float.intBitsToFloat(Test.iFld)));
        Test.iFld *= (Test.iFld++);
        vMeth1();
        for (l = 6; l < 310; l++) {
            if (Test.iFld != 0) {
                vMeth_check_sum += Double.doubleToLongBits(d) + l + i13 + by + i14 + i15 + (b2 ? 1 : 0) + s +
                    FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                return;
            }
            lArr = lArr;
            iArr[(int)(l - 1)] -= i13;
            Test.iFld *= by;
        }
        for (i14 = 384; 5 < i14; i14 -= 2) {
            lArr[i14 + 1] = Test.iFld;
            Test.iFld &= 50630;
            if (b2) break;
            i15 -= i15;
            s = (short)d;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l + i13 + by + i14 + i15 + (b2 ? 1 : 0) + s +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d2=2.82169, d3=2.35286;
        int i16=-4, i17=23225, i18=53066, i19=-4904, i20=234, i21=-2, i22=11, i23=219, i24=21;
        boolean b3=true;
        byte by1=24;

        vMeth();
        Test.iFld -= (int)d2;
        Test.iFld = (int)Test.instanceCount;
        d3 = 1;
        do {
            for (i16 = 4; i16 < 75; ++i16) {
                i17 >>>= i17;
            }
            i17 = Test.iFld;
            Test.iFld -= i17;
            Test.iFld += (int)(d3 - i17);
        } while (++d3 < 336);
        d2 = Test.iFld;
        for (i18 = 180; i18 > 3; i18 -= 2) {
            if (b3) {
                Test.dArrFld[i18 + 1] += i19;
                for (i20 = 11; 285 > i20; ++i20) {
                    Test.iFld += (i20 + Test.iFld);
                    Test.sArrFld[i18] >>>= (short)-201;
                    i22 = 1;
                    while (++i22 < 2) {
                        Test.fFld -= i18;
                        if (b3) break;
                        i17 += i22;
                        Test.iArrFld[i20] -= (int)Test.fFld;
                    }
                    i21 *= i19;
                    by1 = (byte)i22;
                    Test.fFld -= Test.fFld;
                    for (i23 = 1; i23 < 2; ++i23) {
                        Test.instanceCount *= -52539;
                        Test.instanceCount *= i20;
                        by1 += (byte)(6 + (i23 * i23));
                        Test.sFld &= (short)i24;
                        i19 += (i23 * i23);
                    }
                }
            } else if (b3) {
                try {
                    i24 = (Test.iArrFld[i18 - 1] % 149835940);
                    Test.iFld = (-302632409 % Test.iArrFld[i18]);
                    Test.iArrFld[i18 + 1] = (-26517879 % Test.iArrFld[i18 - 1]);
                } catch (ArithmeticException a_e) {}
            } else if (b3) {
                b3 = false;
            } else {
                Test.instanceCount += (i18 - i23);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
