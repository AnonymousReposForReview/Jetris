package tests.javafuzzer2349;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:04:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-33186L;
    public volatile float fFld=0.831F;
    public double dFld=0.61889;
    public static volatile byte byFld=59;
    public volatile int iFld=53;
    public static boolean bFld=true;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 6314875095561629833L);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public int iMeth1(int i6, int i7, long l1) {

        int i8=13522, i9=6077, i10=-31, i11=5, i12=-8, i13=38420;

        i7 += i6;
        Test.instanceCount -= i7;
        for (i8 = 7; i8 < 148; i8 += 2) {
            for (i10 = 1; i10 < 22; i10++) {
                for (i12 = i8; i12 < 2; ++i12) {
                    i6 <<= i9;
                    dFld -= 595491256L;
                    dFld = i6;
                    Test.byFld *= (byte)l1;
                    fFld -= i8;
                    i11 = -11;
                    i11 = i7;
                }
                Test.instanceCount -= i10;
                l1 <<= i10;
                i7 = i9;
            }
        }
        long meth_res = i6 + i7 + l1 + i8 + i9 + i10 + i11 + i12 + i13;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public long lMeth(short s1) {

        double d1=83.49517;
        int i5=-29359, i14=20513, i15=10, i16=26537, i17=-7161, i18=-6, i19=-98;
        boolean b=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -108.182F);

        d1 -= (-iArrFld[(i5 >>> 1) % N]);
        Test.lArrFld[(i5 >>> 1) % N] -= (((--Test.instanceCount) * (211L * iMeth1(iFld, i5, Test.instanceCount))) +
            Test.instanceCount);
        iFld = i5;
        for (i14 = 2; i14 < 342; i14++) {
            i5 ^= 6597;
            Test.instanceCount += i14;
            for (i16 = i14; i16 < 5; i16++) {
                fArr[i14] = (float)118.8392;
                switch (((i17 >>> 1) % 1) + 52) {
                case 52:
                    if (b) break;
                    break;
                }
                dFld += fFld;
                i15 = i17;
            }
            for (i18 = 1; i18 < 5; ++i18) {
                iFld += i14;
            }
            i15 += (int)(68.184F + (i14 * i14));
        }
        long meth_res = s1 + Double.doubleToLongBits(d1) + i5 + i14 + i15 + i16 + i17 + (b ? 1 : 0) + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(long l) {

        int i2=3, i3=13, i4=34, i20=-9, i21=3, i22=-224, i23=0;
        double d=-92.51716;
        short s2=-13060;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)82);

        i2 = 1;
        do {
            for (i3 = 1; i3 < 11; i3++) {
                i4 = (iArrFld[i2 + 1]--);
                i4 += (i3 * i3);
                d = ((long)((--byArr[i2 - 1]) / (((long)(++d)) | 1)) | (++i4));
                i4 = (int)fFld;
                i4 *= (int)lMeth(s2);
                i4 += (((i3 * fFld) + iFld) - Test.instanceCount);
            }
            iFld = i4;
            switch (((i2 % 1) * 5) + 62) {
            case 64:
                for (i20 = 1; 11 > i20; i20++) {
                    for (i22 = 1; i22 < 2; i22++) {
                        i23 += (i22 + i21);
                    }
                    iFld += (i20 | s2);
                    iArrFld = iArrFld;
                }
            }
        } while (++i2 < 146);
        long meth_res = l + i2 + i3 + i4 + Double.doubleToLongBits(d) + s2 + i20 + i21 + i22 + i23 +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-49981, i1=148, i24=-83, i25=227, i26=58356, i27=-58, i28=-8, i29=7, i30=63;
        short s=-24563;
        float f=119.116F;
        long l2=4733995904595379237L;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, -102.37496);

        for (i = 18; i < 313; ++i) {
            Test.instanceCount >>= ((-s) * (i1 %= (int)(iMeth(Test.instanceCount) | 1)));
            fFld += iFld;
            for (i24 = 2; i24 < 85; ++i24) {
                iArrFld[i - 1] = i25;
                dArr[i][i24] *= i;
            }
            iFld -= (int)fFld;
        }
        iArrFld[(i24 >>> 1) % N] = i;
        for (i26 = 6; i26 < 127; ++i26) {
            boolean b1=true;
            i1 += iFld;
            if (b1) continue;
        }
        iFld += (int)fFld;
        iArrFld[(i25 >>> 1) % N] = Test.byFld;
        i27 += i26;
        s = (short)i26;
        f = 1;
        while (++f < 146) {
            for (i28 = 9; i28 < 172; ++i28) {
                i29 = 5;
                i1 ^= (int)9L;
                i27 *= (int)7L;
                i29 += i28;
                i1 ^= i1;
            }
            sArrFld[(int)(f + 1)] -= (short)i;
            i1 += (int)(f * f);
            iArrFld = iArrFld;
            iArrFld[(int)(f)] = i26;
            iFld = (int)Test.instanceCount;
        }
        for (l2 = 3; l2 < 203; ++l2) {
            i29 += (int)(((l2 * i24) + i26) - Test.byFld);
            if (Test.bFld) continue;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
