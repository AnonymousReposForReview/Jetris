package tests.javafuzzer2856;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:33:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static short sFld=28270;
    public static float fFld=-2.561F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(boolean b, int i2, int i3) {

        int i4=226, i5=-63237, i6=168, i7=7, i8=87, i9=51, iArr[]=new int[N];
        byte by=83;
        double d=0.32859, dArr[]=new double[N];
        float fArr[]=new float[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr, -57.48702);
        FuzzerUtils.init(iArr, -64);
        FuzzerUtils.init(fArr, -2.733F);
        FuzzerUtils.init(lArr, 1759823894L);

        i2 = (int)Test.instanceCount;
        for (i4 = 14; i4 < 275; ++i4) {
            for (i6 = 1; i6 < 6; i6++) {
                switch (((i4 % 7) * 5) + 94) {
                case 119:
                    dArr[i4 + 1] *= i6;
                    if (b) continue;
                    for (i8 = i6; i8 < 2; i8++) {
                        Test.sFld += (short)(((i8 * i7) + by) - Test.instanceCount);
                        by += (byte)(i8 * Test.sFld);
                        d -= by;
                        try {
                            i3 = (-17019 / i2);
                            iArr[i6] = (174 % iArr[i6]);
                            iArr[i4 + 1] = (i2 / i7);
                        } catch (ArithmeticException a_e) {}
                        iArr[i4] = Test.sFld;
                        d *= Test.instanceCount;
                        Test.instanceCount -= i2;
                        fArr[i8 + 1] *= Test.instanceCount;
                    }
                    break;
                case 122:
                    lArr[i6 + 1] = lArr[i4 - 1];
                    break;
                case 116:
                    if (i6 != 0) {
                        vMeth2_check_sum += (b ? 1 : 0) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + by +
                            Double.doubleToLongBits(d) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                case 109:
                    Test.fFld -= i8;
                    break;
                case 98:
                    iArr[i4] += (int)Test.fFld;
                    break;
                case 108:
                case 124:
                    i2 = (int)643532744L;
                default:
                    i9 += (i6 + i7);
                }
            }
        }
        vMeth2_check_sum += (b ? 1 : 0) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + by + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        boolean b1=false;
        int i10=38289, i11=8, i12=0, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -171);

        vMeth2(b1, i10, i10);
        b1 = b1;
        i10 = (int)Test.instanceCount;
        for (i11 = 18; 382 > i11; ++i11) {
            iArr1[i11 + 1] >>= (int)Test.instanceCount;
            i12 = i11;
        }
        i10 = i11;
        i12 -= (int)Test.fFld;
        vMeth1_check_sum += (b1 ? 1 : 0) + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, int i, int i1) {

        double d1=-118.93567;

        vMeth1();
        i1 *= (int)d1;
        Test.instanceCount += 43726;
        vMeth_check_sum += l + i + i1 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i13=218, i14=13, i15=49090, i16=144, i17=-103, i18=181, i19=44017, i20=7114, i21=-29111, i22=-122,
            iArr2[][]=new int[N][N];
        float f=-1.215F, fArr1[][]=new float[N][N];
        byte by1=-116;
        long l1=3509L;
        boolean b3=true;

        FuzzerUtils.init(iArr2, 32591);
        FuzzerUtils.init(fArr1, -1.257F);

        vMeth(Test.instanceCount, i13, 2768);
        iArr2[(i13 >>> 1) % N][(i13 >>> 1) % N] = i13;
        f = 1;
        while (++f < 330) {
            Test.fFld = 20087;
        }
        Test.sFld &= (short)i13;
        for (i14 = 3; i14 < 390; i14++) {
            by1 |= (byte)-233;
        }
        i13 += i13;
        for (l1 = 11; l1 < 186; ++l1) {
            for (i17 = 7; i17 < 143; ++i17) {
                i13 += 111;
            }
            Test.instanceCount = Test.instanceCount;
            for (i19 = 7; 143 > i19; ++i19) {
                boolean b2=false;
                b2 = b2;
                Test.instanceCount >>= i17;
                Test.fFld += (i19 * i20);
                b3 = false;
                try {
                    iArr2[i19 - 1][(int)(l1 - 1)] = (iArr2[i19][i19 + 1] / i18);
                    iArr2[(int)(l1)][i19] = (i18 / -159);
                    i16 = (i18 / 223);
                } catch (ArithmeticException a_e) {}
                fArr1[i19 - 1][i19 + 1] -= i18;
                i13 -= i15;
                for (i21 = 1; 2 > i21; i21++) {
                    i13 += i15;
                    i15 = (int)l1;
                    i15 += i21;
                    i16 >>>= -237;
                    iArr2[(-26 >>> 1) % N] = FuzzerUtils.int1array(N, (int)6236);
                }
                iArr2[i19 - 1][i19] >>= Test.sFld;
                Test.instanceCount = i21;
            }
            Test.fFld = i18;
            i18 = (int)f;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
