package tests.javafuzzer448;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:02:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-328949078L;
    public float fFld=0.464F;
    public boolean bFld=false;
    public volatile byte byFld=118;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 181);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i2) {

        int i3=-13, i4=-7, i5=6, i6=32, i7=-240, i8=7;
        double d=-74.62153;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8449762472181002638L);

        i3 += i2;
        Test.iArrFld[(i3 >>> 1) % N] = (int)Test.instanceCount;
        lArr[(i2 >>> 1) % N] = i2;
        d = i3;
        i3 %= (int)(i3 | 1);
        i4 = 1;
        while (++i4 < 292) {
            for (i5 = i4; 6 > i5; i5++) {
                float f1=2.870F;
                for (i7 = 1; 1 > i7; i7++) {
                    Test.instanceCount += Test.instanceCount;
                    i6 += (i7 - Test.instanceCount);
                    i8 *= (int)Test.instanceCount;
                    d = Test.instanceCount;
                }
                if (b) continue;
                f1 += i5;
            }
            Test.instanceCount |= 1307624437L;
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1) {

        float f=-123.919F;

        Test.iArrFld[(-20175 >>> 1) % N] -= (++Test.iArrFld[(i1 >>> 1) % N]);
        i1 = (int)(-((i1 * i1) + (i1 - f)));
        i1 = iMeth(i1);
        vMeth1_check_sum += i1 + Float.floatToIntBits(f);
    }

    public void vMeth() {

        int i=18634, i9=112, i10=-8, i11=7, i12=-36930;
        double d1=2.93888;

        i -= i;
        vMeth1(16557);
        for (i9 = 12; i9 < 236; i9++) {
            i10 += (i9 - i);
            i11 = 1;
            while (++i11 < 7) {
                i10 >>>= i11;
                fFld += i10;
                Test.iArrFld[i11] = i;
                if (true) continue;
                i += (int)d1;
                i12 = 1;
                while ((i12 += 2) < 1) {
                    switch ((i12 % 4) + 11) {
                    case 11:
                        i += (((i12 * i9) + Test.instanceCount) - i);
                        i10 -= (int)-2271L;
                        i = i10;
                        break;
                    case 12:
                        i <<= (int)Test.instanceCount;
                        break;
                    case 13:
                    case 14:
                        fFld = Test.instanceCount;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i + i9 + i10 + i11 + Double.doubleToLongBits(d1) + i12;
    }

    public void mainTest(String[] strArr1) {

        int i13=52435, i14=10, i15=-35115, i16=41, i17=-13, i18=-4;
        float f2=53.864F;
        double d2=-57.126900;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -24093L);

        vMeth();
        if (bFld) {
            for (i13 = 143; i13 > 8; i13 -= 3) {
                if (bFld) break;
                byFld = (byte)Test.instanceCount;
                for (i15 = 1; i15 < i13; ++i15) {
                    i14 -= (int)Test.instanceCount;
                    i16 >>>= i13;
                    Test.instanceCount >>>= i13;
                    Test.instanceCount -= Test.instanceCount;
                    f2 = 2;
                    while ((f2 -= 3) > 0) {
                        d2 -= 58617;
                        i14 >>= i14;
                        i14 <<= i16;
                        i14 -= -18;
                        d2 = i15;
                        byFld -= (byte)2;
                        if (bFld) continue;
                    }
                    i16 += i14;
                    i16 = (int)Test.instanceCount;
                    i14 += (((i15 * i15) + Test.instanceCount) - i16);
                    for (i17 = 1; 2 > i17; i17++) {
                        i18 -= i15;
                        i16 += (((i17 * i16) + i14) - i15);
                        try {
                            Test.iArrFld[i15 - 1] = (i17 % -1528041417);
                            Test.iArrFld[i13 - 1] = (i16 / i16);
                            i18 = (i13 / Test.iArrFld[i17]);
                        } catch (ArithmeticException a_e) {}
                        i16 = i18;
                        i18 += (((i17 * Test.instanceCount) + i15) - i13);
                        i16 += (int)12L;
                        lArr1[i15][i15] <<= i16;
                        Test.iArrFld[i15] -= i15;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
