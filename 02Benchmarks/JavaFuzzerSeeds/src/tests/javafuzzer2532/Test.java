package tests.javafuzzer2532;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:19:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-252L;
    public static int iFld=-221;
    public static volatile boolean bFld=false;
    public static boolean bArrFld[]=new boolean[N];
    public static volatile double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.dArrFld, 73.98949);
        FuzzerUtils.init(Test.iArrFld, -64376);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(double d1, boolean b, long l) {

        int i5=4794, i6=207, i8=-80, i9=-47, iArr[][]=new int[N][N], iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -55151);
        FuzzerUtils.init(iArr1, 83);
        FuzzerUtils.init(fArr, -2.829F);

        iArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] += Test.iFld;
        Test.iFld = Test.iFld;
        Test.iFld = Test.iFld;
        for (i5 = 388; 5 < i5; i5 -= 2) {
            Test.iFld -= i6;
            Test.instanceCount = -8067742931831215972L;
            l &= -2;
        }
        Test.instanceCount = i6;
        i8 = 1;
        while (++i8 < 358) {
            fArr[i8] += i9;
            i9 += i8;
            if (b) {
                i6 *= (int)Test.instanceCount;
                i6 = i9;
                if (true) continue;
            } else if (b) {
                Test.iFld <<= i8;
            } else if (b) {
                i9 <<= i6;
            } else {
                try {
                    i6 = (i9 / -52);
                    i6 = (-27003 % Test.iFld);
                    i9 = (i6 % iArr1[i8 + 1]);
                } catch (ArithmeticException a_e) {}
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + (b ? 1 : 0) + l + i5 + i6 + i8 + i9 + FuzzerUtils.checkSum(iArr)
            + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i4, double d) {

        boolean b1=true;
        int i10=4, i11=11, i12=121, i13=8014, i14=7, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9L);
        FuzzerUtils.init(iArr2, 182);

        i4 -= (int)fMeth(d, b1, Test.instanceCount);
        i4 = 44196;
        switch ((((i4 >>> 1) % 2) * 5) + 81) {
        case 86:
            for (i10 = 6; i10 < 337; ++i10) {
                i4 = i4;
            }
            break;
        case 82:
            b1 = b1;
            for (long l1 : lArr) {
                if (b1) continue;
                d = 31207;
                for (i12 = 1; i12 < 4; i12++) {
                    Test.bArrFld[i12 - 1] = b1;
                    b1 = false;
                    i14 = 1;
                    do {
                        iArr2[i12 - 1] += i14;
                    } while (++i14 < 2);
                    lArr[i12] <<= i10;
                }
            }
        default:
            Test.dArrFld = Test.dArrFld;
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(float f, int i1) {

        float f1=0.214F;
        int i2=240, i3=-5, i15=27, i16=-158;
        double d2=47.62741;

        i1 -= (int)Float.intBitsToFloat(-(i1 * i1));
        f1 = 1;
        while ((f1 += 2) < 338) {
            f = (--Test.instanceCount);
            for (i2 = (int)(f1); 9 > i2; i2++) {
                vMeth(-217, d2);
                Test.iArrFld[i2 + 1] = i1;
                for (i15 = 1; i15 < 1; i15++) {
                    f += -145;
                    i1 += (((i15 * Test.instanceCount) + Test.instanceCount) - i1);
                    Test.iFld = i16;
                    if (Test.bFld) break;
                    Test.iArrFld = Test.iArrFld;
                    i3 += (int)-5L;
                    i3 >>= i15;
                    Test.instanceCount += (i15 * i15);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + Float.floatToIntBits(f1) + i2 + i3 + Double.doubleToLongBits(d2)
            + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=637, i17=8, i18=14, i19=51781, i20=40489, i21=120, i22=9, i23=16454, i24=-102;
        float f2=0.57F;
        double d3=1.19451;
        byte by=-43;
        long l2=-8106648771983586120L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 62826L);

        i >>= iMeth(f2, i);
        Test.iFld = i;
        Test.iArrFld[(Test.iFld >>> 1) % N] *= (int)-21.87F;
        Test.bArrFld[(Test.iFld >>> 1) % N] = Test.bFld;
        for (i17 = 2; i17 < 168; ++i17) {
            f2 -= i17;
            i += (i17 ^ i);
            Test.iFld -= i;
            Test.instanceCount -= Test.instanceCount;
            for (d3 = i17; d3 < 151; d3++) {
                i += (int)(-4L + (d3 * d3));
                i += (int)d3;
            }
            for (i20 = 8; 151 > i20; ++i20) {
                i22 = 1;
                do {
                    Test.instanceCount = (long)103.980F;
                    f2 = f2;
                    by += (byte)-178;
                    lArr1[i20 + 1] = i23;
                    by >>= (byte)Test.instanceCount;
                    f2 += by;
                    i >>= (int)-1966859963L;
                } while (++i22 < 2);
                for (l2 = 1; 2 > l2; l2 += 2) {
                    if (Test.bFld) continue;
                    i = (int)-14293L;
                }
                i18 = i23;
            }
            i18 += (((i17 * i22) + Test.iFld) - i20);
            if (Test.bFld) {
                f2 *= Test.instanceCount;
                i >>= i20;
                Test.iArrFld[i17] = -9692;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
