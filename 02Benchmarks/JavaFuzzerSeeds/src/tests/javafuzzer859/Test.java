package tests.javafuzzer859;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:55:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static double dFld=-81.84810;
    public static volatile long lFld=-1453401308L;
    public static short sArrFld[]=new short[N];
    public int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)17443);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=44772, i9=-57463, i10=2, i11=21422, iArr1[]=new int[N];
        float f1=21.274F, f2=-57.862F;
        short s1=32566;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -1);
        FuzzerUtils.init(lArr, 22416L);

        iArr1[(i6 >>> 1) % N] >>= i6;
        for (int i7 : iArr1) {
            f1 -= i6;
            i7 |= i6;
            i6 = (int)Test.instanceCount;
            f1 += 24878;
            iArr1[(2 >>> 1) % N] = i6;
        }
        s1 >>= (short)-114;
        for (f2 = 341; 3 < f2; --f2) {
            i6 <<= i6;
            for (i10 = (int)(f2); i10 < 5; ++i10) {
                iArr1[(int)(f2)] = i10;
                Test.instanceCount += (((i10 * i9) + s1) - Test.instanceCount);
                Test.instanceCount += (i10 * i10);
                lArr[i10 - 1] *= i9;
            }
        }
        vMeth1_check_sum += i6 + Float.floatToIntBits(f1) + s1 + Float.floatToIntBits(f2) + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3) {

        int i4=6, i5=-9, i12=-1001, i13=66, i14=149, i15=1, iArr[]=new int[N];
        short s=32300;
        byte by=13;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -10728);
        FuzzerUtils.init(lArr1, 2544931764L);

        for (i4 = 20; i4 < 344; i4++) {
            iArr[i4 - 1] %= (int)(Math.max(-(s - i4), (int)((i3 + s) - (Test.instanceCount + by))) | 1);
            i5 += (i4 * i5);
            vMeth1();
            i12 = 1;
            while (++i12 < 5) {
                i5 *= i12;
                i5 <<= by;
                switch (((i4 % 2) * 5) + 110) {
                case 115:
                    lArr1[i12 + 1] /= -122;
                    i13 = 1;
                    while (++i13 < 1) {
                        Test.instanceCount -= -23501;
                    }
                    break;
                case 116:
                    for (i14 = 1; i14 < 1; i14 += 3) {
                        i3 = i12;
                        i3 += (i14 * i14);
                        i3 >>= 0;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + s + by + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth(float f) {

        int i2=-65378, i16=-4, i17=-7, i18=-177, iArr2[]=new int[N];
        boolean b=false;
        short s2=21614;
        byte by1=23;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, -408862804L);
        FuzzerUtils.init(iArr2, 248);

        switch ((((--i2) >>> 1) % 8) + 42) {
        case 42:
            try {
                vMeth(i2);
                i16 = 1;
                do {
                    switch ((i16 % 5) + 47) {
                    case 47:
                        Test.instanceCount -= -11;
                        if (b) {
                            i2 += (i16 - f);
                            lArr2[i16] = lArr2[i16 + 1];
                            for (i17 = 1; 25 > i17; i17++) {
                                Test.instanceCount += -1;
                                f = i16;
                                iArr2[i16 + 1] = i18;
                                i18 -= i18;
                                Test.instanceCount *= (long)Test.dFld;
                            }
                        }
                        break;
                    case 48:
                        i2 += (44917 + (i16 * i16));
                        break;
                    case 49:
                        i2 -= (int)-71.37992;
                    case 50:
                        i18 += (((i16 * i18) + i16) - s2);
                        break;
                    case 51:
                        try {
                            i18 = (-53556 / i18);
                            i18 = (i18 / 207);
                            i2 = (i17 % i18);
                        } catch (ArithmeticException a_e) {}
                    default:
                        s2 = (short)-43824;
                    }
                } while ((i16 += 3) < 187);
            }
            catch (UserDefinedExceptionTest exc2) {
                Test.instanceCount -= i17;
            }
            break;
        case 43:
            i18 = by1;
            break;
        case 44:
            i18 %= (int)(by1 | 1);
            break;
        case 45:
            Test.lFld += i18;
        case 46:
        case 47:
            i2 -= i17;
            break;
        case 48:
        case 49:
            lArr2[(i17 >>> 1) % N][(i2 >>> 1) % N] -= Test.lFld;
            break;
        default:
            b = false;
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i16 + i17 + i18 + (b ? 1 : 0) + s2 + by1 +
            FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=185, i1=7, i19=68, i20=57941, i21=224, i22=-31392, i23=-163, i24=59, i25=-204, i26=13;
        float f3=1.963F;
        boolean b1=false;
        byte by2=123;
        long lArr3[]=new long[N];

        FuzzerUtils.init(lArr3, -689854522L);

        for (i = 8; 299 > i; ++i) {
            i1 = i;
        }
        Test.instanceCount >>= (iMeth(f3) + i);
        for (i19 = 23; 392 > i19; i19++) {
            Test.instanceCount = Test.instanceCount;
        }
        i20 = (int)Test.lFld;
        for (i21 = 299; 11 < i21; i21--) {
            for (i23 = 3; i23 < 87; ++i23) {
                b1 = b1;
                i22 -= (int)Test.dFld;
                Test.sArrFld[i23 - 1] -= (short)72;
                iArrFld[i21][i23] ^= i20;
                i25 = 1;
                do {
                    if (b1) {
                        f3 *= i24;
                        i24 += (i25 | Test.instanceCount);
                        switch (((i20 >>> 1) % 9) + 66) {
                        case 66:
                            by2 |= (byte)i19;
                            break;
                        case 67:
                            f3 += (i25 * i25);
                            switch (((i21 % 2) * 5) + 108) {
                            case 114:
                                f3 = (float)Test.dFld;
                                break;
                            case 111:
                                Test.sArrFld = Test.sArrFld;
                                try {
                                    iArrFld[i23 + 1][i25 + 1] = (i1 / iArrFld[i25 + 1][i23 + 1]);
                                    i20 = (i22 / 1409923249);
                                    iArrFld[i21][i23] = (i19 % i1);
                                } catch (ArithmeticException a_e) {}
                                Test.lFld += (i25 * i25);
                                i24 += i25;
                                break;
                            default:
                                i20 *= i21;
                                lArr3[i23 - 1] -= i21;
                            }
                            i24 = (int)Test.lFld;
                            break;
                        case 68:
                            i1 = i23;
                            iArrFld[i25][i23 + 1] = i24;
                            break;
                        case 69:
                            i20 -= i22;
                            break;
                        case 70:
                            iArrFld[i21][i21 + 1] *= i21;
                            break;
                        case 71:
                            i26 <<= i1;
                            break;
                        case 72:
                            Test.instanceCount += i25;
                            break;
                        case 73:
                            Test.dFld -= i21;
                            break;
                        case 74:
                            if (b1) break;
                            break;
                        }
                    } else if (b1) {
                        Test.instanceCount += (((i25 * i) + Test.instanceCount) - Test.instanceCount);
                    } else {
                        i26 += by2;
                    }
                } while (++i25 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
