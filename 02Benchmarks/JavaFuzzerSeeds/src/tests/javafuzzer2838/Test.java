package tests.javafuzzer2838;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:06:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-520246223855395634L;
    public int iFld=-29736;
    public static float fFld=-68.508F;
    public short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -148L);
        FuzzerUtils.init(Test.fArrFld, 96.802F);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i3, int i4) {

        short s=2352;
        float f1=65.75F;
        int i5=-223, i6=-66, i7=4, i8=-9, i9=-100, iArr1[]=new int[N];
        byte by=-117;

        FuzzerUtils.init(iArr1, -12);

        i4 *= (int)Test.instanceCount;
        switch ((((i3 >>> 1) % 6) * 5) + 47) {
        case 64:
        case 54:
            Test.lArrFld[(i4 >>> 1) % N] = s;
            break;
        case 57:
            Test.lArrFld[(i4 >>> 1) % N] -= Test.instanceCount;
            Test.fFld = i4;
            for (f1 = 5; 205 > f1; f1++) {
                by += (byte)((long)f1 | i3);
                Test.fFld *= i4;
                for (i6 = 1; i6 < 8; i6++) {
                    for (i8 = 1; 2 > i8; i8++) {
                        s = (short)i9;
                        i4 = i9;
                        if (true) break;
                        i9 >>= i6;
                        iArr1[i8 - 1] -= -223;
                    }
                }
            }
            break;
        case 63:
            Test.fFld -= (float)-89.56149;
            break;
        case 65:
            i7 = i3;
            break;
        case 72:
            iArr1[(i5 >>> 1) % N] &= i6;
            break;
        }
        long meth_res = i3 + i4 + s + Float.floatToIntBits(f1) + i5 + by + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i2, double d, long l) {

        int iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 5);

        d = byMeth(i2, i2);
        iArr2[(i2 >>> 1) % N] = i2;
        i2 = i2;
        i2 += i2;
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + l + FuzzerUtils.checkSum(iArr2);
    }

    public static double dMeth() {

        int i=5, i1=1, iArr[]=new int[N];
        float f=2.211F;
        double d1=-2.97944;
        byte by1=63;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -10);
        FuzzerUtils.init(lArr, 144L);

        for (i = 10; i < 173; ++i) {
            i1 = iArr[i - 1];
            lArr[i] *= (long)(((-(f - f)) + Float.intBitsToFloat(i1)) - i1);
            switch ((i % 9) + 105) {
            case 105:
            case 106:
                Test.instanceCount -= (--i1);
                break;
            case 107:
                vMeth(i1, d1, Test.instanceCount);
                Test.instanceCount <<= -135;
                if (b) {
                    i1 = by1;
                    i1 -= (int)Test.instanceCount;
                    Test.fArrFld[i + 1] += i;
                }
                break;
            case 108:
                i1 *= (int)Test.instanceCount;
            case 109:
                i1 += (-7 + (i * i));
                i1 += (i * i);
                break;
            case 110:
                try {
                    i1 = (i / i1);
                    i1 = (i1 % -1103956202);
                    i1 = (68 % i1);
                } catch (ArithmeticException a_e) {}
                break;
            case 111:
                if (b) continue;
            case 112:
                i1 = i1;
            case 113:
            default:
                i1 += (((i * i) + i) - i);
            }
        }
        long meth_res = i + i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + by1 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i10=-116, i11=-174, i12=-8, i13=-44170;
        byte by2=107;
        double d2=0.94395;
        short s1=21808;
        boolean b1=true;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.708F);

        Test.instanceCount *= (long)(sArrFld[(-184 >>> 1) % N] - ((iFld * iFld) - dMeth()));
        i10 = 1;
        while (++i10 < 228) {
            by2 += (byte)(i10 * i10);
            iFld >>= iFld;
            iFld *= 181;
            for (i11 = 1; i11 < 110; ++i11) {
                i13 = 1;
                while (++i13 < 2) {
                    fArr = fArr;
                    i12 >>>= i11;
                    Test.instanceCount += i12;
                    switch (((i10 % 3) * 5) + 25) {
                    case 36:
                        Test.instanceCount -= i13;
                        i12 -= -31246;
                        Test.instanceCount = i13;
                        break;
                    case 31:
                        iFld = i10;
                        Test.fFld -= i13;
                        break;
                    case 28:
                        iArrFld[i11] += i10;
                        break;
                    }
                    switch ((i11 % 5) + 86) {
                    case 86:
                        Test.instanceCount *= i10;
                        Test.instanceCount += 83;
                        by2 += (byte)d2;
                        break;
                    case 87:
                        s1 += (short)Test.instanceCount;
                        break;
                    case 88:
                        i12 <<= (int)7187165121735041088L;
                        iArrFld[i10 + 1] *= i12;
                        i12 &= iFld;
                        break;
                    case 89:
                        switch ((((i11 >>> 1) % 2) * 5) + 13) {
                        case 18:
                            if (b1) continue;
                            d2 += i10;
                            iArrFld[i13] *= i13;
                        case 21:
                            i12 = (int)Test.fFld;
                            break;
                        default:
                            i12 += (int)d2;
                        }
                    case 90:
                        iArrFld[i10 - 1] = i10;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
