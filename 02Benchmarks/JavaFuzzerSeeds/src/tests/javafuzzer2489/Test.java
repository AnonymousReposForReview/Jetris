package tests.javafuzzer2489;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:25:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=108L;
    public static int iFld=223;
    public static double dFld=2.3501;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1) {

        int i1=61393, i2=248, i3=14, i4=-64894, i5=7;
        double d=-46.44930;
        float f=-3.613F, f1=2.99F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -98.95F);

        for (i1 = 160; i1 > 3; i1--) {
            d = 1;
            do {
                i2 = (int)l1;
            } while ((d += 2) < 10);
            for (f = 1; f < 10; f += 3) {
                boolean b=true;
                i2 = (int)-143677259L;
                for (i4 = 1; 4 > i4; ++i4) {
                    fArr = fArr;
                }
                f1 += -9L;
                i3 = (int)f;
                switch ((int)((f % 2) + 117)) {
                case 117:
                    switch (((i3 >>> 1) % 2) + 97) {
                    case 97:
                        switch ((i1 % 1) + 60) {
                        case 60:
                            i5 += (int)(f + Test.instanceCount);
                            i5 -= (int)f1;
                        }
                        i5 += (int)(f - Test.instanceCount);
                    case 98:
                        if (b) continue;
                        break;
                    default:
                        Test.iFld += i3;
                    }
                    break;
                case 118:
                    Test.dFld *= i2;
                    break;
                }
            }
        }
        vMeth2_check_sum += l1 + i1 + i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i3 + i4 + i5 +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(long l, int i) {

        int i6=-52872, i7=-64258, i8=-58465, i9=53990, i10=-2;
        float f2=2.848F;

        vMeth2(l);
        for (i6 = 12; 239 > i6; ++i6) {
            i7 = -231;
        }
        Test.iArrFld[(i >>> 1) % N] -= 152;
        i8 = 1;
        while (++i8 < 257) {
            boolean b1=false;
            Test.iFld = i7;
            if (b1) {
                switch ((((i >>> 1) % 9) * 5) + 100) {
                case 104:
                    l += (i8 * Test.instanceCount);
                    Test.iFld %= (int)(l | 1);
                    for (i9 = 1; 6 > i9; ++i9) {
                        switch ((i9 % 2) + 60) {
                        case 60:
                            try {
                                i7 = (Test.iArrFld[i9] / i9);
                                Test.iArrFld[i8] = (Test.iArrFld[i8 - 1] / 39992);
                                Test.iFld = (-41118 % Test.iArrFld[i8 + 1]);
                            } catch (ArithmeticException a_e) {}
                            l += (i9 ^ i8);
                            i >>= i;
                            break;
                        case 61:
                            Test.iFld += i6;
                        }
                    }
                    break;
                case 130:
                    i7 -= -11;
                    break;
                case 115:
                    Test.iArrFld[i8 + 1] -= Test.iFld;
                case 125:
                    if (b1) break;
                    break;
                case 102:
                    Test.iFld = i9;
                case 143:
                    i10 += i10;
                case 144:
                    i10 += (i8 * i8);
                    break;
                case 124:
                    Test.iFld = -67;
                    break;
                case 126:
                    i7 = -246;
                default:
                    i *= i9;
                }
            } else if (b1) {
                Test.instanceCount += (long)f2;
            } else {
                f2 = f2;
            }
        }
        vMeth1_check_sum += l + i + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2);
    }

    public void vMeth() {


        vMeth1(2888324880903925558L, Test.iFld);
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {


        vMeth();
        Test.iFld >>= (int)Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
