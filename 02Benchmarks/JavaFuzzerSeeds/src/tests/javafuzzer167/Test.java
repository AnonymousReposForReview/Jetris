package tests.javafuzzer167;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:13:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=11152L;
    public static double dFld=-32.94144;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -92);
        FuzzerUtils.init(Test.fArrFld, -39.5F);
        FuzzerUtils.init(Test.sArrFld, (short)-12638);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(byte by) {

        int i5=-105, i6=-44, i7=-214, i8=-59702, i9=-2, i10=35, i11=50156, i12=3;
        double d2=2.85141;
        float f1=-1.481F;
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)119);

        for (i5 = 15; i5 < 287; i5++) {
            i6 = i5;
            for (i7 = 1; i7 < 6; i7++) {
                d2 += Test.instanceCount;
                i8 = (int)-1.30312;
                for (i9 = 1; i9 < 2; i9++) {
                    i6 <<= (int)Test.instanceCount;
                    f1 += 11;
                }
                if (b) {
                    if (b) continue;
                    i10 += (((i7 * i8) + Test.instanceCount) - Test.instanceCount);
                    for (i11 = 1; 2 > i11; i11 += 3) {
                        Test.instanceCount *= i7;
                        byArr[i11 + 1] = (byte)i11;
                        i12 -= 3600;
                    }
                } else if (b) {
                }
            }
        }
        long meth_res = by + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d2) + i9 + i10 + Float.floatToIntBits(f1) + (b
            ? 1 : 0) + i11 + i12 + FuzzerUtils.checkSum(byArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i4, double d1) {

        byte by1=47;
        int i13=-12, i14=3, i15=-46953, i16=-117;
        float f2=-2.820F;

        i4 = iMeth2(by1);
        Test.instanceCount -= 146;
        i4 += i4;
        for (i13 = 7; i13 < 289; i13++) {
            Test.instanceCount += (((i13 * i4) + by1) - i13);
            for (i15 = 1; i15 < 6; ++i15) {
                Test.instanceCount *= Test.instanceCount;
                i14 = -6523;
                switch ((i13 % 5) + 120) {
                case 120:
                    i14 >>>= i4;
                    i16 = (int)f2;
                    Test.iArrFld[i13 + 1] = i14;
                    Test.instanceCount += (((i15 * i14) + f2) - f2);
                    break;
                case 121:
                    i16 = 10;
                    Test.iArrFld[i15] = i4;
                    break;
                case 122:
                    i14 = (int)d1;
                case 123:
                    Test.instanceCount -= (long)f2;
                    break;
                case 124:
                    i4 = (int)Test.instanceCount;
                    break;
                default:
                    Test.iArrFld[i13] *= -28697;
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d1) + by1 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, float f) {

        int i1=1, i2=26, i3=101, i17=4, i18=10, i19=2, i20=13;
        double d=-59.103594;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5047895487253507451L);

        i1 += (int)(Test.instanceCount - Test.iArrFld[(i1 >>> 1) % N]);
        i1 -= (int)d;
        f -= (++i1);
        for (i2 = 14; 250 > i2; ++i2) {
            Test.fArrFld[i2 - 1] = (-((lArr[i2 - 1]--) * (i1 - l)));
            i3 += (int)(4.201F + (i2 * i2));
            f = (iMeth1(152, d) + i1);
            if (b1) break;
            i1 = i2;
        }
        for (i17 = 3; i17 < 133; i17++) {
            for (i19 = 1; i19 < 12; i19++) {
                i3 /= -30682;
                Test.instanceCount += i20;
                i1 += i19;
                i20 = i1;
            }
        }
        long meth_res = l + Float.floatToIntBits(f) + i1 + Double.doubleToLongBits(d) + i2 + i3 + (b1 ? 1 : 0) + i17 +
            i18 + i19 + i20 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-14750, i21=39929, i22=1, i23=26507, i24=-177, i25=3, i26=0, i27=-52379, iArr[][]=new int[N][N];
        float f3=-70.653F;
        double d3=-50.94699;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 2447918217704834099L);
        FuzzerUtils.init(iArr, 12393);

        i -= iMeth(Test.instanceCount, f3);
        Test.sArrFld[(i >>> 1) % N] -= (short)i;
        i = i;
        i ^= (int)Test.instanceCount;
        lArr1[(20749 >>> 1) % N][(i >>> 1) % N] += i;
        switch (((i >>> 1) % 6) + 37) {
        case 37:
            i += (int)Test.instanceCount;
            i += (int)f3;
            Test.instanceCount *= (long)Test.dFld;
            break;
        case 38:
            i += i;
            Test.instanceCount *= Test.instanceCount;
            for (i21 = 273; i21 > 16; i21 -= 2) {
                i22 += (-19 + (i21 * i21));
                Test.fArrFld[i21 + 1] = i21;
                for (i23 = 7; i23 < 196; i23++) {
                    i -= i24;
                    Test.instanceCount -= (long)1.55140;
                    i -= (int)Test.dFld;
                    lArr1[i23 + 1][i21] -= Test.instanceCount;
                    i22 += (((i23 * i24) + i22) - i23);
                    i24 *= i;
                }
                for (i25 = 5; i25 < 196; ++i25) {
                    i26 = (int)Test.instanceCount;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)158);
                    Test.instanceCount += i25;
                    i24 += -30809;
                }
                i += i21;
                for (d3 = i21; d3 < 196; ++d3) {
                    f3 += f3;
                    Test.iArrFld[(int)(d3)] = (int)Test.instanceCount;
                }
            }
        case 39:
            i22 = 5092;
        case 40:
            Test.iArrFld[(i27 >>> 1) % N] += (int)Test.instanceCount;
            break;
        case 41:
            iArr = FuzzerUtils.int2array(N, (int)1);
        case 42:
            i24 = i23;
            break;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
