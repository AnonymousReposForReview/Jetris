package tests.javafuzzer202;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:08:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3779940965L;
    public static short sFld=-2600;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4236156676390573041L);
        FuzzerUtils.init(Test.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f1=0.191F;
        int i4=-35962, i5=-47630, i6=-23492, i7=-2173, i8=36545, i9=67, iArr[][]=new int[N][N];
        boolean b=true;
        double d1=2.33829;
        short s=18346;

        FuzzerUtils.init(iArr, -240);

        if (false) {
            f1 = i4;
            b = b;
        } else {
            i5 = 1;
            while (++i5 < 188) {
                i4 = i5;
                i4 <<= i4;
                for (i6 = 1; 8 > i6; i6++) {
                    d1 *= i7;
                    i4 >>= i5;
                }
                for (i8 = 8; i8 > i5; i8--) {
                    iArr[i5 + 1] = iArr[i5 + 1];
                    Test.instanceCount *= i8;
                    i7 += (1 + (i8 * i8));
                    i9 = s;
                    Test.instanceCount *= i4;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i4 + (b ? 1 : 0) + i5 + i6 + i7 + Double.doubleToLongBits(d1) +
            i8 + i9 + s + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(double d) {

        float f2=0.498F;
        int i10=-44, i11=5;
        double d2=-21.21864;

        Test.instanceCount = (Test.instanceCount--);
        vMeth1();
        f2 -= i10;
        Test.sFld = (short)i10;
        i10 = i10;
        i10 -= i10;
        i10 = (int)Test.instanceCount;
        Test.instanceCount += i10;
        i10 = (int)d2;
        i10 = 61;
        i11 >>= i10;
        d = i10;
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i10 + Double.doubleToLongBits(d2) + i11;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {

        int i3=7;
        double d3=-1.20268;

        i3 /= (int)(((long)(Test.instanceCount + fMeth(d3))) | 1);
        vMeth_check_sum += i3 + Double.doubleToLongBits(d3);
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=-39538, i2=-10, i12=172, i13=8, i14=-230, i15=11;
        float f=-1.650F;
        long l=2828412052L;
        double d4=0.113160;
        boolean b1=true;

        i = (int)(--Test.instanceCount);
        f = 1;
        while (++f < 346) {
            i += (int)(((f * Test.instanceCount) + Test.instanceCount) - i);
        }
        i -= (int)Test.instanceCount;
        for (i1 = 15; i1 < 395; i1++) {
            vMeth();
            Test.lArrFld[i1 + 1] -= l;
            switch ((i1 % 3) + 51) {
            case 51:
                i += i2;
                i = i2;
                i12 = 1;
                do {
                    i ^= (int)-2208812913112278504L;
                    Test.iArrFld[i12 + 1] -= i2;
                    i13 = 1;
                    while ((i13 -= 2) > 0) {
                        Test.sFld -= (short)i;
                        d4 /= (i2 | 1);
                        l += (i13 - i);
                        Test.instanceCount += i12;
                        Test.instanceCount >>>= i1;
                        i += (i13 + i1);
                    }
                    i2 -= (int)l;
                    switch (((i >>> 1) % 6) + 59) {
                    case 59:
                        Test.iArrFld[i1] = i1;
                        for (i14 = 1; i14 < 1; i14++) {
                            i = i12;
                            Test.iArrFld[i1] <<= i2;
                            Test.lArrFld[i12 - 1] = i13;
                            if (b1) break;
                            i += i14;
                            Test.iArrFld[i14] = i2;
                        }
                        break;
                    case 60:
                        l ^= i13;
                        break;
                    case 61:
                        Test.instanceCount <<= l;
                    case 62:
                        i15 = i2;
                    case 63:
                        if (b1) continue;
                        break;
                    case 64:
                        i15 = (int)l;
                        break;
                    }
                } while (++i12 < 66);
                break;
            case 52:
                Test.instanceCount &= i2;
            case 53:
            default:
                i15 = (int)l;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
