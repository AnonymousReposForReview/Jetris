package tests.javafuzzer102;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:26:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-215L;
    public static int iFld=-3;
    public byte byFld=67;
    public static double dArrFld[][]=new double[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.122983);
        FuzzerUtils.init(Test.iArrFld, 51);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(short s) {

        int i9=3, i10=-4, i11=-21313, i12=5, i13=-155, i14=-4, iArr1[]=new int[N];
        float f1=-28.451F;
        double d1=-2.68912;

        FuzzerUtils.init(iArr1, -96);

        for (i9 = 7; 199 > i9; i9++) {
            i10 += (i9 | Test.iFld);
            for (i11 = 1; i11 < 8; i11 += 2) {
                iArr1[i11] >>= i9;
                for (i13 = 1; 3 > i13; ++i13) {
                    short s1=-29095;
                    if (false) continue;
                    switch ((i9 % 6) + 21) {
                    case 21:
                        switch ((i9 % 2) + 104) {
                        case 104:
                        case 105:
                            i12 = (int)Test.instanceCount;
                            break;
                        }
                        f1 += i11;
                        i14 -= 148;
                    case 22:
                        i14 -= (int)Test.instanceCount;
                        i10 <<= (int)7100111791558614286L;
                        Test.dArrFld = Test.dArrFld;
                        break;
                    case 23:
                        i10 >>= i12;
                        break;
                    case 24:
                        d1 = s1;
                        break;
                    case 25:
                        iArr1[i11 + 1] >>= s;
                        break;
                    case 26:
                        Test.iFld = i12;
                        break;
                    default:
                        Test.iFld >>>= 3;
                    }
                }
            }
        }
        long meth_res = s + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth() {

        int i1=-85, i2=-85, i3=-34029, i4=167, i5=-14, i6=-1, i7=-23743, i8=15713, iArr[]=new int[N];
        double d=0.123336;
        float f=17.94F;
        boolean b=true;
        short s2=1968;

        FuzzerUtils.init(iArr, -173);

        for (i1 = 8; i1 < 133; ++i1) {
            for (i3 = 1; i3 < 13; ++i3) {
                for (i5 = 1; i5 < 2; ++i5) {
                    i6 = (i4--);
                    i2 += i5;
                    i2 += (i5 + Test.instanceCount);
                    d *= (--f);
                }
                Test.instanceCount += (iArr[i1] <<= i3);
                i6 <<= (int)Test.instanceCount;
            }
            i6 = i6;
            for (i7 = 13; i7 > 1; i7--) {
                b = b;
            }
            i8 += i1;
        }
        iArr[(i3 >>> 1) % N] ^= (((--i2) + iMeth1(s2)) * -7431);
        i8 ^= i6;
        long meth_res = i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i7 + i8 +
            (b ? 1 : 0) + s2 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth() {

        int i=115, i16=0, i17=8, i18=-210, i19=-1878, i20=0, i21=-47201;
        float f2=1.331F;

        i = (int)((-lMeth()) + -78);
        for (int i15 : Test.iArrFld) {
            if (i != 0) {
            }
            switch (((Test.iFld >>> 1) % 1) + 119) {
            case 119:
                i15 *= (int)f2;
            }
            Test.iFld -= Test.iFld;
            Test.iFld += Test.iFld;
        }
        for (i16 = 135; i16 > 5; i16 -= 3) {
            i = Test.iFld;
        }
        Test.iFld = Test.iFld;
        i17 <<= (int)-7846586263086174715L;
        for (i18 = 16; i18 < 292; ++i18) {
            for (i20 = 1; i20 < 6; i20++) {
                byFld += (byte)i;
                f2 = -4101827823L;
            }
        }
        long meth_res = i + Float.floatToIntBits(f2) + i16 + i17 + i18 + i19 + i20 + i21;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i22=10767, i23=2, i24=-7916, i25=41, i26=-27390, i27=-185, i28=-36427, i29=-237;
        float f3=-51.340F;
        long l=108644570L;
        boolean b1=false, b2=false;
        short s3=-10215;
        double d3=6.128926;

        Test.instanceCount *= iMeth();
        i22 = 276;
        do {
            for (i23 = 8; i23 < 272; ++i23) {
                i24 += i22;
                i24 = (int)f3;
                Test.iFld = (int)f3;
                for (l = i23; l < 2; ++l) {
                    double d2=2.78559;
                    i25 = (int)Test.instanceCount;
                    Test.iFld += (int)l;
                    if (b1) {
                        i24 += i22;
                        Test.dArrFld[i23][i23 - 1] = Test.instanceCount;
                        Test.iFld = i25;
                        i24 = i22;
                    } else if (true) {
                        i25 <<= i23;
                        Test.instanceCount = (long)d2;
                        i24 += Test.iFld;
                    } else {
                        f3 *= 1;
                        i25 += (int)(l * l);
                    }
                    f3 += (((l * f3) + Test.iFld) - s3);
                    i24 <<= Test.iFld;
                    i24 = Test.iFld;
                }
            }
            i26 = 1;
            while (++i26 < 272) {
                if (b1) continue;
                for (i27 = i22; i27 < 1; i27++) {
                    b1 = b2;
                }
                Test.iFld = i23;
                for (d3 = i26; 1 > d3; ++d3) {
                    i24 = -29173;
                    i24 += (int)f3;
                }
            }
        } while ((i22 -= 3) > 0);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
