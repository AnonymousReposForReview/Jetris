package tests.javafuzzer1393;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:35:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-885494367L;
    public static short sFld=31851;
    public static float fFld=0.812F;
    public static byte byFld=-46;
    public static boolean bFld=false;
    public static volatile int iFld=194;

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        int i9=219, i10=15967, i11=-56207, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -7208);

        Test.fFld *= 2.911F;
        for (int i8 : iArr1) {
            if (Test.bFld) {
                i9 *= Test.byFld;
                i8 = i8;
            } else if (true) {
                for (i10 = 1; i10 < 4; i10++) {
                    Test.byFld += (byte)i11;
                    i11 *= (int)Test.instanceCount;
                }
                switch (((4 >>> 1) % 5) + 76) {
                case 76:
                case 77:
                    i11 += 147;
                    i9 = i9;
                case 78:
                case 79:
                    Test.instanceCount = i9;
                    Test.sFld -= (short)i11;
                    break;
                case 80:
                    i11 <<= -47;
                    Test.bFld = Test.bFld;
                default:
                    i8 = i9;
                }
            } else {
                i9 = (int)3979851247L;
            }
        }
        long meth_res = i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth() {

        int i6=-51036, i7=4988, i12=-14, i13=-206, i14=0, i15=-52389, iArr2[]=new int[N];
        double d1=-2.48093;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -23509L);
        FuzzerUtils.init(iArr2, -8668);

        for (i6 = 8; i6 < 347; i6++) {
            lArr[i6 + 1] -= (long)(fMeth() + i7);
            iArr2[i6 + 1] *= i6;
            Test.iFld += i6;
            i7 |= i7;
            for (i12 = 1; i12 < 5; i12++) {
                for (i14 = 2; i14 > i12; i14 -= 2) {
                    Test.instanceCount += (((i14 * i7) + i13) - Test.instanceCount);
                    switch ((((i13 >>> 1) % 6) * 5) + 111) {
                    case 128:
                        Test.iFld *= i7;
                        iArr2[i14 - 1] = (int)Test.instanceCount;
                        switch (((i6 >>> 1) % 2) + 65) {
                        case 65:
                            i7 = i14;
                            break;
                        case 66:
                            i15 *= i13;
                            i13 -= Test.sFld;
                            break;
                        default:
                            Test.instanceCount = i6;
                        }
                        break;
                    case 134:
                        d1 = Test.sFld;
                        break;
                    case 133:
                        i15 -= (int)Test.instanceCount;
                    case 127:
                        Test.iFld *= 38204;
                        break;
                    case 135:
                        Test.fFld -= i6;
                    case 131:
                        i15 += i6;
                        break;
                    }
                }
            }
        }
        long meth_res = i6 + i7 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        double d=-2.38766;
        int i=5, i1=55204, i2=-13, i3=-10, i4=-22365, i5=9, iArr[][]=new int[N][N];
        byte by=-83;

        FuzzerUtils.init(iArr, 0);

        d += (Test.instanceCount |= ((i++) + i));
        i = ((iArr[(i >>> 1) % N][(i >>> 1) % N] -= (i--)) + (by--));
        i /= (int)((--i1) | 1);
        i1 = (-(-Test.sFld));
        for (i2 = 319; i2 > 16; --i2) {
            i3 += i2;
            Test.fFld = ((3 - (Test.instanceCount + Test.sFld)) * Test.instanceCount);
            for (i4 = 1; 5 > i4; ++i4) {
                by += (byte)(((i4 * i3) + Test.sFld) - i5);
                d += i5;
                i -= (++i);
                Test.instanceCount += ((i5 + Test.instanceCount) * ((i5--) + (i2 * i1)));
                i3 -= (int)Math.abs(lMeth() + Test.iFld);
                if (Test.bFld) break;
                Test.instanceCount -= i5;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + by + i1 + i2 + i3 + i4 + i5 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=-7, i17=-226, i18=48962, i19=-90, i20=-15754, iArr3[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr3, -33);
        FuzzerUtils.init(lArr1, -5436341637383891110L);

        vMeth();
        for (i16 = 3; i16 < 274; ++i16) {
            Test.iFld = i17;
            switch ((i16 % 1) + 72) {
            case 72:
                i18 = 1;
                while (++i18 < 93) {
                    i19 = 1;
                    while (++i19 < 1) {
                        Test.instanceCount *= i18;
                        Test.iFld ^= (int)Test.instanceCount;
                    }
                    Test.fFld += (((i18 * Test.instanceCount) + Test.byFld) - i17);
                    Test.iFld = 17;
                    Test.iFld = i18;
                    iArr3[i18 + 1] >>= i19;
                    iArr3[i18 + 1] = Test.iFld;
                    lArr1[i18 - 1] -= Test.instanceCount;
                    if (Test.bFld) break;
                    i20 = 1;
                    while (++i20 < 1) {
                        i17 <<= i20;
                        Test.sFld = (short)Test.instanceCount;
                        Test.iFld += (int)(1.412F + (i20 * i20));
                        i17 = Test.iFld;
                        i17 -= (int)Test.instanceCount;
                        Test.instanceCount >>= -172L;
                        i17 ^= -154;
                        i17 *= (int)Test.instanceCount;
                        Test.iFld -= (int)Test.instanceCount;
                    }
                    Test.sFld *= (short)-154;
                }
            }
            Test.iFld -= i17;
            i17 *= (int)Test.fFld;
            iArr3[i16] >>>= (int)Test.instanceCount;
        }
        Test.bFld = Test.bFld;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
