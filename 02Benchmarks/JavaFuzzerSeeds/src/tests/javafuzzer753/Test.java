package tests.javafuzzer753;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:10:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7307456432274891543L;
    public byte byFld=-67;
    public int iFld=8174;
    public static short sFld=29765;
    public boolean bFld=false;
    public int iFld1=137;
    public static double dFld=77.28835;
    public float fFld=2.1008F;
    public volatile int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(double d1) {

        int i8=-12, i9=25771, i10=-20366, i11=2, i12=-38136, iArr[][]=new int[N][N];
        float f=9.338F;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -106);
        FuzzerUtils.init(lArr, 1L);

        i8 = 1;
        do {
            Test.instanceCount >>>= i8;
            for (i9 = 1; i9 < 5; ++i9) {
                iArr[i8 + 1][i9 + 1] *= (int)f;
                Test.instanceCount = -54;
                for (i11 = i9; 2 > i11; i11++) {
                    Test.instanceCount ^= i9;
                    b = b;
                    f += Test.instanceCount;
                    i12 -= i10;
                    Test.instanceCount ^= i11;
                    if (true) {
                        iArr[i9][i9 - 1] -= (int)Test.instanceCount;
                        lArr[i9 + 1] = Test.instanceCount;
                        i12 = (int)f;
                    } else if (b) {
                        d1 = i11;
                    }
                }
            }
        } while (++i8 < 315);
        long meth_res = Double.doubleToLongBits(d1) + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + (b ? 1 : 0)
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i2=183, i3=39844, i4=11, i5=-162, i6=-3, i7=-179;
        double d=52.46906;
        float f1=-1.11F;
        short s=5014;
        boolean b1=true;

        for (i2 = 16; i2 < 271; i2++) {
            i3 += (int)(1.371F + (i2 * i2));
            for (i4 = 1; 6 > i4; i4++) {
                for (i6 = 2; i6 > i2; i6 -= 2) {
                    i3 = (int)d;
                    i7 += (i6 | i2);
                    Test.instanceCount += (i6 ^ Test.sFld);
                    switch (((iMeth(9.82751) >>> 1) % 7) + 72) {
                    case 72:
                        f1 -= Test.instanceCount;
                        s = (short)i7;
                        Test.instanceCount += -61625;
                        break;
                    case 73:
                        i3 += (i6 + i7);
                        i5 -= i2;
                        i7 = 25717;
                        i5 <<= i2;
                        break;
                    case 74:
                        if (b1) continue;
                        break;
                    case 75:
                        i5 <<= i6;
                        break;
                    case 76:
                        i5 -= 198;
                        break;
                    case 77:
                        i3 = i6;
                        break;
                    case 78:
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + s +
            (b1 ? 1 : 0);
    }

    public static long lMeth() {

        int i13=-23236, i14=61074, i15=-221, i16=-3, i17=-3, i18=17401, iArr1[]=new int[N];
        byte by=124;
        float f2=2.237F, fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -13706);
        FuzzerUtils.init(fArr, 0.718F);

        vMeth();
        for (i13 = 8; i13 < 280; i13++) {
            for (i15 = 1; i15 < 6; i15++) {
                if (true) {
                    by += (byte)i15;
                    switch ((((i16 >>> 1) % 4) * 5) + 73) {
                    case 78:
                        Test.bArrFld = Test.bArrFld;
                        i16 += (((i15 * i15) + i15) - i14);
                        break;
                    case 79:
                        iArr1[i13 - 1] = i15;
                        for (i17 = 1; i17 < 2; i17++) {
                            i16 -= i13;
                            i18 <<= i14;
                            Test.instanceCount += (((i17 * i13) + Test.instanceCount) - Test.instanceCount);
                            i18 = i16;
                            i16 += i17;
                        }
                        break;
                    case 76:
                    case 83:
                        fArr[(0 >>> 1) % N] -= f2;
                        break;
                    default:
                        by += (byte)(i15 + i16);
                    }
                }
            }
        }
        long meth_res = i13 + i14 + i15 + i16 + by + i17 + i18 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=5052948817490223850L, l1=616498278L, l2=-617295178L, lArr1[]=new long[N];
        int i=13872, i1=189, i19=912, i20=94;
        float f3=35.654F;
        double d2=72.33583;

        FuzzerUtils.init(lArr1, 128L);

        for (l = 1; 302 > l; ++l) {
            Test.instanceCount = (((--i) - (Test.instanceCount >> i)) - Test.instanceCount);
            for (l1 = 84; l1 > l; l1--) {
                switch (((((--i1) >>> 1) % 5) * 5) + 63) {
                case 85:
                    i1 += (int)(((Test.instanceCount - byFld) - (iArrFld[(int)(l + 1)]++)) << (l1 + (iFld--)));
                    break;
                case 70:
                    l2 += (l1 * l1);
                    break;
                case 83:
                    i += (int)lMeth();
                case 73:
                    i = (int)Test.instanceCount;
                    for (f3 = 1; 1 > f3; f3++) {
                        Test.instanceCount = i19;
                        bFld = bFld;
                        iArrFld[(int)(l)] *= i19;
                        switch ((int)((l1 % 6) + 92)) {
                        case 92:
                            iFld -= i1;
                            Test.sFld = (short)i;
                            i = (int)l;
                            i &= iFld;
                            break;
                        case 93:
                            Test.instanceCount += (long)f3;
                            i1 *= i1;
                            switch ((int)((l1 % 7) + 91)) {
                            case 91:
                                i = i19;
                                i = i19;
                                l2 = byFld;
                                break;
                            case 92:
                                iArrFld[(int)(l1 - 1)] = i19;
                                switch ((int)((f3 % 3) + 57)) {
                                case 57:
                                    iFld -= i1;
                                    i19 = (int)l2;
                                    i19 ^= i;
                                    break;
                                case 58:
                                    Test.instanceCount = i;
                                    break;
                                case 59:
                                    Test.instanceCount += (2373722394L + (f3 * f3));
                                    break;
                                default:
                                    byFld = (byte)iFld1;
                                }
                                break;
                            case 93:
                                i = -38080;
                                break;
                            case 94:
                                i20 = (int)l;
                            case 95:
                            case 96:
                                Test.dFld -= l1;
                                break;
                            case 97:
                                i20 -= (int)54.476F;
                            }
                            break;
                        case 94:
                            l2 = Test.instanceCount;
                            break;
                        case 95:
                            iArrFld[(int)(l1 - 1)] = i20;
                            break;
                        case 96:
                            iArrFld[(int)(l)] += i1;
                        case 97:
                            Test.instanceCount += byFld;
                        default:
                            iFld -= (int)d2;
                        }
                    }
                    break;
                case 67:
                    fFld += iFld;
                    break;
                default:
                    lArr1[(int)(l1 - 1)] = i1;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
