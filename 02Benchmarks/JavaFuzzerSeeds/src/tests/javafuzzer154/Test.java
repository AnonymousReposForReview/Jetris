package tests.javafuzzer154;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:03:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static int iFld=24615;
    public byte byFld=8;
    public static double dFld=1.112381;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, long l1, long l2) {


        i5 = i5;
        i5 = i5;
        vMeth1_check_sum += i5 + l1 + l2;
    }

    public static void vMeth(int i2, int i3, int i4) {

        float f=0.355F;
        int i6=14, i7=-12, iArr[]=new int[N];
        short s=27826;

        FuzzerUtils.init(iArr, 148);

        i4 -= (int)f;
        vMeth1(i2, Test.instanceCount, Test.instanceCount);
        i3 = i2;
        Test.instanceCount += Test.instanceCount;
        i3 = (int)1.248F;
        for (i6 = 17; i6 < 359; ++i6) {
            iArr[i6 + 1] += i6;
            i7 -= 13;
            i7 += (-52461 + (i6 * i6));
            i4 += (-35897 + (i6 * i6));
            f = s;
            i4 <<= 22061;
            s += (short)(132L + (i6 * i6));
            s = (short)i3;
        }
        i2 -= i4;
        vMeth_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f) + i6 + i7 + s + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i, int i1, long l) {

        int i8=9, i9=-187, i10=-69, i11=0, i12=-21323, i13=-8;

        vMeth(i, i, i1);
        i1 += i;
        i1 = (int)158L;
        for (i8 = 14; i8 < 354; i8++) {
            for (i10 = i8; i10 < 5; i10++) {
                for (i12 = 1; i12 < 1; i12++) {
                    double d=41.58226;
                    i13 += (i12 - i1);
                    i9 += (i12 ^ l);
                    l <<= l;
                    l += (long)d;
                    i13 += (i12 + i10);
                    i >>= i;
                    i13 += i12;
                    Test.instanceCount -= i10;
                    if (true) break;
                }
            }
        }
        long meth_res = i + i1 + l + i8 + i9 + i10 + i11 + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=5, i15=-8, i16=28136, i17=-1, i18=-64366, i19=4, i20=3, iArr1[]=new int[N];
        long l3=-70L, lArr[][]=new long[N][N];
        short s1=28268;
        boolean b=false;
        float f1=0.447F;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, 50406);
        FuzzerUtils.init(dArr, 126.1231);
        FuzzerUtils.init(lArr, -4L);

        Test.instanceCount = iMeth(Test.iFld, Test.iFld, -3229399522L);
        byFld >>= (byte)Test.iFld;
        for (i14 = 1; i14 < 221; ++i14) {
            switch ((i14 % 3) + 114) {
            case 114:
                Test.iFld <<= -169;
                break;
            case 115:
                for (i16 = i14; 114 > i16; i16++) {
                    try {
                        iArr1[i14 + 1] = (-59411 / iArr1[i16 - 1]);
                        Test.iFld = (-95 / iArr1[i16]);
                        i17 = (i17 % -10);
                    } catch (ArithmeticException a_e) {}
                }
                for (i18 = 5; i18 < 114; i18++) {
                    l3 = 1;
                    do {
                        Test.instanceCount += l3;
                        Test.instanceCount = i14;
                        iArr1[(int)(l3 + 1)] *= s1;
                        i19 -= s1;
                        if (b) continue;
                        f1 -= i18;
                        dArr[i14] -= l3;
                        Test.instanceCount = 225;
                        switch ((i18 % 6) + 50) {
                        case 50:
                        case 51:
                            switch (((i14 % 1) * 5) + 56) {
                            case 60:
                                b = false;
                                i19 += (int)(l3 + Test.iFld);
                                f1 -= i15;
                                Test.instanceCount <<= i17;
                                break;
                            default:
                                i17 += (int)(((l3 * i15) + Test.instanceCount) - i18);
                                i17 = i18;
                                Test.dFld += 96;
                            }
                            i17 += (int)(((l3 * Test.instanceCount) + Test.instanceCount) - i19);
                            lArr[(int)(l3)][i18 - 1] = s1;
                            break;
                        case 52:
                            Test.iFld += (int)-13L;
                            Test.instanceCount += (((l3 * i20) + l3) - byFld);
                            break;
                        case 53:
                            i15 += (int)l3;
                            break;
                        case 54:
                            Test.iFld += (int)(l3 ^ l3);
                            break;
                        case 55:
                            Test.dFld = Test.dFld;
                            break;
                        }
                    } while (++l3 < 2);
                }
                break;
            case 116:
                i20 += (9 + (i14 * i14));
                break;
            default:
                s1 += (short)(i14 ^ (long)f1);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
