package tests.javafuzzer756;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:10:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=59122L;
    public double dFld=64.125467;
    public volatile boolean bFld=true;
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.lArrFld, -4120520439L);
    }

    public static long byMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, int i5, int i6) {

        long l1=6L;
        int i7=-13, i8=-11, i9=-65382, i10=65, i11=-60311, i12=5, i13=-17500, i14=-21757, iArr[]=new int[N];
        boolean b=false;
        double d1=-63.126252;

        FuzzerUtils.init(iArr, -234);

        for (l1 = 14; l1 < 247; ++l1) {
            if (false) break;
        }
        if (b) {
            for (i8 = 159; i8 > 2; i8 -= 2) {
                for (i10 = 1; i10 < 20; i10 += 3) {
                    i7 = 30;
                    Test.bArrFld[i10 + 1] = b;
                    i6 = i12;
                    for (d1 = 1; d1 < 4; d1++) {
                        iArr[i10] -= i11;
                        iArr = iArr;
                        i9 -= (int)d1;
                    }
                    i14 = 1;
                    while ((i14 += 2) < 4) {
                        Test.instanceCount += (i14 * i14);
                        i11 = i8;
                    }
                }
            }
        } else if (b) {
            i6 = i10;
        }
        long meth_res = l + i5 + i6 + l1 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i12 + Double.doubleToLongBits(d1) +
            i13 + i14 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static long lMeth() {

        int i4=148;

        i4 -= (int)((++i4) - fMeth(126L, i4, i4));
        long meth_res = i4;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public byte byMeth(int i2, double d, int i3) {

        short s=-28537;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 81);

        Test.instanceCount = Math.min((int)((--i2) - lMeth()), i2);
        iArr1[(i2 >>> 1) % N] /= (int)(0 | 1);
        s /= (short)(i2 | 1);
        long meth_res = i2 + Double.doubleToLongBits(d) + i3 + s + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=59783, i1=65164, i15=134, i16=35, i17=11, i18=-4, iArr2[]=new int[N], iArr3[]=new int[N];
        float f=61.761F, fArr[]=new float[N];
        byte by=17;
        short s1=8664;
        boolean b1=true;

        FuzzerUtils.init(iArr2, -59441);
        FuzzerUtils.init(fArr, 30.265F);
        FuzzerUtils.init(iArr3, -1);

        for (i = 7; i < 348; ++i) {
            byMeth(i1, dFld, i1);
            iArr2[i] -= (int)Test.instanceCount;
            for (i15 = 2; i15 < 74; i15++) {
                switch (((i % 9) * 5) + 45) {
                case 48:
                    switch ((i % 8) + 55) {
                    case 55:
                        i1 -= i15;
                        break;
                    case 56:
                        f *= i;
                        for (i17 = 2; 1 < i17; i17 -= 2) {
                            by = by;
                            fArr[i15 + 1] = (float)1.108321;
                            i18 -= by;
                            iArr2[i17] >>= (int)Test.instanceCount;
                            switch ((i17 % 10) + 103) {
                            case 103:
                                i18 -= i16;
                                Test.instanceCount += (i17 + Test.instanceCount);
                                i18 = i16;
                                break;
                            case 104:
                                i1 = i18;
                                iArr2[(-2278 >>> 1) % N] /= (int)(Test.instanceCount | 1);
                                i1 = i1;
                                break;
                            case 105:
                            case 106:
                                i18 += (int)(-8463327026453288286L + (i17 * i17));
                                switch ((i17 % 1) + 90) {
                                case 90:
                                    i18 >>= -24788;
                                    switch ((i15 % 9) * 5) {
                                    case 44:
                                        switch ((i15 % 9) + 123) {
                                        case 123:
                                            i16 = (int)dFld;
                                            i16 = i15;
                                            s1 -= (short)f;
                                        case 124:
                                            if (bFld) continue;
                                            iArr2[i17 - 1] *= i;
                                            break;
                                        case 125:
                                            i16 = i17;
                                        case 126:
                                            bFld = bFld;
                                            break;
                                        case 127:
                                            i16 >>>= i16;
                                        case 128:
                                            by <<= (byte)3110485298843153880L;
                                            break;
                                        case 129:
                                            i16 &= i17;
                                            break;
                                        case 130:
                                            f += i16;
                                            break;
                                        case 131:
                                            i1 += i1;
                                            break;
                                        default:
                                            Test.lArrFld = Test.lArrFld;
                                        }
                                    case 7:
                                        i1 += (((i17 * i1) + i17) - Test.instanceCount);
                                    case 35:
                                        if (true) break;
                                        break;
                                    case 27:
                                        f += (((i17 * i17) + i15) - i15);
                                    case 28:
                                        i18 += (int)224788303L;
                                    case 24:
                                        i16 += i;
                                        break;
                                    case 43:
                                        Test.instanceCount = i16;
                                    case 41:
                                        iArr2[i17 + 1] %= (int)(Test.instanceCount | 1);
                                        break;
                                    case 4:
                                        i1 = by;
                                        break;
                                    default:
                                        i16 += (int)Test.instanceCount;
                                    }
                                }
                                break;
                            case 107:
                                i1 -= 10;
                            case 108:
                                dFld = Test.instanceCount;
                            case 109:
                            case 110:
                                i18 += (-234 + (i17 * i17));
                            case 111:
                                iArr3 = FuzzerUtils.int1array(N, (int)14409);
                                break;
                            case 112:
                                b1 = bFld;
                                break;
                            }
                        }
                    case 57:
                        i1 *= (int)Test.instanceCount;
                        break;
                    case 58:
                        f = 4;
                        break;
                    case 59:
                        Test.instanceCount = i1;
                        break;
                    case 60:
                        i16 += (11535 + (i15 * i15));
                        break;
                    case 61:
                        Test.instanceCount = i18;
                    case 62:
                    }
                    break;
                case 87:
                    by += (byte)i15;
                    break;
                case 74:
                    i16 = i15;
                    break;
                case 63:
                    i18 *= i16;
                case 51:
                    Test.lArrFld[i - 1] -= i;
                    break;
                case 73:
                    i1 += i;
                    break;
                case 52:
                    Test.instanceCount >>= i15;
                case 64:
                    if (true) continue;
                    break;
                case 89:
                    i1 = i18;
                    break;
                default:
                    iArr3[i] |= (int)Test.instanceCount;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  lMeth ->  lMeth byMeth mainTest
//DEBUG  fMeth ->  fMeth lMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
