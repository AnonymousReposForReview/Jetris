package tests.javafuzzer679;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:52:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-51056L;
    public static float fFld=68.541F;
    public static boolean bFld=false;
    public static int iFld=-206;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 3752);
        FuzzerUtils.init(Test.lArrFld, -25496L);
        FuzzerUtils.init(Test.fArrFld, 61.593F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        int i8=-46614, i9=-24, i10=-35, i11=-55172;

        i7 *= (int)1558616736L;
        Test.iArrFld[(i7 >>> 1) % N] = -186;
        for (i8 = 7; i8 < 205; ++i8) {
            if (i7 != 0) {
                vMeth2_check_sum += i7 + i8 + i9 + i10 + i11;
                return;
            }
            i7 *= i8;
            i7 -= (int)-36.651F;
            i7 *= (int)-1.798F;
        }
        Test.fFld -= i8;
        for (i10 = 5; i10 < 276; ++i10) {
            if (Test.bFld) continue;
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth1() {

        double d=20.71772;
        int i4=112, i5=-59170, i6=-48561, i12=1, i13=-54093, i14=-12, i15=-30187;
        long l=-202L;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-20358);

        for (d = 2; d < 159; ++d) {
            for (i5 = 1; 10 > i5; i5++) {
                short s1=27792;
                switch ((int)((d % 7) + 47)) {
                case 47:
                    vMeth2(4);
                case 48:
                    i6 += (41113 + (i5 * i5));
                    Test.lArrFld[i5 + 1] -= s1;
                    break;
                case 49:
                    Test.instanceCount = i6;
                    i6 *= i5;
                    for (i12 = 2; i12 > 1; i12 -= 3) {
                        s1 = (short)l;
                    }
                    break;
                case 50:
                    for (i14 = 1; i14 < 2; ++i14) {
                        i6 *= (int)146L;
                        Test.bFld = Test.bFld;
                    }
                    try {
                        i4 = (i15 / 49778);
                        i15 = (i15 % -959043203);
                        i6 = (i5 / 177);
                    } catch (ArithmeticException a_e) {}
                    i6 = (int)Test.instanceCount;
                    break;
                case 51:
                    Test.fFld += (i5 * i5);
                    break;
                case 52:
                    i4 <<= 37243;
                    break;
                case 53:
                    i15 *= 231;
                    break;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i4 + i5 + i6 + i12 + i13 + l + i14 + i15 +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i, int i1) {

        int i2=17356, i3=74, i16=-2, i17=14, i18=229, i19=-3, i20=-129;
        double d1=36.30504, d2=15.112482, dArr[]=new double[N];
        short s2=116;

        FuzzerUtils.init(dArr, 1.54750);

        for (i2 = 6; i2 < 249; ++i2) {
            vMeth1();
            for (i16 = 1; i16 < 7; ++i16) {
                Test.fArrFld[i2] -= (float)d1;
                i17 /= (int)(i1 | 1);
                i3 += (((i16 * i) + i3) - i);
                dArr[i16] *= s2;
                Test.fFld *= i2;
                i1 += (i16 + s2);
                Test.instanceCount -= Test.instanceCount;
            }
            for (i18 = 1; 7 > i18; ++i18) {
                for (d2 = 1; 2 > d2; ++d2) {
                    i20 += (int)d2;
                    if (Test.bFld) continue;
                    i19 = i3;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i16 + i17 + Double.doubleToLongBits(d1) + s2 + i18 + i19 +
            Double.doubleToLongBits(d2) + i20 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=-7890, i22=37858, i23=11, i24=60803;

        vMeth(Test.iFld, Test.iFld);
        Test.iFld = (int)Test.instanceCount;
        for (i21 = 234; 9 < i21; i21 -= 3) {
            Test.iFld = (int)Test.instanceCount;
            Test.iFld >>= -1915;
            Test.instanceCount += -78;
            Test.iFld -= i22;
            i22 += Test.iFld;
            i22 -= (int)124.52F;
        }
        Test.iFld = i22;
        Test.lArrFld[(i22 >>> 1) % N] = (long)Test.fFld;
        for (i23 = 9; i23 < 196; ++i23) {
            i24 += (i23 | i23);
        }
        i22 -= (int)Test.fFld;
        Test.iArrFld[(i22 >>> 1) % N] >>= i23;
        Test.lArrFld[(i21 >>> 1) % N] += Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
