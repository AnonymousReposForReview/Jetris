package tests.javafuzzer656;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:26:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-25276L;
    public static boolean bFld=false;
    public double dFld=-37.72926;
    public float fFld=28.471F;
    public static int iArrFld[][]=new int[N][N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -4);
        FuzzerUtils.init(Test.byArrFld, (byte)86);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4, float f) {

        int i5=-33609, i6=-15603, i7=45679, i8=217, i9=-30812, iArr1[][]=new int[N][N];
        double d=51.122226;
        byte by=103;
        short s=-10841;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(fArr, 15.762F);

        for (i5 = 1; i5 < 239; ++i5) {
            iArr1[i5][i5 + 1] = (int)Test.instanceCount;
            i3 -= i3;
            fArr[i5 + 1] = (float)d;
            d *= f;
            i6 *= by;
            for (i7 = 7; i7 > 1; --i7) {
                Test.instanceCount += (i7 * i4);
                Test.instanceCount = i6;
                i9 = 1;
                do {
                    d *= s;
                    fArr[i7 - 1] = 2;
                    f /= (i6 | 1);
                } while ((i9 += 3) < 2);
                i4 >>= i9;
                Test.bFld = Test.bFld;
            }
        }
        long meth_res = i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + Double.doubleToLongBits(d) + by + i7 + i8 + i9 +
            s + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i2) {

        float f1=-101.980F, fArr1[]=new float[N];
        short s1=30072;
        int i10=-8, i11=27, i12=4, i13=3, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4L);
        FuzzerUtils.init(iArr2, 36362);
        FuzzerUtils.init(fArr1, -27.190F);

        lArr[(i2 >>> 1) % N] >>= iMeth(178, -6, f1);
        i2 >>= s1;
        for (i10 = 3; 133 > i10; i10++) {
            for (i12 = 1; i12 < 12; i12++) {
                iArr2[i10 - 1] = i2;
                i2 |= i12;
                Test.instanceCount <<= 3L;
                Test.instanceCount += i12;
                iArr2[i10] = i11;
                if (Test.bFld) {
                    switch ((i10 % 1) + 69) {
                    case 69:
                        fArr1 = fArr1;
                        break;
                    default:
                        if (i12 != 0) {
                            vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + s1 + i10 + i11 + i12 + i13 +
                                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                            return;
                        }
                    }
                    Test.instanceCount = i13;
                    iArr2[i10] -= (int)Test.instanceCount;
                } else if (Test.bFld) {
                    i11 = i11;
                    vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + s1 + i10 + i11 + i12 + i13 +
                        FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                    return;
                } else if (true) {
                    i11 = i13;
                } else {
                    Test.instanceCount = i11;
                }
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + s1 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(int i1) {

        int i14=99, i15=-47410, i16=12607, i17=114, i18=0, iArr3[]=new int[N];

        FuzzerUtils.init(iArr3, -26891);

        vMeth1(i1);
        for (i14 = 11; 397 > i14; i14++) {
            for (i16 = 1; i16 < 4; i16 += 3) {
                i17 <<= 57394;
                Test.instanceCount += i16;
                Test.iArrFld[i16 - 1][i16 + 1] += i14;
                i17 = i1;
                switch ((i16 % 2) + 124) {
                case 124:
                    i18 = 1;
                    do {
                        iArr3[i14 + 1] += i14;
                        Test.instanceCount += (i18 * i18);
                    } while (++i18 < 4);
                    break;
                case 125:
                    Test.instanceCount += i16;
                    i17 >>= i15;
                default:
                    i1 += (((i16 * i1) + i18) - i1);
                    i15 = i17;
                }
            }
        }
        vMeth_check_sum += i1 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i19=-43486, i20=18634, i21=-3277, i22=14, i23=-45, i24=-238, i25=207, i26=131, i27=-39038, i28=-64319,
            i29=-12, iArr[]=new int[N], iArr4[]=new int[N];
        byte by1=106;
        short s2=-28068;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -2248);
        FuzzerUtils.init(lArr1, 12153L);
        FuzzerUtils.init(iArr4, 34);

        for (int i : iArr) {
            vMeth(i);
        }
        i19 = 1;
        do {
            switch (((i19 % 8) * 5) + 67) {
            case 103:
                by1 %= (byte)(i19 | 1);
                switch ((i19 % 4) + 13) {
                case 13:
                    i20 += i20;
                    for (i21 = 5; i21 < 83; i21++) {
                        Test.bFld = Test.bFld;
                        for (i23 = 1; i23 < 2; ++i23) {
                            Test.instanceCount += (((i23 * i22) + i23) - i23);
                            iArr[i19 + 1] -= 21;
                            i22 = 85;
                        }
                        i22 += i22;
                        Test.byArrFld = Test.byArrFld;
                    }
                    Test.bFld = Test.bFld;
                    i22 -= (int)64.15845;
                    break;
                case 14:
                    i20 = i24;
                    for (i25 = 83; i25 > i19; --i25) {
                        i27 = 1;
                        do {
                            if (Test.bFld) {
                                if (true) break;
                                lArr1[(i24 >>> 1) % N] -= i27;
                                try {
                                    iArr[i25 + 1] = (i23 / 161);
                                    i22 = (i24 % i22);
                                    i22 = (-205 % Test.iArrFld[i27][i27 - 1]);
                                } catch (ArithmeticException a_e) {}
                                Test.bFld = Test.bFld;
                            }
                            Test.instanceCount <<= i21;
                            iArr4[i19 + 1] &= (int)Test.instanceCount;
                        } while (++i27 < 1);
                        for (i28 = 1; i28 < 1; i28++) {
                            i24 += i28;
                            i20 = s2;
                        }
                    }
                case 15:
                    by1 *= (byte)i23;
                    break;
                case 16:
                    i22 = (int)13L;
                }
                break;
            case 83:
                i26 = (int)dFld;
                break;
            case 82:
            case 104:
                fFld *= i23;
                break;
            case 75:
            case 93:
                i20 += (int)fFld;
                break;
            case 71:
                try {
                    i26 = (i20 / i27);
                    i20 = (i24 % i20);
                    i26 = (Test.iArrFld[i19 + 1][i19] / -1);
                } catch (ArithmeticException a_e) {}
                break;
            case 85:
                fFld -= i22;
                break;
            default:
                lArr1[i19 + 1] *= (long)-1.648F;
            }
        } while (++i19 < 304);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
