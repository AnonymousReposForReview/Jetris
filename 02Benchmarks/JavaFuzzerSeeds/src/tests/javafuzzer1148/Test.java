package tests.javafuzzer1148;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:49:53 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=117L;
    public static byte byFld=-57;
    public static boolean bFld=false;
    public short sFld=-7861;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i8=-1, i9=6, i10=49459, i11=226, i12=-3, i13=34699, iArr1[]=new int[N];
        float f1=-81.703F;
        short s=29563;

        FuzzerUtils.init(iArr1, -1);

        for (i8 = 20; i8 < 337; i8++) {
            f1 = 1;
            do {
                for (i10 = 1; i10 < 1; i10++) {
                    if (i9 != 0) {
                        vMeth2_check_sum += l + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + s + i12 + i13 +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i11 = i10;
                    l += (i10 + Test.byFld);
                    Test.instanceCount += (((i10 * i9) + Test.instanceCount) - s);
                    iArr1[(int)(f1 - 1)] *= i10;
                    if (Test.bFld) continue;
                }
                Test.instanceCount *= -2414396021L;
                i11 = i12;
                i13 = 1;
                do {
                    double d=1.46513;
                    d += d;
                    d += i12;
                    Test.instanceCount = i10;
                } while (++i13 < 1);
            } while (++f1 < 5);
        }
        vMeth2_check_sum += l + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + s + i12 + i13 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i3) {

        int i4=-38577, i5=-22047, i6=-51663, i7=-3, i14=2, i15=-2, iArr2[][]=new int[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 28.134F);
        FuzzerUtils.init(iArr2, 4);

        if (Test.bFld) {
            for (i4 = 8; i4 < 167; i4++) {
                if (false) {
                    for (i6 = 1; i6 < 10; ++i6) {
                        vMeth2(Test.instanceCount);
                    }
                    fArr = fArr;
                    iArr2[i4 + 1][i4] <<= i7;
                    Test.byFld -= (byte)Test.instanceCount;
                } else if (true) {
                    Test.instanceCount = i5;
                }
                i5 -= i6;
            }
        } else if (Test.bFld) {
            i5 = i3;
            for (i14 = 4; i14 < 261; i14++) {
                i3 += (i14 | i7);
                Test.bFld = Test.bFld;
                Test.byFld = Test.byFld;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i1, int i2, float f) {

        int i16=-235, i17=31050, i18=1, i19=7, i20=5, i21=-14, i22=-9, i23=91;

        vMeth1(i1);
        for (i16 = 5; i16 < 201; ++i16) {
            i1 *= i17;
            Test.iArrFld[i16 - 1] *= -45751;
            for (i18 = 8; i18 > 1; i18--) {
                i2 = 14569;
                f += i18;
                for (i20 = 1; i20 < 2; i20++) {
                    i17 += i18;
                }
                i21 += (((i18 * Test.instanceCount) + Test.instanceCount) - i2);
                for (i22 = 2; i18 < i22; --i22) {
                    Test.bFld = Test.bFld;
                    i19 += i22;
                    Test.byFld += (byte)(((i22 * i21) + i16) - f);
                    i17 += (int)(-1.111F + (i22 * i22));
                }
            }
        }
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f) + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23;
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i24=-16252, i25=-12497, i26=-64667, i27=27873, i28=-212, i29=7, i30=-130, iArr[]=new int[N];
        float f2=2.102F;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -55753);
        FuzzerUtils.init(lArr, -3371985361L);
        FuzzerUtils.init(bArr, true);

        i = 1;
        while (++i < 179) {
            iArr[i + 1] += (int)(++Test.instanceCount);
            switch ((i % 8) + 73) {
            case 73:
                vMeth(i, i, f2);
                iArr[i] &= (int)Test.instanceCount;
                i24 = i24;
            case 74:
                i24 >>= Test.byFld;
                Test.instanceCount += (37818 + (i * i));
                break;
            case 75:
            case 76:
                for (i25 = i; i25 < 140; ++i25) {
                    Test.iArrFld[i25 + 1] = i24;
                }
                i24 &= sFld;
                break;
            case 77:
                i24 = i;
                lArr[i] <<= -10623;
            case 78:
                i24 += (i ^ i);
                for (i27 = 2; i27 < 140; i27++) {
                    i26 += (i27 + i27);
                    i24 += 101;
                    f2 = 108;
                    Test.byFld = (byte)-3074617788L;
                    i26 -= i;
                }
                Test.instanceCount = -11;
                i28 = 140;
                break;
            case 79:
                Test.iArrFld[i] = i;
                for (i29 = 5; i29 < 140; ++i29) {
                    bArr[i29 + 1] = Test.bFld;
                }
                i30 = (int)5799169214384564345L;
                if (Test.bFld) continue;
                break;
            case 80:
                i28 *= (int)Test.instanceCount;
                iArr[i + 1] = i28;
                break;
            }
            i26 = (int)Test.instanceCount;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
