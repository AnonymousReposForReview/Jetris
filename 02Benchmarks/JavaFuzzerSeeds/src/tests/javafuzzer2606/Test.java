package tests.javafuzzer2606;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:15:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7418969584965893402L;
    public static int iFld=-219;
    public byte byFld=-10;
    public volatile long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 92.637F);
        FuzzerUtils.init(Test.byArrFld, (byte)49);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth1(double d, short s, int i3) {

        float f=2.328F;

        i3 = (int)(i3 | (long)((Test.instanceCount + d) + (i3 - Test.iFld)));
        Test.iFld = (int)(((++i3) + i3) - Math.abs(f));
        vMeth1_check_sum += Double.doubleToLongBits(d) + s + i3 + Float.floatToIntBits(f);
    }

    public static int iMeth() {

        double d2=62.73295;
        int i6=-72, i7=88, i8=7, i9=9, i10=14, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 102L);
        FuzzerUtils.init(iArr2, -34486);

        for (byte by1 : Test.byArrFld) {
            Test.iFld -= (int)(Math.abs((int)(74.793F - Test.iFld)) + d2);
            vMeth1(-2.129283, (short)(30484), Test.iFld);
            switch (((Test.iFld >>> 1) % 9) + 67) {
            case 67:
                Test.iFld += Test.iFld;
                for (i6 = 4; 1 < i6; i6 -= 3) {
                    Test.instanceCount -= i7;
                }
                for (i8 = 1; i8 < 4; i8 += 2) {
                    Test.iFld -= Test.iFld;
                    i9 = -10;
                    i7 += (i8 - Test.instanceCount);
                    if (true) continue;
                    Test.instanceCount += (23509 + (i8 * i8));
                    Test.instanceCount <<= Test.iFld;
                    Test.iFld += (((i8 * Test.iFld) + i7) - i6);
                }
            case 68:
                i9 -= Test.iFld;
                break;
            case 69:
            case 70:
                i9 >>= i9;
                break;
            case 71:
                Test.iFld = Test.iFld;
            case 72:
                i9 -= Test.iFld;
            case 73:
                Test.iFld = i10;
                break;
            case 74:
                lArr[(Test.iFld >>> 1) % N] = 0;
                break;
            case 75:
                d2 += i7;
            default:
                Test.instanceCount &= 63247;
            }
        }
        long meth_res = Double.doubleToLongBits(d2) + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2) {

        float f1=0.125F;
        int i4=8, i5=42707, i12=-10, i13=-2, i14=-12, i15=-59516, iArr1[]=new int[N];
        double d1=104.50631;
        byte by=-1;
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)22846);
        FuzzerUtils.init(iArr1, -20296);

        vMeth1(((f1--) + (0.803F * (8 - (Test.instanceCount + Test.iFld)))) - (Test.iFld /= (int)(Math.max(Test.iFld,
            -5) | 1)), (short)(++sArr[(i2 >>> 1) % N]), (int)(((Test.iFld - Test.iFld) - (Test.iFld >>> i2)) -
            (--Test.fArrFld[(Test.iFld >>> 1) % N])));
        for (i4 = 293; i4 > 15; --i4) {
            vMeth1(d1, sArr[i4 + 1], iArr1[i4 - 1]++);
            Test.iFld = (Test.iFld & by);
            by = (byte)(((9 >> iMeth()) + Test.iFld) + by);
            Test.instanceCount += i2;
            Test.instanceCount = Test.instanceCount;
        }
        iArr1[(i5 >>> 1) % N] += -123;
        for (i12 = 7; i12 < 233; ++i12) {
            for (i14 = 1; i14 < 7; ++i14) {
                Test.fArrFld[i14 - 1] += Test.instanceCount;
            }
            b = b;
        }
        iArr1[(Test.iFld >>> 1) % N] <<= i12;
        d1 *= 95.41597;
        i5 *= (int)d1;
        vMeth_check_sum += i2 + Float.floatToIntBits(f1) + i4 + i5 + Double.doubleToLongBits(d1) + by + i12 + i13 + i14
            + i15 + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=51651, i1=-2151, i17=60917, i18=12, i19=-80, i20=1, i21=103, i22=-52242, i23=249, i24=64608, iArr[][]=new
            int[N][N], iArr3[]=new int[N];
        double d3=-87.33601;
        float f2=1.621F;
        boolean b1=true;
        short s1=14978;
        long l=-5791281435119906837L;

        FuzzerUtils.init(iArr, -229);
        FuzzerUtils.init(iArr3, -26767);

        for (i = 11; 179 > i; ++i) {
            iArr[i + 1][i] = (int)(Test.instanceCount / (((i1--) % ((lArrFld[i + 1] /= 1609) | 1)) | 1));
            Test.instanceCount >>>= (-9L - (lArrFld[i] * (i + Test.iFld)));
            vMeth(i);
            for (i17 = 5; i17 < 149; ++i17) {
                Test.instanceCount += i17;
                Test.iFld += (i17 | i18);
                for (i19 = 1; 2 > i19; ++i19) {
                    d3 -= -14L;
                    i1 -= i19;
                    Test.iFld += i19;
                    i1 += i1;
                    f2 += ((long)i19 ^ (long)Test.instanceCount);
                    b1 = b1;
                    i1 *= i;
                    s1 -= (short)Test.instanceCount;
                }
                iArr3 = iArr3;
                iArr[i17][i17] <<= (int)-1569166435L;
                Test.instanceCount += -10;
                iArr3[i17 - 1] -= i1;
                i1 ^= i1;
                for (i21 = 1; i21 < 2; i21 += 3) {
                    Test.instanceCount += (((i21 * s1) + i21) - i22);
                }
            }
            l = 1;
            do {
                byFld -= (byte)Test.iFld;
                for (i23 = (int)(l); i23 < 1; i23++) {
                    d3 = i18;
                    f2 -= -47628;
                    i20 += (int)d3;
                    Test.instanceCount = i23;
                }
            } while (++l < 149);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
