package tests.javafuzzer933;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:50:05 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=81L;
    public volatile int iFld=-25942;
    public static byte byFld=-86;
    public short sFld=345;
    public static volatile float fFld=76.336F;
    public boolean bFld=true;
    public int iFld1=7649;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 129);
        FuzzerUtils.init(Test.lArrFld, 90L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i3=3148, i4=59650, i5=34, i6=3;
        double d=-1.88940;
        float f2=-65.828F, f3=1.570F, f4=77.264F;
        boolean b=false;

        Test.iArrFld[(i3 >>> 1) % N] -= (int)d;
        Test.iArrFld = Test.iArrFld;
        switch ((((-6 >>> 1) % 6) * 5) + 41) {
        case 50:
            f2 += -118;
            i3 = (int)Test.instanceCount;
            for (f3 = 12; f3 < 384; ++f3) {
                f4 = 1;
                while (++f4 < 5) {
                    i4 ^= i3;
                    Test.instanceCount += (-13 + (f4 * f4));
                    d = i3;
                    i3 = i3;
                    f2 += (f4 * i3);
                }
                for (i5 = (int)(f3); i5 < 5; ++i5) {
                    Test.iArrFld = Test.iArrFld;
                    if (b) continue;
                }
            }
            break;
        case 65:
            i6 ^= (int)Test.instanceCount;
            break;
        case 66:
            i6 = i3;
            break;
        case 64:
            Test.instanceCount &= 2562504488L;
            break;
        case 57:
            Test.byFld <<= (byte)i4;
            break;
        case 68:
            i4 <<= i4;
        default:
            i4 *= i5;
        }
        long meth_res = i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i4 +
            Float.floatToIntBits(f4) + i5 + i6 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(long l, int i1, short s) {

        float f1=0.845F, f5=0.591F;
        int i2=1, i7=4, i8=-6, i9=20697, i10=-4, i11=-2, i12=191, i13=213;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 2.83765);

        s = (short)Test.iArrFld[(i1 >>> 1) % N];
        for (f1 = 1; f1 < 209; ++f1) {
            Test.iArrFld = (Test.iArrFld = Test.iArrFld);
            i1 = ((iMeth() + -20468) + i1);
        }
        for (i7 = 12; i7 < 344; i7 += 2) {
            i1 += (i7 * i7);
            f5 += (224948498974251039L + (i7 * i7));
            for (i9 = 1; i9 < 10; i9++) {
                for (i11 = 1; 2 > i11; ++i11) {
                    f5 -= i11;
                    i10 += (int)(-11L + (i11 * i11));
                    Test.lArrFld = Test.lArrFld;
                }
                i13 = 1;
                do {
                    f5 = 11L;
                    dArr[i13 - 1][i9] *= i10;
                } while (++i13 < 2);
            }
        }
        vMeth1_check_sum += l + i1 + s + Float.floatToIntBits(f1) + i2 + i7 + i8 + Float.floatToIntBits(f5) + i9 + i10
            + i11 + i12 + i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void vMeth() {

        int i=14, i14=12, i15=12353, i16=195, i17=3, i18=10, i19=-68, i20=-20557;
        float f=4.610F, f6=1.457F;
        boolean b1=false;

        iFld -= Math.max(i, (int)((iFld * 4722066622455894585L) - f));
        vMeth1(Test.instanceCount, -238, sFld);
        for (f6 = 280; f6 > 4; f6 -= 2) {
            for (i15 = 1; i15 < 11; i15++) {
                for (i17 = i15; 2 > i17; ++i17) {
                    Test.lArrFld = FuzzerUtils.long1array(N, (long)-1406091478L);
                    i16 |= (int)Test.instanceCount;
                    Test.instanceCount <<= Test.byFld;
                    Test.byFld += (byte)i17;
                    Test.instanceCount -= i15;
                    Test.iArrFld[(int)(f6 + 1)] += (int)23.529F;
                    if (b1) continue;
                }
            }
            for (i19 = 1; i19 < 11; i19++) {
                i16 += i19;
            }
            iFld = (int)2638133999L;
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + Float.floatToIntBits(f6) + i14 + i15 + i16 + i17 + i18 + (b1 ?
            1 : 0) + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i21=0, i22=-166, i23=-12, i24=-64, i25=-14, i26=67;
        double d1=102.41696;

        vMeth();
        Test.instanceCount += Test.instanceCount;
        iFld *= iFld;
        Test.fFld *= iFld;
        i21 = 1;
        while (++i21 < 121) {
            iFld -= (int)d1;
            iFld += (((i21 * i21) + i21) - i22);
            iFld *= iFld;
            i22 -= (int)Test.instanceCount;
            for (i23 = i21; i23 < 207; ++i23) {
                sFld |= (short)i23;
                i22 = i24;
                bFld = true;
                for (i25 = i23; i25 < 1; i25 += 2) {
                    switch (((i21 >>> 1) % 6) + 105) {
                    case 105:
                        iFld += (int)Test.fFld;
                        d1 = i24;
                        break;
                    case 106:
                        if (bFld) continue;
                        Test.instanceCount += (((i25 * i26) + iFld) - Test.instanceCount);
                        Test.iArrFld[i25 - 1] = 56978;
                    case 107:
                        i24 += (i25 - i26);
                        break;
                    case 108:
                        if (bFld) {
                            Test.lArrFld[i25 + 1] = Test.instanceCount;
                        } else {
                            Test.fFld *= (float)d1;
                            bFld = bFld;
                            Test.instanceCount += i25;
                            Test.instanceCount -= i26;
                        }
                        break;
                    case 109:
                        i24 += (((i25 * i23) + i21) - Test.byFld);
                        break;
                    case 110:
                        Test.instanceCount += (long)d1;
                        break;
                    }
                }
            }
            iFld1 *= -53992;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
