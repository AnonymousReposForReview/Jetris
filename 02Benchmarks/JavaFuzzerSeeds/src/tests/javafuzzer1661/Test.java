package tests.javafuzzer1661;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:58:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static volatile int iFld=45406;
    public static double dFld=-18.32435;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-11825);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i3, short s1) {

        double d1=0.83523;
        int i4=6936, i5=-202, i6=-43414, iArr[]=new int[N];
        long l1=-1495090420L;

        FuzzerUtils.init(iArr, 2);

        iArr[(Test.iFld >>> 1) % N] = i3;
        d1 = 1;
        while (++d1 < 348) {
            i3 -= -55063;
            i3 += (11 + (d1 * d1));
            s1 += (short)d1;
            i3 *= i3;
            Test.instanceCount &= Test.iFld;
            Test.instanceCount = -4417090844436159326L;
            i3 = Test.iFld;
            try {
                Test.iFld = (i3 / iArr[(int)(d1)]);
                i3 = (i3 % 28554);
                Test.iFld = (i3 / -65);
            } catch (ArithmeticException a_e) {}
            try {
                Test.iFld = (Test.iFld / 43862);
                i3 = (iArr[(int)(d1 - 1)] / Test.iFld);
                i3 = (iArr[(int)(d1 + 1)] % 56919);
            } catch (ArithmeticException a_e) {}
        }
        for (i4 = 11; 349 > i4; ++i4) {
            for (l1 = 5; l1 > i4; l1--) {
                Test.iFld <<= i5;
                i3 += (int)l1;
            }
        }
        long meth_res = i3 + s1 + Double.doubleToLongBits(d1) + i4 + i5 + l1 + i6 + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(long l) {

        int i2=-243, i7=237, i8=15514, i9=-64403, i10=11, iArr1[]=new int[N], iArr2[]=new int[N];
        float f=-92.420F;
        short s=-24191;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2138601401L);
        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(iArr2, -24110);

        i2 = 1;
        do {
            lArr[i2 + 1] *= (long)(f++);
            Test.sArrFld[i2 + 1] >>= (short)Math.abs(-(i2 - 22634));
            Test.iFld = (int)(s * (Test.dFld++));
        } while (++i2 < 398);
        Test.iFld *= (++s);
        Test.iFld = (int)((Test.iFld++) - fMeth(Test.iFld, s));
        for (i7 = 17; i7 < 277; i7++) {
            Test.iFld -= i8;
            f *= f;
            f = Test.instanceCount;
            iArr1[i7 - 1] = (int)f;
            for (i9 = 1; 6 > i9; ++i9) {
                iArr1[i7 + 1] = s;
                try {
                    i10 = (iArr1[i9 - 1] / -37102);
                    Test.iFld = (iArr1[i7 + 1] % 12);
                    Test.iFld = (iArr1[i9] / -1086445455);
                } catch (ArithmeticException a_e) {}
                iArr2[i9 + 1] *= s;
            }
        }
        vMeth1_check_sum += l + i2 + Float.floatToIntBits(f) + s + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth(int i, double d, int i1) {

        int i11=21166, i12=-5, i13=59459, i14=1, i15=-18, i16=55533, i17=5, i18=-7, i19=-3182, i20=0, iArr3[]=new
            int[N];
        float f1=8.730F, fArr[]=new float[N];

        FuzzerUtils.init(iArr3, 233);
        FuzzerUtils.init(fArr, -1.849F);

        vMeth1(-448445987977303880L);
        for (i11 = 15; i11 < 315; ++i11) {
            i13 = (int)Test.instanceCount;
            for (i14 = 1; i14 < 6; ++i14) {
                try {
                    i13 = (i15 / i1);
                    i15 = (i13 % i13);
                    iArr3[i14 - 1] = (i11 % 227);
                } catch (ArithmeticException a_e) {}
                i1 += i11;
                i12 += (i14 * i14);
                for (i16 = i14; 2 > i16; i16++) {
                    Test.instanceCount += i16;
                    i12 = 51389;
                }
                if (i14 != 0) {
                    vMeth_check_sum += i + Double.doubleToLongBits(d) + i1 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
                        Float.floatToIntBits(f1) + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr3) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
            for (f1 = 1; f1 < 6; f1++) {
                for (i19 = 1; i19 < 2; ++i19) {
                    Test.instanceCount += (163 + (i19 * i19));
                    fArr[i11] += i19;
                }
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + i1 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            Float.floatToIntBits(f1) + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=-15721, i22=-12, i23=-52, i24=-124, i25=-4, i26=82, i27=144, i28=8, i29=174, i30=13, i31=-68, i32=3,
            i33=14216, i34=50917, iArr4[]=new int[N];
        float f2=103.449F;
        short s2=10831;
        byte by=36;
        boolean b=true;

        FuzzerUtils.init(iArr4, 23551);

        vMeth(Test.iFld, Test.dFld, Test.iFld);
        for (i21 = 10; 264 > i21; ++i21) {
            for (i23 = i21; i23 < 99; ++i23) {
                i22 = i21;
                for (i25 = i21; i25 < 1; ++i25) {
                    i22 += i25;
                    f2 = -31665;
                    i26 += i25;
                    Test.instanceCount -= Test.iFld;
                    iArr4[i23 + 1] += (int)Test.instanceCount;
                    s2 = (short)i23;
                    Test.instanceCount -= i23;
                    s2 += (short)(((i25 * s2) + i22) - i26);
                }
                Test.iFld += i23;
                Test.instanceCount += i23;
            }
            Test.sArrFld[i21] = (short)-12;
        }
        for (i27 = 2; i27 < 288; ++i27) {
            for (i29 = 3; i29 < 88; i29++) {
                for (i31 = 1; i31 < 2; i31 += 3) {
                    i22 -= (int)Test.dFld;
                }
                for (i33 = i27; i33 < 2; i33++) {
                    s2 += by;
                    i22 <<= Test.iFld;
                    Test.instanceCount = i32;
                    if (b) break;
                    Test.instanceCount += i33;
                    f2 *= Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                }
                i34 -= (int)Test.instanceCount;
                Test.instanceCount = Test.instanceCount;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
