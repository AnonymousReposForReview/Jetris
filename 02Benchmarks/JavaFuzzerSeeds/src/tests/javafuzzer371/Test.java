package tests.javafuzzer371;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:55:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-248L;
    public byte byFld=-114;
    public static boolean bFld=false;
    public int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3016626565L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, long l2) {

        int i3=-30219, i4=1, i5=11, i6=-9333;
        byte by1=-19;
        double d1=-1.101380;
        boolean b=false;

        for (i3 = 3; i3 < 342; ++i3) {
            i5 = 1;
            do {
                l1 = by1;
                i6 = 5;
                while ((i6 -= 2) > 0) {
                    d1 += i6;
                    if (b) continue;
                    l2 = i3;
                    if (b) break;
                    l2 <<= 7;
                }
                l2 += i5;
                i4 *= -2;
            } while ((i5 += 3) < 5);
            l2 += i6;
            Test.instanceCount = i5;
        }
        i4 %= (int)(i3 | 1);
        Test.instanceCount += i3;
        vMeth1_check_sum += l1 + l2 + i3 + i4 + i5 + by1 + i6 + Double.doubleToLongBits(d1) + (b ? 1 : 0);
    }

    public static void vMeth(int i1, int i2) {

        int i7=227, i8=-58669, i9=1, i10=10, i11=-207, i12=44528, iArr1[]=new int[N];
        double d2=0.80097;

        FuzzerUtils.init(iArr1, 241);

        vMeth1(Test.instanceCount, Test.instanceCount);
        i2 -= (int)-4L;
        for (i7 = 10; i7 < 370; i7++) {
            i1 += (((i7 * i1) + i7) - i8);
            Test.instanceCount += (i7 * i2);
            for (i9 = 5; i9 > i7; i9 -= 2) {
                for (i11 = 1; i11 < 1; ++i11) {
                    i8 <<= i10;
                    i10 -= i2;
                    d2 -= 55776;
                    i10 -= i2;
                    i10 ^= i7;
                    i1 += (int)1.545F;
                    iArr1[i9 - 1] >>>= -14;
                    i2 *= i11;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i7 + i8 + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(double d, long l) {

        int i=236, i13=10169, i14=4, i15=6374, iArr[]=new int[N];
        byte by=111;
        long l3=5L, lArr[]=new long[N];
        float f=-115.594F;

        FuzzerUtils.init(iArr, 37177);
        FuzzerUtils.init(lArr, 6464115563179635805L);

        iArr[(i >>> 1) % N] += by;
        vMeth(i, i);
        i13 = 331;
        while ((i13 -= 3) > 0) {
            switch (((i13 % 6) * 5) + 102) {
            case 103:
                l3 -= i13;
                i >>= (int)-1782534811L;
                break;
            case 113:
                i += i13;
                i += (i13 | l);
                f = Test.instanceCount;
                lArr[i13 + 1] = i13;
                break;
            case 131:
                if (Test.bFld) {
                    for (i14 = i13; 14 > i14; ++i14) {
                        if (Test.bFld) continue;
                        i15 += i14;
                        f += f;
                    }
                } else if (Test.bFld) {
                    i -= i;
                } else if (Test.bFld) {
                    if (Test.bFld) break;
                } else {
                    iArr = FuzzerUtils.int1array(N, (int)-250);
                }
                break;
            case 105:
                Test.instanceCount = i;
                break;
            case 116:
                Test.bFld = Test.bFld;
                break;
            case 117:
                i += (i13 * i13);
            default:
                d = i13;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + l + i + by + i13 + l3 + Float.floatToIntBits(f) + i14 + i15 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d3=-2.104556;
        int i16=59781, i17=80, i18=-8205, i19=99, i20=159, i21=9, i22=12962;
        float f1=-1.656F, f2=0.902F, f3=-2.136F;
        short s=10451;

        byFld -= (byte)iMeth(d3, Test.instanceCount);
        i16 = 1;
        while ((i16 += 3) < 307) {
            if (Test.bFld) break;
            i17 += i16;
            f1 = Test.instanceCount;
            for (i18 = 246; i18 > 14; --i18) {
                for (i20 = 1; i20 < 2; ++i20) {
                    f2 += Test.instanceCount;
                    i17 += i20;
                    f1 += (i20 * i20);
                    d3 += i18;
                    Test.instanceCount = i17;
                    Test.instanceCount -= i17;
                    iArrFld = iArrFld;
                    d3 = -12;
                    i19 -= i19;
                    i19 >>>= s;
                }
                i21 <<= (int)Test.instanceCount;
                iArrFld[i18] = iArrFld[i16];
                switch ((i16 % 9) + 34) {
                case 34:
                    try {
                        iArrFld[i16 - 1][i16 - 1] = (i20 / i18);
                        i17 = (205 % i17);
                        i21 = (iArrFld[i18][i16 - 1] / iArrFld[i16][i18 + 1]);
                    } catch (ArithmeticException a_e) {}
                    i21 += (i18 + i16);
                    i17 += (i18 | i17);
                    break;
                case 35:
                    f2 *= f2;
                    i19 -= (int)Test.instanceCount;
                    break;
                case 36:
                    i17 = (int)Test.instanceCount;
                    Test.lArrFld[i16 + 1] += i17;
                    for (f3 = 1; f3 < 2; ++f3) {
                        if (Test.bFld) break;
                        i19 += i19;
                    }
                case 37:
                    d3 -= i22;
                    break;
                case 38:
                    if (true) break;
                    break;
                case 39:
                    i17 += (((i18 * Test.instanceCount) + Test.instanceCount) - i20);
                    break;
                case 40:
                    d3 = i16;
                case 41:
                    iArrFld[i18] = iArrFld[i16];
                case 42:
                    i19 = i22;
                default:
                    i22 &= 76;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
