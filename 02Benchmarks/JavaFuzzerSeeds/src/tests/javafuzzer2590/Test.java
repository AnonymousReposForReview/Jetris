package tests.javafuzzer2590;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:59:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-531133612L;
    public static byte byFld=-116;
    public static float fFld=0.547F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -34555);
        FuzzerUtils.init(Test.lArrFld, 3685759085L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i7) {

        int i8=232, i9=220, i10=3, i11=3;
        double d1=16.102858;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -6711L);

        for (i8 = 4; 370 > i8; i8++) {
            float f1=0.685F;
            Test.iArrFld[i8 + 1] += 16813;
            f1 -= Test.instanceCount;
            i9 = i9;
            if (b) {
                for (d1 = i8; d1 < 5; d1 += 2) {
                    i9 += (int)d1;
                    i11 = 1;
                    while (++i11 < 1) {
                        i9 *= (int)-110.42F;
                        lArr[(int)(d1)] -= i9;
                        i9 >>= i11;
                        i7 += i11;
                        i9 *= (int)f1;
                    }
                    i9 = (int)f1;
                    Test.instanceCount += i11;
                }
            } else if (b) {
                lArr[i8 - 1] = (long)f1;
            } else {
                i9 -= Test.byFld;
            }
        }
        long meth_res = i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i5=-165, i6=-8, i12=63887, i13=6, i14=16790, i15=5;
        double d2=-31.81157, d3=72.123105;
        float f2=-1.535F;

        for (i5 = 4; i5 < 297; i5 += 2) {
            i6 <<= (int)((Test.instanceCount++) + iMeth(i5));
            i6 += -131;
            i6 += (int)Test.instanceCount;
            for (d2 = i5; 11 > d2; d2++) {
                for (i13 = i5; i13 < 1; i13++) {
                    i6 *= (int)Test.instanceCount;
                    i14 += (i13 - i12);
                    i14 += (i13 * i13);
                    i14 += (int)-3L;
                    i14 += 11135;
                    i12 = (int)d2;
                    f2 += i15;
                }
                d3 = f2;
                Test.lArrFld[(int)(d2 + 1)] = Test.lArrFld[(int)(d2)];
            }
        }
        vMeth1_check_sum += i5 + i6 + Double.doubleToLongBits(d2) + i12 + i13 + i14 + Float.floatToIntBits(f2) + i15 +
            Double.doubleToLongBits(d3);
    }

    public static void vMeth(float f, int i3, int i4) {

        int i16=-128, i17=13910, i18=8, i19=-62, i20=-41, i21=35;
        boolean b1=false, bArr[]=new boolean[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-11051);
        FuzzerUtils.init(bArr, true);

        vMeth1();
        for (i16 = 122; 4 < i16; i16 -= 2) {
            Test.byFld *= (byte)i3;
            i17 >>= i4;
            for (i18 = i16; i18 < 26; i18++) {
                sArr[i18 + 1] %= (short)(i3 | 1);
                i3 += (((i18 * Test.instanceCount) + i4) - i19);
                i3 += i18;
                i19 >>= i17;
                Test.instanceCount *= -26;
                for (i20 = 1; i20 < 1; i20++) {
                    f += i17;
                    i19 %= -83;
                    i3 += (int)-4147241994L;
                }
                bArr[i18 + 1] = b1;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i16 + i17 + i18 + i19 + i20 + i21 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-173, i1=-14906, i2=-3, i22=77, i23=-4178, i24=-8, i25=-59505, i26=21, i27=52202, i28=202;
        double d=0.84304;
        short s=11797;
        float f3=-25.693F;
        boolean b2=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)34);

        Test.iArrFld[(i >>> 1) % N] *= (int)d;
        for (i1 = 150; i1 > 3; i1 -= 3) {
            i &= (i++);
            vMeth(Test.fFld, 72, i);
            i = Test.byFld;
            i2 += (i1 ^ i);
        }
        i2 += i2;
        i2 = -9;
        for (i22 = 3; i22 < 346; ++i22) {
            i += i;
            for (i24 = 3; 73 > i24; i24++) {
                i23 = i;
                Test.instanceCount = i2;
                Test.fFld += i25;
                s += (short)i24;
                byArr[i22] -= (byte)Test.fFld;
                for (f3 = i22; 2 > f3; ++f3) {
                    i25 -= i2;
                    Test.lArrFld[(int)(f3)][(int)(f3 + 1)] = 198;
                    d *= 4;
                    i26 <<= i22;
                    i23 <<= (int)Test.instanceCount;
                    if (b2) break;
                }
                i2 = (int)2.470F;
                i23 /= 247;
                i2 *= i22;
            }
            i += (int)d;
            for (i27 = 4; 73 > i27; ++i27) {
                Test.instanceCount = Test.byFld;
                i28 = (int)d;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
