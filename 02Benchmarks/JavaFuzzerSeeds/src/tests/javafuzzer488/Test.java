package tests.javafuzzer488;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:35:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=174L;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 229);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i10) {

        float f=-61.752F;
        int i11=-12, i12=-123, i13=-2, i14=187, i15=47665, i16=116, i17=-13;
        short s=4760;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -68.77755);

        for (f = 16; 381 > f; ++f) {
            if (Test.bFld) continue;
            i10 = i11;
            Test.instanceCount = i11;
        }
        for (i12 = 16; i12 < 347; i12++) {
            for (i14 = 5; i14 > i12; --i14) {
                if (Test.bFld) {
                    dArr[i14] = 1678977999462224324L;
                    for (i16 = 1; i16 < 1; ++i16) {
                        i13 = i11;
                        s += (short)i16;
                        if (Test.bFld) continue;
                        Test.instanceCount += (long)f;
                        i17 %= (int)(i10 | 1);
                        i11 = i13;
                    }
                } else {
                    if (i15 != 0) {
                        vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + s
                            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l1, int i9) {


        i9 = (int)l1;
        vMeth1(14);
        vMeth_check_sum += l1 + i9;
    }

    public static int iMeth(int i4, long l, int i5) {

        double d1=-123.124593;
        int i6=30, i7=-12, i8=0, i18=-11;
        byte by1=-31, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)29);

        for (d1 = 7; d1 < 288; d1++) {
            i6 += Integer.reverseBytes((int)((++l) & l));
            if (i5 != 0) {
            }
        }
        i5 = (i4++);
        for (i7 = 6; i7 < 224; i7++) {
            if (Test.bFld) {
                vMeth(l, i6);
                i5 += i7;
                i18 = 1;
                do {
                    double d2=61.59331;
                    i4 -= (int)l;
                    i8 += (((i18 * i5) + i18) - Test.instanceCount);
                    switch (((13 >>> 1) % 2) + 77) {
                    case 77:
                        if (false) break;
                        i6 >>= by1;
                        i8 ^= (int)12L;
                        break;
                    case 78:
                        d2 -= i18;
                        break;
                    }
                } while (++i18 < 7);
            }
        }
        long meth_res = i4 + l + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i18 + by1 +
            FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=38550, i1=7, i2=-77, i3=-4, i19=-40056, i20=-12429, i21=9, i22=-5936, i23=146, i24=-10605;
        float f1=10.112F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.226F);

        for (i = 1; 369 > i; ++i) {
            for (i2 = 68; i2 > 1; i2 -= 3) {
                double d=39.38005;
                d -= (iMeth(i, Test.instanceCount, i1) / (i | 1));
                for (i19 = 1; i19 < 4; ++i19) {
                    Test.instanceCount = i2;
                    f1 -= i19;
                    i20 += i19;
                    i1 >>>= i1;
                    Test.instanceCount = Test.instanceCount;
                    Test.instanceCount += (((i19 * i19) + i) - i2);
                    Test.instanceCount += i1;
                    Test.bFld = Test.bFld;
                }
                f1 *= i2;
                i3 = i;
                i3 = i19;
                if (Test.bFld) continue;
                i1 <<= (int)Test.instanceCount;
                switch (((i2 % 1) * 5) + 116) {
                case 119:
                    i20 = i2;
                    i20 = (int)f1;
                    d += 313L;
                }
                i1 <<= i3;
            }
            fArr[i] += i2;
            for (i21 = 4; i21 < 68; i21++) {
                if (Test.bFld) continue;
                Test.iArrFld[i] += (int)Test.instanceCount;
                for (i23 = 2; i23 > 1; i23 -= 3) {
                    i1 += (((i23 * f1) + Test.instanceCount) - i23);
                }
                i3 += (i21 * Test.instanceCount);
            }
            Test.instanceCount = -1;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
