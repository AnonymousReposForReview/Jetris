package tests.javafuzzer1526;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:10:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5768671206724987281L;
    public static byte byFld=4;
    public int iFld=-200;
    public boolean bFld=false;
    public short sFld=15989;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {

        int i6=-3, i7=20329, i8=115, iArr[]=new int[N];
        float f2=-40.335F;
        double d1=33.3317;

        FuzzerUtils.init(iArr, -19185);

        Test.instanceCount = i5;
        i6 = 1;
        do {
            i5 += (int)f2;
            iArr[i6] += (int)d1;
            for (i7 = 1; i7 < 6; i7++) {
                i8 += i7;
                f2 *= Test.byFld;
            }
            switch ((((i8 >>> 1) % 2) * 5) + 32) {
            case 41:
                Test.instanceCount += (2 + (i6 * i6));
            case 42:
                i5 += i7;
                break;
            }
        } while (++i6 < 298);
        iArr[(109 >>> 1) % N] = (int)d1;
        i5 += i6;
        i5 >>= i8;
        Test.instanceCount <<= 12013;
        f2 = -6.980F;
        vMeth1_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i7 + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i2, int i3, float f1) {

        int i10=-246, i11=-12, iArr1[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, -90);

        vMeth1(i3, i2);
        for (int i9 : iArr1) {
            i10 = 1;
            while (++i10 < 4) {
                i9 -= (int)Test.instanceCount;
                i2 = (int)f1;
                i2 -= (int)f1;
                i11 = 1;
                do {
                    i2 %= (int)(i11 | 1);
                    i2 = i11;
                    i9 += (i11 * i11);
                    Test.byFld *= (byte)i3;
                    i3 = i2;
                    if (i9 != 0) {
                    }
                    i3 += i11;
                    if (b) continue;
                } while (++i11 < 1);
            }
        }
        long meth_res = i2 + i3 + Float.floatToIntBits(f1) + i10 + i11 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1, double d) {

        float f=62.386F;
        long lArr[]=new long[N];
        int iArr2[]=new int[N];

        FuzzerUtils.init(lArr, -3329851241L);
        FuzzerUtils.init(iArr2, 181);

        f += i1;
        lArr[(-6 >>> 1) % N] = iMeth(33039, i, f);
        iArr2[(-44 >>> 1) % N] *= i1;
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d2=-1.57277, dArr[]=new double[N];
        long l=-1128796732847346515L, lArr1[][]=new long[N][N];
        int i12=-40665, i13=-27817, i14=17629, i15=205, i16=2836, i17=-132, iArr3[]=new int[N];
        float f3=-1.211F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.489F);
        FuzzerUtils.init(dArr, -2.101473);
        FuzzerUtils.init(lArr1, -3603916705L);
        FuzzerUtils.init(iArr3, 186);

        vMeth(iFld, iFld, d2);
        for (l = 17; l < 312; ++l) {
            bFld = bFld;
            fArr[(int)(l + 1)] -= i12;
            dArr[(int)(l + 1)] -= iFld;
            for (i13 = 2; i13 < 85; i13++) {
                iFld += iFld;
                i12 += (int)101.32238;
                Test.instanceCount += (-8 + (i13 * i13));
                i12 = (int)Test.instanceCount;
                switch (((i12 >>> 1) % 6) + 12) {
                case 12:
                    lArr1[i13][(int)(l)] *= -13;
                    if (bFld) {
                        iFld -= 6632;
                        i12 = (int)Test.instanceCount;
                        for (i15 = 1; i15 < 2; i15++) {
                            iFld <<= i15;
                            i16 -= (int)f3;
                            Test.instanceCount += i15;
                            sFld |= (short)i12;
                            i12 = i12;
                            iArr3[i13 - 1] ^= sFld;
                            if (bFld) continue;
                            iArr3[i15 - 1] &= i13;
                            i17 = i12;
                            iFld += -1;
                        }
                        if (false) continue;
                    } else {
                        i14 -= (int)6.48034;
                    }
                    break;
                case 13:
                    i17 -= i12;
                    break;
                case 14:
                    Test.instanceCount += i13;
                    break;
                case 15:
                    i17 = i13;
                    break;
                case 16:
                    f3 = l;
                case 17:
                    Test.instanceCount = i15;
                default:
                    i14 -= i12;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
