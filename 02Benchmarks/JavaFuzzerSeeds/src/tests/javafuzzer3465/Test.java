package tests.javafuzzer3465;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:49:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static double dFld=-2.52923;
    public static short sFld=-16317;
    public static float fFld=34.536F;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i8=-14, i9=-219, i10=-10, i11=-3, i12=14;
        float f=-50.134F;
        boolean b=false;
        long l=-422298317430813752L;
        short s1=-184;

        for (i8 = 19; 336 > i8; i8++) {
            for (i10 = i8; i10 < 5; i10++) {
                Test.instanceCount += i10;
                Test.dFld -= i11;
                for (f = i10; f < 1; ++f) {
                    try {
                        i11 = (i9 / -81);
                        i12 = (Test.iArrFld[i8 + 1][i10 + 1] / -1489576788);
                        i12 = (i8 % i10);
                    } catch (ArithmeticException a_e) {}
                    i11 += (int)(-1.629F + (f * f));
                    if (b) continue;
                    switch ((int)(((f % 7) * 5) + 57)) {
                    case 71:
                        i9 += i9;
                        i12 += -34;
                        break;
                    case 65:
                        i9 += (int)(((f * i10) + i8) - i12);
                        i9 += i12;
                        break;
                    case 68:
                        Test.iArrFld[i10][(int)(f)] += i11;
                        l += (long)1.1014F;
                        break;
                    case 62:
                        i9 = s1;
                    case 87:
                        if (false) break;
                        break;
                    case 64:
                        Test.iArrFld[(int)(f)][i10] -= (int)Test.dFld;
                        break;
                    case 63:
                        i12 *= (int)l;
                    }
                }
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + i12 + (b ? 1 : 0) + l + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i3=-40244, i4=-45, i5=-231, i6=112, i7=-239, i13=-229, i14=4;
        boolean b1=true;
        float f1=0.776F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -87534059L);

        i3 = 1;
        do {
            for (i4 = 1; i4 < 6; ++i4) {
                for (i6 = 1; i6 < 2; i6++) {
                    lArr[i3 + 1] = lMeth();
                    b1 = true;
                    i5 += i6;
                    b1 = false;
                    if (b1) break;
                    i7 <<= i7;
                }
                i5 += i4;
                for (i13 = 1; i13 < 2; ++i13) {
                    i7 += (((i13 * f1) + i5) - i7);
                    i14 = -8;
                    Test.dFld -= Test.instanceCount;
                    f1 = Test.sFld;
                }
            }
        } while (++i3 < 275);
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + (b1 ? 1 : 0) + i13 + i14 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i, int i1) {

        int i2=-16810, i15=-179, i16=13476, i17=198, i18=56458, iArr[]=new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, 58763);

        Test.iArrFld[(i1 >>> 1) % N][(i1 >>> 1) % N] += (i = (-i2));
        vMeth1();
        Test.iArrFld[(i >>> 1) % N][(i1 >>> 1) % N] -= (int)Test.instanceCount;
        for (i15 = 172; i15 > 2; i15 -= 2) {
            i1 |= i15;
            i = i15;
        }
        i16 = i16;
        Test.instanceCount += 60410L;
        i16 += 162;
        i16 = i16;
        if (b2) {
            for (i17 = 9; i17 < 181; i17 += 2) {
                if (i16 != 0) {
                    vMeth_check_sum += i + i1 + i2 + i15 + i16 + i17 + i18 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                    return;
                }
                Test.iArrFld[i17 - 1][i17 - 1] -= (int)86.778F;
                i1 += -10;
            }
        } else {
            Test.instanceCount -= i;
        }
        vMeth_check_sum += i + i1 + i2 + i15 + i16 + i17 + i18 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d=24.49027;
        short s=-6402;
        int i20=-85, i21=-40554, i22=4, i23=33919, i24=-8, i25=-8, i26=29558, i27=-7, i28=-33209, i29=208, i30=-28122;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -2254356739L);

        d *= (-s);
        vMeth(i20, -11);
        for (i21 = 11; i21 < 363; ++i21) {
            lArr1[i21 + 1][i21 + 1] = Test.instanceCount;
        }
        Test.iArrFld[(i20 >>> 1) % N][(i22 >>> 1) % N] += i22;
        i22 = (int)Test.instanceCount;
        i20 *= i20;
        for (i23 = 11; 282 > i23; ++i23) {
            Test.fFld += 33;
            switch (((i23 % 6) * 5) + 119) {
            case 135:
                i24 >>= i24;
                Test.instanceCount = Test.instanceCount;
                for (i25 = 1; i25 < 93; i25++) {
                    Test.instanceCount &= Test.instanceCount;
                    i22 *= i20;
                    i20 += (i25 * i25);
                }
                for (i27 = 1; i27 < 93; ++i27) {
                    Test.iArrFld[i23 - 1] = Test.iArrFld[i23 + 1];
                    for (i29 = 1; i29 < 2; i29++) {
                        Test.dFld *= -99.41853;
                    }
                    switch (((i26 >>> 1) % 2) + 17) {
                    case 17:
                    case 18:
                        i20 += (int)Test.fFld;
                        i30 += 11;
                        d += i22;
                        break;
                    default:
                        Test.sFld *= (short)i25;
                        i22 += (((i27 * i25) + i23) - i20);
                        i28 -= (int)Test.dFld;
                    }
                    i24 += i28;
                    i20 += (-122 + (i27 * i27));
                    i26 = i30;
                }
                break;
            case 128:
                Test.fFld += Test.instanceCount;
                break;
            case 143:
                i22 += (int)-175L;
                break;
            case 126:
                i22 -= i24;
                break;
            case 136:
                Test.instanceCount += (i23 * i23);
                break;
            case 142:
                Test.fFld += -2.356F;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
