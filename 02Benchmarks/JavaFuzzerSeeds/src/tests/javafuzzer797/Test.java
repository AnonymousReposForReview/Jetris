package tests.javafuzzer797;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:06:15 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3584985939L;
    public short sFld=-32328;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -216);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1, int i9) {

        float f1=96.246F, f2=83.792F;
        int i10=-48129, i11=-2, i12=-111, i13=-7, i14=-5, i15=-129;
        short s1=3095;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -1579930790L);

        for (f1 = 13; f1 < 224; f1++) {
            l1 = -8;
        }
        i9 <<= (int)l1;
        i11 = 1;
        do {
            byte by1=-42;
            Test.iArrFld[i11] = i11;
            i9 += (((i11 * by1) + by1) - l1);
            for (i12 = 1; i12 < 5; ++i12) {
                Test.instanceCount -= i12;
                for (i14 = 2; i14 > 1; i14--) {
                    f2 += f2;
                    lArr[i12][i12 + 1] = (long)f1;
                    by1 &= (byte)i15;
                    s1 -= (short)-43590;
                    i15 = 206;
                    i10 &= i14;
                }
            }
        } while (++i11 < 367);
        long meth_res = l1 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + i15 +
            Float.floatToIntBits(f2) + s1 + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        int i2=10, i3=-17208, i4=60217, i5=-167, i6=32255, i7=224, i8=-160;
        byte by=-103;
        double d=2.36379;
        short s=-15073;
        long l=-46664L;
        float f=-22.470F;

        for (i2 = 10; 188 > i2; ++i2) {
            for (i4 = 1; 9 > i4; i4++) {
                i3 = (by++);
                for (i6 = 1; 2 > i6; i6++) {
                    d -= ((i2 * i2) - ((-2.71253 + (-162 + (++i3))) + Math.max(i7, i7)));
                    i1 = (int)(((Test.iArrFld[i6]--) * Math.max(Test.instanceCount, 532L)) * ((s - i3) + (s++)));
                    i5 -= i7;
                    l += (long)((++i3) - f);
                    Test.iArrFld = Test.iArrFld;
                    Test.iArrFld[i2] -= (int)(d++);
                    l = (i1--);
                    i1 &= (i6 + Integer.reverseBytes(18215 + (i6 - i2)));
                }
            }
            i8 = 1;
            do {
                l -= Test.instanceCount;
                f *= ((-(0.371F + (i7 * i4))) * iMeth1(Test.instanceCount, 9936));
            } while (++i8 < 9);
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + by + i6 + i7 + Double.doubleToLongBits(d) + s + l +
            Float.floatToIntBits(f) + i8;
    }

    public static int iMeth(int i) {

        float f3=1.618F;
        int i16=-24507, i17=34955, i18=-30701, i19=145, i20=31032, i21=-1, i22=11;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -4066539447L);

        i += -59762;
        vMeth(i);
        for (f3 = 1; f3 < 275; f3++) {
            lArr1[(int)(f3)] >>= -64164;
            i17 &= i17;
            i18 = 1;
            do {
                i += i16;
                Test.instanceCount += -32L;
                for (i19 = 1; i19 < 1; ++i19) {
                    i20 = i17;
                    i20 -= 27923;
                    Test.instanceCount += (((i19 * i18) + i19) - Test.instanceCount);
                }
                for (i21 = 1; i21 < 1; ++i21) {
                    i = i21;
                    Test.iArrFld[(int)(f3 + 1)] = -64535;
                }
            } while (++i18 < 6);
        }
        long meth_res = i + Float.floatToIntBits(f3) + i16 + i17 + i18 + i19 + i20 + i21 + i22 +
            FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i23=48648, i24=231, i25=60, i26=212, i27=-53538, i28=61;
        double d1=-76.83365;
        float f4=124.40F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        iMeth(i23);
        i23 = (int)d1;
        i24 = 244;
        do {
            byte by2=47;
            i23 = by2;
            f4 -= i23;
        } while (--i24 > 0);
        f4 = -26;
        Test.iArrFld[(i23 >>> 1) % N] += (int)f4;
        for (i25 = 15; i25 < 255; i25++) {
            boolean b=false;
            sFld -= (short)i25;
            bArr[i25 + 1] = b;
            for (i27 = 3; i27 < 105; ++i27) {
                Test.instanceCount -= i24;
            }
        }
        Test.instanceCount = Test.instanceCount;
        Test.iArrFld[(i24 >>> 1) % N] += i28;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
