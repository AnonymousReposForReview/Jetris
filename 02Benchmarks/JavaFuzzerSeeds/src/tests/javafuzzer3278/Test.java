package tests.javafuzzer3278;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:32:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7800568993495474712L;
    public static volatile int iFld=-11;
    public static int iFld1=121;
    public static volatile double dFld=126.83098;
    public static boolean bFld=false;
    public static float fFld=0.594F;
    public short sFld=11714;
    public static long lFld=20095L;
    public static volatile int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -3);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=36924, i4=-14, i5=-155, i6=8, i7=-17, i8=162;
        double d=0.12391;
        byte by1=94;
        float f1=-2.184F;
        boolean b2=true;

        Test.iFld <<= (int)Test.instanceCount;
        for (i3 = 3; i3 < 148; i3++) {
            switch ((i3 % 1) + 108) {
            case 108:
                for (d = 1; 11 > d; ++d) {
                    if (Test.iFld1 != 0) {
                        vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + by1 + i7 + i8 +
                            Float.floatToIntBits(f1) + (b2 ? 1 : 0);
                        return;
                    }
                }
                break;
            }
            Test.iFld1 = i5;
            i4 += i3;
            i4 -= Test.iFld;
            i6 += i4;
            by1 ^= (byte)i6;
            for (i7 = 1; i7 < 11; i7++) {
                Test.instanceCount -= i5;
                f1 = 1;
                while (++f1 < 2) {
                    if (b2) break;
                    i6 += (int)-11222L;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + by1 + i7 + i8 + Float.floatToIntBits(f1) +
            (b2 ? 1 : 0);
    }

    public static void vMeth1() {

        boolean b=false, b1=true, bArr[]=new boolean[N];
        short s=-11019;
        float f=-90.840F, f2=29.935F;
        int i9=48, i10=25112, i11=41054, i12=10, iArr[][]=new int[N][N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, -118);

        b = (b1 = ((s = (short)Test.instanceCount) > (f + Test.iFld)));
        vMeth2();
        bArr[(Test.iFld >>> 1) % N] = b1;
        Test.iFld = Test.iFld1;
        for (i9 = 15; i9 < 379; ++i9) {
            for (f2 = 5; f2 > 1; f2 -= 3) {
                f *= (float)Test.dFld;
                Test.dFld -= i10;
                Test.instanceCount += (long)(f2 * f2);
            }
            if (i12 != 0) {
                vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + s + Float.floatToIntBits(f) + i9 + i10 +
                    Float.floatToIntBits(f2) + i11 + i12 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr);
                return;
            }
            Test.iFld1 = (int)97.32258;
        }
        f -= (float)Test.dFld;
        iArr[(i10 >>> 1) % N][(i11 >>> 1) % N] += i10;
        iArr[(i12 >>> 1) % N][(i9 >>> 1) % N] *= (int)Test.instanceCount;
        i11 ^= Test.iFld;
        vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + s + Float.floatToIntBits(f) + i9 + i10 +
            Float.floatToIntBits(f2) + i11 + i12 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(byte by, int i) {

        int i1=12813, i2=-12, i13=-12579, i14=-80, i15=-64219, i16=88, iArr1[][]=new int[N][N];
        short s1=649;
        float f3=63.264F;

        FuzzerUtils.init(iArr1, 58395);

        for (i1 = 10; i1 < 391; ++i1) {
            vMeth1();
            Test.iFld1 += (int)Test.instanceCount;
        }
        Test.iFld *= (int)Test.dFld;
        i2 += (int)-91.881F;
        for (i13 = 9; i13 < 336; i13 += 2) {
            for (i15 = 10; i15 > 1; --i15) {
                Test.instanceCount = i1;
                Test.iFld = s1;
                Test.instanceCount = (long)f3;
                Test.iArrFld[i15] += i;
                Test.dFld -= i16;
                Test.iFld1 += (i15 * i15);
                iArr1 = iArr1;
                f3 = Test.instanceCount;
            }
        }
        vMeth_check_sum += by + i + i1 + i2 + i13 + i14 + i15 + i16 + s1 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i17=6, i18=-1, i19=-26864, i20=-238, i21=11263, i22=10, i23=-2, i24=-1016, i25=-21144;
        byte by2=-73;
        long l=-3L;

        vMeth((byte)(35), Test.iFld1);
        for (i17 = 341; i17 > 21; i17 -= 2) {
            if (Test.bFld) break;
            iArrFld1 = iArrFld1;
            if (true) {
                for (i19 = 157; i19 > 9; i19--) {
                    for (i21 = i17; i21 < 2; ++i21) {
                        Test.instanceCount *= -6;
                        if (Test.bFld) continue;
                        i20 *= Test.iFld1;
                        Test.fFld += (i21 + i22);
                        by2 = (byte)Test.iFld1;
                        Test.fFld += ((long)i21 ^ (long)sFld);
                        by2 = (byte)Test.iFld;
                        i18 += (int)Test.dFld;
                        i20 >>= i18;
                    }
                    Test.instanceCount = i22;
                    Test.iArrFld[i19] = i18;
                    Test.fFld += (i19 + i17);
                }
                Test.fFld += 46;
                Test.instanceCount += (14 + (i17 * i17));
            } else {
                for (l = 157; i17 < l; l -= 2) {
                    i18 -= (int)l;
                    Test.dFld *= Test.lFld;
                }
                i22 += i18;
                for (i24 = 9; i24 < 157; i24++) {
                    Test.fFld += (i24 * Test.instanceCount);
                    sFld += (short)(83 + (i24 * i24));
                    Test.dFld += i18;
                    iArrFld1[i24 - 1] = sFld;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
