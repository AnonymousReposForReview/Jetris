package tests.javafuzzer2284;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:27:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8234623387942728126L;
    public static float fFld=-2.586F;
    public double dFld=0.96696;
    public static float fArrFld[]=new float[N];
    public static short sArrFld[]=new short[N];
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 106.195F);
        FuzzerUtils.init(Test.sArrFld, (short)-3465);
        FuzzerUtils.init(Test.lArrFld, -2500699401L);
        FuzzerUtils.init(Test.iArrFld, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3, float f) {

        int i4=102, i5=243, i6=90, i7=9, i8=156, i9=38522, i10=201, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 0);

        for (i4 = 11; 342 > i4; i4 += 2) {
            for (i6 = 1; 10 > i6; ++i6) {
                i7 += i6;
                Test.instanceCount = Test.instanceCount;
                i7 += i6;
                i3 <<= i4;
                i2 += 4;
                Test.fArrFld = Test.fArrFld;
                i5 -= i6;
                iArr[i4] = i6;
            }
            for (i8 = 1; i8 < 10; i8 += 2) {
                try {
                    iArr[i8 + 1] = (iArr[i4 + 1] % i5);
                    i5 = (i6 % i4);
                    iArr[i8 - 1] = (i7 / 7);
                } catch (ArithmeticException a_e) {}
            }
            i10 = 1;
            do {
                Test.sArrFld[i10 - 1] /= (short)-171;
                Test.fFld += (-2 + (i10 * i10));
            } while (++i10 < 10);
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr);
    }

    public short sMeth(long l) {

        int i11=-107;

        vMeth1(20173, i11, Test.fFld);
        i11 -= i11;
        i11 = i11;
        l = i11;
        Test.instanceCount += i11;
        Test.lArrFld[(-183 >>> 1) % N] >>= i11;
        l <<= -196;
        long meth_res = l + i11;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void vMeth() {

        int i=8, i1=37876, i12=-32147, i13=1, i14=-4543, i15=13, iArr1[]=new int[N];
        short s=8077;

        FuzzerUtils.init(iArr1, 46443);

        Test.fFld += Test.fFld;
        for (i = 320; i > 3; i -= 3) {
            i1 += i;
        }
        i1 *= (-sMeth(Test.instanceCount));
        for (i12 = 9; i12 < 304; ++i12) {
            i1 *= 5;
            Test.fFld *= i13;
            Test.instanceCount <<= i12;
            iArr1[i12 - 1] += (int)Test.instanceCount;
            Test.instanceCount = i;
            i1 += (int)Test.fFld;
            if (false) {
                for (i14 = 1; i14 < 6; i14++) {
                    i1 += (int)Test.fFld;
                    Test.fFld = i12;
                }
            } else {
                i1 += (((i12 * i15) + s) - s);
            }
        }
        vMeth_check_sum += i + i1 + i12 + i13 + i14 + i15 + s + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i16=-14500, i17=-36280, i18=81, i19=1, i20=2, i21=-63341, i22=155, i23=-4, i24=53067, i25=-190, i26=14,
            i27=-5, iArr2[]=new int[N];
        boolean b=false;
        byte by=-93;

        FuzzerUtils.init(iArr2, 3);

        vMeth();
        for (i16 = 5; i16 < 217; i16++) {
            i18 = 1;
            do {
                b = b;
                i17 -= (int)-88.39889;
                Test.lArrFld[i16 + 1] <<= Test.instanceCount;
                for (i19 = 1; i19 < 1; i19++) {
                    if (b) continue;
                    i20 += (((i19 * by) + Test.fFld) - Test.fFld);
                    iArr2[i16] *= (int)Test.fFld;
                    Test.instanceCount = by;
                    Test.instanceCount = i19;
                }
                b = false;
                for (i21 = i18; i21 < 1; ++i21) {
                    dFld = Test.fFld;
                    Test.instanceCount -= i16;
                }
                Test.instanceCount = -51916L;
            } while (++i18 < 118);
            try {
                i17 = (i16 / -61);
                i20 = (i20 % i20);
                i22 = (iArr2[i16 - 1] / i17);
            } catch (ArithmeticException a_e) {}
            by *= (byte)Test.instanceCount;
            Test.instanceCount = by;
            i17 += (i16 ^ i19);
            for (i23 = 3; i23 < 118; i23++) {
                for (i25 = 1; i25 < 2; i25++) {
                    i22 *= 30907;
                }
            }
            i22 = (int)Test.instanceCount;
        }
        i24 -= i16;
        dFld = Test.instanceCount;
        i27 = 1;
        while (++i27 < 294) {
            Test.iArrFld[i27] &= i16;
            i17 *= (int)-52.714F;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
