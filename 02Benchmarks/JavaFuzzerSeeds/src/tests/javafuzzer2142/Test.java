package tests.javafuzzer2142;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:22:29 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-14L;
    public static double dFld=-1.65104;
    public static int iFld=-1952;

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i6, int i7) {

        int i8=-13, i9=11511, i10=24789, i11=-77, i12=10, iArr1[]=new int[N];
        byte by=-35;
        float f=-1.510F, f1=-37.264F;
        boolean b=true;

        FuzzerUtils.init(iArr1, 70);

        for (i8 = 10; 287 > i8; i8++) {
            i10 = 1;
            do {
                i6 = i11;
                by -= (byte)i9;
                for (f = 1; f < 1; f++) {
                    iArr1[i8] += i8;
                    f1 = -54;
                    l += (long)(((f * Test.instanceCount) + l) - i6);
                    f1 = -26225;
                    i11 += (int)(f * f);
                    i12 *= i11;
                }
                by += (byte)(i10 | (long)f);
                Test.dFld += 0;
            } while (++i10 < 6);
            if (b) continue;
            i9 += (((i8 * f) + Test.instanceCount) - i6);
        }
        vMeth1_check_sum += l + i6 + i7 + i8 + i9 + i10 + i11 + by + Float.floatToIntBits(f) + i12 +
            Float.floatToIntBits(f1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1) {

        int i2=-39169, i3=-89, i4=-6, i5=35765, i13=-29371, i14=211, i15=207, i16=58044, i17=62384, iArr2[]=new int[N];
        double d=2.86126;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, -41332);
        FuzzerUtils.init(fArr, 73.51F);

        for (i2 = 3; i2 < 309; ++i2) {
            for (i4 = i2; i4 < 5; i4 += 3) {
                vMeth1(Test.instanceCount, i3, i4);
                for (i13 = 1; i13 < 1; ++i13) {
                    Test.dFld -= 12;
                }
                for (i15 = 1; i15 < 1; ++i15) {
                    float f2=-87.884F;
                    iArr2[i2] = i16;
                    i14 += (i15 * Test.iFld);
                    d -= i3;
                    fArr[i2] += i1;
                    i1 += (((i15 * f2) + i3) - i3);
                    f2 = Test.instanceCount;
                    iArr2[i2] = (int)Test.instanceCount;
                }
                try {
                    iArr2[i4] = (iArr2[i4] % -18196);
                    Test.iFld = (i2 / i14);
                    i17 = (i16 / iArr2[i4 - 1]);
                } catch (ArithmeticException a_e) {}
                iArr2[i2 - 1] >>= i2;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d) + i17 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static float fMeth() {

        int i18=6, i19=-28984, i20=50, iArr3[]=new int[N];
        float f3=5.839F;
        long l1=-247L;
        byte by1=-14;

        FuzzerUtils.init(iArr3, 48793);

        vMeth(Test.iFld);
        i18 = 1;
        do {
            f3 -= Test.iFld;
        } while (++i18 < 340);
        f3 += Test.instanceCount;
        Test.instanceCount = Test.instanceCount;
        for (i19 = 22; i19 < 365; ++i19) {
            boolean b1=true;
            Test.iFld = (int)l1;
            i20 += (i19 * i19);
            Test.iFld = Test.iFld;
            l1 >>= -175;
            iArr3[i19 - 1] = i18;
            switch (((i19 % 6) * 5) + 116) {
            case 137:
                Test.iFld = Test.iFld;
                i20 += (i19 ^ i19);
                i20 >>= i19;
                break;
            case 146:
                Test.dFld = Test.iFld;
                break;
            case 143:
                i20 = (int)Test.instanceCount;
            case 139:
                b1 = b1;
                break;
            case 136:
                by1 = (byte)Test.iFld;
                break;
            case 121:
                if (i18 != 0) {
                }
                break;
            }
        }
        long meth_res = i18 + Float.floatToIntBits(f3) + i19 + i20 + l1 + by1 + FuzzerUtils.checkSum(iArr3);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i21=-45860, i22=0, i23=-56229, i24=113, i25=-209, i26=61, i27=7, i28=-12, iArr[]=new int[N];
        float f4=-1.489F;
        short s=-20123;
        byte by2=-115;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -201);
        FuzzerUtils.init(lArr, -14L);

        for (int i : iArr) {
            fMeth();
            i <<= i;
        }
        for (i21 = 253; i21 > 5; --i21) {
            f4 += (((i21 * i21) + i22) - Test.instanceCount);
            i22 <<= Test.iFld;
            iArr[i21 - 1] -= Test.iFld;
            Test.iFld -= -4;
            i22 *= Test.iFld;
        }
        for (i23 = 15; i23 < 368; i23 += 2) {
            s += (short)i23;
            i24 = (int)-4107041018L;
            Test.iFld += (i23 * i23);
            i25 = 1;
            while (++i25 < 143) {
                i24 -= (int)-143L;
                i24 = (int)Test.instanceCount;
                Test.iFld = (int)Test.dFld;
                for (i26 = i25; i26 < 1; i26++) {
                    Test.dFld = i25;
                    try {
                        Test.iFld = (i21 / -177);
                        i27 = (Test.iFld % -2087);
                        i28 = (i21 / i26);
                    } catch (ArithmeticException a_e) {}
                    f4 = -4721132927033878381L;
                    i22 *= by2;
                    i28 ^= (int)Test.instanceCount;
                    i22 *= (int)Test.instanceCount;
                }
            }
            Test.dFld = f4;
            switch (((i23 % 8) * 5) + 69) {
            case 75:
                f4 = i21;
                i27 += (((i23 * i23) + i27) - Test.instanceCount);
                i27 += (i23 * i23);
            case 94:
                i24 += Test.iFld;
                break;
            case 74:
                if (b2) break;
                break;
            case 93:
                i22 += i27;
                break;
            case 99:
                i27 += i23;
            case 79:
                Test.instanceCount = Test.iFld;
                break;
            case 72:
                i28 -= (int)f4;
                break;
            case 108:
            default:
                if (b2) continue;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
