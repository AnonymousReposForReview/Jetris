package tests.javafuzzer765;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:10:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=53829L;
    public static double dFld=-67.73057;
    public int iFld=-18218;
    public volatile float fFld=1.81F;
    public long lFld=-12L;
    public int iFld1=-14;
    public byte byFld=24;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 180);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, float f, long l1) {

        int i3=-14, i4=-53088, i5=54, i6=-11318, i7=1, i8=-4, i10=-234, i11=7;
        float f1=99.337F;

        i2 = (int)Test.instanceCount;
        for (i3 = 2; i3 < 321; i3++) {
            i5 = 5;
            do {
                f -= i2;
                for (f1 = 3; f1 > i5; f1 -= 3) {
                    Test.iArrFld[i5] >>= (int)Test.instanceCount;
                }
                for (i7 = 1; i7 < 3; i7++) {
                    int i9=-73;
                    i6 += (i7 ^ i2);
                    i4 -= i2;
                    i9 += i8;
                    i9 >>= i3;
                }
                for (i10 = 3; i10 > i3; i10 -= 2) {
                    i11 += (86 + (i10 * i10));
                    Test.instanceCount <<= Test.instanceCount;
                    Test.iArrFld[i5 - 1] = i5;
                }
            } while ((i5 -= 3) > 0);
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f) + l1 + i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + i8
            + i10 + i11;
    }

    public static short sMeth(long l, int i, int i1) {

        float f2=48.980F;
        boolean b=false;
        long l2=-54420L;
        int i12=-6, i13=11, i14=12, i15=-9, i16=8106;
        byte by=47;

        vMeth1(i1, f2, Test.instanceCount);
        f2 -= i1;
        b = b;
        i = i;
        for (l2 = 2; l2 < 355; ++l2) {
            for (i13 = 5; i13 > 1; i13 -= 2) {
                f2 += (i13 + f2);
                for (i15 = 1; i15 < 3; i15++) {
                    i1 = (int)l;
                    i12 = i;
                    i14 = 93;
                    switch (((i1 >>> 1) % 2) + 30) {
                    case 30:
                        by += (byte)(i15 + i16);
                        break;
                    case 31:
                        f2 = i;
                        break;
                    default:
                        i16 |= i1;
                    }
                }
            }
        }
        long meth_res = l + i + i1 + Float.floatToIntBits(f2) + (b ? 1 : 0) + l2 + i12 + i13 + i14 + i15 + i16 + by;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth() {

        int i17=-125, i18=15, i19=6, i20=-41, i21=-217;
        float f3=1.31F, fArr[]=new float[N];
        short s=18080;

        FuzzerUtils.init(fArr, 98.346F);

        Test.instanceCount -= (sMeth(Test.instanceCount, i17, i17) + i17);
        Test.iArrFld[(i17 >>> 1) % N] *= (int)f3;
        for (i18 = 5; i18 < 294; i18++) {
            Test.iArrFld[i18] = (int)Test.instanceCount;
            fArr[i18] *= i18;
            for (i20 = 6; i20 > 1; --i20) {
                Test.instanceCount = (long)4.329F;
                fArr[i18 + 1] = -4;
                Test.instanceCount <<= s;
                i19 = (int)Test.instanceCount;
                f3 += i20;
                Test.instanceCount += (i20 + i17);
                Test.iArrFld[i20 + 1] += (int)-3L;
            }
            i17 -= i19;
            i17 = i19;
        }
        vMeth_check_sum += i17 + Float.floatToIntBits(f3) + i18 + i19 + i20 + i21 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i22=-9, i23=8625, i24=-170, i25=-58876, i26=-41059, i27=-105, i28=-159, i29=216, i30=-197;
        boolean b1=false;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 1.505F);

        vMeth();
        i22 += i22;
        Test.dFld += 115;
        for (i23 = 7; i23 < 137; ++i23) {
            iFld *= i22;
            for (i25 = 6; i25 < 193; i25++) {
                Test.iArrFld[i25 - 1] <<= (int)-6265329313826483632L;
                i24 += (4333 + (i25 * i25));
                i24 += (((i25 * i26) + i26) - fFld);
                if (b1) {
                    Test.dFld *= lFld;
                    lFld ^= 9;
                    i22 = i26;
                } else if (true) {
                    for (i27 = i25; 2 > i27; i27++) {
                        i22 += (-85 + (i27 * i27));
                        lFld = i22;
                        iFld1 -= i25;
                        iFld1 += (((i27 * byFld) + i28) - iFld);
                        if (b1) break;
                        Test.instanceCount *= (long)-110.298F;
                        Test.iArrFld[i23 - 1] <<= (int)-57261L;
                        fArr1[i27 - 1] *= i28;
                    }
                    for (i29 = 1; 2 > i29; i29++) {
                        fFld /= 13;
                        iFld = i23;
                        iFld1 = i28;
                        Test.iArrFld[i23 - 1] += (int)-11L;
                        Test.iArrFld[i29] = (int)-2863706003L;
                        Test.dFld -= 10240;
                        Test.instanceCount >>= i25;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
