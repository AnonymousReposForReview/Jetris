package tests.javafuzzer800;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:12:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static double dFld=0.35381;
    public static boolean bFld=false;
    public int iFld=-41375;
    public short sFld=-13418;
    public float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3) {

        int i4=1, i5=1, i6=-31319, i7=-16797, i8=237, i9=-235, i10=-3;
        double d=122.4417;
        float f1=-1.113F;
        short s1=23696;

        Test.dFld -= i3;
        i3 <<= 38505;
        for (i4 = 15; i4 < 326; ++i4) {
            i5 -= (int)Test.instanceCount;
            for (i6 = 1; i6 < 5; ++i6) {
                i5 = (int)Test.instanceCount;
            }
            Test.instanceCount -= Test.instanceCount;
        }
        for (d = 210; d > 12; d--) {
            i5 += -23042;
            f1 = i5;
            if (Test.bFld) {
                Test.dFld -= 49.509F;
            } else if (Test.bFld) {
                for (i9 = 8; i9 > d; i9 -= 2) {
                    s1 = (short)Test.instanceCount;
                    i5 += i9;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + Float.floatToIntBits(f1) + i9 +
            i10 + s1;
    }

    public static void vMeth1() {

        int i11=51968, i12=-11, i13=0, i14=-19940, iArr1[]=new int[N];
        float f2=-37.778F, f3=80.213F;
        byte by=-42;

        FuzzerUtils.init(iArr1, 2);

        vMeth2(-26265);
        for (i11 = 5; i11 < 197; ++i11) {
            Test.instanceCount += (((i11 * Test.instanceCount) + i11) - i12);
            if (Test.bFld) {
                i12 -= (int)Test.instanceCount;
            }
            f2 += (28 + (i11 * i11));
            by += (byte)(14 + (i11 * i11));
            f3 = 1;
            while (++f3 < 8) {
                i12 >>>= by;
                Test.instanceCount = i11;
                iArr1[i11] += i12;
                for (i13 = 1; 1 < i13; i13 -= 3) {
                    i14 += (26279 + (i13 * i13));
                }
                i14 *= i11;
                i12 &= i12;
            }
        }
        vMeth1_check_sum += i11 + i12 + Float.floatToIntBits(f2) + by + Float.floatToIntBits(f3) + i13 + i14 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(long l, short s, long l1) {


        vMeth1();
        iFld += (int)1472920410351570982L;
        vMeth_check_sum += l + s + l1;
    }

    public void mainTest(String[] strArr1) {

        float f=121.329F;
        int i=-145, i1=-25612, i2=-12, i15=101, i16=30982, i17=56778, i18=-148, i19=-40880, i20=-5, i21=-159,
            iArr[]=new int[N];

        FuzzerUtils.init(iArr, -2);

        f *= (((i + 17) - (i + i)) + (f * (18710 - (i + Test.instanceCount))));
        for (i1 = 13; i1 < 257; ++i1) {
            i += i1;
            iArr[i1 + 1] /= (int)(Test.instanceCount | 1);
        }
        vMeth(-10522690367743973L, sFld, -1553916674L);
        for (i15 = 271; i15 > 14; i15--) {
            i ^= iFld;
            if (Test.bFld) continue;
            f += (((i15 * i16) + i16) - i16);
            f = i15;
            iFld -= (int)Test.instanceCount;
        }
        i = i1;
        Test.instanceCount |= 50726L;
        i17 = 1;
        do {
            i2 *= i16;
        } while (++i17 < 182);
        fArrFld[(i1 >>> 1) % N] -= Test.instanceCount;
        i16 *= (int)f;
        Test.instanceCount = i15;
        Test.instanceCount ^= Test.instanceCount;
        iArr[(i1 >>> 1) % N] -= (int)Test.dFld;
        i18 = 1;
        do {
            for (i19 = i18; i19 < 106; ++i19) {
                i2 >>= i;
                i21 = 1;
                while (--i21 > 0) {
                    if (Test.bFld) continue;
                }
            }
            Test.instanceCount = i;
            i += (int)f;
            sFld += (short)(40743L + (i18 * i18));
            try {
                i16 = (i21 / 1823956465);
                i20 = (-1650219132 % i2);
                iArr[i18 - 1] = (iArr[i18 - 1] % i16);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount *= i21;
        } while (++i18 < 237);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
