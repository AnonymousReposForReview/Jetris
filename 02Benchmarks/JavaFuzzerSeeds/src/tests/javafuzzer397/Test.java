package tests.javafuzzer397;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:16:50 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=40L;
    public static short sFld=14655;
    public static boolean bFld=false;
    public int iArrFld[]=new int[N];
    public static volatile int iArrFld1[]=new int[N];
    public long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -50234);
        FuzzerUtils.init(Test.fArrFld, 2.432F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {

        int i5=2015, i6=110, i7=32221, i8=-6;
        boolean b1=true;
        double d=-1.7364, d1=24.120640, d2=-118.99186;

        for (i5 = 9; i5 < 219; i5++) {
            Test.instanceCount += i5;
            b1 = b1;
            for (d = 8; d > 1; d -= 2) {
                d1 *= i6;
                f = (float)d;
                Test.iArrFld1[(int)(d)] -= (int)Test.instanceCount;
                i7 += (int)d;
                d2 = 1;
                while (++d2 < 3) {
                    d1 *= i8;
                    switch ((i5 % 2) + 51) {
                    case 51:
                        if (b1) continue;
                        break;
                    case 52:
                        Test.instanceCount = 28374;
                        i7 = (int)Test.instanceCount;
                        break;
                    default:
                        Test.instanceCount += (long)((long)d2 | i8);
                    }
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i5 + i6 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i7 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i8;
    }

    public void vMeth1(long l) {

        int i3=-5, i4=4617, i9=-22965, i10=242, i11=-230, i12=3;
        long l1=-2115274128L;

        for (i3 = 8; i3 < 297; i3 += 3) {
            i4 = Math.min((int)(iArrFld[i3 - 1] *= (int)(Test.instanceCount - i3)), (59485 + (-(--i4))) * (-224 * (i4 &
                -226)));
            vMeth2(-2.739F);
        }
        i4 = i4;
        if (Test.bFld) {
            for (i9 = 4; i9 < 172; ++i9) {
                if (i4 != 0) {
                    vMeth1_check_sum += l + i3 + i4 + i9 + i10 + l1 + i11 + i12;
                    return;
                }
                i4 += i9;
            }
            for (l1 = 5; l1 < 339; ++l1) {
                i12 = 1;
                do {
                    l += i11;
                    Test.iArrFld1[(int)(l1)] = i9;
                    i11 -= (int)l;
                    lArrFld[i12] -= Test.sFld;
                    i11 += (i12 * i12);
                } while (++i12 < 5);
            }
        } else {
            i11 = (int)-3484808101L;
        }
        vMeth1_check_sum += l + i3 + i4 + i9 + i10 + l1 + i11 + i12;
    }

    public void vMeth(int i1, int i2, boolean b) {

        int i13=-8, i14=31039, i15=67, i16=-8, i17=4;
        double d3=-2.22199;

        if (Test.bFld) {
            vMeth1(Test.instanceCount);
            i13 = 1;
            while (++i13 < 313) {
                for (i14 = 5; i14 > 1; i14--) {
                    i1 = i1;
                    for (i16 = 1; 2 > i16; i16++) {
                        lArrFld[i13 - 1] = (long)d3;
                        i15 *= (int)Test.instanceCount;
                        Test.instanceCount *= Test.instanceCount;
                        switch ((i14 % 2) + 44) {
                        case 44:
                            i1 += i15;
                            i15 >>= (int)Test.instanceCount;
                            i17 = i15;
                            d3 *= -1.398F;
                            break;
                        case 45:
                            i2 += (65505 + (i16 * i16));
                        default:
                            Test.instanceCount = -2L;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d3);
    }

    public void mainTest(String[] strArr1) {

        int i=10217, i19=-1, i20=22032, i21=0, i22=0, i23=152, i24=29830, i25=-219, i26=-20, i27=-3, i28=9;
        long l2=-7080956328395911091L;
        float f1=-104.176F;
        byte by=-12;
        double d4=-40.130650;

        i = 155;
        while (--i > 0) {
            vMeth(i, i, Test.bFld);
        }
        for (int i18 : iArrFld) {
            for (l2 = 3; l2 < 63; ++l2) {
                for (i20 = 1; i20 < 2; ++i20) {
                    f1 -= 41;
                    i21 += i20;
                    iArrFld[i20] = i19;
                    i18 = i19;
                }
                by += (byte)(((l2 * Test.instanceCount) + i18) - i);
                f1 = Test.instanceCount;
                if (Test.bFld) continue;
            }
            i22 = 1;
            do {
                for (i23 = 1; 1 > i23; ++i23) {
                    Test.fArrFld[i23] += i21;
                    f1 -= l2;
                    i19 += (int)l2;
                    i19 <<= i24;
                    d4 -= Test.sFld;
                    i19 += 6;
                    Test.sFld = (short)i20;
                }
            } while (++i22 < 63);
            i19 >>= i22;
            for (i25 = 1; i25 < 63; ++i25) {
                i21 += i25;
                i21 *= i24;
                for (i27 = 1; i27 < 2; ++i27) {
                    switch (((i25 % 2) * 5) + 106) {
                    case 116:
                        i28 -= (int)l2;
                        f1 += l2;
                        Test.instanceCount += (long)d4;
                        break;
                    case 111:
                        f1 *= f1;
                    default:
                        f1 += (-45 + (i27 * i27));
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
