package tests.javafuzzer2196;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:07:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-58472L;
    public static byte byFld=25;
    public static volatile short sFld=-15716;
    public volatile int iFld=-1;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 9);
        FuzzerUtils.init(Test.lArrFld, 14L);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i2=175, i3=-25071, i4=-214, i5=-9, i6=77, i7=13;
        float f1=-1.458F;
        boolean b=false;

        for (i2 = 283; i2 > 7; i2--) {
            i3 -= i3;
            i3 = i2;
            i3 <<= i3;
            i3 >>>= i3;
            i3 = i2;
        }
        for (i4 = 10; i4 < 362; ++i4) {
            i3 *= i4;
            Test.instanceCount = i2;
            for (i6 = 1; i6 < 5; i6++) {
                f1 = 38254;
            }
            f1 = Test.instanceCount;
            i7 -= (int)f1;
        }
        b = true;
        Test.byFld = (byte)i7;
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + (b ? 1 : 0);
    }

    public static double dMeth(int i1, long l1) {

        int i8=-169, i9=-185, i10=-246;
        long l2=-9119202893553363504L;
        float f2=1.94F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-96);

        vMeth();
        i8 = 1;
        while (++i8 < 154) {
            for (i9 = 1; i9 < 10; ++i9) {
                l2 = 2;
                while ((l2 -= 3) > 0) {
                    Test.instanceCount *= l1;
                    byArr[i9] = (byte)i8;
                    l1 = 9;
                    i1 += (int)Test.instanceCount;
                    f2 = i1;
                    if (false) continue;
                    i10 += i8;
                }
            }
            switch (((i8 % 5) * 5) + 16) {
            case 36:
                l1 += i8;
                i10 += i8;
                l1 += -35791;
                break;
            case 28:
                i10 += (i8 ^ i1);
                break;
            case 33:
                Test.byFld *= (byte)i9;
            case 38:
                i10 += 3;
                break;
            case 20:
                f2 = Test.sFld;
                break;
            }
        }
        long meth_res = i1 + l1 + i8 + i9 + i10 + l2 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(byArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(long l, int i) {

        float f=0.356F;
        int i12=-209, i13=14, i14=-13, i15=216, i16=188, i17=-14;
        boolean b1=true;

        i *= (int)((Math.max(i, i) - (l--)) + Test.instanceCount);
        i -= (int)l;
        f = (float)dMeth(58385, l);
        i = i;
        for (i12 = 9; i12 < 264; i12++) {
            for (i14 = i12; i14 < 6; ++i14) {
                Test.lArrFld[i14 - 1] = i;
                for (i16 = 1; i16 < 1; ++i16) {
                    Test.iArrFld[i14 + 1] = i13;
                    i = 46998;
                    i17 += i15;
                    f = l;
                    if (b1) break;
                    i = i14;
                    i17 ^= i15;
                }
            }
        }
        long meth_res = l + i + Float.floatToIntBits(f) + i12 + i13 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {


        iMeth(Test.instanceCount, iFld);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
