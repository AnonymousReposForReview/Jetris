package tests.javafuzzer485;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:33:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-166L;
    public static double dFld=-2.15508;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static volatile float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -214);
        FuzzerUtils.init(Test.lArrFld, 7584677917962528010L);
        FuzzerUtils.init(Test.fArrFld, 115.872F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f1, int i6, float f2) {

        int i7=-7, i8=-93, i9=1566, i10=10, i11=-8, i12=80;
        boolean b=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 37.84290);

        i7 = 1;
        do {
            for (i8 = 1; 6 > i8; ++i8) {
                i6 = i6;
                if (b) continue;
                i10 = 1;
                while (++i10 < 2) {
                    Test.instanceCount = i7;
                    Test.iArrFld[i8] = i8;
                }
                Test.instanceCount -= (long)f1;
                Test.instanceCount = i7;
                for (i11 = 1; i11 < 2; i11++) {
                    Test.instanceCount = i12;
                    i12 = i6;
                    Test.iArrFld[i7] >>= i12;
                }
                Test.instanceCount = (long)f1;
                dArr[i8] = i9;
            }
        } while (++i7 < 270);
        long meth_res = Float.floatToIntBits(f1) + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + (b ? 1 : 0) + i10 +
            i11 + i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        double d=1.14737, dArr1[]=new double[N];
        int i2=-6, i3=5, i4=-12817, i5=65313, i13=-46488, i14=-17609, i15=-187, i16=-3;
        float f=1.868F, f3=-2.109F;
        short s=19560, sArr[]=new short[N];
        byte by1=-56;

        FuzzerUtils.init(dArr1, -75.12037);
        FuzzerUtils.init(sArr, (short)26715);

        d = (((i2 - -229L) * (++f)) * Integer.reverseBytes(i2 - s));
        i3 = 1;
        do {
            i2 += (i3 ^ i2);
            for (i4 = 1; i4 < 28; i4++) {
                Test.iArrFld[(11 >>> 1) % N] -= iMeth(f3, i5, f3);
                i5 = i4;
            }
            i2 += i5;
        } while ((i3 += 3) < 165);
        for (i13 = 231; i13 > 4; --i13) {
            for (i15 = 1; i15 < 7; ++i15) {
                i14 -= (int)f3;
                dArr1[i15 + 1] *= by1;
                Test.lArrFld[(i2 >>> 1) % N] += (long)d;
                sArr[i13 - 1] *= (short)-14;
            }
            Test.iArrFld[(i2 >>> 1) % N] &= 63618;
            Test.lArrFld[i13 + 1] <<= Test.instanceCount;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f) + s + i3 + i4 + i5 +
            Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i17=-202, i18=-44203, i19=22181, i20=-13, i21=-20364, i22=6;
        float f4=-100.108F;
        short s1=-17523;
        byte by2=42;
        boolean b1=false;

        vMeth1();
        for (i17 = 12; i17 < 361; ++i17) {
            f4 += s1;
            for (i19 = 5; i19 > i17; --i19) {
                i20 = s1;
                for (i21 = i17; i21 < 1; i21++) {
                    if (b1) {
                        Test.instanceCount ^= by2;
                        i18 += i20;
                        f4 = i22;
                        i18 += (int)Test.instanceCount;
                    } else {
                        i20 = i21;
                        Test.iArrFld = Test.iArrFld;
                        i20 += (((i21 * Test.instanceCount) + i19) - Test.instanceCount);
                    }
                    Test.fArrFld[i17 + 1][i21 + 1] += i21;
                }
            }
        }
        vMeth_check_sum += i17 + i18 + Float.floatToIntBits(f4) + s1 + i19 + i20 + i21 + i22 + by2 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i1=221, i23=-196, i24=-186, i25=7805, i26=-177, i27=-102, i28=-26605;
        byte by=32;
        long l=-45702L;
        float f5=-1.815F;
        boolean b2=true;

        for (i = 7; i < 155; ++i) {
            by >>>= (byte)(i1++);
            vMeth();
            Test.instanceCount = -7698499952347508262L;
            Test.instanceCount <<= i1;
            Test.iArrFld[i] = (int)Test.dFld;
            i1 += (int)Test.instanceCount;
            Test.lArrFld[i] = i1;
            i1 &= i;
            by = (byte)i1;
        }
        for (i23 = 18; i23 < 323; ++i23) {
            for (l = 3; l < 82; ++l) {
                short s2=-3406, s3=-18018;
                f5 = i1;
                i24 += (int)(((l * f5) + Test.instanceCount) - f5);
                f5 += l;
                i1 += s2;
                s3 >>>= (short)i25;
                if (false) {
                    for (i26 = 1; i26 < 2; ++i26) {
                        i28 += i26;
                        switch (((i26 % 1) * 5) + 18) {
                        case 22:
                            i24 = by;
                            Test.iArrFld[i23] = 7;
                            i25 += i26;
                            break;
                        default:
                            i27 *= i28;
                            Test.iArrFld[i23 + 1] -= (int)l;
                            by -= (byte)4L;
                            i1 -= 14;
                        }
                        if (b2) break;
                    }
                    s3 += (short)l;
                } else if (b2) {
                    Test.instanceCount -= i23;
                } else {
                    Test.instanceCount -= by;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
