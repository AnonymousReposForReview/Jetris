package tests.javafuzzer2442;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:39:06 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3231108406L;
    public static short sFld=-3461;
    public volatile float fFld=-85.367F;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public long lArrFld[][]=new long[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)126);
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.iArrFld1, 201);
        FuzzerUtils.init(Test.fArrFld, 2.862F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=27186, i8=-27599, i9=-8, i10=189, i11=-112;
        float f=-44.445F;
        byte by=-18;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -123L);

        for (i7 = 1; i7 < 263; ++i7) {
            i9 = 1;
            do {
                i8 = i7;
                Test.instanceCount -= i8;
                Test.instanceCount += i9;
                i8 += (i9 | Test.instanceCount);
                lArr[i9][i9] <<= i8;
                for (i10 = 1; 1 > i10; ++i10) {
                    double d=75.130653;
                    switch (((i9 % 1) * 5) + 74) {
                    case 78:
                        i11 += (int)Test.instanceCount;
                        break;
                    }
                    i8 = (int)f;
                    Test.iArrFld[i10 + 1] -= -2961;
                    if (i10 != 0) {
                        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + by +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    i11 = by;
                    d -= i9;
                }
            } while (++i9 < 6);
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i1, int i2) {

        int i3=196, i4=57, i5=63556, i6=47;
        float f1=126.178F;
        long l=-3524567631115154357L;
        double d1=114.21973;
        short s=27562;

        for (i3 = 129; i3 > 2; i3 -= 2) {
            i1 += Test.byArrFld[i3];
            for (i5 = i3; i5 < 24; ++i5) {
                i2 >>= Test.iArrFld[i5];
                vMeth2();
                f1 *= i2;
                l = 1;
                while (++l < 1) {
                    Test.instanceCount += (l * i5);
                    i1 -= -2;
                    f1 += (l * i1);
                    d1 += s;
                    i2 = 8393;
                    Test.iArrFld1[i3 - 1] -= i2;
                }
                i4 *= i2;
                Test.byArrFld[i5 - 1] += (byte)f1;
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + l + Double.doubleToLongBits(d1) +
            s;
    }

    public static void vMeth(int i) {

        int i12=59947, i13=5111, i14=22158, i15=-11254, i16=12737;
        double d2=91.127630;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.823F);

        vMeth1(i, 48703);
        for (float f2 : fArr) {
            for (i12 = 1; i12 < 4; i12 += 2) {
                i -= (int)Test.instanceCount;
            }
            i14 = 1;
            while (++i14 < 4) {
                i13 += (i14 + i);
                for (i15 = 1; i15 < 1; ++i15) {
                    if (true) continue;
                    Test.iArrFld[i14] = (int)Test.instanceCount;
                    Test.instanceCount <<= Test.sFld;
                    Test.instanceCount = -37;
                    Test.instanceCount >>= i16;
                    i += (((i15 * i16) + f2) - i13);
                    Test.sFld *= (short)10967;
                    i16 += (int)d2;
                }
            }
        }
        vMeth_check_sum += i + i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i17=-179, i18=48114, i19=12, i20=35214, i21=35333, i22=36626, i23=-175, i24=13;

        vMeth(i17);
        fFld += Test.instanceCount;
        i17 = (int)Test.instanceCount;
        Test.instanceCount -= i17;
        for (i18 = 259; 10 < i18; i18 -= 2) {
            Test.instanceCount += i18;
        }
        i19 = i17;
        for (i20 = 251; i20 > 14; --i20) {
            for (i22 = i20; i22 < 106; ++i22) {
                i24 = 1;
                do {
                    i23 += (64548 + (i24 * i24));
                    i17 += (58 + (i24 * i24));
                    i19 = 12;
                    switch (((i20 % 2) * 5) + 108) {
                    case 113:
                        Test.iArrFld[i24 + 1] -= i19;
                        i23 -= Test.sFld;
                        switch ((i20 % 1) + 115) {
                        case 115:
                            lArrFld[i22][i24] >>>= i21;
                            Test.sFld *= (short)fFld;
                            i23 += (i24 - i20);
                        default:
                            i23 >>= (int)1960037943L;
                            i19 += (int)-37.21798;
                            Test.fArrFld[i20] += Test.instanceCount;
                        }
                        Test.instanceCount &= i24;
                        break;
                    case 112:
                        Test.instanceCount = i17;
                        Test.sFld += (short)(i24 * i24);
                        i19 = i20;
                        fFld += (i24 * i19);
                        break;
                    default:
                        i17 = i17;
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)-3);
                    }
                } while ((i24 += 3) < 1);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
