package tests.javafuzzer2497;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:26:06 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2586240671L;
    public static volatile int iFld=-22806;
    public static float fFld=-63.762F;
    public static short sFld=-31550;
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.61910);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static void vMeth1() {

        int i3=5;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -31731L);

        i3 = (int)(-211 * ((lArr[(i3 >>> 1) % N]--) * (-150 - Test.instanceCount)));
        vMeth1_check_sum += i3 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i4=-38434, i5=-7109, i6=-19758, i7=-130, i8=187, i9=-10493, i10=62530, iArr[]=new int[N];
        double d=-93.130077, d1=2.33710;
        float f=-40.978F;
        byte by=21;

        FuzzerUtils.init(iArr, 8);

        vMeth1();
        Test.dArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] = 3;
        for (i5 = 7; i5 < 177; i5++) {
            Test.dArrFld[i5][i5] = d;
            Test.instanceCount &= i4;
            i4 = i4;
            i6 *= (int)f;
            iArr[i5] = i6;
            for (i7 = 1; i7 < 9; i7++) {
                Test.iFld ^= (int)Test.instanceCount;
                i9 = 1;
                while (++i9 < 2) {
                    i4 += (int)Test.instanceCount;
                    d1 += i10;
                    i6 += (((i9 * Test.instanceCount) + i5) - by);
                    Test.instanceCount = i6;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i7 + i8 + i9 +
            Double.doubleToLongBits(d1) + i10 + by + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, int i2) {

        int i11=65, i12=51, i13=102, i14=13867, i15=28162, i16=-191, iArr1[]=new int[N];
        short s=-22692;

        FuzzerUtils.init(iArr1, 9020);

        i2 *= i2;
        vMeth1();
        i2 += (int)(i1 = (int)(iMeth() * Test.fFld));
        for (i11 = 7; i11 < 199; ++i11) {
            Test.iFld += i12;
            for (i13 = 1; i13 < 8; ++i13) {
                for (i15 = 2; i15 > i13; i15--) {
                    Test.instanceCount += (i15 + i16);
                    i1 = (int)Test.instanceCount;
                    s = (short)Test.instanceCount;
                    iArr1[i15] -= Test.iFld;
                }
                switch ((i11 % 9) + 17) {
                case 17:
                    iArr1[i11 - 1] += (int)Test.instanceCount;
                    i14 += (i13 + i16);
                case 18:
                    i16 += i14;
                    break;
                case 19:
                    i12 += (((i13 * Test.fFld) + i15) - Test.instanceCount);
                case 20:
                    i12 = (int)Test.instanceCount;
                    break;
                case 21:
                    iArr1[i13] -= i12;
                    break;
                case 22:
                    i16 |= i1;
                    break;
                case 23:
                    Test.fFld += i2;
                    break;
                case 24:
                    Test.iFld = i2;
                    break;
                case 25:
                    iArr1[i11] = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i11 + i12 + i13 + i14 + i15 + i16 + s + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=45, i17=-146, i18=2815, i19=-2, iArr2[]=new int[N];
        double d2=0.49301, d3=105.41904;
        boolean b=true;
        byte by1=78;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -200L);
        FuzzerUtils.init(iArr2, 0);

        i = 1;
        while (++i < 358) {
            vMeth(-58, -29343);
            switch ((i % 8) + 26) {
            case 26:
                Test.instanceCount *= (long)Test.fFld;
                Test.iFld = (int)Test.instanceCount;
                Test.instanceCount += Test.iFld;
                d2 = 1;
                do {
                    Test.iFld = Test.iFld;
                } while (++d2 < 70);
                break;
            case 27:
                Test.iFld ^= Test.iFld;
                for (i17 = 70; i17 > 3; i17--) {
                    i19 = 1;
                    do {
                        Test.iFld += (int)Test.instanceCount;
                        Test.instanceCount = Test.instanceCount;
                        i18 = -11;
                        i18 = 6;
                        lArr1[i19] = Test.iFld;
                        switch ((i17 % 4) + 8) {
                        case 8:
                            i18 -= i17;
                        case 9:
                            i18 *= i;
                            break;
                        case 10:
                            i18 += (((i19 * i18) + i19) - i);
                            b = true;
                            i18 = i17;
                            i18 -= -7898;
                        case 11:
                            b = b;
                            d3 = Test.iFld;
                            Test.instanceCount -= Test.instanceCount;
                            i18 = i18;
                        default:
                            b = b;
                            iArr2[i + 1] = (int)Test.fFld;
                        }
                    } while (++i19 < 2);
                    Test.sFld += (short)(i17 * i17);
                }
            case 28:
                lArr1[i] <<= i17;
                break;
            case 29:
                by1 -= (byte)i19;
                break;
            case 30:
                Test.iFld += i17;
                break;
            case 31:
                Test.fFld *= i18;
            case 32:
                i18 += i;
                break;
            case 33:
                iArr2[i - 1] *= 7;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest iMeth
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
