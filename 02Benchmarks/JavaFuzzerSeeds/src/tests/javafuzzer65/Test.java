package tests.javafuzzer65;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:44:05 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=43014L;
    public static boolean bFld=false;
    public float fFld=19.261F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 58475);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f2=2.200F, f3=2.77F;
        int i5=3553, i6=14051, i7=150, i8=-3;
        double d1=81.51846;

        for (f2 = 7; f2 < 216; ++f2) {
            i5 += i5;
            i5 = i5;
            for (f3 = 1; f3 < 8; ++f3) {
                i7 = 2;
                do {
                    i5 = i5;
                } while (--i7 > 0);
                i5 &= i6;
                i8 = 2;
                while (--i8 > 0) {
                    i5 += i8;
                    Test.iArrFld = Test.iArrFld;
                    d1 -= i8;
                    switch (((8 >>> 1) % 2) + 85) {
                    case 85:
                        i6 <<= (int)Test.instanceCount;
                    case 86:
                        i6 *= i7;
                        Test.instanceCount >>= i6;
                        break;
                    default:
                        i5 = i6;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i5 + Float.floatToIntBits(f3) + i6 + i7 + i8 +
            Double.doubleToLongBits(d1);
    }

    public static long lMeth(long l) {

        int i9=-32677, i10=5, i11=89, i12=-4;
        short s=-9815;
        double d2=-52.90387;
        byte by=11;
        float f4=-1.168F;

        vMeth1();
        for (i9 = 8; i9 < 339; ++i9) {
            boolean b=true;
            i10 /= 2;
            for (i11 = 5; i11 > 1; i11 -= 2) {
                i12 = (int)-48557L;
            }
            i12 += (i9 + s);
            i12 += (((i9 * i11) + i9) - l);
            i12 = i12;
            d2 += by;
            by = (byte)i9;
            if (b) {
                l += i9;
                i10 = i10;
                f4 += i9;
            } else if (b) {
                if (false) break;
            } else {
                Test.instanceCount <<= -1;
            }
        }
        long meth_res = l + i9 + i10 + i11 + i12 + s + Double.doubleToLongBits(d2) + by + Float.floatToIntBits(f4);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i, double d) {

        float f=-104.450F, f1=0.483F, fArr[]=new float[N];
        int i2=-29805, i3=90, i4=-23827, iArr[]=new int[N];
        byte by1=20;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 231);
        FuzzerUtils.init(dArr, -2.110675);
        FuzzerUtils.init(fArr, -44.563F);

        Test.instanceCount -= ((--i) + ((iArr[(i >>> 1) % N] = -11502) - (i--)));
        for (int i1 : iArr) {
            iArr[(i1 >>> 1) % N] = (int)(((i1 - f) - 5434) - ((--dArr[(i >>> 1) % N]) + fArr[(i >>> 1) % N]));
            Test.instanceCount >>= Integer.reverseBytes(i);
            switch (((((++i) >>> 1) % 2) * 5) + 115) {
            case 120:
                for (i2 = 4; i2 > 1; i2 -= 2) {
                    switch (((i2 % 2) * 5) + 126) {
                    case 129:
                        for (f1 = 4; f1 > 1; f1 -= 3) {
                            if (false) {
                                f -= (((Test.instanceCount - i2) - lMeth(Test.instanceCount)) * i1);
                                i += i4;
                                Test.iArrFld[(int)(f1 + 1)] = i3;
                                i += (int)(((f1 * i4) + by1) - i);
                            } else if (true) {
                                i4 = (int)Test.instanceCount;
                                i4 -= (int)f1;
                            } else if (Test.bFld) {
                                Test.instanceCount = Test.instanceCount;
                            } else {
                                i -= (int)2.3986;
                            }
                        }
                        break;
                    case 135:
                        i1 -= i4;
                        break;
                    default:
                        by1 = (byte)i;
                    }
                }
                break;
            case 122:
                i4 = by1;
                break;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + i3 +
            Float.floatToIntBits(f1) + i4 + by1 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i14=-12, i15=-47423, i16=47849, i17=6, i18=-3, i19=36663, i20=-160, i21=-67, i22=-238, i23=-44698,
            i24=-3002, i25=-58005, i26=244;
        double d3=0.61665;
        byte by2=80;

        vMeth(i14, d3);
        for (i15 = 15; 262 > i15; i15++) {
            i16 = (int)fFld;
        }
        Test.iArrFld[(i15 >>> 1) % N] = i15;
        for (i17 = 7; 276 > i17; i17++) {
            for (i19 = 5; i19 < 93; i19++) {
                Test.instanceCount -= i20;
                for (i21 = 1; 2 > i21; ++i21) {
                    Test.instanceCount = Test.instanceCount;
                    i18 = i20;
                    i16 = i16;
                    by2 += (byte)(((i21 * i18) + i22) - i16);
                }
                i18 *= i20;
                fFld += (i19 * i19);
            }
            switch ((i17 % 2) + 58) {
            case 58:
                Test.iArrFld[i17 + 1] *= (int)Test.instanceCount;
                switch (((5 >>> 1) % 1) + 35) {
                case 35:
                    i14 += (9 + (i17 * i17));
                    try {
                        i14 = (i22 / i17);
                        Test.iArrFld[i17] = (i17 % 128);
                        i18 = (-174 / i16);
                    } catch (ArithmeticException a_e) {}
                    break;
                }
                i14 = i19;
            case 59:
                switch (((i17 % 2) * 5) + 1) {
                case 10:
                case 8:
                    for (i23 = 3; i23 < 93; ++i23) {
                        i20 = (int)fFld;
                        i20 >>= -12;
                        fFld = i19;
                        for (i25 = 2; i25 > 1; i25 -= 3) {
                            i18 -= i23;
                            Test.instanceCount <<= Test.instanceCount;
                        }
                        fFld -= -15;
                        fFld += i18;
                    }
                    break;
                }
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
