package tests.javafuzzer1807;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:34:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=54061L;
    public static double dFld=120.76427;
    public static byte byFld=44;
    public static short sFld=-19116;
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, 68.45829);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public long lMeth(int i2) {


        i2 -= (int)(Math.abs(Double.longBitsToDouble(Test.instanceCount)) - i2);
        long meth_res = i2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i9, float f1) {

        int i10=3, i11=63703, i12=23968, i13=1, i14=-13, iArr2[]=new int[N];
        short s=-16538;

        FuzzerUtils.init(iArr2, -3);

        for (i10 = 11; i10 < 268; ++i10) {
            Test.dFld -= i9;
            Test.instanceCount <<= i11;
            i9 += i10;
            for (i12 = 1; i12 < 6; i12++) {
                i14 = 1;
                do {
                    Test.instanceCount -= Test.instanceCount;
                    f1 -= i9;
                    iArr2[i14 - 1] = i13;
                    switch ((i12 % 6) + 68) {
                    case 68:
                        i13 += (((i14 * f1) + i14) - i10);
                    case 69:
                        i11 += (i14 * i14);
                    case 70:
                        Test.instanceCount = -3;
                        s += (short)(i14 + i10);
                        Test.instanceCount += (i14 * i14);
                        break;
                    case 71:
                        f1 = i11;
                        break;
                    case 72:
                        i11 = (int)Test.instanceCount;
                        break;
                    case 73:
                        i13 -= i13;
                    default:
                        Test.dFld = i9;
                    }
                } while (++i14 < 2);
            }
        }
        vMeth1_check_sum += i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + s +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth() {

        int i8=-15720, i15=16907, i16=28673, i17=-94, i18=6005, i19=-79, i20=-29, iArr1[][]=new int[N][N];
        float f2=70.502F;
        boolean b=true;
        short s1=21404;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -7);
        FuzzerUtils.init(lArr, 181L);

        i8 -= (--iArr1[(i8 >>> 1) % N][(43739 >>> 1) % N]);
        vMeth1(i8, f2);
        iArr1[(i8 >>> 1) % N][(i8 >>> 1) % N] -= i8;
        for (i15 = 1; i15 < 306; ++i15) {
            for (i17 = 1; i17 < 5; ++i17) {
                for (i19 = 1; i19 < 2; i19++) {
                    Test.dArrFld[i19][i19] += Test.instanceCount;
                    Test.instanceCount = Test.instanceCount;
                }
                f2 -= i19;
                Test.instanceCount -= (long)f2;
                i18 -= Test.byFld;
                i8 = (int)14L;
                if (b) break;
            }
        }
        lArr[(i18 >>> 1) % N] <<= s1;
        Test.instanceCount -= i15;
        long meth_res = i8 + Float.floatToIntBits(f2) + i15 + i16 + i17 + i18 + i19 + i20 + (b ? 1 : 0) + s1 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i7, long l1) {

        int i21=-53521, i22=-49317, i23=-144, i24=-110, i25=-3, i26=-8;
        double d=105.97981, d1=-1.26430;
        float fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 0.577F);
        FuzzerUtils.init(lArr1, -2522955117L);

        i7 += iMeth();
        i21 = 1;
        while (++i21 < 213) {
            Test.dArrFld[i21] = Test.dArrFld[i21];
            i7 = i7;
            for (i22 = i21; 8 > i22; i22++) {
                short s2=-8809;
                i23 = (int)-6792011440003362315L;
                s2 *= (short)i21;
            }
        }
        for (d = 3; d < 275; d++) {
            for (i25 = 1; i25 < 6; ++i25) {
                d1 = 1;
                do {
                    fArr[i25 - 1] %= (Test.instanceCount | 1);
                    i24 += 0;
                    Test.byFld += (byte)d1;
                    Test.dArrFld[i25 + 1][(int)(d1)] = l1;
                } while (++d1 < 2);
                lArr1[i25 + 1] = i25;
            }
        }
        vMeth_check_sum += i7 + l1 + i21 + i22 + i23 + Double.doubleToLongBits(d) + i24 + i25 + i26 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-37008, i1=-11, i3=109, i4=1, i5=-14175, i6=-164, i27=13, i28=-13, iArr[][]=new int[N][N];
        float f=116.971F, fArr1[]=new float[N];
        long l=-4638893914864923888L;
        boolean b1=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 208);
        FuzzerUtils.init(byArr, (byte)40);
        FuzzerUtils.init(fArr1, 1.475F);

        switch ((((++iArr[(i >>> 1) % N][(i >>> 1) % N]) >>> 1) % 2) + 66) {
        case 66:
            i1 = 1;
            while (++i1 < 373) {
                i *= (int)(f++);
                i += (int)lMeth(i1);
                i3 += (int)((10797L + i1) - (-(l + 1)));
                i4 = 1;
                while (++i4 < 68) {
                    for (i5 = 1; i5 < 1; i5++) {
                        vMeth(1, l);
                        i3 += (((i5 * Test.instanceCount) + i3) - i5);
                        byArr[i4 + 1] = (byte)i;
                        i -= i4;
                        i6 *= i6;
                        i = i;
                        switch ((((3 >>> 1) % 1) * 5) + 58) {
                        case 61:
                            Test.instanceCount *= (long)Test.dFld;
                            Test.instanceCount = i6;
                            i6 += i1;
                        default:
                            i6 %= 8;
                            f = 24984;
                            i6 += (i5 * f);
                            b1 = b1;
                        }
                        f = i;
                        i += (int)(-107.754F + (i5 * i5));
                        fArr1[i4 + 1] *= i;
                    }
                    i = i6;
                }
                i6 += (0 + (i1 * i1));
                for (i27 = 4; i27 < 68; ++i27) {
                    if (false) continue;
                    Test.sFld += (short)i1;
                    i -= i1;
                }
            }
        case 67:
            i += (int)Test.dFld;
            break;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
