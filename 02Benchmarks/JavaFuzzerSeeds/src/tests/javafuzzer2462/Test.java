package tests.javafuzzer2462;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:01:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=51484L;
    public static float fFld=0.243F;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i11) {

        int i12=-242, i13=5, i14=5, i15=-56537, i16=3, i17=-128, i18=1, iArr2[]=new int[N];
        float f1=-122.910F, fArr[]=new float[N];
        byte by=-100;

        FuzzerUtils.init(iArr2, -195);
        FuzzerUtils.init(fArr, -21.809F);

        i11 = (int)Test.instanceCount;
        if (false) {
            i12 = 1;
            do {
                for (i13 = 1; i13 < 11; i13++) {
                    i14 -= i14;
                    iArr2[i12] >>>= 39954;
                    f1 += i13;
                    i14 -= by;
                    iArr2[i13] = i15;
                    fArr[i13] += Test.instanceCount;
                }
                for (i16 = i12; 11 > i16; ++i16) {
                    i11 = i12;
                    i18 = 1;
                    while (++i18 < 1) {
                        iArr2 = iArr2;
                        f1 = i18;
                    }
                }
            } while ((i12 += 2) < 283);
        }
        vMeth1_check_sum += i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + by + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static long lMeth(int i6, float f) {

        int i7=-24, i9=147, i10=-56958, i19=-91, i20=232, i21=6, iArr1[]=new int[N];
        boolean b=true;
        double d=-64.12477;
        byte by1=12;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(sArr, (short)-17332);

        switch (((((i6++) >>> 1) % 4) * 5) + 30) {
        case 32:
            i7 = 1;
            while (++i7 < 376) {
                switch ((((--i6) >>> 1) % 8) + 90) {
                case 90:
                    i6 -= (int)(sArr[i7 + 1] - (f++));
                    i6 += i7;
                    for (i9 = 1; i9 < 4; i9++) {
                        i6 &= (-(++i10));
                        Test.instanceCount += (i9 ^ i7);
                    }
                    break;
                case 91:
                    vMeth1(i10);
                    i6 += (((i7 * Test.instanceCount) + Test.instanceCount) - i19);
                    if (b) continue;
                    i19 = (int)125.46252;
                case 92:
                    for (i20 = 1; i20 < 4; ++i20) {
                        iArr1[i7 + 1] = (int)f;
                        d += by1;
                    }
                    break;
                case 93:
                    d += i21;
                case 94:
                    sArr[i7] = (short)Test.instanceCount;
                    break;
                case 95:
                    iArr1[i7 - 1] -= i21;
                case 96:
                    i6 = i21;
                    break;
                case 97:
                    if (i10 != 0) {
                    }
                    break;
                }
            }
            break;
        case 41:
            i19 -= -6;
            break;
        case 45:
            iArr1[(2 >>> 1) % N] = i9;
            break;
        case 50:
            iArr1[(i7 >>> 1) % N] += i19;
            break;
        default:
            iArr1[(i6 >>> 1) % N] *= (int)Test.instanceCount;
        }
        long meth_res = i6 + Float.floatToIntBits(f) + i7 + i9 + i10 + i19 + (b ? 1 : 0) + i20 + i21 +
            Double.doubleToLongBits(d) + by1 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(int i3, int i4, int i5) {

        float f2=25.74F, f3=-2.719F;
        int i22=81, i23=2, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 26);

        iArr[(i3 >>> 1) % N] = (int)((Test.instanceCount++) + i4);
        lMeth(i4, f2);
        for (i22 = 6; i22 < 141; ++i22) {
            switch ((i22 % 1) + 53) {
            case 53:
                iArr = iArr;
                break;
            default:
                i4 -= (int)f2;
                i3 *= -24738;
                iArr[i22 - 1] = -16707;
            }
            i3 += i5;
            f3 = 12;
            while ((f3 -= 3) > 0) {
                f2 *= f2;
                i4 <<= (int)Test.instanceCount;
                i23 += (int)f3;
                f2 = i23;
                i3 += (int)-3337088622L;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f2) + i22 + i23 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=-187, i2=-72, i24=32399, i25=-4, i26=-134, i27=44, i28=-211, i29=-63450, i30=-181, i31=-44994;
        double d1=-2.126908, dArr[]=new double[N];
        short s=9932;
        boolean b1=true;

        FuzzerUtils.init(dArr, 38.39854);

        Test.instanceCount += (i++);
        for (i1 = 299; i1 > 12; i1 -= 3) {
            vMeth(i1, i, -23117);
            for (i24 = i1; i24 < 264; i24++) {
                i -= (int)-8L;
                i25 += (int)d1;
                Test.fFld -= i;
                i = (int)137L;
                s *= (short)i25;
                for (i26 = 1; i26 > 1; --i26) {
                    i2 *= -26;
                    Test.instanceCount += (((i26 * i1) + i2) - Test.instanceCount);
                }
                i25 *= i1;
            }
            dArr[i1 - 1] = i;
            Test.instanceCount = -15492;
            i >>= i26;
            i28 = 1;
            while (++i28 < 264) {
                if (b1) break;
                for (i29 = 1; 1 > i29; ++i29) {
                    Test.fFld += (i29 * i29);
                    i2 = -9801;
                    switch ((((i24 >>> 1) % 8) * 5) + 89) {
                    case 119:
                        Test.instanceCount = 4256482622L;
                        Test.instanceCount -= -5;
                        i27 += (((i29 * Test.fFld) + i28) - Test.instanceCount);
                        i25 += i29;
                        break;
                    case 112:
                    case 107:
                        switch (((i29 % 7) * 5) + 39) {
                        case 49:
                            i27 *= (int)d1;
                            lArrFld[i1 - 1] *= Test.instanceCount;
                            d1 -= 114L;
                            break;
                        case 44:
                            i27 += (i29 * i29);
                            break;
                        case 68:
                            i31 += (-7 + (i29 * i29));
                            break;
                        case 73:
                            i2 = 161;
                            break;
                        case 61:
                            i30 /= (int)(i24 | 1);
                            break;
                        case 56:
                            i2 = (int)Test.instanceCount;
                            break;
                        case 69:
                            i -= (int)Test.instanceCount;
                            break;
                        default:
                            i27 -= i29;
                        }
                        break;
                    case 106:
                        Test.instanceCount &= i30;
                        break;
                    case 91:
                        Test.fFld += 123;
                    case 101:
                        i2 -= (int)d1;
                        break;
                    case 113:
                        Test.instanceCount = -12;
                    case 127:
                        i31 -= 210;
                        break;
                    default:
                        i25 >>= i1;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
