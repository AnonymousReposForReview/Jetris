package tests.javafuzzer3274;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:31:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=566698725L;
    public static volatile float fFld=-102.43F;
    public static int iFld=-8;
    public static volatile byte byFld=-58;
    public double dFld=80.106910;
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public static volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3) {

        int i4=-33000, i5=-7, i6=-14, i7=-21102, i8=42533, i9=-8;
        short s3=-28731;
        boolean b=true;

        for (i4 = 16; 349 > i4; i4++) {
            i2 -= (int)Test.fFld;
            for (i6 = 1; 5 > i6; i6 += 3) {
                i2 = i3;
                Test.instanceCount = -500022632L;
                for (i8 = 1; i8 < 5; ++i8) {
                    byte by1=-124;
                    i9 -= i5;
                    i5 += i8;
                    i5 = i8;
                    s3 = by1;
                }
                Test.byFld += (byte)i6;
            }
            b = b;
            i5 += (i4 * i4);
            i3 = (int)-9L;
            Test.fFld = i3;
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + s3 + (b ? 1 : 0);
    }

    public static void vMeth1() {

        short s2=982;
        int i=-10, i1=2, i10=31138, iArr[]=new int[N], iArr1[][]=new int[N][N];
        byte by=68;
        double d=0.124757;
        long l=-3281218755723466178L;

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(iArr1, -1607);

        Test.instanceCount = (s2++);
        for (i = 13; i < 335; ++i) {
            Test.fFld += by;
            Test.iFld += (28468 + (i * i));
            switch (((((iArr[i + 1]++) >>> 1) % 3) * 5) + 98) {
            case 105:
                vMeth2(Test.iFld, Test.iFld);
                break;
            case 108:
                iArr[i - 1] = i1;
                for (d = 5; d > 1; d -= 3) {
                    i10 = i1;
                    Test.fFld *= l;
                    Test.instanceCount %= 35470;
                    iArr1 = iArr1;
                    i10 -= i;
                }
            case 100:
                s2 += (short)(i * l);
                i1 ^= (int)-9L;
                break;
            default:
                i1 += i1;
            }
        }
        vMeth1_check_sum += s2 + i + i1 + by + Double.doubleToLongBits(d) + i10 + l + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(short s1) {

        int i11=-39939, i12=-252, i13=140;

        try {
            vMeth1();
            Test.iFld = Test.iFld;
        }
        catch (ArithmeticException exc2) {
            lArrFld[(i13 >>> 1) % N] *= Test.iFld;
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            for (i11 = 15; i11 < 332; ++i11) {
                Test.instanceCount -= i12;
                Test.iFld *= i11;
                i12 = 10326;
                i13 = 5;
                do {
                    switch ((i13 % 8) + 8) {
                    case 8:
                        Test.instanceCount += i13;
                        if (Test.iFld != 0) {
                            vMeth_check_sum += s1 + i11 + i12 + i13;
                            return;
                        }
                        Test.fFld -= -56454;
                    case 9:
                        i12 -= i12;
                        break;
                    case 10:
                        dFld += -14450;
                        iArrFld[i11 - 1] = 4;
                        break;
                    case 11:
                        i12 += Test.iFld;
                    case 12:
                        Test.instanceCount += (((i13 * i12) + Test.fFld) - Test.byFld);
                        break;
                    case 13:
                        iArrFld[(i13 >>> 1) % N] = i12;
                        break;
                    case 14:
                        iArrFld[i11] -= -13;
                        break;
                    case 15:
                        i12 *= 6521;
                        break;
                    }
                } while ((i13 -= 2) > 0);
            }
        }
        vMeth_check_sum += s1 + i11 + i12 + i13;
    }

    public void mainTest(String[] strArr1) {

        short s=-17872;
        int i14=57120, i15=-8, i16=-192, i17=9, i18=-50071, i19=-4, i20=-29798, i21=-4759, i22=-40, i23=24;
        boolean b1=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.565F);

        s += (short)(((Test.fFld++) + (Test.iFld + -247L)) * ((Test.fFld + Test.iFld) * (Test.instanceCount +
            Test.iFld)));
        Test.iFld >>= (int)(Test.instanceCount++);
        Test.iFld -= (--Test.iFld);
        vMeth(s);
        fArr = fArr;
        Test.fFld *= i14;
        i15 = 1;
        while ((i15 += 3) < 227) {
            i14 = -90;
            Test.iFld = (int)Test.instanceCount;
            Test.iFld = (int)Test.instanceCount;
        }
        Test.fFld -= Test.instanceCount;
        Test.fFld = Test.iFld;
        for (i16 = 3; i16 < 347; i16++) {
            lArrFld[i16 - 1] += i14;
            Test.fFld -= i15;
            for (i18 = i16; 73 > i18; ++i18) {
                i17 -= 0;
                for (i20 = 1; i20 < 1; i20++) {
                    s -= (short)Test.instanceCount;
                    i21 <<= i14;
                }
                for (i22 = 1; 1 > i22; i22 += 2) {
                    i21 = i18;
                    i21 += (-240 + (i22 * i22));
                    i23 = -25617;
                    i23 = i23;
                    i17 -= i14;
                    if (b1) break;
                }
                Test.bArrFld[i16 - 1] = b1;
                Test.instanceCount = 11186;
                Test.fFld = i17;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
