package tests.javafuzzer2174;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:44:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-168L;
    public static volatile double dFld=21.60098;
    public static byte byFld=14;
    public static float fFld=-75.976F;
    public int iFld=-185;
    public short sFld=-31551;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -36807);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(long l1, float f, long l2) {

        int i3=86, i4=-249, i5=-36, i6=-6, i7=-139, i8=217, i9=5;
        long l3=0L;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.109950);

        i3 -= (int)Test.instanceCount;
        for (i4 = 2; 156 > i4; ++i4) {
            double d1=2.26507;
            d1 *= i5;
            Test.instanceCount -= i5;
            Test.iArrFld[i4] = i3;
            for (l3 = 10; l3 > 1; l3 -= 2) {
                i7 = 1;
                while (++i7 < 3) {
                    dArr[i7] = i4;
                    d1 -= i4;
                    l1 = Test.instanceCount;
                }
                for (i8 = 1; i8 < 3; ++i8) {
                    i5 += (i8 + i7);
                    l1 %= (i4 | 1);
                    i9 += (((i8 * l3) + f) - i3);
                    i5 &= i6;
                }
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + l2 + i3 + i4 + i5 + l3 + i6 + i7 + i8 + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1(int i2, long l, byte by) {

        float f1=-79.802F, fArr[]=new float[N];
        int i10=252, i11=-9, i12=124, i13=-61, i14=9846, i15=-5;
        short s=32671;
        boolean b=true;

        FuzzerUtils.init(fArr, -24.660F);

        i2 = (++i2);
        Test.iArrFld[(i2 >>> 1) % N] = i2;
        fArr[(63863 >>> 1) % N] = (float)((dMeth(Test.instanceCount, f1, l) - 2211105327L) + Test.dFld);
        for (i10 = 12; i10 < 240; i10++) {
            if (b) {
                for (i12 = i10; i12 < 7; i12++) {
                    l += i13;
                    i2 = i10;
                    for (i14 = 1; i14 < 1; i14++) {
                        l >>>= i2;
                        f1 *= i10;
                        i2 -= i11;
                        l = -35925L;
                    }
                }
                s += (short)(i10 * i10);
                i13 -= i12;
            } else if (b) {
                i15 = i10;
            } else {
                f1 += (((i10 * i2) + i11) - l);
            }
        }
        vMeth1_check_sum += i2 + l + by + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 + i14 + i15 + s + (b ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1) {

        double d=1.11421, d2=-117.108444;
        int i16=-10859, i17=127, i18=104;
        short s1=-18312;
        boolean b1=false;

        d += (-Test.iArrFld[(i >>> 1) % N]);
        vMeth1(i1, Test.instanceCount, Test.byFld);
        Test.instanceCount = -29771L;
        d2 = 1;
        do {
            Test.fFld += (float)d;
        } while (++d2 < 204);
        i16 = 1;
        while (++i16 < 369) {
            i += i16;
            i <<= i;
            switch ((i16 % 2) + 9) {
            case 9:
                Test.iArrFld = Test.iArrFld;
                for (i17 = 5; i17 > i16; i17--) {
                    i18 += (((i17 * Test.instanceCount) + i17) - Test.instanceCount);
                    Test.fFld -= s1;
                    i ^= -60;
                    b1 = b1;
                }
            case 10:
                i1 = 6;
                break;
            default:
                i18 += (int)(36.391F + (i16 * i16));
            }
        }
        vMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d2) + i16 + i17 + i18 + s1 +
            (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i19=-50, i20=94, i21=-10, i22=-6, i23=17008, i24=11675, i25=11, i26=-9, i27=7;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -62786L);

        vMeth(9, 10);
        Test.dFld += iFld;
        Test.iArrFld[(iFld >>> 1) % N] += (int)Test.instanceCount;
        Test.fFld = iFld;
        for (i19 = 14; i19 < 336; ++i19) {
            Test.fFld *= Test.instanceCount;
            i20 %= (int)(i19 | 1);
        }
        Test.byFld = (byte)i19;
        i20 = i19;
        for (i21 = 6; i21 < 200; ++i21) {
            lArr[i21] >>= i20;
            iFld = i19;
            for (i23 = 5; i23 < 129; ++i23) {
                i20 ^= i21;
            }
            i25 = 1;
            do {
                i24 = i20;
                switch ((((i20 >>> 1) % 3) * 5) + 96) {
                case 97:
                    i24 <<= sFld;
                    Test.instanceCount += i19;
                    break;
                case 107:
                    Test.dFld = 10L;
                    if (bFld) {
                        iFld &= (int)Test.instanceCount;
                        i24 += (int)Test.instanceCount;
                        for (i26 = 1; 1 > i26; i26++) {
                            if (bFld) {
                                Test.instanceCount += (((i26 * Test.instanceCount) + i24) - Test.instanceCount);
                                iFld -= (int)Test.instanceCount;
                                if (bFld) {
                                    i24 *= (int)Test.fFld;
                                }
                            } else if (bFld) {
                                i24 += (i26 + i23);
                            } else {
                                i24 += i27;
                            }
                        }
                    } else {
                        Test.fFld = Test.fFld;
                    }
                    break;
                case 108:
                    bFld = bFld;
                    break;
                default:
                    Test.fFld *= Test.fFld;
                }
            } while (++i25 < 129);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
