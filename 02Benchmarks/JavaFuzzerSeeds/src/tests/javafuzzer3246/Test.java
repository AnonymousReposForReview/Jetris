package tests.javafuzzer3246;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 04:34:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3598306770L;
    public static volatile int iFld=4;
    public static double dFld=-49.130356;
    public byte byFld=119;
    public static float fArrFld[][]=new float[N][N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -29.391F);
        FuzzerUtils.init(Test.iArrFld, 45330);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1, int i2, long l1) {

        float f=2.1017F, f1=0.578F;
        int i3=92, i4=-13264, i5=9, i6=31989, i7=-15756;
        boolean b=false;
        double d4=54.48836, dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(dArr, -18.106818);

        switch (((i2 >>> 1) % 4) + 123) {
        case 123:
            f = Test.instanceCount;
            for (i3 = 10; i3 < 241; ++i3) {
                for (f1 = 1; f1 < 7; f1++) {
                    i4 += (int)f1;
                    for (i6 = 1; 2 > i6; ++i6) {
                        double d2=-16.71495;
                        short s=5779;
                        f -= i6;
                        Test.fArrFld[(int)(f1)][i3 + 1] = (float)d2;
                        l1 += i6;
                        lArr[i6 + 1][i3 - 1] = s;
                        Test.instanceCount <<= i2;
                    }
                    if (b) {
                        b = true;
                        Test.iArrFld[i3] = i7;
                        i5 = i3;
                    } else {
                        i7 += (int)(f1 * f1);
                    }
                }
            }
            break;
        case 124:
            i1 &= i1;
            break;
        case 125:
            Test.instanceCount <<= -24910;
            break;
        case 126:
            d4 = Test.instanceCount;
            break;
        }
        vMeth2_check_sum += i1 + i2 + l1 + Float.floatToIntBits(f) + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7
            + (b ? 1 : 0) + Double.doubleToLongBits(d4) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(double d1) {

        int i8=-53698, i9=-14, i10=52354;
        float f2=2.822F, f3=95.117F;
        boolean b1=false;
        long lArr1[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(lArr1, 10L);
        FuzzerUtils.init(dArr1, 1.42744);

        vMeth2(Test.iFld, Test.iFld, Test.instanceCount);
        Test.iArrFld[(Test.iFld >>> 1) % N] += 51840;
        i8 = 1;
        while (++i8 < 384) {
            i9 = 1;
            while (++i9 < 4) {
                lArr1[i8 + 1] += i8;
                for (f2 = 1; f2 < 1; f2++) {
                    Test.iFld = (int)f2;
                    switch (((i9 % 1) * 5) + 44) {
                    case 48:
                        Test.instanceCount += (long)(f2 * f2);
                        if (b1) break;
                        switch ((((i8 >>> 1) % 8) * 5) + 43) {
                        case 75:
                            Test.iFld += (int)d1;
                            i10 += (int)(f2 * f2);
                            i10 += (int)(((f2 * f2) + i9) - i8);
                            Test.instanceCount += -95;
                            break;
                        case 73:
                            i10 -= (int)Test.instanceCount;
                            break;
                        case 81:
                            b1 = b1;
                            break;
                        case 58:
                            i10 |= i10;
                            break;
                        case 83:
                        case 54:
                            f3 *= -4;
                            break;
                        case 57:
                            dArr1[(int)(f2 - 1)] *= i9;
                            break;
                        case 74:
                            Test.iFld -= (int)f2;
                        }
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i8 + i9 + Float.floatToIntBits(f2) + i10 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth(long l) {

        int i11=12, i12=-228, i13=-42213, i14=112, i15=240;
        float f4=0.340F;

        vMeth1(Test.dFld);
        Test.iFld = Test.iFld;
        Test.iFld *= Test.iFld;
        i11 = (int)-5451967509203482625L;
        i12 = 230;
        while ((i12 -= 2) > 0) {
            for (i13 = 14; i13 > 1; i13--) {
                i14 %= 12453;
                i14 += (int)(-8L + (i13 * i13));
                i14 += (int)l;
                Test.iFld += i13;
                Test.iArrFld[i13] = (int)l;
                Test.iArrFld[i13] = Test.iFld;
                f4 += (((i13 * l) + i14) - Test.instanceCount);
                Test.iFld += (118 + (i13 * i13));
                Test.iArrFld[i12 + 1] -= i15;
            }
        }
        vMeth_check_sum += l + i11 + i12 + i13 + i14 + Float.floatToIntBits(f4) + i15;
    }

    public void mainTest(String[] strArr1) {

        double d=-51.38307;
        int i=-31, i16=11, i17=-47, i18=220, i19=-9, i20=-5, i21=36589, iArr[]=new int[N];
        boolean b2=false;
        long l2=-2943700519L;
        float f5=-2.295F;

        FuzzerUtils.init(iArr, -16);

        d += (Math.abs(++iArr[(i >>> 1) % N]) + ((9 - (i - i)) >> (i + i)));
        vMeth(Test.instanceCount);
        i <<= byFld;
        for (i16 = 5; i16 < 164; ++i16) {
            i = (int)Test.instanceCount;
            i += i16;
            i17 %= (int)(i | 1);
            for (i18 = 4; i18 < 158; i18++) {
                try {
                    i19 = (i / Test.iFld);
                    Test.iArrFld[i18 + 1] = (i16 / i);
                    Test.iArrFld[i16] = (i16 / -39755);
                } catch (ArithmeticException a_e) {}
                i20 = 1;
                while (++i20 < 2) {
                    Test.iArrFld = Test.iArrFld;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-89);
                    i19 = -54587;
                    if (b2) {
                        byFld <<= (byte)i;
                        b2 = b2;
                        Test.instanceCount = i16;
                    } else {
                        Test.instanceCount = Test.instanceCount;
                        Test.iArrFld[i16 - 1] -= (int)Test.instanceCount;
                        Test.dFld = i20;
                        byFld = (byte)i19;
                    }
                    i <<= -108;
                }
                i >>= (int)Test.instanceCount;
                for (l2 = i18; l2 < 2; l2++) {
                    Test.instanceCount += (l2 * l2);
                    if (b2) {
                        i21 += i16;
                        i += (int)l2;
                    } else if (b2) {
                        f5 *= i17;
                        Test.iFld <<= i16;
                    } else {
                        Test.instanceCount -= i19;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
