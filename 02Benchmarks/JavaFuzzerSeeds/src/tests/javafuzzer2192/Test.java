package tests.javafuzzer2192;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:02:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2445999504L;
    public float fFld=1.915F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4553421903019599254L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l2) {

        long l3=2347447879809337416L;
        int i7=39728, i8=59038, i9=-8;
        double d2=-19.69745;
        float f1=1.587F;
        short s=-13065;
        boolean b=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-52);

        for (byte by1 : byArr) {
            for (l3 = 4; l3 > 1; --l3) {
                i7 += (int)l3;
                i7 += i7;
                i7 = (int)l2;
                i7 += (int)(l3 * l3);
            }
            for (i8 = 1; i8 < 4; ++i8) {
                l2 ^= i9;
                i7 = (int)d2;
                i9 += (i8 ^ i9);
                i9 = by1;
                i9 = i8;
                i7 += (int)(33.582F + (i8 * i8));
                f1 -= s;
                if (b) break;
            }
        }
        long meth_res = l2 + l3 + i7 + i8 + i9 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f1) + s + (b ? 1 :
            0) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l1) {

        int i2=32483, i3=1, i4=38741, i5=-22936, i6=171, iArr1[]=new int[N];
        float f=0.768F;
        byte by=119;
        double d1=1.128195;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr1, 38970);
        FuzzerUtils.init(bArr, true);

        i2 = 1;
        do {
            for (i3 = 1; i3 < 4; i3++) {
                i4 += i3;
                l1 <<= (i4 += (i4++));
                i4 <<= (iArr1[i3 + 1]--);
                Test.lArrFld[i2 - 1] -= (-Test.instanceCount);
            }
            for (i5 = 4; i5 > 1; i5 -= 3) {
                f = f;
                i6 += (by++);
                d1 -= ((Test.lArrFld[i5]--) + (iMeth1(Test.instanceCount) + -96));
                switch (((i4 >>> 1) % 1) + 4) {
                case 4:
                    bArr = bArr;
                    i6 = -24862;
                    Test.instanceCount += (i5 ^ i3);
                    break;
                default:
                    i6 += (i5 * i5);
                }
            }
        } while (++i2 < 391);
        long meth_res = l1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + by + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i, int i1) {

        double d=0.20882;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -4);

        d = 1;
        do {
            float f2=0.888F;
            try {
                i1 = (i % i);
                i = (-6999 % i);
                i = (iArr[(int)(d + 1)] % -22150);
            } catch (ArithmeticException a_e) {}
            iMeth(Test.instanceCount);
            i1 += i1;
            f2 = i1;
            i1 = 7299;
        } while (++d < 152);
        vMeth_check_sum += l + i + i1 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i10=-13688, i11=-27758, i13=-6, i14=-41697, i15=-12, i16=-221, i17=-49274, iArr2[][]=new int[N][N],
            iArr3[]=new int[N];
        float f3=2.869F;
        byte by2=95;
        long l4=115L;
        boolean b1=true;

        FuzzerUtils.init(iArr2, -34574);
        FuzzerUtils.init(iArr3, -1);

        vMeth(-137L, i10, -131);
        for (f3 = 18; f3 < 291; ++f3) {
            iArr2[(int)(f3 - 1)][(int)(f3 - 1)] += 11;
            i11 -= i10;
            by2 = (byte)f3;
            iArr2[(int)(f3)][(int)(f3)] = 13;
            Test.instanceCount = i11;
            for (i13 = 92; i13 > 4; --i13) {
                for (l4 = 1; l4 < 2; l4 += 3) {
                    if (b1) continue;
                    i15 <<= (int)Test.instanceCount;
                    i15 = i15;
                    iArr2[(int)(f3)][(int)(f3)] ^= -160;
                }
                b1 = b1;
            }
            Test.instanceCount += (long)(((f3 * f3) + l4) - i14);
        }
        fFld = l4;
        Test.instanceCount >>= i14;
        Test.lArrFld[(i10 >>> 1) % N] = -3060808606L;
        for (long l5 : Test.lArrFld) {
            i15 -= i14;
            Test.instanceCount -= -5524909458359213914L;
            l5 >>= i13;
            if (true) {
                switch ((((i11 >>> 1) % 1) * 5) + 110) {
                case 112:
                    if (b1) {
                        iArr3[(i15 >>> 1) % N] -= (int)-54.910F;
                    } else if (b1) {
                        i15 |= i15;
                        for (i16 = 3; i16 < 63; ++i16) {
                            Test.instanceCount += i13;
                            Test.instanceCount *= -2224396649L;
                        }
                    } else if (false) {
                        i17 += i16;
                    } else {
                        fFld /= (i14 | 1);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
