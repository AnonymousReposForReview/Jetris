package tests.javafuzzer1733;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:38:48 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3091455607L;
    public static volatile double dFld=-50.57890;
    public static float fFld=0.431F;
    public volatile byte byFld=46;
    public long lFld=-60535L;
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-2659);
        FuzzerUtils.init(Test.lArrFld, -44453L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(int i1, short s, long l) {

        int i2=39830, i3=13108, i5=58085, iArr[]=new int[N];
        float f1=-2.689F, fArr[][]=new float[N][N];
        boolean b=true;

        FuzzerUtils.init(fArr, 89.79F);
        FuzzerUtils.init(iArr, 122);

        Test.sArrFld[(40511 >>> 1) % N] += (short)i1;
        i1 -= i1;
        for (i2 = 182; i2 > 10; i2--) {
            l *= -14930;
        }
        fArr[(35994 >>> 1) % N][(i1 >>> 1) % N] = f1;
        iArr = iArr;
        i1 += i2;
        iArr[(i1 >>> 1) % N] >>>= i1;
        for (int i4 : iArr) {
            if (b) {
                l = i3;
                i5 = 1;
                while (++i5 < 4) {
                    i1 += (int)Test.dFld;
                    i1 = i2;
                }
                if (i1 != 0) {
                }
            } else if (b) {
                f1 += f1;
            } else {
                iArr[(-10 >>> 1) % N] += i1;
            }
        }
        long meth_res = i1 + s + l + i2 + i3 + Float.floatToIntBits(f1) + i5 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1() {

        float f=70.700F;
        int i6=48660, i7=12, i8=12, i9=-12110;
        boolean b1=true, b2=true;
        byte by=80;

        if (b2) {
            f = ((sMeth(i6, (short)(25853), Test.instanceCount) * f) + 31205);
            Test.instanceCount += Test.instanceCount;
            vMeth1_check_sum += Float.floatToIntBits(f) + i6 + (b1 ? 1 : 0) + i7 + i8 + i9 + by + (b2 ? 1 : 0);
            return;
        } else if (b1) {
            b1 = b1;
        } else if (b2) {
            for (long l1 : Test.lArrFld) {
                i6 = (int)-66.73674;
                f *= i6;
                Test.instanceCount = i6;
                i7 = 1;
                while (++i7 < 4) {
                    for (i8 = 1; i8 < 1; i8 += 3) {
                        i6 += i9;
                        switch (((i7 % 5) * 5) + 53) {
                        case 78:
                            b1 = b1;
                            i9 -= i9;
                            f *= -52;
                            break;
                        case 62:
                            if (b1) continue;
                        case 75:
                            i6 += (int)(46804L + (i8 * i8));
                            break;
                        case 68:
                            Test.sArrFld[i8 - 1] = by;
                            break;
                        case 63:
                            Test.instanceCount >>>= 21;
                            break;
                        default:
                            i9 += (i8 ^ i9);
                        }
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + (b1 ? 1 : 0) + i7 + i8 + i9 + by + (b2 ? 1 : 0);
    }

    public static void vMeth(int i) {

        int i10=4, i11=-15813, i12=7325, i13=-4, iArr1[]=new int[N];
        short s1=-5891;
        boolean b3=true;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 14.714F);
        FuzzerUtils.init(iArr1, -96);

        if (b3) {
            if (b3) {
                i ^= (i - i);
            } else if (b3) {
                vMeth1();
                i = 49714;
                for (long l2 : Test.lArrFld) {
                    for (i10 = 1; i10 < 4; i10++) {
                        s1 += (short)(87L + (i10 * i10));
                        for (i12 = 1; i12 < 2; ++i12) {
                            l2 = i10;
                            fArr1[i12] = i10;
                            Test.instanceCount = Test.instanceCount;
                            Test.fFld = -5904;
                        }
                        iArr1[i10 + 1] += (int)l2;
                        i11 *= i13;
                    }
                }
            }
        }
        vMeth_check_sum += i + i10 + i11 + s1 + i12 + i13 + (b3 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=-26.95466;
        int i14=-139, i15=-7948, i16=-8, i17=-54, i18=13, i19=10, i20=12, i21=11, iArr2[]=new int[N];
        boolean b4=true;
        byte by1=17;
        short s2=-4603;
        float fArr2[]=new float[N];

        FuzzerUtils.init(fArr2, 38.583F);
        FuzzerUtils.init(iArr2, 149);

        d = 1;
        while (++d < 147) {
            vMeth(i14);
        }
        for (i15 = 10; i15 < 168; ++i15) {
            i17 = 1;
            do {
                i14 += i15;
                i16 = byFld;
                fArr2[i17 + 1] = 29706;
                b4 = b4;
                Test.instanceCount <<= i16;
                switch (((i15 % 5) * 5) + 76) {
                case 89:
                    for (i18 = 1; i18 < 1; ++i18) {
                        i14 = i16;
                        by1 >>= (byte)-10L;
                        if (b4) {
                            i19 += (i18 * i18);
                            iArr2[i17 - 1] = (int)Test.dFld;
                            iArr2[i18] <<= (int)lFld;
                        } else if (b4) {
                            iArr2[i18] -= (int)d;
                            by1 = (byte)Test.instanceCount;
                        } else {
                            s2 += (short)(i18 | i16);
                        }
                        i14 *= i19;
                        i19 = i19;
                        i16 = i16;
                    }
                    i16 <<= i14;
                    for (i20 = 1; 1 > i20; ++i20) {
                        iArr2 = iArr2;
                        iArr2[i20 + 1] += i17;
                    }
                    break;
                case 84:
                    iArr2[i17] -= (int)d;
                    Test.instanceCount *= -222;
                    iArr2[i17 - 1] >>>= i16;
                    break;
                case 93:
                case 101:
                    i21 <<= 146;
                    break;
                case 99:
                    Test.instanceCount += (i17 * i17);
                    break;
                }
            } while (++i17 < 159);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
