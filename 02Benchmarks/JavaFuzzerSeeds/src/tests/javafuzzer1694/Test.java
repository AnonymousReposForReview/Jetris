package tests.javafuzzer1694;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:44:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=20417L;
    public volatile float fFld=63.699F;
    public static float fFld1=-2.511F;
    public static byte byFld=97;
    public volatile boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -13);
        FuzzerUtils.init(Test.iArrFld1, -12);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        int i6=50627, i7=39, i8=-11, i9=14, i10=-43209;
        short s1=-16848;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -230L);

        i6 = 1;
        do {
            lArr[i6 - 1] -= Test.instanceCount;
            Test.fFld1 += (((i6 * i5) + i5) - i6);
            for (i7 = 1; i7 < 7; ++i7) {
                i5 <<= (int)Test.instanceCount;
                for (i9 = 1; i9 < 2; i9++) {
                    boolean b=true;
                    i8 -= (int)6L;
                    lArr[i9 - 1] += i8;
                    Test.instanceCount += (i9 ^ Test.instanceCount);
                    b = false;
                    Test.iArrFld[i7] >>= i6;
                    i8 = (int)Test.instanceCount;
                    i10 = i7;
                    i5 = i6;
                    i8 = s1;
                }
            }
        } while (++i6 < 246);
        vMeth1_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + s1 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, long l1, int i3) {

        int i4=123, i11=-202, i12=192;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-25274);

        Test.fFld1 = l;
        i4 = 1;
        do {
            vMeth1(i4);
            i3 |= Test.byFld;
            Test.iArrFld[i4] = -66;
            switch (((i4 % 4) * 5) + 14) {
            case 26:
                for (i11 = 1; i11 < 5; i11++) {
                    i12 = i11;
                    Test.iArrFld[i11 + 1] = i12;
                    Test.fFld1 += i11;
                    i12 *= (int)215L;
                    switch ((((i3 >>> 1) % 2) * 5) + 38) {
                    case 47:
                        i12 = -70;
                        break;
                    case 41:
                        i12 += (int)-1419624029747246761L;
                        sArr[i4 + 1] += (short)Test.instanceCount;
                        break;
                    }
                }
            case 29:
                Test.iArrFld[i4 + 1] <<= i3;
            case 33:
                Test.fFld1 *= l;
                break;
            case 24:
                Test.fFld1 *= i11;
                break;
            default:
                i12 |= i4;
            }
        } while (++i4 < 369);
        vMeth_check_sum += l + l1 + i3 + i4 + i11 + i12 + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth(short s) {

        int i13=46718;

        vMeth(Test.instanceCount, Test.instanceCount, i13);
        long meth_res = s + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=37546, i1=-17995, i2=0, i14=11, i15=-12, i16=195, i17=57, i18=-22725, i19=8711, i20=-7, i21=-5;
        short s2=-4130;
        double d=0.115509;
        long lArr1[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr1, 2336014497L);
        FuzzerUtils.init(bArr, false);

        i *= i;
        for (i1 = 2; i1 < 305; i1++) {
            Test.instanceCount |= Test.iArrFld[i1];
            Test.iArrFld[i1 + 1] = Math.max(Math.max(Test.iArrFld[i1 - 1]--, (int)(-26981 * (fFld++))), (-(i2 + i2)) -
                (i2 % 14));
            Test.instanceCount = (long)((--i2) * Float.intBitsToFloat(iMeth(s2)));
            Test.instanceCount <<= i2;
            for (i14 = 2; i14 < 83; ++i14) {
                Test.iArrFld = Test.iArrFld;
                i2 ^= (int)Test.instanceCount;
                for (i16 = 1; i16 < 2; i16++) {
                    i2 >>= (int)Test.instanceCount;
                    bFld = bFld;
                    lArr1[i1 - 1] -= i17;
                    d = 181;
                    if (true) break;
                    i15 = 4;
                    i17 = Test.byFld;
                }
                Test.instanceCount <<= -126;
                Test.fFld1 *= i14;
                Test.iArrFld[i14] >>>= i14;
            }
        }
        Test.instanceCount = i14;
        Test.instanceCount *= i2;
        Test.iArrFld[(i17 >>> 1) % N] += s2;
        for (i18 = 18; i18 < 395; ++i18) {
            try {
                i2 = (-443 / i19);
                i = (2743 % i18);
                i17 = (i15 % -48);
            } catch (ArithmeticException a_e) {}
            bArr[i18] = bFld;
            Test.iArrFld1 = Test.iArrFld1;
            for (i20 = 3; i20 < 67; i20++) {
                i += (i20 * i20);
                i15 = (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
