package tests.javafuzzer1761;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:07:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static double dFld=-97.104268;
    public static byte byFld=-116;
    public static short sFld=-26436;
    public static boolean bFld=true;
    public volatile int iArrFld[]=new int[N];
    public static volatile int iArrFld1[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -160);
        FuzzerUtils.init(Test.lArrFld, 32L);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, long l, int i4) {


        i4 = i4;
        vMeth1_check_sum += Double.doubleToLongBits(d1) + l + i4;
    }

    public static void vMeth() {

        int i2=-16927, i3=177, i5=-238, i6=34327, i7=-130, i8=-11402, i9=172;
        float f1=-56.71F;

        for (i2 = 5; 146 > i2; ++i2) {
            switch (((i2 % 10) * 5) + 76) {
            case 121:
                vMeth1(Test.dFld, Test.instanceCount, i2);
                i3 *= i3;
                for (i5 = i2; i5 < 11; i5++) {
                    for (i7 = i5; 1 > i7; i7++) {
                        Test.byFld -= (byte)Test.sFld;
                        Test.iArrFld1[i2 + 1] += (int)Test.dFld;
                        Test.instanceCount %= (Test.instanceCount | 1);
                        i3 += (i7 - i6);
                        Test.instanceCount -= i7;
                        Test.lArrFld[(i6 >>> 1) % N] *= i8;
                        i8 >>= i7;
                        f1 -= i6;
                        Test.iArrFld1[i2 - 1] += (int)f1;
                    }
                }
                break;
            case 112:
                Test.instanceCount += (i2 + i8);
                break;
            case 79:
                try {
                    i6 = (Test.iArrFld1[i2 + 1] % i8);
                    i6 = (i8 / 1188967579);
                    i3 = (-48451 / i5);
                } catch (ArithmeticException a_e) {}
            case 123:
                i6 = i5;
                break;
            case 120:
                i8 = (int)Test.dFld;
            case 114:
            case 94:
                f1 += i8;
                break;
            case 117:
                i9 <<= (int)Test.instanceCount;
                break;
            case 85:
                i8 >>>= 6;
            case 103:
                Test.iArrFld1[i2 + 1] = (int)Test.instanceCount;
                break;
            default:
                i9 >>= i3;
            }
        }
        vMeth_check_sum += i2 + i3 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9;
    }

    public static byte byMeth(int i, int i1) {

        float f=0.719F, fArr[]=new float[N];
        short s=-3548;
        int i10=201, i11=7, i12=-23, i13=-208;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -2.108878);
        FuzzerUtils.init(fArr, 1.983F);

        f += (float)(-((Test.instanceCount - s) + dArr[(0 >>> 1) % N]));
        vMeth();
        for (i10 = 11; i10 < 286; i10++) {
            for (i12 = 1; i12 < 6; ++i12) {
                fArr[i10 - 1] /= (i13 | 1);
                i11 += (int)f;
                if (i12 != 0) {
                }
                Test.instanceCount -= i12;
                i += 60544;
            }
        }
        dArr[(2639 >>> 1) % N] += Test.instanceCount;
        Test.dFld %= -154L;
        long meth_res = i + i1 + Float.floatToIntBits(f) + s + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-41.42293;
        int i14=-41243, i15=-194, i16=8, i17=-45782, i18=242, i19=14, i20=-45341, i21=8, i22=-13574, i23=-183, i24=-7,
            iArr[]=new int[N];
        float f2=0.288F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 0.432F);
        FuzzerUtils.init(iArr, 193);

        d -= ((d -= iArrFld[(6288 >>> 1) % N]) - (byMeth(i14, i14) * i14));
        f2 -= Test.instanceCount;
        for (i15 = 134; i15 > 4; i15 -= 2) {
            i14 = 192;
            Test.dFld -= f2;
            i16 += i15;
            for (i17 = i15; i17 < 385; i17++) {
                i16 += i17;
                switch (((i16 >>> 1) % 2) + 123) {
                case 123:
                    Test.byFld += (byte)(((i17 * i18) + i15) - Test.byFld);
                    i16 += (int)Test.instanceCount;
                    break;
                case 124:
                    i18 += (int)Test.instanceCount;
                    i14 = (int)Test.dFld;
                    i14 -= i16;
                    break;
                }
                Test.instanceCount = Test.sFld;
            }
            i16 += (i15 * i14);
            i14 += (i15 ^ i15);
        }
        f2 = f2;
        for (i19 = 6; i19 < 174; i19++) {
            for (i21 = 9; i21 < 149; i21++) {
                switch ((i21 % 8) + 81) {
                case 81:
                    i23 = 1;
                    while (++i23 < 2) {
                        iArrFld[i19] <<= i24;
                        switch ((i21 % 1) + 95) {
                        case 95:
                            i14 -= (int)d;
                            Test.lArrFld[i21] *= i21;
                            fArr1[i23] = Test.instanceCount;
                            break;
                        default:
                            if (Test.bFld) {
                                i14 -= i18;
                            } else {
                                Test.lArrFld = Test.lArrFld;
                            }
                        }
                    }
                case 82:
                    f2 = (float)0.28208;
                    break;
                case 83:
                    Test.bFld = Test.bFld;
                case 84:
                    i24 -= (int)-3280572653L;
                    break;
                case 85:
                    iArr = FuzzerUtils.int1array(N, (int)-27);
                    break;
                case 86:
                    i14 *= (int)Test.instanceCount;
                    break;
                case 87:
                    i18 += i21;
                    break;
                case 88:
                    Test.iArrFld1[i21] -= (int)f2;
                    break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
