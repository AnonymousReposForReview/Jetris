package tests.javafuzzer194;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:49:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1295600765L;
    public static float fFld=-34.206F;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -95);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5) {

        float f=25.51F;
        int i6=-54124, i7=33359, i8=-4706, i9=2, i10=29711, i11=25307;

        switch ((((i4 >>> 1) % 1) * 5) + 66) {
        case 67:
        default:
            Test.instanceCount = (long)f;
            i5 <<= 37898;
            for (i6 = 183; 6 < i6; i6--) {
                boolean b=false;
                if (b) continue;
                i5 >>= i6;
                for (i8 = i6; i8 < 9; ++i8) {
                    byte by1=8;
                    by1 = (byte)-1.86857;
                    i4 = i8;
                    for (i10 = 1; 1 < i10; i10--) {
                        Test.instanceCount >>= i9;
                        if (b) continue;
                        Test.instanceCount *= Test.instanceCount;
                        i11 -= (int)-7814L;
                        i5 |= i9;
                    }
                }
            }
        }
        vMeth2_check_sum += i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth1(int i2, int i3) {

        boolean b1=false;
        int i13=11, i14=3, i15=-22461, i16=-33466, i17=-3;

        vMeth2(i3, i3);
        if (b1) {
            for (int i12 : Test.iArrFld) {
                b1 = b1;
                i3 >>>= i12;
                Test.instanceCount -= i12;
                Test.iArrFld[(i12 >>> 1) % N] -= (int)Test.instanceCount;
            }
            for (i13 = 13; i13 < 263; ++i13) {
                i15 = 1;
                while ((i15 += 2) < 7) {
                    i3 = i14;
                    for (i16 = 1; i16 < 3; ++i16) {
                        i2 -= i2;
                        i3 = -22059;
                        Test.fFld += (((i16 * i14) + i16) - i16);
                        Test.fFld += (i16 - i2);
                    }
                }
            }
        } else {
            i2 -= (int)Test.fFld;
        }
        vMeth1_check_sum += i2 + i3 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 + i17;
    }

    public static void vMeth(int i1, double d, byte by) {

        int i18=51753, i19=14, i20=-9296, i21=48988, i22=168, i23=130, i24=33884;
        boolean b2=false;

        vMeth1(i1, 4);
        for (i18 = 1; i18 < 172; i18++) {
            i1 = (int)Test.instanceCount;
        }
        for (i20 = 7; i20 < 126; ++i20) {
            d = 13;
            Test.iArrFld[i20] *= (int)Test.instanceCount;
        }
        i22 = 1;
        while (++i22 < 287) {
            for (i23 = i22; 6 > i23; ++i23) {
                i19 = -4;
                Test.instanceCount *= by;
            }
        }
        Test.instanceCount += by;
        i24 >>= -10;
        b2 = b2;
        Test.iArrFld[(i1 >>> 1) % N] = (int)d;
        Test.iArrFld[(i23 >>> 1) % N] = (int)Test.instanceCount;
        vMeth_check_sum += i1 + Double.doubleToLongBits(d) + by + i18 + i19 + i20 + i21 + i22 + i23 + i24 + (b2 ? 1 :
            0);
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i25=10764, i26=13, i27=4, i28=51335, i29=14540, i30=-33368, i31=-15555, i32=-37, i33=6;
        byte by2=-74;
        short s=-32412;
        float f1=-2.913F;
        double d1=-74.79450;

        i = 1;
        do {
            vMeth(i, 120.103755, by2);
        } while (++i < 325);
        s *= (short)i;
        Test.iArrFld[(i >>> 1) % N] *= (int)Test.fFld;
        i25 <<= by2;
        i25 += (int)-1930321188L;
        i25 = (int)Test.instanceCount;
        i26 = 213;
        do {
            if (bFld) {
                if (bFld) {
                    if (false) {
                        s = (short)i25;
                    } else if (bFld) {
                        Test.fFld = 235;
                        for (f1 = 2; 234 > f1; f1++) {
                            i25 *= i;
                            bFld = bFld;
                            for (i28 = 1; i28 < 2; i28++) {
                                fArrFld[i28 - 1][(i26 >>> 1) % N] = Test.instanceCount;
                                Test.iArrFld[(int)(f1 - 1)] = 3;
                            }
                            Test.fFld += (f1 * f1);
                            switch (((i29 >>> 1) % 6) + 20) {
                            case 20:
                                for (i30 = 1; i30 < 2; i30++) {
                                    Test.instanceCount /= (i28 | 1);
                                    try {
                                        i25 = (Test.iArrFld[(int)(f1)] / i29);
                                        Test.iArrFld[i30 + 1] = (i30 % -2137251313);
                                        i27 = (22032 % i31);
                                    } catch (ArithmeticException a_e) {}
                                }
                                break;
                            case 21:
                                for (i32 = (int)(f1); 2 > i32; ++i32) {
                                    Test.fFld += i32;
                                    i29 += (((i32 * i31) + i32) - i26);
                                    i27 >>>= -61994;
                                    Test.iArrFld[i26] += i29;
                                    Test.instanceCount >>= i32;
                                }
                                break;
                            case 22:
                                bFld = true;
                                break;
                            case 23:
                                bFld = bFld;
                                break;
                            case 24:
                                i27 += i28;
                                break;
                            case 25:
                                s = (short)-96L;
                            default:
                                d1 += i29;
                            }
                        }
                    } else {
                        Test.iArrFld[i26] = i31;
                    }
                }
            } else if (bFld) {
                if (bFld) break;
            } else if (bFld) {
                i27 += 1;
            } else {
                i27 = i30;
            }
        } while ((i26 -= 2) > 0);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
