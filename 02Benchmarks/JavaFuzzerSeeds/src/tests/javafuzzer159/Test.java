package tests.javafuzzer159;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:11:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2709624509L;
    public double dFld=-23.118616;
    public static float fFld=0.1003F;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -45195);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=6, i5=-11, iArr[]=new int[N];
        float f=2.624F;

        FuzzerUtils.init(iArr, 140);

        for (i4 = 1; 152 > i4; i4++) {
            try {
                i3 = (-24718 / i4);
                i3 = (i3 % -73);
                iArr[i4 - 1] = (i4 / i5);
            } catch (ArithmeticException a_e) {}
            Test.instanceCount *= ((--Test.instanceCount) >> i5);
        }
        f -= 2.981F;
        long meth_res = i3 + i4 + i5 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i13) {

        float f1=-1.194F;
        int i14=81, i15=-1, i16=-10, i17=48429, i18=40;
        short s=28995;

        i13 <<= -236;
        for (f1 = 236; f1 > 14; --f1) {
            i13 *= i14;
            i13 -= i14;
        }
        i13 = i13;
        for (i15 = 13; i15 < 388; ++i15) {
            Test.iArrFld[i15][i15 + 1] += i14;
            s <<= (short)i15;
        }
        for (i17 = 1; 160 > i17; i17++) {
            i18 >>= (int)-34L;
            i13 += i18;
            i18 = i15;
            Test.instanceCount = i14;
            i14 += i18;
            i13 = i17;
        }
        long meth_res = i13 + Float.floatToIntBits(f1) + i14 + i15 + i16 + s + i17 + i18;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i6, int i7, int i8) {

        int i9=-1, i10=148, i11=-94, i12=101, i19=0, i20=11230;
        boolean b=true;
        float f2=-2.708F;

        for (i9 = 5; i9 < 164; ++i9) {
            for (i11 = 1; i11 < 10; i11++) {
                Test.instanceCount += (Test.instanceCount / (iMeth1(i11) | 1));
                Test.iArrFld[i11 + 1][i11 + 1] >>= (int)Test.instanceCount;
                i12 += (i11 + Test.instanceCount);
                if (b) continue;
                for (i19 = 1; 2 > i19; ++i19) {
                    Test.instanceCount *= i20;
                    i10 <<= i6;
                    i6 = (int)Test.instanceCount;
                    i6 = i11;
                    Test.iArrFld[i11 - 1][i11] = i20;
                    Test.instanceCount <<= 40394L;
                    f2 += i9;
                    if (b) continue;
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) + i19 + i20 + Float.floatToIntBits(f2);
    }

    public static void vMeth(int i2) {

        double d=-1.100896;
        int i21=202, i22=220, i23=60853, i24=-1, i25=107;
        long l=3807292603L;
        boolean b1=true;
        float fArr[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr, 0.429F);
        FuzzerUtils.init(sArr, (short)22785);

        d = iMeth((int)(7 - (d--)));
        vMeth1(i2, i2, i2);
        for (i21 = 199; i21 > 11; i21--) {
            i22 += (i21 * i21);
            for (i23 = 8; i23 > 1; i23--) {
                for (l = 2; 1 < l; l -= 3) {
                    fArr[i21] = 239;
                    i22 = i22;
                    i25 = (int)-8L;
                    Test.instanceCount += i25;
                    sArr[(int)(l - 1)] += (short)Test.instanceCount;
                    Test.iArrFld[i21][i21 + 1] = i23;
                }
                try {
                    i24 = (i23 / 5);
                    i2 = (i25 % i2);
                    i2 = (18 / i23);
                } catch (ArithmeticException a_e) {}
                i22 = (int)Test.instanceCount;
                if (b1) continue;
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i21 + i22 + i23 + i24 + l + i25 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-250, i1=-9, i26=9, i27=17, i28=10, i29=-249, i30=-1692, i31=-208, i32=0, i33=38943;
        double d1=0.4248;
        byte by=27;
        long l1=-109L;

        for (i = 2; i < 161; ++i) {
            vMeth(i1);
            i1 = (int)Test.instanceCount;
            for (i26 = 158; i < i26; i26 -= 2) {
                switch ((i % 6) + 12) {
                case 12:
                    if (false) {
                        i27 -= i1;
                    } else {
                        for (d1 = i26; d1 < 1; ++d1) {
                            Test.instanceCount /= (i1 | 1);
                        }
                        for (i29 = 1; 1 < i29; i29--) {
                            i30 -= (int)Test.instanceCount;
                            dFld = i27;
                            Test.fFld += (4 + (i29 * i29));
                        }
                    }
                case 13:
                    i28 %= (int)(i27 | 1);
                    break;
                case 14:
                    i28 += (((i26 * i30) + i30) - i29);
                    Test.iArrFld[i + 1][i26] += (int)Test.instanceCount;
                    i31 += i26;
                    for (i32 = i26; i32 < 1; ++i32) {
                        i33 = i29;
                        Test.instanceCount += Test.instanceCount;
                        switch ((((i >>> 1) % 6) * 5) + 48) {
                        case 66:
                            i27 += -108;
                            break;
                        case 77:
                            Test.iArrFld[i26][i - 1] += i28;
                            Test.iArrFld[i + 1][i26] <<= (int)Test.instanceCount;
                            Test.fFld -= by;
                            break;
                        case 67:
                            Test.instanceCount -= i32;
                        case 54:
                            Test.instanceCount *= -10781;
                        case 52:
                            by += (byte)Test.instanceCount;
                            Test.fFld += Test.fFld;
                            Test.iArrFld[i26][i26] >>= (int)l1;
                            break;
                        case 53:
                            i30 += (174 + (i32 * i32));
                        }
                    }
                    break;
                case 15:
                    Test.iArrFld[i][i + 1] = i31;
                    break;
                case 16:
                    i30 >>>= i28;
                case 17:
                    l1 += by;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
