package tests.javafuzzer2553;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:28:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=208L;
    public static float fFld=2.397F;
    public static byte byFld=12;
    public volatile double dFld=49.103782;
    public static boolean bFld=false;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f) {

        double d2=-31.64123;
        int i4=12, i5=179, i6=0, i7=125, i8=-25853, i9=0, iArr[]=new int[N];
        boolean b=true, bArr[]=new boolean[N];
        short s=-26883;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 31L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, -140);

        d2 += i4;
        lArr[(i4 >>> 1) % N][(i4 >>> 1) % N] = -55662;
        for (i5 = 1; i5 < 383; ++i5) {
            for (i7 = i5; 4 > i7; i7++) {
                f = i7;
                bArr[i7 + 1] = b;
                i9 = 1;
                do {
                    s >>>= (short)-10;
                    i8 += i4;
                    iArr[i5] = i5;
                    i8 += (((i9 * f) + Test.instanceCount) - Test.instanceCount);
                    d2 += i4;
                    i8 += i4;
                    if (true) break;
                    i8 += (((i9 * i6) + i8) - f);
                } while (--i9 > 0);
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i4 + i5 + i6 + i7 + i8 + (b ? 1 :
            0) + i9 + s + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i3=-13, i10=40043, i11=-24491, iArr1[]=new int[N];
        double d1=71.73151;
        boolean b1=false, bArr1[]=new boolean[N];
        byte by=-70;
        long lArr1[]=new long[N];

        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(lArr1, 9L);
        FuzzerUtils.init(iArr1, 120);

        i3 <<= (int)(((d1 * Test.instanceCount) - i3) + ((i3 * i3) - i3));
        vMeth1(-1.304F);
        i3 = i3;
        i3 *= -117;
        i10 = 1;
        do {
            if (true) continue;
            bArr1[i10 - 1] = b1;
            lArr1[i10 + 1] = i3;
            Test.instanceCount += (((i10 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
            Test.instanceCount ^= Test.instanceCount;
            i3 = i10;
            switch (((19692 >>> 1) % 3) + 81) {
            case 81:
                i11 += (int)Test.instanceCount;
                iArr1[i10 + 1] = i11;
                Test.fFld -= i10;
                break;
            case 82:
                Test.instanceCount += (i10 * i10);
                break;
            case 83:
                Test.fFld += (((i10 * i11) + i3) - by);
                break;
            default:
                if (i3 != 0) {
                    vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + i10 + (b1 ? 1 : 0) + i11 + by +
                        FuzzerUtils.checkSum(bArr1) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            }
        } while (++i10 < 190);
        vMeth_check_sum += i3 + Double.doubleToLongBits(d1) + i10 + (b1 ? 1 : 0) + i11 + by +
            FuzzerUtils.checkSum(bArr1) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, double d, int i2) {

        int i12=3, i13=6, i14=63955, i15=95, i16=16340;
        double d3=-78.111720;
        boolean b2=true, bArr2[]=new boolean[N];
        float f1=-78.941F;

        FuzzerUtils.init(bArr2, false);

        vMeth();
        for (i12 = 12; i12 < 232; i12++) {
            for (d3 = 1; d3 < 7; d3++) {
                bArr2[(int)(d3)] = b2;
                f1 += (float)d;
                i13 = (int)Test.instanceCount;
                i2 *= i14;
                i1 = i2;
                i13 *= i13;
                d += i12;
            }
            if (b2) break;
        }
        for (i15 = 11; i15 < 396; ++i15) {
            i13 = i14;
            i13 = i15;
            Test.byFld += (byte)i14;
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + i2 + i12 + i13 + Double.doubleToLongBits(d3) + i14 + (b2 ? 1
            : 0) + Float.floatToIntBits(f1) + i15 + i16 + FuzzerUtils.checkSum(bArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=14450, i17=-43, i18=-12, i19=-12, i20=-3, iArr2[]=new int[N];
        byte byArr[][]=new byte[N][N];
        boolean bArr3[]=new boolean[N];

        FuzzerUtils.init(iArr2, -1);
        FuzzerUtils.init(byArr, (byte)-81);
        FuzzerUtils.init(bArr3, false);

        i = iMeth(i, dFld, -12);
        i -= i;
        iArr2[(i >>> 1) % N] -= i;
        for (i17 = 363; i17 > 5; --i17) {
            i19 = 1;
            while (++i19 < 70) {
                i18 = i19;
                i20 = 1;
                while (++i20 < 1) {
                    short s1=10897;
                    i -= i;
                    i = (int)Test.fFld;
                    i += (int)(-1L + (i20 * i20));
                    i <<= -102;
                    i18 += (((i20 * i18) + i17) - i19);
                    i18 = (int)72.92881;
                    i18 = (int)Test.fFld;
                    switch ((((45694 >>> 1) % 5) * 5) + 20) {
                    case 27:
                        switch (((i19 % 7) * 5) + 26) {
                        case 58:
                            byArr[i19 - 1][i20 - 1] = (byte)0L;
                            i18 += (int)dFld;
                            i18 = (int)140L;
                            break;
                        case 36:
                            Test.fFld -= Test.instanceCount;
                            break;
                        case 45:
                            i18 = i17;
                            break;
                        case 41:
                            i18 = i18;
                            i += i18;
                            if (Test.bFld) break;
                            Test.instanceCount = i19;
                            break;
                        case 33:
                        case 28:
                            s1 += (short)(((i20 * i17) + i19) - i19);
                            break;
                        case 46:
                            i18 += i20;
                            break;
                        }
                        i18 = (int)Test.instanceCount;
                        i += i18;
                        iArr2[i20] = (int)Test.instanceCount;
                        break;
                    case 25:
                        bArr3[i20] = Test.bFld;
                        break;
                    case 34:
                        i18 *= (int)Test.fFld;
                        break;
                    case 36:
                        if (Test.bFld) continue;
                        break;
                    case 38:
                        Test.instanceCount = 13L;
                        break;
                    default:
                        Test.instanceCount <<= -224;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
