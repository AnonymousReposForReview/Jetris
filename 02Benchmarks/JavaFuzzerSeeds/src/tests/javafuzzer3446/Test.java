package tests.javafuzzer3446;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:29:45 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6783788276102466492L;
    public static int iFld=-64985;
    public static long lFld=40305L;
    public double dFld=-1.22062;
    public byte byFld=74;
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.710F);
    }

    public static long bMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, long l1) {

        int i5=-43415, i6=237;

        i4 += i4;
        for (i5 = 312; i5 > 14; i5--) {
            Test.instanceCount ^= l1;
        }
        Test.instanceCount &= i6;
        long meth_res = i4 + l1 + i5 + i6;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth(float f, int i2, int i3) {

        float f1=-8.705F;
        int i7=12395, i8=8, i9=194, iArr[][]=new int[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -63497L);
        FuzzerUtils.init(iArr, -40);

        f *= iMeth(Test.iFld, Test.instanceCount);
        lArr[(i2 >>> 1) % N] = (long)f;
        for (f1 = 9; f1 < 207; ++f1) {
            i8 = 8;
            while (--i8 > 0) {
                iArr[(int)(f1)][(int)(f1)] = (int)Test.instanceCount;
                switch ((int)(((f1 % 3) * 5) + 91)) {
                case 98:
                    i2 -= i3;
                    break;
                case 96:
                case 92:
                    iArr[(int)(f1 - 1)] = iArr[(int)(f1)];
                    Test.instanceCount = Test.instanceCount;
                    i9 = 1;
                    do {
                        switch ((i9 % 6) + 28) {
                        case 28:
                            Test.iFld += (((i9 * i7) + Test.instanceCount) - Test.instanceCount);
                            i2 = (int)Test.lFld;
                            i7 += (int)522186185L;
                            iArr[i8][i8 + 1] -= Test.iFld;
                            break;
                        case 29:
                            Test.lFld += i2;
                            break;
                        case 30:
                            if (i8 != 0) {
                            }
                            break;
                        case 31:
                            i7 += (i9 * Test.instanceCount);
                            break;
                        case 32:
                            i2 >>= (int)-3902818148L;
                            break;
                        case 33:
                            lArr[i8] -= i2;
                            break;
                        }
                    } while (++i9 < 1);
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + Float.floatToIntBits(f1) + i7 + i8 + i9 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static boolean bMeth(long l, int i1) {

        short s=-17296;
        float f2=103.36F;
        boolean b1=true, bArr[]=new boolean[N];
        byte by=12;
        int i10=49426, i11=-22222, iArr1[]=new int[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, -38);

        s -= (short)fMeth(f2, Test.iFld, i1);
        bArr[(i1 >>> 1) % N] = b1;
        iArr1[(i1 >>> 1) % N] /= 21755;
        by += (byte)i1;
        Test.lFld *= 11553;
        Test.lFld = Test.iFld;
        for (i10 = 217; i10 > 4; i10--) {
            i11 += (i10 + i1);
            Test.iFld |= i10;
            iArr1[i10] = by;
            if (b1) break;
            f2 = i1;
            i11 += -10;
            Test.lFld += i10;
            i1 <<= -39693;
        }
        long meth_res = l + i1 + s + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + by + i10 + i11 +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false, bArr1[][]=new boolean[N][N];
        int i=-6, i12=-147, i13=3, i14=-18, i15=0, i16=-14, i17=61, i18=1, i19=45496, i20=36, iArr2[]=new int[N];
        short s1=-25259;
        float f3=-1.538F;

        FuzzerUtils.init(iArr2, -47);
        FuzzerUtils.init(bArr1, true);

        b = ((Math.abs(i) < (10 + (-20018 - i))) && bMeth(3153531295L, -116));
        s1 -= (short)-18175;
        for (i12 = 2; i12 < 222; ++i12) {
            i14 = 1;
            while (++i14 < 114) {
                switch ((i14 % 4) + 15) {
                case 15:
                    Test.instanceCount <<= Test.lFld;
                    for (i15 = 1; i15 < 1; i15 += 3) {
                        i13 += (int)dFld;
                        i13 = i;
                    }
                    if (b) continue;
                case 16:
                    iArr2[i14 + 1] >>>= i13;
                    for (i17 = i14; i17 < 1; ++i17) {
                        f3 += i16;
                        f3 -= i15;
                        i18 += (((i17 * i16) + i16) - i16);
                        Test.lFld <<= i18;
                        f3 += (((i17 * f3) + i) - i13);
                        i16 += (((i17 * Test.lFld) + Test.instanceCount) - i13);
                        if (b) continue;
                        i -= (int)60.547F;
                    }
                    break;
                case 17:
                    for (i19 = 1; i19 > 1; i19 -= 2) {
                        switch (((i19 % 7) * 5) + 17) {
                        case 35:
                            byFld = (byte)f3;
                            Test.instanceCount = i14;
                            s1 = (short)-241;
                            i18 -= (int)Test.instanceCount;
                        case 40:
                            iArr2 = iArr2;
                            dFld = Test.instanceCount;
                            bArr1[(65140 >>> 1) % N][i12 - 1] = b;
                        case 46:
                            Test.instanceCount = i;
                            break;
                        case 51:
                            i16 = i12;
                            break;
                        case 39:
                            Test.iFld = i12;
                        case 47:
                            Test.lFld = byFld;
                            break;
                        case 21:
                            i18 += (int)(104.256F + (i19 * i19));
                            break;
                        default:
                            i16 = i15;
                        }
                    }
                    break;
                case 18:
                    Test.fArrFld[i12] = 0;
                default:
                    Test.lFld = Test.iFld;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  fMeth ->  fMeth bMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
