package tests.javafuzzer1468;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:11:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-48L;
    public float fFld=-1.168F;
    public float fArrFld[]=new float[N];
    public static double dArrFld[][]=new double[N][N];
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -1.41758);
        FuzzerUtils.init(Test.byArrFld, (byte)13);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i8, int i9) {

        int i10=120, i11=84, i12=65154, i13=-24, iArr1[][]=new int[N][N];
        double d=1.125724;
        float f1=-29.659F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, 12695);

        for (i10 = 160; i10 > 9; i10--) {
            for (d = 1; d < 10; d++) {
                i13 = 1;
                do {
                    switch ((int)(((d % 7) * 5) + 16)) {
                    case 36:
                        i11 -= i12;
                        bArr[i10] = false;
                        break;
                    case 48:
                        if (i9 != 0) {
                        }
                        break;
                    case 24:
                        Test.dArrFld = Test.dArrFld;
                        i8 -= (int)2L;
                        break;
                    case 51:
                        i11 |= i9;
                        iArr1[(int)(d - 1)] = iArr1[i10 - 1];
                        break;
                    case 45:
                        i8 -= i12;
                        i8 = -7;
                        i9 = i12;
                        iArr1[i10 + 1][i13 - 1] ^= i8;
                        break;
                    case 18:
                        f1 *= (float)d;
                        break;
                    case 23:
                        i8 += (int)Test.instanceCount;
                    }
                } while (++i13 < 2);
            }
        }
        long meth_res = i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + i12 + i13 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i7=56268;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 24L);

        lArr[(i7 >>> 1) % N] = (i7 % (iMeth(i7, i7) | 1));
        Test.instanceCount -= i7;
        Test.byArrFld[(2 >>> 1) % N] -= (byte)i7;
        vMeth1_check_sum += i7 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i4) {

        int i5=4, i6=196, i14=8503, iArr[]=new int[N];
        float f=-10.847F;
        boolean b=true;
        double d1=-1.64766;

        FuzzerUtils.init(iArr, -41367);

        for (i5 = 184; i5 > 7; i5--) {
            f += (Math.abs(iArr[i5 - 1]) - (++i6));
        }
        b = (b = b);
        vMeth1();
        i14 = 1;
        while (++i14 < 248) {
            f += i4;
            iArr[i14 - 1] *= i5;
            if (true) break;
            d1 *= i14;
            i4 = (int)Test.instanceCount;
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f) + (b ? 1 : 0) + i14 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-61799, i1=9402, i2=-104, i3=37846, i15=208, i16=-101, i17=-188, i18=-51657, i19=69, iArr2[][]=new
            int[N][N];
        short s=-9402;
        float f2=0.281F;
        double d2=48.17590;
        byte by=-73;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -9);
        FuzzerUtils.init(lArr1, 60774L);

        i = 1;
        while (++i < 140) {
            for (i1 = 5; i1 < 179; i1++) {
                i2 += (i1 * i1);
            }
            i3 = 1;
            while (++i3 < 179) {
                fArrFld[i3 - 1] -= (fFld++);
            }
            i2 &= (i2++);
            vMeth(i2);
            i2 += i;
            Test.instanceCount = i;
            Test.byArrFld[i - 1] = (byte)i2;
        }
        for (i15 = 4; 182 > i15; ++i15) {
            i2 += (((i15 * Test.instanceCount) + s) - i);
            Test.instanceCount = i1;
        }
        for (f2 = 10; f2 < 225; ++f2) {
            i16 = i1;
            for (i18 = 7; i18 < 117; ++i18) {
                iArr2[i18][(int)(f2 + 1)] >>= (int)Test.instanceCount;
            }
            if (true) continue;
            lArr1[(int)(f2)] <<= Test.instanceCount;
            iArr2[(int)(f2)][(int)(f2 + 1)] -= i18;
            switch (((i15 >>> 1) % 5) + 91) {
            case 91:
                fFld *= i18;
                break;
            case 92:
                i19 = i;
                break;
            case 93:
                Test.instanceCount += i19;
                d2 = 1;
                while (++d2 < 117) {
                    i19 += (int)d2;
                    iArr2[(int)(d2 + 1)] = iArr2[(int)(d2 - 1)];
                    i16 = -177;
                }
                i16 = i2;
                break;
            case 94:
                i17 >>= -7564;
            case 95:
                by >>= (byte)Test.instanceCount;
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
