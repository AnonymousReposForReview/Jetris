package tests.javafuzzer1042;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:12:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static int iFld=1;
    public static volatile float fFld=113.493F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -3);
        FuzzerUtils.init(Test.lArrFld, -3899092220L);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i3, int i4) {

        int i5=61767, i6=2, i7=-9, i8=-118, i9=203;
        double d1=86.39957;
        boolean b=true;

        i5 = 1;
        while (++i5 < 266) {
            for (i6 = 1; i6 < 6; i6++) {
                Test.iArrFld[i6 - 1] += (int)1.42F;
            }
            d1 -= d1;
            for (i8 = 1; 6 > i8; i8++) {
                b = b;
                i3 += (((i8 * Test.instanceCount) + f) - i5);
                Test.lArrFld[i8] <<= i6;
                i4 |= i4;
                Test.iArrFld[i8 - 1] = Test.iFld;
                i7 += i8;
                Test.iArrFld[i8 + 1] += i9;
                d1 -= -3;
                f += Test.instanceCount;
            }
            i7 |= -5;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 +
            (b ? 1 : 0);
    }

    public static short sMeth() {

        int i2=-3;

        Test.instanceCount += ((++i2) + Integer.reverseBytes(--i2));
        vMeth1(Test.fFld, i2, i2);
        long meth_res = i2;
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(short s) {

        int i=65, i1=199, i10=-23937, i11=-10, i12=-753, i13=-5, i14=112, i15=-14, iArr[][]=new int[N][N];
        double d=-1.20930;

        FuzzerUtils.init(iArr, -2);

        for (i = 398; 4 < i; i -= 2) {
            d *= ((-Test.iArrFld[i - 1]) - (i1 - sMeth()));
            i1 += (((i * i1) + Test.fFld) - i);
            switch (((i % 2) * 5) + 119) {
            case 121:
                Test.iArrFld[i - 1] = i;
                break;
            case 126:
                Test.iArrFld[i] *= (int)3787792084L;
            }
            Test.lArrFld[i + 1] += Test.instanceCount;
        }
        i1 = (int)Test.instanceCount;
        Test.fFld = i1;
        for (i10 = 3; i10 < 204; i10++) {
            for (i12 = 1; i12 < 8; i12++) {
                Test.instanceCount = -21829;
            }
        }
        for (i14 = 12; 207 > i14; i14++) {
            Test.fFld -= -2.623F;
            iArr = iArr;
        }
        vMeth_check_sum += s + i + i1 + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=199, i18=-30, i20=-1, i21=-2, i22=187, i23=-9;
        double d2=-40.95634, d3=124.121704;
        boolean b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.955F);

        vMeth((short)(14268));
        fArr[(Test.iFld >>> 1) % N] = Test.iFld;
        for (i17 = 8; i17 < 179; ++i17) {
            int i19=160;
            Test.iArrFld[i17 + 1] -= 126;
            Test.iFld -= i19;
            Test.fFld -= 56989L;
            Test.lArrFld[i17 - 1] *= Test.iFld;
            Test.iFld += (int)-1.549F;
            for (i20 = 8; i20 < 147; ++i20) {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-26132);
                for (d2 = 1; d2 < 2; d2++) {
                    i18 = -58595;
                    Test.iArrFld = Test.iArrFld;
                    Test.fFld += -1529951221L;
                    if (false) break;
                    Test.iFld <<= i20;
                    i18 += (int)4789191645884109624L;
                    Test.lArrFld[i20] = Test.instanceCount;
                    Test.instanceCount = 8;
                    Test.iArrFld[(int)(d2 + 1)] = i17;
                }
                i22 = i19;
                i21 *= Test.iFld;
                d3 += Test.instanceCount;
            }
            Test.fFld -= (float)d3;
            if (b1) break;
            Test.iArrFld[i17 + 1] += Test.iFld;
        }
        i18 = i20;
        i23 = 1;
        while (++i23 < 141) {
            Test.iArrFld[i23] <<= i17;
            Test.instanceCount |= i22;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
