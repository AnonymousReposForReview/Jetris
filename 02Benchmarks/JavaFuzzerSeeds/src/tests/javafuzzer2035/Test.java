package tests.javafuzzer2035;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:43:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-51344L;
    public static volatile double dFld=-43.85637;
    public short sFld=6888;
    public byte byFld=85;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 19510);
        FuzzerUtils.init(Test.lArrFld, 8L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b) {

        int i2=-19966, i3=86, i4=-175, i5=45972;
        byte by=126;
        float f2=0.720F;

        Test.iArrFld = FuzzerUtils.int1array(N, (int)-127);
        for (i2 = 4; i2 < 279; ++i2) {
            by = (byte)Test.instanceCount;
            i3 = i3;
            Test.iArrFld = Test.iArrFld;
            Test.instanceCount += (13 + (i2 * i2));
            switch ((i2 % 5) + 74) {
            case 74:
                f2 *= i3;
                break;
            case 75:
                i3 &= i2;
                if (i2 != 0) {
                }
                i3 *= -65534;
                break;
            case 76:
                i3 += (((i2 * i2) + i2) - i2);
                for (i4 = 1; i4 < 6; i4++) {
                    i3 += by;
                    Test.dFld %= (i4 | 1);
                }
            case 77:
                Test.instanceCount = by;
                break;
            case 78:
                i3 *= -9;
                break;
            }
        }
        long meth_res = (b ? 1 : 0) + i2 + i3 + by + Float.floatToIntBits(f2) + i4 + i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, float f1) {

        boolean b1=true;
        int i6=2, i7=13, i8=59969, i9=14874;
        float f3=1.556F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 12L);

        i1 |= (i1 = (-(i1 - i1)));
        iMeth(b1);
        Test.iArrFld[(i1 >>> 1) % N] = -9;
        lArr = lArr;
        for (i6 = 2; i6 < 177; ++i6) {
            i7 = i1;
        }
        i8 = 1;
        do {
            Test.instanceCount = i7;
            for (f3 = 1; 5 > f3; f3++) {
                i1 += (int)(f3 * f3);
                f1 += f3;
                lArr[i8 - 1] *= i6;
                if (false) {
                    i1 += (int)(((f3 * i7) + f1) - f1);
                } else {
                    Test.instanceCount += (36 + (f3 * f3));
                }
            }
        } while (++i8 < 350);
        vMeth1_check_sum += i1 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) + i6 + i7 + i8 + Float.floatToIntBits(f3) + i9
            + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(double d, int i, float f) {

        int i10=-187, i11=4, i12=-56211, i13=3, i14=-2, i15=5, i16=-48120, iArr[][]=new int[N][N];
        byte by1=-37;

        FuzzerUtils.init(iArr, 22093);

        iArr[(i >>> 1) % N][(i >>> 1) % N] -= (i++);
        vMeth1(i, f);
        for (i10 = 12; 219 > i10; i10++) {
            i12 = 1;
            do {
                i13 = 1;
                do {
                    i >>= i13;
                } while (++i13 < 1);
                i11 = (int)Test.dFld;
            } while (++i12 < 8);
            Test.dFld += Test.instanceCount;
            Test.iArrFld[i10 - 1] = by1;
            i11 = (int)3L;
            i11 *= (int)Test.instanceCount;
            for (i14 = i10; i14 < 8; ++i14) {
                i15 += i16;
                i = (int)Test.instanceCount;
                Test.lArrFld[i14 - 1] = (long)70.46F;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + Float.floatToIntBits(f) + i10 + i11 + i12 + i13 + by1 + i14
            + i15 + i16 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=1, i18=6, i19=-28317, i20=-5, i21=188, i22=-9, i23=-40, i24=41216, i25=-8, i26=240, i27=-7, i28=131,
            i29=-13394, i30=-239;
        float f4=2.344F;
        boolean b2=false;
        double d1=-38.23916;

        vMeth(Test.dFld, i17, f4);
        i17 = i17;
        if (true) {
            i17 -= i17;
        } else if (b2) {
            Test.lArrFld[(i17 >>> 1) % N] |= i17;
            i17 += sFld;
        }
        for (i18 = 375; i18 > 20; i18 -= 3) {
            f4 *= -10076;
            Test.instanceCount -= 4400500432862682650L;
        }
        for (i20 = 7; i20 < 125; ++i20) {
            for (d1 = 13; d1 < 212; d1++) {
                if (b2) break;
                i22 ^= i19;
                for (i23 = 2; i23 > 1; --i23) {
                    Test.instanceCount *= i22;
                    i22 *= (int)f4;
                    i19 -= (int)Test.instanceCount;
                }
                byFld += (byte)(d1 - f4);
                for (i25 = 2; d1 < i25; i25 -= 2) {
                    byFld *= (byte)i17;
                    i19 += (int)f4;
                    i17 <<= -13;
                    Test.instanceCount += i25;
                }
                i21 -= (int)f4;
            }
            Test.instanceCount += (((i20 * f4) + i17) - f4);
            for (i27 = 6; i27 < 212; ++i27) {
                for (i29 = 2; i29 > 1; i29--) {
                    i22 *= i21;
                    f4 += (-670024240L + (i29 * i29));
                }
                i21 += (i27 - i24);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
