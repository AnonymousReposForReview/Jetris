package tests.javafuzzer3165;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:07:47 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=4L;
    public static volatile float fFld=-63.605F;
    public static double dFld=-38.17819;
    public long lFld=579797917L;
    public short sFld=30667;

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-12196, i7=5, i8=-101, i9=-41779, i10=58574, i11=-12, i12=-220, iArr1[]=new int[N];
        short s=3127;

        FuzzerUtils.init(iArr1, -10);

        iArr1[(i6 >>> 1) % N] ^= 25590;
        i6 = i6;
        s += (short)i6;
        for (i7 = 6; i7 < 166; ++i7) {
            Test.fFld += (i7 + i8);
            for (i9 = 1; i9 < 10; i9++) {
                boolean b=false;
                Test.instanceCount = Test.instanceCount;
                if (i8 != 0) {
                    vMeth1_check_sum += i6 + s + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                if (b) continue;
                i6 = 89;
                iArr1[i7] *= i7;
            }
            i8 *= i8;
            for (i11 = 1; i11 < 10; ++i11) {
                iArr1[i11] = i10;
                i8 += (((i11 * i10) + i8) - i10);
            }
        }
        vMeth1_check_sum += i6 + s + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth(long l, int i5) {


        vMeth1();
        long meth_res = l + i5;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i4) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 117);

        Test.fFld *= ((iArr[(128 >>> 1) % N]++) * fMeth(Test.instanceCount, i4));
        Test.instanceCount *= (long)Test.dFld;
        i4 <<= (int)Test.instanceCount;
        Test.fFld = (float)Test.dFld;
        vMeth_check_sum += i4 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=252, i1=-196, i2=47119, i3=13, i13=0, i14=8, iArr2[]=new int[N], iArr3[]=new int[N];
        byte by=-3;
        float f=-2.32F, fArr[]=new float[N];
        boolean b1=true, bArr[]=new boolean[N];
        double d=-60.34185;

        FuzzerUtils.init(iArr2, -54676);
        FuzzerUtils.init(fArr, -107.404F);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr3, 10);

        for (i = 125; 4 < i; --i) {
            for (i2 = 207; i2 > 8; i2--) {
                vMeth(i);
                i1 += i2;
                iArr2[i] -= (int)Test.instanceCount;
                i1 -= (int)Test.instanceCount;
                i1 = i3;
                iArr2[i2] = (int)Test.instanceCount;
                switch (((i >>> 1) % 7) + 43) {
                case 43:
                    i3 += (int)Test.dFld;
                    switch ((i2 % 2) + 75) {
                    case 75:
                        by &= (byte)i2;
                        f = 1;
                        while (++f < 2) {
                            fArr[(int)(f - 1)] = i1;
                            bArr[(int)(f + 1)] = b1;
                            Test.dFld = i3;
                        }
                        for (i13 = i; i13 < 2; ++i13) {
                            lFld *= lFld;
                            iArr2[i13 + 1] &= i1;
                            lFld += (long)d;
                            switch (((i % 6) * 5) + 20) {
                            case 48:
                            case 50:
                                switch ((i2 % 1) + 82) {
                                case 82:
                                    i3 += i2;
                                    switch (((i2 % 8) * 5) + 104) {
                                    case 115:
                                        i1 += i13;
                                        iArr3[i13 - 1] += 239;
                                        break;
                                    case 113:
                                        i3 += (int)Test.fFld;
                                        by -= (byte)Test.fFld;
                                        sFld += (short)(-13 + (i13 * i13));
                                        break;
                                    case 141:
                                        i1 -= (int)-4L;
                                        break;
                                    case 107:
                                        by += (byte)(i13 - Test.fFld);
                                        break;
                                    case 136:
                                        i3 |= i3;
                                        break;
                                    case 108:
                                        i1 += i13;
                                        break;
                                    case 123:
                                        b1 = b1;
                                        break;
                                    case 114:
                                        i14 -= i14;
                                        break;
                                    default:
                                        i3 |= i1;
                                    }
                                    break;
                                default:
                                    if (true) break;
                                }
                                break;
                            case 25:
                            case 49:
                                Test.fFld += Test.instanceCount;
                                break;
                            case 34:
                                i1 = (int)Test.instanceCount;
                                break;
                            case 45:
                                lFld += i13;
                                break;
                            }
                        }
                    case 76:
                        i3 <<= i13;
                        break;
                    default:
                        i14 += -17;
                    }
                    break;
                case 44:
                case 45:
                    i1 += (int)Test.dFld;
                    break;
                case 46:
                    iArr3[i - 1] += i;
                case 47:
                    Test.instanceCount += i3;
                case 48:
                    lFld -= 16881L;
                    break;
                case 49:
                    i3 += i2;
                    break;
                default:
                    i14 = 77;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
