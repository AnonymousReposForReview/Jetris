package tests.javafuzzer173;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:14:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=107L;
    public float fFld=29.330F;
    public double dFld=0.76437;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -19421);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth(long l, int i1) {


        i1 = (int)(++Test.instanceCount);
        vMeth_check_sum += l + i1;
    }

    public static void vMeth1(int i6) {

        int i7=-60646, i8=-53217, i9=-10, i10=-8, i11=-1, iArr1[]=new int[N], iArr2[]=new int[N];
        byte by=4;
        double d=2.82205;
        float f=1.911F;

        FuzzerUtils.init(iArr1, 63130);
        FuzzerUtils.init(iArr2, -32813);

        for (i7 = 15; i7 < 322; ++i7) {
            for (i9 = 5; i9 > 1; i9 -= 3) {
                boolean b=false;
                i10 -= i6;
                by += (byte)i9;
                if (b) {
                    i10 += (i9 * i9);
                    iArr1[i7] -= 24415;
                    i8 += (((i9 * i9) + i9) - Test.instanceCount);
                } else {
                    iArr2[i7] -= (int)Test.instanceCount;
                    i6 = i7;
                    d += i10;
                    for (f = 1; f < 5; ++f) {
                        i10 = i7;
                        i10 += 60270;
                        iArr2[i9 + 1] *= i7;
                    }
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + by + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i11 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public float fMeth(int i3) {

        int i4=46636, i5=-44716, i12=-200, i13=-9, iArr3[]=new int[N], iArr4[][]=new int[N][N];
        boolean b1=true;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(iArr3, -223);
        FuzzerUtils.init(lArr, -1921085215L);
        FuzzerUtils.init(iArr4, 14);

        for (i4 = 378; 5 < i4; --i4) {
            vMeth1(i3);
            i3 = (int)Test.instanceCount;
        }
        i3 >>>= (int)Test.instanceCount;
        i5 = (int)fFld;
        for (i12 = 3; i12 < 169; i12++) {
            iArr3[i12 - 1] >>= i4;
            switch ((((i3 >>> 1) % 10) * 5) + 13) {
            case 23:
                if (b1) continue;
                break;
            case 47:
                i5 += (int)Test.instanceCount;
                if (b1) {
                    dFld = Test.instanceCount;
                }
            case 35:
                if (false) {
                    i5 = (int)fFld;
                    lArr[i12][i12 - 1] -= i13;
                } else if (true) {
                    Test.instanceCount = 58L;
                }
                break;
            case 57:
                i5 >>= i12;
                break;
            case 56:
                Test.instanceCount += i3;
                break;
            case 26:
                iArr4 = iArr4;
            case 54:
                i5 += (int)Test.instanceCount;
                break;
            case 43:
                i13 = (int)Test.instanceCount;
                break;
            case 15:
                i3 >>= i5;
            case 16:
                iArr4[i12 - 1][i12 - 1] *= (int)-8.156F;
                break;
            }
        }
        long meth_res = i3 + i4 + i5 + i12 + i13 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr3) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr4);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth() {

        int i2=13507, i14=3702, i15=34098, i16=-199, i17=9, i18=0, iArr[]=new int[N];
        float f1=1.378F;
        short s=-22975, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)15931);
        FuzzerUtils.init(iArr, -2);

        sArr[(i2 >>> 1) % N] = (short)Integer.reverseBytes(i2);
        iArr[(-5 >>> 1) % N] += (int)((i2 = (int)(Test.instanceCount * fFld)) - (i2 = (int)fMeth(i2)));
        f1 += (float)dFld;
        s = (short)Test.instanceCount;
        iArr[(i2 >>> 1) % N] += (int)f1;
        i2 <<= i2;
        Test.instanceCount = -61;
        for (i14 = 5; i14 < 289; ++i14) {
            i2 += i14;
            i16 = 1;
            while (++i16 < 6) {
                Test.instanceCount = i16;
            }
            i15 = i2;
        }
        for (i17 = 5; i17 < 125; ++i17) {
            if (i14 != 0) {
            }
        }
        i2 >>= (int)Test.instanceCount;
        long meth_res = i2 + Float.floatToIntBits(f1) + s + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-208, i19=240, i20=-62930, i21=4, i22=-8846, i23=-33, i24=45106, i25=10, i26=85, i27=20521;
        short s1=24640;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-23);

        i = 1;
        while (++i < 383) {
            vMeth(-9L, iMeth());
            i19 += (((i * fFld) + i19) - i);
            i19 -= i19;
            byArr[i] -= (byte)9L;
        }
        for (i20 = 3; 273 > i20; i20++) {
            i19 += (int)Test.instanceCount;
            Test.iArrFld[i20][i20 - 1] += 6;
            i21 += (i20 - fFld);
        }
        i21 = s1;
        i22 = 1;
        do {
            i21 = (int)Test.instanceCount;
            i23 = 1;
            while (++i23 < 68) {
                i21 <<= i22;
                try {
                    i21 = (193 % Test.iArrFld[i23][i23]);
                    Test.iArrFld[i22 + 1][i23] = (-114 % i22);
                    i21 = (-139 % i22);
                } catch (ArithmeticException a_e) {}
                for (i24 = i23; i24 < 1; ++i24) {
                    switch ((i24 % 2) + 35) {
                    case 35:
                        fFld += (i24 - fFld);
                        i21 += i24;
                    case 36:
                        Test.iArrFld[i22][i22 + 1] += i24;
                        i19 *= i20;
                        break;
                    }
                    try {
                        i21 = (i20 / 11178);
                        i21 = (Test.iArrFld[i24 + 1][(i19 >>> 1) % N] / 94);
                        i19 = (1758 % Test.iArrFld[i22 + 1][i23]);
                    } catch (ArithmeticException a_e) {}
                }
                Test.instanceCount -= Test.instanceCount;
                Test.instanceCount = i20;
                for (i26 = 1; 1 > i26; ++i26) {
                    i19 >>>= i;
                    i25 = i23;
                    Test.iArrFld[i26][i22] = (int)Test.instanceCount;
                    fFld += 12076;
                    dFld /= (i22 | 1);
                }
            }
        } while (++i22 < 370);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
