package tests.javafuzzer6;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6499444845860252810L;
    public boolean bFld=true;
    public static short sFld=5549;
    public static float fFld=-1.930F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5) {

        byte by1=20;

        i5 ^= by1;
        i5 >>>= i5;
        vMeth2_check_sum += i5 + by1;
    }

    public static void vMeth1(long l1) {

        byte by=77;
        int i6=63718, i7=31436, i8=11902, i9=6, i10=182, i11=-93, i12=-14, i13=-58, iArr[]=new int[N];
        float f=1.143F;

        FuzzerUtils.init(iArr, -75);

        l1 += by;
        vMeth2(i6);
        i7 = 1;
        do {
            f += -7;
        } while (++i7 < 397);
        try {
            f += -90.425F;
            for (i8 = 9; i8 < 224; i8++) {
                i6 += (((i8 * i7) + i8) - Test.instanceCount);
                for (i10 = 7; i10 > 1; i10--) {
                    for (i12 = 1; i12 < 2; i12++) {
                        iArr[i10 - 1] *= (int)14L;
                        f += Test.instanceCount;
                    }
                    f = f;
                    iArr[i10 - 1] <<= 5;
                    iArr[i8] ^= i9;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i6 *= (int)f;
        }
        finally {
            i11 >>= -11241;
        }
        vMeth1_check_sum += l1 + by + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr);
    }

    public void vMeth(int i1, int i2, long l) {

        int i3=6, i4=87, i14=-60208;
        double d=-1.81038;
        float f1=-1.656F;

        i3 = 1;
        do {
            i4 = 1;
            do {
                if (bFld) continue;
                vMeth1(l);
                if (bFld) continue;
                Test.instanceCount = l;
            } while (++i4 < 6);
            i2 -= (int)l;
            i14 = 1;
            do {
                i2 >>>= Test.sFld;
            } while (++i14 < 6);
            Test.instanceCount -= -23029;
            i1 += (i3 + i4);
            if (bFld) break;
            d += 4082027134L;
            i1 = i4;
            f1 *= -25;
        } while (++i3 < 286);
        vMeth_check_sum += i1 + i2 + l + i3 + i4 + i14 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        int i=7, i15=9, i16=-55084, i18=1, i19=-40369, iArr1[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, 60083);
        FuzzerUtils.init(dArr, 37.69199);

        switch ((((i >>> 1) % 1) * 5) + 121) {
        case 123:
        default:
            vMeth(i, i, 27388L);
            for (i15 = 10; i15 < 292; ++i15) {
                i = i15;
                iArr1[i15 - 1] >>= i16;
                if (bFld) continue;
                i += (((i15 * Test.sFld) + i) - i);
                iArr1 = FuzzerUtils.int1array(N, (int)7357);
                iArr1[i15] *= i;
                Test.fFld += 3991410342L;
            }
            for (i18 = 21; i18 < 342; i18++) {
                dArr[i18] += 10;
                i19 *= i16;
                i16 >>= i18;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
