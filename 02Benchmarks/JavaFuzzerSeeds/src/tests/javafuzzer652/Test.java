package tests.javafuzzer652;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:26:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6995708894743359924L;
    public static double dFld=0.102042;
    public static byte byFld=-106;
    public static boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(double d, int i4) {

        byte by=59;
        int i5=-65, i6=-42957, i7=-64236, i8=7, i9=11, i10=11;
        short s=-7842;
        float f=-33.991F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 2.254F);

        by *= (byte)i4;
        i4 <<= (int)Test.instanceCount;
        for (i5 = 169; i5 > 5; i5 -= 2) {
            for (i7 = i5; i7 < 19; ++i7) {
                i8 |= 16;
                if (true) {
                    i6 >>= i6;
                } else {
                    for (i9 = 1; 1 > i9; ++i9) {
                        i8 <<= i6;
                        fArr[i5 + 1] = s;
                        i4 += (((i9 * s) + i10) - Test.instanceCount);
                        try {
                            i4 = (54754 % i7);
                            i4 = (i9 / 903467694);
                            i6 = (i5 % -45329);
                        } catch (ArithmeticException a_e) {}
                        d *= 0;
                        f += i9;
                        i10 += (i9 + i4);
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + by + i5 + i6 + i7 + i8 + i9 + i10 + s +
            Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(long l2) {

        int i3=-9, i11=-28396, i12=-1, i13=-245, i14=35011, i15=-31214, i16=53, i17=-32626, i18=2, i19=-188;
        float f1=0.42F, fArr1[]=new float[N];
        byte by1=55;
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr1, 31.567F);
        FuzzerUtils.init(sArr, (short)22068);

        i3 -= (int)fMeth(0.83989, i3);
        for (i11 = 5; i11 < 202; ++i11) {
            for (i13 = 8; i13 > i11; i13--) {
                f1 += i13;
                i3 ^= -141;
            }
            by1 += (byte)i11;
            i14 = i12;
            for (i15 = 8; i15 > i11; i15 -= 2) {
                fArr1[i11] = i16;
                for (i17 = 1; i17 < 1; i17++) {
                    b = b;
                    Test.instanceCount |= i11;
                    i12 += (i17 | i18);
                }
                i12 += (int)Test.instanceCount;
                sArr[i11 + 1] -= (short)i19;
            }
        }
        vMeth1_check_sum += l2 + i3 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f1) + by1 + i15 + i16 + i17 + i18 +
            (b ? 1 : 0) + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(int i2, long l, long l1) {

        float f2=-67.206F;
        int i20=38190, i21=-14778, i22=-48533, i23=22073, i24=203, i25=28326, iArr[]=new int[N];
        short s1=-21388, sArr1[]=new short[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(sArr1, (short)19);

        vMeth1(l);
        i2 += -14;
        f2 -= i20;
        switch ((((i2 >>> 1) % 10) * 5) + 77) {
        case 81:
            i21 = 1;
            while (++i21 < 184) {
                for (i22 = 1; i22 < 9; i22++) {
                    i20 = (int)l1;
                    if (true) break;
                }
                f2 *= s1;
                i20 += (int)9103783847789448975L;
                Test.dFld *= 0;
                iArr[i21 + 1] -= i2;
                for (i24 = 1; i24 < 9; i24++) {
                    if (b1) continue;
                    iArr[i24] += i24;
                }
            }
            break;
        case 79:
            i25 = Test.byFld;
            break;
        case 87:
            Test.instanceCount *= Test.instanceCount;
            break;
        case 107:
            i23 += (int)f2;
            break;
        case 89:
            Test.dFld = Test.dFld;
        case 96:
        case 84:
            iArr[(249 >>> 1) % N] -= i25;
        case 117:
            f2 *= 2107990411L;
        case 121:
            i20 *= i22;
            break;
        case 125:
            Test.instanceCount &= l;
            break;
        default:
            i23 += i22;
        }
        vMeth_check_sum += i2 + l + l1 + Float.floatToIntBits(f2) + i20 + i21 + i22 + i23 + s1 + i24 + i25 + (b1 ? 1 :
            0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i1=-6, i26=2, i27=-12, i28=-180, i29=23350, iArr1[]=new int[N];
        short s3=1220;

        FuzzerUtils.init(iArr1, 5);

        for (i = 3; i < 133; ++i) {
            i1 = (--i1);
            if (true) {
                vMeth(i1, 193L, Test.instanceCount);
            } else {
                for (i26 = 8; i26 < 193; i26++) {
                    for (i28 = 2; i28 > 1; --i28) {
                        Test.instanceCount -= i26;
                        i1 >>>= (int)-56L;
                        switch ((i28 % 2) + 99) {
                        case 99:
                            iArr1[i - 1] <<= Test.byFld;
                            i29 = (int)-561701515L;
                        case 100:
                        default:
                            i29 ^= -25314;
                            Test.instanceCount = i27;
                            if (true) {
                                i29 -= i27;
                                s3 /= (short)(Test.instanceCount | 1);
                            } else {
                                iArr1[i28] = i;
                            }
                        }
                        Test.instanceCount = i26;
                        i27 = i27;
                        i29 |= Test.byFld;
                        if (Test.bFld) {
                            if (Test.bFld) {
                                iArr1[i] = i29;
                                Test.instanceCount <<= Test.instanceCount;
                            } else if (Test.bFld) {
                                i27 = (int)939656643L;
                                i27 += i29;
                                if (Test.bFld) continue;
                                i1 <<= i26;
                            }
                            i27 += (i28 * i28);
                            Test.instanceCount = i26;
                        }
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
