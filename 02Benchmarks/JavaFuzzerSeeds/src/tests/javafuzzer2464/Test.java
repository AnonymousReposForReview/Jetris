package tests.javafuzzer2464;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:01:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-253006504L;
    public byte byFld=79;
    public volatile double dFld=2.121979;
    public float fFld=1.371F;
    public static float fFld1=-2.523F;
    public static int iFld=0;
    public static double dFld1=0.57035;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 55679);
        FuzzerUtils.init(Test.lArrFld, -3870111610132788864L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, double d) {

        int i8=-23856, i9=-53151, i10=40, i11=-59484, i12=-64994, i13=38451, i14=65270, i15=63274, i16=144;

        Test.iArrFld[(-184 >>> 1) % N] = Test.iFld;
        Test.iFld = Test.iFld;
        for (i8 = 2; i8 < 294; ++i8) {
            i10 = 6;
            do {
                Test.iFld += (i10 * i10);
                Test.iArrFld[i8] *= (int)d;
                i9 = i10;
                for (i11 = 2; i11 > 1; i11--) {
                    i12 -= Test.iFld;
                }
            } while ((i10 -= 2) > 0);
            for (i13 = 1; i13 < 6; i13++) {
                for (i15 = 1; 2 > i15; i15++) {
                    Test.instanceCount -= (long)Test.fFld1;
                }
                i16 -= (int)Test.fFld1;
            }
        }
        i16 &= i12;
        i9 |= i13;
        vMeth1_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 +
            i16;
    }

    public static void vMeth(long l2) {

        boolean b1=false;
        int i17=-4504, i18=-22017, i19=-99, i20=47476, i21=-11;
        short s=16939;
        byte by1=113;

        vMeth1(b1, Test.dFld1);
        for (i17 = 352; i17 > 10; i17--) {
            i19 = 1;
            while (++i19 < 5) {
                switch ((i17 % 2) + 49) {
                case 49:
                    for (i20 = 1; i20 < 1; i20++) {
                        i18 &= i17;
                        i18 += (i20 * i20);
                        switch (((i17 % 8) * 5) + 25) {
                        case 29:
                            Test.iArrFld = Test.iArrFld;
                            break;
                        case 26:
                            Test.iFld += (i20 * i20);
                            Test.lArrFld[i19 - 1] -= i21;
                            break;
                        case 31:
                            s >>= (short)i21;
                            if (i18 != 0) {
                                vMeth_check_sum += l2 + (b1 ? 1 : 0) + i17 + i18 + i19 + i20 + i21 + s + by1;
                                return;
                            }
                            break;
                        case 60:
                            if (b1) continue;
                            i18 += (((i20 * i17) + by1) - s);
                            break;
                        case 61:
                            i21 = by1;
                            break;
                        case 56:
                        case 27:
                            Test.fFld1 = i18;
                        case 37:
                        default:
                            Test.instanceCount += (17418 + (i20 * i20));
                        }
                    }
                    break;
                case 50:
                    s -= (short)49280;
                    break;
                }
            }
        }
        vMeth_check_sum += l2 + (b1 ? 1 : 0) + i17 + i18 + i19 + i20 + i21 + s + by1;
    }

    public static long lMeth(byte by, long l1) {

        int i5=-13, i6=180, i7=-1, i22=14, i23=-56952, i24=-9;

        Test.fFld1 = i5;
        i5 = (i5 + (i5--));
        for (i6 = 8; 329 > i6; i6++) {
            vMeth(l1);
            for (i22 = 1; i22 < 5; ++i22) {
                i7 = 33455;
                i23 += Test.iFld;
                Test.iArrFld[i22] ^= i24;
                l1 += i7;
                i7 -= Test.iFld;
                l1 += i23;
                i24 = by;
                l1 += l1;
                Test.instanceCount = Test.instanceCount;
            }
            Test.iArrFld[i6 - 1] = (int)Test.instanceCount;
        }
        long meth_res = by + l1 + i5 + i6 + i7 + i22 + i23 + i24;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=-60391, i2=9, i3=1, i4=-42381, i25=-8, i26=-157, i27=-7, i28=107, i29=172;
        long l=-6100826674044935081L, l3=-58170L;
        double d1=0.37471;
        float f=-11.893F;

        Test.instanceCount -= (++i);
        switch (((i >>> 1) % 1) + 68) {
        case 68:
            byFld = (byte)(dFld + (++Test.iArrFld[(i >>> 1) % N]));
            break;
        }
        for (i1 = 332; i1 > 6; i1 -= 3) {
            l = 1;
            while (++l < 232) {
                switch ((((((int)(fFld + dFld)) >>> 1) % 1) * 5) + 53) {
                case 57:
                    Test.instanceCount = (++Test.iArrFld[i1 + 1]);
                    for (i3 = 1; i3 > 1; --i3) {
                        dFld = (lMeth(byFld, Test.instanceCount) - i1);
                        Test.iArrFld[(int)(l - 1)] *= i25;
                    }
                    for (d1 = 1; d1 < 1; d1++) {
                        try {
                            i2 = (i26 / i);
                            i = (i25 / i1);
                            i = (-317808553 % i1);
                        } catch (ArithmeticException a_e) {}
                    }
                    break;
                }
                dFld -= i4;
                i25 ^= i1;
            }
            Test.iFld >>= (int)Test.instanceCount;
            Test.iArrFld[i1] = (int)l;
            i27 = 1;
            do {
                dFld = i2;
                for (i28 = i1; i28 < 1; ++i28) {
                    Test.instanceCount = (long)f;
                    Test.fFld1 -= i26;
                    i25 *= 252;
                    byFld = (byte)i28;
                    Test.iArrFld[i1] -= i29;
                    Test.instanceCount += (158 + (i28 * i28));
                }
                Test.iArrFld[i27 + 1] <<= i26;
                l3 = 1;
                do {
                    Test.iFld += (int)fFld;
                } while (++l3 < 1);
                i26 -= byFld;
                i25 = (int)Test.instanceCount;
            } while (++i27 < 232);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
