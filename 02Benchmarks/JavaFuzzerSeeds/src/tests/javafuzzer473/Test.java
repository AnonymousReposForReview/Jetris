package tests.javafuzzer473;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:26:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=59722L;
    public static volatile float fFld=1.918F;
    public static byte byFld=-4;
    public static int iFld=-8;
    public static volatile int iFld1=-143;
    public short sFld=-1190;
    public static boolean bArrFld[]=new boolean[N];
    public static volatile int iArrFld[]=new int[N];
    public double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, 100);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(boolean b1, int i5) {

        int i6=2, i7=-70, i8=24183, iArr1[]=new int[N];
        double d1=0.18817;

        FuzzerUtils.init(iArr1, 30482);

        i6 = 1;
        do {
            i7 = 1;
            while (++i7 < 10) {
                Test.instanceCount >>= -5;
            }
            b1 = true;
            i8 = 1;
            while (++i8 < 10) {
                short s=13087;
                Test.instanceCount <<= Test.instanceCount;
                i5 = (int)d1;
                d1 += i8;
                switch (((i6 % 5) * 5) + 63) {
                case 82:
                    Test.instanceCount += (i8 * i8);
                    break;
                case 75:
                    s -= (short)i5;
                    i5 = (int)d1;
                    i5 = (int)Test.fFld;
                    break;
                case 88:
                    Test.instanceCount += (i8 * i7);
                    iArr1[i8] *= i5;
                    break;
                case 70:
                case 84:
                    Test.byFld += (byte)i8;
                default:
                    Test.instanceCount += i8;
                }
            }
        } while (++i6 < 165);
        vMeth_check_sum += (b1 ? 1 : 0) + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth1(float f) {

        int i3=-162, i4=37289, i9=-10, i10=43213, iArr2[]=new int[N];
        byte by=-13;
        boolean b=false;
        short s1=-3163;

        FuzzerUtils.init(iArr2, 150);

        for (i3 = 9; i3 < 184; ++i3) {
            i4 = (int)(i4 *= (int)(f + (by - Test.instanceCount)));
            if (Test.bArrFld[i3] = b) {
                f += (((i3 * i4) + i4) - f);
                f -= 1;
            } else {
                vMeth(b, i4);
                i4 += (i3 | by);
                Test.fFld *= -47289;
            }
            Test.instanceCount += (i3 + i3);
            iArr2[i3] >>= -222;
            i4 = i3;
        }
        for (i9 = 10; i9 < 299; i9++) {
            i4 += by;
            i4 += (i9 * i9);
        }
        f *= s1;
        long meth_res = Float.floatToIntBits(f) + i3 + i4 + by + (b ? 1 : 0) + i9 + i10 + s1 +
            FuzzerUtils.checkSum(iArr2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i) {

        int i1=6, i2=9, i11=244, i12=14421, i13=18368, i14=103, i15=-2, i16=-1, iArr[]=new int[N];
        double d=-123.40120;
        boolean b2=false, b3=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 60987);
        FuzzerUtils.init(lArr, 102L);

        for (i1 = 3; i1 < 278; ++i1) {
            iArr = (iArr = iArr);
            i2 = (int)(Long.reverseBytes(Test.instanceCount--) + i1);
        }
        i2 *= (int)d;
        iMeth1(Test.fFld);
        lArr[(i1 >>> 1) % N] = -28655;
        for (i11 = 1; i11 < 240; ++i11) {
            for (i13 = 7; i13 > 1; --i13) {
                for (i15 = 2; i15 > 1; i15--) {
                    b2 = b2;
                    Test.instanceCount += i11;
                    lArr[i13] = 41619;
                }
                if (b3) {
                    iArr[i13] -= i14;
                    i14 = i12;
                }
            }
        }
        long meth_res = i + i1 + i2 + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 + i16 + (b2 ? 1 : 0) +
            (b3 ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-59846, i18=31618, i19=14, i20=-115, i21=-1, i22=-51772;
        long l=-3003727072502912303L;
        double d2=65.64448;
        boolean b4=false;
        float f1=-1.219F;

        iMeth(Test.iFld);
        for (i17 = 2; i17 < 298; ++i17) {
            Test.iFld += 4424;
            switch ((i17 % 2) * 5) {
            case 2:
                i18 += i17;
                break;
            case 3:
                i18 -= i17;
                break;
            default:
                switch (((i17 % 2) * 5) + 30) {
                case 32:
                    for (i19 = 4; 85 > i19; i19++) {
                        i18 = Test.iFld1;
                        for (l = 1; l < 2; l++) {
                            Test.iArrFld[i17 + 1] -= (int)d2;
                            d2 = l;
                            sFld *= (short)-143;
                            i18 >>= Test.iFld1;
                            Test.instanceCount += (l * i20);
                            if (b4) {
                                dArrFld[i17][i19 + 1] = -120;
                            } else {
                                d2 %= (Test.iFld1 | 1);
                                i22 += (int)l;
                                i22 += (int)l;
                                i18 += (int)l;
                            }
                            i21 = (int)Test.instanceCount;
                        }
                        i22 += (i19 ^ (long)Test.fFld);
                        d2 = sFld;
                    }
                    i21 >>>= i18;
                    break;
                case 34:
                    f1 = 1;
                    while (++f1 < 85) {
                        Test.instanceCount = (long)d2;
                        i18 >>= 149;
                        Test.iArrFld[(int)(f1 - 1)] = i22;
                        Test.byFld = (byte)Test.iFld;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
