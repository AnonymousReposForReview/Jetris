package tests.javafuzzer199;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:03:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=69L;
    public static volatile short sFld=-22128;
    public static float fFld=0.209F;
    public int iFld=14;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1);
        FuzzerUtils.init(Test.lArrFld, 8112371738703108568L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        double d=-54.126263;
        int i8=10, i9=-13, i10=55499, i11=4, i12=1, i13=27;
        boolean b=false;

        Test.instanceCount *= (long)d;
        i8 = 1;
        do {
            Test.instanceCount = Test.instanceCount;
            for (i9 = i8; i9 < 13; ++i9) {
                i7 -= -191;
                Test.iArrFld[i9] = -96;
                i7 = i10;
                if (b) {
                    Test.sFld *= (short)45000;
                    i11 |= i8;
                    for (i12 = 1; i12 < 1; i12++) {
                        i7 = i13;
                        Test.sFld >>= (short)-25855;
                    }
                    i7 += (i9 * i9);
                } else {
                    i13 ^= i10;
                }
            }
        } while (++i8 < 125);
        vMeth2_check_sum += i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0);
    }

    public static void vMeth1() {

        int i5=7, i6=4729, i14=179, i15=-14455, i16=23753;
        double d1=95.35517, dArr[][]=new double[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -152L);
        FuzzerUtils.init(dArr, 2.111699);

        for (i5 = 10; i5 < 283; ++i5) {
            vMeth2(i5);
            for (i14 = i5; i14 < 6; ++i14) {
                i15 ^= i14;
                i16 = 1;
                while (++i16 < 1) {
                    if (false) {
                        lArr[i14 + 1] += (long)d1;
                    } else {
                        dArr = dArr;
                        Test.instanceCount = i16;
                    }
                    i15 = i5;
                    i15 = i15;
                    if (i16 != 0) {
                        vMeth1_check_sum += i5 + i6 + i14 + i15 + i16 + Double.doubleToLongBits(d1) +
                            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    i6 += (int)-80.534F;
                    i6 = (int)Test.instanceCount;
                    i6 = i6;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + i14 + i15 + i16 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i4=-26, i17=5414, i18=44856, i19=9732;
        boolean b1=true;
        double d2=2.62691, d3=1.93228;

        i4 = 1;
        do {
            vMeth1();
            Test.iArrFld[i4 + 1] >>= i4;
            if (b1) break;
            Test.instanceCount *= i4;
            for (i17 = 1; 9 > i17; i17 += 3) {
                d2 = 1;
                do {
                    i18 *= (int)d2;
                    i18 = i17;
                    Test.lArrFld = Test.lArrFld;
                } while (++d2 < 5);
                i18 = (int)Test.instanceCount;
                b1 = b1;
                for (d3 = i4; d3 < 5; ++d3) {
                    float f=-1.907F;
                    Test.instanceCount *= (long)f;
                    if (b1) break;
                }
            }
        } while (++i4 < 182);
        vMeth_check_sum += i4 + (b1 ? 1 : 0) + i17 + i18 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(d3) +
            i19;
    }

    public void mainTest(String[] strArr1) {

        int i=-13961, i1=-35300, i2=-43700, i3=29146, i21=168, i22=12, i23=64500, i24=0, i25=-10, i26=54;
        long l=-147L, l1=-7L;
        float fArr[]=new float[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(fArr, 2.354F);
        FuzzerUtils.init(dArr1, -2.41570);

        for (i = 319; i > 18; i -= 2) {
            i1 -= ((i1++) - 5);
            Test.instanceCount += (132 + (i * i));
            for (i2 = i; 167 > i2; ++i2) {
                int i20=47;
                vMeth();
                i1 ^= i20;
                fArr = fArr;
            }
            i1 <<= (int)Test.instanceCount;
            Test.instanceCount += i2;
            i1 = i2;
            dArr1[i + 1] += Test.instanceCount;
            i1 += i;
            i1 += i;
        }
        i1 |= i3;
        Test.iArrFld[(i3 >>> 1) % N] >>= i;
        Test.fFld -= i1;
        Test.iArrFld[(i2 >>> 1) % N] -= (int)-2.80155;
        for (i21 = 1; 216 > i21; ++i21) {
            i22 >>>= i3;
            Test.lArrFld[i21 + 1] -= 12L;
            for (l = 1; l < 117; ++l) {
                Test.instanceCount += i21;
                i3 >>= (int)l;
                Test.sFld += (short)(l ^ i23);
            }
            for (i24 = 117; i24 > 7; i24 -= 3) {
                if (false) continue;
            }
            for (l1 = 117; l1 > i21; l1--) {
                i22 += (int)l1;
                i26 &= i3;
                iFld >>>= (int)l;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
