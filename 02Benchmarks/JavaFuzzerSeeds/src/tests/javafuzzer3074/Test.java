package tests.javafuzzer3074;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:31:58 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=241L;
    public double dFld=-88.78889;
    public static byte byFld=39;
    public static long lFld=10L;
    public static int iFld=59707;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 40);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, int i6, int i7) {

        double d1=1.13127, dArr[]=new double[N];
        int i8=0, i9=-13, i10=55524, i11=-191, i12=-12, i13=86, i14=34349, iArr[][]=new int[N][N];
        float f=84.123F;

        FuzzerUtils.init(dArr, 0.125295);
        FuzzerUtils.init(iArr, 6);

        dArr[(i7 >>> 1) % N] -= i5;
        for (d1 = 10; d1 < 255; d1++) {
            for (i9 = 1; i9 < 7; i9++) {
                i7 = -6;
                for (i11 = 1; i11 < 2; i11++) {
                    if (true) break;
                }
                iArr = iArr;
                i7 = (int)f;
                Test.instanceCount = i12;
                Test.iArrFld = iArr[(int)(d1 + 1)];
                for (i13 = 1; i13 < 2; i13++) {
                    i8 += (((i13 * i6) + i7) - i8);
                    i8 -= (int)Test.instanceCount;
                    i12 = 176;
                }
                iArr[(int)(d1 + 1)][i9 + 1] += (int)Test.instanceCount;
            }
        }
        long meth_res = i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 +
            Float.floatToIntBits(f) + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        int i1=244, i2=8, i3=-54071, i4=-52265, i15=-251;
        long l1=366046060891759709L, l2=1069L;
        short s=19481;
        double d=1.56869, dArr1[]=new double[N];
        float f1=-1.64F, fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -1.656F);
        FuzzerUtils.init(dArr1, -85.39043);

        fArr[(i1 >>> 1) % N][(i1 >>> 1) % N] = (i1--);
        for (l1 = 304; l1 > 19; l1--) {
            l2 = 1;
            while ((l2 += 2) < 6) {
                i1 = (int)(s - (Test.iArrFld[(int)(l2 + 1)] - (-(i1 - d))));
                for (i3 = 2; i3 > 1; i3 -= 2) {
                    i4 -= (int)(((i3 - l2) % (iMeth1(i3, i4, i4) | 1)) - Test.byFld);
                    f1 = (float)d;
                    f1 *= l1;
                    i4 *= i3;
                    Test.iArrFld = Test.iArrFld;
                    i1 += (int)d;
                    i4 += (int)l1;
                    dArr1[i3] *= i15;
                    i1 = 9342;
                }
                l += (long)f1;
            }
        }
        long meth_res = l + i1 + l1 + i2 + l2 + s + Double.doubleToLongBits(d) + i3 + i4 + Float.floatToIntBits(f1) +
            i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-6329;
        float f2=-24.463F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 105.449F);

        dFld *= (++Test.iArrFld[(i >>> 1) % N]);
        i -= (int)(-14L + (Test.instanceCount--));
        i = ((-iMeth(Test.instanceCount)) * -34213);
        fArr1[(i >>> 1) % N] *= 57426;
        i -= (int)f2;
        Test.byFld *= (byte)dFld;
        vMeth_check_sum += i + Float.floatToIntBits(f2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i16=5, i17=92, i18=201, i19=59, i20=11, i21=-3, i22=5854, i23=210, i24=-2826;
        long l3=1L;
        float f3=90.274F, f4=-1.672F;
        double d2=-105.90469, d3=-2.19063, dArr2[][]=new double[N][N];
        short s1=-23607;

        FuzzerUtils.init(dArr2, 100.18593);

        vMeth();
        for (i16 = 22; i16 < 362; i16++) {
            Test.byFld += (byte)(4L + (i16 * i16));
            i17 -= i17;
            i17 += (i16 | Test.instanceCount);
            if (bFld) {
                for (i18 = 3; i18 < 74; ++i18) {
                    i17 += i18;
                }
                Test.instanceCount += i16;
                switch ((i16 % 3) + 50) {
                case 50:
                    i19 = i16;
                    for (l3 = 1; l3 < 74; ++l3) {
                        f3 -= Test.byFld;
                    }
                    dArr2[i16 + 1] = dArr2[i16];
                case 51:
                    i20 *= i20;
                    Test.iArrFld = Test.iArrFld;
                    for (d2 = i16; d2 < 74; d2++) {
                        Test.instanceCount = Test.byFld;
                        for (i22 = 1; i22 < 1; ++i22) {
                            i21 -= i21;
                            Test.instanceCount = i16;
                        }
                        Test.instanceCount <<= 11L;
                        dFld += i23;
                        Test.instanceCount += (long)(d2 * d2);
                        i21 *= (int)l3;
                        s1 -= (short)f3;
                        for (f4 = 1; f4 < 1; ++f4) {
                            Test.lFld += (long)f4;
                            i20 *= 109;
                        }
                    }
                case 52:
                    Test.iFld >>= i19;
                default:
                    d3 += i22;
                }
            } else if (bFld) {
                Test.iArrFld[i16 + 1] >>= i22;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
