package tests.javafuzzer667;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:38 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1473938924440956442L;
    public static boolean bFld=true;
    public float fFld=-50.669F;
    public static float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -7.478F);
        FuzzerUtils.init(Test.dArrFld, 2.87084);
        FuzzerUtils.init(Test.sArrFld, (short)16770);
        FuzzerUtils.init(Test.lArrFld, -39404L);
        FuzzerUtils.init(Test.iArrFld, -29856);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1, double d1, int i6) {

        int i7=-71, i8=42615, i9=-233, i10=-195, i11=12, i12=-37581;
        boolean b1=false;
        float f2=69.702F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2755985440L);

        for (i7 = 5; i7 < 123; ++i7) {
            for (i9 = 1; i9 < 13; i9++) {
                l1 = i10;
                Test.instanceCount += (-2 + (i9 * i9));
                i6 = (int)-1997024541L;
            }
            b1 = b1;
            for (i11 = 1; i11 < 13; i11++) {
                i12 += (((i11 * f2) + i8) - i9);
                Test.instanceCount -= -158L;
                l1 += i11;
                i12 = i10;
                i8 += i11;
                lArr1[i11 + 1] = i10;
            }
            i10 += i8;
            if (b1) break;
        }
        vMeth1_check_sum += l1 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + (b1 ? 1 : 0) + i11 + i12 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(boolean b, float f, int i3) {

        float f1=-2.718F;
        int i4=33194, i5=0, i13=-35854, i14=-166, iArr[]=new int[N];
        double d=0.113975;
        long l=-144127569L;
        short s=27794;

        FuzzerUtils.init(iArr, 8563);

        i3 -= (++Test.sArrFld[(i3 >>> 1) % N]);
        i3 <<= i3;
        for (f1 = 17; f1 < 295; f1++) {
            Test.instanceCount = (long)((i3 * (-(iArr[(int)(f1 - 1)]--))) - (i4 - d));
            i3 -= Math.abs((int)(Math.min(Test.instanceCount, Test.instanceCount) + (14 - (i3 >>>= i3))));
            for (l = 1; 6 > l; l++) {
                vMeth1(Test.instanceCount, d, i3);
                i4 += (190 + (l * l));
                i5 += i13;
                Test.lArrFld = Test.lArrFld;
                i14 = 1;
                while (++i14 < 2) {
                    iArr[(int)(l)] *= s;
                    if (i4 != 0) {
                        vMeth_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f) + i3 + Float.floatToIntBits(f1) + i4 +
                            Double.doubleToLongBits(d) + l + i5 + i13 + i14 + s + FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    Test.fArrFld[i14 - 1] = i3;
                }
                Test.instanceCount = 58898;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f) + i3 + Float.floatToIntBits(f1) + i4 +
            Double.doubleToLongBits(d) + l + i5 + i13 + i14 + s + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i) {

        int i1=-7, i2=16589, i16=32823, i17=16029, i18=65, iArr1[]=new int[N];
        float f4=-1.584F;
        double d2=1.104160;
        short s1=-12226;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -34121L);
        FuzzerUtils.init(iArr1, 29343);

        Test.instanceCount = ((i++) + i);
        Test.fArrFld[(i >>> 1) % N] *= (-((15089L >> (6 + lArr[(i >>> 1) % N])) + i));
        i >>>= (int)(Math.min(Test.instanceCount, --Test.instanceCount) * (++Test.dArrFld[(i >>> 1) % N]));
        for (i1 = 1; i1 < 130; ++i1) {
            int i15=105;
            if (false) {
                vMeth(true, f4, i1);
                if (Test.bFld) {
                    i15 <<= (int)Test.instanceCount;
                    Test.bFld = Test.bFld;
                }
                iArr1[i1] = (int)-5086857379722337349L;
                for (i16 = 1; i16 < 12; i16++) {
                    i18 = 1;
                    do {
                        Test.instanceCount = i1;
                    } while (++i18 < 2);
                    i17 *= (int)d2;
                    i2 <<= (int)Test.instanceCount;
                }
            } else if (Test.bFld) {
                iArr1[i1] = i16;
            } else {
                i2 -= s1;
            }
        }
        long meth_res = i + i1 + i2 + Float.floatToIntBits(f4) + i16 + i17 + i18 + Double.doubleToLongBits(d2) + s1 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l2=-82L;
        int i19=1, i20=-109, i21=43066, i22=-39181, i23=9, i24=3044, i25=-140, i26=-92, i27=-4;
        byte by=3;
        short s2=-27653;

        iMeth(-2760);
        for (l2 = 17; l2 < 313; l2++) {
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount += l2;
            for (i20 = 1; 85 > i20; i20++) {
                for (i22 = 2; i22 > 1; i22--) {
                    Test.iArrFld[i20] /= (int)(l2 | 1);
                    i19 <<= -4;
                    i21 += (i22 * by);
                    fFld = s2;
                    Test.iArrFld[i22] -= (int)Test.instanceCount;
                    i19 += (i22 * i22);
                    fFld = i23;
                    i21 = i21;
                }
                for (i24 = 1; i24 < 2; i24++) {
                    Test.instanceCount = i25;
                    i19 -= 118;
                    i25 = i21;
                    i21 |= -22892;
                    i25 -= (int)Test.instanceCount;
                    Test.bFld = Test.bFld;
                    Test.iArrFld[i24 + 1] += (int)fFld;
                    Test.instanceCount *= i23;
                    Test.iArrFld[i24 + 1] = 1083;
                    i23 = i21;
                }
                Test.instanceCount += l2;
                Test.instanceCount = by;
                for (i26 = 1; i26 < 2; i26 += 2) {
                    i25 += (((i26 * i25) + l2) - l2);
                    Test.bFld = Test.bFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
