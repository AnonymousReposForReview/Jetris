package tests.javafuzzer2291;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:34:35 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1363129958L;
    public static int iFld=1;
    public static volatile float fFld=0.652F;
    public static float fArrFld[]=new float[N];
    public static double dArrFld[]=new double[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 105.366F);
        FuzzerUtils.init(Test.dArrFld, -126.23726);
        FuzzerUtils.init(Test.iArrFld, -10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7, int i8) {

        byte by=-86;
        double d=85.339;
        int i9=13, i10=-63344, i11=-7928, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 11);

        Test.fFld = -170;
        i8 -= by;
        d = -8;
        iArr[(i8 >>> 1) % N] -= i6;
        iArr[(Test.iFld >>> 1) % N] /= (int)(by | 1);
        Test.instanceCount += Test.iFld;
        switch (((i7 >>> 1) % 4) + 30) {
        case 30:
            for (i9 = 4; i9 < 150; i9++) {
                i6 = (int)Test.instanceCount;
                i10 = Test.iFld;
                i11 = 1;
                while (++i11 < 11) {
                    by += (byte)i6;
                }
                i10 = Test.iFld;
                i7 = 11125;
                Test.instanceCount += (-28872 + (i9 * i9));
            }
            break;
        case 31:
            Test.instanceCount &= i9;
        case 32:
            i10 = i10;
            break;
        case 33:
            d -= i11;
        }
        vMeth2_check_sum += i6 + i7 + i8 + by + Double.doubleToLongBits(d) + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i13=-12, i14=234, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 39708);

        Test.fArrFld[(Test.iFld >>> 1) % N] = Test.iFld;
        vMeth2(Test.iFld, Test.iFld, Test.iFld);
        for (i13 = 8; i13 < 236; ++i13) {
            iArr1[i13 - 1] -= -4;
            Test.dArrFld[i13] -= 116.807F;
        }
        vMeth1_check_sum += i13 + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i3, long l) {

        int i4=-57236, i5=19938, i15=9, i16=3196, i17=34820;
        short s=21139;
        float f=0.887F;

        Test.iFld >>>= i4;
        i5 = 1;
        while (++i5 < 387) {
            vMeth1();
            Test.iArrFld[i5 - 1] -= i4;
            s -= (short)Test.iFld;
            l -= -2;
            Test.fArrFld[i5 + 1] = l;
            i3 += (i5 + Test.fFld);
        }
        i4 += (int)Test.fFld;
        for (f = 17; f < 376; ++f) {
            for (i16 = 5; i16 > 1; i16--) {
                switch ((int)((f % 1) + 39)) {
                case 39:
                    Test.iFld = (int)l;
                    try {
                        i3 = (179 / i17);
                        Test.iArrFld[(int)(f)] = (i5 % 8393);
                        Test.iFld = (i3 % 31278);
                    } catch (ArithmeticException a_e) {}
                    l = i5;
                    break;
                }
            }
        }
        vMeth_check_sum += i3 + l + i4 + i5 + s + Float.floatToIntBits(f) + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=-22605, i1=6279, i2=41998, i18=6, i19=198, i20=59, i21=9;
        float f1=-80.557F;

        for (i = 3; i < 135; i++) {
            i1 = (int)(((i2 * -2.59657) - Test.instanceCount) + i1);
            vMeth(i1, Test.instanceCount);
            Test.instanceCount += (((i * Test.instanceCount) + Test.instanceCount) - Test.iFld);
            i1 = i;
            Test.instanceCount >>>= -206;
            i2 *= i1;
            Test.iArrFld[i] *= (int)Test.instanceCount;
            for (i18 = 190; i18 > 1; i18 -= 3) {
                Test.iFld <<= (int)-4L;
                i2 = -235;
            }
            i20 = 1;
            do {
                Test.iArrFld[i + 1] *= i18;
                Test.iFld <<= -13;
                for (f1 = 1; f1 < 1; f1++) {
                    double d1=-35.55386;
                    int i22=-14;
                    d1 = Test.instanceCount;
                    i1 <<= i18;
                    Test.iArrFld[i] += (int)1.461F;
                    Test.instanceCount += (long)(((f1 * i1) + i22) - i);
                    i1 += (int)21L;
                    i19 = i19;
                }
                i2 += (((i20 * i19) + Test.instanceCount) - i1);
                i1 -= i18;
                Test.instanceCount += (long)Test.fFld;
                Test.instanceCount *= Test.iFld;
                Test.iFld = i;
                Test.fFld -= 50.476F;
            } while (++i20 < 190);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
