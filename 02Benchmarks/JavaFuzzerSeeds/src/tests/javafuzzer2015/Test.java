package tests.javafuzzer2015;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:26:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5083087541388931115L;
    public static double dFld=-1.27788;
    public long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];
    public int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)29621);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(int i6, int i7) {

        int i8=40754, i9=3, i10=-11196, i11=-81, i12=13, i13=-20806, iArr[]=new int[N];
        float f=101.986F;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -24000);
        FuzzerUtils.init(lArr, -253L);

        for (i8 = 17; i8 < 322; i8++) {
            i10 = 1;
            while (++i10 < 5) {
                iArr[i10 + 1] += (int)Test.instanceCount;
                if (i8 != 0) {
                    return ((int)(i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + (b ? 1 : 0) + i11 + i12 + i13 +
                        FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr))) % 2 > 0;
                }
                try {
                    i9 = (i10 / -168843843);
                    i6 = (i7 % -88);
                    i7 = (i6 / i10);
                } catch (ArithmeticException a_e) {}
                if (b) {
                    i6 = (int)f;
                    Test.instanceCount >>>= i7;
                }
                Test.instanceCount += i10;
                for (i11 = 1; i11 < 1; i11++) {
                    i6 |= i6;
                    i9 += (((i11 * Test.instanceCount) + i12) - i12);
                    i13 = i11;
                }
                lArr = FuzzerUtils.long1array(N, (long)-11795L);
                f *= i6;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + (b ? 1 : 0) + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1(long l1, int i3) {

        int i4=-13, i5=89, i14=-23888, i15=-129, i16=-13, i17=69, i18=0, iArr1[]=new int[N];
        float f1=2.775F;
        boolean b1=false;

        FuzzerUtils.init(iArr1, 123);

        Test.dFld += (Test.sArrFld[(2 >>> 1) % N]++);
        for (i4 = 9; i4 < 339; ++i4) {
            i5 = (i3--);
            if (bMeth(i3, i4) & true) break;
            iArr1 = iArr1;
        }
        f1 += i5;
        for (i14 = 4; i14 < 122; i14++) {
            switch ((i14 % 2) + 5) {
            case 5:
                b1 = b1;
                for (i16 = 1; i16 < 13; ++i16) {
                    i17 -= (int)Test.instanceCount;
                    i18 = 1;
                    do {
                        i3 += (i18 + l1);
                        i3 *= i17;
                        l1 += i18;
                    } while (++i18 < 2);
                }
            case 6:
                if (b1) break;
                break;
            default:
                i15 -= -64526;
            }
        }
        vMeth1_check_sum += l1 + i3 + i4 + i5 + Float.floatToIntBits(f1) + i14 + i15 + (b1 ? 1 : 0) + i16 + i17 + i18 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i, long l) {

        int i1=5, i2=-156, i19=48440, i20=-65289, i21=14;
        double d=91.68361;

        for (i1 = 9; 324 > i1; ++i1) {
            lArrFld[i1 + 1] = ((i2--) + 0);
            vMeth1(l, i);
            i = (int)Test.instanceCount;
            l = i;
        }
        i19 = 1;
        do {
            for (i20 = 1; i20 < 6; i20 += 2) {
                i2 = i1;
                iArrFld[i19] -= i19;
                d = 1;
                while (++d < 3) {
                    switch (((i19 >>> 1) % 3) + 38) {
                    case 38:
                        fArrFld[i19 - 1] = i21;
                        l >>>= i2;
                        break;
                    case 39:
                    case 40:
                        i %= (int)-62152L;
                        break;
                    default:
                        l = Test.instanceCount;
                    }
                }
            }
        } while (++i19 < 272);
        vMeth_check_sum += i + l + i1 + i2 + i19 + i20 + i21 + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        int i22=-13, i23=9, i24=192, i25=6, i26=-246, i27=12827;
        long l2=4L;
        double d1=-69.125030;
        boolean b2=false;
        float f2=2.198F;
        byte by=60;

        vMeth(12, Test.instanceCount);
        i22 = i22;
        i23 = 1;
        while (++i23 < 209) {
            i22 <<= i23;
            if (true) continue;
            i22 += (((i23 * Test.instanceCount) + i22) - i22);
            i22 = 22694;
            Test.instanceCount += i23;
        }
        i22 >>= i22;
        i22 = (int)Test.instanceCount;
        l2 = 1;
        while (++l2 < 311) {
            switch (((i22 >>> 1) % 3) + 52) {
            case 52:
                iArrFld[(int)(l2)] = (int)Test.instanceCount;
                for (d1 = l2; d1 < 81; d1++) {
                    iArrFld = iArrFld;
                    i24 *= (int)l2;
                    i24 = -72;
                    fArrFld[(int)(l2)] += i23;
                    b2 = true;
                    f2 = -3;
                }
                by -= (byte)l2;
                for (i25 = 3; 81 > i25; ++i25) {
                    i24 = (int)l2;
                    i22 -= (int)-39017L;
                    i26 = i22;
                    Test.instanceCount = l2;
                    Test.instanceCount = -34179L;
                    i27 = 1;
                    while (++i27 < 2) {
                        i24 -= i22;
                        lArrFld[i27 + 1] -= i25;
                    }
                }
                break;
            case 53:
                iArrFld = iArrFld;
                break;
            case 54:
                i22 |= i24;
                break;
            default:
                i22 <<= i27;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
