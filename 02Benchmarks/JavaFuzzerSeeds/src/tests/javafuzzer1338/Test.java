package tests.javafuzzer1338;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:29:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1110268206L;
    public static float fFld=-1.125F;
    public static int iFld=5;
    public static short sFld=-27447;
    public static boolean bFld=true;
    public static int iFld1=41;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 51871);
        FuzzerUtils.init(Test.lArrFld, 13L);
        FuzzerUtils.init(Test.sArrFld, (short)-15329);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i7) {

        int i8=9, i9=-119, i10=8395, i11=-63886, i13=228, i14=10, i15=10, i16=-8;
        double d1=-94.3419;
        byte by=70;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -41886L);

        Test.instanceCount = -44096;
        for (i8 = 3; 388 > i8; i8++) {
            f -= (float)d1;
        }
        for (i10 = 6; 145 > i10; ++i10) {
            int i12=138;
            switch (((i12 >>> 1) % 7) + 49) {
            case 49:
                for (i13 = 1; i13 < 11; ++i13) {
                    if (i9 != 0) {
                        vMeth2_check_sum += Float.floatToIntBits(f) + i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10
                            + i11 + i13 + i14 + i15 + i16 + by + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    for (i15 = 1; i15 < 2; ++i15) {
                        lArr[i10 + 1] <<= by;
                        Test.iFld += (i15 * i15);
                        i14 *= Test.iFld;
                        i16 += (-158 + (i15 * i15));
                        Test.iFld += i15;
                        Test.instanceCount = Test.instanceCount;
                        Test.iArrFld[i15 + 1] ^= i8;
                    }
                }
                break;
            case 50:
                Test.iArrFld[i10] >>= i14;
                break;
            case 51:
                Test.sFld += (short)f;
            case 52:
                d1 = d1;
                break;
            case 53:
                Test.sFld -= (short)113;
            case 54:
                Test.instanceCount = Test.sFld;
                break;
            case 55:
                Test.sFld += (short)Test.instanceCount;
            default:
                i7 = i8;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i7 + i8 + i9 + Double.doubleToLongBits(d1) + i10 + i11 + i13 +
            i14 + i15 + i16 + by + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(long l, short s1) {

        double d2=-1.19416;
        int i18=5, i19=-54857, i20=206, i21=54655;

        vMeth2(125.640F, Test.iFld);
        Test.instanceCount = Test.iFld;
        for (int i17 : Test.iArrFld) {
            Test.iFld = i17;
            d2 = 1;
            do {
                Test.iFld += (int)((long)d2 ^ Test.iFld);
                if (Test.bFld) {
                    i18 = i17;
                }
                Test.iArrFld[(int)(d2)] = (int)-5452665067172106925L;
            } while (++d2 < 4);
            i17 += 9687;
            i19 = 4;
            while (--i19 > 0) {
                Test.iFld *= -20609;
                for (i20 = i19; i20 < 1; i20 += 2) {
                    Test.fFld *= 1.398F;
                    i18 -= Test.iFld;
                }
            }
        }
        vMeth1_check_sum += l + s1 + Double.doubleToLongBits(d2) + i18 + i19 + i20 + i21;
    }

    public static void vMeth(int i3) {

        int i4=227, i5=176, i6=4, i22=23681;
        short s=23366;
        byte by1=-12;
        float f1=-1.992F;

        for (i4 = 17; 352 > i4; i4++) {
            Test.instanceCount -= (i3--);
            if (Test.bFld) {
                i3 >>= (int)((Test.instanceCount++) * (s--));
                if (true) {
                    i3 += (i4 + Test.instanceCount);
                    Test.iArrFld[i4] = i5;
                    i5 -= (int)-8280554258341162557L;
                    i6 = 1;
                    do {
                        vMeth1(Test.instanceCount, s);
                        Test.lArrFld[i6] -= by1;
                        for (f1 = 1; f1 < 1; f1++) {
                            Test.iFld1 *= (int)Test.instanceCount;
                            Test.iArrFld[i4 - 1] = (int)1669620762L;
                            Test.lArrFld[(int)(f1 - 1)] %= (Test.iFld1 | 1);
                        }
                    } while (++i6 < 5);
                } else {
                    Test.instanceCount = i5;
                }
            } else {
                Test.instanceCount = Test.iFld;
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + s + i6 + by1 + Float.floatToIntBits(f1) + i22;
    }

    public void mainTest(String[] strArr1) {

        double d=2.73299;
        int i=10, i1=-37985, i2=8, i23=-61980, i25=39907, i26=-239, i27=-135, iArr[]=new int[N];
        float f2=-62.483F;

        FuzzerUtils.init(iArr, -5);

        d = (i--);
        Test.fFld = (++Test.iArrFld[(i >>> 1) % N]);
        for (i1 = 4; i1 < 124; ++i1) {
            i -= i;
            vMeth(Test.iFld1);
            for (f2 = 1; 209 > f2; f2 += 3) {
                Test.iFld += i1;
            }
        }
        Test.sArrFld[(i1 >>> 1) % N] -= (short)Test.iFld;
        if (Test.bFld) {
            for (int i24 : Test.iArrFld) {
                for (i25 = 1; i25 < 63; i25++) {
                    iArr[i25 - 1] = i24;
                    i2 = Test.sFld;
                    Test.instanceCount += (((i25 * Test.instanceCount) + i25) - Test.iFld);
                    i2 += (int)Test.instanceCount;
                    i24 %= (int)((long)(Test.fFld) | 1);
                    Test.instanceCount *= i23;
                    i23 -= i2;
                    i26 = (int)Test.instanceCount;
                }
                i23 <<= (int)28745L;
                i27 = 1;
                while ((i27 += 2) < 63) {
                    Test.sFld = (short)i25;
                    if (Test.bFld) {
                        i26 = Test.iFld1;
                        Test.iFld1 += -164;
                        d -= f2;
                        Test.instanceCount = -33758;
                    }
                    iArr[i27] -= i24;
                }
                Test.lArrFld[(86 >>> 1) % N] -= i26;
                Test.iFld <<= i27;
            }
        } else {
            d = i27;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
