package tests.javafuzzer2071;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:36:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static boolean bFld=true;
    public static long lFld=31582L;
    public static int iFld=55172;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.175F);
        FuzzerUtils.init(Test.lArrFld, -37L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7, float f2, int i8) {

        int i9=-3586, i10=-1, i11=59756, i12=27506, i13=-39348, i14=17809, i15=113, i16=-7, i17=23, i18=-2357,
            i19=60799;
        double d1=2.83247;

        i7 += -140;
        for (i9 = 8; i9 < 244; ++i9) {
            if (Test.bFld) break;
            i10 += (((i9 * f2) + i7) - i7);
            i8 >>= i8;
            i10 += (i9 * i9);
            for (i11 = 1; i11 < 7; ++i11) {
                for (i13 = 1; 2 > i13; ++i13) {
                    if (Test.bFld) continue;
                }
            }
            for (i15 = 1; i15 < 7; ++i15) {
                i14 += (int)3648479084L;
                for (i17 = 1; i17 < 2; ++i17) {
                    i19 -= i14;
                    i10 >>>= -3;
                    i16 -= (int)d1;
                }
            }
        }
        long meth_res = i7 + Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 +
            i19 + Double.doubleToLongBits(d1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i1, long l) {

        int i2=179, i3=-55130, i4=221, i5=0, i6=-14, iArr[]=new int[N];
        boolean b=false, bArr[]=new boolean[N];
        float f1=2.702F, fArr[][]=new float[N][N];
        double d=-6.99555;
        short s=-441;
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(lArr, -10L);
        FuzzerUtils.init(fArr, 0.993F);

        for (i2 = 8; i2 < 393; ++i2) {
            bArr[i2 + 1] = b;
            f1 %= ((iArr[i2 + 1]--) | 1);
            i4 = 1;
            do {
                if (b = ((++l) != Math.sqrt(d + -17408L))) break;
                i3 += (i4 * i2);
                s += (short)(((f1 + l) * (i3 - i2)) - i4);
                iArr = (iArr = (iArr = iArr));
                for (i5 = 1; i5 < 2; ++i5) {
                    d = (4 + (Test.instanceCount--));
                    if (b) break;
                    switch ((i4 % 6) + 57) {
                    case 57:
                        if (b) {
                            lArr[i5 + 1] += (long)(i1 += (int)(20.90691 - lMeth(-433, f1, -108)));
                            i1 += (i5 ^ i5);
                        } else {
                            Test.instanceCount = i3;
                        }
                        break;
                    case 58:
                        i3 = -39879;
                    case 59:
                        d += i4;
                        break;
                    case 60:
                        s = (short)i6;
                        break;
                    case 61:
                        i3 = (int)60.93571;
                        break;
                    case 62:
                        if (i1 != 0) {
                            vMeth_check_sum += i1 + l + i2 + i3 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i4 +
                                Double.doubleToLongBits(d) + s + i5 + i6 + FuzzerUtils.checkSum(bArr) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                        break;
                    default:
                        fArr = fArr;
                    }
                }
            } while ((i4 += 2) < 4);
        }
        vMeth_check_sum += i1 + l + i2 + i3 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i4 + Double.doubleToLongBits(d)
            + s + i5 + i6 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i20=-52, i21=11, i22=2, i23=11355;
        long l1=899345958L;

        for (float f : Test.fArrFld) {
            vMeth(i20, Test.instanceCount);
            Test.instanceCount -= Test.lFld;
            i20 ^= 12914;
        }
        i20 = i20;
        for (l1 = 8; l1 < 334; ++l1) {
            if (Test.bFld) continue;
            Test.lFld &= Test.instanceCount;
            i21 = i20;
            for (i22 = 1; i22 < 5; i22++) {
                short s1=18714;
                i21 ^= s1;
                Test.bFld = false;
                i20 |= i22;
                if (Test.bFld) continue;
                i23 = 42563;
            }
        }
        long meth_res = i20 + l1 + i21 + i22 + i23;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-23, i24=4, i25=13, i26=-192, i27=-14, i28=-38627, i29=-5, i30=-64279, iArr1[]=new int[N];
        double d2=-1.130439;
        float f3=-8.435F;
        short s2=19521, sArr[]=new short[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-58);
        FuzzerUtils.init(sArr, (short)-13177);
        FuzzerUtils.init(iArr1, -2);

        i -= iMeth();
        Test.instanceCount += (long)d2;
        i = i;
        f3 += -12L;
        for (i24 = 10; i24 < 183; ++i24) {
            Test.lArrFld = Test.lArrFld;
            d2 = i24;
            byArr[i24 - 1] -= (byte)s2;
            for (i26 = 1; 145 > i26; i26++) {
                Test.instanceCount += (-12L + (i26 * i26));
            }
            i28 = 1;
            do {
                int i31=45221;
                switch (((i28 % 4) * 5) + 23) {
                case 25:
                    s2 *= s2;
                    break;
                case 28:
                    i27 += i25;
                    Test.bFld = false;
                    Test.bFld = Test.bFld;
                    switch (((i24 >>> 1) % 9) + 87) {
                    case 87:
                        i25 += (i28 - Test.lFld);
                        f3 = Test.instanceCount;
                        i27 = i27;
                        f3 += (i28 + Test.instanceCount);
                        break;
                    case 88:
                        i25 = 24313;
                        f3 += Test.lFld;
                        i27 = (int)0L;
                        for (i29 = i28; i29 < 1; ++i29) {
                            f3 += (i29 - i25);
                            Test.fArrFld[i28 + 1] = Test.instanceCount;
                            i27 += (int)f3;
                            Test.instanceCount += (((i29 * f3) + i24) - Test.instanceCount);
                        }
                    case 89:
                        s2 *= (short)-24836;
                        break;
                    case 90:
                        Test.lArrFld = FuzzerUtils.long1array(N, (long)-9L);
                        break;
                    case 91:
                        sArr[i24] >>= (short)i27;
                        break;
                    case 92:
                        Test.lFld >>= Test.lFld;
                        break;
                    case 93:
                        try {
                            i = (iArr1[i28 + 1] % 1939699252);
                            i = (55 / i25);
                            Test.iFld = (i30 % i28);
                        } catch (ArithmeticException a_e) {}
                    case 94:
                        i += (((i28 * i24) + Test.iFld) - i);
                        break;
                    case 95:
                        i31 = i;
                        break;
                    }
                case 29:
                case 43:
                    d2 *= -4376081065159305190L;
                    break;
                default:
                    d2 -= -183;
                }
            } while (++i28 < 145);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
