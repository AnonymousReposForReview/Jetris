package tests.javafuzzer123;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:46:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-59L;
    public static byte byFld=65;
    public static volatile double dFld=-86.64657;
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10930);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i3) {

        int i4=-137, i5=192, i6=-23248, i7=153;
        long l1=-3621355247L, lArr[]=new long[N];
        float f=2.454F;
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)2);
        FuzzerUtils.init(lArr, -19630L);

        for (i4 = 7; 301 > i4; i4++) {
            short s=21000;
            if (b) {
                byArr[i4 - 1] *= (byte)i3;
                i6 = 1;
                while (++i6 < 6) {
                    for (l1 = 1; l1 < 1; l1++) {
                        Test.iArrFld[(int)(l1)] = (int)-1957447973038771733L;
                        i7 += (-1 + (l1 * l1));
                        i7 *= i5;
                        i5 += (int)l1;
                        i5 = 179;
                        Test.instanceCount -= -13L;
                        f *= 62233;
                        Test.instanceCount *= i4;
                        i7 -= 7670;
                    }
                }
                i7 += (i4 * i4);
            } else if (b) {
                i7 = i3;
            } else if (b) {
                if (i6 != 0) {
                }
            } else {
                lArr[i4 + 1] -= s;
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + l1 + i7 + Float.floatToIntBits(f) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, byte by) {

        int i1=-223, i2=-1, i8=-53565, i9=124, i10=12, i11=25615, i12=39554;
        double d=3.66449;
        float f1=10.546F;
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(byArr1, (byte)-20);

        for (i1 = 11; i1 < 262; ++i1) {
            i2 += (int)(i2 |= (int)((-52227 + iMeth1(i2)) * l));
            l += (long)d;
            try {
                i8 = (32512609 % i1);
                i8 = (i8 / i2);
                i2 = (-19 / i1);
            } catch (ArithmeticException a_e) {}
            for (i9 = 1; i9 < 6; i9++) {
                i2 >>= i2;
                if (i10 != 0) {
                }
                f1 *= 3314248672192883831L;
                for (i11 = 1; i11 < 2; i11++) {
                    i8 += i11;
                    i10 += (((i11 * l) + f1) - f1);
                    i10 -= (int)Test.instanceCount;
                    Test.instanceCount -= 96;
                    f1 = i2;
                    byArr1 = byArr1;
                }
            }
        }
        long meth_res = l + by + i1 + i2 + Double.doubleToLongBits(d) + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11
            + i12 + FuzzerUtils.checkSum(byArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i13=-8, i14=40365, i15=-3, i16=-44;
        float f2=-1.24F;
        long l2=-8643494014153124491L;

        Test.instanceCount = ((iMeth(-61328L, Test.byFld) - 114) << -164);
        i13 = 239;
        while ((i13 -= 2) > 0) {
            short s1=16418;
            f2 += (((i13 * i13) + s1) - i13);
            for (i14 = i13; i14 < 13; i14++) {
                for (l2 = 1; l2 > i14; --l2) {
                    i15 *= (int)-1.666F;
                    i15 += i14;
                    f2 += (float)1.10930;
                    f2 *= (float)-97.54468;
                    if (i16 != 0) {
                        vMeth_check_sum += i13 + Float.floatToIntBits(f2) + i14 + i15 + l2 + i16;
                        return;
                    }
                    Test.iArrFld[i14 + 1] = i14;
                }
                if (false) {
                    i16 |= -31855;
                }
                i15 = i15;
            }
            i16 += (i13 * i13);
        }
        vMeth_check_sum += i13 + Float.floatToIntBits(f2) + i14 + i15 + l2 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i=13, i17=58561, i18=6, i19=11, i21=0, i22=9548, i23=100, i24=-10, i25=-118, i26=-47, i27=9, i28=77;
        double d1=0.1564;
        float f3=0.163F;
        boolean b1=true;

        i *= (++Test.iArrFld[(i >>> 1) % N]);
        vMeth();
        for (i17 = 7; i17 < 280; i17++) {
            i19 = 1;
            do {
                d1 = 1;
                do {
                    Test.instanceCount = i19;
                    Test.instanceCount *= i18;
                    lArrFld[(int)(d1 - 1)] += (long)f3;
                    try {
                        i = (-58 % Test.iArrFld[(int)(d1 + 1)]);
                        i = (158 % i17);
                        Test.iArrFld[i17 - 1] = (i18 / i);
                    } catch (ArithmeticException a_e) {}
                } while (++d1 < 1);
                Test.instanceCount = i;
                i = (int)f3;
                f3 += -4;
            } while (++i19 < 92);
        }
        for (int i20 : Test.iArrFld) {
            Test.dFld += Test.byFld;
        }
        Test.iArrFld[(i17 >>> 1) % N] *= (int)Test.instanceCount;
        i = (int)Test.instanceCount;
        for (i21 = 18; i21 < 351; ++i21) {
            dArrFld[i21] -= i22;
        }
        Test.iArrFld[(i19 >>> 1) % N] = i18;
        for (i23 = 2; 268 > i23; i23++) {
            if (b1) {
                Test.instanceCount |= i23;
                for (i25 = 94; i25 > i23; --i25) {
                    for (i27 = 1; 1 > i27; ++i27) {
                        Test.instanceCount += (((i27 * i18) + i18) - i24);
                        Test.iArrFld[i23] += i;
                        i28 = (int)Test.instanceCount;
                        try {
                            i28 = (137 / i26);
                            i22 = (-143 / i27);
                            i = (-1878947283 % i19);
                        } catch (ArithmeticException a_e) {}
                        i /= (int)(Test.instanceCount | 1);
                    }
                    Test.instanceCount >>>= i18;
                }
            } else if (true) {
                f3 += i23;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
