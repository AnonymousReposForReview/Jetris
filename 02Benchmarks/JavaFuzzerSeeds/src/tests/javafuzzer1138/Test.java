package tests.javafuzzer1138;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:33:18 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3822531753L;
    public static double dFld=0.83143;
    public int iFld=5117;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=35666, i5=-17534, i6=-25624, i7=150, i8=-1, i9=9, i10=2733, iArr1[]=new int[N];
        double d1=-1.94919;
        boolean b=false;
        short s=-28237;

        FuzzerUtils.init(iArr1, -59112);

        iArr1[(i4 >>> 1) % N] += (int)d1;
        b = b;
        try {
            Test.instanceCount -= -5819;
        }
        catch (ArithmeticException exc1) {
            for (i5 = 7; i5 < 223; ++i5) {
                i4 += i4;
                s = (short)d1;
                for (i7 = 7; i7 > i5; --i7) {
                    iArr1[i5] = i6;
                    for (i9 = i5; 1 > i9; i9++) {
                        i6 += i5;
                    }
                    i8 -= 101;
                    i8 += i7;
                    Test.instanceCount *= Test.instanceCount;
                }
                if (b) break;
            }
        }
        vMeth1_check_sum += i4 + Double.doubleToLongBits(d1) + (b ? 1 : 0) + i5 + i6 + s + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i2) {

        double d=-9.62594, d2=0.65956;
        int i3=18012, i11=1, i12=237, iArr[][]=new int[N][N];
        float f=-2.499F, f1=-42.974F, fArr1[]=new float[N];
        boolean b1=true;

        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(fArr1, 1.59F);

        for (d = 12; d < 255; d++) {
            i3 += (int)((long)d ^ (long)f);
            Test.instanceCount -= i2;
            i2 -= i3;
            iArr = (iArr = (iArr = (iArr = FuzzerUtils.int2array(N, (int)6))));
            f1 = 1;
            while (++f1 < 7) {
                vMeth1();
                d2 += Test.instanceCount;
                if (b1) continue;
                for (i11 = 1; i11 < 1; i11++) {
                    i12 *= i3;
                    f *= -1932661233L;
                    Test.instanceCount = (long)d2;
                    fArr1[(int)(f1)] = i12;
                }
                i3 = (int)Test.instanceCount;
            }
        }
        long meth_res = i2 + Double.doubleToLongBits(d) + i3 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d2) + (b1 ? 1 : 0) + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i, int i1) {

        int i13=41552, i14=2275, i15=-33694, i16=14212;
        short s1=24702;
        boolean b2=false;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.727F);

        fArr[(-8 >>> 1) % N] = iMeth(i1);
        i1 -= (int)Test.instanceCount;
        i ^= (int)Test.instanceCount;
        i1 = (int)-111.702F;
        for (i13 = 6; 366 > i13; i13++) {
            s1 <<= s1;
            Test.iArrFld[i13 - 1] *= i;
            for (i15 = 5; i15 > 1; i15 -= 3) {
                b2 = b2;
                i1 <<= i15;
                if (false) {
                    switch ((i13 % 2) + 26) {
                    case 26:
                        i1 += i13;
                        break;
                    case 27:
                    default:
                        if (true) continue;
                        Test.dFld -= -2.575F;
                    }
                } else {
                    s1 += (short)(i15 | i);
                }
            }
        }
        vMeth_check_sum += i + i1 + i13 + i14 + s1 + i15 + i16 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i17=0, i18=10, i19=-1, i20=-82, i21=-22231;
        boolean b3=false;
        float f2=-94.181F;
        byte by=-59;

        vMeth(iFld, 34159);
        for (i17 = 194; i17 > 12; i17 -= 3) {
            i18 += iFld;
            i19 = 1;
            while (++i19 < 310) {
                Test.instanceCount += Test.instanceCount;
                for (i20 = 2; i17 < i20; --i20) {
                    i21 >>= iFld;
                    i18 ^= i19;
                    Test.iArrFld[i19 - 1] += i19;
                    if (b3) {
                        i21 = (int)1.118F;
                        iFld -= i17;
                        Test.instanceCount <<= i20;
                    } else {
                        Test.instanceCount += i20;
                    }
                    iFld &= iFld;
                    f2 = -93;
                    i18 = (int)Test.instanceCount;
                    switch ((((i18 >>> 1) % 8) * 5) + 8) {
                    case 44:
                        i18 += -23820;
                        iFld += (i20 - i20);
                        if (true) {
                            by *= (byte)Test.dFld;
                        } else if (b3) {
                            i21 -= (int)Test.instanceCount;
                            Test.instanceCount <<= i21;
                        } else if (b3) {
                            b3 = b3;
                            i18 -= -54;
                        } else {
                            try {
                                iFld = (Test.iArrFld[i17 + 1] / 134);
                                i18 = (i19 % -1886943535);
                                iFld = (112 % iFld);
                            } catch (ArithmeticException a_e) {}
                            iFld += (i20 - Test.instanceCount);
                            i18 |= iFld;
                            i18 -= i20;
                        }
                        break;
                    case 9:
                        by -= (byte)i21;
                    case 20:
                        Test.iArrFld[i17] <<= i20;
                    case 13:
                        i21 = iFld;
                        break;
                    case 16:
                        i18 *= (int)Test.instanceCount;
                    case 30:
                        i18 += (i20 + i17);
                        break;
                    case 12:
                        Test.instanceCount = 29470;
                        break;
                    case 29:
                        f2 -= i19;
                        break;
                    default:
                        b3 = true;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
