package tests.javafuzzer1125;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:55:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=81L;
    public static float fFld=-77.413F;
    public double dFld=-2.98490;
    public static byte byFld=122;
    public long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth2() {

        int i2=15957, i3=-36163, i4=12, i5=-8949;

        for (i2 = 7; i2 < 156; i2++) {
            for (i4 = 1; i4 < 11; ++i4) {
                Test.instanceCount >>= -76;
                Test.fFld += -76;
                Test.fFld = i2;
                i3 >>= i3;
                i3 += (int)Test.instanceCount;
                Test.fFld *= Test.fFld;
                dFld *= i2;
                i3 += (int)1.141F;
            }
            lArrFld[i2] += 3;
            Test.instanceCount += i2;
            i5 -= i5;
            Test.byFld += (byte)i2;
            if (true) continue;
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5;
    }

    public void vMeth1() {

        int i=-3, i1=-12, i6=-1, i7=9, i8=0, i9=-14112, i10=46264, iArr[]=new int[N];
        short s=-9080;

        FuzzerUtils.init(iArr, -79);

        for (i = 21; i < 350; ++i) {
            i1 = (int)((--i1) + ((Test.instanceCount - i) * (s *= (short)144)));
            vMeth2();
            for (i6 = i; 5 > i6; ++i6) {
                for (i8 = 1; i8 < 1; i8++) {
                    i10 = (int)Test.instanceCount;
                    i1 -= 3;
                    Test.instanceCount += (((i8 * Test.fFld) + Test.instanceCount) - Test.instanceCount);
                    switch (((i8 % 5) * 5) + 117) {
                    case 133:
                        i9 += (((i8 * i9) + Test.fFld) - i1);
                    case 122:
                        iArr[i8 + 1] = i10;
                        iArr = iArr;
                        break;
                    case 118:
                        i7 = 21949;
                        i9 += i8;
                        Test.byFld += (byte)-490381651L;
                        break;
                    case 123:
                        Test.byFld += (byte)i8;
                    case 129:
                        Test.fFld += (i8 + Test.fFld);
                        break;
                    default:
                        Test.byFld += (byte)(((i8 * i7) + i10) - i6);
                    }
                }
            }
        }
        vMeth1_check_sum += i + i1 + s + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {


        vMeth1();
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i11=34, i12=6976, i13=-56798, i14=240, i15=-11, i16=-134, i17=41787;
        long l=-965470305228108505L;
        boolean b=false;
        short s1=18314;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)79);

        vMeth();
        byArr = byArr;
        i11 = i11;
        lArrFld = lArrFld;
        iArrFld[(-108 >>> 1) % N] -= i11;
        for (l = 6; l < 166; l++) {
            b = false;
            i11 = 0;
            i11 += i12;
            Test.instanceCount += (long)dFld;
        }
        for (i13 = 1; 209 > i13; i13++) {
            i12 -= i13;
            for (i15 = 1; i15 < 121; ++i15) {
                try {
                    i14 = (i14 % i11);
                    i11 = (6397 % iArrFld[i15]);
                    i16 = (62661 / i12);
                } catch (ArithmeticException a_e) {}
                i14 -= i14;
                lArrFld[i13] >>= -11L;
                i17 = 1;
                do {
                    i16 = (int)-50742L;
                    Test.instanceCount -= (long)dFld;
                    dFld *= i11;
                    Test.byFld /= (byte)((long)(Test.fFld) | 1);
                    switch ((i17 % 2) + 41) {
                    case 41:
                        b = b;
                        break;
                    case 42:
                        Test.byFld += (byte)(((i17 * i14) + i11) - i13);
                        iArrFld[i17] -= i11;
                        Test.fFld -= l;
                        break;
                    }
                    Test.instanceCount += (24008 + (i17 * i17));
                    s1 = (short)i15;
                    Test.instanceCount += i15;
                    Test.instanceCount += i17;
                } while (++i17 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
