package tests.javafuzzer2588;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:56:51 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=436170139459121655L;
    public boolean bFld=false;
    public static boolean bFld1=false;
    public static volatile int iFld=-10;
    public long lArrFld[]=new long[N];

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5) {


        i4 += i5;
        vMeth1_check_sum += i4 + i5;
    }

    public static void vMeth(int i1, boolean b) {

        int i2=95, i3=39894, i6=54686, i7=-254, i8=17930;
        float f=-8.864F;
        double d=0.43075;

        for (i2 = 3; i2 < 219; i2++) {
            vMeth1(-63, i3);
        }
        f = f;
        try {
            i6 = 1;
            while (++i6 < 272) {
                d -= Test.instanceCount;
                i3 += (i6 - i2);
                i1 = -12;
                for (i7 = 1; i7 < 6; ++i7) {
                    i8 <<= (int)Test.instanceCount;
                    if (b) break;
                    i3 = i7;
                    i3 >>= (int)Test.instanceCount;
                    i3 ^= 12;
                }
                i1 += i6;
            }
        }
        catch (NegativeArraySizeException exc1) {
            i1 = (int)6L;
        }
        finally {
            i8 *= i2;
        }
        vMeth_check_sum += i1 + (b ? 1 : 0) + i2 + i3 + Float.floatToIntBits(f) + i6 + Double.doubleToLongBits(d) + i7
            + i8;
    }

    public static boolean bMeth(int i) {

        int i9=-113, i10=60, i11=11, i12=-15996, iArr[]=new int[N];
        double d1=-1.119083, d2=47.96187;
        float f1=99.240F;

        FuzzerUtils.init(iArr, -11);

        vMeth(i, Test.bFld1);
        i9 = 1;
        do {
            i &= i;
            for (d1 = 5; 1 < d1; --d1) {
                f1 += (float)d1;
                for (i11 = 1; 2 > i11; i11++) {
                    switch ((i11 % 4) + 8) {
                    case 8:
                    case 9:
                        i12 = i12;
                        f1 += -33;
                        break;
                    case 10:
                        i10 += -5;
                        break;
                    case 11:
                        Test.instanceCount -= i12;
                    default:
                        iArr[i9 - 1] += (int)Test.instanceCount;
                    }
                    d2 += Test.instanceCount;
                    i += i12;
                    i10 >>= i10;
                }
            }
        } while (++i9 < 359);
        long meth_res = i + i9 + Double.doubleToLongBits(d1) + i10 + Float.floatToIntBits(f1) + i11 + i12 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i13=-31928, i14=-4, i15=7, i16=3, i17=13, i18=4, i19=51, i20=-36678, i21=-105, i22=243, iArr1[]=new int[N];
        float f2=53.413F;
        double d3=0.67827;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr1, 44);
        FuzzerUtils.init(bArr, true);

        bFld = bMeth(Test.iFld);
        for (i13 = 4; i13 < 168; ++i13) {
            for (i15 = i13; 153 > i15; i15++) {
                Test.iFld = -2669;
                if (Test.bFld1) {
                    for (i17 = 1; i17 < 1; ++i17) {
                        Test.instanceCount += -6L;
                        lArrFld[i17 - 1] *= (long)-28.42416;
                    }
                    for (i19 = 1; i19 < 1; ++i19) {
                        i14 += i19;
                        iArr1[i19] = i13;
                        bArr[i13 - 1] = Test.bFld1;
                        Test.bFld1 = Test.bFld1;
                        i14 -= (int)1.218F;
                        Test.iFld += (i19 | i14);
                        i14 *= i13;
                        i16 = i16;
                    }
                    i21 += (i15 * i14);
                } else {
                    Test.iFld += (((i15 * f2) + Test.instanceCount) - f2);
                    Test.instanceCount >>= i16;
                }
                i14 = i15;
                lArrFld[i15] = -5;
                i21 |= Test.iFld;
                i22 = 1;
                do {
                    f2 -= (float)d3;
                    try {
                        Test.iFld = (55067 % iArr1[i15]);
                        i20 = (i17 % i20);
                        i20 = (244 / i20);
                    } catch (ArithmeticException a_e) {}
                } while (++i22 < 1);
            }
            f2 = i15;
            i20 += i14;
            Test.instanceCount *= (long)d3;
            i16 += i18;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
