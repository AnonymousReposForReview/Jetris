package tests.javafuzzer298;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:24:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-177L;
    public static float fFld=0.702F;
    public static double dFld=-55.12389;
    public static int iFld=-10;
    public static boolean bFld=false;
    public long lArrFld[]=new long[N];
    public static volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)31944);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=-20190, i10=85, i11=210, i12=14, i13=246, iArr1[]=new int[N];
        long l1=-20010L, lArr[]=new long[N];
        byte by=-87;

        FuzzerUtils.init(iArr1, -4999);
        FuzzerUtils.init(lArr, 234131331248507203L);

        for (i9 = 14; i9 < 343; ++i9) {
            for (l1 = 5; l1 > 1; l1--) {
                Test.instanceCount += (((l1 * Test.iFld) + by) - i10);
                for (i12 = 2; i12 > l1; --i12) {
                    iArr1[(int)(l1 + 1)] <<= i10;
                    i10 -= i11;
                    Test.instanceCount *= Test.instanceCount;
                    try {
                        iArr1[i12 + 1] = (-1002338763 / Test.iFld);
                        i11 = (i10 / i9);
                        i13 = (i9 % -1306581118);
                    } catch (ArithmeticException a_e) {}
                    i11 += (i12 * i12);
                    Test.instanceCount -= 84;
                    i10 += i11;
                    Test.dFld = i13;
                    i11 += (i12 - Test.fFld);
                    Test.instanceCount = i13;
                }
                lArr[i9 + 1] -= 29045;
            }
        }
        long meth_res = i9 + i10 + l1 + i11 + by + i12 + i13 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i14=-13, i15=2, i16=14;
        boolean b=false, bArr[]=new boolean[N];
        short s1=10918;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -1322678880L);
        FuzzerUtils.init(bArr, false);

        Test.fFld = (float)(((Test.dFld - Test.iFld) + (Test.instanceCount - Test.fFld)) * iMeth1());
        i14 = 1;
        while (++i14 < 240) {
            lArr1[i14 + 1] = Test.iFld;
            Test.iFld = -140;
        }
        Test.iFld = (int)Test.dFld;
        for (i15 = 258; 12 < i15; i15--) {
            bArr[i15 - 1] = b;
        }
        Test.iFld += (int)Test.instanceCount;
        Test.fFld += i14;
        Test.fFld = i16;
        Test.iFld -= 146;
        Test.fFld -= 11;
        if (b) {
            s1 -= (short)i16;
        }
        i16 = i14;
        long meth_res = i14 + i15 + i16 + (b ? 1 : 0) + s1 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f1, int i4, double d1) {

        int i5=-7, i6=40876, i7=-9, i8=-32851, i17=143, i18=-29991, iArr[]=new int[N];
        short s=-6653;
        byte by1=-46;

        FuzzerUtils.init(iArr, 19428);

        f1 -= (++f1);
        for (i5 = 4; i5 < 351; ++i5) {
            iArr[i5] += iArr[i5 - 1];
            for (i7 = 1; i7 < 5; i7++) {
                i6 <<= (int)(((i5 * s) % ((Test.instanceCount >> Test.instanceCount) | 1)) + ((i8 + d1) + (82 -
                    (++i6))));
                if (i8 != 0) {
                    vMeth_check_sum += Float.floatToIntBits(f1) + i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8
                        + s + by1 + i17 + i18 + FuzzerUtils.checkSum(iArr);
                    return;
                }
                f1 *= (((Test.instanceCount++) - Math.min(Test.instanceCount, Test.instanceCount)) *
                    (Test.instanceCount - (f1++)));
                i6 -= (++i8);
                i8 += iMeth();
                Test.instanceCount = Test.instanceCount;
                i4 <<= by1;
                for (i17 = 2; i17 > 1; i17 -= 2) {
                    i8 = (int)Test.instanceCount;
                    iArr = FuzzerUtils.int1array(N, (int)70);
                    Test.instanceCount *= i8;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + i8 + s + by1 +
            i17 + i18 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i1=3, i2=-33, i3=10, i19=200, i20=-8530, i21=-8, i22=19267, i23=-10, i24=2, iArr2[]=new int[N];
        float f=22.253F;
        double d=1.37212, d2=-82.111513;
        long l2=-1L;

        FuzzerUtils.init(iArr2, 13);

        i = (int)(((i + f) - (d + i)) - (-1.861F - (78 + (f + i1))));
        for (long l : lArrFld) {
            for (i2 = 1; i2 < 63; i2++) {
                Test.instanceCount <<= i;
            }
            vMeth(f, i, d);
            if (Test.bFld) continue;
        }
        Test.instanceCount -= -2210935647L;
        d2 = 379;
        do {
            for (i19 = 2; i19 < 66; i19 += 2) {
                iArr2[i19 - 1] |= i3;
                iArr2[(int)(d2)] = (int)62.735F;
                Test.instanceCount = i19;
                for (i21 = 1; i21 < 3; ++i21) {
                    Test.iFld *= i21;
                    i3 = i22;
                    Test.instanceCount = i19;
                    Test.fFld -= Test.iFld;
                    Test.instanceCount = (long)f;
                    if (Test.bFld) continue;
                    i22 -= (int)10L;
                    iArr2[i21] /= (int)(i20 | 1);
                }
                Test.dFld = i19;
                for (i23 = 1; i23 < 3; i23++) {
                    short s2=-32275;
                    Test.iFld = (int)Test.instanceCount;
                    i += (int)l2;
                    switch (((i19 >>> 1) % 8) + 101) {
                    case 101:
                        i24 = i23;
                    case 102:
                        f += f;
                        if (true) break;
                        iArr2[(int)(d2)] += 11085;
                        break;
                    case 103:
                        i20 -= (int)1.2157;
                        break;
                    case 104:
                        Test.iFld += i23;
                        break;
                    case 105:
                        l2 -= s2;
                        break;
                    case 106:
                        Test.sArrFld[i23] ^= (short)i19;
                        break;
                    case 107:
                        lArrFld[(int)(d2)] += Test.iFld;
                    case 108:
                        i24 >>>= i19;
                    }
                }
            }
        } while (--d2 > 0);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
