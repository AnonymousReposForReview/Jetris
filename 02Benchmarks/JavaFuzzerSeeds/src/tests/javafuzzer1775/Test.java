package tests.javafuzzer1775;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:14:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=49181L;
    public static float fFld=-85.648F;
    public static byte byFld=-83;
    public int iFld=38044;
    public long lArrFld[][]=new long[N][N];
    public static short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-1133);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i3, int i4, int i5) {

        double d=0.26699;

        d += -33.116583;
        long meth_res = i3 + i4 + i5 + Double.doubleToLongBits(d);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l) {

        int i2=7, i6=37086, i7=150, i8=-2, i9=-11, i10=208, iArr[][]=new int[N][N];
        byte by=-66;
        double d1=0.120388;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3306894763L);
        FuzzerUtils.init(iArr, -10);

        i2 = (int)((i2 = (int)Test.instanceCount) * (iMeth1(i2, -3, i2) + i2));
        for (i6 = 2; i6 < 128; ++i6) {
            i7 += by;
            i8 = 1;
            while (++i8 < 12) {
                if (b) {
                    i7 *= (int)Test.instanceCount;
                    l = -13;
                } else if (b) {
                    i2 = i2;
                    if (true) {
                        for (i9 = 1; 1 < i9; i9--) {
                            Test.byFld += (byte)l;
                            i10 -= (int)Test.fFld;
                            lArr[i8] -= (long)-1.853F;
                        }
                        i7 += (int)Test.instanceCount;
                        by -= (byte)d1;
                    } else if (b) {
                        Test.instanceCount += i8;
                    } else if (false) {
                        try {
                            i10 = (iArr[i6][i8] / iArr[i6 - 1][i6 + 1]);
                            i7 = (i8 % i6);
                            i10 = (i9 / -4733);
                        } catch (ArithmeticException a_e) {}
                    } else {
                        Test.fFld += (((i8 * i9) + l) - Test.instanceCount);
                    }
                }
            }
        }
        long meth_res = l + i2 + i6 + i7 + by + i8 + i9 + i10 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i, int i1) {


        Test.fFld += (-iMeth(Test.instanceCount));
        vMeth_check_sum += i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i11=51909, i12=5, i13=11247, i14=17, i15=165;
        double d2=-114.16435, d3=0.30049, d4=-1.16398;
        short s=15722;
        boolean b1=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-25);

        vMeth(7, i11);
        i11 += i11;
        i12 = 376;
        while ((i12 -= 3) > 0) {
            switch ((i12 % 2) + 59) {
            case 59:
                if (false) {
                    d2 -= 0.153F;
                } else {
                    for (d3 = 12; 199 > d3; ++d3) {
                        byArr[i12 - 1] = (byte)6216461393730077494L;
                        i11 = i13;
                        i14 = 1;
                        while (++i14 < 2) {
                            i13 = (int)Test.fFld;
                        }
                    }
                }
            case 60:
                i11 <<= -5;
                Test.instanceCount *= i13;
                Test.byFld <<= (byte)-238;
                Test.byFld += (byte)i12;
            default:
                i13 += i11;
                Test.instanceCount >>= i12;
            }
            i11 >>= i13;
            i13 = i14;
            if (b1) {
                switch ((i12 % 6) + 58) {
                case 58:
                    i15 = 1;
                    while (++i15 < 199) {
                        Test.instanceCount -= -22116;
                        i13 = -12;
                        switch ((i15 % 10) + 56) {
                        case 56:
                            d4 = 1;
                            while (++d4 < 1) {
                                s += (short)i12;
                                Test.byFld += (byte)(((d4 * i11) + i13) - Test.fFld);
                                lArrFld[i15 + 1][i12 - 1] += i14;
                                Test.fFld += i15;
                            }
                            break;
                        case 57:
                            i11 *= i13;
                            break;
                        case 58:
                            i11 += (i15 ^ iFld);
                        case 59:
                            i11 += i15;
                            break;
                        case 60:
                            i11 += (i15 | Test.instanceCount);
                            break;
                        case 61:
                            d2 += i15;
                            break;
                        case 62:
                            Test.sArrFld[i12][i15] = (short)Test.instanceCount;
                            break;
                        case 63:
                            i13 >>= i11;
                            break;
                        case 64:
                            i11 += (((i15 * i13) + i12) - Test.fFld);
                        case 65:
                            i11 += (((i15 * i15) + iFld) - i11);
                            break;
                        default:
                            i13 -= i13;
                        }
                    }
                case 59:
                    iFld = i11;
                    break;
                case 60:
                    d2 = Test.instanceCount;
                    break;
                case 61:
                    iFld += (int)52216L;
                    break;
                case 62:
                    d2 -= i11;
                case 63:
                    i13 &= i12;
                }
            } else if (b1) {
                i13 ^= (int)Test.instanceCount;
            } else {
                if (b1) continue;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
