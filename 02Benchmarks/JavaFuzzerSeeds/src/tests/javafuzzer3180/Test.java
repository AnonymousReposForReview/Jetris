package tests.javafuzzer3180;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:21:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3713190206L;
    public int iFld=-7;
    public float fFld=-93.72F;
    public static int iFld1=206;
    public static short sFld=5980;
    public static double dFld=-2.96546;
    public int iFld2=21679;
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, long l) {

        double d=32.89934;
        int i3=-1, i4=197, i5=26124, i6=6, i7=94, i8=-8001;
        float f=-48.537F, fArr[]=new float[N];
        boolean b=true;
        byte by1=40;

        FuzzerUtils.init(fArr, 2.261F);

        d = l;
        for (i3 = 22; i3 < 385; i3++) {
            i5 = 1;
            do {
                switch (((i3 % 2) * 5) + 12) {
                case 13:
                    switch (((i5 % 2) * 5) + 41) {
                    case 45:
                        for (i6 = i5; 1 > i6; i6++) {
                            switch (((i5 % 9) * 5) + 35) {
                            case 52:
                                Test.instanceCount >>>= Test.iFld1;
                            case 48:
                                i2 /= (int)((long)(f) | 1);
                                l += i6;
                                i7 = i4;
                                break;
                            case 49:
                                Test.iArrFld[i3 + 1] -= i2;
                                f = i5;
                                Test.iArrFld[i5 - 1] = (int)22L;
                                Test.iFld1 += (((i6 * Test.sFld) + Test.iFld1) - i4);
                                break;
                            case 56:
                                i7 += (int)l;
                                break;
                            case 73:
                                Test.instanceCount += Test.instanceCount;
                                break;
                            case 75:
                                if (b) continue;
                                break;
                            case 76:
                                f += i8;
                                break;
                            case 51:
                                fArr[i3] = 38356;
                                break;
                            case 64:
                                Test.instanceCount = by1;
                            default:
                                Test.iFld1 += i8;
                            }
                        }
                    case 44:
                        f *= i3;
                        break;
                    }
                    break;
                case 14:
                    i7 *= i3;
                    break;
                }
            } while (++i5 < 5);
        }
        vMeth1_check_sum += i2 + l + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + (b
            ? 1 : 0) + i8 + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        byte by=-76;
        short s=-22600;
        boolean b1=false;
        float f1=-2.375F;
        int i9=-188, i10=3, iArr[]=new int[N];
        double d1=-14.119001;

        FuzzerUtils.init(iArr, 3);

        iArr = (iArr = (iArr = (iArr = iArr)));
        iArr[(Test.iFld1 >>> 1) % N] = (int)((++Test.instanceCount) * ((by | Test.iFld1) + (Test.instanceCount + 164)));
        switch ((((Test.iFld1 >>> 1) % 1) * 5) + 1) {
        case 3:
            Test.instanceCount -= s;
            break;
        default:
            vMeth1(-976, Test.instanceCount);
            if (b1) {
                Test.iFld1 += -15620;
                Test.iFld1 = Test.iFld1;
                b1 = b1;
                vMeth_check_sum += by + s + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i9 + Double.doubleToLongBits(d1)
                    + i10 + FuzzerUtils.checkSum(iArr);
                return;
            } else {
                Test.instanceCount -= by;
                f1 *= -36210;
            }
        }
        i9 = 211;
        do {
            for (d1 = 1; d1 < 15; ++d1) {
                b1 = b1;
                Test.instanceCount += Test.iFld1;
            }
        } while ((i9 -= 2) > 0);
        vMeth_check_sum += by + s + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i9 + Double.doubleToLongBits(d1) + i10 +
            FuzzerUtils.checkSum(iArr);
    }

    public int iMeth() {

        int i=-1, i1=57706, i11=-248, i12=-36150;
        long l1=-7005156254138013632L;
        boolean b2=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.40724);

        for (i = 12; 275 > i; ++i) {
            vMeth();
            iFld >>= i1;
            Test.dFld = i;
            dArr[i] = i1;
            for (l1 = 1; l1 < 6; ++l1) {
                switch ((i % 8) + 86) {
                case 86:
                    i12 = 2;
                    do {
                        Test.iFld1 += (int)Test.dFld;
                        Test.instanceCount += Test.instanceCount;
                        if (i1 != 0) {
                        }
                        b2 = b2;
                        Test.dFld += 32L;
                        iFld <<= i11;
                        i11 &= Test.iFld1;
                    } while ((i12 -= 3) > 0);
                    break;
                case 87:
                    iFld = i1;
                    break;
                case 88:
                case 89:
                    Test.iFld1 += (int)(l1 + Test.iFld1);
                    break;
                case 90:
                    Test.iArrFld[(int)(l1 - 1)] <<= -13;
                    break;
                case 91:
                    Test.dFld += i12;
                    break;
                case 92:
                case 93:
                    i11 -= (int)l1;
                    break;
                }
            }
        }
        long meth_res = i + i1 + l1 + i11 + i12 + (b2 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i13=-12, i14=-54, i15=-9057, i16=-204, i17=252, i18=20, i19=131, i20=-13, i21=208, i22=248;
        byte by2=33;
        long l2=3284039662L, lArr[]=new long[N];
        float f2=37.381F;

        FuzzerUtils.init(lArr, 8525328905817058293L);

        Test.instanceCount -= lArr[(iFld >>> 1) % N];
        iFld &= (int)(((iFld - fFld) + iMeth()) / (Test.sFld | 1));
        iFld = iFld;
        Test.iFld1 <<= iFld;
        sArrFld[(Test.iFld1 >>> 1) % N] &= (short)124;
        Test.iArrFld[(Test.iFld1 >>> 1) % N] |= Test.iFld1;
        iFld = iFld;
        for (i13 = 9; 258 > i13; i13++) {
            Test.iFld1 = by2;
            Test.iArrFld[i13 + 1] = (int)Test.instanceCount;
            iFld >>= 22122;
            dArrFld[i13] = Test.sFld;
            Test.instanceCount -= Test.instanceCount;
            Test.iFld1 += i13;
            for (l2 = 3; l2 < 101; l2++) {
                for (i16 = 1; i16 < 2; i16++) {
                    Test.iFld1 += (i16 | i17);
                    i17 = Test.iFld1;
                    Test.instanceCount += (i16 - fFld);
                    f2 += Test.iFld1;
                }
                Test.iFld1 += (int)(l2 * i17);
            }
        }
        i18 = 1;
        while (++i18 < 356) {
            for (i19 = 1; i19 < 71; ++i19) {
                fFld *= i15;
                i20 &= i13;
                for (i21 = 1; 2 > i21; ++i21) {
                    i15 = (int)f2;
                    try {
                        Test.iArrFld[i18 - 1] = (i14 / i16);
                        i22 = (238505627 / iFld2);
                        i17 = (iFld / -53075);
                    } catch (ArithmeticException a_e) {}
                    Test.iArrFld[i19 + 1] += (int)f2;
                    Test.iArrFld[i19] *= i17;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
