package tests.javafuzzer2149;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:27:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public int iFld=41523;
    public static int iFld1=99;
    public static short sFld=12632;
    public volatile int iFld2=-18584;
    public boolean bFld=true;
    public static int iFld3=-73;
    public static float fArrFld[][]=new float[N][N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.266F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i5, double d) {

        int i6=12, i7=6230, i8=11314, iArr[]=new int[N];
        double d1=6.100253;
        float f=-60.2F;

        FuzzerUtils.init(iArr, -46);

        Test.iFld1 += (int)Test.instanceCount;
        iArr[(Test.iFld1 >>> 1) % N] = Test.iFld1;
        i6 = 1;
        while (++i6 < 178) {
            i5 = i6;
            i7 = 1;
            do {
                Test.instanceCount += i7;
                Test.iFld1 *= Test.iFld1;
                Test.fArrFld[i7 + 1][i6 - 1] += i5;
                switch (((i7 >>> 1) % 4) + 35) {
                case 35:
                    switch ((((i6 >>> 1) % 1) * 5) + 123) {
                    case 128:
                        for (d1 = 1; d1 < 1; ++d1) {
                            d -= -11L;
                            i8 = (int)f;
                            Test.iFld1 = (int)Test.instanceCount;
                            Test.iFld1 &= i5;
                        }
                    default:
                        i5 |= Test.iFld1;
                    }
                    break;
                case 36:
                    iArr[i6 - 1] *= (int)Test.instanceCount;
                    break;
                case 37:
                    i5 = (int)Test.instanceCount;
                case 38:
                    Test.instanceCount = i5;
                default:
                    Test.instanceCount |= -187;
                }
            } while (++i7 < 9);
        }
        long meth_res = i5 + Double.doubleToLongBits(d) + i6 + i7 + Double.doubleToLongBits(d1) + i8 +
            Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l2) {

        int i3=0, i4=776, i9=-59192, i10=8, i11=-12, i12=-1, i13=7, iArr1[]=new int[N];
        double d2=117.30967, d3=-65.18024;
        float f1=84.555F;

        FuzzerUtils.init(iArr1, -237);

        Test.iFld1 |= (int)l2;
        for (i3 = 7; i3 < 216; i3++) {
            Test.instanceCount &= Integer.reverseBytes((int)((i4 * Test.iFld1) % 14L));
            Test.iFld1 += (int)(((l2--) - (l2 + Test.iFld1)) / ((-iMeth1(Test.iFld1, d2)) | 1));
            Test.instanceCount = 13L;
            for (i9 = 1; i9 < 8; i9++) {
                Test.sFld += (short)(i9 - f1);
                i4 *= 37482;
            }
        }
        for (i11 = 6; 125 > i11; i11++) {
            i4 -= Test.iFld1;
            f1 += (i11 * i11);
            d3 = 1;
            while (++d3 < 13) {
                i13 = 1;
                while (++i13 < 1) {
                    i10 += (int)f1;
                    iArr1[i11] <<= (int)l2;
                }
            }
        }
        vMeth_check_sum += l2 + i3 + i4 + Double.doubleToLongBits(d2) + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12
            + Double.doubleToLongBits(d3) + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public int iMeth(long l, long l1) {

        int i14=-45, i15=64, i16=6, i17=-20101, i18=167, i19=201;
        double d4=-20.81193;

        iFld *= iFld;
        vMeth(l1);
        for (i14 = 217; i14 > 2; --i14) {
            for (i16 = 1; 7 > i16; i16++) {
                iArrFld = iArrFld;
                l <<= i14;
                for (i18 = 1; i18 < 2; i18 += 3) {
                    iFld = (int)l;
                    l = l1;
                    i17 = 35021;
                    Test.sFld = (short)13;
                }
                Test.iFld1 += (((i16 * l1) + i15) - iFld2);
                i15 = (int)48413L;
                l = iFld2;
                i17 += (int)d4;
            }
        }
        long meth_res = l + l1 + i14 + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(d4);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=53111, i1=-2058, i2=9, i20=131, i21=128, i22=-1, i23=232, i24=2, i25=-173, i26=2, i27=13;
        double d5=-85.120308;
        float f2=2.284F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i = 3; i < 168; i += 2) {
            i2 = 1;
            while (++i2 < 305) {
                i1 = (iMeth(Test.instanceCount, Test.instanceCount) * -91);
                Test.sFld = (short)i;
                if (bFld) break;
            }
        }
        i1 = i1;
        bArr[(iFld >>> 1) % N] = bFld;
        Test.iFld1 >>= iFld;
        i20 = 1;
        do {
            for (i21 = 9; i21 < 169; ++i21) {
                Test.instanceCount >>= Test.iFld1;
                d5 += f2;
                switch ((i21 % 2) + 115) {
                case 115:
                    iFld = iFld2;
                case 116:
                    for (i23 = 1; i23 < 2; i23 += 2) {
                        iFld2 <<= i24;
                        i24 *= (int)131L;
                        i1 += i23;
                    }
                    i22 = i20;
                    iArrFld[i21] >>= i21;
                    break;
                }
                for (i25 = 1; 2 > i25; i25++) {
                    Test.instanceCount *= (long)d5;
                    i26 *= (int)Test.instanceCount;
                    iFld <<= i22;
                    iFld = i26;
                    i24 = iFld;
                    i1 = i26;
                    i24 = (int)-2486432127L;
                    Test.iFld1 *= Test.iFld3;
                    i27 = -156;
                }
            }
        } while (++i20 < 148);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
