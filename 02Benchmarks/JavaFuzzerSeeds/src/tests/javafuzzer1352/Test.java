package tests.javafuzzer1352;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:38:26 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7694883781207759966L;
    public volatile long lFld=-186L;
    public int iFld=207;
    public static byte byFld=115;
    public double dFld=0.45745;
    public static float fFld=1.55F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-190, i4=-233;

        for (i3 = 6; 205 > i3; ++i3) {
            i4 += i3;
        }
        i4 = i3;
        vMeth1_check_sum += i3 + i4;
    }

    public static void vMeth() {

        int i5=7, i6=26806, i7=-9, i8=12, iArr[]=new int[N];
        long l=-53575L, l1=75L;
        double d=-28.105080;

        FuzzerUtils.init(iArr, 36944);

        vMeth1();
        i5 = i5;
        for (l = 7; l < 171; l += 3) {
            l1 = 1;
            while (++l1 < 28) {
                i5 *= (int)l1;
                Test.instanceCount *= i6;
                for (i7 = 1; i7 < 1; ++i7) {
                    switch ((int)((l1 % 1) + 78)) {
                    case 78:
                        i5 -= i7;
                        i5 <<= i6;
                        break;
                    }
                    i8 = (int)l1;
                    d += 215L;
                    i8 *= (int)-46097L;
                    i8 = (int)d;
                    iArr = iArr;
                }
            }
        }
        vMeth_check_sum += i5 + l + i6 + l1 + i7 + i8 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
    }

    public long lMeth(int i, int i1, int i2) {

        int i9=7, i10=0, i11=6, i12=23171, i13=1;
        short sArr[]=new short[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(sArr, (short)16934);
        FuzzerUtils.init(dArr, 2.34763);

        vMeth();
        i9 = 1;
        do {
            for (i10 = i9; i10 < 14; i10++) {
                sArr[i9] &= (short)lFld;
                lFld = i1;
                Test.iArrFld[i10] <<= i1;
                i += (((i10 * i11) + i) - i);
                i2 += i10;
                i += (int)lFld;
                dArr[i9] += i9;
                switch ((((i10 >>> 1) % 1) * 5) + 73) {
                case 76:
                    for (i12 = i9; i12 < 1; i12++) {
                        Test.instanceCount = i9;
                        i1 = i1;
                        i13 += i13;
                    }
                default:
                    i2 = i2;
                }
            }
        } while ((i9 += 2) < 227);
        long meth_res = i + i1 + i2 + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=-3, i15=-59985, i16=164, i18=45800, i19=197, i20=8, i21=58955;
        short s=-28580;

        lMeth(31678, iFld, iFld);
        Test.instanceCount = iFld;
        i14 = 1;
        do {
            s = Test.byFld;
            dFld = i14;
            Test.fFld += 53;
            iFld *= (int)Test.fFld;
        } while (++i14 < 300);
        i15 = 1;
        while (++i15 < 189) {
            iFld += (27885 + (i15 * i15));
            iFld += 28221;
            s *= (short)i15;
            iFld = i14;
            iFld = iFld;
        }
        i16 = 356;
        do {
            Test.instanceCount -= i15;
            Test.iArrFld[i16 - 1] += -17819;
            iFld -= i14;
        } while (--i16 > 0);
        iFld = (int)lFld;
        for (int i17 : Test.iArrFld) {
            i17 = (int)1.69564;
            for (i18 = 1; i18 < 63; i18++) {
                try {
                    i17 = (-236 / i16);
                    i17 = (Test.iArrFld[i18 - 1] % i15);
                    Test.iArrFld[i18] = (32416 / i16);
                } catch (ArithmeticException a_e) {}
                switch (((i18 % 2) * 5) + 21) {
                case 29:
                    for (i20 = 2; i20 > i18; --i20) {
                        i19 &= i16;
                        Test.fFld *= 1.620F;
                        Test.instanceCount >>= i17;
                        lFld -= (long)-2.48F;
                        i21 = i19;
                        i21 += i20;
                    }
                    break;
                case 25:
                    Test.instanceCount *= (long)Test.fFld;
                    break;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
