package tests.javafuzzer518;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:04:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=0;
    public float fFld=0.140F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f, int i3, boolean b1) {

        int i4=132, i5=-6, i6=-14, i7=-11, i8=9, i9=29676, i10=-22080, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 17006);

        i3 = 23713;
        i3 = (int)Test.instanceCount;
        i4 = 1;
        while (++i4 < 362) {
            iArr = iArr;
            for (i5 = 1; i5 < 5; ++i5) {
                for (i7 = 1; i7 < 2; ++i7) {
                    i8 += i7;
                    i8 += (i7 | i4);
                    i8 *= (int)Test.instanceCount;
                    i8 += (int)f;
                    i6 = i8;
                }
                for (i9 = 2; i9 > i5; i9 -= 3) {
                    i3 += (i9 * i9);
                    iArr[i5 - 1] = i8;
                    i6 += (i9 | i9);
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i3 + (b1 ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i2=-176, i11=0, i12=6, i13=14, i14=18034, iArr1[]=new int[N];
        double d=93.82771;
        float f1=59.562F;
        boolean b2=false;

        FuzzerUtils.init(iArr1, 85);

        i2 = (int)d;
        i2 = iMeth(f1, i2, b2);
        i2 -= (int)Test.instanceCount;
        i2 = i2;
        i2 -= i2;
        i2 ^= i2;
        for (i11 = 12; i11 < 209; i11++) {
            for (i13 = 1; i13 < 8; ++i13) {
                if (b2) {
                    Test.instanceCount -= 12524;
                    iArr1[i11 - 1] = (int)1.964F;
                    iArr1[i13 - 1] >>>= (int)4953L;
                    vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + (b2 ? 1 : 0) + i11
                        + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr1);
                    return;
                } else {
                    i12 += i14;
                    i14 = i12;
                    f1 += (i13 - i2);
                }
            }
        }
        vMeth1_check_sum += i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + (b2 ? 1 : 0) + i11 + i12 + i13
            + i14 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(boolean b, int i1) {

        int i15=-225, i16=33144, i17=-27768, i18=247, i19=-211, i20=-175, iArr2[][]=new int[N][N];
        float f2=0.521F;
        double d1=2.24975;
        byte by=-60, byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-57);
        FuzzerUtils.init(iArr2, -28869);

        vMeth1();
        byArr[(i1 >>> 1) % N][(Test.iFld >>> 1) % N] += (byte)Test.iFld;
        for (i15 = 8; i15 < 215; ++i15) {
            for (i17 = 1; i17 < 8; i17++) {
                Test.iFld += (int)Test.instanceCount;
                f2 -= Test.instanceCount;
                Test.iFld = i15;
                Test.iFld -= (int)19665L;
                if (b) continue;
                d1 += f2;
                for (i19 = i17; i19 < 2; i19++) {
                    iArr2 = iArr2;
                    iArr2[i19 + 1][i15] += 53969;
                }
                Test.iFld = i20;
                Test.instanceCount += by;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i1 + i15 + i16 + i17 + i18 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + i19 + i20 + by + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-9;
        boolean b3=false;
        double d2=0.39987;

        i = 1;
        while (++i < 213) {
            vMeth(b3, i);
            fFld *= i;
            Test.instanceCount += 17754;
            Test.iFld += -1;
            Test.instanceCount = (long)d2;
            Test.instanceCount += Test.iFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
