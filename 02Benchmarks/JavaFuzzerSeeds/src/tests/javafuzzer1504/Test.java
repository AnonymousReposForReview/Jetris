package tests.javafuzzer1504;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:41:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=184L;
    public double dFld=2.24948;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 7);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, int i6) {

        long l1=734540127L, lArr[]=new long[N];
        int i7=-2287, i8=845, i9=8, i10=-143;
        float f1=57.635F;
        boolean b=false;

        FuzzerUtils.init(lArr, 3176L);

        for (l1 = 279; 16 < l1; --l1) {
            i7 = i6;
            i5 *= 22205;
            i6 = (int)l1;
            lArr[(int)(l1 + 1)] = i6;
            i6 += (int)(l1 * l1);
        }
        Test.instanceCount -= i5;
        for (i8 = 8; i8 < 305; i8++) {
            i10 = 1;
            do {
                i7 -= (int)Test.instanceCount;
                f1 += (i10 + i8);
                i6 -= i5;
                i6 -= -37187;
                i6 += (i10 * i7);
            } while (++i10 < 6);
            b = b;
        }
        vMeth1_check_sum += i5 + i6 + l1 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i3, int i4) {

        int i11=-12, i12=0, i13=62485, i14=-3, i15=-222, iArr[]=new int[N];
        double d=2.67687, d1=66.62346;
        byte by=-100;

        FuzzerUtils.init(iArr, 139);

        vMeth1(26034, i3);
        i4 = i4;
        i3 = i3;
        for (i11 = 12; i11 < 228; i11 += 2) {
            for (d = 1; d < 14; d++) {
                i4 = 2760;
                d1 *= i12;
                for (i14 = i11; i14 < 2; ++i14) {
                    float f2=-2.120F;
                    f2 += (((i14 * by) + f2) - i4);
                    iArr[i14] = i11;
                    d1 = i13;
                    i4 += i14;
                    Test.instanceCount += i15;
                    d1 += Test.instanceCount;
                    iArr = iArr;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i11 + i12 + Double.doubleToLongBits(d) + i13 + Double.doubleToLongBits(d1) + i14 +
            i15 + by + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, int i2) {

        int i16=-8, i17=-6, i18=-63462;
        short s=17261;
        byte by1=-8;
        boolean b1=false;
        double d2=-72.99085;

        i2 = (--i2);
        vMeth(-227, i2);
        for (i16 = 12; i16 < 254; ++i16) {
            s = (short)Test.instanceCount;
            i17 += (int)1.40899;
            Test.iArrFld[i16] = i16;
            if (true) {
                i18 = 1;
                do {
                    Test.iArrFld[i18 + 1] *= i2;
                    by1 += (byte)(i18 - l);
                    i17 -= i2;
                    if (b1) continue;
                } while (++i18 < 7);
                d2 %= (i17 | 1);
            }
            by1 += (byte)(-14 + (i16 * i16));
            s -= (short)i16;
        }
        long meth_res = l + i2 + i16 + i17 + s + i18 + by1 + (b1 ? 1 : 0) + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=123, i19=2, i20=-8131, i21=26, i22=-145, i23=175, i24=5, i25=-9, i26=-156, i27=-8, i28=-172,
            i29=17502, i30=-31009;
        float f=102.644F;
        byte by2=-29;
        long l2=34L;
        boolean b2=true;

        i = 1;
        do {
            Test.instanceCount -= (long)((f++) * ((i1--) * (i1++)));
            iMeth(-9206794547384241910L, i1);
            i1 -= by2;
            f -= l2;
        } while (++i < 157);
        for (i19 = 20; 354 > i19; i19++) {
            l2 += (((i19 * i1) + i) - i19);
            i1 += i;
            by2 <<= (byte)i1;
            for (i21 = 4; i21 < 75; i21++) {
                l2 -= (long)dFld;
                l2 += (((i21 * i19) + l2) - i19);
                i20 = -28;
                i22 -= i21;
                if (b2) {
                    i22 ^= i22;
                } else if (b2) {
                    i20 += i21;
                }
                if (b2) break;
                for (i23 = 1; i23 < 2; ++i23) {
                    if (b2) continue;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)0);
                }
                Test.iArrFld[i19 - 1] -= (int)l2;
                bArrFld[(i20 >>> 1) % N] = b2;
                for (i25 = 1; i25 < 2; ++i25) {
                    dFld -= f;
                }
            }
            try {
                i22 = (i21 % Test.iArrFld[i19 - 1]);
                i26 = (47119 % Test.iArrFld[i19]);
                i26 = (-1709556696 % i23);
            } catch (ArithmeticException a_e) {}
            for (i27 = i19; i27 < 75; i27++) {
                for (i29 = i27; i29 < 1; i29++) {
                    i30 -= i28;
                    Test.instanceCount *= l2;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
