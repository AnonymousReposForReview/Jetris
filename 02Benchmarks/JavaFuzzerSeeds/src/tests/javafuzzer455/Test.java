package tests.javafuzzer455;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:06:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-220L;
    public static float fFld=0.806F;
    public static volatile int iFld=65307;
    public static boolean bFld=false;
    public static int iFld1=1998;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 124.998F);
        FuzzerUtils.init(Test.iArrFld, -64275);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i6, float f1) {

        int i7=-129, i8=-184, i9=2076, i10=142, i11=0, i12=61409, iArr1[]=new int[N];
        byte by=-52;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 33020);
        FuzzerUtils.init(lArr, -8032L);

        Test.instanceCount += i6;
        for (i7 = 12; i7 < 199; ++i7) {
            i8 *= i7;
            i8 -= by;
            if (b) continue;
            iArr1[i7] += i7;
            for (i9 = 9; i9 > 1; i9--) {
                i8 = 0;
                f1 += i8;
                f1 = f1;
                for (i11 = 1; i11 < 2; i11++) {
                    lArr[i7 - 1] = 3411;
                    i8 += (int)1.123030;
                    if (b) continue;
                    i10 <<= i9;
                }
            }
        }
        vMeth2_check_sum += l1 + i6 + Float.floatToIntBits(f1) + i7 + i8 + by + (b ? 1 : 0) + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i4, long l) {

        int i5=15670, i13=-11, i14=-39627, i15=7, i16=0, i17=202, i18=-3375, i19=45217, iArr2[]=new int[N];
        byte by1=110;

        FuzzerUtils.init(iArr2, 13276);

        i5 = 1;
        do {
            vMeth2(3167188823385648369L, i5, Test.fFld);
            Test.instanceCount = -59847L;
            iArr2[i5 + 1] = (int)Test.instanceCount;
            l = l;
            for (i13 = 1; i13 < 5; i13++) {
                for (i15 = 1; i15 < 2; i15++) {
                    Test.instanceCount += i15;
                }
                i4 += i15;
                switch (((i14 >>> 1) % 6) + 106) {
                case 106:
                    for (i17 = i5; i17 < 2; ++i17) {
                        i18 = (int)-113.116701;
                        Test.iFld = -31750;
                        if (Test.bFld) continue;
                        by1 = (byte)144L;
                    }
                    break;
                case 107:
                    iArr2 = iArr2;
                    break;
                case 108:
                    l -= Test.iFld;
                    break;
                case 109:
                    i18 -= i15;
                    break;
                case 110:
                    i4 = i18;
                    break;
                case 111:
                    Test.fArrFld[i5] += i13;
                default:
                    try {
                        i19 = (i13 / Test.iFld);
                        i16 = (iArr2[i5 + 1] % iArr2[i13 - 1]);
                        iArr2[i5] = (745671296 % i19);
                    } catch (ArithmeticException a_e) {}
                }
            }
        } while (++i5 < 302);
        vMeth1_check_sum += i4 + l + i5 + i13 + i14 + i15 + i16 + i17 + i18 + by1 + i19 + FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth(double d, int i) {

        int i1=-231, i2=34493, i3=-65, i20=32974, i21=109, i22=-62970, iArr[]=new int[N];
        long l2=-5411460069329007890L;

        FuzzerUtils.init(iArr, 195);

        i1 = 1;
        while (++i1 < 155) {
            float f=120.192F;
            for (i2 = 1; i2 < 10; ++i2) {
                i *= (i--);
                try {
                    i3 = (i % 45592);
                    i3 = (84 % i3);
                    iArr[i1] = (i3 / iArr[i1 - 1]);
                } catch (ArithmeticException a_e) {}
            }
            f += (((i1 * i1) + i2) - i3);
            vMeth1(i, 1073479746L);
            for (l2 = 1; l2 < 10; l2++) {
                Test.iFld += (int)Test.instanceCount;
            }
            i20 -= 28606;
            for (i21 = 1; i21 < 10; ++i21) {
                iArr[i1 + 1] = i;
                i22 += Test.iFld1;
                i20 = (int)d;
                Test.instanceCount += (i21 ^ Test.iFld1);
                if (Test.iFld != 0) {
                    vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i3 + l2 + i20 + i21 + i22 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i1 + i2 + i3 + l2 + i20 + i21 + i22 +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        double d1=-19.1046, d2=2.103091;
        int i23=-9, i24=-3, i25=-7, i26=107, i27=40655, i28=0, iArr3[]=new int[N];
        float f2=66.788F;
        long l3=14L, lArr1[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr3, -73);
        FuzzerUtils.init(lArr1, 5L);

        vMeth(d1, Test.iFld1);
        for (d2 = 21; d2 < 350; d2 += 2) {
            Test.instanceCount = Test.iFld1;
            i24 = 1;
            while (++i24 < 153) {
                Test.fFld = Test.iFld1;
                Test.iArrFld[i24] = (int)-1109058449316346003L;
                i23 = i24;
                i23 = i24;
                for (f2 = 1; f2 < 1; ++f2) {
                    if (Test.bFld) break;
                    Test.bFld = Test.bFld;
                    i25 >>= i25;
                    Test.iArrFld[(int)(d2)] = (int)d2;
                    Test.iArrFld[i24] = (int)Test.fFld;
                    Test.iArrFld[(int)(d2)] += Test.iFld;
                    bArr = bArr;
                    Test.iFld *= 5;
                    Test.iFld = i23;
                }
                i25 = i24;
            }
            iArr3[(int)(d2)] = 159;
            i26 = 1;
            while (++i26 < 153) {
                Test.bFld = Test.bFld;
                iArr3[(int)(d2 + 1)] += i24;
                lArr1 = lArr1;
                iArr3[i26] >>>= (int)Test.instanceCount;
                for (l3 = 1; 1 > l3; l3++) {
                    i27 = i27;
                    Test.fFld = i27;
                    Test.instanceCount = -127;
                    try {
                        i25 = (i24 / -50004);
                        Test.iFld1 = (i24 / Test.iFld1);
                        i23 = (i28 / Test.iFld);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
