package tests.javafuzzer1917;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:52:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5691L;
    public volatile int iFld=-51270;
    public static int iFld1=210;
    public static boolean bFld=true;
    public static double dFld=2.130349;
    public static byte byFld=80;
    public int iFld2=61621;
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -7170017824133229486L);
        FuzzerUtils.init(Test.iArrFld, 248);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        float f2=2.295F;
        int i4=-2776, i5=-13, i6=-3, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3L);
        FuzzerUtils.init(iArr1, -4);

        Test.instanceCount *= Test.iFld1;
        for (f2 = 7; f2 < 161; ++f2) {
            if (Test.bFld) continue;
            i3 = i4;
            Test.instanceCount = Test.instanceCount;
            lArr[(int)(f2)] = i3;
            i3 = i4;
            iArr1[(int)(f2 + 1)] -= (int)1.411F;
            i4 &= (int)Test.instanceCount;
            if (Test.bFld) {
                i4 &= i4;
            } else {
                if (Test.bFld) {
                    for (i5 = 1; i5 < 10; i5++) {
                        Test.iFld1 += (i5 * i5);
                        Test.dFld = i6;
                    }
                }
            }
        }
        vMeth1_check_sum += i3 + Float.floatToIntBits(f2) + i4 + i5 + i6 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        float f=-56.479F, f1=1.419F;
        int i2=10334, i7=-212, i8=199, i9=-46025, i10=82, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, -2);

        Test.iFld1 = iArr[(Test.iFld1 >>> 1) % N][(Test.iFld1 >>> 1) % N];
        for (f = 172; f > 1; f--) {
            i2 *= (int)(-(f1 *= (iArr[(int)(f + 1)][(int)(f - 1)] -= Test.iFld1)));
            vMeth1(-208);
            iArr[(int)(f)][(int)(f + 1)] = (int)Test.dFld;
            Test.iFld1 = 21102;
            for (i7 = 1; i7 < 9; ++i7) {
                if (true) break;
                Test.iFld1 -= (int)f1;
                switch ((((i7 >>> 1) % 6) * 5) + 61) {
                case 69:
                    if (Test.bFld) break;
                    for (i9 = 1; i9 < 2; ++i9) {
                        Test.instanceCount += i7;
                        Test.iFld1 -= -10;
                        i10 -= (int)Test.instanceCount;
                    }
                    break;
                case 75:
                    Test.lArrFld[(int)(f)] >>= i7;
                case 64:
                case 87:
                    f1 += (i7 + Test.instanceCount);
                    break;
                case 80:
                    Test.lArrFld[(int)(f)] = 39296;
                    break;
                case 62:
                    Test.dFld = Test.byFld;
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=3, i1=-5, i11=-70, i12=-7, i13=-24779, i14=7, i15=-14, i16=-5, i17=-45630, iArr2[]=new int[N];
        float f3=2.831F;
        long l=-3833259159784700997L;

        FuzzerUtils.init(iArr2, 6);

        for (i = 6; 151 > i; ++i) {
            i1 >>= iMeth();
            Test.iFld1 -= Test.iFld1;
            for (i11 = 11; i11 > 1; i11 -= 2) {
                Test.instanceCount = i11;
                Test.iFld1 = i1;
            }
            i13 = 1;
            do {
                for (i14 = 1; i14 < 1; i14 += 2) {
                    Test.instanceCount = 11L;
                    i12 >>= 144;
                }
                i12 <<= (int)-1072505948124488289L;
            } while (++i13 < 11);
            try {
                i1 = (-183 / i);
                iArr2[i - 1] = (12829 % i1);
                i12 = (i12 % Test.iFld1);
            } catch (ArithmeticException a_e) {}
        }
        for (i16 = 17; i16 < 388; ++i16) {
            i12 = (int)Test.instanceCount;
            f3 -= l;
        }
        vMeth_check_sum += i + i1 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f3) + l +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i18=-76, i19=224, i20=-52, i21=88, i23=186, i24=-43418, iArr3[][]=new int[N][N];
        float f4=-59.742F, fArr[]=new float[N];
        short s=-10076;

        FuzzerUtils.init(iArr3, -7);
        FuzzerUtils.init(fArr, -108.51F);

        iFld = -11;
        vMeth();
        i18 = 1;
        do {
            Test.iFld1 = iFld;
            for (i19 = 1; i19 < 76; ++i19) {
                i20 *= i20;
                Test.instanceCount = i20;
            }
            i21 = 1;
            do {
                int i22=42;
                Test.iArrFld = iArr3[i18 - 1];
                Test.iFld1 >>>= iFld;
                fArr[i18 - 1] = i22;
                switch ((((i20 >>> 1) % 1) * 5) + 93) {
                case 94:
                    for (i23 = i18; 1 > i23; ++i23) {
                        if (false) {
                            i20 += (((i23 * i20) + i22) - iFld);
                            i24 += (int)(-12L + (i23 * i23));
                            Test.lArrFld[i21 - 1] = i20;
                        } else if (Test.bFld) {
                            i24 += (int)(171L + (i23 * i23));
                            Test.instanceCount += (i23 | Test.instanceCount);
                            Test.dFld = Test.instanceCount;
                        } else if (false) {
                            i20 = -41354;
                            Test.bFld = Test.bFld;
                            if (Test.bFld) break;
                            Test.instanceCount *= Test.byFld;
                        }
                        f4 = s;
                        iFld2 = (int)104.178F;
                        i20 = i24;
                        if (Test.bFld) continue;
                        Test.instanceCount &= i22;
                        if (Test.bFld) continue;
                    }
                }
            } while (++i21 < 76);
        } while (++i18 < 332);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
