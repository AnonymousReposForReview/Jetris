package tests.javafuzzer1736;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:43:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8433942463377611787L;
    public static boolean bFld=true;
    public byte byFld=54;
    public static float fFld=2.1006F;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 26L);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i5=0, i6=-63825, i7=-48852, i8=-8, i9=-14, i10=-13, i11=91, i12=39892;
        float f=59.681F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i5 = 2; i5 < 157; ++i5) {
            f -= Test.instanceCount;
            for (i7 = i5; i7 < 10; ++i7) {
                bArr[i5 + 1] = Test.bFld;
                Test.instanceCount %= (Test.instanceCount | 1);
                i6 += i8;
                i8 = i6;
                for (i9 = 1; i9 < 1; ++i9) {
                    Test.lArrFld[i9] *= Test.instanceCount;
                }
            }
            i8 >>= i9;
            i6 += i5;
            for (i11 = i5; 10 > i11; ++i11) {
                i12 += (i11 * Test.instanceCount);
                i8 = i12;
                if (false) continue;
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(bArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static byte byMeth(int i2) {

        int i3=38, i4=11, i13=-46155, i14=-12;
        float f1=1.919F;

        i2 <<= i2;
        i2 &= i2;
        for (i3 = 3; i3 < 217; i3++) {
            if (Test.bFld) continue;
            Test.instanceCount += (((i3 * i4) + i3) - i2);
            switch ((i3 % 1) + 71) {
            case 71:
                lMeth();
                for (i13 = 1; 8 > i13; ++i13) {
                    i4 += i4;
                    if (Test.bFld) continue;
                    i4 <<= i2;
                    i4 >>= i4;
                    f1 += i13;
                    i14 ^= i3;
                }
            default:
                Test.instanceCount -= (long)f1;
            }
        }
        long meth_res = i2 + i3 + i4 + i13 + i14 + Float.floatToIntBits(f1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 15351);

        i1 <<= (int)(((i1 - Test.instanceCount) * i1) - iArr[(-12 >>> 1) % N]);
        byMeth(i1);
        vMeth_check_sum += i + i1 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-47821, i16=-13, i17=42316, i18=-9, i19=154, i20=-23727, i21=-220, i22=-48799;
        short s=27153;
        float f2=1.59F;
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(bArr1, true);

        vMeth(64386, i15);
        i15 += i15;
        Test.lArrFld[(i15 >>> 1) % N] = (long)95.826F;
        for (i16 = 289; i16 > 6; i16 -= 2) {
            Test.instanceCount = i16;
            i18 = 1;
            do {
                byFld *= (byte)i16;
                i15 += i15;
                i17 *= i15;
                i15 += (i18 * i18);
                for (i19 = 1; i19 > i18; --i19) {
                    s += (short)69.74826;
                    i20 -= i18;
                    i20 += (i19 * i19);
                    Test.bFld = Test.bFld;
                    bArr1[i19 + 1] = Test.bFld;
                    Test.fFld -= 129;
                }
                i20 += (i18 ^ Test.instanceCount);
                for (i21 = 1; i21 < 1; i21++) {
                    i20 += (i21 * i21);
                    i22 += i19;
                    switch ((i21 % 5) + 12) {
                    case 12:
                        Test.fFld += -2;
                        i15 *= i18;
                    case 13:
                        i15 = i19;
                        f2 += Test.instanceCount;
                        i20 -= i20;
                        i15 += (i21 + Test.instanceCount);
                    case 14:
                        i17 += (i21 | i15);
                        f2 += i16;
                        break;
                    case 15:
                        i22 *= (int)Test.fFld;
                        break;
                    case 16:
                    default:
                        i17 &= 48253;
                    }
                }
            } while (++i18 < 178);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
