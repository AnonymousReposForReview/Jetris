package tests.javafuzzer1762;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:07:20 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-51998L;
    public static float fFld=-34.587F;
    public boolean bFld=true;
    public static int iFld=203;
    public static byte byFld=96;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 54974);
        FuzzerUtils.init(Test.lArrFld, 157L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i2=13, i3=-41672, i4=-11, i5=-21055, i6=49168;
        float f=-2.147F;
        short s=4338;
        boolean b=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-118);

        for (i2 = 4; i2 < 299; i2 += 3) {
            for (i4 = 1; i4 < 16; ++i4) {
                Test.iArrFld[i2] = (int)Test.instanceCount;
                byArr[i4 + 1] *= (byte)Test.instanceCount;
                for (f = i4; f < 2; f++) {
                    Test.instanceCount += (long)f;
                    Test.instanceCount >>= Test.instanceCount;
                    if (b) {
                        Test.instanceCount = s;
                        Test.fFld += s;
                        Test.instanceCount -= -13;
                        i3 ^= i5;
                    } else if (b) {
                        Test.instanceCount += -150L;
                    } else if (b) {
                        i6 -= (int)Test.instanceCount;
                        if (b) break;
                    } else {
                        Test.instanceCount = i2;
                        vMeth1_check_sum += i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + s + (b ? 1 : 0) +
                            FuzzerUtils.checkSum(byArr);
                        return;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + s + (b ? 1 : 0) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(long l, int i, int i1) {


        vMeth1();
        vMeth_check_sum += l + i + i1;
    }

    public int iMeth(double d) {

        int i7=151, i8=180, i9=-5, i10=0, i11=-10, i12=-11387, i13=1, i14=5, i15=7;
        byte by=-19;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4L);

        vMeth(Test.instanceCount, i7, i7);
        Test.fFld = 6402;
        for (i8 = 387; i8 > 19; i8--) {
            for (i10 = 1; 5 > i10; ++i10) {
                lArr[i8] += by;
                if (bFld) break;
                i11 *= 34487;
            }
        }
        for (i12 = 10; i12 < 190; ++i12) {
            if (bFld) {
                for (i14 = 1; 9 > i14; ++i14) {
                    i13 *= i8;
                }
                Test.instanceCount += (i12 - i12);
                if (bFld) {
                    by = (byte)Test.instanceCount;
                    if (bFld) continue;
                } else if (bFld) {
                    bFld = false;
                }
            } else {
                i9 *= (int)d;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + by + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=0, i17=7023, i18=-145, i19=-40433, i20=8, i21=6183, i22=10, i23=-133, i25=137;
        short s1=-1770;
        double d1=1.32532;

        iMeth(69.37841);
        for (i16 = 5; i16 < 143; i16++) {
            for (i18 = i16; i18 < 182; i18++) {
                if (bFld) break;
                Test.lArrFld[i16 + 1] += i17;
            }
            if (bFld) {
                for (i20 = 182; i20 > 8; i20 -= 3) {
                    for (i22 = 1; i22 < 4; ++i22) {
                        i23 += (i22 + Test.instanceCount);
                        Test.instanceCount *= i19;
                        Test.instanceCount = Test.iFld;
                        Test.iFld += (((i22 * i16) + i23) - s1);
                    }
                    i19 -= i17;
                    Test.byFld >>= (byte)i18;
                    Test.iArrFld[i16 + 1] >>= Test.iFld;
                    if (bFld) break;
                    i23 *= i17;
                    Test.instanceCount += (i20 + Test.iFld);
                    i19 = Test.iFld;
                }
                i17 >>= (int)-54139L;
            } else if (bFld) {
                Test.instanceCount += (((i16 * i16) + i17) - i22);
                Test.instanceCount = i22;
                for (d1 = 4; d1 < 182; ++d1) {
                    switch ((i16 % 1) + 62) {
                    case 62:
                        i21 -= i18;
                        i21 = i21;
                        Test.instanceCount += (-2 + (d1 * d1));
                        if (bFld) break;
                        break;
                    }
                }
            }
            Test.instanceCount *= i21;
            i21 += i16;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
