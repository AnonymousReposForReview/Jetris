package tests.javafuzzer1615;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:11:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=64306L;
    public short sFld=25136;
    public static float fFld=-1.261F;
    public static short sFld1=-29368;
    public long lArrFld[]=new long[N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld1, 3713105396L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2) {

        short s1=9378;
        int i9=-11, i10=53797, i11=0, i12=4, i13=170, i14=59930, i15=172, i16=-9, iArr2[]=new int[N];
        double d2=1.90644, d3=-2.70352;
        boolean b1=true;

        FuzzerUtils.init(iArr2, 1);

        s1 >>= (short)i9;
        d2 = Test.instanceCount;
        if (false) {
            for (i10 = 9; i10 < 215; i10++) {
                switch (((i10 % 2) * 5) + 69) {
                case 74:
                    Test.instanceCount += (i10 * i10);
                    i11 = -18981;
                    for (i12 = 1; i12 < 8; ++i12) {
                        i9 = i11;
                        for (d3 = 1; d3 < 2; d3 += 2) {
                            iArr2[(int)(d3)] += i13;
                        }
                        if (b1) break;
                    }
                    for (i15 = 1; 8 > i15; ++i15) {
                        i16 -= i9;
                        Test.instanceCount += (111L + (i15 * i15));
                    }
                    break;
                case 75:
                    f2 += (float)d2;
                    break;
                default:
                    d2 -= d2;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + s1 + i9 + Double.doubleToLongBits(d2) + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(d3) + i14 + (b1 ? 1 : 0) + i15 + i16 + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(boolean b, int i7, int i8) {

        long l2=-1833524220L;
        int i17=-3, iArr3[]=new int[N];
        double d4=0.11734;

        FuzzerUtils.init(iArr3, 48876);

        vMeth1(Test.fFld);
        iArr3[(i7 >>> 1) % N] *= -9;
        Test.instanceCount *= i7;
        for (l2 = 14; l2 < 274; ++l2) {
            try {
                i7 = (i8 % 175);
                i8 = (-46 / i8);
                iArr3[(int)(l2 - 1)] = (iArr3[(int)(l2)] % 141);
            } catch (ArithmeticException a_e) {}
            i8 -= 125;
            i17 -= (int)d4;
            Test.instanceCount = i7;
            Test.lArrFld1[(int)(l2 + 1)] = i7;
            if (b) {
                i7 += i7;
            } else if (b) {
                try {
                    i8 = (i7 / 215);
                    iArr3[(int)(l2 - 1)] = (232 % i17);
                    i8 = (i7 / i17);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += (203 + (l2 * l2));
                Test.instanceCount = Test.instanceCount;
            } else {
                Test.sFld1 = (short)i17;
            }
        }
        long meth_res = (b ? 1 : 0) + i7 + i8 + l2 + i17 + Double.doubleToLongBits(d4) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i3=-4, i4=-209, i5=34320, i6=61634, iArr1[]=new int[N];
        double d1=1.82876;
        short s=23800;
        boolean b2=false;
        byte by=100;

        FuzzerUtils.init(iArr1, -45);

        i3 = 1;
        do {
            for (i4 = 1; i4 < 4; ++i4) {
                for (d1 = 1; d1 < 2; d1++) {
                    i5 >>= i3;
                    i5 += (int)d1;
                    i6 -= (--i5);
                    i5 ^= ((i6 / ((iArr1[(int)(d1 + 1)] = i5) | 1)) + i3);
                    i6 = i4;
                    iArr1[i4 + 1] -= (s * (iMeth(b2, i4, -12) - i3));
                    i6 &= by;
                }
                i5 = (int)Test.instanceCount;
                by += (byte)d1;
                i6 *= 4;
                Test.fFld += i6;
            }
            by += (byte)(i3 | i5);
        } while (++i3 < 382);
        vMeth_check_sum += i3 + i4 + i5 + Double.doubleToLongBits(d1) + i6 + s + (b2 ? 1 : 0) + by +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=15797, i1=4, i2=211, iArr[]=new int[N];
        double d=-56.31494;
        float f=2.942F, f1=-2.203F;
        long l1=-3499276440L;
        boolean b3=false, bArr[][]=new boolean[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(byArr, (byte)-9);

        Test.instanceCount = (--i);
        for (long l : lArrFld) {
            for (i1 = 3; i1 < 63; ++i1) {
                i2 = (int)(((iArr[i1 + 1] <<= sFld) + i2) - d);
                i += i1;
                f += (((i1 * l) + l) - i1);
                l1 = 1;
                while (++l1 < 2) {
                    switch (((iArr[(int)(l1 + 1)] >>> 1) % 9) + 118) {
                    case 118:
                        i2 += (int)(((l1 * f1) + i2) - i2);
                        switch ((i1 % 2) + 48) {
                        case 48:
                            bArr[i1][i1] = (!(bArr[(int)(l1)][(int)(l1)] = (l1 <= -18305)));
                            i &= i;
                            i2 += (int)(l1 - i1);
                            break;
                        case 49:
                            i2 = (int)(((i1 - -1310354851L) - (i + i2)) + l);
                            i += (int)(((l1 * i) + Test.instanceCount) - i1);
                            iArr[i1 + 1] = (int)(((iArr[i1 + 1]--) * (i1 >>> l)) * ((i2 - i2) << (long)(-9 - (f -
                                i1))));
                            break;
                        }
                        vMeth();
                        i += (int)l1;
                        break;
                    case 119:
                        iArr[i1 - 1] += (int)1.29786;
                        i2 *= (int)5121L;
                        byArr[(int)(l1 - 1)] = (byte)i;
                        iArr[i1 + 1] >>= i;
                        break;
                    case 120:
                        i *= (int)Test.fFld;
                        l = -55369;
                        i = i1;
                        break;
                    case 121:
                        i2 = (int)l1;
                        break;
                    case 122:
                        i2 = 11;
                        break;
                    case 123:
                        bArr[(int)(l1)][(int)(l1 - 1)] = b3;
                    case 124:
                        Test.instanceCount += l1;
                        Test.instanceCount += (((l1 * i) + l) - i);
                        break;
                    case 125:
                        i2 <<= -28911;
                        break;
                    case 126:
                        f1 = l1;
                        break;
                    default:
                        try {
                            i2 = (iArr[i1 - 1] / i1);
                            i = (i1 / i2);
                            iArr[i1] = (iArr[i1] / i);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
