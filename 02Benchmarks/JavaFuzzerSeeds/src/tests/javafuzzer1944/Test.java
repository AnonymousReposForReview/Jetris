package tests.javafuzzer1944;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:19:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static int iFld=218;
    public static double dFld=75.92810;
    public static float fFld=0.288F;
    public volatile double dFld1=84.52067;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 38483);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i2, int i3) {

        int i4=4, i5=44345, i6=-6, i7=-26647;
        float f1=-43.566F;
        boolean b=false;

        Test.instanceCount = -14L;
        Test.instanceCount -= i2;
        Test.iFld = Test.iFld;
        for (i4 = 304; i4 > 6; i4 -= 2) {
            try {
                Test.iArrFld[i4 - 1] = (Test.iArrFld[i4 - 1] % Test.iArrFld[i4 + 1]);
                i2 = (138 % Test.iArrFld[i4 - 1]);
                i2 = (18240 % i5);
            } catch (ArithmeticException a_e) {}
            Test.iFld += (((i4 * i3) + Test.instanceCount) - i4);
            Test.iFld = 116;
            Test.dFld = -234;
            Test.iFld += (((i4 * i6) + i5) - f);
            Test.iArrFld[i4 + 1] >>= (int)-2717696486460561527L;
            for (f1 = 1; f1 < 11; f1++) {
                Test.instanceCount = 23136;
                if (false) {
                    i2 += (int)(f1 * f1);
                    Test.instanceCount = 5648263505010561662L;
                } else if (b) {
                    Test.iArrFld[i4 - 1] = Test.iFld;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + i7 + (b ? 1 :
            0);
    }

    public static void vMeth1() {

        float f2=-1.480F;

        Test.iArrFld[(Test.iFld >>> 1) % N] += (Test.iFld--);
        Test.iFld ^= (int)(75L << ((--Test.iArrFld[(Test.iFld >>> 1) % N]) * -15));
        vMeth2(f2, Test.iFld, Test.iFld);
        vMeth1_check_sum += Float.floatToIntBits(f2);
    }

    public static void vMeth() {

        byte by=-80;
        int i8=-230, i9=-11, i10=13;
        short s=-19585;

        vMeth1();
        Test.iFld = -52760;
        Test.dFld = Test.iFld;
        Test.iFld = by;
        for (i8 = 8; i8 < 129; ++i8) {
            boolean b1=true;
            Test.iFld += i8;
            Test.iArrFld[i8] -= Test.iFld;
            i10 = 1;
            do {
                Test.iArrFld[i10 + 1] = 96;
                Test.iFld += (i10 * i9);
                s &= (short)i9;
            } while (++i10 < 13);
            i9 >>= (int)Test.instanceCount;
            Test.iFld += i8;
            if (b1) continue;
        }
        i9 = i8;
        vMeth_check_sum += by + i8 + i9 + i10 + s;
    }

    public void mainTest(String[] strArr1) {

        int i=6691, i1=172, i11=0, i12=52127, i13=-148, i14=-230, i15=-9, i16=-9, i17=-61547, i18=-102, i19=11, i20=12;
        double d=-114.26175;
        float f3=2.610F, fArr[]=new float[N];
        boolean b2=true;
        byte by1=122;

        FuzzerUtils.init(fArr, -2.21F);

        for (i = 9; i < 148; ++i) {
            vMeth();
        }
        for (d = 2; d < 141; ++d) {
            i1 *= -68;
            Test.fFld += (float)(((d * Test.instanceCount) + Test.fFld) - Test.fFld);
            Test.iArrFld[(int)(d)] -= i1;
            Test.instanceCount %= (Test.iFld | 1);
        }
        for (i12 = 3; 322 > i12; ++i12) {
            i11 += i12;
            f3 = 1;
            while (++f3 < 79) {
                i14 = 1;
                while (++i14 < 1) {
                    bArrFld[(int)(f3 - 1)] = b2;
                }
                i1 += Test.iFld;
                i11 >>>= i1;
            }
            i13 *= Test.iFld;
            fArr = fArr;
        }
        for (i15 = 8; i15 < 161; i15++) {
            for (i17 = 6; i17 < 164; ++i17) {
                for (i19 = 1; i19 < 2; i19++) {
                    Test.fFld += (-4267L + (i19 * i19));
                    i20 = (int)Test.instanceCount;
                }
                i16 = i1;
                if (b2) continue;
                Test.iFld -= by1;
                if (b2) continue;
            }
            i18 -= i19;
            i20 += (((i15 * Test.instanceCount) + Test.iFld) - i12);
            Test.iArrFld[i15] += i11;
            Test.dFld += dFld1;
            Test.fFld += 149;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
