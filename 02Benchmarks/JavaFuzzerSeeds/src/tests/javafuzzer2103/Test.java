package tests.javafuzzer2103;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:08:03 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2718102870L;
    public long lFld=15298L;
    public double dFld=-1.3294;
    public volatile byte byFld=-5;
    public short sFld=-30604;
    public static volatile double dArrFld[]=new double[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 2.46359);
        FuzzerUtils.init(Test.sArrFld, (short)-31284);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-130, i7=6, i8=13596, i9=11, i10=-37593, i11=-12937, iArr[]=new int[N], iArr1[][]=new int[N][N];
        float f=-13.975F, f1=-2.73F;
        double d1=-1.58779;
        boolean b=false;

        FuzzerUtils.init(iArr, 171);
        FuzzerUtils.init(iArr1, -1);

        i6 = i6;
        for (f = 22; f < 365; f++) {
            i8 = 1;
            while (++i8 < 5) {
                i7 += (i8 + i6);
            }
            for (i9 = 1; 5 > i9; i9++) {
                i6 += i9;
            }
            i11 = 5;
            while (--i11 > 0) {
                if (b) {
                    Test.dArrFld[(int)(f + 1)] = i9;
                    i7 = i9;
                } else if (b) {
                    switch (((i6 >>> 1) % 5) + 62) {
                    case 62:
                        f1 += i9;
                        d1 *= i9;
                        iArr[(int)(f + 1)] = (int)843263732L;
                    case 63:
                        iArr1[i11 + 1][(int)(f - 1)] += -185;
                    case 64:
                        f1 -= (float)d1;
                        break;
                    case 65:
                        try {
                            i6 = (38252 / i6);
                            i10 = (i8 / -82);
                            i6 = (i11 / 214);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 66:
                        i6 *= 157;
                        break;
                    default:
                        d1 += i10;
                    }
                } else {
                    Test.instanceCount *= (long)d1;
                }
            }
        }
        vMeth1_check_sum += i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i3, long l, double d) {

        int i4=97, i5=10, i12=0, i13=44270, i14=-48303, i15=-187, iArr2[]=new int[N];
        short s=-18719;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-113);
        FuzzerUtils.init(iArr2, 12);

        for (i4 = 9; i4 < 325; i4++) {
            byArr[i4 - 1] &= (byte)(Math.abs(Math.abs(i3)) * (-(++i3)));
        }
        vMeth1();
        for (i12 = 8; 175 > i12; ++i12) {
            Test.sArrFld[i12 + 1] = (short)l;
            Test.instanceCount ^= i5;
            s = (short)12L;
            for (i14 = 1; 9 > i14; i14++) {
                i5 *= i5;
                Test.instanceCount += (i14 - i4);
            }
            l = i3;
            i5 <<= i13;
            iArr2[i12 + 1] = (int)77.129327;
            iArr2[i12 + 1] = i14;
            s >>= (short)l;
        }
        vMeth_check_sum += i3 + l + Double.doubleToLongBits(d) + i4 + i5 + i12 + i13 + s + i14 + i15 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(int i, int i1, int i2) {

        double d2=-55.65935;
        int i16=0, i17=-24, i18=-109, i19=11, i20=56757, i21=-6, iArr3[]=new int[N];
        boolean b1=true;
        float f2=2.721F;

        FuzzerUtils.init(iArr3, 0);

        vMeth(i, 19302L, d2);
        for (i16 = 13; i16 < 362; i16++) {
            for (i18 = 1; i18 < 5; i18++) {
                iArr3[(i >>> 1) % N] = (int)lFld;
                if (b1) break;
                lFld += (((i18 * i19) + i2) - i17);
                i17 = (int)-2.132F;
                i19 %= (int)(i1 | 1);
                lFld += (i18 + f2);
            }
            for (i20 = 1; i20 < 5; i20++) {
                i1 = (int)Test.instanceCount;
                i17 -= (int)f2;
            }
            i17 -= (int)d2;
            d2 = Test.instanceCount;
            b1 = b1;
        }
        long meth_res = i + i1 + i2 + Double.doubleToLongBits(d2) + i16 + i17 + i18 + i19 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f2) + i20 + i21 + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i22=27440, i23=5, i24=460, i25=-10, i26=-56511, i27=34218, i28=5757, i29=-34071, iArr4[]=new int[N];
        float f3=-1.764F, f4=0.887F, fArr[][]=new float[N][N];
        long l1=121L;
        boolean b2=false;
        double d3=10.48623;

        FuzzerUtils.init(iArr4, -52000);
        FuzzerUtils.init(fArr, 18.56F);

        iMeth(i22, i22, 0);
        dFld += 1L;
        for (i23 = 23; i23 < 378; i23++) {
            byFld *= (byte)i23;
            iArr4[i23 - 1] += (int)f3;
            iArr4[i23 - 1] -= 14;
            for (l1 = i23; l1 < 71; l1++) {
                lFld = i22;
            }
            b2 = b2;
            sFld = (short)18721;
            for (i26 = 1; i26 < 71; ++i26) {
                switch ((i26 % 2) + 99) {
                case 99:
                    fArr[i26 - 1][i26 + 1] *= lFld;
                    break;
                case 100:
                    for (f4 = 2; f4 > 1; f4--) {
                        lFld *= l1;
                        Test.dArrFld[i26] += f4;
                        lFld += Test.instanceCount;
                        i24 *= i24;
                        dFld -= dFld;
                        i25 -= i23;
                        i27 += (int)(((f4 * i27) + i22) - i22);
                    }
                    for (d3 = 1; d3 < 2; ++d3) {
                        switch ((int)(((d3 % 1) * 5) + 10)) {
                        case 14:
                            Test.instanceCount += l1;
                            f3 = (float)d3;
                            i24 += (int)((long)d3 | i23);
                        default:
                            f3 += (-4 + (d3 * d3));
                            i29 *= (int)f4;
                        }
                        i22 = i27;
                        i29 = (int)Test.instanceCount;
                    }
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
