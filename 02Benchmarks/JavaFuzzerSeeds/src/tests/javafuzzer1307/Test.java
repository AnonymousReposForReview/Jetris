package tests.javafuzzer1307;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:52:15 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=411407087L;
    public static int iFld=-49;
    public static byte byFld=122;
    public static int iFld1=242;
    public static double dFld=-2.76779;
    public float fFld=0.390F;
    public static volatile short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-11488);
        FuzzerUtils.init(Test.iArrFld, 0);
        FuzzerUtils.init(Test.lArrFld, 247L);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(float f, int i5) {

        int i6=-5, i7=-2, i8=1, i9=58, i10=25, i11=-31928, iArr[]=new int[N];
        double d1=0.84541;

        FuzzerUtils.init(iArr, 25259);

        for (i6 = 1; i6 < 312; ++i6) {
            for (i8 = 1; i8 < 5; i8++) {
                for (i10 = 1; 2 > i10; i10++) {
                    d1 *= i11;
                    i11 = i8;
                }
                i7 += (((i8 * Test.byFld) + i9) - i6);
                iArr[i6 - 1] *= i10;
                if (false) continue;
                iArr[i6 - 1] *= i5;
                i7 &= 88;
            }
            i9 *= (int)f;
            switch (((i6 % 4) * 5) + 35) {
            case 53:
                Test.iFld -= i6;
                i5 *= (int)Test.instanceCount;
                Test.iFld1 *= i8;
            case 37:
                i5 *= i10;
                break;
            case 42:
                Test.sArrFld[i6] >>>= (short)Test.instanceCount;
                break;
            case 36:
                Test.instanceCount += i6;
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static double dMeth(int i1, int i2, long l1) {

        int i3=-28, i4=-10791, i12=9696, i13=224, i14=-39111, i15=-3;
        double d=1.35733;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);

        for (i3 = 16; i3 < 282; ++i3) {
            i1 += ((++i2) - -221);
        }
        i4 *= (int)(((i2 + i2) * (d - i4)) - (Math.abs(l1) * (l1 - i4)));
        try {
            Test.iFld >>= (int)((-(l1 - d)) - ((47 * lMeth(-2.767F, i2)) * 10));
            Test.iFld1 = (int)d;
        }
        catch (UserDefinedExceptionTest exc2) {
            Test.iFld1 = i4;
            for (i12 = 14; i12 < 225; ++i12) {
                for (i14 = 1; i14 < 8; ++i14) {
                    Test.instanceCount += (-28354 + (i14 * i14));
                    lArr = FuzzerUtils.long1array(N, (long)5437L);
                    if (b) {
                        if (b) break;
                        Test.iFld1 -= i14;
                    } else {
                        Test.iArrFld[i14 - 1] *= i14;
                    }
                }
            }
        }
        catch (NullPointerException exc3) {
            Test.iFld1 += (int)7137927741969719573L;
        }
        long meth_res = i1 + i2 + l1 + i3 + i4 + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i, long l) {

        int i16=-213, i17=0, i18=-204, i19=199, i20=12;
        float f1=1.693F;
        short s=-11648;

        i *= (int)dMeth(i, i, Test.instanceCount);
        Test.lArrFld[(Test.iFld1 >>> 1) % N] = Test.iFld;
        for (i16 = 19; i16 < 308; ++i16) {
            Test.lArrFld[i16] <<= 3677;
            for (f1 = i16; f1 < 6; f1++) {
                for (i19 = 1; i19 < 1; i19 += 2) {
                    if (false) {
                        Test.dFld = s;
                        Test.lArrFld[i19 + 1] = i;
                        i = (int)3115941445296992843L;
                    } else {
                        i20 -= i;
                    }
                    Test.iFld1 = i20;
                    Test.lArrFld[i19 - 1] = i18;
                    Test.instanceCount *= i17;
                    i17 -= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + l + i16 + i17 + Float.floatToIntBits(f1) + i18 + i19 + i20 + s;
    }

    public void mainTest(String[] strArr1) {

        short s1=-7061;
        float f2=10.915F;
        int i21=3, i22=-40561, i23=-3, i24=187, i25=-39205, i26=24632, i27=29456, i28=-203, i29=-57505, i30=-30524,
            i31=-13442, i32=8, i33=3;
        boolean b1=false;

        vMeth(1, Test.instanceCount);
        fFld = Test.iFld;
        Test.iFld1 += Test.iFld;
        Test.iFld *= s1;
        f2 -= (float)Test.dFld;
        Test.iArrFld[(Test.iFld >>> 1) % N] = (int)-5762179104334184130L;
        for (i21 = 9; i21 < 263; i21++) {
            Test.iFld1 = (int)Test.instanceCount;
            i22 -= (int)f2;
            for (i23 = i21; i23 < 99; ++i23) {
                if (b1) continue;
                Test.iFld1 += (((i23 * i23) + Test.instanceCount) - f2);
                Test.iFld <<= i21;
            }
            i22 += (int)fFld;
            Test.instanceCount = i25;
        }
        switch ((((i22 >>> 1) % 4) * 5) + 33) {
        case 47:
            i22 -= (int)Test.dFld;
            i22 -= s1;
            for (i26 = 23; i26 < 392; i26++) {
                Test.instanceCount = i21;
                i22 = (int)Test.instanceCount;
                Test.iArrFld[i26] <<= Test.iFld1;
                Test.iFld1 += i26;
            }
            for (i28 = 8; 218 > i28; ++i28) {
                i29 -= (int)Test.instanceCount;
                for (i30 = 5; i30 < 120; ++i30) {
                    for (i32 = 2; i32 > 1; --i32) {
                        Test.instanceCount = i28;
                        i29 = (int)-1841290386L;
                        Test.iFld1 ^= -5;
                    }
                }
            }
            break;
        case 49:
            Test.byFld = (byte)-48.67210;
            break;
        case 37:
            i27 ^= (int)Test.instanceCount;
        case 35:
            i29 += (int)Test.instanceCount;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
