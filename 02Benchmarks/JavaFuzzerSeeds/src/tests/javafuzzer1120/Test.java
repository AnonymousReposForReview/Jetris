package tests.javafuzzer1120;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:43:21 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-8L;
    public int iFld=12;
    public static int iFld1=-127;

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vSmallMeth() {

        int i=20159;

        i -= (int)(-Test.instanceCount);
        vSmallMeth_check_sum += i;
    }

    public static long lMeth() {

        int i2=13, i3=-117, i4=-76, i5=2, i6=-11, i7=-48743, i8=170, i9=35861, i10=-12, i11=12, i12=-173, i13=-34,
            i14=-16964, i15=-9, iArr1[]=new int[N];
        double d1=115.7670;
        short s=13285;
        float f1=-35.757F;

        FuzzerUtils.init(iArr1, 2);

        for (i2 = 5; i2 < 225; ++i2) {
            d1 += -99L;
            for (i4 = 1; 7 > i4; i4++) {
                d1 += i4;
                for (i6 = 1; i6 < 2; ++i6) {
                    s += (short)(i6 + f1);
                }
                f1 = i4;
            }
        }
        for (i8 = 9; 207 > i8; i8++) {
            switch ((((i8 >>> 1) % 2) * 5) + 66) {
            case 68:
            case 67:
                for (i10 = 1; i10 < 8; i10++) {
                    i7 >>>= 242;
                }
                for (i12 = 1; i12 < 8; i12++) {
                    for (i14 = 1; i14 < 2; i14++) {
                        iArr1[i8] += i13;
                        iArr1[i8] = -185;
                    }
                }
                break;
            }
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d1) + i4 + i5 + i6 + i7 + s + Float.floatToIntBits(f1) + i8 +
            i9 + i10 + i11 + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1(float f) {

        int i1=-184, i16=-8, i17=205, i18=2157, i19=-33081, iArr[][]=new int[N][N];
        boolean b=false;
        double dArr1[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr1, 122.94365);
        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr1, 3317248890L);

        dArr1[(Test.iFld1 >>> 1) % N] -= ((Test.iFld1--) * (++iArr[(i1 >>> 1) % N][(Test.iFld1 >>> 1) % N]));
        if (b) {
            i1 = -23;
            Test.iFld1 -= (int)lMeth();
        }
        for (i16 = 275; i16 > 6; i16 -= 3) {
            i1 += i16;
            for (i18 = 17; i18 > 1; i18--) {
                iArr[i16][i18] += i18;
                if (b) break;
                i19 -= (int)Test.instanceCount;
                Test.instanceCount <<= i17;
                Test.iFld1 += i18;
            }
            lArr1[i16 - 1] = i17;
            i1 -= i19;
            i19 += (i16 * Test.iFld1);
        }
        long meth_res = Float.floatToIntBits(f) + i1 + (b ? 1 : 0) + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i20=5, i21=-7, i22=1, i23=-222, i24=6;
        float f2=-2.555F;
        long l=2861822992L, lArr2[]=new long[N];
        double d3=2.85327;

        FuzzerUtils.init(lArr2, 1259563084L);

        switch ((((iFld - iFld) >>> 1) % 3) + 48) {
        case 48:
            iFld = iFld;
            switch (((iMeth1(0.748F) >>> 1) % 2) + 115) {
            case 115:
                Test.instanceCount += iFld;
                for (i20 = 8; i20 < 253; ++i20) {
                    lArr2[i20 - 1] = (long)-63.57522;
                    Test.instanceCount = (long)f2;
                    Test.instanceCount -= Test.instanceCount;
                    for (i22 = 1; i22 < 7; i22++) {
                        for (l = 1; 2 > l; l++) {
                            double d2=1.120085;
                            iFld = -5;
                            i23 *= (int)d2;
                            Test.iFld1 -= i20;
                            i24 += (int)(l * l);
                            Test.iFld1 = i20;
                        }
                    }
                }
                break;
            case 116:
                d3 /= 0.746F;
                break;
            default:
                iFld >>= Test.iFld1;
            }
            break;
        case 49:
            i21 %= (int)((long)(f2) | 1);
            break;
        case 50:
            i24 -= 6;
            break;
        default:
            iFld = 1653;
        }
        long meth_res = i20 + i21 + Float.floatToIntBits(f2) + i22 + i23 + l + i24 + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-1.77415, dArr[]=new double[N];
        boolean b1=true;
        int i25=32150, i26=4, i27=-9, i28=-117, i29=-44336, i30=12, iArr2[]=new int[N];
        short s1=-4985;
        long l1=61106L, lArr[]=new long[N];
        float f3=0.858F;

        FuzzerUtils.init(lArr, -5804052732049499980L);
        FuzzerUtils.init(dArr, -114.89236);
        FuzzerUtils.init(iArr2, -25642);

        for (int smallinvoc=0; smallinvoc<297; smallinvoc++) vSmallMeth();
        iFld *= (int)Math.max((long)(d - Math.min(iFld, iFld)), Test.instanceCount);
        iFld -= iFld;
        vSmallMeth();
        if (b1) {
            iFld = (int)lArr[(iFld >>> 1) % N];
            dArr[(-14274 >>> 1) % N] -= ((Math.abs(-46192) + iMeth()) + 120);
            iArr2[(iFld >>> 1) % N] <<= (int)Test.instanceCount;
            Test.instanceCount = iFld;
        } else if (b1) {
        } else {
            i25 = 1;
            do {
                for (i26 = i25; i26 < 82; i26++) {
                    for (i28 = 1; i28 < 1; i28++) {
                        iArr2[i26 - 1] = i26;
                        switch ((i26 % 2) + 18) {
                        case 18:
                            iFld = i27;
                            Test.iFld1 += (-13683 + (i28 * i28));
                            iFld += (((i28 * Test.iFld1) + i28) - Test.instanceCount);
                            break;
                        case 19:
                            i29 *= 19901;
                            i27 *= i28;
                            break;
                        }
                        i29 = -5;
                        Test.instanceCount = s1;
                        i29 += (i28 * i28);
                    }
                    for (l1 = 1; 1 > l1; ++l1) {
                        Test.instanceCount = i30;
                        iArr2[i26 - 1] -= (int)Test.instanceCount;
                        Test.iFld1 %= (int)(Test.iFld1 | 1);
                        Test.iFld1 += (int)l1;
                        dArr[(int)(l1 + 1)] *= f3;
                        i27 *= (int)l1;
                        iArr2 = iArr2;
                    }
                }
            } while (++i25 < 307);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
