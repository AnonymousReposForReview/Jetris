package tests.javafuzzer2687;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:41:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5668048954155784372L;
    public static volatile float fFld=-1.562F;
    public static byte byFld=71;
    public static int iFld=0;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i2) {

        int i3=6, i4=3, i5=-40955, i6=-3, i7=-136, iArr[]=new int[N];
        byte by=107;
        boolean b=false;
        float f=-110.457F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(fArr, 1.445F);

        iArr = FuzzerUtils.int1array(N, (int)8);
        Test.instanceCount = i2;
        Test.instanceCount <<= -7644;
        for (i3 = 22; i3 < 370; ++i3) {
            l1 += (((i3 * by) + i4) - Test.instanceCount);
            for (i5 = 5; i5 > 1; i5--) {
                fArr[i3 - 1] -= i6;
                switch (((i5 >>> 1) % 8) + 41) {
                case 41:
                    i7 = 1;
                    do {
                        switch (((i7 % 2) * 5) + 69) {
                        case 72:
                            i6 -= i2;
                            i6 = i3;
                            break;
                        case 78:
                            if (b) break;
                            i2 += (i7 + by);
                            break;
                        default:
                            i4 = (int)f;
                        }
                    } while (++i7 < 2);
                case 42:
                    fArr[i3 - 1] *= i6;
                case 43:
                    i6 += (int)l1;
                    break;
                case 44:
                    i6 += (int)Test.instanceCount;
                    break;
                case 45:
                    Test.instanceCount = 61;
                    break;
                case 46:
                    try {
                        i2 = (-35866 / i3);
                        i6 = (6096 / i2);
                        i4 = (-1996745216 % i2);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 47:
                    i2 += i5;
                    break;
                case 48:
                    i2 -= (int)f;
                    break;
                default:
                    l1 += i5;
                }
            }
        }
        vMeth2_check_sum += l1 + i2 + i3 + i4 + by + i5 + i6 + i7 + (b ? 1 : 0) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i1, long l, double d) {

        int i8=134, i9=-5, i10=-63580, i11=23073, i12=-9;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -14L);

        i1 ^= (i1--);
        vMeth2(288925362594084703L, i1);
        lArr[(14 >>> 1) % N] = i1;
        Test.fFld += i1;
        i1 = (int)Test.fFld;
        for (i8 = 360; i8 > 5; i8 -= 2) {
            i1 += (((i8 * Test.instanceCount) + l) - Test.byFld);
            i1 = 24734;
        }
        i9 = 9;
        i10 = 1;
        while (++i10 < 237) {
            for (i11 = 1; 7 > i11; ++i11) {
                if (b1) continue;
                if (b1) continue;
                d += 27111;
                try {
                    i12 = (i12 % i12);
                    i9 = (-21 % i9);
                    Test.iFld = (30132 % i12);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += i1 + l + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i) {

        float f1=-92.736F;
        int i13=97;
        boolean b2=true;

        vMeth1(i, Test.instanceCount, 0.123325);
        f1 = 1;
        do {
            i13 = 10;
            while ((i13 -= 2) > 0) {
                if (b2) break;
            }
        } while (++f1 < 155);
        vMeth_check_sum += i + Float.floatToIntBits(f1) + i13 + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.iFld);
        iArrFld[(Test.iFld >>> 1) % N] = Test.iFld;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
