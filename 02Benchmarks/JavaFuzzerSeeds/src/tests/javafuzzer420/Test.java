package tests.javafuzzer420;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:22:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9103835670471842811L;
    public static volatile byte byFld=-108;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -39652);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i10) {

        float f=112.392F, f1=-1.123F, fArr[]=new float[N];
        int i11=-235, i12=42104, i13=-219, i14=-14608, iArr1[]=new int[N];
        boolean b=false;
        long l1=-8207744750827714201L, lArr[]=new long[N];

        FuzzerUtils.init(fArr, 2.1014F);
        FuzzerUtils.init(lArr, 5932611158449386200L);
        FuzzerUtils.init(iArr1, 1);

        i10 %= (int)((long)(f) | 1);
        for (i11 = 16; i11 < 310; i11++) {
            fArr[i11 - 1] = i10;
            if (b) break;
            for (f1 = 1; 6 > f1; f1++) {
                double d=1.1322;
                lArr[i11] |= Test.instanceCount;
                Test.instanceCount %= (Test.instanceCount | 1);
                switch ((i11 % 9) + 50) {
                case 50:
                    if (b) {
                    } else {
                        i14 = 1;
                        while (++i14 < 2) {
                            short s=-8820;
                            Test.instanceCount -= i11;
                            iArr1[i14 + 1] = (int)Test.instanceCount;
                            Test.instanceCount += (((i14 * i13) + Test.instanceCount) - Test.instanceCount);
                            i12 = (int)Test.instanceCount;
                            i13 -= s;
                        }
                    }
                case 51:
                    Test.instanceCount = (long)f;
                    break;
                case 52:
                    Test.instanceCount = i13;
                    break;
                case 53:
                    lArr[i11 + 1] += i12;
                case 54:
                    if (i12 != 0) {
                        vMeth2_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + (b ? 1 : 0) +
                            Float.floatToIntBits(f1) + i13 + i14 + l1 +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    break;
                case 55:
                    iArr1[(int)(f1 + 1)] -= (int)d;
                    break;
                case 56:
                    i12 = i13;
                    break;
                case 57:
                    Test.instanceCount = i10;
                    break;
                case 58:
                    i10 += i10;
                    break;
                default:
                    l1 >>>= i13;
                }
            }
        }
        vMeth2_check_sum += i10 + Float.floatToIntBits(f) + i11 + i12 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i13 +
            i14 + l1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i8, int i9) {

        float f2=-102.985F;
        short s1=-13422;
        int i15=42378, i16=-233, i17=13, iArr2[]=new int[N];
        boolean b1=true;
        byte by=115;
        double d1=-73.38661;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, -6);
        FuzzerUtils.init(lArr1, -737774709L);

        vMeth2(1);
        iArr2[(i9 >>> 1) % N] = (int)f2;
        i8 -= (int)Test.instanceCount;
        s1 *= (short)i8;
        for (i15 = 6; i15 < 264; i15++) {
            if (b1) break;
            i17 = 1;
            do {
                i16 = i16;
                i16 = (int)-50L;
                switch (((i15 % 6) * 5) + 50) {
                case 72:
                    if (b1) continue;
                    i16 += i16;
                    by += (byte)i8;
                    i9 += i9;
                    break;
                case 54:
                    i16 = (int)d1;
                    break;
                case 73:
                    i9 = i15;
                    break;
                case 76:
                    lArr1[i17] -= (long)d1;
                    break;
                case 69:
                    i8 += (((i17 * i15) + i17) - Test.instanceCount);
                case 51:
                }
            } while (++i17 < 6);
        }
        vMeth1_check_sum += i8 + i9 + Float.floatToIntBits(f2) + s1 + i15 + i16 + (b1 ? 1 : 0) + i17 + by +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i3, long l) {

        int i4=-37437, i5=26970, i6=156, i7=-13341, i18=-3;
        double d2=0.65859;
        float f3=-1.880F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 80.331F);

        for (i4 = 5; 180 > i4; ++i4) {
            short s2=31843;
            for (i6 = 1; i6 < 9; i6++) {
                vMeth1(i7, i6);
            }
            switch ((i4 % 7) + 104) {
            case 104:
                i3 -= i4;
                l -= i6;
                d2 -= d2;
                break;
            case 105:
                d2 -= s2;
                i18 = 1;
                while (++i18 < 9) {
                    i3 += (int)Test.instanceCount;
                    l += Test.instanceCount;
                    i3 -= (int)d2;
                    Test.iArrFld[i18 - 1] = i3;
                    i5 += (i18 * i18);
                }
                f3 += (((i4 * f3) + i4) - i18);
                break;
            case 106:
                Test.instanceCount += (i4 * i4);
            case 107:
                try {
                    i7 = (i4 / i6);
                    i3 = (i4 / i5);
                    i5 = (34 / i5);
                } catch (ArithmeticException a_e) {}
            case 108:
                fArr1[i4] += f3;
                break;
            case 109:
                i5 -= i7;
                break;
            case 110:
                i7 = 8;
                break;
            }
        }
        vMeth_check_sum += i3 + l + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d2) + i18 + Float.floatToIntBits(f3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=-12, i2=10, i19=232, i20=11990, i21=-7876, i22=-105, i23=210, iArr[]=new int[N];
        float f4=-1.554F, fArr2[]=new float[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(lArr2, 8461319100764553711L);
        FuzzerUtils.init(fArr2, 0.368F);

        i = ((++i) * (++iArr[(i >>> 1) % N]));
        for (i1 = 13; i1 < 224; i1++) {
            vMeth(43, Test.instanceCount);
            i19 = 1;
            while (++i19 < 119) {
                Test.iArrFld = iArr;
                for (i20 = i1; i20 < 1; i20++) {
                    switch ((i1 % 4) + 54) {
                    case 54:
                        Test.instanceCount += i20;
                        i21 <<= i2;
                        i21 -= i;
                        break;
                    case 55:
                        i2 = 53994;
                        i -= i;
                        lArr2[i19] += (long)f4;
                        break;
                    case 56:
                        Test.instanceCount += i20;
                        break;
                    case 57:
                        i21 *= i20;
                        Test.iArrFld[i19 + 1] = i19;
                        break;
                    }
                    Test.instanceCount += i20;
                    i <<= (int)Test.instanceCount;
                    Test.instanceCount ^= i19;
                    i2 *= Test.byFld;
                    f4 += i20;
                    try {
                        Test.iArrFld[i1 + 1] = (i2 % -116);
                        i21 = (i1 / i20);
                        i = (237 % i20);
                    } catch (ArithmeticException a_e) {}
                }
                for (i22 = 1; i22 < 1; ++i22) {
                    iArr[i19 - 1] -= i22;
                    fArr2 = fArr2;
                    switch ((((i20 >>> 1) % 3) * 5) + 63) {
                    case 74:
                        lArr2[i22 - 1] |= i19;
                        f4 -= f4;
                        break;
                    case 75:
                        iArr[i1 + 1] = i21;
                        i &= i;
                        break;
                    case 76:
                        i21 = 78;
                        break;
                    default:
                        Test.instanceCount += Test.instanceCount;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
