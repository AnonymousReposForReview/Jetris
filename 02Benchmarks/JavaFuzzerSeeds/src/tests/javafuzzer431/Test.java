package tests.javafuzzer431;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:43:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6595100578273541879L;
    public static double dFld=31.72450;
    public static int iFld=120;
    public static short sFld=-12290;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3102L);
    }

    public static long iMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i2, int i3, int i4) {

        int i5=31787, i6=29623, i7=36132, i8=45238, iArr[][]=new int[N][N];
        float f=0.925F, f1=103.385F;
        short s=11516;

        FuzzerUtils.init(iArr, -70);

        for (i5 = 252; i5 > 8; i5 -= 2) {
            boolean b=true;
            b = b;
            i4 -= i6;
            Test.instanceCount -= i3;
            switch ((i5 % 7) + 102) {
            case 102:
                for (i7 = 1; 13 > i7; i7++) {
                    b = b;
                    i6 = i7;
                    i4 >>= (int)Test.instanceCount;
                    if (b) {
                        i8 = (int)8L;
                        i8 += i7;
                        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) +
                            Float.floatToIntBits(f1) + s + FuzzerUtils.checkSum(iArr);
                        return;
                    } else {
                        i2 += i7;
                        i3 += (((i7 * i8) + f) - f);
                        iArr[i7 + 1][i5 - 1] *= 77;
                    }
                }
            case 103:
                Test.instanceCount >>= i6;
                break;
            case 104:
                iArr[i5 - 1] = FuzzerUtils.int1array(N, (int)-7887);
                break;
            case 105:
                i6 <<= i7;
                break;
            case 106:
                f = i7;
                break;
            case 107:
                f1 += Test.instanceCount;
            case 108:
                i3 >>= s;
                break;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + s +
            FuzzerUtils.checkSum(iArr);
    }

    public static byte byMeth(int i1) {

        int i9=13, i10=-10855, i11=49935, i12=-5011, iArr1[]=new int[N];
        boolean b1=true, b2=true;
        float f2=-1.767F;
        byte by=-122;

        FuzzerUtils.init(iArr1, -45140);

        vMeth(i1, i1, -9);
        i1 = (int)32315L;
        for (i9 = 3; i9 < 337; i9++) {
            i11 = 1;
            do {
                iArr1[i9 - 1] *= (int)Test.instanceCount;
                switch (((i11 % 7) * 5) + 77) {
                case 90:
                    b1 = true;
                    i10 += (i11 | i10);
                    i12 = 1;
                    while ((i12 += 2) < 1) {
                        i1 = i12;
                        i1 *= (int)Test.instanceCount;
                        Test.instanceCount += i12;
                        f2 += i1;
                        by *= (byte)Test.instanceCount;
                    }
                    break;
                case 88:
                    Test.dFld += -1672;
                    break;
                case 111:
                    Test.dFld *= Test.instanceCount;
                    break;
                case 98:
                    if (i10 != 0) {
                    }
                case 84:
                    f2 = Test.instanceCount;
                    break;
                case 110:
                    f2 = -10290;
                    break;
                case 108:
                    if (i11 != 0) {
                    }
                    break;
                default:
                    if (b2) continue;
                }
            } while (++i11 < 5);
        }
        long meth_res = i1 + i9 + i10 + i11 + (b1 ? 1 : 0) + i12 + Float.floatToIntBits(f2) + by + (b2 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static int iMeth() {

        int i13=20244, i14=8, i15=15324, i16=-160, i17=4832, iArr2[]=new int[N];
        byte by1=-99;
        long l=1L;
        boolean b3=true;

        FuzzerUtils.init(iArr2, -6);

        byMeth(Test.iFld);
        for (i13 = 396; i13 > 24; i13--) {
            Test.iFld = 49205;
            by1 += (byte)(i13 - Test.iFld);
            l *= -8;
            for (i15 = 5; 1 < i15; --i15) {
                i16 = (int)Test.instanceCount;
                iArr2[i13] += i15;
                switch ((i15 % 5) + 118) {
                case 118:
                    iArr2[i15 - 1] %= -62;
                    if (b3) break;
                    switch ((i13 % 5) + 115) {
                    case 115:
                        Test.sFld = (short)l;
                        break;
                    case 116:
                    case 117:
                        Test.lArrFld[i15] %= (Test.instanceCount | 1);
                        break;
                    case 118:
                        i14 = (int)l;
                        break;
                    case 119:
                        l += (1842 + (i15 * i15));
                        break;
                    }
                    break;
                case 119:
                    iArr2[i15 - 1] >>>= 195;
                    break;
                case 120:
                    i16 = (int)6L;
                    break;
                case 121:
                    Test.iFld -= i13;
                    break;
                case 122:
                    i16 <<= (int)198L;
                    break;
                default:
                    i17 = Test.iFld;
                }
            }
        }
        long meth_res = i13 + i14 + by1 + l + i15 + i16 + (b3 ? 1 : 0) + i17 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-4, i18=2, i19=-7, i20=-249, i21=-13447, i22=1;
        double d=-81.4343;
        float f3=109.588F;
        byte by2=112;

        i = i;
        iMeth();
        Test.instanceCount = Test.instanceCount;
        i &= i;
        iArrFld[(i >>> 1) % N] = Test.iFld;
        for (d = 2; d < 391; d++) {
            for (i19 = 4; i19 < 65; i19++) {
                for (i21 = i19; i21 < 2; ++i21) {
                    Test.dFld -= -60458;
                    if (Test.bFld) break;
                    f3 = by2;
                    f3 -= f3;
                    iArrFld[i19 - 1] /= (int)(i19 | 1);
                    i20 &= -237;
                    if (Test.bFld) {
                        if (Test.bFld) continue;
                        f3 -= 1.365F;
                        i20 -= (int)Test.instanceCount;
                    }
                    Test.instanceCount += (i21 * i21);
                    switch (((i19 % 7) * 5) + 32) {
                    case 64:
                        i22 += (-169 + (i21 * i21));
                        break;
                    case 62:
                        Test.instanceCount <<= i22;
                        f3 = i19;
                        i18 += (i21 * i21);
                        i = 14;
                        break;
                    case 61:
                        i18 = i18;
                        iArrFld = FuzzerUtils.int1array(N, (int)-169);
                        if (false) break;
                        i22 = -4025;
                        break;
                    case 52:
                        f3 = (float)d;
                    case 41:
                        f3 -= i19;
                        break;
                    case 63:
                    case 53:
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  byMeth ->  byMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
