package tests.javafuzzer1913;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:47:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2170551057L;
    public static int iFld=34193;
    public static byte byFld=107;
    public static short sFld=14381;
    public static float fFld=0.929F;
    public int iFld1=37;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13);
        FuzzerUtils.init(Test.dArrFld, 2.106998);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(byte by) {

        float f=44.749F;
        int i6=7, i7=-8, i8=49, i9=-3, i10=987;
        boolean b=false;

        f = Test.iFld;
        f = Test.iFld;
        for (i6 = 2; i6 < 186; ++i6) {
            for (i8 = i6; i8 < 9; ++i8) {
                i9 *= (int)1.50885;
                switch (((i8 >>> 1) % 1) + 105) {
                case 105:
                    Test.instanceCount -= -39;
                    Test.instanceCount = 4;
                    f += (i8 * Test.iFld);
                    switch ((((i8 >>> 1) % 5) * 5) + 6) {
                    case 8:
                        Test.sFld = (short)i9;
                        i9 += (((i8 * Test.iFld) + Test.iFld) - i9);
                    case 21:
                    case 30:
                        i9 /= (int)((long)(f) | 1);
                        Test.instanceCount &= i6;
                        by = (byte)40;
                        break;
                    case 31:
                        i10 = (int)Test.instanceCount;
                        break;
                    case 17:
                        if (b) break;
                        break;
                    }
                default:
                    i9 = i6;
                }
            }
        }
        long meth_res = by + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i3) {

        int i4=0, i5=-10925, i11=2, i12=-29901, i13=13;
        float f1=4.197F;

        for (i4 = 5; i4 < 143; ++i4) {
            Test.byFld -= (byte)Test.iFld;
            i3 ^= (int)(-(Test.iArrFld[i4] - (i5 * Test.instanceCount)));
            Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld)));
            Test.iArrFld[(0 >>> 1) % N] -= (iMeth(Test.byFld) - Test.iFld);
            i5 += i4;
            for (i11 = 1; i11 < 11; ++i11) {
                i3 |= i3;
                f1 += i5;
                i13 = 1;
                do {
                    Test.instanceCount -= (long)50.465F;
                    Test.sFld += (short)(((i13 * Test.instanceCount) + i5) - i11);
                    Test.iArrFld[i11] &= i11;
                    i12 >>>= 13;
                } while (++i13 < 2);
                f1 = -2L;
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i11 + i12 + Float.floatToIntBits(f1) + i13;
    }

    public static void vMeth(int i) {

        int i1=-16530, i2=-7, i14=0, i15=48701, i16=-20071, i17=1259, iArr[]=new int[N];
        double d1=-54.126272;
        float fArr[]=new float[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, 9215);
        FuzzerUtils.init(fArr, 74.119F);
        FuzzerUtils.init(lArr1, 2385200003L);

        for (i1 = 2; i1 < 171; i1++) {
            Test.instanceCount *= (--iArr[i1]);
            fArr[i1] *= (--i);
            vMeth1(i2);
            Test.iFld = (int)-189L;
            for (i14 = 1; i14 < 9; i14++) {
                switch (((i1 % 6) * 5) + 70) {
                case 80:
                    for (i16 = 1; i16 < 2; i16++) {
                        float f2=-57.697F;
                        switch ((((i >>> 1) % 10) * 5) + 37) {
                        case 38:
                            f2 = Test.instanceCount;
                            i15 += (((i16 * i15) + i1) - f2);
                            i = 25332;
                            i17 = i15;
                        case 45:
                            i17 += (((i16 * i1) + i17) - Test.instanceCount);
                            i15 = (int)Test.instanceCount;
                            break;
                        case 74:
                            Test.iFld = 24383;
                            break;
                        case 43:
                            i2 = i1;
                            break;
                        case 66:
                            Test.instanceCount = 0;
                            break;
                        case 72:
                            lArr1[i16 - 1][i1] -= i2;
                            break;
                        case 86:
                            Test.dArrFld = Test.dArrFld;
                        case 69:
                            d1 = Test.byFld;
                            break;
                        case 39:
                            Test.instanceCount <<= 235;
                            break;
                        case 47:
                            i2 += (i16 + Test.byFld);
                        default:
                            i17 -= i15;
                        }
                    }
                    break;
                case 95:
                    i2 += (i14 + i16);
                    break;
                case 83:
                    Test.fFld += i14;
                    break;
                case 82:
                    i2 *= Test.iFld;
                    break;
                case 98:
                    i2 -= (int)Test.instanceCount;
                    break;
                case 71:
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=0.90172, d2=116.93906;
        int i18=-8408, i19=-88, i20=-10, i21=247, i22=8, i23=2, i24=-189;
        boolean b1=false;
        long lArr[]=new long[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(lArr, 89L);
        FuzzerUtils.init(fArr1, -1.213F);

        lArr[(Test.iFld >>> 1) % N] >>= (long)(((Test.iFld + -249) * d) + ((Test.iFld--) - 81));
        vMeth(iFld1);
        Test.fFld += Test.instanceCount;
        Test.instanceCount >>= Test.iFld;
        i18 = 1;
        while (++i18 < 260) {
            for (i19 = 1; 97 > i19; i19++) {
                Test.fFld -= -65;
                for (i21 = 1; i21 < 2; ++i21) {
                    bArrFld[i19] = b1;
                    Test.instanceCount += -39977;
                    Test.iFld += i21;
                    Test.iFld = 0;
                    switch ((i21 % 1) + 25) {
                    case 25:
                        try {
                            i22 = (i23 % 26336);
                            i22 = (i22 / i19);
                            Test.iFld = (i20 / i20);
                        } catch (ArithmeticException a_e) {}
                        Test.fFld += Test.instanceCount;
                        break;
                    default:
                        i20 >>= i18;
                        Test.instanceCount += (((i21 * Test.fFld) + Test.iFld) - Test.sFld);
                        Test.fFld += (i21 * i21);
                        iFld1 += (int)Test.fFld;
                    }
                    i23 += (i21 * i21);
                }
                Test.iArrFld[i18 + 1] *= iFld1;
            }
            switch ((i18 % 4) + 81) {
            case 81:
                switch (((i20 >>> 1) % 7) + 31) {
                case 31:
                    for (d2 = 97; d2 > 2; d2 -= 3) {
                        Test.iArrFld[i18] *= -7712;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += Test.instanceCount;
                        Test.instanceCount *= (long)1.42889;
                        i24 += (int)Test.fFld;
                        i22 = i20;
                    }
                case 32:
                    Test.instanceCount = Test.byFld;
                case 33:
                    iFld1 = (int)d2;
                    break;
                case 34:
                    i24 *= i24;
                    break;
                case 35:
                    iFld1 >>>= i20;
                    break;
                case 36:
                    lArr[i18] -= 0;
                    break;
                case 37:
                    fArr1[i18 - 1] -= -8;
                    break;
                default:
                    Test.iArrFld[i18] -= (int)Test.instanceCount;
                }
                break;
            case 82:
                iFld1 = 124;
                break;
            case 83:
            case 84:
                Test.fFld = (float)d2;
            default:
                iFld1 += i24;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
