package tests.javafuzzer74;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:49:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-84L;
    public static boolean bFld=false;
    public double dFld=-62.25263;
    public float fFld=-1.435F;
    public static double dArrFld[]=new double[N];
    public long lArrFld[]=new long[N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 1.108643);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i11=13, i12=-9, i13=-225, i14=-8, iArr1[]=new int[N];
        float f=105.270F;

        FuzzerUtils.init(iArr1, -59649);

        for (i11 = 8; i11 < 384; ++i11) {
            for (i13 = 1; i13 < 4; i13++) {
                double d=122.114995;
                if (Test.bFld) {
                    if (Test.bFld) {
                        d -= i11;
                    } else {
                        i12 = i13;
                        i14 >>>= i12;
                        i14 -= i13;
                        Test.instanceCount *= i12;
                    }
                    f += i12;
                } else if (Test.bFld) {
                    i12 >>>= -161;
                    iArr1[i11] >>= i12;
                    i14 *= (int)f;
                    Test.instanceCount += i12;
                } else {
                    Test.dArrFld[i11] += i14;
                }
            }
        }
        vMeth2_check_sum += i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i4, int i5, int i6) {

        int i7=-61, i8=36316, i9=-14, i10=36, i15=28474, i16=-5, iArr2[]=new int[N];
        double d1=1.27422;
        short s=-26992;

        FuzzerUtils.init(iArr2, -84);

        for (i7 = 3; 207 > i7; i7++) {
            for (i9 = i7; i9 < 8; ++i9) {
                float f1=2.940F;
                vMeth2();
                f1 += (float)d1;
                iArr2[i9 - 1] = 44280;
                Test.instanceCount -= i8;
                iArr2[i9] = i10;
                for (i15 = 1; i15 < 1; i15++) {
                    byte by=-103;
                    i8 -= by;
                    switch ((i7 % 3) + 88) {
                    case 88:
                        Test.instanceCount += (i15 - s);
                        i8 %= 13;
                        i8 = i4;
                        i6 += (((i15 * i16) + i9) - i6);
                        break;
                    case 89:
                        s <<= (short)i6;
                        break;
                    case 90:
                        Test.instanceCount += (-630700800L + (i15 * i15));
                        break;
                    default:
                        i8 *= i16;
                    }
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i15 + i16 + s +
            FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i, int i1, boolean b) {

        int i3=-20916, i17=-4, iArr[]=new int[N];
        float f2=-1.587F;
        double d2=-33.83209;

        FuzzerUtils.init(iArr, -3);

        for (int i2 : iArr) {
            i3 = 1;
            while ((i3 += 2) < 4) {
                vMeth1(i, -31743, i);
                i2 *= (int)Test.instanceCount;
                i += (((i3 * i) + f2) - f2);
                i17 = 1;
                while (++i17 < 2) {
                    if (true) continue;
                    f2 += (float)d2;
                    i2 = (int)Test.instanceCount;
                    iArr[i3 - 1] *= i1;
                    iArr = FuzzerUtils.int1array(N, (int)70);
                    Test.instanceCount = i1;
                    i /= (int)(i1 | 1);
                    iArr[i3 + 1] -= (int)f2;
                    Test.instanceCount = Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + (b ? 1 : 0) + i3 + Float.floatToIntBits(f2) + i17 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-29598, i19=13, i20=-2, i21=-56, i22=-14919, i23=-56738, i24=14, i25=-59350, i26=-8, i27=133, i28=99,
            i29=-47675, i30=-96, i31=-28;
        long l=-170L;
        short s1=-31086;

        vMeth(i18, i18, Test.bFld);
        i18 += (int)dFld;
        for (l = 3; l < 185; ++l) {
            switch ((((-163 >>> 1) % 2) * 5) + 27) {
            case 31:
                i18 -= (int)-90.247F;
                try {
                    i19 = (63613 / i18);
                    i18 = (-100 % i19);
                    i19 = (i19 % -44793);
                } catch (ArithmeticException a_e) {}
                for (i20 = 3; i20 < 138; i20++) {
                    i21 += 56;
                    for (i22 = i20; i22 < 2; i22++) {
                        i21 >>>= i21;
                    }
                    i23 = (int)Test.instanceCount;
                    i19 >>>= i22;
                    i18 += 25;
                    i19 |= (int)l;
                    i19 -= i22;
                }
                break;
            case 29:
                for (i24 = 1; 138 > i24; i24 += 2) {
                    s1 += (short)-14207;
                    i21 = i22;
                    lArrFld[(int)(l + 1)] <<= i19;
                }
                for (i26 = 138; i26 > 4; i26--) {
                    i25 *= i21;
                }
                fFld += s1;
                for (i28 = 3; 138 > i28; i28++) {
                    for (i30 = 2; i30 > 1; --i30) {
                        i19 += (int)2647330806802255784L;
                        i31 += (int)1.814F;
                        i21 += (7 + (i30 * i30));
                        if (Test.bFld) {
                            fFld -= Test.instanceCount;
                            iArrFld[i30] *= 0;
                        } else {
                            i29 >>= i20;
                        }
                    }
                }
            default:
                i18 += (int)l;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
