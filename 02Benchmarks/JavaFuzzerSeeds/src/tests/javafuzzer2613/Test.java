package tests.javafuzzer2613;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:30:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-149307342955041041L;
    public static byte byFld1=26;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -40400);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i11) {

        int i12=-61791, i13=-9509, i14=-6;
        short s=-10248;
        boolean b=false;

        for (i12 = 16; i12 < 271; i12++) {
            i13 += i12;
            i14 = 1;
            do {
                Test.iArrFld[i14 + 1] &= i14;
                s = (short)i13;
                if (i13 != 0) {
                    vMeth1_check_sum += i11 + i12 + i13 + i14 + s + (b ? 1 : 0);
                    return;
                }
                switch (((i12 % 1) * 5) + 13) {
                case 17:
                    if (b) break;
                    Test.byFld1 = (byte)s;
                    i11 = i13;
                    break;
                default:
                    b = false;
                    i11 += (i14 | i12);
                    i11 += (i14 * i14);
                }
            } while (++i14 < 6);
            i13 >>= i14;
            if (i12 != 0) {
                vMeth1_check_sum += i11 + i12 + i13 + i14 + s + (b ? 1 : 0);
                return;
            }
        }
        vMeth1_check_sum += i11 + i12 + i13 + i14 + s + (b ? 1 : 0);
    }

    public static float fMeth(long l, int i4, int i5) {

        int i6=63274, i7=161, i8=-8115, i9=-97, i10=-29235;
        float f1=123.597F;
        double d1=-46.105557;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1108043052L);

        for (i6 = 10; i6 < 340; i6++) {
            for (i8 = 1; i8 < 5; i8++) {
                i10 = 1;
                while (++i10 < 2) {
                    f1 -= (float)d1;
                    lArr = (lArr = (lArr = (lArr = lArr)));
                    i4 += (((i10 * f1) + i9) - i9);
                    f1 += Test.byFld1;
                    try {
                        i4 = (Test.iArrFld[i10 - 1] % i10);
                        i9 = (i10 % i7);
                        Test.iArrFld[i8 - 1] = (Test.iArrFld[i8 - 1] % Test.iArrFld[i6]);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = (long)(1.838F - (++i9));
                    Test.byFld1 += (byte)(((i10 * i7) + i8) - l);
                    vMeth1(i9);
                    i7 <<= (int)l;
                    Test.iArrFld = Test.iArrFld;
                }
                if (Test.bFld) continue;
                i5 = (int)Test.instanceCount;
            }
        }
        long meth_res = l + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1)
            + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=-37, i3=23201, i15=21203, i16=-53;
        double d=-1.29176, d2=40.54387;
        float f=1.37F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 4956469452041147210L);

        for (i2 = 7; i2 < 254; ++i2) {
            Test.instanceCount = Test.instanceCount;
            i |= (int)(-((--i) + (d - i3)));
        }
        i3 = Test.iArrFld[(i >>> 1) % N];
        Test.instanceCount += (long)(f += (fMeth(-1453L, i, i1) % (i3 | 1)));
        Test.byFld1 = (byte)f;
        Test.instanceCount = Test.instanceCount;
        i15 = 1;
        do {
            i = i3;
            lArr1[i15 - 1] += (long)d;
            for (d2 = 1; d2 < 10; ++d2) {
                d = -23.38128;
                i = (int)Test.instanceCount;
                if (i2 != 0) {
                    vMeth_check_sum += i + i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i15 +
                        Double.doubleToLongBits(d2) + i16 + FuzzerUtils.checkSum(lArr1);
                    return;
                }
                if (Test.bFld) break;
            }
        } while (++i15 < 156);
        vMeth_check_sum += i + i1 + i2 + i3 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i15 +
            Double.doubleToLongBits(d2) + i16 + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr3) {

        int i17=-10;

        vMeth(i17, i17);



    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
