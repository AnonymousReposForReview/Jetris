package tests.javafuzzer2424;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:23:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public byte byFld=99;
    public static short sFld=25440;
    public static boolean bFld=false;
    public static int iFld=8;
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 863L);
        FuzzerUtils.init(Test.iArrFld, -4224);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by, int i7) {

        int i8=2691, i9=11, i10=30603, i11=-183, i12=-34, i13=16039, i14=12;
        float f1=17.55F;

        for (i8 = 14; i8 < 289; ++i8) {
            Test.instanceCount += Test.instanceCount;
            for (i10 = 1; 6 > i10; ++i10) {
                Test.bFld = Test.bFld;
            }
            f1 += (((i8 * f1) + f1) - i9);
            Test.lArrFld[i8 + 1] &= i10;
        }
        for (i12 = 13; 296 > i12; i12++) {
            Test.iFld = (int)-69.313F;
            by += (byte)i12;
            by += (byte)i12;
        }
        i7 += Test.iFld;
        i14 = 370;
        while (--i14 > 0) {
            Test.bFld = Test.bFld;
            Test.iArrFld[i14 + 1] <<= i13;
            Test.instanceCount /= -8355;
        }
        vMeth2_check_sum += by + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14;
    }

    public static void vMeth1() {

        byte by1=65, byArr[]=new byte[N];
        int i15=-3, i16=-140, i17=26296, i18=-9, i19=11, i20=-14;
        float f2=-113.557F;

        FuzzerUtils.init(byArr, (byte)81);

        vMeth2(by1, Test.iFld);
        Test.iFld = Test.iFld;
        Test.iFld = Test.iFld;
        Test.iFld = (int)-62.110557;
        i15 = 198;
        do {
            by1 -= (byte)Test.instanceCount;
        } while (--i15 > 0);
        i16 = 349;
        do {
            for (i17 = 1; 9 > i17; i17++) {
                byArr[i16] >>= (byte)3;
                for (i19 = 2; i19 > 1; i19 -= 2) {
                    switch ((((i15 >>> 1) % 1) * 5) + 70) {
                    case 73:
                        i18 = (int)f2;
                        i18 >>= i16;
                    default:
                        Test.instanceCount += (i19 * i19);
                        i18 -= (int)-250L;
                    }
                }
            }
        } while ((i16 -= 2) > 0);
        vMeth1_check_sum += by1 + i15 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(float f, int i6) {

        float f3=83.951F;
        byte by2=64;
        int i21=38798, i22=3;

        i6 = (int)((-(i6 - Test.sFld)) + 0.467F);
        i6 -= (-(++Test.iArrFld[(i6 >>> 1) % N]));
        vMeth1();
        Test.iFld = i6;
        f3 = 1;
        while (++f3 < 323) {
            Test.iArrFld[(int)(f3 - 1)] = 8215;
        }
        i6 *= -132;
        Test.iFld -= by2;
        for (i21 = 269; i21 > 15; i21--) {
            Test.iFld = (int)-8L;
            Test.sFld = (short)i6;
            Test.lArrFld[i21 + 1] += i21;
            Test.lArrFld[i21 + 1] = Test.instanceCount;
            Test.instanceCount >>= i22;
            if (Test.iFld != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + i6 + Float.floatToIntBits(f3) + by2 + i21 + i22;
                return;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i6 + Float.floatToIntBits(f3) + by2 + i21 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i=211, i1=4, i2=-11609, i3=21413, i4=42203, i5=49854, i23=-61287, i24=-17, i25=41, i26=55079, i27=9,
            i28=-203, iArr[]=new int[N];
        float f4=-1.170F;
        double d=1.110461;

        FuzzerUtils.init(iArr, 163);

        for (i = 8; 305 > i; ++i) {
            iArr[i] *= byFld;
        }
        for (i2 = 5; i2 < 279; i2++) {
            i1 = (int)((-(Test.instanceCount = i3)) + (--Test.lArrFld[i2 - 1]));
            for (i4 = 5; 92 > i4; i4++) {
                i3 += (i4 * i4);
                vMeth(f4, i2);
                Test.instanceCount = 46808L;
                Test.sFld = (short)Test.iFld;
                i23 = 1;
                do {
                    i3 = i2;
                    i3 *= i3;
                    iArr[i23] = i24;
                    i24 += i25;
                    d -= Test.instanceCount;
                    i1 = (int)d;
                    Test.instanceCount += (((i23 * f4) + Test.instanceCount) - Test.instanceCount);
                } while ((i23 += 2) < 2);
            }
            if (Test.bFld) {
                Test.iArrFld[i2] *= i25;
                i26 = 1;
                while (++i26 < 92) {
                    f4 = f4;
                }
                f4 += i4;
            } else {
                Test.lArrFld[i2] = 11L;
                Test.iFld -= i;
                i25 += (int)f4;
            }
            d = i5;
            for (i27 = 3; i27 < 92; ++i27) {
                d += i28;
                i24 = i27;
            }
            i24 *= Test.iFld;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
