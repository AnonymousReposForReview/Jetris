package tests.javafuzzer3220;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 04:17:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1044539409L;
    public volatile int iFld=-121;
    public static long lFld=7141319640261696414L;
    public static double dFld=0.80094;
    public static volatile short sFld=-14039;
    public byte byFld=-14;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1242468032L);
        FuzzerUtils.init(Test.iArrFld, -4516);
    }

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(byte by1, int i7) {

        int i8=-230, i9=91, i10=-5, i11=32839;

        Test.dFld += Test.dFld;
        i7 = i7;
        for (i8 = 7; i8 < 201; i8++) {
            for (i10 = 8; i10 > 1; i10--) {
                i11 += 10813;
                if (false) break;
                Test.dFld *= i11;
            }
            i11 += (((i8 * i10) + i8) - i9);
        }
        vMeth1_check_sum += by1 + i7 + i8 + i9 + i10 + i11;
    }

    public static void vMeth() {

        int i4=-13, i5=55669, i6=-617;
        boolean b1=false;
        float f=-108.115F;
        short s=8846;

        for (i4 = 12; i4 < 327; ++i4) {
            i5 += (-245 + (i4 * i4));
            Test.lArrFld[i4 + 1] -= Test.instanceCount;
            i6 = 5;
            do {
                i5 >>>= (int)(4 + ((i5 + i5) * 7169692340633090589L));
                i5 += (++i5);
                if (b1) continue;
                if (4003680278241797345L > ((Test.iArrFld[i6] - (++s)) - (++i5))) {
                    f += (((i6 * i5) + i6) - i6);
                    i5 *= (int)(((i5 = (int)Test.instanceCount) + (Test.instanceCount = i4)) +
                        (-(Test.instanceCount--)));
                } else {
                    i5 = (int)(--Test.instanceCount);
                    vMeth1((byte)(-68), i5);
                }
                i5 = (int)Test.instanceCount;
                s += (short)f;
            } while (--i6 > 0);
            Test.instanceCount -= (long)Test.dFld;
        }
        vMeth_check_sum += i4 + i5 + i6 + (b1 ? 1 : 0) + Float.floatToIntBits(f) + s;
    }

    public static short sMeth() {

        int i2=8, i12=-179, i13=9, i14=26, i15=58731, iArr[]=new int[N];
        byte by=7;
        boolean b=false;

        FuzzerUtils.init(iArr, 34078);

        i2 ^= (by--);
        iArr[(-12 >>> 1) % N] >>= (int)((Test.dFld = (i2 + -31)) - -71);
        for (int i3 : iArr) {
            if (b) {
                i2 = i3;
                if (b = true) break;
                i3 <<= -19580;
                vMeth();
            } else {
                Test.lFld *= Test.lFld;
                for (i12 = 1; 4 > i12; ++i12) {
                    for (i14 = i12; i14 < 2; i14++) {
                        if (b) continue;
                        i13 ^= Test.sFld;
                        if (i13 != 0) {
                        }
                        Test.instanceCount = i13;
                    }
                }
            }
        }
        long meth_res = i2 + by + (b ? 1 : 0) + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=31795, i1=14, i16=178, i17=85, i18=-12, i19=12, i20=11, i21=220, i22=-89;
        boolean b2=false;
        float f1=15.166F, f2=122.752F;

        iFld *= iFld;
        for (i = 1; i < 265; ++i) {
            iFld += i;
            if (b2) {
                Test.lFld -= Math.max(--Test.lFld, sMeth() - iFld);
                b2 = b2;
                for (i16 = 2; i16 < 95; ++i16) {
                    if (b2) continue;
                    Test.instanceCount -= 176L;
                    iFld = -22343;
                    if (true) {
                        f1 += i16;
                        iFld += (int)f1;
                    } else {
                        f1 += (((i16 * Test.instanceCount) + Test.instanceCount) - i1);
                        iFld <<= i;
                    }
                }
            } else {
                for (i18 = 2; i18 < 95; i18 += 3) {
                    i1 = iFld;
                    byFld *= (byte)Test.instanceCount;
                    byFld *= (byte)i17;
                    i17 += (i18 + i);
                }
            }
            iFld = (int)Test.lFld;
            byFld += (byte)(((i * i16) + i16) - i19);
            for (i20 = 3; i20 < 95; i20++) {
                for (f2 = 1; 2 > f2; f2++) {
                    Test.sFld += (short)(f2 * i17);
                    i21 += i22;
                    Test.sFld += (short)(f2 * f2);
                    i21 += (int)(f2 * f2);
                    i21 = -54567;
                    Test.dFld *= i20;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
