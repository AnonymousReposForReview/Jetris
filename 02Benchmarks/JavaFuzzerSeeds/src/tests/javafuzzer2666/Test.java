package tests.javafuzzer2666;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:20:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=407063751L;
    public static double dFld=2.48925;
    public boolean bFld=false;
    public int iFld=-8;
    public boolean bFld1=true;
    public static boolean bArrFld[][]=new boolean[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth() {

        int i4=-193, i5=6, i6=-247, i7=-50588, i8=154, iArr[]=new int[N];
        byte by=-12;
        float f1=-102.945F;
        short s=-3197;
        boolean b1=true;

        FuzzerUtils.init(iArr, 2535);

        for (i4 = 4; i4 < 389; i4++) {
            switch (((i4 >>> 1) % 1) + 123) {
            case 123:
                i6 = 1;
                while (++i6 < 4) {
                    i5 <<= (int)Test.instanceCount;
                    iArr[i4 + 1] += -126;
                    for (i7 = 1; i7 < 1; i7++) {
                        by += (byte)(i7 ^ (long)f1);
                        Test.instanceCount = 57498;
                        iArr[i4] = i5;
                        iArr[i6] >>= i6;
                        Test.dFld = s;
                        i8 >>= by;
                    }
                }
                iArr[i4] += i4;
                i8 *= 3;
                b1 = b1;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + by + Float.floatToIntBits(f1) + s + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth1(int i2, boolean b, int i3) {

        float f=2.800F;
        int i9=2, i10=-123, i11=40981, i12=202, i13=1, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 110);

        Test.instanceCount += ((++i2) * (Test.instanceCount * (--i2)));
        Test.instanceCount = (long)(f -= (float)(Math.max(i2, i3) * dMeth()));
        for (i9 = 13; i9 < 339; ++i9) {
            Test.instanceCount >>= i10;
            i11 = 1;
            do {
                Test.dFld = Test.instanceCount;
                i2 <<= i11;
                iArr1[i11 - 1] *= (int)Test.instanceCount;
                for (i12 = 1; i12 < 3; ++i12) {
                    i2 -= (int)Test.instanceCount;
                    iArr1[i12 + 1] = 4;
                    i13 &= i10;
                    i2 |= (int)Test.instanceCount;
                    if (i11 != 0) {
                        vMeth1_check_sum += i2 + (b ? 1 : 0) + i3 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 +
                            i13 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i3 += (i12 - i11);
                }
            } while ((i11 += 2) < 5);
        }
        vMeth1_check_sum += i2 + (b ? 1 : 0) + i3 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(int i, long l, int i1) {

        int i14=13, i15=-6, i16=6, iArr2[]=new int[N];
        float f2=-57.132F;

        FuzzerUtils.init(iArr2, -33698);

        vMeth1(i, bFld, 178);
        i14 = 1;
        do {
            i15 = 20;
            while ((i15 -= 2) > 0) {
                if (i15 != 0) {
                    vMeth_check_sum += i + l + i1 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
                        FuzzerUtils.checkSum(iArr2);
                    return;
                }
                f2 = i15;
                i = (int)l;
                i += i15;
                i1 /= (int)(i15 | 1);
                i16 = 1;
                do {
                    switch ((i15 % 5) + 93) {
                    case 93:
                        switch ((((i15 >>> 1) % 2) * 5) + 124) {
                        case 134:
                            i1 += (((i16 * Test.instanceCount) + i16) - i16);
                            l = Test.instanceCount;
                            i1 += i16;
                            break;
                        case 127:
                            if (i15 != 0) {
                                vMeth_check_sum += i + l + i1 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
                                    FuzzerUtils.checkSum(iArr2);
                                return;
                            }
                        }
                        break;
                    case 94:
                    case 95:
                        if (i != 0) {
                            vMeth_check_sum += i + l + i1 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
                                FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                        break;
                    case 96:
                        iArr2[i16] = i16;
                        break;
                    case 97:
                        i += (i16 + i);
                    }
                } while (++i16 < 2);
            }
        } while ((i14 += 3) < 229);
        vMeth_check_sum += i + l + i1 + i14 + i15 + Float.floatToIntBits(f2) + i16 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i17=-51982, i18=10, i19=197, i20=-65, i21=-6536, i22=95, i23=0, i24=-136, i25=-27, i26=-4, iArr3[]=new
            int[N];
        float f3=2.761F;
        short s1=-16862;
        byte by1=21;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr3, -14142);
        FuzzerUtils.init(dArr, -1.67325);

        vMeth(iFld, Test.instanceCount, -86);
        for (i17 = 10; i17 < 319; i17 += 3) {
            for (i19 = 1; i19 < 243; i19++) {
                i18 -= i20;
                if (bFld) break;
                iArr3[i17 - 1] = i17;
                dArr[i19 - 1] -= Test.instanceCount;
                Test.bArrFld[i19 - 1][i19] = bFld;
                for (i21 = 1; i21 < 2; ++i21) {
                    i18 = i22;
                    if (true) break;
                    iArr3[i17 + 1] *= (int)1.5132;
                    iArr3 = iArr3;
                    Test.instanceCount = i19;
                    i20 = (int)Test.instanceCount;
                    f3 += (6 + (i21 * i21));
                    f3 = 18637;
                    if (bFld1) {
                        i22 = i19;
                        s1 += (short)i20;
                        iFld = 24;
                        i20 -= s1;
                    }
                }
                Test.dFld = i22;
            }
            iFld += (i17 * i17);
            bFld1 = bFld;
            for (i23 = 243; i23 > 13; --i23) {
                for (i25 = 1; 2 > i25; ++i25) {
                    i26 &= i19;
                    iArr3[i25 - 1] += by1;
                    bFld1 = false;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
