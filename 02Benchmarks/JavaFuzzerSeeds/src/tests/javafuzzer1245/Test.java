package tests.javafuzzer1245;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:07:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-127L;
    public static byte byFld=86;
    public static boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -36.887F);
        FuzzerUtils.init(Test.lArrFld, 7L);
        FuzzerUtils.init(Test.dArrFld, -2.18866);
        FuzzerUtils.init(Test.byArrFld, (byte)-25);
        FuzzerUtils.init(Test.iArrFld, 12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i5, long l1, double d) {

        int i6=-1, i7=-44117, i8=242, i9=-29953, i10=-23053;
        byte by1=-10;
        short s2=14570;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        i6 = 202;
        while (--i6 > 0) {
            for (i7 = 8; i7 > i6; --i7) {
                i5 >>= (int)Test.instanceCount;
                i5 -= by1;
                s2 *= by1;
                i9 = 1;
                while (++i9 < 1) {
                    if (i9 != 0) {
                    }
                    bArr[i9] = b1;
                    i5 = (int)-2.73F;
                    Test.dArrFld[i6] += i8;
                    if (b1) continue;
                    by1 = (byte)l1;
                    i8 += i6;
                    d = Test.instanceCount;
                    i10 >>= 0;
                }
            }
        }
        long meth_res = i5 + l1 + Double.doubleToLongBits(d) + i6 + i7 + i8 + by1 + s2 + i9 + (b1 ? 1 : 0) + i10 +
            FuzzerUtils.checkSum(bArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i3, int i4) {

        boolean b=false;
        float f2=0.542F;
        double d1=112.55335;
        int i11=-61, i12=-54, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -6);

        b = b;
        f2 += Math.abs((int)(fMeth(i3, Test.instanceCount, d1) + i4));
        i3 <<= i3;
        i3 >>>= (int)Test.instanceCount;
        i3 *= -11;
        for (i11 = 7; i11 < 350; ++i11) {
            f2 = i4;
            switch ((i11 % 9) + 85) {
            case 85:
                Test.instanceCount = Test.instanceCount;
                f2 = i3;
                break;
            case 86:
                i12 *= i12;
                iArr1[i11 + 1] += i4;
            case 87:
                if (b) continue;
                i4 /= (int)(Test.instanceCount | 1);
            case 88:
                i12 *= i3;
                break;
            case 89:
                i4 >>= (int)Test.instanceCount;
            case 90:
                Test.instanceCount >>= i3;
                break;
            case 91:
                Test.instanceCount = i12;
                break;
            case 92:
                i4 -= (int)f2;
                break;
            case 93:
                iArr1[i11 + 1] -= i3;
                break;
            }
        }
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i11 + i12
            + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth(byte by, float f) {

        short s1=-614;
        int i1=-141, i2=-5, i13=12, i14=0, i15=26, i16=247, iArr[]=new int[N];
        long l=-5L;
        float f1=78.101F;
        double d2=115.85139;

        FuzzerUtils.init(iArr, 7);

        s1 *= (short)((Test.instanceCount++) + ((i1 - i1) * (i1++)));
        Test.lArrFld[(47258 >>> 1) % N] -= (--i1);
        l = 1;
        do {
            s1 += (short)(l | s1);
            for (f1 = 4; f1 > 1; f1 -= 2) {
                iArr[(int)(l + 1)] = (int)(Test.instanceCount * (2813537048922706300L / (((long)(57306L - (f - i1))) |
                    1)));
                vMeth1(i2, 123);
            }
            for (i13 = 1; i13 < 4; ++i13) {
                for (i15 = 1; i15 < 2; i15++) {
                    d2 -= i14;
                    i16 += (int)1.375F;
                }
            }
            iArr[(int)(l - 1)] += i2;
            i2 = -20578;
            try {
                i1 = (i2 % i15);
                i16 = (i16 % i1);
                i2 = (-32799 / i14);
            } catch (ArithmeticException a_e) {}
            iArr[(int)(l)] *= i14;
        } while (++l < 389);
        vMeth_check_sum += by + Float.floatToIntBits(f) + s1 + i1 + l + Float.floatToIntBits(f1) + i2 + i13 + i14 + i15
            + i16 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i17=-11, i18=3, i19=-5, i20=9, i21=48502, i22=152, i23=-34816, i24=-11378, i25=-38153, i26=-59,
            i27=55968;
        short s=27693;
        float f3=0.757F;
        double d3=-38.11322;

        Test.fArrFld[(i >>> 1) % N] += (((s++) + (i - i)) + (i--));
        vMeth((byte)(42), f3);
        for (i17 = 11; i17 < 339; i17 += 3) {
            i18 >>= Test.byFld;
        }
        i = i17;
        for (i19 = 1; i19 < 135; ++i19) {
            Test.instanceCount += i19;
            f3 += (((i19 * f3) + i19) - Test.byFld);
            i = i20;
            i21 = 1;
            do {
                i *= i17;
                switch (((i20 >>> 1) % 4) + 46) {
                case 46:
                    switch (((i18 >>> 1) % 4) + 81) {
                    case 81:
                        Test.instanceCount = 12L;
                        i18 *= (int)Test.instanceCount;
                        break;
                    case 82:
                        for (i22 = 1; i22 < 1; ++i22) {
                            Test.instanceCount >>= i23;
                        }
                    case 83:
                        i18 -= i20;
                        for (i24 = 1; 1 > i24; i24++) {
                            i20 <<= i18;
                            i25 *= (int)f3;
                            Test.iArrFld = Test.iArrFld;
                            d3 *= i17;
                        }
                        Test.fArrFld[i21] *= i24;
                        for (i26 = 1; i26 < 1; ++i26) {
                            i = i;
                            d3 = i19;
                        }
                    case 84:
                        i18 += (((i21 * i25) + i22) - Test.instanceCount);
                    }
                    Test.bFld = true;
                    break;
                case 47:
                    i20 += Test.byFld;
                    break;
                case 48:
                    Test.iArrFld[i19 + 1] = i18;
                    break;
                case 49:
                    Test.instanceCount ^= Test.instanceCount;
                    break;
                default:
                    Test.iArrFld = Test.iArrFld;
                }
            } while (++i21 < 187);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
