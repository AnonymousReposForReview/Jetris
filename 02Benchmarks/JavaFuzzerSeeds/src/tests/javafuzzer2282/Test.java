package tests.javafuzzer2282;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:27:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-33L;
    public boolean bFld=false;
    public float fFld=-102.485F;
    public static long lFld=-104L;
    public volatile int iArrFld[]=new int[N];
    public volatile float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth2() {

        short s=-20910;
        int i2=-11943, i3=-134, i4=8, i6=6, i7=7, i8=7, i9=-11;

        s += (short)i2;
        for (i3 = 6; i3 < 165; ++i3) {
            if (bFld) {
                if (bFld) {
                    i2 += (int)(-2.913F + (i3 * i3));
                    i4 <<= i4;
                    i2 <<= i2;
                    Test.instanceCount = i3;
                    vMeth2_check_sum += s + i2 + i3 + i4 + i6 + i7 + i8 + i9;
                    return;
                }
                for (i6 = i3; i6 < 10; ++i6) {
                    fFld += fFld;
                    i7 >>>= s;
                }
                bFld = bFld;
                for (i8 = 10; i8 > 1; i8 -= 2) {
                    if (i4 != 0) {
                        vMeth2_check_sum += s + i2 + i3 + i4 + i6 + i7 + i8 + i9;
                        return;
                    }
                    if (bFld) continue;
                }
            } else {
                iArrFld[i3] = i2;
            }
        }
        vMeth2_check_sum += s + i2 + i3 + i4 + i6 + i7 + i8 + i9;
    }

    public void vMeth1(int i, long l) {

        int i1=211, i10=-185, i11=-8, i12=-131;
        byte by=-123;
        double d=0.17320;
        short s1=-27028;

        i1 = 1;
        do {
            vMeth2();
            i = i;
            fFld = 3;
        } while (++i1 < 163);
        i *= i;
        l -= i1;
        Test.instanceCount = i1;
        i >>= by;
        for (i10 = 4; 156 > i10; ++i10) {
            fFld -= -61226;
            i11 += (((i10 * i1) + fFld) - i10);
            switch (((i10 % 9) * 5) + 30) {
            case 65:
                i12 = 1;
                while (++i12 < 10) {
                    i11 += i12;
                    l = i12;
                }
                break;
            case 46:
                iArrFld[i10 - 1] = i10;
            case 56:
                if (i12 != 0) {
                    vMeth1_check_sum += i + l + i1 + by + i10 + i11 + i12 + Double.doubleToLongBits(d) + s1;
                    return;
                }
                break;
            case 75:
                i *= (int)Test.instanceCount;
                break;
            case 58:
            case 68:
                i11 = (int)d;
                break;
            case 50:
                i11 <<= s1;
                break;
            case 66:
                l += i10;
            case 49:
                i += i1;
                break;
            }
        }
        vMeth1_check_sum += i + l + i1 + by + i10 + i11 + i12 + Double.doubleToLongBits(d) + s1;
    }

    public void vMeth() {

        int i13=27395, i14=43152, i15=217, i16=-10, i17=-114, i18=148, i19=1, i20=52421;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)25500);

        vMeth1(i13, Test.instanceCount);
        i13 += i13;
        i14 = 393;
        while (--i14 > 0) {
            i15 = 4;
            do {
                i13 += i13;
            } while (--i15 > 0);
            Test.instanceCount = Test.instanceCount;
            if (i15 != 0) {
                vMeth_check_sum += i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(sArr);
                return;
            }
            for (i16 = 1; i16 < 4; ++i16) {
                for (i18 = 1; i18 < 2; i18++) {
                    Test.instanceCount = i14;
                }
                i20 = 1;
                while ((i20 += 3) < 2) {
                    iArrFld[i20 + 1] <<= -2;
                    i17 += (i20 ^ Test.instanceCount);
                    sArr[i16 + 1] >>>= (short)i15;
                    i17 *= i17;
                }
            }
        }
        vMeth_check_sum += i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=1493, i22=-4, i23=65321, i24=127, i25=238, i26=250, i27=-49, i28=-150, i29=-210, i30=-100, i31=202,
            i32=19682;
        byte by1=108;
        short s3=21078;

        vMeth();
        for (i21 = 7; i21 < 190; ++i21) {
            fFld = i22;
            by1 += (byte)i22;
        }
        i22 >>= (int)Test.instanceCount;
        iArrFld[(140 >>> 1) % N] <<= i21;
        fFld -= i22;
        i22 -= i21;
        switch (((i22 >>> 1) % 4) + 25) {
        case 25:
            Test.lFld = i22;
            break;
        case 26:
            i22 = i22;
            for (i23 = 5; i23 < 166; i23++) {
                short s2=15892;
                i22 += (((i23 * by1) + fFld) - s2);
            }
            break;
        case 27:
            for (i25 = 15; i25 < 243; ++i25) {
                i22 -= i25;
                i22 += i25;
            }
            iArrFld[(i24 >>> 1) % N] = i23;
            break;
        case 28:
            i27 = 1;
            while (++i27 < 131) {
                for (i28 = 191; 8 < i28; i28 -= 3) {
                    try {
                        i22 = (134 / iArrFld[i28]);
                        i29 = (iArrFld[i27 - 1] / -197);
                        i29 = (iArrFld[i27] % 102);
                    } catch (ArithmeticException a_e) {}
                }
                fFld = Test.lFld;
                for (i30 = 4; 191 > i30; ++i30) {
                    i22 >>= (int)Test.lFld;
                    i32 = 2;
                    do {
                        fArrFld[i30 - 1] -= fFld;
                        by1 += (byte)(((i32 * i30) + Test.instanceCount) - i29);
                        switch ((i27 % 2) + 69) {
                        case 69:
                            i26 = i26;
                            s3 += (short)(i32 * Test.instanceCount);
                            s3 -= (short)-33657;
                            break;
                        case 70:
                            i26 += i30;
                            break;
                        default:
                            try {
                                i22 = (i28 / -21366);
                                i26 = (i30 % i26);
                                i31 = (i29 % 107);
                            } catch (ArithmeticException a_e) {}
                        }
                    } while (--i32 > 0);
                }
            }
            break;
        default:
            fFld -= i21;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
