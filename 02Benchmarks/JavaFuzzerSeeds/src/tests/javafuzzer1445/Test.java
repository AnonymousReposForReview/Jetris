package tests.javafuzzer1445;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 20:49:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public int iFld=115;
    public short sFld=15736;
    public static double dFld=1.35037;
    public static int iFld1=58923;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 157);
        FuzzerUtils.init(Test.lArrFld, -51703L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d, float f3) {

        int i10=230, i11=-28, i12=8, i13=2, i14=5, i15=-12, i16=-37945;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)23704);

        i10 *= (int)Test.instanceCount;
        for (i11 = 16; i11 < 354; ++i11) {
            for (i13 = i11; 5 > i13; i13++) {
                i10 = i11;
                f3 -= 54419;
                f3 *= i10;
                for (i15 = 1; i15 < 1; i15++) {
                    switch ((((i11 >>> 1) % 2) * 5) + 31) {
                    case 41:
                        i10 -= i14;
                        break;
                    case 35:
                        i10 += i13;
                        break;
                    }
                    i16 = (int)d;
                    Test.instanceCount = 37339;
                    sArr[i15] = (short)-997032186L;
                }
                i14 |= i10;
                d = i16;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f3) + i10 + i11 + i12 + i13 + i14 + i15 +
            i16 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(float f1, float f2) {

        byte by=-116;
        int i7=-3, i8=-19, i9=-32707, i17=-12, i18=-193, iArr[]=new int[N];
        short s1=25100;
        double d1=1.12813;
        boolean b1=true;

        FuzzerUtils.init(iArr, -21609);

        for (int i6 : iArr) {
            by += (byte)(--iArr[(i6 >>> 1) % N]);
        }
        Test.instanceCount >>= (((i7 - -2535867727466318319L) + i7) - ((i7 * i7) * (Test.instanceCount - i7)));
        for (i8 = 11; i8 < 322; i8++) {
            s1 -= (short)((i7 - Math.min(i9, i7)) - ((i7 = (int)Test.instanceCount) - (--i7)));
        }
        vMeth2(d1, f1);
        i7 = -50531;
        i9 = i7;
        if (b1) {
            i7 = i9;
        } else if (b1) {
            i7 += -25;
            by = (byte)i8;
            for (i17 = 6; i17 < 342; i17++) {
                Test.instanceCount = i9;
                Test.instanceCount = Test.instanceCount;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + by + i7 + i8 + i9 + s1 +
            Double.doubleToLongBits(d1) + i17 + i18 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        float f4=1.334F, f5=62.268F;
        int i19=9, i20=44, i21=-219, i22=181;

        vMeth1(f4, f4);
        Test.iArrFld[(iFld >>> 1) % N] -= iFld;
        Test.iArrFld = Test.iArrFld;
        for (f5 = 16; 352 > f5; f5 += 3) {
            for (i20 = 1; i20 < 14; i20++) {
                iFld *= 62545;
                i19 >>= i21;
                Test.iArrFld[i20] = (int)Test.instanceCount;
                sFld >>= (short)i19;
                Test.iArrFld[(int)(f5)] -= (int)f5;
                Test.dFld += 29.569F;
                iFld = (int)f4;
            }
        }
        i22 = 1;
        while (++i22 < 345) {
            i21 = i21;
            iFld += i22;
        }
        vMeth_check_sum += Float.floatToIntBits(f4) + Float.floatToIntBits(f5) + i19 + i20 + i21 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i=-146, i1=-58557, i2=-1, i3=249, i4=-32885, i5=-4, i23=-33666, i24=9, i25=9625, i26=44570;
        boolean b=false;
        short s=-31423;
        float f=-124.401F;

        for (i = 9; i < 293; ++i) {
            for (i2 = 2; i2 < 89; ++i2) {
                if (b) break;
                Test.instanceCount += (3205767414L + (i2 * i2));
                switch ((i2 % 3) + 30) {
                case 30:
                    switch ((i % 2) + 86) {
                    case 86:
                        i3 -= (int)(s >> (long)((f + i1) - (i - i2)));
                        switch (((i % 2) * 5) + 98) {
                        case 101:
                            i3 += (((i2 * Test.instanceCount) + i) - i1);
                            for (i4 = 1; i4 < 2; ++i4) {
                                if (b) continue;
                                vMeth();
                                i5 = i;
                                b = b;
                                f = i3;
                                Test.instanceCount *= (long)1.20286;
                                Test.instanceCount += i3;
                                b = b;
                                i1 >>>= (int)1166683601L;
                                Test.lArrFld[i + 1][i] += iFld;
                            }
                            Test.iArrFld[i] += (int)Test.instanceCount;
                            break;
                        case 102:
                            iFld += i5;
                            iFld += i2;
                            Test.instanceCount -= i2;
                            break;
                        }
                        break;
                    case 87:
                    }
                    for (i23 = i2; 2 > i23; i23++) {
                        if (b) break;
                        i1 = i5;
                    }
                    break;
                case 31:
                    for (i25 = 2; i25 > 1; --i25) {
                        i26 <<= (int)Test.instanceCount;
                    }
                    Test.instanceCount += i24;
                    break;
                case 32:
                default:
                    i26 = Test.iFld1;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
