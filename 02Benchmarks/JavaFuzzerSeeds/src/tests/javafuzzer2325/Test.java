package tests.javafuzzer2325;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 12:21:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8L;
    public static volatile int iFld=25760;
    public static boolean bFld=false;
    public byte byFld=-47;
    public static long lArrFld[]=new long[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -5130L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i7) {

        int i8=-1, i9=32, i10=55367, i11=-10, i12=153, i13=65, iArr[][]=new int[N][N];
        float f1=-108.565F;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 56139);
        FuzzerUtils.init(lArr, -12L);

        iArr[(i7 >>> 1) % N][(i7 >>> 1) % N] <<= i7;
        for (i8 = 4; i8 < 300; ++i8) {
            for (i10 = 1; i10 < 6; ++i10) {
                Test.instanceCount -= Test.instanceCount;
                if (b1) {
                    switch ((((i10 >>> 1) % 2) * 5) + 21) {
                    case 31:
                        for (i12 = 1; i12 < 2; ++i12) {
                            Test.instanceCount = Test.instanceCount;
                            i7 ^= i10;
                            i9 = (int)f1;
                            switch ((i8 % 1) + 96) {
                            case 96:
                            }
                            iArr[i10][i12] += i13;
                            Test.instanceCount = -1;
                            i13 += (((i12 * Test.instanceCount) + i10) - i7);
                        }
                        break;
                    case 29:
                        i11 += i10;
                        break;
                    default:
                        i13 = -2;
                    }
                } else if (b1) {
                    i11 += i11;
                } else if (b1) {
                    i7 = Test.iFld;
                } else {
                    lArr[i10 - 1] = i9;
                }
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i3, int i4) {

        int i5=-6234, i6=-19, i14=43516, i15=-219, i16=-9, i17=13, iArr1[]=new int[N];
        boolean b=false, bArr[]=new boolean[N];
        float f2=-1.504F, fArr[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, 9);
        FuzzerUtils.init(sArr, (short)-11286);
        FuzzerUtils.init(fArr, 83.322F);

        for (i5 = 8; 169 > i5; ++i5) {
            short s=6463;
            if (b = bArr[i5 - 1]) continue;
            Test.instanceCount = s;
            vMeth2(i3);
            i4 += i5;
            iArr1[i5 + 1] += Test.iFld;
            iArr1[i5] <<= (int)Test.instanceCount;
            Test.lArrFld[i5] *= Test.iFld;
            i6 = (int)Test.instanceCount;
        }
        for (i14 = 1; i14 < 171; ++i14) {
            for (i16 = 1; i16 < 9; ++i16) {
                i15 <<= i16;
                Test.iFld |= i3;
                i3 += (((i16 * Test.instanceCount) + f2) - i4);
            }
            fArr[i14 - 1] = 4;
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + (b ? 1 : 0) + i14 + i15 + i16 + i17 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(float f) {

        int i=112, i1=-6502, i2=6, i18=7, i19=10, i20=-27, i21=-12, i22=-12;
        double d=2.82764;
        float f3=1.123F;
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(bArr1, false);

        i -= (i--);
        for (i1 = 5; i1 < 142; i1++) {
            vMeth1(Test.iFld, 63440);
            for (d = i1; d < 11; d++) {
                for (i19 = 1; i19 < 1; ++i19) {
                    iArrFld[i1 - 1] = (int)-6112935084609057080L;
                }
            }
            f += i20;
            f3 = 1;
            do {
                i <<= Test.iFld;
                iArrFld[(int)(f3)] -= i18;
            } while (++f3 < 11);
        }
        for (i21 = 20; i21 < 344; i21++) {
            i20 = i19;
            Test.instanceCount += (i21 + i);
            Test.bFld = Test.bFld;
            bArr1[i21 - 1] = Test.bFld;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + Double.doubleToLongBits(d) + i18 + i19 + i20 +
            Float.floatToIntBits(f3) + i21 + i22 + FuzzerUtils.checkSum(bArr1);
    }

    public void mainTest(String[] strArr1) {

        int i23=-62747, i24=6, i25=9, i26=-35, i27=-5, i28=8, i29=-32, i30=-59550;
        short s2=-27241;
        float f4=17.794F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)93);

        vMeth(1.119F);
        iArrFld[(Test.iFld >>> 1) % N] -= -41461;
        for (i23 = 8; i23 < 194; i23++) {
            double d1=-1.21855;
            i24 += i24;
            Test.iFld = (int)Test.instanceCount;
            switch ((((Test.iFld >>> 1) % 4) * 5) + 102) {
            case 115:
                byFld = byFld;
                break;
            case 117:
                d1 = -1020;
            case 110:
                switch (((i23 % 3) * 5) + 25) {
                case 32:
                    i24 += -21743;
                    break;
                case 29:
                    for (i25 = 7; 135 > i25; ++i25) {
                        i24 = (int)Test.instanceCount;
                        for (i27 = 1; 2 > i27; i27++) {
                            i24 = (int)Test.instanceCount;
                            i28 = i24;
                            byArr[i27 - 1] *= (byte)i28;
                            Test.iFld *= i24;
                            Test.instanceCount += s2;
                        }
                        Test.iFld += (((i25 * i24) + f4) - i24);
                        Test.instanceCount += (((i25 * i28) + i24) - i27);
                        Test.iFld -= byFld;
                        for (i29 = 1; i29 < 2; ++i29) {
                            i26 /= (int)178L;
                            s2 += (short)Test.instanceCount;
                            d1 += i30;
                            i28 = i27;
                            i24 = Test.iFld;
                            iArrFld[i23] += (int)Test.instanceCount;
                            f4 *= (float)d1;
                        }
                        i30 += (i25 - Test.instanceCount);
                    }
                    break;
                case 33:
                    d1 = 0.491F;
                }
                break;
            case 121:
                Test.instanceCount += (i23 ^ i23);
            default:
                i28 = i29;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
