package tests.javafuzzer1048;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:22:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static short sFld=-20240;
    public long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)9359);
        FuzzerUtils.init(Test.byArrFld, (byte)-50);
        FuzzerUtils.init(Test.iArrFld, 212);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9, int i10, int i11) {

        short s=-28157;
        float f2=1.942F;

        s *= (short)f2;
        vMeth1_check_sum += i9 + i10 + i11 + s + Float.floatToIntBits(f2);
    }

    public static void vMeth(int i8, long l, long l1) {

        float f3=92.508F;
        byte by=84;
        int i12=65, i13=18, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -13);

        vMeth1(i8, i8, i8);
        i8 = i8;
        f3 = i8;
        iArr1[(i8 >>> 1) % N] *= by;
        for (i12 = 12; i12 < 240; ++i12) {
            i8 = (int)l;
            i8 += i12;
            i13 >>= i8;
            i13 += (i12 ^ i12);
        }
        i13 >>>= (int)-190904042081515970L;
        i8 >>= i8;
        vMeth_check_sum += i8 + l + l1 + Float.floatToIntBits(f3) + by + i12 + i13 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        int i2=11, i3=-15860, i4=-3547, i5=18016, i6=63825, i7=-222, i14=242, iArr[]=new int[N];
        double d=111.129013;
        float f1=107.995F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -47964);
        FuzzerUtils.init(lArr, -315588023L);

        i2 -= (int)((i2 * (i2 >>= 12463)) - (--d));
        f1 -= iArr[(i2 >>> 1) % N];
        i3 = 1;
        while (++i3 < 177) {
            for (i4 = 9; i4 > 1; i4 -= 3) {
                i5 += (i4 ^ Test.instanceCount);
                i5 <<= (--iArr[i3]);
                for (i6 = 1; i6 < 5; ++i6) {
                    vMeth(i3, Test.instanceCount, 0L);
                }
                f1 = i4;
                i7 >>= i5;
                lArr[i4] = i5;
                i7 += (i4 + i4);
                i7 += i7;
            }
            i14 += (int)(-4709668822933164828L + (i3 * i3));
            i5 -= (int)Test.instanceCount;
        }
        long meth_res = i2 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + i7 + i14 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-71, i1=68, i15=-27981, i16=36816, i17=11, i18=44722, i19=-10, i20=-1;
        float f=53.75F, fArr[]=new float[N];
        boolean b=false;
        double d1=-64.54378, d2=60.128793;

        FuzzerUtils.init(fArr, 98.836F);

        i = 1;
        while (++i < 364) {
            i1 *= (int)Math.min(Test.instanceCount, ++Test.instanceCount);
            lArrFld[i - 1] *= -10;
            f = (iMeth() / ((long)(f) | 1));
            i1 = i1;
            for (i15 = 1; i15 < 69; i15++) {
                Test.sArrFld[i15 - 1] = (short)i;
            }
            Test.byArrFld = Test.byArrFld;
            i16 -= 56371;
            i1 = Test.sFld;
            if (true) continue;
            Test.instanceCount = 0;
        }
        i17 = 1;
        do {
            for (i18 = 4; i18 < 88; i18++) {
                lArrFld[i18 + 1] += 176L;
                try {
                    i19 = (9350 % i17);
                    Test.iArrFld[i18] = (i18 % -22);
                    i19 = (i16 % i19);
                } catch (ArithmeticException a_e) {}
                b = false;
                for (d1 = 1; d1 < 2; d1++) {
                    Test.iArrFld = Test.iArrFld;
                    i16 = i19;
                }
                d2 = 1;
                do {
                    i1 += (int)(d2 - i17);
                    i1 += (int)6255620868624120970L;
                    i1 += i;
                    b = false;
                    b = false;
                } while (++d2 < 2);
                Test.iArrFld[i18] *= i17;
                fArr[i17] += i17;
                Test.instanceCount += -55980;
                i16 >>= i15;
            }
        } while (++i17 < 286);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
