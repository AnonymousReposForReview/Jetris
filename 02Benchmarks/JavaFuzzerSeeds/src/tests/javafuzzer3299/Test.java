package tests.javafuzzer3299;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:40:40 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static double dFld=-38.109951;
    public float fFld=-73.700F;
    public short sFld=-12089;

    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l, long l1) {

        int i8=41674;

        l1 *= i8;
        i8 ^= 4877;
        vMeth_check_sum += l + l1 + i8;
    }

    public int iMeth(int i7) {


        Test.dFld = (++i7);
        vMeth(Test.instanceCount, Test.instanceCount);
        i7 -= -2794;
        long meth_res = i7;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public short sMeth(int i, int i1) {

        int i2=-10774, i3=89, i4=-12, i5=6, i6=15337, i9=317, i10=19, iArr[]=new int[N];
        double d=1.70605;
        long l2=-2762102228630505697L, lArr[]=new long[N];
        float f=11.172F, fArr[]=new float[N];
        boolean b=false;

        FuzzerUtils.init(iArr, -137);
        FuzzerUtils.init(lArr, -3818120248414463827L);
        FuzzerUtils.init(fArr, 105.564F);

        for (i2 = 1; i2 < 290; i2++) {
            iArr[i2] = (int)((lArr[i2] + (fArr[i2 + 1]++)) + (iArr[i2 - 1]++));
            Test.instanceCount = (long)(((i3 - i2) - (i - -157)) * (d += i1));
            i1 += (i1 + (--i1));
            if (false) {
                i4 = (i4 + 1);
            } else if (b) {
                for (i5 = 6; i5 > 1; i5 -= 2) {
                    Test.instanceCount <<= (i6++);
                    i6 = (Integer.reverseBytes((int)(Test.instanceCount - i2)) - iMeth(i1));
                    for (i9 = i5; i9 < 3; i9++) {
                        Test.instanceCount >>>= l2;
                        iArr[i5] = i5;
                        Test.instanceCount = Test.instanceCount;
                        i1 += (11 + (i9 * i9));
                        f += (((i9 * f) + i5) - i1);
                    }
                }
            } else if (b) {
                l2 += i2;
            }
        }
        long meth_res = i + i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i9 + i10 + l2 +
            Float.floatToIntBits(f) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by=-56;
        int i11=58025, i12=96, i13=-3, i14=20, i15=2518, i16=0, i17=-13, i19=14, i20=159, i21=-4789, i22=0, iArr1[]=new
            int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, 183);

        by = (byte)(sMeth(i11, i11) - i11);
        for (i12 = 12; i12 < 312; i12++) {
            i11 -= i12;
            fFld = i11;
            for (i14 = 4; i14 < 84; ++i14) {
                fFld += fFld;
            }
            if (b1) {
                for (i16 = i12; i16 < 84; i16++) {
                    int i18=3;
                    fFld -= i18;
                    switch ((i16 % 4) + 76) {
                    case 76:
                        Test.dFld = i18;
                        break;
                    case 77:
                        for (i19 = i16; i19 < 1; ++i19) {
                            iArr1[i16 - 1] *= i11;
                            i18 += (-55435 + (i19 * i19));
                            iArr1[i19] ^= -11438;
                            Test.dFld *= i13;
                            sFld += (short)(((i19 * i15) + sFld) - i13);
                            i17 *= by;
                            Test.instanceCount <<= 14L;
                            fFld = sFld;
                            i18 += (int)-1582113378L;
                            iArr1[i16] &= (int)Test.instanceCount;
                        }
                        iArr1[i12 - 1] *= (int)Test.instanceCount;
                        fFld += i16;
                        break;
                    case 78:
                        i13 = (int)38L;
                        i21 = 1;
                        do {
                            if (b1) break;
                            Test.instanceCount += i13;
                            by += (byte)(i21 * i21);
                            b1 = true;
                        } while (++i21 < 1);
                    case 79:
                        i22 += i14;
                    default:
                        try {
                            i22 = (28396 % i14);
                            i20 = (i20 / iArr1[i16 - 1]);
                            i22 = (iArr1[i12] % i17);
                        } catch (ArithmeticException a_e) {}
                    }
                }
            } else {
                Test.instanceCount *= Test.instanceCount;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
