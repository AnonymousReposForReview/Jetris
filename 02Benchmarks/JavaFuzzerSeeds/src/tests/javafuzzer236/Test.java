package tests.javafuzzer236;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:40:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3976287599L;
    public static int iFld=-5810;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, float f, int i4) {

        int i5=-36553;
        short s=23412;

        f = i4;
        i5 = i4;
        s -= (short)f;
        vMeth2_check_sum += l + Float.floatToIntBits(f) + i4 + i5 + s;
    }

    public static void vMeth1() {

        float f1=0.659F, fArr[][]=new float[N][N];
        int i6=-13004, i7=8, i8=-176, i9=4, i10=-34181, i11=44393, i12=46682, i13=-215, iArr[][]=new int[N][N];
        byte by=-118;

        FuzzerUtils.init(iArr, 14);
        FuzzerUtils.init(fArr, -1.671F);

        vMeth2(Test.instanceCount, f1, Test.iFld);
        for (i6 = 16; i6 < 278; i6++) {
            for (i8 = 1; i8 < 6; ++i8) {
                iArr[i8] = iArr[i6 + 1];
                i7 >>= i7;
            }
            for (i10 = 1; i10 < 6; ++i10) {
                i11 += (i10 + Test.instanceCount);
                i7 += (i10 ^ i7);
                for (i12 = 1; i12 < 2; i12++) {
                    i13 += (((i12 * i9) + Test.iFld) - by);
                    iArr[i10 + 1][i6] = i11;
                    Test.iFld += i12;
                    fArr = fArr;
                    i9 += i12;
                    Test.instanceCount += i9;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + by +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i=8, i1=217, i2=254, i3=-16346, i14=-58, i15=5424, i16=-13, iArr1[][]=new int[N][N];
        double d=-33.109196;
        boolean b=true;
        float f3=98.700F;
        short s1=-2350;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -243);
        FuzzerUtils.init(lArr, -2006087272L);

        for (i = 9; i < 393; ++i) {
            for (i2 = 1; i2 < 4; ++i2) {
                i1 >>>= (int)((1 + (i2 - Test.instanceCount)) + Integer.reverseBytes(213));
                vMeth1();
                switch ((i2 % 8) + 109) {
                case 109:
                    iArr1[i][i + 1] = 1;
                    for (i14 = 1; i14 < 2; ++i14) {
                        float f2=1.681F;
                        switch ((i2 % 1) + 109) {
                        case 109:
                            d = Test.instanceCount;
                            f2 = i3;
                            if (b) continue;
                            Test.instanceCount += (i14 ^ Test.instanceCount);
                        default:
                            Test.iFld += i3;
                            lArr[i2 + 1] = i2;
                        }
                        f2 = (float)-81.16829;
                    }
                    break;
                case 110:
                    i3 += (i2 + Test.instanceCount);
                    break;
                case 111:
                    try {
                        iArr1[i + 1][i2 + 1] = (i1 % -64186);
                        i1 = (-286497163 / i16);
                        i15 = (iArr1[i2 - 1][i2] / -29150);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 112:
                    f3 += i14;
                    break;
                case 113:
                    Test.iFld = (int)Test.instanceCount;
                case 114:
                    i15 = i2;
                    break;
                case 115:
                    iArr1[i + 1][i] = 24980;
                case 116:
                    s1 = (short)i14;
                    break;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i14 + i15 + Double.doubleToLongBits(d) + (b ? 1 : 0) + i16 +
            Float.floatToIntBits(f3) + s1 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {


        vMeth();



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
