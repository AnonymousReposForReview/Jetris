package tests.javafuzzer1404;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:47:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4935L;
    public static float fFld=-102.534F;
    public static byte byFld=-122;
    public static double dFld=1.21099;
    public short sFld=-5866;
    public static volatile int iFld=-33200;
    public static int iArrFld[]=new int[N];
    public static volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.sArrFld, (short)-24383);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i7, byte by) {

        long l4=-155L, lArr[]=new long[N];
        int i8=11, i9=-24566, i10=-42415;
        short s=-11200;

        FuzzerUtils.init(lArr, -4904633012799959284L);

        for (long l3 : lArr) {
            i7 ^= (int)Test.instanceCount;
            i7 -= i7;
            Test.fFld = 218L;
            i7 = -12;
            l3 = (long)103.770F;
            Test.iArrFld[(213 >>> 1) % N] = 135;
            for (l4 = 1; l4 < 4; ++l4) {
                i8 >>>= i7;
                i8 += (int)(l4 - l4);
                for (i9 = 1; i9 < 2; ++i9) {
                    Test.iArrFld[i9 - 1] *= s;
                    Test.instanceCount = i8;
                    Test.iArrFld[i9 - 1] -= (int)l4;
                    lArr[i9 - 1] -= i8;
                }
            }
        }
        long meth_res = i7 + by + l4 + i8 + i9 + i10 + s + FuzzerUtils.checkSum(lArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i6, long l2) {

        long l5=-19L;
        int i11=0, i12=14, i13=122, i14=-160, i15=-172;

        i6 >>= (int)(iMeth2(i6, Test.byFld) + l2);
        for (l5 = 5; l5 < 352; ++l5) {
            for (i12 = (int)(l5); i12 < 5; ++i12) {
                Test.iArrFld[(int)(l5)] = i11;
                i13 &= i11;
                switch ((i12 % 4) + 98) {
                case 98:
                    for (i14 = 1; i14 > 1; --i14) {
                        Test.dFld += i6;
                        Test.sArrFld = FuzzerUtils.short1array(N, (short)-1822);
                        Test.iArrFld[i12] = -59;
                        Test.byFld = (byte)Test.fFld;
                        i13 += (i14 * i14);
                        try {
                            Test.iArrFld[i14 - 1] = (-64267 % i13);
                            Test.iArrFld[(int)(l5 - 1)] = (-112 / i6);
                            i15 = (Test.iArrFld[i12 + 1] % 66);
                        } catch (ArithmeticException a_e) {}
                        i13 *= (int)Test.dFld;
                    }
                    i6 += (int)l2;
                case 99:
                    i6 -= (int)Test.instanceCount;
                    break;
                case 100:
                    Test.fFld += i11;
                    break;
                case 101:
                    i15 = (int)l5;
                    break;
                }
            }
        }
        long meth_res = i6 + l2 + l5 + i11 + i12 + i13 + i14 + i15;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l, int i1) {

        double d=-1.86457;
        int i2=-20986, i3=-2, i4=-54, i5=-3256;
        long l1=-7928506048557013856L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)79);

        d -= (--Test.fFld);
        i2 = 1;
        do {
            for (i3 = 1; i3 < 12; i3++) {
                i4 -= i4;
                i4 >>= Test.iArrFld[i2];
                Test.iArrFld[i2 + 1] -= (int)(((l * i1) + (-7 - (i4 += (int)Test.instanceCount))) - ((Test.fFld + 49) -
                    (l1 - -9)));
                i5 = 1;
                do {
                    d -= ((Math.abs(i4) + iMeth1(i4, -7886648399552697033L)) + i1);
                    i1 <<= -1005;
                    l1 += i4;
                    byArr = byArr;
                } while (++i5 < 2);
                i4 *= Test.byFld;
                i1 *= i1;
                i4 &= i5;
                i4 += (((i3 * i5) + Test.fFld) - i5);
            }
        } while (++i2 < 126);
        long meth_res = l + i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + l1 + i5 + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=53798, i16=6, i17=46, i18=-195, i19=-76, i20=3, i21=0;
        float fArr[]=new float[N];
        double dArr[][]=new double[N][N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(fArr, 114.72F);
        FuzzerUtils.init(dArr, -108.86064);
        FuzzerUtils.init(bArr, true);

        i = 1;
        while (++i < 181) {
            fArr[i] -= iMeth(Test.instanceCount, i);
            for (i16 = 7; i16 < 139; ++i16) {
                i17 = i16;
                for (i18 = 1; i18 < 2; i18++) {
                    i19 = (int)Test.instanceCount;
                }
                i17 += (i16 ^ i16);
                dArr[i - 1][i + 1] += i;
                i19 = i;
                Test.instanceCount >>= i;
                for (i20 = 1; i20 < 2; i20++) {
                    sFld = (short)Test.instanceCount;
                    bArr[i16] = true;
                    switch ((i16 % 4) + 98) {
                    case 98:
                        Test.iFld += (((i20 * i20) + Test.fFld) - i18);
                        Test.byFld -= (byte)Test.instanceCount;
                        break;
                    case 99:
                        Test.instanceCount = i16;
                        break;
                    case 100:
                        Test.instanceCount = Test.instanceCount;
                        Test.iFld += 30103;
                        fArr[i20 - 1] *= (float)Test.dFld;
                        Test.iArrFld = Test.iArrFld;
                    case 101:
                        i19 *= i16;
                        i17 += (int)Test.dFld;
                        switch ((i16 % 1) + 108) {
                        case 108:
                            Test.iArrFld[i16 - 1] <<= (int)Test.instanceCount;
                            break;
                        default:
                            i19 = 30547;
                        }
                    }
                    Test.iFld += (int)84.11F;
                    i21 = i16;
                    Test.iFld *= (int)Test.fFld;
                    Test.iFld += i20;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
