package tests.javafuzzer2668;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:20:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=231L;
    public static short sFld=677;
    public static int iFld=4;
    public static volatile boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[][]=new double[N][N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5087550733555935822L);
        FuzzerUtils.init(Test.dArrFld, -5.16989);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, long l1) {

        int i4=-41816, i5=12, i6=56038, i7=-14, i8=-4, i9=65175, i10=-7, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 141);

        i4 = 1;
        do {
            l1 += i4;
            Test.lArrFld[i4 + 1] -= i4;
            i5 = (int)f;
        } while (++i4 < 341);
        i5 = i4;
        i5 *= (int)61832L;
        Test.dArrFld[(-33773 >>> 1) % N][(i5 >>> 1) % N] -= f;
        for (i6 = 7; i6 < 234; ++i6) {
            switch (((i6 % 4) * 5) + 37) {
            case 49:
                b = true;
                i8 = 1;
                do {
                    for (i9 = 1; i9 < 1; ++i9) {
                        iArr[i6] ^= (int)l1;
                        Test.instanceCount += 143L;
                        i7 -= i7;
                    }
                } while (++i8 < 7);
            case 53:
                i5 += (i6 * i6);
                break;
            case 51:
                i5 &= (int)Test.instanceCount;
                break;
            case 46:
                i5 += (-57 + (i6 * i6));
            default:
                Test.instanceCount += i6;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + l1 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + i10 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        float f1=-68.330F;
        int i11=-14583, i12=-76, i13=-10, i14=-10, i15=-91, iArr1[]=new int[N];
        double d1=-2.67201, d2=-1.57369;

        FuzzerUtils.init(iArr1, -46362);

        vMeth1(f1, Test.instanceCount);
        iArr1[(i11 >>> 1) % N] = i11;
        for (i12 = 303; i12 > 13; i12 -= 3) {
            iArr1[i12] = i13;
            i13 *= i11;
            d1 = 1;
            while (++d1 < 16) {
                i13 /= (int)((long)(d1) | 1);
                i11 = i12;
                for (i14 = 1; i14 > d1; i14 -= 3) {
                    i13 <<= i14;
                    d2 += i15;
                    Test.sFld = (short)-41;
                    Test.instanceCount /= 35514;
                    i11 %= (int)(i12 | 1);
                    i15 -= (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(long l, int i3) {

        int i16=3, i17=-13, i18=56886;
        boolean b1=false;

        i3 = i3;
        vMeth();
        for (i16 = 6; i16 < 236; ++i16) {
            Test.iFld <<= Test.iFld;
            i3 = 0;
            if (true) {
                Test.iFld -= i16;
            } else if (b1) {
                i18 = 1;
                do {
                    i17 += Test.iFld;
                    i17 = (int)l;
                    i17 = i16;
                } while (++i18 < 7);
                if (true) {
                    l *= i17;
                    Test.iFld = 173;
                    Test.iFld >>= i18;
                }
            }
        }
        long meth_res = l + i3 + i16 + i17 + i18 + (b1 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=221, i1=-54717, i2=7, i19=201, i20=-6, i21=69, i22=-130, i23=1;
        double d=-45.27614;
        long l2=1497116024894024396L;
        float f2=-123.705F, fArr[]=new float[N];
        byte by=-57;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(sArr, (short)31483);
        FuzzerUtils.init(fArr, 2.66F);

        i = 1;
        while (++i < 204) {
            for (i1 = i; i1 < 123; ++i1) {
                Test.instanceCount ^= Math.max((int)((++d) * (i + i1)), (i2 + -5) + (i / 4254));
                if (true) continue;
                Test.instanceCount += Test.instanceCount;
                i2 -= (int)(sArr[i - 1][i1] + (829492015L - (i1 - -235)));
                i2 >>= Math.abs(iMeth(l2, i1) + i);
                fArr[i1] *= i1;
                if (Test.bFld) continue;
                i2 = i;
                switch (((i19 >>> 1) % 2) + 84) {
                case 84:
                    for (i20 = 1; i20 < 1; ++i20) {
                        f2 *= 123;
                        i21 = i20;
                        i21 = (int)d;
                        l2 = i21;
                        i19 -= i19;
                        by -= (byte)-9L;
                        Test.instanceCount = i2;
                        if (Test.bFld) continue;
                        iArrFld[i20] = i19;
                        i2 = i19;
                    }
                    f2 = i1;
                    Test.instanceCount -= Test.iFld;
                    switch (((3420 >>> 1) % 8) + 31) {
                    case 31:
                    case 32:
                    case 33:
                        i21 >>= Test.sFld;
                        i21 = i21;
                        for (i22 = i1; i22 < 1; i22++) {
                            l2 = l2;
                            if (true) break;
                        }
                        break;
                    case 34:
                        l2 += (i1 + i);
                        break;
                    case 35:
                        d += 0.596F;
                    case 36:
                        iArrFld[i1 + 1] = i22;
                    case 37:
                        if (Test.bFld) continue;
                        break;
                    case 38:
                        Test.iFld >>= (int)7L;
                        break;
                    default:
                        Test.bFld = Test.bFld;
                    }
                    break;
                case 85:
                    i19 += -160;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
