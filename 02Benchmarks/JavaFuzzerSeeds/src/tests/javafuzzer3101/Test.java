package tests.javafuzzer3101;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:49:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=14L;
    public static int iFld=3;
    public byte byFld=-33;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -119L);
        FuzzerUtils.init(Test.iArrFld, -71);
    }

    public static long iMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(long l2, float f1) {

        boolean b=false, bArr[]=new boolean[N];
        double d1=0.112573;

        FuzzerUtils.init(bArr, false);

        Test.iFld = (int)Test.instanceCount;
        l2 = Test.iFld;
        bArr[(Test.iFld >>> 1) % N] = b;
        d1 = -122;
        Test.iFld = Test.iFld;
        b = false;
        Test.iFld = (int)l2;
        vMeth_check_sum += l2 + Float.floatToIntBits(f1) + (b ? 1 : 0) + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(bArr);
    }

    public static double dMeth(int i5, long l1) {

        int i6=-3, i7=-26317, i8=9, i9=23, i10=2, iArr[][]=new int[N][N];
        long l3=6791937816874116780L;
        byte by=-20;
        short s=-20384;

        FuzzerUtils.init(iArr, -10);

        i5 = (int)((l1 + Test.iFld) * (i5 + (Test.iFld--)));
        vMeth(Test.instanceCount, 2.584F);
        Test.iFld -= i5;
        for (i6 = 19; i6 < 331; i6++) {
            for (l3 = 5; l3 > 1; l3--) {
                i7 += 149;
                Test.iFld -= Test.iFld;
                for (i9 = 1; 2 > i9; i9 += 3) {
                    i7 -= (int)Test.instanceCount;
                    i10 *= i7;
                    by -= by;
                    s -= (short)l3;
                    iArr[(int)(l3)][(int)(l3 + 1)] = i8;
                }
                i5 += (int)l1;
                Test.lArrFld[i6 - 1] <<= i7;
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + l3 + i8 + i9 + i10 + by + s + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static int iMeth(int i2, long l) {

        int i3=-152, i4=10, i11=-32556, i12=251, i13=-84;
        float f=-1.282F, fArr[]=new float[N];
        boolean b1=true;

        FuzzerUtils.init(fArr, 0.942F);

        for (i3 = 7; i3 < 236; i3++) {
            f *= (float)dMeth(Test.iFld, l);
            i11 = 1;
            do {
                switch ((i3 % 2) + 72) {
                case 72:
                    f += (i11 - Test.iFld);
                    break;
                case 73:
                    for (i12 = 1; i12 > 1; i12--) {
                        f += Test.iFld;
                        Test.iArrFld[i12 - 1] -= i11;
                        fArr[i12 + 1] = Test.instanceCount;
                        i2 += -21758;
                        switch (((i11 % 1) * 5) + 113) {
                        case 116:
                            f += (-7794218824192058958L + (i12 * i12));
                            b1 = b1;
                            Test.iFld += i2;
                            if (i12 != 0) {
                            }
                            break;
                        default:
                            i2 = i11;
                        }
                    }
                default:
                    if (b1) break;
                }
            } while (++i11 < 7);
        }
        long meth_res = i2 + l + i3 + i4 + Float.floatToIntBits(f) + i11 + i12 + i13 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=82.35152;
        int i=6, i1=-5511, i14=6, i15=-10, i16=11;
        float f2=-52.416F;
        long l4=-7814421490777789430L;
        boolean b2=false;

        Test.instanceCount <<= Test.iFld;
        Test.instanceCount = (Test.iFld - (Test.iFld--));
        if (b2) {
            Test.iFld = (int)(5172 + (-(d - Test.iFld)));
            Test.iFld = (int)(((-(Test.iFld - -3818220901579577598L)) - (Test.iFld <<= (int)Test.instanceCount)) -
                Test.iFld);
            for (i = 4; i < 160; i++) {
                Test.iFld *= (int)((iMeth(i1, Test.instanceCount) + Test.iFld) * Test.instanceCount);
                Test.instanceCount = i;
                for (i14 = 5; i14 < 161; i14++) {
                    Test.iFld += (int)f2;
                    Test.iArrFld[i14] %= (int)(Test.iFld | 1);
                    for (l4 = 1; l4 < 2; l4++) {
                        switch ((int)((l4 % 6) + 69)) {
                        case 69:
                        case 70:
                            Test.instanceCount += 72;
                            i16 *= byFld;
                        case 71:
                            f2 *= l4;
                            break;
                        case 72:
                            Test.iFld *= (int)d;
                            d = i14;
                            break;
                        case 73:
                        case 74:
                            Test.iArrFld[i] = i16;
                            Test.instanceCount >>= Test.instanceCount;
                            Test.iArrFld[(int)(l4)] = (int)Test.instanceCount;
                            break;
                        default:
                            Test.instanceCount %= ((long)(f2) | 1);
                            switch (((i % 8) * 5) + 9) {
                            case 46:
                                byFld = (byte)5L;
                                break;
                            case 44:
                                i16 += (int)(((l4 * i14) + byFld) - i);
                            case 47:
                                Test.iFld -= i14;
                                f2 += 63106;
                                i15 <<= -10;
                                break;
                            case 36:
                                i15 -= (int)1.195F;
                                break;
                            case 24:
                                Test.instanceCount += Test.iFld;
                            case 22:
                                Test.instanceCount = i15;
                            case 43:
                            case 25:
                                i15 = i;
                                break;
                            default:
                                Test.iArrFld = Test.iArrFld;
                            }
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  dMeth ->  dMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
