package tests.javafuzzer3361;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:43:40 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static byte byFld=57;
    public static short sFld=-4049;
    public static boolean bFld=true;
    public static double dFld=-8.17714;
    public static float fFld=-2.630F;
    public float fFld1=71.220F;
    public static volatile int iFld=-37008;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 27130);
        FuzzerUtils.init(Test.fArrFld, 106.946F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8) {

        int i9=8, i10=-58935, i11=-44766, i12=-9, iArr[]=new int[N];
        float f2=-8.563F;

        FuzzerUtils.init(iArr, -9);

        for (i9 = 20; i9 < 396; i9++) {
            double d1=6.126424;
            i8 &= i9;
            iArr[i9 - 1] += i8;
            Test.instanceCount *= (long)f2;
            i8 -= i8;
            f2 *= (float)d1;
            for (i11 = 1; i11 < 4; i11++) {
                Test.sFld += (short)i9;
                i10 += (int)f2;
                iArr[i9] = (int)8L;
                i12 = (int)Test.instanceCount;
                Test.bFld = true;
                Test.instanceCount = Test.instanceCount;
                f2 -= (float)d1;
                Test.byFld += (byte)i9;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i3) {

        int i4=-47034, i5=-4, i6=-12, i7=9, i13=-8, i14=-46262, i15=-11, iArr1[]=new int[N];
        float f1=107.790F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.61747);
        FuzzerUtils.init(iArr1, 0);

        Test.instanceCount = (i3 + Test.instanceCount);
        for (i4 = 3; i4 < 237; ++i4) {
            f1 += (i3++);
            for (i6 = 7; i6 > 1; i6 -= 2) {
                Test.byFld += (byte)(i6 | (long)f1);
                vMeth1(i4);
                f1 += i3;
                i5 >>= i6;
                dArr[i6] = i6;
                i3 = (int)Test.instanceCount;
                Test.instanceCount += 54161;
                for (i13 = i6; i13 < 3; ++i13) {
                    i3 -= (int)Test.instanceCount;
                    try {
                        iArr1[i6 + 1] = (i14 % i4);
                        i15 = (i15 % 33910);
                        i7 = (636651999 % i14);
                    } catch (ArithmeticException a_e) {}
                }
            }
            Test.dFld *= f1;
        }
        vMeth_check_sum += i3 + i4 + i5 + Float.floatToIntBits(f1) + i6 + i7 + i13 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(float f, long l, int i2) {

        int i16=-114, i17=86, i18=-250, i19=-222;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 156L);

        vMeth(i2);
        f += 2940100364L;
        i2 = 9690;
        for (i16 = 1; i16 < 219; i16++) {
            Test.iArrFld[i16 - 1] &= i17;
            i2 = i17;
            switch ((i16 % 2) + 124) {
            case 124:
                i2 += i16;
                i18 = 1;
                while (++i18 < 7) {
                    Test.iArrFld[i18] ^= i17;
                    if (i18 != 0) {
                    }
                    Test.instanceCount <<= i16;
                    if (i16 != 0) {
                    }
                    lArr[i18 - 1] = -36271;
                    if (i19 != 0) {
                    }
                }
            case 125:
                i17 += (i16 ^ i17);
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + l + i2 + i16 + i17 + i18 + i19 + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=1, i1=-32199, i20=-46560, i21=-32085, i22=4, i23=43, i24=-8;
        double d=-27.103879;
        long l1=-6003771800293464909L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -4211L);

        for (i = 8; 155 > i; ++i) {
            Test.instanceCount = (Math.max(i1 + i1, (int)(44716 - (Test.instanceCount - i))) + (i1--));
            d -= lMeth(Test.fFld, Test.instanceCount, 7);
            Test.dFld += i;
            Test.instanceCount += (i | i);
            for (i20 = i; 171 > i20; i20++) {
                for (l1 = 1; l1 < 1; l1++) {
                    if (Test.bFld) continue;
                    i21 = -14;
                    i21 -= i22;
                    Test.sFld = (short)i20;
                    lArr1[(int)(l1)] -= 4;
                    Test.fFld *= i1;
                }
            }
            for (i23 = 10; i23 < 171; ++i23) {
                i21 += (int)Test.instanceCount;
                switch ((i23 % 4) + 104) {
                case 104:
                    if (Test.bFld) {
                        switch (((i23 % 1) * 5) + 105) {
                        case 110:
                            i24 = -3718;
                            Test.iArrFld[i23] = i;
                            break;
                        }
                    } else {
                        i21 = i21;
                        i1 <<= i1;
                        Test.fFld -= 11;
                        try {
                            Test.iArrFld[i23] = (i21 % i21);
                            i1 = (-61024 % i20);
                            i1 = (Test.iArrFld[i + 1] / -1397166089);
                        } catch (ArithmeticException a_e) {}
                    }
                    Test.instanceCount += (i23 ^ i20);
                case 105:
                    i22 >>>= i23;
                    fFld1 -= i;
                    break;
                case 106:
                    i1 = (int)l1;
                    Test.iFld += (((i23 * Test.fFld) + Test.instanceCount) - i23);
                    Test.fArrFld[i23 + 1] += Test.sFld;
                    break;
                case 107:
                    i24 = 47462;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
