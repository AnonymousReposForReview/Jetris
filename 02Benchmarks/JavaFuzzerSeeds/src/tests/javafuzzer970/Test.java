package tests.javafuzzer970;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:15:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5606096848876010065L;
    public int iFld=-43340;
    public static volatile short sFld=-3032;
    public static float fFld=93.424F;
    public static volatile double dFld=2.1034;
    public static volatile int iFld1=45640;
    public static volatile int iFld2=-10739;
    public static boolean bFld=true;
    public byte byFld=66;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 31);
        FuzzerUtils.init(Test.lArrFld, 18510L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i2=8, i3=69, i4=49570, i5=10, i6=-12;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -32277L);

        Test.iArrFld = Test.iArrFld;
        for (i2 = 7; i2 < 161; i2++) {
            for (i4 = 1; i4 < 10; ++i4) {
                i6 = 1;
                do {
                    i5 >>= Test.iFld1;
                    Test.iFld1 += i4;
                    Test.iFld1 += (i6 | (long)Test.fFld);
                    lArr[i2][i2 - 1] = (long)Test.dFld;
                    Test.iArrFld[i2] += (int)Test.instanceCount;
                    i5 += (i6 | i6);
                    Test.iFld1 += i6;
                    if (false) break;
                    i3 = (int)Test.fFld;
                    i5 &= Test.iFld1;
                } while (++i6 < 2);
                i5 = i5;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth1() {

        int i=11, i1=121, i7=31804, i8=3, i9=-2154, i10=-122;

        Test.dFld += ((--Test.fFld) - (++Test.iFld1));
        if (Test.bFld) {
            for (i = 1; i < 124; i++) {
                Test.iArrFld[i - 1] &= Test.iFld1;
                vMeth();
                Test.instanceCount = Test.iFld1;
                Test.iArrFld[i] *= Test.iFld1;
                for (i7 = 13; i7 > i; --i7) {
                    try {
                        Test.iArrFld[i7] = (1695 / i);
                        i8 = (i7 % i1);
                        Test.iFld2 = (-11654 / Test.iFld1);
                    } catch (ArithmeticException a_e) {}
                    Test.iFld1 = i1;
                    for (i9 = 1; i9 < 1; ++i9) {
                        i1 &= Test.iFld1;
                        Test.iFld1 *= i8;
                        i10 += (i9 * Test.iFld1);
                        Test.fFld *= Test.iFld1;
                    }
                }
            }
        } else if (Test.bFld) {
            Test.instanceCount <<= 61286;
        } else if (false) {
            i8 = (int)Test.fFld;
        }
        long meth_res = i + i1 + i7 + i8 + i9 + i10;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i11=209, i12=-142, i13=-22, i14=26121;

        Test.sFld <<= (short)((--Test.fFld) + (iMeth1() + Test.instanceCount));
        Test.iFld1 = (int)97.34320;
        Test.fFld = 25;
        Test.dFld += Test.iFld2;
        Test.iFld2 = (int)Test.instanceCount;
        try {
            for (i11 = 10; i11 < 342; ++i11) {
                if (false) {
                    Test.fFld = i12;
                    for (i13 = 1; 5 > i13; ++i13) {
                        Test.iFld1 += (i13 * i13);
                        Test.bFld = Test.bFld;
                        Test.iFld2 ^= -5;
                        i12 *= 7;
                        Test.lArrFld[i13 + 1] -= i13;
                    }
                } else if (Test.bFld) {
                    Test.dFld *= 60L;
                }
            }
        }
        catch (UserDefinedExceptionTest exc2) {
            Test.dFld += Test.iFld1;
        }
        catch (ArrayIndexOutOfBoundsException exc3) {
            Test.iFld2 = 128;
        }
        long meth_res = i11 + i12 + i13 + i14;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=8, i16=142, i17=-13, i18=11310, i19=81;
        long l=60L;
        byte byArr[]=new byte[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(byArr, (byte)6);
        FuzzerUtils.init(dArr, 1.5515);

        iFld += iMeth();
        Test.instanceCount = Test.instanceCount;
        iFld *= (int)Test.fFld;
        for (i15 = 359; i15 > 21; i15 -= 2) {
            double d=9.76770;
            byFld = (byte)iFld;
            switch (((Test.iFld2 >>> 1) % 3) + 23) {
            case 23:
                Test.iFld1 *= (int)d;
                break;
            case 24:
                switch (((-14 >>> 1) % 3) + 40) {
                case 40:
                    i17 = 1;
                    do {
                        byArr[i17 - 1] -= (byte)Test.instanceCount;
                        iFld *= (int)1.264F;
                        l *= (long)d;
                        Test.instanceCount <<= iFld;
                        i16 += i15;
                        for (i18 = i17; i18 < 1; ++i18) {
                            int i20=6;
                            Test.sFld = byFld;
                            Test.iFld2 += (i18 ^ l);
                            i16 += (i18 | i15);
                            l += 0;
                            i20 = i17;
                            l = -45532L;
                            switch ((i15 % 5) + 102) {
                            case 102:
                                Test.bFld = Test.bFld;
                                Test.iArrFld[i17 - 1] = i18;
                                switch (((i19 >>> 1) % 10) + 117) {
                                case 117:
                                    if (false) continue;
                                    i20 ^= Test.iFld2;
                                    i16 += -5903;
                                    Test.iFld2 >>>= (int)Test.instanceCount;
                                    break;
                                case 118:
                                    Test.iArrFld = Test.iArrFld;
                                    break;
                                case 119:
                                    i16 += i18;
                                    break;
                                case 120:
                                    Test.iFld2 = (int)l;
                                    break;
                                case 121:
                                    i19 <<= byFld;
                                    break;
                                case 122:
                                    dArr[i17 - 1][i15] = Test.fFld;
                                    break;
                                case 123:
                                    Test.fFld = Test.instanceCount;
                                    break;
                                case 124:
                                    Test.iArrFld = FuzzerUtils.int1array(N, (int)41459);
                                    break;
                                case 125:
                                    Test.iArrFld[i15 + 1] &= 166;
                                case 126:
                                    i16 -= Test.iFld2;
                                    break;
                                default:
                                    l += (((i18 * Test.iFld1) + i16) - Test.instanceCount);
                                }
                                break;
                            case 103:
                                dArr[i18 + 1][i17 - 1] = byFld;
                            case 104:
                            case 105:
                                Test.lArrFld[i15] |= l;
                                break;
                            case 106:
                                Test.dFld = i18;
                                break;
                            }
                        }
                    } while (++i17 < 148);
                case 41:
                    Test.iFld2 -= i17;
                    break;
                case 42:
                    iFld *= 20013;
                    break;
                default:
                    iFld = i16;
                }
                break;
            case 25:
                i16 *= (int)Test.instanceCount;
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
