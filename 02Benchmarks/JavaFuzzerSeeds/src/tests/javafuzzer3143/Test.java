package tests.javafuzzer3143;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 02:39:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2723855312L;
    public static byte byFld=42;
    public static float fFld=80.323F;
    public static short sFld=-21750;
    public static double dFld=1.36651;
    public boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public volatile double dArrFld[][]=new double[N][N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -72);
        FuzzerUtils.init(Test.lArrFld, 4280035045L);
        FuzzerUtils.init(Test.fArrFld, 63.616F);
        FuzzerUtils.init(Test.sArrFld, (short)26604);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6) {

        int i7=37939, i8=55643, i9=-18, i10=-13, i11=4;
        byte by=-4;
        short s=-14340;
        float f=-82.882F;
        double d=125.22338;

        Test.instanceCount += -18318L;
        i6 -= 25932;
        for (i7 = 5; 140 > i7; i7++) {
            by >>= (byte)i6;
            i8 += (61301 + (i7 * i7));
            by >>= (byte)s;
        }
        Test.instanceCount = (long)99.650F;
        i9 = 1;
        while (++i9 < 216) {
            f += Test.instanceCount;
            i8 = i8;
            Test.iArrFld[i9 + 1] = i9;
            for (i10 = 1; i10 < 7; ++i10) {
                d += -4;
                Test.iArrFld[i9 + 1] = (int)Test.instanceCount;
                Test.iArrFld[(i9 >>> 1) % N] = (int)f;
            }
        }
        long meth_res = i6 + i7 + i8 + by + s + i9 + Float.floatToIntBits(f) + i10 + i11 + Double.doubleToLongBits(d);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth1(int i5) {

        float f1=1.47F, f2=-40.935F;
        int i12=193, i13=-9, i14=34, i15=7;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -72.47043);

        i5 += (int)(i5 |= (int)(Test.instanceCount++));
        iMeth(i5);
        i5 *= Test.byFld;
        Test.instanceCount = i5;
        Test.lArrFld = Test.lArrFld;
        for (f1 = 5; f1 < 188; f1 += 3) {
            Test.iArrFld[(int)(f1 + 1)] -= -9;
            i13 = 25;
            do {
                dArr[i13 - 1] -= i12;
                i5 -= i12;
                Test.iArrFld[i13 - 1] -= (int)Test.instanceCount;
                for (i14 = 3; i14 > f1; i14--) {
                    Test.fFld *= i12;
                    Test.fFld -= i15;
                    f2 -= Test.instanceCount;
                }
            } while ((i13 -= 3) > 0);
        }
        long meth_res = i5 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i4) {

        int i16=1, i17=-61686, i18=11965, i19=17, i20=4, i21=0, iArr[]=new int[N];
        long l=540039177L, l1=8L;

        FuzzerUtils.init(iArr, 18953);

        lMeth1(i4);
        Test.iArrFld[(-26668 >>> 1) % N] = (int)182L;
        for (i16 = 3; 241 > i16; i16 += 2) {
            for (i18 = 1; i18 < 13; i18++) {
                Test.fArrFld[i16 + 1] = l;
                Test.sFld += (short)i16;
                for (l1 = 1; l1 < 2; ++l1) {
                    Test.byFld += (byte)(((l1 * i17) + i19) - i4);
                    i20 *= (int)690578400L;
                    i17 -= i19;
                    l += (l1 | l);
                }
                if (i17 != 0) {
                }
                i21 = (int)Test.dFld;
                i20 = i20;
                iArr[i18 - 1] = i20;
            }
        }
        long meth_res = i4 + i16 + i17 + i18 + i19 + l + l1 + i20 + i21 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-151, i1=225, i2=21921, i3=-62945, i22=13, i23=-183, i24=23, i25=-12;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 191582715L);

        for (i = 361; i > 17; i--) {
            for (i2 = 73; i2 > 3; --i2) {
                lArr[(i >>> 1) % N] = (lMeth(i) + 31367);
                i3 += (int)(54.612F + (i2 * i2));
                dArrFld = FuzzerUtils.double2array(N, (double)43.110296);
                for (i22 = 1; i22 < 2; i22++) {
                    if (bFld) continue;
                }
                for (i24 = i2; i24 < 2; ++i24) {
                    bFld = false;
                    Test.dFld -= i22;
                    Test.sArrFld[i + 1] &= (short)i3;
                    i25 *= (int)Test.fFld;
                    switch (((i % 9) * 5) + 44) {
                    case 49:
                        Test.fFld += Test.fFld;
                        break;
                    case 76:
                        i3 = i3;
                        Test.fFld -= Test.instanceCount;
                        break;
                    case 61:
                        Test.iArrFld[i2 - 1] /= (int)(i23 | 1);
                        i23 = i22;
                        break;
                    case 63:
                        i1 >>= i;
                        break;
                    case 50:
                        i23 += (((i24 * Test.byFld) + Test.fFld) - Test.fFld);
                        break;
                    case 48:
                        Test.instanceCount = i2;
                        i23 += i3;
                    case 67:
                        i25 += 11952;
                        i25 = Test.byFld;
                        switch (((i24 % 3) * 5) + 48) {
                        case 59:
                            Test.instanceCount %= (i1 | 1);
                            i3 = 25699;
                            i3 *= i24;
                            break;
                        case 63:
                            Test.instanceCount ^= i;
                            i25 = i25;
                        case 60:
                            i25 += (-69 + (i24 * i24));
                        }
                    case 85:
                        i3 -= i25;
                        break;
                    case 73:
                    default:
                        i23 >>>= Test.sFld;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
