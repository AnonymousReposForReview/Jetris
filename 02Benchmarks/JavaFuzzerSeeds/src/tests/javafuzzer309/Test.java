package tests.javafuzzer309;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:39:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9332L;
    public static double dFld=2.109356;
    public short sFld=30213;
    public float fArrFld[]=new float[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i7=203, i8=74;

        for (i7 = 6; i7 < 122; i7++) {
            Test.instanceCount = i7;
            i8 *= (int)Test.instanceCount;
            Test.instanceCount |= 164;
            i8 -= (int)2505886186L;
        }
        long meth_res = i7 + i8;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i3=9, i4=-61107, i5=1, i6=-12, i9=7, i10=29963, i11=-1250, i12=7879, iArr[]=new int[N];
        float f1=15.525F;

        FuzzerUtils.init(iArr, 127);

        i3 = ((i3++) - (i3 - iArr[(i3 >>> 1) % N]));
        i4 = 1;
        while (++i4 < 363) {
            for (i5 = i4; i5 < 5; ++i5) {
                boolean b=false;
                i3 = (int)lMeth();
                for (i9 = 1; i9 < 1; ++i9) {
                    i10 = 3143;
                }
                for (i11 = 1; i11 > 1; i11--) {
                    f1 *= -48061;
                    i3 += i11;
                }
                i12 = (int)-159L;
                if (b) continue;
            }
            i12 -= (int)Test.instanceCount;
            Test.dFld -= -26183;
            i6 -= i6;
            Test.instanceCount *= Test.instanceCount;
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=10, i14=50364, i15=-117, i16=-14, i17=8, iArr1[][]=new int[N][N], iArr2[]=new int[N];
        float fArr[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(fArr, 0.897F);
        FuzzerUtils.init(iArr2, -39443);
        FuzzerUtils.init(sArr, (short)-19604);

        i2 = 1;
        do {
            boolean b1=true;
            vMeth1();
            iArr1[i2 + 1][i2 - 1] -= (int)14160L;
            fArr[i2 + 1] = Test.instanceCount;
            b1 = b1;
            Test.instanceCount = i2;
        } while (++i2 < 137);
        sArr[(i2 >>> 1) % N] = (short)Test.instanceCount;
        i14 >>>= i14;
        i14 = (int)1279879829L;
        i15 = 1;
        do {
            for (i16 = 11; 1 < i16; i16--) {
                iArr2[i16] -= (int)Test.instanceCount;
            }
            i14 = i16;
            i17 = i16;
            i17 = (int)Test.instanceCount;
        } while (++i15 < 150);
        vMeth_check_sum += i2 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-49415, i1=18804, iArr3[]=new int[N];
        float f=-71.639F;
        long l=8513657513767336840L;

        FuzzerUtils.init(iArr3, -2193);

        for (i = 2; 242 > i; ++i) {
            fArrFld[i + 1] -= (++f);
            i1 = (int)((i + (f + i)) * Test.instanceCount);
            vMeth();
            i1 += (int)1.868F;
            l = i1;
            i1 <<= 7;
            sFld = (short)-28;
            iArr3[i - 1] >>>= i;
            i1 += (i | i1);
            iArr3[i] *= i1;
        }
        for (int i18 : iArr3) {
            Test.instanceCount -= -23952;
        }
        i1 -= i1;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
