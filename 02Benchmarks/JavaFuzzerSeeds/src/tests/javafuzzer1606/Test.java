package tests.javafuzzer1606;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:54:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public static short sFld=24175;
    public static boolean bFld=false;
    public float fFld=-76.364F;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];
    public byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -27.82901);
        FuzzerUtils.init(Test.iArrFld, 224);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9, long l1) {

        byte by=-15;

        by -= (byte)126;
        long meth_res = i9 + l1 + by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i7, int i8, long l) {

        double d=35.88175;
        int i10=9, i11=14, i12=41, i13=-2;
        float f1=-47.213F, fArr[][]=new float[N][N];
        byte by1=-10, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)41);
        FuzzerUtils.init(fArr, -50.834F);

        d = iMeth(i8, Test.instanceCount);
        for (i10 = 5; i10 < 302; i10++) {
            for (i12 = i10; i12 < 6; i12++) {
                i8 *= (int)f1;
                f1 = 20563;
                f1 = i8;
                f1 = -7;
            }
            switch (((i13 >>> 1) % 10) + 4) {
            case 4:
                i8 -= (int)-227L;
                Test.dArrFld[i10] -= i13;
            case 5:
                Test.sFld = (short)f1;
                i11 <<= i7;
                i8 = 98;
                break;
            case 6:
                i13 += (i10 + by1);
                break;
            case 7:
                byArr[i10] += (byte)l;
                break;
            case 8:
                i7 += i7;
                break;
            case 9:
                i8 += (((i10 * i12) + i8) - Test.instanceCount);
                break;
            case 10:
                i11 >>>= i13;
                break;
            case 11:
                if (i13 != 0) {
                    vMeth1_check_sum += i7 + i8 + l + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 +
                        Float.floatToIntBits(f1) + by1 + FuzzerUtils.checkSum(byArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                break;
            case 12:
                fArr[i10][i10] = -12.425F;
                break;
            case 13:
                Test.iArrFld[i10 - 1] = (int)d;
                break;
            default:
                i8 = i8;
            }
        }
        vMeth1_check_sum += i7 + i8 + l + Double.doubleToLongBits(d) + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1)
            + by1 + FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        int i1=-13, i2=-37350, i3=-102, i4=-13, i5=5, i6=24164, i14=216, i15=12;
        float f=42.268F;
        double d1=-1.49055;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 34661L);

        for (i1 = 1; i1 < 246; i1 += 2) {
            for (i3 = 1; i3 < 13; ++i3) {
                i4 += (i3 * i3);
                for (i5 = 1; 2 > i5; i5 += 2) {
                    i4 += (((i5 * Test.sFld) + f) - i2);
                    vMeth1(i3, i2, Test.instanceCount);
                }
                try {
                    i6 = (Test.iArrFld[(i4 >>> 1) % N] / i1);
                    i6 = (i5 / -30897);
                    i6 = (i5 / -41914);
                } catch (ArithmeticException a_e) {}
                for (i14 = i1; 2 > i14; ++i14) {
                    i2 += (i14 + i1);
                    lArr[i1 + 1] += Test.instanceCount;
                    d1 = i15;
                    Test.instanceCount *= i14;
                    Test.instanceCount += (157L + (i14 * i14));
                    b = false;
                    i4 += (int)(2705271162L + (i14 * i14));
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i14 + i15 +
            Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-97, i16=-246, i17=-7, i18=5, i19=3, i20=41576, i21=44151, i22=51307, i23=32069, i24=8, i25=197, i26=1;
        long l2=-64L;
        byte by2=-25;
        double d2=-1.24396;

        i -= (int)(((i + Test.instanceCount) - (-(i + 0))) - (i * (i * Test.instanceCount)));
        vMeth();
        i16 = 1;
        while (++i16 < 224) {
            float f2=1.630F;
            i += (i16 * i16);
            Test.instanceCount = (long)f2;
            i >>= (int)Test.instanceCount;
            if (Test.bFld) continue;
        }
        for (l2 = 4; l2 < 325; l2++) {
            i += (-11 + (l2 * l2));
        }
        Test.instanceCount = i16;
        for (i18 = 18; i18 < 339; ++i18) {
            i20 = 1;
            do {
                by2 >>>= (byte)Test.instanceCount;
                switch ((i18 % 9) + 78) {
                case 78:
                    Test.sFld = (short)-24036;
                    break;
                case 79:
                    i19 = i17;
                    for (i21 = 1; i21 < 1; i21++) {
                        i ^= i;
                        lArrFld[i18] -= -2077258575996934013L;
                        i = (int)l2;
                        by2 *= (byte)40.553F;
                        i = (int)fFld;
                        byArrFld = byArrFld;
                        i22 += (11 + (i21 * i21));
                    }
                    i19 = i22;
                    break;
                case 80:
                    for (i23 = i20; 1 > i23; ++i23) {
                        lArrFld[i20] = 0;
                        i25 += (i23 - i19);
                        byArrFld[i23 + 1][i18] *= (byte)-127L;
                        Test.iArrFld[i20 + 1] += -26950;
                    }
                    break;
                case 81:
                    i25 = (int)Test.instanceCount;
                    break;
                case 82:
                    if (Test.bFld) break;
                    break;
                case 83:
                    Test.bFld = false;
                    break;
                case 84:
                    d2 -= i;
                    break;
                case 85:
                    Test.iArrFld[i20 - 1] = 3;
                    break;
                case 86:
                    Test.sFld <<= (short)i26;
                    break;
                }
            } while (++i20 < 78);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
