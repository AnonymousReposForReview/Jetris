package tests.javafuzzer2698;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:49:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3272708373L;
    public static boolean bFld=true;
    public static float fFld=2.421F;
    public static double dFld=-80.21077;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -176);
        FuzzerUtils.init(Test.byArrFld, (byte)56);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(float f1, int i6, long l) {

        int i7=-16, i8=8, i9=-16170;
        byte by=-54;
        float f2=116.300F;

        i6 = (int)1464410997L;
        for (i7 = 283; i7 > 15; --i7) {
            Test.iArrFld[i7] >>= (int)19715L;
            i8 = (int)Test.instanceCount;
            switch (((i7 % 4) * 5) + 23) {
            case 42:
                i8 += i7;
                if (Test.bFld) {
                    i6 = (int)l;
                    vMeth_check_sum += Float.floatToIntBits(f1) + i6 + l + i7 + i8 + by + Float.floatToIntBits(f2) + i9;
                    return;
                } else if (Test.bFld) {
                    by += (byte)i6;
                    for (f2 = 6; 1 < f2; --f2) {
                        i9 += 13;
                        f1 *= i6;
                        Test.bFld = Test.bFld;
                        l *= -15530;
                        i6 += (int)-71.10158;
                    }
                } else {
                    i9 |= i6;
                }
            case 26:
                i6 = (int)l;
                break;
            case 25:
                f1 += l;
                break;
            case 29:
                f1 *= -27516;
            default:
                Test.iArrFld[i7 - 1] += i6;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i6 + l + i7 + i8 + by + Float.floatToIntBits(f2) + i9;
    }

    public static int iMeth1() {

        int i4=8, i5=76, i10=-1, i11=193, i12=60380, i13=133;

        for (i4 = 7; i4 < 183; ++i4) {
            vMeth(Test.fFld, i5, Test.instanceCount);
            i5 += (int)Test.fFld;
            i5 += (219 + (i4 * i4));
            i5 -= 146;
            i5 >>= (int)Test.instanceCount;
            for (i10 = 9; i10 > 1; --i10) {
                if (i4 != 0) {
                }
                i11 += (i10 * i10);
                Test.fFld += i10;
                Test.bFld = false;
                i5 = i4;
                for (i12 = 1; i12 < 2; ++i12) {
                    Test.instanceCount = i5;
                }
                if (Test.bFld) continue;
            }
        }
        long meth_res = i4 + i5 + i10 + i11 + i12 + i13;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i3) {

        int i14=120, i15=-1, i16=54001, i17=32538;

        Test.iArrFld[(i3 >>> 1) % N] -= (i3++);
        i3 = Test.iArrFld[(i3 >>> 1) % N];
        i3 >>= iMeth1();
        for (i14 = 15; i14 < 334; ++i14) {
            if (true) break;
            i15 = (int)Test.instanceCount;
            Test.fFld = i14;
            i3 += (i14 + Test.instanceCount);
            for (i16 = 1; i16 < 5; i16++) {
                try {
                    i3 = (i14 % i15);
                    i17 = (-100 % i16);
                    Test.iArrFld[i16] = (Test.iArrFld[i16 - 1] % Test.iArrFld[i14 + 1]);
                } catch (ArithmeticException a_e) {}
                i3 = 195;
                Test.byArrFld[i16] += (byte)Test.instanceCount;
            }
        }
        i15 += i3;
        i15 -= i14;
        Test.instanceCount += 69;
        long meth_res = i3 + i14 + i15 + i16 + i17;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-36313, i1=115, i2=-14, i18=-3216, i19=-40349, i20=-119, i21=-1685, i22=49885, i23=-185, i24=0;
        float f=106.719F, fArr[]=new float[N];
        byte by1=-86;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 17591L);
        FuzzerUtils.init(fArr, 122.405F);

        switch (((Math.min(i, 99) >>> 1) % 8) + 121) {
        case 121:
            i1 = 1;
            while (++i1 < 277) {
                i >>= (Test.iArrFld[i1]--);
                for (f = 91; f > 5; --f) {
                    lArr[(int)(f - 1)] = ((Test.iArrFld[i1]--) * iMeth(i));
                    Test.fFld += i2;
                    for (i18 = 1; 2 > i18; ++i18) {
                        fArr[i18] = i18;
                        i19 = i2;
                        i2 = -11;
                        Test.instanceCount = Test.instanceCount;
                        i >>>= (int)37546L;
                        i = i18;
                        fArr[i18 + 1] = Test.instanceCount;
                        i += (((i18 * Test.instanceCount) + Test.instanceCount) - i20);
                        Test.instanceCount = Test.instanceCount;
                    }
                    Test.bFld = Test.bFld;
                }
                for (i21 = i1; i21 < 91; i21++) {
                    for (i23 = i21; i23 < 1; ++i23) {
                        i22 *= (int)Test.dFld;
                        i2 = i2;
                        i <<= (int)Test.instanceCount;
                        i22 = i2;
                        Test.bFld = Test.bFld;
                        Test.iArrFld[i23 + 1] = (int)f;
                        if (Test.bFld) continue;
                        Test.instanceCount >>= i2;
                        Test.instanceCount += (12 + (i23 * i23));
                    }
                }
            }
            Test.bFld = Test.bFld;
            break;
        case 122:
            Test.instanceCount += i19;
            break;
        case 123:
        case 124:
            i19 = i21;
            break;
        case 125:
            i19 += by1;
            break;
        case 126:
            Test.instanceCount = Test.instanceCount;
        case 127:
            Test.instanceCount -= (long)1.106210;
            break;
        case 128:
            Test.dFld *= 28489;
            break;
        default:
            i22 ^= (int)Test.instanceCount;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
