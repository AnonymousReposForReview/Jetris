package tests.javafuzzer2154;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:34:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-52440L;
    public static short sFld=21653;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 1475813166L);
        FuzzerUtils.init(Test.iArrFld, 10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth1(long l) {

        int i3=-15812;

        i3 = i3;
        vMeth1_check_sum += l + i3;
    }

    public static void vMeth2(int i4, int i5, long l1) {

        int i6=-237, i7=28272, i8=50473;
        long l2=-111L, l3=4L;
        float f1=69.329F;

        if (true) {
            i4 = i4;
            i4 = i4;
            for (i6 = 3; 247 > i6; i6++) {
                double d=-121.25736;
                Test.lArrFld[(i5 >>> 1) % N] *= l2;
                d += i6;
                i7 *= (int)f1;
                for (l3 = 1; l3 < 7; ++l3) {
                    Test.iArrFld[(-14914 >>> 1) % N] /= (int)(i8 | 1);
                    Test.iArrFld[(int)(l3)] = (int)-22142L;
                    Test.sFld = (short)i7;
                    if (false) {
                        i7 -= (int)f1;
                        Test.instanceCount += (l3 * i4);
                    }
                    i5 = i6;
                }
            }
        } else {
            Test.instanceCount = i7;
            vMeth2_check_sum += i4 + i5 + l1 + i6 + i7 + l2 + Float.floatToIntBits(f1) + l3 + i8;
            return;
        }
        vMeth2_check_sum += i4 + i5 + l1 + i6 + i7 + l2 + Float.floatToIntBits(f1) + l3 + i8;
    }

    public static long lMeth(float f) {

        int i9=-52492, i10=-177, i11=-28, i12=-11372, i13=5, i14=-138, i15=-176, i16=195;
        double d1=104.115285;

        vMeth2(i9, i9, Test.instanceCount);
        for (i10 = 1; i10 < 339; i10++) {
            i9 = i10;
            for (i12 = 1; i12 < 5; i12++) {
                Test.lArrFld[i12] %= (i11 | 1);
                d1 -= i12;
                i11 = i12;
            }
            for (i14 = 1; i14 < 5; ++i14) {
                Test.instanceCount = 0;
                i16 = 2;
                do {
                    i11 += (i16 * f);
                    i9 *= i11;
                    i11 *= -30398;
                    i9 += i13;
                    i11 = i9;
                } while (--i16 > 0);
            }
        }
        long meth_res = Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15
            + i16;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i1=-38416, i2=45530, iArr[]=new int[N];
        float f2=-8.391F;
        double d2=0.120390;

        FuzzerUtils.init(iArr, 5);

        for (i1 = 370; 9 < i1; i1 -= 2) {
            iArr[i1] -= (int)Test.instanceCount;
            vMeth1(lMeth(f2));
            d2 -= i2;
        }
        iArr[(i2 >>> 1) % N] = (int)8L;
        vMeth_check_sum += i1 + i2 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=31029, i17=175, i18=150;
        float f3=0.970F;

        i >>= i;
        vMeth();
        for (i17 = 11; i17 < 228; ++i17) {
            try {
                i = (3 % Test.iArrFld[i17 - 1]);
                i18 = (i17 % -20);
                i = (521 / i);
            } catch (ArithmeticException a_e) {}
            i *= i18;
        }
        f3 += 28862;
        f3 = 5574;
        i18 += (int)Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
