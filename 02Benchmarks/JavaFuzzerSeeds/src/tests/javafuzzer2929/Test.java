package tests.javafuzzer2929;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:20:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1L;
    public int iFld=-7;
    public static double dFld=0.76442;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 57L);
        FuzzerUtils.init(Test.dArrFld, -1.22375);
        FuzzerUtils.init(Test.iArrFld, 6);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i=-12, i1=-199, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -126);

        i -= (int)Test.instanceCount;
        i = (int)Test.instanceCount;
        Test.dArrFld[(i1 >>> 1) % N] += Test.instanceCount;
        iArr1[(i1 >>> 1) % N] += i1;
        vMeth1_check_sum += i + i1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(double d, boolean b) {

        int i2=-7, i3=-247, i4=7, i5=-23503, i6=61249, i7=163;
        byte by=-90;

        vMeth1();
        for (i2 = 13; i2 < 380; i2++) {
            by += (byte)(-220 + (i2 * i2));
            i3 = i2;
            for (i4 = 1; i4 < 5; ++i4) {
                if (b) {
                    i5 = (int)Test.instanceCount;
                    Test.iArrFld[i2 - 1] -= (int)11L;
                    i3 += (i4 * i4);
                    i5 += i4;
                }
                for (i6 = 1; i6 < 2; i6++) {
                    Test.instanceCount = i6;
                    i5 <<= (int)Test.instanceCount;
                    i3 = i7;
                    Test.instanceCount = -7;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + (b ? 1 : 0) + i2 + i3 + by + i4 + i5 + i6 + i7;
    }

    public static float fMeth() {

        boolean b1=false;

        vMeth(Test.dFld, b1);
        Test.dFld = Test.instanceCount;
        long meth_res = (b1 ? 1 : 0);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i8=2, i9=-20121, i10=11, i11=-82, i12=10, i13=-8, i14=11, i15=21922, i16=164, i17=-57562, i18=-38605,
            iArr[]=new int[N];
        short s=19015;
        byte by1=86;
        boolean b2=false;

        FuzzerUtils.init(iArr, -5);

        iFld = (int)(++Test.instanceCount);
        iFld = (int)Math.max((iFld / (iFld | 1)) - iArr[(iFld >>> 1) % N], Test.lArrFld[(iFld >>> 1) % N]++);
        iFld += (int)fMeth();
        iFld = iFld;
        for (i8 = 9; i8 < 150; ++i8) {
            iFld += (int)Test.instanceCount;
            i9 >>>= i8;
            iArr[i8 + 1] += (int)61.74597;
            i10 = 1;
            do {
                i9 = (int)Test.dFld;
                s += s;
                iFld = i9;
                for (i11 = 1; i11 < 1; i11++) {
                    Test.instanceCount += (((i11 * i10) + i9) - i8);
                    iFld += (i11 + i9);
                    i9 += i11;
                }
            } while (++i10 < 178);
            Test.instanceCount += (((i8 * i8) + Test.instanceCount) - i10);
            i9 -= 0;
            for (i13 = 3; i13 < 178; i13++) {
                iFld += (((i13 * i11) + Test.instanceCount) - i10);
            }
            for (i15 = 9; i15 < 178; ++i15) {
                i16 *= i9;
                i12 += (i15 - i9);
                by1 = (byte)iFld;
                for (i17 = 2; 1 < i17; --i17) {
                    i18 *= -81;
                    b2 = b2;
                    Test.instanceCount += i17;
                    Test.instanceCount -= i10;
                    iArr = Test.iArrFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
