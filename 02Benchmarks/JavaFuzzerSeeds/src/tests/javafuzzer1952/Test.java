package tests.javafuzzer1952;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:24:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1604695230L;
    public int iFld=1;
    public static int iFld1=9;

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(int i, long l, int i1) {

        long lArr[]=new long[N];
        int iArr1[]=new int[N];

        FuzzerUtils.init(lArr, -53L);
        FuzzerUtils.init(iArr1, 44957);

        lArr[(i >>> 1) % N] >>= (iArr1[(-60371 >>> 1) % N] + lArr[(i >>> 1) % N]);
        vSmallMeth_check_sum += i + l + i1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f) {

        int i3=12, i4=-5, i5=-57520, i6=-43887, iArr2[]=new int[N];
        boolean b=true;
        double d=-6.67401;

        FuzzerUtils.init(iArr2, 1);

        switch ((((i3--) >>> 1) % 6) + 116) {
        case 116:
            for (i4 = 7; i4 < 147; ++i4) {
                i3 += (((i4 * i4) + i5) - i4);
                i5 = (int)(Test.instanceCount = i4);
                vSmallMeth(i3, Test.instanceCount, i5);
                if (b) continue;
                Test.instanceCount += (((i4 * Test.instanceCount) + i3) - i5);
                d = i5;
                i3 += 16498;
                i5 += i3;
            }
            Test.instanceCount = 97;
            break;
        case 117:
            i6 = 1;
            while (++i6 < 134) {
                i3 = i6;
                Test.instanceCount += (long)d;
                i5 += i6;
            }
            break;
        case 118:
            i3 = -156;
            break;
        case 119:
            d = i6;
            break;
        case 120:
            iArr2[(i5 >>> 1) % N] = i4;
            break;
        case 121:
            iArr2[(i4 >>> 1) % N] = i3;
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + i4 + i5 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i6 +
            FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth(int i2) {

        float f1=-116.966F, fArr[]=new float[N];
        int i7=-213, i8=-49516, i9=5, i10=-9, iArr3[]=new int[N];
        double d1=68.82321;
        long l1=352559202L;

        FuzzerUtils.init(fArr, 2.388F);
        FuzzerUtils.init(iArr3, 13);

        vMeth(f1);
        for (float f2 : fArr) {
            i2 >>= (int)Test.instanceCount;
            i7 = 1;
            while (++i7 < 4) {
                iArr3[i7] = i2;
            }
            for (i8 = 1; 4 > i8; ++i8) {
                i10 = 1;
                while (++i10 < 2) {
                    i2 >>>= i8;
                    d1 *= l1;
                    i9 *= i8;
                    i2 >>= -181;
                    Test.instanceCount = Test.instanceCount;
                    if (true) {
                        f2 *= l1;
                        i9 -= (int)f1;
                    }
                }
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + l1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i11=5, i12=1, i13=-52, i14=-169, i15=-142, i16=-13, i17=-19516, i18=-36077, i19=-6, i20=151, i21=3,
            i22=-64348, i23=-38301, iArr[]=new int[N], iArr4[][]=new int[N][N];
        float f3=-1.707F;
        boolean b1=true;
        byte by=55;
        double d3=-50.118343;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr1, 51780L);
        FuzzerUtils.init(iArr4, 60);

        iArr = (iArr = (iArr = (iArr = iArr)));
        for (int smallinvoc=0; smallinvoc<769; smallinvoc++) vSmallMeth(((iFld << iFld) + iFld) - ((48532 << iFld) +
            (iFld - 52137)), (Integer.reverseBytes(iFld) + (iFld + iFld)) - (Test.instanceCount--),
            Math.min(iMeth(iFld), 11));
        for (i11 = 2; 249 > i11; ++i11) {
            switch ((((i13 >>> 1) % 8) * 5) + 26) {
            case 57:
                for (i14 = i11; 102 > i14; ++i14) {
                    double d2=-1.30951;
                    Test.instanceCount <<= Test.instanceCount;
                    i16 = 1;
                    do {
                        i15 += (i16 | (long)f3);
                        f3 += (((i16 * i11) + iFld) - iFld);
                    } while (++i16 < 1);
                    d2 /= ((long)(f3) | 1);
                }
                i15 = (int)f3;
                break;
            case 42:
            case 27:
                Test.instanceCount %= (Test.instanceCount | 1);
                if (b1) continue;
                if (b1) {
                    i12 ^= i14;
                    lArr1[i11] = 11;
                    for (i17 = 6; i17 < 102; ++i17) {
                        Test.instanceCount -= i16;
                        i13 = i19;
                    }
                    i20 = 1;
                    while (++i20 < 102) {
                        f3 += i14;
                        lArr1[i20 + 1] = i17;
                        i21 = i20;
                        for (i22 = 1; 1 > i22; ++i22) {
                            if (b1) break;
                            i23 += (13 + (i22 * i22));
                            i18 -= 30112;
                            i12 += (i22 * i18);
                        }
                        lArr1[i20 - 1] -= 42378L;
                        i19 += (((i20 * Test.iFld1) + Test.instanceCount) - iFld);
                    }
                } else {
                    i19 = i16;
                }
                break;
            case 60:
                iFld += (int)Test.instanceCount;
                break;
            case 59:
                by += (byte)(-7 + (i11 * i11));
                break;
            case 32:
                d3 -= -2310695717L;
                break;
            case 66:
                i13 >>= -7;
            case 40:
                by = (byte)11971L;
            default:
                iArr4 = iArr4;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test vMeth iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
