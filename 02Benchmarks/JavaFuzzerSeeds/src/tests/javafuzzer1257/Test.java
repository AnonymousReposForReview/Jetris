package tests.javafuzzer1257;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:31:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-12L;
    public static volatile byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)102);
        FuzzerUtils.init(Test.iArrFld, 52037);
        FuzzerUtils.init(Test.dArrFld, 0.86341);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i5=-68, i6=107, i7=5, i8=252, i9=-672, iArr[]=new int[N];
        boolean b=false;
        double d1=-2.22338;
        long l=-50912L, l1=1516442244L;

        FuzzerUtils.init(iArr, 2);

        switch (((i5 >>> 1) % 4) + 16) {
        case 16:
            Test.instanceCount = Test.instanceCount;
            i5 += (int)563448320180400040L;
            for (i6 = 2; i6 < 135; i6++) {
                b = true;
                i8 = 12;
                while (--i8 > 0) {
                    i5 += (int)d1;
                    iArr[i8 + 1] >>= (int)2538976009L;
                    Test.instanceCount += i8;
                    i7 = i6;
                    for (l = 1; l < 1; l++) {
                        l1 = i5;
                        i9 += (42 + (l * l));
                        l1 *= i7;
                        iArr[i6] -= i5;
                    }
                }
            }
            break;
        case 17:
            i7 = (int)d1;
            break;
        case 18:
            i5 -= i7;
        case 19:
            i5 = i5;
            break;
        }
        vMeth_check_sum += i5 + i6 + i7 + (b ? 1 : 0) + i8 + Double.doubleToLongBits(d1) + l + i9 + l1 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth1(int i4, double d) {

        int i11=28798, i12=37642, i13=17580, i14=-43647, i15=59304, i16=-130, i17=217;
        float f1=-88.177F, fArr[]=new float[N];
        byte by=60;

        FuzzerUtils.init(fArr, 1.419F);

        vMeth();
        i11 = 1;
        while (++i11 < 148) {
            boolean b1=false;
            b1 = true;
            Test.byArrFld[i11] ^= (byte)i4;
        }
        i4 *= (int)f1;
        for (float f2 : fArr) {
            for (i12 = 1; i12 < 4; i12 += 3) {
                i13 = i4;
            }
            by = (byte)i11;
            for (i14 = 1; 4 > i14; i14++) {
                for (i16 = 1; i16 < 2; ++i16) {
                    if (i14 != 0) {
                    }
                    i4 += (((i16 * by) + Test.instanceCount) - i13);
                    Test.iArrFld[i14 + 1] += i13;
                    f2 += (i16 * f2);
                }
            }
        }
        long meth_res = i4 + Double.doubleToLongBits(d) + i11 + Float.floatToIntBits(f1) + i12 + i13 + by + i14 + i15 +
            i16 + i17 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, float f) {

        int i2=-86, i3=175, i18=-35879, i19=44;
        double d2=-20.22480;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 8L);

        for (i2 = 4; 302 > i2; i2++) {
            Test.instanceCount = iMeth1(i2, d2);
            for (i18 = 1; i18 < 6; ++i18) {
                i1 >>= (int)11548L;
                i3 += i18;
                Test.instanceCount = 44;
                i3 -= -36562;
                i19 = (int)f;
                i19 *= (int)Test.instanceCount;
                i3 += (i18 * i18);
                Test.dArrFld[i2 + 1][i18] *= i3;
                lArr[i18 + 1][i2] += -14;
                i1 = -12;
            }
            i19 >>= i2;
            i19 += (((i2 * f) + Test.instanceCount) - f);
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d2) + i18 + i19 +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-127, i20=81, i21=-11, i22=187, i23=-1, i24=214, i25=158;
        float f3=1.51F;
        byte by1=-121;
        boolean b2=true;
        long l2=-14L, lArr1[]=new long[N];
        short s=11842;

        FuzzerUtils.init(lArr1, 3991707648801723584L);

        i = iMeth(i, f3);
        Test.iArrFld[(i >>> 1) % N] += i;
        for (i20 = 5; i20 < 287; i20++) {
            i21 = i20;
            i = i20;
            i21 = i21;
            i21 -= -50648;
            i += (int)-140L;
            i21 += (((i20 * Test.instanceCount) + i21) - by1);
            b2 = true;
            i += (i20 ^ i21);
            Test.iArrFld[i20 + 1] = -3;
        }
        f3 = i20;
        i *= by1;
        i >>= i21;
        i ^= i20;
        i22 = 1;
        while (++i22 < 140) {
            switch (((i22 % 10) * 5) + 66) {
            case 83:
                Test.iArrFld[i22] += (int)f3;
                break;
            case 86:
                for (i23 = 1; i23 < 179; i23++) {
                    f3 += (((i23 * Test.instanceCount) + i24) - i21);
                    for (l2 = i22; 2 > l2; ++l2) {
                        i25 += (int)(((l2 * i21) + Test.instanceCount) - i22);
                        Test.instanceCount += Test.instanceCount;
                        Test.instanceCount *= i21;
                        i21 *= (int)Test.instanceCount;
                        i21 += (int)l2;
                        i25 = (int)4083903918507007835L;
                        Test.dArrFld[(int)(l2)][i22 + 1] += i20;
                        i21 ^= i22;
                    }
                }
                break;
            case 107:
                i24 = (int)Test.instanceCount;
                break;
            case 116:
                lArr1[i22] += i24;
                break;
            case 111:
                i24 >>= i24;
                break;
            case 105:
                s -= (short)l2;
                break;
            case 90:
                i24 %= (int)(Test.instanceCount | 1);
                break;
            case 112:
                i21 = 30429;
                break;
            case 70:
                f3 += i24;
                break;
            case 82:
                Test.iArrFld[i22 - 1] = i;
                break;
            default:
                Test.instanceCount *= -13348;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
