package tests.javafuzzer839;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:52:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2282746596003642451L;
    public static int iFld=-30767;
    public static boolean bFld=false;
    public byte byFld=-32;
    public float fFld=-2.519F;
    public static byte byArrFld[]=new byte[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)91);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b, int i1, int i2) {

        int i3=36715, i4=-253, iArr[]=new int[N];
        double d1=48.83751;
        float f1=-2.912F;
        byte by1=59;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr, 7508292911953094429L);

        for (i3 = 5; i3 < 278; ++i3) {
            iArr[i3] -= Test.iFld;
            iArr[i3 - 1] *= i1;
        }
        d1 += Test.instanceCount;
        Test.instanceCount <<= 10;
        for (long l2 : lArr) {
            i4 -= (int)10.575F;
            switch ((((Test.iFld >>> 1) % 7) * 5) + 43) {
            case 59:
                if (i4 != 0) {
                }
                l2 ^= -7586;
                iArr[(i3 >>> 1) % N] = i4;
            case 51:
                Test.byArrFld[(i2 >>> 1) % N] <<= (byte)Test.iFld;
                break;
            case 60:
                Test.iFld = i1;
                f1 = l2;
                by1 = (byte)i2;
            case 74:
                l2 >>= 152;
                break;
            case 45:
            case 67:
                i1 &= Test.iFld;
                break;
            case 58:
                lArr[(i2 >>> 1) % N] = i1;
            default:
                i4 *= i1;
            }
        }
        long meth_res = (b ? 1 : 0) + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + by1
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d, int i, byte by) {

        float f=-2.169F, fArr[]=new float[N];
        int i6=-12, i7=213, i8=-48860, i9=23, i10=9, i11=5, i12=-14, i13=231;

        FuzzerUtils.init(fArr, 1.307F);

        Test.iFld -= (int)(((i--) + (++i)) * f);
        i += (-iMeth(Test.bFld, Test.iFld, i));
        for (i6 = 1; i6 < 270; ++i6) {
            i -= i7;
            for (i8 = 1; i8 < 6; ++i8) {
                for (i10 = 1; i10 < 2; i10++) {
                    Test.bFld = Test.bFld;
                    i11 *= i11;
                    fArr[(-13 >>> 1) % N] = 14L;
                }
                f += Test.instanceCount;
                Test.instanceCount += (long)f;
                d += -6480L;
                for (i12 = 1; 2 > i12; ++i12) {
                    short s2=3946;
                    i13 += -14453;
                    s2 += (short)i12;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i + by + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 +
            i11 + i12 + i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l, long l1, short s1) {

        double d2=-12.97825;

        Test.iFld *= Math.max(Test.iFld++, --Test.iFld);
        vMeth1(d2, Test.iFld, (byte)(-32));
        Test.iFld -= (int)-125.224F;
        vMeth_check_sum += l + l1 + s1 + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr1) {

        short s=-14262;
        double d3=-13.83839;
        int i14=3618, i15=-1, i16=37941, i17=21, i18=-2, i19=198, iArr1[]=new int[N];
        long l3=-84L;

        FuzzerUtils.init(iArr1, -5);

        Test.instanceCount *= (Test.iFld - ((-56083 + (++Test.instanceCount)) + s));
        vMeth(Test.instanceCount, 3428515501L, s);
        for (d3 = 11; d3 < 331; d3++) {
            byFld = (byte)Test.iFld;
            i14 -= -182;
            i14 ^= -46;
            Test.iFld = (int)fFld;
            for (i15 = 79; i15 > 4; --i15) {
                i16 = -59409;
                switch (((i15 % 1) * 5) + 65) {
                case 69:
                default:
                    i14 = (int)Test.instanceCount;
                }
                Test.iFld |= 9;
                Test.instanceCount = Test.iFld;
                i14 -= i15;
                Test.iFld += (int)Test.instanceCount;
                Test.instanceCount = i16;
            }
            switch ((int)(((d3 % 1) * 5) + 94)) {
            case 99:
                iArr1[(int)(d3 + 1)] = (int)Test.instanceCount;
                break;
            default:
                lArrFld[(int)(d3)] >>= -100;
                i17 = 1;
                while (++i17 < 79) {
                    Test.instanceCount *= -11;
                    for (i18 = 1; i18 < 1; ++i18) {
                        byFld <<= (byte)i19;
                        i19 += i18;
                        Test.instanceCount -= Test.instanceCount;
                        iArr1[i17 + 1] += (int)Test.instanceCount;
                        i16 += (int)43349L;
                        Test.instanceCount += (((i18 * i19) + Test.instanceCount) - Test.instanceCount);
                        l3 = -105;
                        iArr1[i18] -= Test.iFld;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
