package tests.javafuzzer489;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:35:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2006007262L;
    public double dFld=77.87372;
    public static long lFld=2L;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -14378);
        FuzzerUtils.init(Test.fArrFld, 0.983F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth(int i5, long l, int i6) {


        i6 = i5;
        l = i6;
        vMeth_check_sum += i5 + l + i6;
    }

    public static void vMeth1() {

        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 97L);

        lArr2[(11049 >>> 1) % N] ^= 15;
        vMeth1_check_sum += FuzzerUtils.checkSum(lArr2);
    }

    public static int iMeth(int i10, int i11, int i12) {

        int i14=206, i15=12;

        vMeth1();
        i10 *= -15734;
        i11 += i10;
        Test.instanceCount >>= 205;
        for (int i13 : Test.iArrFld) {
            i10 = i10;
            for (i14 = 1; i14 < 4; i14 += 3) {
                i15 >>= i12;
                i15 *= i10;
                i13 -= i15;
                Test.instanceCount >>= i15;
                i10 = (int)Test.instanceCount;
                Test.iArrFld[i14 - 1] >>= (int)Test.instanceCount;
                i11 = -112;
                i12 = (int)Test.instanceCount;
            }
        }
        long meth_res = i10 + i11 + i12 + i14 + i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i2, int i3, int i4) {

        int i7=7, i8=-15, i9=3, i16=2, iArr[][]=new int[N][N];
        short s=22864, sArr[]=new short[N];
        long lArr1[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, -917063754866418972L);
        FuzzerUtils.init(iArr, -6121);
        FuzzerUtils.init(sArr, (short)14493);
        FuzzerUtils.init(byArr, (byte)-119);

        vMeth(--i7, 18826L, (int)((--i4) + (--Test.instanceCount)));
        switch (((((int)(Test.instanceCount + i8)) >>> 1) % 8) + 121) {
        case 121:
            switch (((((i2 + i7) >>> 1) % 3) * 5) + 6) {
            case 17:
                i9 = 1;
                while (++i9 < 185) {
                    lArr1 = lArr1;
                    i3 = iMeth(i3, i4, i8);
                    i3 += i9;
                    s += (short)(i9 - i8);
                    iArr[i9][i9 - 1] = (int)Test.instanceCount;
                    i8 += i9;
                }
                i8 -= i9;
                i16 = 1;
                while (++i16 < 346) {
                    Test.instanceCount += (-10 + (i16 * i16));
                    i7 -= (int)Test.instanceCount;
                    i3 += (int)Test.instanceCount;
                }
                break;
            case 20:
                i4 = i9;
                break;
            case 13:
                Test.instanceCount <<= -25;
            }
            break;
        case 122:
            i3 += i8;
            break;
        case 123:
            i2 += i16;
            break;
        case 124:
            i4 %= (int)(Test.instanceCount | 1);
            break;
        case 125:
            i8 = i4;
        case 126:
            byArr = byArr;
            break;
        case 127:
            i8 += (int)Test.instanceCount;
            break;
        case 128:
            Test.fArrFld[(i3 >>> 1) % N] *= 14;
            break;
        }
        long meth_res = i2 + i3 + i4 + i7 + i8 + i9 + s + i16 + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-29217, i1=-11, i17=38984, i18=2, i19=-179;
        float f=-1.69F;
        byte by=123;
        boolean b=true;
        long lArr[]=new long[N];
        short sArr1[]=new short[N];

        FuzzerUtils.init(lArr, -3131177707L);
        FuzzerUtils.init(sArr1, (short)-32280);

        for (i = 3; 371 > i; i++) {
            lArr[i] *= (long)(((i - 11) + (++i1)) + ((Test.instanceCount + f) * by));
            if (b) {
                i1 = (int)(Math.abs(124) + (-(-60555 - (Test.instanceCount - dFld))));
                lMeth(i, i, i);
                Test.instanceCount >>>= i;
            } else if (false) {
                for (i17 = i; i17 < 68; i17++) {
                    i19 = 1;
                    do {
                        i18 = i;
                        f += (float)-123.42634;
                        sArr1[i17 - 1] = by;
                        f *= i1;
                        f = i17;
                        if (b) continue;
                        try {
                            i18 = (552688853 % i18);
                            i18 = (-10677 % i);
                            Test.iArrFld[i19] = (Test.iArrFld[i17] % -23536);
                        } catch (ArithmeticException a_e) {}
                    } while (++i19 < 1);
                    i1 = i19;
                    Test.lFld += (i17 * i17);
                    f *= i1;
                    if (b) break;
                    dFld += f;
                    i18 += (int)dFld;
                    i18 = (int)f;
                }
                i18 ^= i17;
                i18 -= i19;
            } else {
                f += (i * i17);
            }
            switch (((i18 >>> 1) % 7) + 73) {
            case 73:
                if (true) {
                    Test.lFld -= i;
                    if (b) break;
                    sArr1[i - 1] = (short)i18;
                } else if (b) {
                    Test.iArrFld[i] = -64764;
                } else {
                    i18 -= 82;
                }
            case 74:
                i1 *= -9;
            case 75:
                i18 += (int)-72.122064;
                break;
            case 76:
                i1 = i19;
                break;
            case 77:
                Test.iArrFld[i - 1] += (int)-40.42015;
                break;
            case 78:
                by *= (byte)i;
            case 79:
                i1 *= i18;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
