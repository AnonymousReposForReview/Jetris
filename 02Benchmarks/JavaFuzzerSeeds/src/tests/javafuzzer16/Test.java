package tests.javafuzzer16;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:00:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-18L;
    public static byte byFld=35;
    public int iFld=2;
    public static volatile int iArrFld[]=new int[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -78);
        FuzzerUtils.init(Test.dArrFld, -106.124661);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i8, int i9) {

        long l=2423332331051052858L;
        int i10=-174, i11=70, i12=-216, i13=122, i14=-4;
        double d2=-105.109493;
        short s=6774;

        i9 += 51;
        i8 <<= i9;
        Test.instanceCount = -2;
        for (l = 288; 3 < l; --l) {
            i9 = (int)-29.664F;
            Test.instanceCount += i8;
            Test.iArrFld[(int)(l - 1)] -= i9;
            for (i11 = 1; i11 < 6; ++i11) {
                for (i13 = 1; i13 < 2; i13++) {
                    Test.iArrFld[(int)(l + 1)] *= (int)Test.instanceCount;
                    i9 = (int)d2;
                    i10 += (2 + (i13 * i13));
                    Test.iArrFld[i13 + 1] <<= i10;
                    s += Test.byFld;
                }
                i8 = i11;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i8 + i9 + l + i10 + i11 + i12 + i13 + i14 +
            Double.doubleToLongBits(d2) + s;
    }

    public static void vMeth1(int i6, int i7) {

        float f2=1.121F, f3=0.944F;
        int i15=-27559, i16=-198, i17=-81, i18=-9;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -145L);

        vMeth2(-79.856F, i6, i6);
        i7 -= (int)f2;
        i6 >>>= Test.byFld;
        for (i15 = 7; i15 < 175; ++i15) {
            f3 = i7;
            lArr[i15] -= -181L;
            i16 += (i15 * i15);
            f2 *= i16;
            i7 = i16;
            for (i17 = 1; i17 < 9; i17++) {
                f3 = i15;
                Test.instanceCount = -178;
                i6 += (i17 * Test.instanceCount);
                b = true;
                i6 *= i7;
            }
        }
        vMeth1_check_sum += i6 + i7 + Float.floatToIntBits(f2) + i15 + i16 + Float.floatToIntBits(f3) + i17 + i18 + (b
            ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i=13910, i1=108, i2=-11, i3=108, i4=1, i5=-4, i19=5, i20=1, i21=13;
        double d1=-1.68753;
        short s1=-4277;

        for (i = 8; 343 > i; i++) {
            Test.instanceCount += i;
            for (i2 = 1; i2 < 5; i2++) {
                float f=-40.933F;
                Test.instanceCount += (i2 - f);
                for (i4 = 1; i4 < 2; i4++) {
                    Test.iArrFld[i2] = (int)d1;
                    Test.dArrFld[i4] += i1;
                    Test.iArrFld[i] += (-(Test.iArrFld[i] * (--i3)));
                    vMeth1(i3, i2);
                    s1 += (short)i4;
                }
                for (i19 = 1; 2 > i19; ++i19) {
                    i20 = i20;
                    d1 = i1;
                    if (i19 != 0) {
                        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d1) + s1 + i19 + i20 +
                            i21;
                        return;
                    }
                    i20 = i21;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d1) + s1 + i19 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.85382;

        Test.instanceCount -= (long)(--d);
        vMeth();
        Test.iArrFld[(iFld >>> 1) % N] -= (int)Test.instanceCount;
        iFld -= iFld;
        Test.instanceCount <<= -3;
        Test.iArrFld[(-18373 >>> 1) % N] = (int)Test.instanceCount;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
