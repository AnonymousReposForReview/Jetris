package tests.javafuzzer407;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:18:41 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=23122L;
    public static int iFld=6;
    public static float fFld=85.734F;
    public static int iFld1=187;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 2427);
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.fArrFld, 0.892F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i1=-180, i2=57, i3=-5, i4=-16459, i5=8, i6=137, iArr[]=new int[N];
        double d1=-2.120539;
        float f1=-1.466F;
        byte by=-19;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 1398);
        FuzzerUtils.init(bArr, false);

        Test.instanceCount |= Test.iFld;
        switch (((Test.iFld >>> 1) % 4) + 43) {
        case 43:
            iArr[(Test.iFld >>> 1) % N] += 220;
            for (i1 = 5; i1 < 219; i1++) {
                for (i3 = 1; i3 < 8; i3++) {
                    Test.instanceCount += (long)Test.fFld;
                    Test.instanceCount = i3;
                    switch ((((i2 >>> 1) % 2) * 5) + 40) {
                    case 46:
                        d1 = i1;
                        f1 = i2;
                        break;
                    case 45:
                        i4 >>>= i1;
                        break;
                    default:
                        for (i5 = 1; i5 < 2; ++i5) {
                            d1 += 4L;
                        }
                        i4 *= Test.iFld;
                    }
                    bArr = FuzzerUtils.boolean1array(N, (boolean)false);
                }
            }
            break;
        case 44:
            Test.instanceCount &= 59306;
            break;
        case 45:
            i4 += (int)Test.fFld;
        case 46:
            Test.instanceCount = by;
            break;
        }
        vMeth2_check_sum += i1 + i2 + i3 + i4 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1) + i5 + i6 + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth1(int i, long l1, long l2) {

        int i7=-11, i8=241, i9=32307, i10=-4;
        byte by1=-65;
        float f2=71.178F;
        short s=23151, sArr[]=new short[N];
        boolean b=false;

        FuzzerUtils.init(sArr, (short)-2431);

        vMeth2();
        if (b) {
            for (i7 = 2; i7 < 264; ++i7) {
                if (b) {
                    Test.iArrFld[i7] = by1;
                    f2 = 1;
                    while (++f2 < 6) {
                        i = i;
                        sArr = FuzzerUtils.short1array(N, (short)10004);
                        for (i9 = 1; 1 > i9; i9++) {
                            i += i7;
                            if (i10 != 0) {
                                vMeth1_check_sum += i + l1 + l2 + i7 + i8 + by1 + Float.floatToIntBits(f2) + i9 + i10 +
                                    s + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr);
                                return;
                            }
                            Test.fFld += (55 + (i9 * i9));
                        }
                    }
                    Test.iArrFld[i7] = s;
                } else {
                    Test.iArrFld[i7 + 1] -= i7;
                    i >>= -11512;
                }
            }
        } else {
            vMeth1_check_sum += i + l1 + l2 + i7 + i8 + by1 + Float.floatToIntBits(f2) + i9 + i10 + s + (b ? 1 : 0) +
                FuzzerUtils.checkSum(sArr);
            return;
        }
        vMeth1_check_sum += i + l1 + l2 + i7 + i8 + by1 + Float.floatToIntBits(f2) + i9 + i10 + s + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(long l, float f, double d) {

        int i11=-42238, i12=1, i13=-5, i14=3333, i15=-16018, i16=-56656, i17=9713, i18=7318;
        boolean b1=false;

        vMeth1(9, -3076437282L, -664641488L);
        for (i11 = 8; 239 > i11; i11++) {
            d = i11;
            Test.iArrFld[i11 + 1] /= (int)60142L;
        }
        for (i13 = 203; i13 > 7; --i13) {
            i14 = -8;
            i15 = 1;
            do {
                for (i16 = 1; i16 < 1; ++i16) {
                    int i19=169;
                    i18 -= 137;
                    i14 = (int)588134577L;
                    l += (((i16 * i14) + i13) - i13);
                    l -= (long)f;
                    if (b1) {
                        i17 += (i16 * i19);
                        i17 ^= (int)l;
                    } else {
                        i12 += (i16 * i16);
                    }
                }
            } while (++i15 < 8);
        }
        vMeth_check_sum += l + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 + i16
            + i17 + i18 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        double d2=-31.109228;
        boolean b2=false;
        byte by2=94;
        int i20=-11, i21=-174, i22=-29923, i23=3, i24=216, i25=148, i26=160, i27=-28879;

        vMeth(Test.instanceCount, Test.fFld, d2);
        Test.bArrFld[(Test.iFld >>> 1) % N] = b2;
        by2 -= by2;
        for (i20 = 10; i20 < 263; i20++) {
            Test.instanceCount <<= Test.iFld;
            try {
                i21 = (62073 / i20);
                i21 = (i21 % 38132);
                Test.iFld = (i20 % 430361353);
            } catch (ArithmeticException a_e) {}
        }
        for (i22 = 265; 5 < i22; --i22) {
            switch (((i22 % 6) * 5) + 40) {
            case 47:
                i23 = Test.iFld;
                i24 = 97;
                while (--i24 > 0) {
                    i21 += (i24 * i24);
                    for (i25 = 1; i25 < 1; i25++) {
                        short s1=23682;
                        i26 += i25;
                        if (b2) {
                            switch ((i22 % 1) + 6) {
                            case 6:
                                b2 = b2;
                                try {
                                    i21 = (Test.iFld1 / i24);
                                    Test.iFld = (-450944491 / i26);
                                    i23 = (i26 / -215);
                                } catch (ArithmeticException a_e) {}
                                Test.instanceCount = Test.iFld;
                                break;
                            default:
                                Test.iArrFld[(i27 >>> 1) % N] *= i23;
                                s1 = (short)-47;
                                Test.fFld *= Test.fFld;
                            }
                            switch (((i24 % 10) * 5) + 122) {
                            case 136:
                                i27 += (i25 ^ Test.instanceCount);
                                Test.instanceCount = i21;
                                i27 >>= i25;
                            case 159:
                                s1 = (short)i27;
                                i27 += i23;
                            case 124:
                                Test.iArrFld[i25 + 1] = i27;
                                break;
                            case 144:
                                Test.iArrFld[i24 + 1] *= Test.iFld;
                                break;
                            case 129:
                                Test.iFld1 = (int)1.212F;
                                break;
                            case 171:
                                Test.instanceCount &= i24;
                                break;
                            case 147:
                                Test.iArrFld[i22 - 1] = i27;
                            case 155:
                                Test.fArrFld[i22 - 1] += i20;
                            case 162:
                                Test.instanceCount = -2564;
                                break;
                            case 126:
                                Test.iFld = i21;
                                break;
                            }
                        }
                    }
                }
                break;
            case 53:
                Test.iFld1 <<= i27;
            case 51:
                if (b2) break;
                break;
            case 52:
            case 59:
                Test.iFld1 -= i27;
                break;
            case 55:
                Test.instanceCount <<= -2;
            default:
                b2 = b2;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
