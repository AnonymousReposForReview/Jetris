package tests.javafuzzer2851;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:27:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=146L;
    public static double dFld=79.118423;
    public static float fFld=33.666F;
    public static int iArrFld[]=new int[N];
    public static short sArrFld[][]=new short[N][N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -43);
        FuzzerUtils.init(Test.sArrFld, (short)-11381);
        FuzzerUtils.init(Test.lArrFld, -74L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d=14.95844;
        int i7=-23, i8=-19787, i9=-53;
        float f=-22.524F;
        byte by1=34, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)10);

        for (d = 13; d < 307; d++) {
            i7 *= 0;
            i7 = i7;
            Test.iArrFld[(int)(d)] <<= i7;
            Test.instanceCount = -183;
            for (i8 = 1; i8 < 6; ++i8) {
                f *= (float)d;
                byArr[(int)(d - 1)] = (byte)i7;
                Test.lArrFld[i8 - 1] -= (long)f;
                f += (-50542 + (i8 * i8));
            }
            Test.instanceCount = i8;
            i9 += (int)(d + by1);
            Test.instanceCount = i8;
            i7 *= (int)44.913F;
        }
        Test.iArrFld[(38445 >>> 1) % N] = -7;
        vMeth1_check_sum += Double.doubleToLongBits(d) + i7 + i8 + i9 + Float.floatToIntBits(f) + by1 +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth() {

        int i5=-10, i6=12;
        long l=-7L;

        i5 = 1;
        do {
            for (l = 1; l < 5; ++l) {
                if (i5 != 0) {
                    vMeth_check_sum += i5 + l + i6;
                    return;
                }
                vMeth1();
                Test.dFld += l;
                i6 -= (int)Test.fFld;
                i6 <<= i5;
                i6 += i6;
                i6 &= -18780;
                i6 *= 6;
            }
        } while (++i5 < 368);
        vMeth_check_sum += i5 + l + i6;
    }

    public static int iMeth() {

        int i2=14, i3=59991, i4=200, i10=39863, i11=41866, i12=94, i13=-3742, i14=9;
        byte by=20;
        float f1=-96.963F;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, -85.36523);

        i2 = (int)((by++) - ((i2 - i2) * (--Test.instanceCount)));
        Test.sArrFld[(i2 >>> 1) % N][(i2 >>> 1) % N] = (short)(i2 = (++i2));
        for (i3 = 12; i3 < 375; i3++) {
            vMeth();
            for (i10 = 1; i10 < 5; ++i10) {
                i4 = i2;
                Test.instanceCount -= 12414;
                i2 <<= -38;
            }
            for (i12 = 1; i12 < 5; i12++) {
                i13 = (int)Test.instanceCount;
                for (f1 = 1; f1 < 2; f1++) {
                    switch ((i12 % 4) + 2) {
                    case 2:
                        dArr1[(int)(f1 + 1)] -= 1.3966;
                        break;
                    case 3:
                        Test.instanceCount = 46441;
                    case 4:
                        i13 >>= 9;
                        break;
                    case 5:
                        i14 *= i13;
                        break;
                    default:
                        i4 += (int)(f1 * f1);
                    }
                }
            }
        }
        long meth_res = i2 + by + i3 + i4 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=1, i15=60397, i16=-32512, i17=-14, i18=138, i19=21068, i20=12, i21=224;
        byte by2=-98;
        boolean b=true;
        short s=12779;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.129724);

        for (i = 8; i < 333; ++i) {
            i1 += (int)((Test.instanceCount * (i1 ^ 30563L)) << i1);
            Test.iArrFld[i + 1] = (int)(-(dArr[i]++));
            i1 += (((i * i) + i) - i);
            i1 *= (int)((Test.instanceCount--) * ((--Test.iArrFld[i]) * iMeth()));
            i1 += (i * i1);
            for (i15 = 1; i15 < 77; ++i15) {
                Test.instanceCount += (i15 ^ i16);
                for (i17 = 1; 2 > i17; i17++) {
                    Test.iArrFld[i17] = -113;
                    Test.dFld -= Test.instanceCount;
                    i16 -= (int)Test.dFld;
                    i1 = (int)Test.instanceCount;
                    Test.instanceCount += i18;
                    by2 += (byte)i17;
                    i18 += (((i17 * Test.instanceCount) + i16) - Test.fFld);
                    Test.instanceCount = i15;
                    b = false;
                }
            }
            i19 = 77;
            do {
                s <<= by2;
            } while (--i19 > 0);
            if (false) break;
            s += (short)(i + Test.fFld);
        }
        i1 <<= i19;
        Test.instanceCount = 3590778510L;
        Test.iArrFld[(i15 >>> 1) % N] *= i19;
        Test.instanceCount = i17;
        for (i20 = 1; i20 < 158; i20++) {
            i1 -= i;
            i21 >>= i16;
            dArr[i20 + 1] -= i19;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
