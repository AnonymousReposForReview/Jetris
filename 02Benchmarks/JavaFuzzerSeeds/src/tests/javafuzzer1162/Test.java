package tests.javafuzzer1162;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:56:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static float fFld=1.1012F;
    public static double dFld=-1.3356;
    public byte byFld=6;
    public static short sFld=-20896;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[][]=new float[N][N];
    public static double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 959329505L);
        FuzzerUtils.init(Test.fArrFld, 1.62F);
        FuzzerUtils.init(Test.dArrFld, -2.60871);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=21, i6=236, i7=238, i8=-18320, i9=134, iArr1[]=new int[N];
        byte by=-119, byArr[]=new byte[N];
        short s=-21984;
        boolean b=true;

        FuzzerUtils.init(iArr1, 53);
        FuzzerUtils.init(byArr, (byte)-54);

        for (int i4 : iArr1) {
            iArr1 = iArr1;
            i5 = 1;
            while (++i5 < 4) {
                i4 <<= 11;
                for (i6 = 1; i6 < 1; ++i6) {
                    Test.instanceCount <<= Test.instanceCount;
                }
                for (i8 = 1; 1 > i8; ++i8) {
                    try {
                        i7 = (i8 % 25085);
                        i4 = (i4 / i6);
                        i7 = (-234 / i7);
                    } catch (ArithmeticException a_e) {}
                    i7 = by;
                    s += (short)i8;
                    i7 += i9;
                }
                if (b) break;
                i4 -= (int)Test.instanceCount;
            }
        }
        Test.instanceCount = i5;
        byArr[(-63 >>> 1) % N] = (byte)12787;
        vMeth2_check_sum += i5 + i6 + i7 + i8 + i9 + by + s + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1() {

        int i3=-90, i10=79, i11=0, i12=5, i13=-185, i14=13, i15=-7447, iArr[]=new int[N];
        byte by1=-111;
        boolean b1=true;

        FuzzerUtils.init(iArr, -10);

        Test.instanceCount <<= (iArr[(i3 >>> 1) % N] - i3);
        vMeth2();
        Test.fFld += 1803231962L;
        Test.fArrFld[(i3 >>> 1) % N][(11 >>> 1) % N] = i3;
        for (long l1 : Test.lArrFld) {
            by1 = (byte)i3;
        }
        if (b1) {
            Test.instanceCount /= (i3 | 1);
            i3 -= -2523;
            for (i10 = 12; i10 < 397; i10++) {
                for (i12 = 1; i12 < 4; ++i12) {
                    for (i14 = 1; i14 < 2; ++i14) {
                        i13 -= i14;
                    }
                }
                Test.instanceCount <<= 39057;
                Test.instanceCount += i10;
            }
        } else {
            Test.instanceCount = i12;
        }
        vMeth1_check_sum += i3 + by1 + i10 + i11 + i12 + i13 + i14 + i15 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i1=85, i2=-18644, i17=-3292, i18=-9104, i19=-12, i20=-3, i21=-146, i22=57, iArr2[]=new int[N];
        boolean b2=false;

        FuzzerUtils.init(iArr2, 28197);

        for (i1 = 1; i1 < 238; i1++) {
            vMeth1();
            for (i17 = 7; i17 > 1; i17 -= 2) {
                iArr2[i1] += -46;
                Test.dArrFld[i1 + 1] = Test.fFld;
                Test.fFld -= -23326;
            }
            for (i19 = 1; i19 < 7; i19++) {
                i2 -= i1;
                b2 = b2;
                i20 = i17;
                i18 += -2;
                for (i21 = 2; i21 > i1; i21 -= 2) {
                    Test.dFld += Test.instanceCount;
                    i2 += (int)Test.fFld;
                    i20 = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i17 + i18 + i19 + i20 + (b2 ? 1 : 0) + i21 + i22 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-65, i23=52496, i24=-3967, i25=-2667, i26=12, i27=-8, i28=57842;
        float f=0.536F;
        long l2=-49L;
        double d=-2.100354;
        boolean b3=false;

        i = (int)f;
        vMeth();
        Test.instanceCount *= i;
        iArrFld[(i >>> 1) % N] -= i;
        for (l2 = 4; l2 < 313; ++l2) {
            for (i24 = 3; 81 > i24; i24 += 2) {
                i25 += i24;
                iArrFld[i24 + 1] -= i24;
                Test.instanceCount -= -14;
                i25 |= i24;
            }
            d = 1;
            do {
                i23 <<= i23;
                for (i26 = (int)(l2); 1 > i26; ++i26) {
                    switch ((i26 % 9) + 115) {
                    case 115:
                    case 116:
                        byFld = byFld;
                    case 117:
                        i = (int)l2;
                        Test.instanceCount ^= 14;
                        i23 = -41918;
                        if (b3) {
                            Test.instanceCount = Test.sFld;
                        } else if (b3) {
                            i25 = (int)l2;
                            i = Test.sFld;
                            i27 = (int)Test.instanceCount;
                            i23 = 56;
                        } else if (b3) {
                            i23 *= (int)Test.instanceCount;
                            i27 = (int)7547751918015334474L;
                            switch ((int)(((l2 % 1) * 5) + 4)) {
                            case 6:
                                i = i23;
                                Test.sFld += (short)i26;
                                i25 += (((i26 * i) + Test.sFld) - i24);
                                break;
                            }
                        } else {
                            i27 <<= (int)l2;
                        }
                        break;
                    case 118:
                        f *= i26;
                    case 119:
                        i27 = -4163;
                    case 120:
                        i28 += (((i26 * i23) + i) - i25);
                        break;
                    case 121:
                        i23 = (int)l2;
                        break;
                    case 122:
                        Test.instanceCount >>= -69;
                        break;
                    case 123:
                        if (b3) break;
                        break;
                    default:
                        i ^= i;
                    }
                }
            } while (++d < 81);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
