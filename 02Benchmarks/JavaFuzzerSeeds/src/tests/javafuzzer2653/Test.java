package tests.javafuzzer2653;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:05:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public static byte byFld=106;
    public static double dFld=0.88413;
    public static float fFld=0.452F;
    public static short sFld=-26274;
    public static int iArrFld[]=new int[N];
    public static volatile int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 50921);
        FuzzerUtils.init(Test.iArrFld1, -1);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6) {

        float f=-2.135F;
        int i7=-219, i8=-8, i9=-12, i10=-191, i11=-144, i12=-12060, i13=-5040, i14=-5182;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 39493L);

        for (f = 4; f < 297; ++f) {
            i6 <<= i7;
            i8 = 1;
            while (++i8 < 6) {
                i7 += (int)Test.instanceCount;
                Test.dFld -= i8;
            }
            switch ((int)((f % 7) + 89)) {
            case 89:
                i6 *= (int)Test.fFld;
                for (i9 = 1; i9 < 6; ++i9) {
                    i11 -= i7;
                    for (i12 = (int)(f); i12 < 2; ++i12) {
                        i13 = i6;
                        switch (((i9 % 4) * 5) + 67) {
                        case 78:
                            try {
                                i7 = (30476 % Test.iArrFld[i9]);
                                i11 = (i14 / -52534);
                                i14 = (i11 % -31586);
                            } catch (ArithmeticException a_e) {}
                        case 85:
                            i6 = i10;
                        case 70:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 76:
                            i6 *= i8;
                            break;
                        default:
                            i10 -= 0;
                        }
                    }
                }
            case 90:
                i13 -= i6;
                break;
            case 91:
            case 92:
                Test.instanceCount = 35;
                break;
            case 93:
                i10 -= i12;
            case 94:
                lArr1[(int)(f - 1)] = i10;
            case 95:
                i11 = Test.sFld;
                break;
            }
        }
        vMeth2_check_sum += i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1() {

        int i2=-7526, i3=47718, i4=-224, i5=61898, i15=1, i16=-64, i17=-13233, iArr1[]=new int[N];
        long l=-52282L, l1=-6L, lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -39055L);
        FuzzerUtils.init(iArr1, 234);

        for (i2 = 3; 172 > i2; ++i2) {
            for (i4 = 1; 9 > i4; i4++) {
                Test.iArrFld[i2 + 1] -= (int)lArr[i2 - 1][i4];
                Test.instanceCount += (((i4 * i2) + Test.instanceCount) - i3);
                vMeth2(i3);
                iArr1[i2] = i3;
                iArr1[i2] -= Test.byFld;
            }
            for (i15 = 1; i15 < 9; i15++) {
                i5 >>= i4;
                for (l = 2; l > 1; l -= 2) {
                    i17 = (int)Test.instanceCount;
                }
                l1 = 1;
                do {
                    i5 *= i3;
                    Test.instanceCount -= Test.instanceCount;
                    Test.iArrFld[i15] = 184;
                } while (++l1 < 2);
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i15 + i16 + l + i17 + l1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i=-36490, i1=-4, i18=-9, i19=35169, i20=-34620, i21=135, i22=11, i23=-10093, iArr[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, 16);

        for (i = 7; i < 365; ++i) {
            iArr = (iArr = (iArr = (iArr = iArr)));
            i1 += i;
            Test.instanceCount = (Test.instanceCount++);
        }
        Test.byFld >>>= (byte)(((-6531165581329431193L - (Test.instanceCount * Test.dFld)) * (i1 - Test.fFld)) * ((i >>
            Test.sFld) + (i1 + Test.fFld)));
        vMeth1();
        if (b) {
            for (i18 = 384; i18 > 19; --i18) {
                Test.fFld -= i18;
                i1 = (int)Test.fFld;
                if (i18 != 0) {
                    vMeth_check_sum += i + i1 + i18 + i19 + i20 + i21 + i22 + i23 + (b ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                for (i20 = 1; i20 < 5; i20++) {
                    for (i22 = 1; i22 < 2; i22++) {
                        i23 = (int)113.81367;
                        Test.sFld += (short)Test.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i18 + i19 + i20 + i21 + i22 + i23 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i24=50, i25=-241, i27=1160, i28=-161, i29=6, i30=402;
        boolean b1=false;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -46696L);

        vMeth();
        for (i24 = 19; i24 < 372; i24++) {
            try {
                i25 = (i24 % 170);
                i25 = (i24 % i24);
                i25 = (i25 % i25);
            } catch (ArithmeticException a_e) {}
            i25 += i24;
            for (i27 = i24; 71 > i27; ++i27) {
                for (i29 = 1; i29 < 1; i29++) {
                    Test.fFld += (2L + (i29 * i29));
                    Test.instanceCount += Test.byFld;
                    switch ((i29 % 6) + 25) {
                    case 25:
                        Test.iArrFld[i29] = (int)Test.instanceCount;
                        i25 %= (int)(i27 | 1);
                        if (b1) {
                            i25 *= i27;
                            Test.fFld += (i29 * i29);
                        } else {
                            i28 = i30;
                            i30 += i29;
                            i30 += (i29 * i29);
                            i28 = (int)Test.fFld;
                        }
                        i28 += (i29 + i27);
                        break;
                    case 26:
                        Test.instanceCount >>= i29;
                        break;
                    case 27:
                        i25 *= i24;
                        break;
                    case 28:
                    case 29:
                        Test.iArrFld1 = Test.iArrFld1;
                        i25 = i30;
                        break;
                    case 30:
                        lArr2[i29 + 1] >>>= Test.instanceCount;
                        i28 <<= (int)Test.instanceCount;
                        i28 = (int)Test.instanceCount;
                        break;
                    default:
                        i28 = (int)Test.instanceCount;
                        i25 = 249;
                        Test.iArrFld[i29] &= 3;
                        i25 -= i28;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
