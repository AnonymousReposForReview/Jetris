package tests.javafuzzer1076;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:09:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=41269L;
    public static int iFld=-9;
    public static volatile float fFld=0.786F;
    public static short sFld=-15577;
    public static long lFld=1117911721L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 45);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        boolean b=false;
        float f1=2.282F;
        int i4=2, i5=6, i6=6, i7=102, i8=7, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -11);

        b = b;
        f1 = Test.iFld;
        iArr[(Test.iFld >>> 1) % N] = (int)Test.instanceCount;
        i4 = 1;
        do {
            Test.iFld = (int)f1;
            Test.instanceCount += (long)f1;
            switch (((i4 >>> 1) % 5) + 60) {
            case 60:
                for (i5 = 1; i5 < 6; ++i5) {
                    i6 += i6;
                    i6 -= (int)Test.instanceCount;
                    for (i7 = i4; i7 < 2; i7++) {
                        Test.instanceCount <<= Test.instanceCount;
                        Test.iFld += (int)Test.instanceCount;
                    }
                    try {
                        iArr[i5 + 1] = (-63516 % iArr[i5]);
                        i6 = (iArr[i4 - 1] / i6);
                        Test.iFld = (Test.iFld % 37);
                    } catch (ArithmeticException a_e) {}
                    i8 |= i5;
                }
                break;
            case 61:
                f1 += (i4 * i4);
                break;
            case 62:
            case 63:
                iArr = iArr;
            case 64:
                iArr[i4 - 1] >>= i5;
                break;
            }
        } while (++i4 < 264);
        vMeth2_check_sum += (b ? 1 : 0) + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(float f, long l) {

        int i3=58623, i9=52056, i10=70, i11=124, iArr1[]=new int[N];
        short s=-21000;
        double d=-1.77072;
        byte by=-24, byArr[]=new byte[N];
        float f2=-10.869F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 431231662L);
        FuzzerUtils.init(byArr, (byte)-103);
        FuzzerUtils.init(iArr1, -20);

        i3 = 1;
        do {
            vMeth2();
            lArr[i3 + 1] -= s;
            for (d = i3; d < 8; d++) {
                i9 = (int)l;
                Test.iFld += (int)d;
                byArr[(int)(d - 1)] -= by;
                for (i10 = 1; i10 < 1; ++i10) {
                    Test.iFld = i9;
                    try {
                        i11 = (iArr1[i3] / 59);
                        i11 = (Test.iFld / i10);
                        i9 = (Test.iFld % i11);
                    } catch (ArithmeticException a_e) {}
                    switch ((i10 % 2) + 27) {
                    case 27:
                        try {
                            i9 = (i3 / i11);
                            iArr1[(int)(d - 1)] = (i3 / 1146999535);
                            Test.iFld = (i11 % iArr1[i3 - 1]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 28:
                        i9 += (63195 + (i10 * i10));
                        iArr1[(int)(d)] -= i3;
                        break;
                    }
                    f2 = i11;
                }
            }
        } while (++i3 < 202);
        vMeth1_check_sum += Float.floatToIntBits(f) + l + i3 + s + Double.doubleToLongBits(d) + i9 + by + i10 + i11 +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, int i1, int i2) {

        float f3=2.4F;

        vMeth1(f3, Test.instanceCount);
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f3);
    }

    public void mainTest(String[] strArr1) {

        int i12=14, i13=-2716, i14=-51, i15=3195, i17=-1, i18=250, i19=-75, i20=-9;
        double d1=0.6260;
        boolean b1=true, bArr[]=new boolean[N];
        long lArr1[]=new long[N];
        byte byArr1[]=new byte[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, -149L);
        FuzzerUtils.init(byArr1, (byte)11);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, 1.333F);

        vMeth(Test.iFld, i12, Test.iFld);
        i13 = 1;
        do {
            Test.iFld = (int)Test.instanceCount;
            Test.iFld = (int)Test.instanceCount;
            switch ((i13 % 10) + 115) {
            case 115:
                for (i14 = 6; i14 < 122; ++i14) {
                    Test.fFld /= (i13 | 1);
                    Test.sFld &= (short)i15;
                }
                break;
            case 116:
                Test.iFld *= i13;
                lArr1[i13 - 1] <<= i14;
                break;
            case 117:
                byArr1[i13 + 1] = (byte)Test.sFld;
                i15 -= (int)d1;
                break;
            case 118:
                Test.iArrFld[i13 - 1] *= i12;
                Test.lFld += i13;
            case 119:
            case 120:
                if (b1) {
                    for (i17 = 5; i17 < 122; i17++) {
                        for (i19 = 1; 2 > i19; i19++) {
                            switch ((i13 % 1) + 13) {
                            case 13:
                            }
                            i12 -= i15;
                            Test.lFld = i13;
                            i18 = i18;
                            i20 += i19;
                            i15 <<= (int)Test.lFld;
                            Test.instanceCount -= Test.instanceCount;
                            byArr1[i19 + 1] = (byte)i14;
                            d1 += i13;
                            Test.instanceCount = (long)d1;
                        }
                        Test.lFld <<= Test.instanceCount;
                        i18 = 45;
                        bArr[i17 + 1] = b1;
                    }
                } else {
                    Test.fFld = i14;
                }
                break;
            case 121:
                fArr[i13 + 1] -= i20;
            case 122:
                d1 *= -6849;
                break;
            case 123:
                Test.lFld *= Test.lFld;
            case 124:
                Test.fFld = i19;
                break;
            }
        } while (++i13 < 205);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
