package tests.javafuzzer731;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:43:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public int iFld=26195;
    public int iFld1=97;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        double d=2.8705;
        float f=-1.362F;
        int i1=-59806, i2=-32749, i3=-20300, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -35196L);
        FuzzerUtils.init(iArr1, -5);

        d = 10449;
        f = 313;
        while (--f > 0) {
            lArr[(int)(f - 1)] |= Test.instanceCount;
        }
        Test.instanceCount *= i1;
        iArr1[(i1 >>> 1) % N] -= (int)Test.instanceCount;
        Test.instanceCount = i1;
        for (i2 = 12; i2 < 219; i2++) {
            if (i3 != 0) {
            }
            iArr1[i2] *= (int)f;
            i3 = 86;
        }
        iArr1[(i2 >>> 1) % N] = i1;
        long meth_res = Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i1 + i2 + i3 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i=20190, i4=-131, i5=-32936, i6=12, i7=-9, i8=191, i9=58, iArr2[]=new int[N];
        float f1=1.314F;
        short sArr[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(sArr, (short)-26928);
        FuzzerUtils.init(lArr1, 25399L);
        FuzzerUtils.init(iArr2, -8);

        i = iMeth1();
        for (i4 = 5; i4 < 245; i4 += 2) {
            sArr[i4 + 1] -= (short)i4;
            for (i6 = 1; i6 < 13; i6++) {
                i >>= -115;
                lArr1[i4] /= 40688386776794131L;
            }
            f1 /= (Test.instanceCount | 1);
            try {
                i7 = (iArr2[i4 - 1] % -42938);
                iArr2[i4 - 1] = (i % -79);
                i = (i / iArr2[i4 - 1]);
            } catch (ArithmeticException a_e) {}
            i *= i7;
            for (i8 = 13; i4 < i8; i8--) {
                byte by=12;
                iArr2[i8 - 1] += i;
                f1 += i8;
                i9 = i6;
                i5 += (((i8 * by) + i) - i);
                Test.instanceCount += (-98 + (i8 * i8));
            }
        }
        long meth_res = i + i4 + i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {


        iFld >>= iMeth();
        iFld = iFld;
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        double d1=18.36319;
        int i11=62, i12=4, i13=-58510, i14=6, i15=10, i16=190, iArr[]=new int[N];
        float f2=56.765F, f3=-1.535F;
        boolean b=false;
        short s=9666;

        FuzzerUtils.init(iArr, 39276);

        Test.instanceCount = (long)(-60.914F * (++iArr[(iFld >>> 1) % N]));
        iFld = iFld;
        vMeth();
        Test.instanceCount *= Test.instanceCount;
        for (int i10 : iArr) {
            i10 <<= iFld;
            iFld >>= iFld;
            iFld1 |= -1;
            iFld1 = iFld;
            iFld += 7;
            d1 *= i10;
            i10 *= iFld;
            i11 = 1;
            while (++i11 < 63) {
                Test.instanceCount += (i11 * i11);
                i10 -= (int)d1;
                Test.instanceCount += (long)f2;
                f2 = Test.instanceCount;
                f2 = Test.instanceCount;
                iFld |= iFld;
                b = b;
                iFld = i10;
                iFld1 = i10;
            }
            d1 = d1;
        }
        for (i12 = 12; i12 < 270; ++i12) {
            for (i14 = 97; i14 > 2; i14--) {
                for (f3 = 1; f3 < 2; ++f3) {
                    s |= (short)Test.instanceCount;
                    i16 = (int)Test.instanceCount;
                    i13 = i13;
                    try {
                        iFld1 = (i11 % i16);
                        iArr[(int)(f3)] = (-26472 / iArr[(int)(f3)]);
                        i16 = (i16 / 52871);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
