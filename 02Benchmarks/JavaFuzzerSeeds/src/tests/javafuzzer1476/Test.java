package tests.javafuzzer1476;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 21:16:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=136L;
    public volatile int iFld=-4;
    public static float fFld=-1.982F;
    public static short sFld=21891;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 21);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth1(long l, int i1) {

        double d=0.125858;
        int i2=132, i3=8, i4=-113, i5=-10, i6=2, i7=179, i8=169, i9=14, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1969617331L);
        FuzzerUtils.init(iArr, 202);

        lArr[(i1 >>> 1) % N] += i1;
        d += Test.instanceCount;
        iArr[(-112 >>> 1) % N] *= i1;
        d = i1;
        for (i2 = 9; i2 < 193; i2++) {
            i1 |= i1;
            i1 += (int)Test.fFld;
            for (i4 = 1; 9 > i4; ++i4) {
                iFld >>= -104;
                i5 = i1;
                for (i6 = 1; i6 < 2; ++i6) {
                    iArr[i6 - 1] = (int)Test.instanceCount;
                }
                for (i8 = i2; i8 < 2; ++i8) {
                    iFld += 17934;
                    i3 += (i8 * i8);
                }
            }
        }
        vMeth1_check_sum += l + i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {

        int i=77, i10=-14, i11=175;
        double d1=112.96296;

        i = 1;
        while (++i < 306) {
            Test.instanceCount ^= -13;
            vMeth1(Test.instanceCount, iFld);
            i10 = 1;
            while (++i10 < 5) {
                Test.iArrFld[i + 1] ^= 183;
                iFld <<= i;
                i11 += iFld;
                iFld /= (int)(i10 | 1);
            }
            d1 = 1;
            do {
                iFld += i11;
                i11 += 26351;
                iFld = i11;
                Test.fFld = i10;
                iFld = Test.sFld;
                fArrFld[i - 1] *= i11;
            } while (++d1 < 5);
        }
        vMeth_check_sum += i + i10 + i11 + Double.doubleToLongBits(d1);
    }

    public int iMeth() {

        int i12=14, i13=42, i14=90, i15=-14;

        vMeth();
        for (i12 = 5; i12 < 298; i12++) {
            i13 *= i13;
            for (i14 = i12; i14 < 6; ++i14) {
                switch ((i14 % 2) + 2) {
                case 2:
                    Test.iArrFld[i12] = i14;
                    Test.iArrFld[i14 + 1] >>>= i14;
                    break;
                case 3:
                    Test.iArrFld = Test.iArrFld;
                    switch (((i14 % 7) * 5) + 55) {
                    case 63:
                        iFld = 252;
                        i13 *= (int)Test.fFld;
                        Test.fFld -= i12;
                    case 67:
                        Test.instanceCount += iFld;
                        break;
                    case 76:
                        i15 = i14;
                        Test.iArrFld[i12] = (int)Test.instanceCount;
                        break;
                    case 82:
                    case 59:
                    case 73:
                        i15 = i13;
                    case 79:
                        iFld *= i13;
                    }
                    break;
                }
            }
        }
        long meth_res = i12 + i13 + i14 + i15;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=63058, i17=97, i18=7, i19=10, i20=-122, i21=13424, i22=-39772, i23=100, i24=-39608, i25=-59829;
        double d2=-60.68684;
        byte by=61;

        iFld += -7;
        iFld = Math.abs(iMeth());
        iFld = (int)Test.instanceCount;
        Test.fFld += iFld;
        for (i16 = 4; i16 < 289; i16++) {
            Test.sFld = (short)i17;
            for (d2 = 88; 2 < d2; --d2) {
                Test.fFld *= i16;
                Test.iArrFld[i16 - 1] = i17;
            }
            i19 = 1;
            while (++i19 < 88) {
                boolean b=false;
                i18 = (int)58397L;
                if (b) continue;
                i17 += (int)Test.instanceCount;
                for (i20 = i16; i20 < 1; i20++) {
                    iFld = (int)-12.32953;
                    Test.iArrFld[i20 + 1] -= i21;
                    by += (byte)(i20 | iFld);
                }
                switch (((i19 % 1) * 5) + 119) {
                case 122:
                }
                for (i22 = 1; 1 > i22; i22++) {
                    Test.instanceCount *= i24;
                    i23 >>= (int)Test.instanceCount;
                    i23 *= i22;
                    Test.instanceCount += (i22 - i18);
                    fArrFld[i19 + 1] += 47L;
                    Test.fFld = Test.instanceCount;
                }
                i25 = 1;
                while (++i25 < 1) {
                    i23 += (int)-48.492F;
                    i18 ^= -204;
                    i23 *= i24;
                }
            }
            iFld = iFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
