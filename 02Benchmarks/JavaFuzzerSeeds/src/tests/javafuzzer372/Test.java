package tests.javafuzzer372;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:56:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=118647624985006464L;
    public short sFld=29420;
    public double dFld=1.94414;
    public static double dFld1=-111.3085;
    public static byte byFld=-21;
    public static volatile float fFld=72.816F;
    public static int iFld=229;
    public static long lArrFld[][]=new long[N][N];
    public static long lArrFld1[]=new long[N];
    public boolean bArrFld[]=new boolean[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -210L);
        FuzzerUtils.init(Test.lArrFld1, -28081270L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i6=42, i7=-245, i8=-228;
        boolean b1=true;
        float f1=-51.151F;

        for (i6 = 10; i6 < 219; i6++) {
            i7 -= -7804;
            switch (((i6 % 1) * 5) + 7) {
            case 10:
                if (b1) {
                    i7 += (((i6 * i6) + Test.instanceCount) - i7);
                    b1 = false;
                    f1 += i6;
                    i7 >>>= i6;
                } else if (b1) {
                    i7 = (int)Test.instanceCount;
                    i7 = 104;
                    i7 &= i7;
                } else {
                    i8 = 1;
                    do {
                        Test.dFld1 -= Test.instanceCount;
                        Test.instanceCount = -111;
                        i7 = 17260;
                    } while (++i8 < 8);
                }
                break;
            default:
                Test.instanceCount = 47630;
            }
        }
        long meth_res = i6 + i7 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f, boolean b, long l) {

        int i4=58797, i5=47031, i9=136, i10=118, iArr[]=new int[N];
        double d=7.12125;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 56518);
        FuzzerUtils.init(fArr, 0.622F);

        for (i4 = 9; 302 > i4; i4++) {
            if ((iArr[i4 - 1] * Math.sqrt(Math.sqrt(d))) <= iMeth()) break;
            if (b) {
                i9 = 1;
                do {
                    switch (((i9 >>> 1) % 1) + 43) {
                    case 43:
                        i10 -= i9;
                        fArr[i9 + 1] += i9;
                        f = i5;
                        Test.dFld1 = 8020;
                        break;
                    }
                    Test.lArrFld[i4] = Test.lArrFld[i4];
                    f += (i9 + i4);
                    i5 -= (int)l;
                } while (++i9 < 6);
                i5 += (int)(-3596381035L + (i4 * i4));
                f += i4;
                i10 = Test.byFld;
            } else if (b) {
                iArr = iArr;
            } else if (b) {
                i10 -= i5;
            } else {
                i5 >>= i4;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + (b ? 1 : 0) + l + i4 + i5 + Double.doubleToLongBits(d) + i9 + i10
            + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(int i) {

        int i1=-4, i2=24, i3=29831;
        byte by=65, by1=-17;
        boolean b2=false;

        for (i1 = 13; i1 < 230; ++i1) {
            sFld += (short)8;
            by %= (byte)(((long)((sFld++) + (dFld++))) | 1);
            i3 = 1;
            while (++i3 < 7) {
                vMeth1(-11.542F, b2, -9L);
                if (i != 0) {
                    vMeth_check_sum += i + i1 + i2 + by + i3 + (b2 ? 1 : 0) + by1;
                    return;
                }
                i2 += (int)Test.instanceCount;
                i2 = i3;
                i += (int)Test.instanceCount;
                i += i1;
                bArrFld[i1 + 1] = false;
            }
            Test.fFld -= Test.instanceCount;
            i |= i2;
            by1 -= (byte)i2;
            try {
                i2 = (iArrFld[i1] / -310112237);
                i = (i / i);
                i2 = (i / 45);
            } catch (ArithmeticException a_e) {}
        }
        vMeth_check_sum += i + i1 + i2 + by + i3 + (b2 ? 1 : 0) + by1;
    }

    public void mainTest(String[] strArr1) {

        int i12=94, i13=182, i14=3, i15=-12, i16=49233, i17=-7713, i18=-5;
        long l2=3L, l3=104L;
        float fArr1[]=new float[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(fArr1, 48.975F);
        FuzzerUtils.init(sArr, (short)-13242);

        vMeth(Test.iFld);
        for (i12 = 6; i12 < 226; i12++) {
            Test.iFld -= (int)dFld;
            for (i14 = 4; 114 > i14; i14++) {
                i15 = i14;
                Test.iFld += (i14 | sFld);
                Test.instanceCount += (((i14 * i13) + i15) - i12);
                Test.fFld += (((i14 * Test.iFld) + sFld) - i14);
                i16 = 2;
                do {
                    Test.instanceCount += i16;
                } while (--i16 > 0);
                i15 += Test.iFld;
                for (i17 = 1; 2 > i17; i17 += 3) {
                    switch (((i14 % 2) * 5) + 83) {
                    case 90:
                        Test.instanceCount += i17;
                        i18 *= i17;
                        break;
                    case 93:
                        switch ((((i18 >>> 1) % 3) * 5) + 95) {
                        case 106:
                            i13 -= i18;
                        case 104:
                            iArrFld[i14] = i13;
                            Test.lArrFld1[i17 - 1] |= i15;
                            break;
                        case 101:
                            fArr1[i12 - 1] = 34016L;
                            break;
                        }
                        sArr[i14 - 1] = FuzzerUtils.short1array(N, (short)-4972);
                        Test.byFld += (byte)(((i17 * i17) + l2) - i15);
                        Test.iFld = Test.iFld;
                    default:
                        Test.fFld += i16;
                        l2 -= i15;
                        Test.instanceCount -= (long)Test.fFld;
                    }
                    Test.fFld -= i13;
                    Test.dFld1 += Test.fFld;
                }
                l3 += i14;
                fArr1[i12 - 1] -= l3;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
