package tests.javafuzzer261;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:01:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-79L;
    public volatile double dFld=2.117200;
    public static short sFld=-26042;
    public static volatile long lFld=11L;
    public float fFld=-69.427F;
    public static int iFld=-2523;
    public static long lFld1=-123L;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.932F);
        FuzzerUtils.init(Test.iArrFld, -240);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i6=-2, iArr[]=new int[N];
        float f=-33.301F;

        FuzzerUtils.init(iArr, 132);

        iArr[(i6 >>> 1) % N] -= (int)1.378F;
        f = 1;
        do {
            if (i6 != 0) {
                vMeth2_check_sum += i6 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
                return;
            }
            iArr[(int)(f - 1)] += Test.sFld;
        } while (++f < 226);
        vMeth2_check_sum += i6 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i2, long l, int i3) {

        int i4=-13, i5=0, i7=-14394, i8=59847, i9=75, i10=-57250, i11=-14, i12=-44530, iArr1[]=new int[N];
        float f1=-113.710F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(lArr1, 3144139054L);

        for (i4 = 8; i4 < 142; i4++) {
            vMeth2();
            for (i7 = 12; i7 > 1; i7--) {
                i5 <<= 78;
                iArr1[i7 - 1] *= i3;
            }
            for (i9 = i4; 12 > i9; i9++) {
                i2 = i8;
                l = Test.instanceCount;
                l *= i8;
                i2 = (int)l;
                i8 += (i9 * i9);
                lArr1[i4] = (long)f1;
                for (i11 = 1; i11 < 1; i11++) {
                    i10 >>= i10;
                    if (false) break;
                }
            }
        }
        vMeth1_check_sum += i2 + l + i3 + i4 + i5 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + i11 + i12 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i1) {

        int i13=-9457, i14=-4746, i15=0, i16=11860, i17=-236, iArr2[]=new int[N];
        float f2=-52.370F;
        boolean b=true;
        byte by=98;

        FuzzerUtils.init(iArr2, 63249);

        vMeth1(-16546, Test.lFld, i1);
        for (i13 = 13; 237 > i13; ++i13) {
            i15 = 1;
            while (++i15 < 7) {
                f2 += (((i15 * Test.lFld) + i15) - i1);
                Test.fArrFld[i15 + 1] = -208L;
                Test.instanceCount *= -40;
                b = true;
                i14 = by;
                b = b;
                for (i16 = i15; i16 < 1; i16++) {
                    Test.instanceCount -= i14;
                    Test.instanceCount = i13;
                    i17 = i14;
                    iArr2 = iArr2;
                    iArr2[i13 + 1] = i16;
                }
            }
        }
        vMeth_check_sum += i1 + i13 + i14 + i15 + Float.floatToIntBits(f2) + (b ? 1 : 0) + by + i16 + i17 +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-46894, i18=34084, i19=1, i20=-11, i21=-24826, i22=1, i23=-12, i24=-44130, i25=212;
        byte by1=-67;
        float f3=-29.870F;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -11L);
        FuzzerUtils.init(dArr, -48.118058);

        lArr[(i >>> 1) % N] -= (long)((Float.intBitsToFloat(i) * Test.instanceCount) * i);
        dFld -= i;
        Test.instanceCount -= (long)Test.fArrFld[(i >>> 1) % N];
        i &= (int)Test.instanceCount;
        vMeth(i);
        i = by1;
        i18 = 1;
        while (++i18 < 201) {
            for (i19 = 5; i19 < 125; i19++) {
                f3 = 1;
                while (++f3 < 2) {
                    i -= i19;
                    Test.sFld = (short)i;
                }
                i = (int)f3;
                fFld += i19;
                Test.instanceCount = Test.instanceCount;
            }
            i21 = 1;
            while (++i21 < 125) {
                i >>= i;
            }
        }
        for (i22 = 6; i22 < 228; ++i22) {
            try {
                i23 = (Test.iArrFld[i22 + 1] / -58997);
                Test.iArrFld[i22] = (Test.iArrFld[i22 - 1] / Test.iFld);
                i = (i / Test.iArrFld[i22 + 1]);
            } catch (ArithmeticException a_e) {}
            i20 += (0 + (i22 * i22));
            Test.lFld1 >>= -1239830538160699084L;
            i20 += -1356;
        }
        for (i24 = 3; i24 < 190; ++i24) {
            Test.lFld -= i24;
            dArr[i24] = f3;
            Test.iArrFld[i24] -= i20;
            Test.iFld = (int)Test.instanceCount;
            fFld += (((i24 * i21) + i) - i22);
            i25 -= i22;
            Test.instanceCount *= Test.sFld;
            i20 = i23;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
