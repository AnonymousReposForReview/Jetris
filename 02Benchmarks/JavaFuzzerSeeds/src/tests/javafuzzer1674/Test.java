package tests.javafuzzer1674;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:22:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2166305202L;
    public static int iFld=-142;
    public short sFld=-32522;
    public static float fFld=0.839F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i, long l) {

        double d=-83.119513;
        int i1=8, i2=3347, i3=7, i4=-6779, i5=23, i6=-162, i7=83, iArr1[]=new int[N];
        short s=-28589;
        float f2=-64.160F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -15685);
        FuzzerUtils.init(lArr, -5201599408994815160L);

        for (d = 12; d < 281; d += 2) {
            Test.iFld += (int)(d - Test.iFld);
            for (i2 = (int)(d); i2 < 12; ++i2) {
                for (i4 = 1; i4 < 1; ++i4) {
                    i3 = (int)39527L;
                }
                i1 <<= i4;
                try {
                    i5 = (-62477 % i4);
                    i1 = (180 / Test.iFld);
                    iArr1[i2] = (iArr1[(int)(d)] / iArr1[(Test.iFld >>> 1) % N]);
                } catch (ArithmeticException a_e) {}
                switch ((i2 % 4) + 49) {
                case 49:
                    for (i6 = i2; 1 > i6; i6++) {
                        double d1=-1.85393;
                        float f1=2.532F;
                        d1 += f1;
                        i >>= i6;
                        i7 = 3;
                        s += (short)l;
                        i3 = (int)Test.instanceCount;
                    }
                    i3 = i7;
                case 50:
                    f2 /= (i5 | 1);
                case 51:
                    lArr[(int)(d)] = i1;
                    break;
                case 52:
                    l += (i2 - f2);
                    break;
                default:
                    i7 <<= (int)l;
                }
            }
        }
        vMeth2_check_sum += i + l + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + i5 + i6 + i7 + s +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        boolean b=true;
        int i8=-172, i9=114, i10=2, i11=-24915;
        float f3=0.5F, f4=-1.808F, f5=-1.681F;
        double d2=0.61334;
        short s1=20309;
        byte by=-92;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -9036949732039434605L);

        if (b) {
            vMeth2(Test.iFld, Test.instanceCount);
            vMeth1_check_sum += (b ? 1 : 0) + i8 + i9 + Float.floatToIntBits(f3) + i10 + Double.doubleToLongBits(d2) +
                Float.floatToIntBits(f4) + i11 + s1 + by + Float.floatToIntBits(f5) + FuzzerUtils.checkSum(lArr1);
            return;
        }
        for (i8 = 11; i8 < 392; i8++) {
            switch (((i8 % 2) * 5) + 91) {
            case 101:
            case 99:
                i9 |= i9;
                i9 += i8;
                for (f3 = 1; f3 < 4; f3++) {
                    i10 -= (int)d2;
                    Test.iFld += 23;
                    for (f4 = 1; f4 < 2; ++f4) {
                        s1 += (short)(f4 * f4);
                        switch ((int)((f3 % 6) + 110)) {
                        case 110:
                            if (b) continue;
                            i11 = by;
                            break;
                        case 111:
                            i10 *= (int)d2;
                            break;
                        case 112:
                            i10 >>= (int)Test.instanceCount;
                            break;
                        case 113:
                            lArr1[(int)(f3 + 1)][(int)(f4 - 1)] <<= Test.instanceCount;
                            break;
                        case 114:
                            i9 += (int)((long)f4 ^ Test.iFld);
                            break;
                        case 115:
                            f5 += Test.iFld;
                            break;
                        }
                    }
                }
                break;
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i8 + i9 + Float.floatToIntBits(f3) + i10 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f4) + i11 + s1 + by + Float.floatToIntBits(f5) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        double d3=58.57789;
        int i12=101, i14=-23, i15=3, iArr2[]=new int[N];
        float f6=-86.947F;
        byte by1=-5;
        short s2=-13275;
        boolean b1=false;

        FuzzerUtils.init(iArr2, -105);

        vMeth1();
        Test.instanceCount += 57;
        iArr2[(111 >>> 1) % N] -= Test.iFld;
        for (d3 = 8; d3 < 225; d3++) {
            f6 += (70.382F + (d3 * d3));
            if (b1) {
                Test.iFld += (-67 + (d3 * d3));
                i12 -= i12;
                i14 = 7;
                do {
                    Test.iFld = i15;
                    iArr2[(int)(d3 + 1)] >>>= i15;
                    Test.instanceCount *= i12;
                    by1 += (byte)i14;
                    by1 <<= (byte)Test.iFld;
                    s2 = (short)Test.iFld;
                } while (--i14 > 0);
            } else if (b1) {
                i15 += (int)f6;
            } else {
                Test.iArrFld[(int)(d3 - 1)] = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d3) + i12 + Float.floatToIntBits(f6) + i14 + i15 + by1 + s2 + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        float f=1.977F;
        int i16=-39367, i17=68, i18=-33964, i19=-151, i20=200, i21=-28192, i22=-121, i23=3, i24=36924, i25=27754,
            i26=-13, iArr[]=new int[N];
        double d4=91.45583;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 9);
        FuzzerUtils.init(byArr, (byte)-71);

        f += iArr[(Test.iFld >>> 1) % N];
        vMeth();
        Test.iFld += (int)Test.instanceCount;
        Test.iArrFld[(Test.iFld >>> 1) % N] += (int)Test.instanceCount;
        byArr[(Test.iFld >>> 1) % N] = (byte)Test.instanceCount;
        for (i16 = 7; i16 < 333; ++i16) {
            Test.iFld = Test.iFld;
        }
        i17 = -16264;
        i18 = 1;
        while (++i18 < 221) {
            for (i19 = 6; i19 < 114; i19++) {
                i20 = (int)Test.instanceCount;
                i20 *= i17;
                for (i21 = 1; i21 < 2; ++i21) {
                    sFld /= (short)(i18 | 1);
                    i20 += i21;
                    f -= i20;
                    i17 = Test.iFld;
                    i22 += (((i21 * i18) + f) - f);
                    i22 += (i21 * i17);
                    d4 = -2511359582L;
                    Test.iFld += i21;
                }
            }
            for (i23 = 1; 114 > i23; i23++) {
                Test.instanceCount >>>= Test.instanceCount;
                for (i25 = i23; i25 < 2; i25++) {
                    f -= i26;
                    i20 = i22;
                }
                i26 %= -4;
                i17 += (int)Test.instanceCount;
                i17 -= (int)Test.fFld;
                iArr[i23 + 1] -= (int)Test.instanceCount;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
