package tests.javafuzzer3475;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 09:05:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=350808853503390419L;
    public static volatile short sFld=-10537;
    public static long lFld=3882240041L;
    public static int iFld=-1;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -2913171005255575753L);
        FuzzerUtils.init(Test.iArrFld, -6);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i2, long l) {

        int i3=-9, i4=201, i5=-7, i6=54521, iArr[]=new int[N];
        float f1=0.644F;
        double d1=-1.108479;
        boolean b=false;

        FuzzerUtils.init(iArr, -10);

        i2 >>= i2;
        for (i3 = 4; i3 < 316; i3++) {
            l >>= Test.instanceCount;
            i2 = i4;
            for (i5 = i3; i5 < 5; ++i5) {
                i2 ^= i3;
                i2 = i2;
                i4 <<= -2;
            }
            l = 9117;
            i6 = (int)f1;
            Test.instanceCount = i6;
            d1 -= Test.sFld;
            l *= (long)f1;
        }
        b = b;
        i4 -= (int)d1;
        long meth_res = i2 + l + i3 + i4 + i5 + i6 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + (b ? 1 :
            0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(double d) {

        int i1=-8, i8=7, i9=-9529;
        byte by=52;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.806F);

        i1 |= iMeth(i1, 7541703706648854311L);
        for (float f2 : fArr) {
            i1 = (int)Test.instanceCount;
            for (i8 = 1; i8 < 4; ++i8) {
                if (true) continue;
                i9 *= (int)d;
                i1 += i9;
                by += (byte)i8;
                Test.instanceCount <<= i1;
                Test.instanceCount += (0 + (i8 * i8));
            }
        }
        i9 = i9;
        i1 += (int)Test.instanceCount;
        i9 >>= 3;
        Test.instanceCount = Test.instanceCount;
        i9 *= i1;
        vMeth_check_sum += Double.doubleToLongBits(d) + i1 + i8 + i9 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static double dMeth(int i, float f) {

        double d2=-78.130293;
        int i10=1565, i11=-254, i12=-10, i13=-19332, i14=3, i15=-7;
        boolean b1=false;

        vMeth(d2);
        for (i10 = 7; 300 > i10; ++i10) {
            i11 = i10;
            Test.lArrFld = Test.lArrFld;
            i |= (int)Test.instanceCount;
            for (i12 = 1; i12 < 6; i12++) {
                i11 += i;
                for (i14 = 1; i14 < 2; ++i14) {
                    switch ((i10 % 1) + 99) {
                    case 99:
                        if (b1) continue;
                        i >>= (int)Test.instanceCount;
                        break;
                    default:
                        try {
                            i13 = (Test.iArrFld[i12 - 1] / i14);
                            i11 = (-40044 / Test.iArrFld[i12]);
                            i = (-23139 % Test.iArrFld[i14 - 1]);
                        } catch (ArithmeticException a_e) {}
                        Test.lFld += i14;
                    }
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-27301);
                    Test.instanceCount = -53527;
                }
            }
        }
        long meth_res = i + Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i10 + i11 + i12 + i13 + i14 + i15 +
            (b1 ? 1 : 0);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=14, i17=-48675, i18=62, i19=-2, i20=-2, i21=43832, i22=-11, i23=-46210, i24=-3, i25=-41059;
        float f3=61.143F, f4=-2.108F, f5=0.539F;
        boolean b2=false;
        double d3=2.82322;

        dMeth(Test.iFld, 95.836F);
        i16 = 1;
        do {
            for (f3 = 4; f3 < 131; f3++) {
                for (i18 = 1; i18 < 2; i18++) {
                    i17 -= (int)Test.instanceCount;
                    Test.sFld = (short)i18;
                    f4 = i16;
                }
                Test.iArrFld[i16] *= Test.iFld;
                i19 = (int)Test.lFld;
                i17 >>>= i17;
                f4 += i16;
            }
            if (b2) continue;
            Test.instanceCount += i16;
        } while (++i16 < 192);
        i20 = 1;
        while (++i20 < 259) {
            Test.iFld += i20;
            i19 <<= i18;
            for (i21 = 3; i21 < 97; ++i21) {
                i19 -= (int)122.575F;
                Test.iFld += i21;
                f5 -= i19;
                i22 = i22;
                i19 <<= i18;
                i19 += (((i21 * Test.lFld) + i17) - i16);
                if (b2) continue;
            }
            if (b2) break;
        }
        i22 = (int)d3;
        i23 = (int)Test.lFld;
        for (i24 = 12; i24 < 284; ++i24) {
            i23 = i24;
            Test.iFld += i24;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
