package tests.javafuzzer3339;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:22:05 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-8L;
    public static byte byFld=77;
    public static long lFld=-595435462L;
    public static double dFld=0.16503;
    public static volatile float fFld=0.431F;
    public static long lFld1=59L;
    public static float fFld1=-52.340F;
    public volatile int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, int i9) {

        int i10=28987, i11=33602, i13=9, i14=47345, i15=-9510, i16=-10, iArr1[]=new int[N];
        short s=-9898;

        FuzzerUtils.init(iArr1, -7);

        for (i10 = 17; i10 < 313; ++i10) {
            i8 >>= (int)3L;
        }
        s >>>= (short)i9;
        for (int i12 : iArr1) {
            iArr1[(i7 >>> 1) % N] -= i9;
        }
        Test.instanceCount = Test.lFld;
        for (i13 = 5; i13 < 331; i13++) {
            i14 += i8;
            Test.dFld += i7;
            for (i15 = 5; i15 > 1; --i15) {
                switch (((i15 % 2) * 5) + 108) {
                case 112:
                    i8 *= i14;
                    Test.fFld = i11;
                case 118:
                    i7 *= i14;
                    i16 += -9671;
                    break;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + s + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(int i4) {

        int i5=12, i6=-177, i17=-8, i18=-17801, i19=-24101, i20=-33065;
        boolean b1=true, b2=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.26875);

        for (i5 = 10; i5 < 174; i5++) {
            vMeth1(i4, -164, -127);
            Test.instanceCount |= i5;
            for (i17 = 10; 1 < i17; i17 -= 3) {
                Test.instanceCount += (55756 + (i17 * i17));
            }
            Test.lFld += (((i5 * Test.lFld) + Test.fFld) - i5);
            for (i19 = 10; i19 > 1; i19 -= 2) {
                i4 += i4;
                i4 %= (int)(Test.lFld | 1);
                dArr[i5 - 1] /= (i4 | 1);
                Test.instanceCount = (long)1.14F;
                Test.lFld += i19;
                Test.lFld -= (long)Test.fFld;
                b1 = b2;
                Test.lFld = 144L;
            }
        }
        long meth_res = i4 + i5 + i6 + i17 + i18 + i19 + i20 + (b1 ? 1 : 0) + (b2 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b) {

        int i1=50430, i2=47, i3=-237, i21=-218, iArr[]=new int[N];
        short s1=-915, sArr[]=new short[N];
        long lArr[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(iArr, -139);
        FuzzerUtils.init(lArr, -1305287218L);
        FuzzerUtils.init(dArr1, 0.27651);
        FuzzerUtils.init(sArr, (short)-16025);

        i1 = 1;
        while (++i1 < 262) {
            for (i2 = i1; i2 < 6; ++i2) {
                i3 *= iArr[i2 - 1];
            }
            iArr[i1 + 1] += (int)((lMeth(i3) >> 5069982797681158803L) - i3);
            i21 = 1;
            while (++i21 < 6) {
                double d1=-78.66021;
                lArr[i21 + 1] += i1;
                switch ((((7940 >>> 1) % 9) * 5) + 118) {
                case 129:
                    lArr[i21] = i21;
                    switch ((((i3 >>> 1) % 9) * 5) + 37) {
                    case 75:
                        i3 = (int)Test.dFld;
                    case 72:
                        lArr[i21] >>= i2;
                        Test.lFld1 = i2;
                        break;
                    case 51:
                        iArr[i21 - 1] = (int)Test.lFld1;
                        break;
                    case 43:
                        i3 *= i1;
                        i3 = (int)Test.fFld;
                    case 74:
                        Test.fFld1 += (i21 - i2);
                        break;
                    case 67:
                        Test.lFld1 >>>= i1;
                        break;
                    case 57:
                        i3 += i21;
                        break;
                    case 69:
                        iArr = iArr;
                        break;
                    case 55:
                        dArr1[i1 - 1] *= i3;
                        break;
                    default:
                        i3 = i3;
                    }
                    break;
                case 147:
                case 145:
                    Test.instanceCount >>= i21;
                case 157:
                    Test.lFld1 = i2;
                case 137:
                    sArr[i1 - 1] += (short)i3;
                case 141:
                case 121:
                    d1 = i3;
                    break;
                case 122:
                    i3 &= s1;
                    break;
                case 126:
                    Test.fFld1 += (i21 * Test.lFld);
                    break;
                default:
                    i3 += (i21 | i1);
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i1 + i2 + i3 + i21 + s1 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr3) {

        int i=2420, i22=-11, i24=12300, i25=-180, i26=0, i27=116, i28=13;
        double d=65.13846, dArr2[]=new double[N];
        float f1=-1.265F, f2=0.155F;
        boolean b3=false;

        FuzzerUtils.init(dArr2, -109.58291);

        iArrFld[(13 >>> 1) % N] = (int)(Double.longBitsToDouble(i + i) + ((i + d) + (f1 - Test.byFld)));
        vMeth(b3);
        Test.lFld += i;
        i = i;
        i ^= i;
        if (b3) {
            for (f2 = 397; f2 > 19; f2 -= 3) {
                d = Test.lFld;
                Test.fFld += (12287 + (f2 * f2));
                i += (int)(((f2 * i22) + Test.fFld1) - i22);
                i24 = 1;
                do {
                    f1 *= -678704367L;
                    Test.byFld += (byte)i24;
                    i22 = -194;
                    if (true) break;
                    b3 = b3;
                    if (b3) continue;
                    i22 += (-73 + (i24 * i24));
                    i = i25;
                    i26 += -21076;
                    dArr2 = dArr2;
                } while (++i24 < 199);
            }
        } else if (b3) {
            Test.fFld1 = i;
            i22 *= i26;
            i27 = 1;
            while (++i27 < 206) {
                i28 = 1;
                while (++i28 < 122) {
                    iArrFld[i28] = 40175;
                    if (b3) {
                        Test.lFld = i27;
                    }
                    if (b3) continue;
                    i25 += (i28 * i28);
                }
            }
        }

    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
