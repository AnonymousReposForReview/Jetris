package tests.javafuzzer1983;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:59:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-40060L;
    public float fFld=0.823F;
    public static float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.187F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, float f1, int i3) {

        int i4=134, i5=7, i6=-11, i7=-164, i8=-2;
        double d=-109.31773, d1=-2.111935;
        byte by1=104;
        boolean b=false;

        for (i4 = 1; i4 < 126; ++i4) {
            Test.instanceCount += (((i4 * i4) + l) - i3);
            for (d = i4; d < 13; d++) {
                i3 += (int)(d * d);
                i5 += i5;
                Test.instanceCount -= i6;
                for (i7 = 1; i7 > 1; i7 -= 3) {
                    Test.instanceCount = i6;
                    i3 += (((i7 * i7) + l) - i7);
                    i6 += -171;
                    by1 += (byte)109;
                    if (b) continue;
                    i3 -= i5;
                    Test.fArrFld[i7 - 1] = (float)1.78410;
                }
                d1 -= -51704;
            }
        }
        long meth_res = l + Float.floatToIntBits(f1) + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + by1 +
            (b ? 1 : 0) + Double.doubleToLongBits(d1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2, float f) {

        int i9=-133, i10=52, i11=-103, i12=-13, i13=-54861;
        double d2=-60.23819;
        boolean b1=true;
        byte by2=-13;

        i2 *= ((iMeth(Test.instanceCount, f, 0) + -7068) * i2);
        i1 <<= 44708;
        i9 = 1;
        do {
            for (i10 = 1; i10 < 7; i10++) {
                i1 += (i10 * i2);
                i1 *= (int)-5.118769;
                i1 = i2;
                d2 *= 46007;
                if (b1) {
                    i11 += i10;
                } else {
                }
                i2 = (int)Test.instanceCount;
                if (b1) {
                    for (i12 = 1; 2 > i12; i12 += 2) {
                        i1 = i1;
                        by2 += (byte)f;
                    }
                }
            }
        } while (++i9 < 226);
        vMeth1_check_sum += i1 + i2 + Float.floatToIntBits(f) + i9 + i10 + i11 + Double.doubleToLongBits(d2) + (b1 ? 1
            : 0) + i12 + i13 + by2;
    }

    public static void vMeth(byte by, int i) {

        double d3=-1.97749, d4=62.75686;
        int i14=10, i15=216, i16=-11, i17=193, i18=-145, iArr[]=new int[N];
        boolean b2=false;
        float f2=2.89F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 7);
        FuzzerUtils.init(lArr, 205L);

        vMeth1(i, i, -2.5F);
        i -= (int)Test.instanceCount;
        for (d3 = 7; 191 > d3; ++d3) {
            for (i15 = 9; i15 > d3; i15 -= 3) {
                iArr[i15] >>>= (int)Test.instanceCount;
                for (i17 = 1; i17 < 1; ++i17) {
                    Test.instanceCount *= Test.instanceCount;
                }
                iArr[i15 + 1] = (int)d3;
                i = -51901;
                b2 = b2;
                i14 -= (int)Test.instanceCount;
                d4 = 2.103F;
                i14 += (i15 * i15);
            }
        }
        d4 = -155;
        i -= (int)f2;
        vMeth_check_sum += by + i + Double.doubleToLongBits(d3) + i14 + i15 + i16 + i17 + i18 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(d4) + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=219, i20=9, i21=5447, i22=-12, i23=12884, i24=1, i25=208, i26=179;
        boolean b3=true;
        float f3=39.420F;
        byte by3=-70, byArr[]=new byte[N];
        short s=4610;
        long l2=-9573L;

        FuzzerUtils.init(byArr, (byte)-38);

        vMeth((byte)(94), i19);
        Test.instanceCount += i19;
        i19 &= 1;
        i19 -= i19;
        for (i20 = 1; i20 < 233; i20++) {
            if (b3) {
                iArrFld[i20] = -32767;
            } else {
                for (i22 = 1; i22 < 108; ++i22) {
                    byArr[i22] -= (byte)i22;
                    for (f3 = i20; f3 < 2; ++f3) {
                        Test.instanceCount -= Test.instanceCount;
                        i24 = i22;
                        i19 -= i22;
                        switch (((i20 % 10) * 5) + 13) {
                        case 34:
                            by3 += (byte)i25;
                            i23 >>= i24;
                            iArrFld[(int)(f3 + 1)] = -10;
                            break;
                        case 25:
                            i23 += -24;
                            Test.fArrFld[i22 + 1] += Test.instanceCount;
                            break;
                        case 56:
                            i23 *= i20;
                            i21 = i24;
                            break;
                        case 57:
                            i21 -= (int)f3;
                            i21 >>= i23;
                            i19 += (int)(((f3 * i25) + i20) - i23);
                            switch (((-52214 >>> 1) % 8) + 89) {
                            case 89:
                                iArrFld[i22 + 1] -= i21;
                                if (b3) break;
                                break;
                            case 90:
                                iArrFld[i22 + 1] = (int)f3;
                                break;
                            case 91:
                                i21 += i21;
                                i26 -= 6;
                                break;
                            case 92:
                                i21 -= i25;
                                break;
                            case 93:
                                i21 *= s;
                            case 94:
                                lArrFld[(int)(f3)] /= (i19 | 1);
                                break;
                            case 95:
                                i26 = i24;
                                break;
                            case 96:
                                fFld = -170L;
                                break;
                            default:
                                i21 += i24;
                            }
                            break;
                        case 47:
                            iArrFld[(int)(f3 - 1)] = (int)l2;
                        case 52:
                            i24 -= i20;
                            break;
                        case 50:
                            b3 = false;
                            break;
                        case 60:
                            i19 = -13;
                            break;
                        case 61:
                            Test.instanceCount += (long)(((f3 * f3) + Test.instanceCount) - i23);
                            break;
                        case 27:
                            s -= (short)27;
                            break;
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
