package tests.javafuzzer912;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:30:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-132L;
    public static int iFld=-14;
    public static boolean bFld=false;
    public static double dFld=-109.47894;
    public int iFld1=-61793;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i3=53156, i4=44504;
        float f1=2.924F;
        double d1=-1.59058;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -51979L);

        i3 -= 20610;
        i4 = 1;
        while (++i4 < 397) {
            i3 = i3;
            i3 = i3;
            lArr[i4] += Test.iFld;
        }
        Test.iFld >>>= (int)183L;
        Test.iFld -= i3;
        for (long l : lArr) {
            lArr[(Test.iFld >>> 1) % N] -= Test.iFld;
            Test.instanceCount >>= i3;
            i3 *= (int)1.80F;
            Test.iFld -= Test.iFld;
        }
        i3 += (int)Test.instanceCount;
        f1 *= 80.130F;
        i3 += (int)d1;
        long meth_res = i3 + i4 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i2) {


        Test.instanceCount -= lMeth();
        vMeth1_check_sum += i2;
    }

    public static void vMeth(float f, double d) {

        int i=-47003, i1=93, i5=-21592, i6=8, i7=-33415, iArr[][]=new int[N][N];
        float f2=-2.910F;
        double dArr[]=new double[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(dArr, -1.27321);
        FuzzerUtils.init(byArr, (byte)-4);
        FuzzerUtils.init(iArr, 152);

        for (i = 3; i < 215; i++) {
            vMeth1(Test.iFld);
            Test.bFld = Test.bFld;
            for (i5 = i; i5 < 8; ++i5) {
                for (f2 = 1; f2 > 1; f2 -= 2) {
                    Test.instanceCount -= Test.iFld;
                    if (Test.bFld) break;
                    i1 += i5;
                }
                switch ((i % 10) + 51) {
                case 51:
                    i1 *= (int)Test.instanceCount;
                    i1 *= i6;
                    i7 -= 23726;
                    break;
                case 52:
                    Test.iFld = Test.iFld;
                    i6 = -137;
                    dArr[i] += i5;
                    break;
                case 53:
                    byArr[i5] >>= (byte)8;
                    break;
                case 54:
                    i1 = i;
                    break;
                case 55:
                    d = Test.iFld;
                case 56:
                    d *= i;
                    break;
                case 57:
                    iArr[i5 - 1] = iArr[i];
                    break;
                case 58:
                    Test.iFld = i;
                    break;
                case 59:
                    iArr[i][i + 1] >>= (int)Test.instanceCount;
                    break;
                case 60:
                    Test.iFld += Test.iFld;
                    break;
                default:
                    i6 += (i5 + i6);
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i + i1 + i5 + i6 +
            Float.floatToIntBits(f2) + i7 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        byte by=3;
        int i8=249, i9=225, i10=-33, i11=-50179, i12=227, i13=30, iArr1[]=new int[N];
        short s=-18776;
        float f3=-2.671F;
        double dArr1[]=new double[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 212);
        FuzzerUtils.init(dArr1, 102.10315);
        FuzzerUtils.init(lArr1, -7078L);

        by = (byte)81;
        vMeth(-2.221F, Test.dFld);
        Test.iFld -= (int)Test.instanceCount;
        Test.iFld *= (int)14L;
        by %= (byte)(Test.instanceCount | 1);
        for (i8 = 3; i8 < 169; ++i8) {
            i9 -= Test.iFld;
            i9 = i8;
            for (i10 = 5; i10 < 151; ++i10) {
                Test.instanceCount = Test.iFld;
                for (i12 = i10; 2 > i12; i12++) {
                    Test.iFld *= (int)Test.instanceCount;
                    iArr1 = FuzzerUtils.int1array(N, (int)-4939);
                    if (Test.bFld) break;
                    switch (((i8 % 9) * 5) + 104) {
                    case 130:
                        Test.instanceCount >>>= i10;
                        i9 >>= i9;
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 114:
                        dArr1[i8] = i12;
                        Test.instanceCount ^= i10;
                        i11 += (i12 | Test.iFld);
                        if (true) continue;
                        break;
                    case 110:
                        lArr1[i10 - 1] = 31;
                        iArr1[i12 - 1] ^= i12;
                        iArr1[i10 + 1] >>= i10;
                        break;
                    case 123:
                        Test.instanceCount = s;
                    case 147:
                        Test.iFld = (int)f3;
                        break;
                    case 149:
                        i13 += i12;
                        break;
                    case 121:
                        i13 = i12;
                        Test.bFld = Test.bFld;
                    case 140:
                        i11 = i13;
                        break;
                    case 132:
                        iFld1 += i12;
                        break;
                    default:
                        iArr1[i10 + 1] += i9;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
