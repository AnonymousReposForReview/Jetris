package tests.javafuzzer1808;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:34:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=232L;
    public static float fFld=2.736F;
    public static short sFld=-15978;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9549);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1, int i2) {

        int i3=-2, i4=44815, i5=18837, i6=0, i7=-60835, i8=156;
        boolean b=true;
        byte by=114;

        i2 = 68;
        i3 = 1;
        do {
            if (b) break;
            i2 += i2;
            Test.fFld -= by;
        } while (++i3 < 211);
        i4 = 1;
        do {
            for (i5 = 1; i5 < 6; i5++) {
                Test.instanceCount += (long)Test.fFld;
                for (i7 = 1; i7 < 2; ++i7) {
                    by += (byte)i2;
                    i1 += (-31031 + (i7 * i7));
                    Test.instanceCount = i4;
                    if (b) break;
                    if (i8 != 0) {
                        vMeth1_check_sum += i1 + i2 + i3 + (b ? 1 : 0) + by + i4 + i5 + i6 + i7 + i8;
                        return;
                    }
                    Test.fFld = 6;
                }
            }
        } while (++i4 < 280);
        vMeth1_check_sum += i1 + i2 + i3 + (b ? 1 : 0) + by + i4 + i5 + i6 + i7 + i8;
    }

    public static boolean bMeth() {

        int i9=-2, i10=88, i11=52, i12=-34949, i13=14, i14=-222, i15=51418, i16=-12;
        double d1=-1.89532, d2=1.100422;

        vMeth1(i9, i9);
        i9 >>= i9;
        Test.iArrFld[(i9 >>> 1) % N] = -117;
        Test.fFld = i9;
        for (i10 = 5; i10 < 359; i10++) {
            i11 += (i10 * i10);
        }
        for (d1 = 8; d1 < 296; ++d1) {
            i9 += i12;
        }
        for (i13 = 5; i13 < 158; i13++) {
            for (i15 = 1; i15 < 10; ++i15) {
                d2 = 1;
                while (++d2 < 2) {
                    i11 = (int)Test.instanceCount;
                    Test.iArrFld[i13] = (int)-5570L;
                    Test.fFld += -6856L;
                    i12 = Test.sFld;
                }
            }
        }
        long meth_res = i9 + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(d2);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth() {

        double d=20.91818;
        int i=-2, i17=-7, i18=10;

        for (d = 3; d < 139; d++) {
            if (true) {
                Test.iArrFld[(int)(d)] -= (int)Test.instanceCount;
                if (bMeth()) break;
                i += 170;
            } else {
                Test.fFld += (float)((long)d ^ (long)i);
                Test.fFld -= i;
                Test.iArrFld[(int)(d)] -= (int)-3204269760L;
                if (false) break;
            }
            i -= i;
            if (Test.bFld) break;
            for (i17 = 12; i17 > 1; i17--) {
                Test.iArrFld[i17 - 1] *= i17;
                i18 += Test.sFld;
                i18 += (int)(0.754F + (i17 * i17));
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i17 + i18;
    }

    public void mainTest(String[] strArr1) {


        vMeth();


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
