package tests.javafuzzer21;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:00:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3127660578L;
    public static float fFld=-106.30F;
    public static int iFld=-8666;
    public static byte byFld=-44;
    public byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4) {

        int i5=9, i6=96, i7=57, i8=236, i9=-3, iArr[][]=new int[N][N];
        double d1=0.78924;
        boolean b=false;
        short s=-30789;

        FuzzerUtils.init(iArr, -10928);

        for (i5 = 2; 129 > i5; ++i5) {
            d1 = d1;
            if (b) break;
        }
        i7 = 1;
        while (++i7 < 171) {
            i6 -= (int)-2898410833L;
            i4 *= (int)-96.860F;
            i6 |= 31135;
        }
        iArr = iArr;
        for (i8 = 2; 376 > i8; ++i8) {
            switch ((i8 % 9) + 56) {
            case 56:
                Test.fFld += Test.instanceCount;
                i4 += (int)(-922807506438166092L + (i8 * i8));
                iArr[i8][i8 - 1] >>= i5;
            case 57:
                iArr[i8 - 1][i8] >>= i7;
                s = (short)Test.fFld;
                break;
            case 58:
                Test.instanceCount = i6;
            case 59:
                Test.fFld += (9 + (i8 * i8));
                break;
            case 60:
                Test.fFld -= (float)d1;
                break;
            case 61:
                iArr[i8 + 1][i8 + 1] -= i9;
                break;
            case 62:
                i4 += (i8 * i8);
                break;
            case 63:
                i6 += (i8 * i8);
                break;
            case 64:
                iArr[i8 - 1][i8] &= -200;
                break;
            default:
                Test.instanceCount /= (i7 | 1);
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + Double.doubleToLongBits(d1) + (b ? 1 : 0) + i7 + i8 + i9 + s +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(float f1, long l, int i3) {

        int i10=60520, i11=-165, i12=-52408, i13=-101, i14=-185, i15=50577;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        vMeth2(i3);
        i3 = i3;
        for (i10 = 2; i10 < 155; i10 += 3) {
            for (i12 = i10; i12 < 30; i12++) {
                i13 *= i12;
                i13 -= -36097;
                f1 /= 15;
                bArr[i10] = b1;
                for (i14 = 1; i14 < 1; ++i14) {
                    i11 += (int)Test.instanceCount;
                    i15 >>= (int)50685L;
                    i15 += (i14 * i14);
                    i13 += (i14 * i15);
                }
                Test.fFld -= i3;
                if (i15 != 0) {
                    vMeth1_check_sum += Float.floatToIntBits(f1) + l + i3 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) + i14
                        + i15 + FuzzerUtils.checkSum(bArr);
                    return;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f1) + l + i3 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i16=-57423, i17=-14, i18=17912, i19=-136, i20=-6717, i21=218;
        short s1=-6088;
        boolean b2=false;
        byte by=-58;
        double d2=-71.110124;

        vMeth1(2.484F, Test.instanceCount, Test.iFld);
        i16 = 1;
        do {
            s1 = (short)i16;
            s1 *= (short)Test.instanceCount;
            Test.instanceCount -= Test.iFld;
            b2 = b2;
            Test.iFld *= (int)Test.instanceCount;
        } while (++i16 < 254);
        for (i17 = 12; i17 < 346; ++i17) {
            by = (byte)i18;
            i19 = 1;
            do {
                for (i20 = 1; i20 < 1; i20++) {
                    d2 = -11;
                    b2 = b2;
                    i21 >>>= i18;
                    i18 = i21;
                }
            } while (++i19 < 5);
        }
        vMeth_check_sum += i16 + s1 + (b2 ? 1 : 0) + i17 + i18 + by + i19 + i20 + i21 + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr1) {

        double d=16.129437;
        int i=28, i1=141, i2=190, i22=-3, i23=197;
        float f=56.206F, fArr[]=new float[N];
        boolean b3=false;
        long l1=-11L, lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1015427648L);
        FuzzerUtils.init(fArr, -95.8F);

        for (d = 13; d < 374; ++d) {
            lArr[(int)(d + 1)] *= (lArr[(int)(d)] = (long)(i + (++f)));
            for (i1 = 1; i1 < 70; ++i1) {
                vMeth();
                Test.instanceCount += 101;
                Test.instanceCount = Test.instanceCount;
                for (i22 = 1; i22 < 2; i22++) {
                    short s2=2344;
                    byArrFld[i1] = (byte)545911122L;
                    i2 += (i22 * i22);
                    switch ((i1 % 8) + 112) {
                    case 112:
                        Test.iFld += i22;
                        break;
                    case 113:
                        b3 = true;
                    case 114:
                    case 115:
                        i23 -= i2;
                        fArr[i22 + 1] *= Test.instanceCount;
                        Test.iFld = i22;
                        if (b3) break;
                        break;
                    case 116:
                        byArrFld[(int)(d - 1)] -= (byte)d;
                        Test.iFld ^= (int)l1;
                        break;
                    case 117:
                        byArrFld[(int)(d + 1)] = (byte)0L;
                        Test.iFld = i1;
                        Test.fFld += i22;
                        if (b3) continue;
                        break;
                    case 118:
                        Test.iFld += i1;
                        break;
                    case 119:
                        l1 = 13322;
                        Test.instanceCount >>= i22;
                        if (b3) {
                            i += (i22 ^ l1);
                            Test.iFld -= -204;
                            s2 = (short)14;
                            i2 <<= Test.iFld;
                        } else {
                            Test.byFld <<= (byte)i1;
                        }
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
