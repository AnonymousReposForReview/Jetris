package tests.javafuzzer593;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:16:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public volatile boolean bFld=true;
    public float fFld=20.882F;
    public static byte byFld=-33;
    public static boolean bFld1=false;
    public int iFld=12716;
    public volatile byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        int i7=56939, i8=6, i9=-230, i10=-7, i11=-1, i12=-9, iArr2[]=new int[N];
        float f=-23.1012F;
        double d=-117.55514;

        FuzzerUtils.init(iArr2, -15694);

        Test.instanceCount += (long)125.324F;
        for (i7 = 387; i7 > 4; i7 -= 2) {
            short s=-4664;
            if (i8 != 0) {
                vMeth2_check_sum += i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10
                    + i11 + i12 + FuzzerUtils.checkSum(iArr2);
                return;
            }
            i5 += i7;
            Test.instanceCount -= i5;
            Test.instanceCount += (long)f;
            if (i6 != 0) {
                vMeth2_check_sum += i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10
                    + i11 + i12 + FuzzerUtils.checkSum(iArr2);
                return;
            }
            s *= (short)Test.instanceCount;
            d = Test.byFld;
            for (i9 = 1; 8 > i9; ++i9) {
                Test.instanceCount &= i6;
                iArr2[i9 + 1] += s;
                for (i11 = 1; 2 > i11; i11++) {
                    Test.bFld1 = Test.bFld1;
                    i6 += (i11 + Test.instanceCount);
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i9 + i10 + i11 +
            i12 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(int i3, int i4) {

        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -36872);

        i4 = (iArr1[(54957 >>> 1) % N] * iArr1[(i4 >>> 1) % N]);
        vMeth2(i3, i4);
        vMeth1_check_sum += i3 + i4 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth() {

        long l=189L, l1=-14975L, lArr[]=new long[N];
        int i13=205, i14=9, i15=-89;

        FuzzerUtils.init(lArr, -14L);

        vMeth1(iFld, iFld);
        lArr[(iFld >>> 1) % N] -= iFld;
        l = 1;
        do {
            if (bFld) break;
        } while (++l < 164);
        for (l1 = 6; l1 < 195; ++l1) {
            for (i14 = 8; i14 > l1; --i14) {
                fFld = -100;
                iFld += iFld;
                if (i15 != 0) {
                    vMeth_check_sum += l + l1 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
                    return;
                }
                Test.instanceCount -= i13;
                i13 += (i14 | i14);
                i15 = (int)fFld;
                byArrFld[i14] = (byte)fFld;
            }
            Test.instanceCount |= 6410L;
            i13 += (int)l1;
        }
        vMeth_check_sum += l + l1 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=13, i1=-64569, i2=-53, i16=82, i17=-16319, i18=-5, i19=-19930, i20=-46, iArr[]=new int[N];
        long l2=1016845467L, lArr1[]=new long[N];
        double d1=115.119433;
        boolean b=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(lArr1, 21173L);
        FuzzerUtils.init(sArr, (short)-30588);

        bFld = (((bFld && bFld) ^ (i > -108.92F)) && true);
        fFld = ((iArr[(i >>> 1) % N] + (i + i)) + i);
        for (i1 = 10; i1 < 397; i1++) {
            i2 = (byArrFld[i1 - 1] += (byte)(++i));
            i += iArr[i1 + 1];
            i ^= (int)(Test.instanceCount++);
            switch ((((i1 >>> 1) % 1) * 5) + 65) {
            case 66:
                vMeth();
                fFld = 2.39F;
                fFld = Test.byFld;
                break;
            }
        }
        for (l2 = 125; 2 < l2; l2 -= 3) {
            fFld /= (i | 1);
            switch ((int)(((l2 % 1) * 5) + 98)) {
            case 102:
                for (i17 = 311; i17 > 15; i17 -= 3) {
                    lArr1 = lArr1;
                    iFld -= i1;
                    d1 = fFld;
                    for (i19 = 1; i19 < 7; ++i19) {
                        switch ((i19 % 10) + 95) {
                        case 95:
                            Test.byFld = (byte)Test.instanceCount;
                            fFld = 88.527F;
                            Test.instanceCount += iFld;
                            break;
                        case 96:
                            Test.instanceCount -= i1;
                            switch ((int)((l2 % 2) + 30)) {
                            case 30:
                                if (b) break;
                                sArr[(int)(l2 + 1)] = (short)-27972;
                                fFld += fFld;
                                break;
                            case 31:
                                lArr1 = lArr1;
                                d1 = d1;
                                if (b) break;
                            }
                            break;
                        case 97:
                            byArrFld[i19 - 1] += (byte)iFld;
                            break;
                        case 98:
                            iArr[i19] = iFld;
                        case 99:
                            Test.instanceCount = i2;
                            break;
                        case 100:
                            i20 += 5;
                            break;
                        case 101:
                            Test.byFld >>= (byte)i1;
                            break;
                        case 102:
                            Test.byFld = (byte)l2;
                            break;
                        case 103:
                            d1 *= i16;
                        case 104:
                        default:
                            i2 -= i19;
                        }
                    }
                }
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
