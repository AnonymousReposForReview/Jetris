package tests.javafuzzer3305;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:46:26 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7991491414713254507L;
    public static float fFld=2.675F;
    public boolean bFld=true;
    public int iArrFld[]=new int[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s, int i5) {

        double d1=-98.102766;
        int i6=-79, i7=-14, i8=-29816, i9=-45235, i10=-136, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 203);

        i5 *= i5;
        for (d1 = 6; d1 < 127; ++d1) {
            for (i7 = 1; i7 < 13; ++i7) {
                i8 += (i7 + i6);
                i8 += (i7 * Test.instanceCount);
                i5 += (i7 + i7);
                Test.instanceCount = (long)Test.fFld;
                if (i6 != 0) {
                    vMeth1_check_sum += s + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                Test.instanceCount *= -14;
                i8 >>= i6;
                i6 /= (int)(i6 | 1);
                for (i9 = 1; 2 > i9; ++i9) {
                    b = true;
                    i6 >>= 121;
                    try {
                        iArr[i7 + 1] = (1536343268 / iArr[(int)(d1 - 1)]);
                        i10 = (iArr[i9] % i9);
                        iArr[(int)(d1 - 1)] = (i10 / 31500);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        vMeth1_check_sum += s + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i1=-50, i2=104, i3=84, i4=-155, i11=216;
        short s1=19191;
        long l=24L;

        for (i1 = 6; i1 < 361; ++i1) {
            switch ((i1 % 7) + 63) {
            case 63:
                for (i3 = 1; i3 < 5; i3++) {
                    vMeth1(s1, i1);
                    i2 *= -180;
                    i11 = 2;
                    do {
                        switch ((i11 % 2) + 85) {
                        case 85:
                            if (false) continue;
                            l += (((i11 * i2) + Test.fFld) - i4);
                            break;
                        case 86:
                            i2 -= (int)Test.instanceCount;
                            s1 += (short)Test.fFld;
                            break;
                        default:
                            Test.fFld += (((i11 * i2) + l) - i11);
                            i2 *= i4;
                            i2 = -12;
                        }
                        i2 += (i11 + i11);
                    } while (--i11 > 0);
                }
                break;
            case 64:
                l = Test.instanceCount;
            case 65:
                i2 = 32574;
                break;
            case 66:
                i4 += i3;
            case 67:
                i4 += (i1 * i1);
            case 68:
                Test.fFld += i4;
                break;
            case 69:
                Test.instanceCount ^= Test.instanceCount;
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + s1 + i11 + l;
    }

    public int iMeth(int i, byte by, double d) {

        int i12=8336, i13=244, i14=-241, i15=47605;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 107L);

        vMeth();
        for (i12 = 5; i12 < 367; i12++) {
            i ^= i12;
            i13 += (i12 ^ i13);
            i <<= i13;
            Test.instanceCount = (long)Test.fFld;
            switch ((i12 % 5) + 106) {
            case 106:
                for (i14 = 5; i14 > i12; i14 -= 2) {
                    bFld = bFld;
                    i15 = (int)Test.instanceCount;
                }
            case 107:
            case 108:
                d -= i15;
                break;
            case 109:
                i13 <<= -15795;
                if (bFld) break;
                i15 += i12;
                if (i14 != 0) {
                }
                break;
            case 110:
                lArr[i12 - 1] = i;
                break;
            default:
                i13 += (int)Test.instanceCount;
            }
        }
        long meth_res = i + by + Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        byte by1=74;
        double d2=119.86136;
        int i16=-67, i17=54828, i18=7, i19=-60, i20=243;
        long l1=-12290L;

        iMeth(-162, by1, d2);
        for (i16 = 183; i16 > 6; i16--) {
            for (i18 = 142; i18 > i16; i18 -= 3) {
                iArrFld[i18] = (int)d2;
                l1 = 1;
                while (++l1 < 1) {
                    i19 = (int)Test.fFld;
                }
                Test.instanceCount -= i19;
                i19 = i18;
                i19 %= (int)(l1 | 1);
                Test.instanceCount += i18;
                i17 = i16;
                i20 = 1;
                while (++i20 < 1) {
                    i19 = i19;
                    i17 = i19;
                    i19 <<= (int)7L;
                    i19 += (i20 * i20);
                    i19 *= by1;
                    i19 += (int)Test.instanceCount;
                    switch ((i16 % 1) + 50) {
                    case 50:
                        if (bFld) {
                            Test.instanceCount >>= i17;
                        }
                        iArrFld[i18 - 1] = (int)d2;
                        break;
                    default:
                        i19 -= by1;
                        by1 += (byte)(i20 - i19);
                        i19 = (int)l1;
                        iArrFld[i16] = i19;
                    }
                    Test.instanceCount ^= -2968064345L;
                    by1 = (byte)l1;
                    i17 = (int)46.619F;
                }
                i17 *= i16;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
