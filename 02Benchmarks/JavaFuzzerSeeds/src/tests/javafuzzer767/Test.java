package tests.javafuzzer767;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:16:02 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-179L;
    public static boolean bFld=true;
    public float fFld=0.115F;
    public double dFld=24.9348;
    public short sFld=-7111;
    public volatile int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public static float fArrFld[]=new float[N];
    public boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, -43);
        FuzzerUtils.init(Test.fArrFld, 44.281F);
        FuzzerUtils.init(Test.lArrFld, -7266686824400313558L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i4, long l1, int i5) {


        Test.bFld = Test.bFld;
        long meth_res = i4 + l1 + i5;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(int i3) {

        int i6=-160, i7=8, i8=36880, i9=-37715, i10=26223;

        i3 *= (int)(iArrFld[(0 >>> 1) % N] - (fMeth(-192, Test.instanceCount, 13) + i3));
        i6 = 1;
        do {
            i3 ^= -9452;
            i3 += (59 + (i6 * i6));
            Test.instanceCount += i6;
            for (i7 = 1; i7 < 38; ++i7) {
                Test.iArrFld1[i6] = (int)Test.instanceCount;
            }
            Test.bFld = Test.bFld;
            for (i9 = i6; i9 < 38; ++i9) {
                Test.iArrFld1[i9 - 1] *= i6;
                iArrFld[i6] += 47590;
                switch (((i3 >>> 1) % 2) + 76) {
                case 76:
                    fFld += 76;
                case 77:
                    i10 *= i7;
                    break;
                }
                i3 = i6;
            }
        } while ((i6 += 3) < 122);
        long meth_res = i3 + i6 + i7 + i8 + i9 + i10;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i11=13, i12=-10, i13=184, i14=-51562;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -196L);

        iMeth(i11);
        switch (((i11 >>> 1) % 9) + 90) {
        case 90:
            Test.instanceCount >>= 73;
            i11 += -45469;
            dFld -= i11;
            break;
        case 91:
            Test.fArrFld[(i11 >>> 1) % N] = -29700L;
            if (Test.bFld) {
                bArrFld[(i11 >>> 1) % N] = false;
                for (i12 = 2; i12 < 191; i12++) {
                    i14 = 1;
                    while (++i14 < 8) {
                        i11 *= (int)Test.instanceCount;
                        switch (((i12 % 2) * 5) + 1) {
                        case 6:
                            lArr[i14] >>= i14;
                            i11 = -12257;
                            break;
                        case 5:
                            bArrFld = FuzzerUtils.boolean1array(N, (boolean)true);
                            break;
                        }
                    }
                }
            } else {
                fFld = i13;
            }
            break;
        case 92:
        case 93:
            Test.instanceCount -= Test.instanceCount;
            break;
        case 94:
            i11 ^= sFld;
            break;
        case 95:
            i13 ^= i14;
        case 96:
            iArrFld[(i11 >>> 1) % N] = (int)Test.instanceCount;
            break;
        case 97:
            dFld = sFld;
            break;
        case 98:
            sFld = (short)-158;
            break;
        }
        vMeth_check_sum += i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        double d=-1.82411;
        int i=-99, i1=-55, i2=-17872;
        float f=0.985F;
        long l=-190L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)30);

        for (d = 16; 260 > d; ++d) {
            for (f = 103; f > 3; f--) {
                switch ((int)((d % 4) + 41)) {
                case 41:
                    i <<= byArr[(int)(d - 1)];
                    iArrFld[(int)(f + 1)] <<= (--i);
                    for (l = 1; l < 2; ++l) {
                        switch ((int)((d % 2) + 15)) {
                        case 15:
                            vMeth();
                            Test.instanceCount &= Test.instanceCount;
                            break;
                        case 16:
                            Test.lArrFld[(i1 >>> 1) % N] = l;
                            Test.iArrFld1[(int)(f + 1)] += (int)f;
                            switch (((i1 >>> 1) % 6) + 51) {
                            case 51:
                                i2 *= (int)Test.instanceCount;
                                Test.iArrFld1[(int)(d)] <<= i2;
                                i2 /= 10;
                            case 52:
                                Test.instanceCount = i2;
                                dFld *= l;
                                i >>= (int)2L;
                                break;
                            case 53:
                                i1 >>= sFld;
                                i1 >>= (int)l;
                                Test.bFld = Test.bFld;
                                i += (int)l;
                            case 54:
                                Test.instanceCount += (long)dFld;
                                i2 |= -50324;
                                break;
                            case 55:
                                Test.instanceCount += (l * i2);
                                Test.instanceCount <<= i2;
                                break;
                            case 56:
                                if (Test.bFld) {
                                    Test.iArrFld1[(int)(d - 1)] ^= i;
                                    i2 = (int)Test.instanceCount;
                                    Test.instanceCount -= i1;
                                } else if (true) {
                                    Test.instanceCount >>= i2;
                                }
                                break;
                            }
                            break;
                        default:
                            i2 ^= i;
                        }
                    }
                    break;
                case 42:
                    Test.instanceCount -= i1;
                case 43:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 44:
                    fFld += (f + fFld);
                    break;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
