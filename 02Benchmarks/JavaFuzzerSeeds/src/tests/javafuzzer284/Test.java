package tests.javafuzzer284;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:09:44 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-4L;
    public static float fFld=2.245F;
    public static boolean bFld=false;
    public static int iFld=36480;
    public static volatile int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -8);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(boolean b1) {

        int i6=177, i7=-55, i8=25946;
        float f1=2.278F;
        byte by=-101;

        for (i6 = 13; i6 < 254; ++i6) {
            Test.fFld = i6;
            Test.iArrFld[i6 + 1] = i6;
            i7 = (int)-5770252165540115411L;
            i7 += i7;
            i7 *= 0;
            i7 = i7;
            i7 += (i6 * i6);
            i7 = (int)Test.instanceCount;
            for (f1 = 7; f1 > 1; f1--) {
                Test.instanceCount = i8;
                by >>= (byte)i6;
                if (b1) break;
                if (b1) continue;
                i8 += (int)f1;
            }
        }
        vMeth2_check_sum += (b1 ? 1 : 0) + i6 + i7 + Float.floatToIntBits(f1) + i8 + by;
    }

    public static void vMeth1(int i3, double d, int i4) {

        long l=-3091760818L;
        int i5=13, i9=-9, i10=6, i12=-187, i13=8;

        for (l = 14; l < 299; l++) {
            vMeth2(false);
            Test.instanceCount += l;
            for (i9 = (int)(l); i9 < 6; i9++) {
                Test.fFld += (((i9 * i5) + i5) - i3);
                i5 += (i9 * i9);
            }
            if (true) continue;
        }
        for (int i11 : Test.iArrFld) {
            Test.fFld = (float)0.5260;
            i11 = (int)Test.instanceCount;
            i4 -= i10;
        }
        switch ((((i5 >>> 1) % 3) * 5) + 33) {
        case 43:
            for (i12 = 9; i12 < 152; i12++) {
                Test.bFld = Test.bFld;
                i13 = i9;
            }
            break;
        case 46:
            i5 = (int)l;
            break;
        case 36:
            i13 = 226;
            break;
        }
        vMeth1_check_sum += i3 + Double.doubleToLongBits(d) + i4 + l + i5 + i9 + i10 + i12 + i13;
    }

    public static void vMeth(float f, int i, boolean b) {

        int i1=-173, i2=-113, i14=-43361, i15=84;
        short s=-29243;
        double d1=1.8455;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 37308L);

        i1 = i1;
        i2 = 1;
        while (++i2 < 141) {
            i += (((i2 * i) + s) - f);
            vMeth1(i2, d1, 34837);
            i1 = i2;
            i14 = 1;
            do {
                i15 = 1;
                do {
                    if (Test.bFld) break;
                } while (++i15 < 1);
                Test.iArrFld[i14] ^= i2;
                Test.instanceCount *= (long)Test.fFld;
                lArr[i2 + 1] *= i14;
                i = i1;
                i >>>= (int)-3677638131108805420L;
                i = (int)Test.instanceCount;
                Test.instanceCount *= (long)Test.fFld;
            } while (++i14 < 11);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + (b ? 1 : 0) + i1 + i2 + s + Double.doubleToLongBits(d1) + i14
            + i15 + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        float f2=-70.79F;
        int i16=-5, i17=-71, i18=-39, i19=52344, i20=-12532, i21=-52931, i22=22179;
        short s1=1687;
        double d2=-53.23845, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.97464);

        vMeth(f2, Test.iFld, Test.bFld);
        Test.iFld |= (int)Test.instanceCount;
        for (i16 = 183; i16 > 8; --i16) {
            for (i18 = 2; i18 < 143; ++i18) {
                i20 = 1;
                while (++i20 < 2) {
                    Test.iArrFld[i18] += (int)Test.instanceCount;
                    i19 *= i19;
                    Test.iFld >>= -120;
                    if (true) break;
                    if (Test.bFld) {
                        dArr[i16 + 1] *= Test.fFld;
                        Test.instanceCount += (i20 * i20);
                        i17 = i16;
                        i19 -= 5;
                    } else {
                        i17 += i20;
                        if (Test.bFld) continue;
                        i19 = i18;
                    }
                    lArrFld[i16] = s1;
                    d2 = 2L;
                }
                Test.iFld <<= (int)Test.instanceCount;
            }
            if (Test.bFld) {
                i21 = 143;
                while ((i21 -= 2) > 0) {
                    switch (((i21 % 2) * 5) + 39) {
                    case 45:
                        lArrFld[i21] = s1;
                        break;
                    case 44:
                        Test.iFld = (int)8L;
                        Test.iArrFld[i16] += -3;
                        i22 = 1;
                        while (++i22 < 2) {
                            Test.fFld += (((i22 * s1) + i20) - i21);
                            lArrFld[i22 + 1] <<= Test.instanceCount;
                            Test.bFld = Test.bFld;
                        }
                        break;
                    }
                }
            } else {
                Test.instanceCount -= i22;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
