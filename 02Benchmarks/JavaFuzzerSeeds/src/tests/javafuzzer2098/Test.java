package tests.javafuzzer2098;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:07:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5879983089174855555L;
    public static float fFld=9.350F;
    public static byte byFld=-80;
    public byte byFld1=32;
    public int iFld=-14;
    public static int iArrFld[]=new int[N];
    public static volatile byte byArrFld[]=new byte[N];
    public double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.byArrFld, (byte)-49);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public int iMeth() {

        int i4=54055, i5=5527;

        for (i4 = 5; i4 < 175; ++i4) {
            i5 += (i4 - i4);
        }
        long meth_res = i4 + i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth2(long l, int i11, int i12) {

        double d3=0.26658;
        short s=-26790;
        int i13=63943, i14=-25826, i15=-8, i16=-19005, i17=12, i18=61;

        d3 = s;
        for (i13 = 5; i13 < 198; i13++) {
            Test.iArrFld = Test.iArrFld;
            for (i15 = 1; i15 < 8; i15++) {
                i16 = i14;
                for (i17 = 1; 2 > i17; ++i17) {
                    l &= i17;
                    Test.iArrFld[i17 - 1] -= i12;
                    d3 -= i17;
                    i14 += (((i17 * i15) + i15) - i16);
                    i12 -= i18;
                    i14 += (((i17 * i14) + i17) - l);
                    Test.iArrFld[i15] -= i16;
                    i12 += (int)d3;
                    Test.fFld = l;
                }
            }
        }
        vMeth2_check_sum += l + i11 + i12 + Double.doubleToLongBits(d3) + s + i13 + i14 + i15 + i16 + i17 + i18;
    }

    public static void vMeth1(double d1, int i8, double d2) {

        int i9=10, i10=-64, i19=-5, i20=147;
        short s1=3866;

        for (i9 = 2; i9 < 125; i9++) {
            vMeth2(Test.instanceCount, 35613, 64);
            Test.instanceCount += (i9 + i9);
            i8 += (int)-89.315F;
            Test.byArrFld[i9] >>= (byte)i10;
            i10 += i9;
            Test.iArrFld[i9 + 1] = i10;
            for (i19 = 1; 13 > i19; ++i19) {
                Test.byFld = (byte)29211;
                Test.iArrFld[i19] -= i10;
                i8 <<= (int)-3495975834L;
                i8 = (int)Test.instanceCount;
                i20 -= s1;
                i8 = -50024;
            }
            Test.iArrFld[i9] >>= i10;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i8 + Double.doubleToLongBits(d2) + i9 + i10 + i19 + i20 + s1;
    }

    public static void vMeth(double d) {

        int i6=-18909, i7=7, i21=-13, i22=-1, i23=-11, i24=31483, i25=27, i26=-8, i27=-83;
        short s2=-3083;
        float f1=0.473F;

        for (i6 = 270; i6 > 13; i6 -= 2) {
            vMeth1(d, i6, d);
        }
        i21 = 1;
        do {
            i22 = 1;
            while (++i22 < 5) {
                i7 = (int)Test.instanceCount;
            }
            i7 *= -57;
            i7 = i7;
        } while (++i21 < 310);
        for (i23 = 11; i23 < 192; i23++) {
            Test.fFld = s2;
            for (f1 = 1; f1 < 9; f1++) {
                for (i26 = 1; i26 < 2; i26 += 3) {
                    d += i24;
                    i7 += (((i26 * i25) + f1) - i6);
                }
                Test.fFld %= (i24 | 1);
                Test.fFld -= i25;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i6 + i7 + i21 + i22 + i23 + i24 + s2 + Float.floatToIntBits(f1)
            + i25 + i26 + i27;
    }

    public void mainTest(String[] strArr1) {

        int i=177, i1=-25, i2=-1, i3=60, i28=-7, i29=-10, i30=-213, i31=59861, i32=-94;
        float f=2.13F;
        double d4=0.41315;
        short s3=26464;
        long l1=-29120L;
        boolean b=true;

        for (i = 10; i < 169; i++) {
            i1 = i;
            switch (((i % 2) * 5) + 92) {
            case 95:
                for (i2 = 2; i2 < 158; ++i2) {
                    Test.iArrFld[i2] <<= iMeth();
                    iMeth();
                    f = Test.iArrFld[i];
                    vMeth(d4);
                    for (i28 = 2; 1 < i28; --i28) {
                        Test.iArrFld[i2] |= i28;
                        i29 = (int)Test.instanceCount;
                        i1 = i1;
                        Test.byFld *= (byte)197;
                        i3 = i29;
                        i3 -= i;
                        s3 += byFld1;
                    }
                    for (i30 = 2; i30 > 1; --i30) {
                        Test.instanceCount += (i30 ^ i);
                        Test.iArrFld[i2 - 1] = (int)l1;
                        if (b) continue;
                        l1 -= i28;
                        iFld = (int)Test.instanceCount;
                        iFld = i32;
                        i31 += 3;
                        switch ((((i3 >>> 1) % 10) * 5) + 84) {
                        case 105:
                        case 114:
                            i1 -= i;
                            iFld += i30;
                            f *= i;
                            break;
                        case 117:
                            l1 = -21298;
                            if (b) break;
                        case 100:
                            l1 = i30;
                            break;
                        case 121:
                            s3 <<= (short)i2;
                            break;
                        case 119:
                            l1 += (i30 * i32);
                            break;
                        case 128:
                            s3 *= (short)i;
                            break;
                        case 130:
                            try {
                                i3 = (15554 / Test.iArrFld[i - 1]);
                                i31 = (Test.iArrFld[i2 - 1] / 56060);
                                i31 = (iFld % -36556);
                            } catch (ArithmeticException a_e) {}
                        case 134:
                            i32 += 11531;
                        case 122:
                            i29 -= i29;
                            break;
                        }
                    }
                }
                break;
            case 100:
                dArrFld[i] = i30;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
