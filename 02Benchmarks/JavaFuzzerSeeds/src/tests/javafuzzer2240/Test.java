package tests.javafuzzer2240;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:47:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=659444604L;
    public static int iFld=-248;
    public static double dFld=0.33593;
    public volatile boolean bFld=true;
    public long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -6.71058);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i8, int i9) {

        float f2=0.377F;
        int i10=-13, i11=13, i12=198, i13=10, i14=215, i15=7, iArr2[][]=new int[N][N];
        boolean b1=true;
        double dArr[][]=new double[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, 3);
        FuzzerUtils.init(dArr, 2.36159);
        FuzzerUtils.init(lArr, -89L);

        Test.instanceCount = (long)f2;
        Test.iFld += (int)Test.instanceCount;
        Test.iFld = i8;
        if (b1) {
            for (i10 = 11; i10 < 324; ++i10) {
                for (i12 = 1; i12 < 5; i12 += 3) {
                    i13 = (int)Test.dFld;
                    iArr2[i12][i12 - 1] = Test.iFld;
                    Test.instanceCount /= (Test.iFld | 1);
                }
                Test.instanceCount += (((i10 * i11) + i12) - i13);
                if (b1) {
                    iArr2[i10 - 1][i10] *= i11;
                    for (i14 = 1; i14 < 5; i14 += 2) {
                        iArr2[i14][i14 + 1] -= i11;
                        iArr2[i10 + 1][i14 + 1] *= -166;
                    }
                } else {
                    dArr[i10 - 1][i10 - 1] += i8;
                }
            }
        } else {
            lArr[(i8 >>> 1) % N] *= i13;
        }
        long meth_res = i8 + i9 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + i14 + i15 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        int i2=12, i3=-184, i4=2142, i5=-13, i6=0, i7=-12, i16=-15109, i17=-108, iArr1[]=new int[N];
        double d=-107.50787;
        float f1=63.409F, fArr[]=new float[N];
        boolean b=true;
        short s1=-18676;
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr, 0.338F);
        FuzzerUtils.init(iArr1, -4);
        FuzzerUtils.init(lArr1, 2275156692L);

        for (i2 = 229; i2 > 2; i2 -= 2) {
            Test.iFld += (int)(++fArr[i2]);
            for (i4 = 1; i4 < 14; i4++) {
                i6 = 1;
                do {
                    d *= Math.max(i3++, (int)(-(94 + (Test.instanceCount * i3))));
                } while (++i6 < 2);
            }
            for (f1 = i2; f1 < 14; ++f1) {
                if (b = (iArr1[(int)(f1)] != Math.abs(lMeth(i6, i7)))) break;
                i7 *= i6;
                if (i7 != 0) {
                    vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1)
                        + i7 + (b ? 1 : 0) + i16 + i17 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                        FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
                    return;
                }
                for (i16 = 1; i16 < 1; ++i16) {
                    d -= i6;
                    Test.instanceCount += (i16 * i4);
                }
                lArr1[i2] = 207;
                iArr1[(int)(f1 - 1)] = 234;
                lArr1[(int)(f1 - 1)] -= s1;
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) + i7 + (b ?
            1 : 0) + i16 + i17 + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1)
            + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        int i=-3, i1=-13, i18=-6, i19=-211, i20=-3, i21=55, i22=218, i23=4, i24=41827, iArr[][]=new int[N][N];
        long l=-1736211354L;
        float f3=-109.839F;

        FuzzerUtils.init(iArr, 168);

        switch ((((Test.iFld >>> 1) % 2) * 5) + 108) {
        case 110:
            Test.instanceCount *= Test.iFld;
            break;
        case 109:
            Test.iFld ^= (++iArr[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N]);
            for (i = 16; i < 261; ++i) {
                i1 += (((i * Test.instanceCount) + i) - i1);
                vMeth1();
            }
            for (i18 = 8; i18 < 202; i18++) {
                i1 = 219;
            }
            break;
        default:
            for (i20 = 17; i20 < 279; i20++) {
                for (l = 1; l < 6; ++l) {
                    for (i23 = 1; i23 < 2; ++i23) {
                        i24 = Test.iFld;
                        Test.iFld <<= i20;
                        f3 += i22;
                        f3 += f3;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i18 + i19 + i20 + i21 + l + i22 + i23 + i24 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        short s=-7934;
        float f=-83.627F;
        byte by=-74;
        int i25=0, i26=-21, i27=2, i28=93, iArr3[]=new int[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr3, 113);

        Test.iFld -= (int)(Test.iFld - (s * (70 + (-21324L - (--f)))));
        Test.iFld += by;
        vMeth();
        Test.iFld *= Test.iFld;
        by = (byte)Test.iFld;
        i25 = 1;
        while (++i25 < 319) {
            switch (((i25 >>> 1) % 6) + 115) {
            case 115:
                switch ((((193 >>> 1) % 9) * 5) + 95) {
                case 129:
                    Test.instanceCount += i25;
                    break;
                case 134:
                    Test.instanceCount -= Test.iFld;
                    break;
                case 137:
                    Test.iFld = Test.iFld;
                    break;
                case 106:
                case 114:
                    Test.iFld = i25;
                case 100:
                    bArr[i25 + 1] = bFld;
                    break;
                case 122:
                    Test.iFld = i25;
                    break;
                case 116:
                    for (i26 = 1; i26 < 79; i26++) {
                        switch ((i25 % 10) + 120) {
                        case 120:
                            i28 = 1;
                            do {
                                switch ((i28 % 7) + 70) {
                                case 70:
                                    Test.iFld += i28;
                                    Test.instanceCount += i28;
                                    break;
                                case 71:
                                    Test.dArrFld[i25] *= i28;
                                    by <<= (byte)i26;
                                    Test.dFld = 8;
                                    iArr3 = FuzzerUtils.int1array(N, (int)-2);
                                    break;
                                case 72:
                                    lArrFld[i26] = Test.iFld;
                                    i27 -= Test.iFld;
                                    i27 <<= i28;
                                    break;
                                case 73:
                                    Test.instanceCount <<= i25;
                                    Test.iFld += i28;
                                    Test.instanceCount = i25;
                                    break;
                                case 74:
                                    iArr3[i28 - 1] *= (int)f;
                                    break;
                                case 75:
                                    f = i26;
                                    break;
                                case 76:
                                    Test.instanceCount = Test.instanceCount;
                                default:
                                    Test.iFld = Test.iFld;
                                }
                            } while ((i28 += 2) < 2);
                        case 121:
                            bArr = bArr;
                            break;
                        case 122:
                            f = i28;
                            break;
                        case 123:
                            Test.instanceCount >>= i27;
                            break;
                        case 124:
                            Test.iFld |= i26;
                            break;
                        case 125:
                            iArr3 = FuzzerUtils.int1array(N, (int)-135);
                            break;
                        case 126:
                            i27 += i26;
                            break;
                        case 127:
                            Test.iFld = (int)f;
                            break;
                        case 128:
                            i27 >>= 14;
                            break;
                        case 129:
                            Test.iFld += (i26 * i26);
                            break;
                        default:
                            Test.iFld *= (int)Test.instanceCount;
                        }
                    }
                case 97:
                    Test.iFld >>= i28;
                    break;
                default:
                    i27 += (((i25 * i26) + i25) - i26);
                }
                break;
            case 116:
                by = (byte)i25;
                break;
            case 117:
                i27 *= Test.iFld;
                break;
            case 118:
                Test.instanceCount >>= Test.instanceCount;
            case 119:
                if (bFld) break;
                break;
            case 120:
                Test.iFld -= i26;
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
