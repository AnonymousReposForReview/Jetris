package tests.javafuzzer3336;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:21:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4750L;
    public static float fFld=2.127F;
    public static short sFld=18435;
    public double dFld=31.101713;
    public static boolean bFld=true;
    public static volatile int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 41);
        FuzzerUtils.init(Test.fArrFld, -2.251F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i9, int i10) {

        int i11=3, i12=134, i13=-205, i14=12, i15=0;
        double d=1.25244;
        boolean b=true;
        byte by1=-95;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -140L);

        for (i11 = 13; i11 < 304; ++i11) {
            i13 = 1;
            while (++i13 < 6) {
                i10 += i9;
                d *= i12;
                i9 -= 1;
                i10 = 7;
                for (i14 = 1; i14 < 1; i14++) {
                    i9 -= (int)d;
                    if (b) continue;
                    lArr1[i14] *= i14;
                    i10 >>>= i11;
                    if (i12 != 0) {
                        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 + (b ?
                            1 : 0) + by1 + FuzzerUtils.checkSum(lArr1);
                        return;
                    }
                }
                d -= i12;
                by1 <<= (byte)i13;
            }
            i12 = (int)Test.fFld;
        }
        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + i14 + i15 + (b ? 1 : 0) + by1 +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(int i8) {

        long l=34141L;
        int i16=-2, i17=-180, i18=-173, i19=-58, i20=83;
        byte by2=2;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)22860);

        for (short s : sArr) {
            vMeth2(i8, i8);
        }
        for (l = 17; 374 > l; l++) {
            for (i17 = (int)(l); 5 > i17; i17++) {
                Test.sFld -= (short)i8;
                for (i19 = 1; 1 > i19; i19++) {
                    Test.sFld ^= (short)l;
                    Test.instanceCount = Test.instanceCount;
                    Test.iArrFld[i19][(int)(l)] += i8;
                    i16 += i17;
                    i8 += (((i19 * i20) + i17) - i18);
                    i20 += i19;
                    Test.sFld = (short)i19;
                }
            }
            i18 = by2;
            i20 += (int)(l ^ i20);
        }
        vMeth1_check_sum += i8 + l + i16 + i17 + i18 + i19 + i20 + by2 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i2=27804, i3=192, i4=-9, i5=0, i6=-13819, i7=129;
        byte by=-24;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -170L);

        for (i2 = 7; i2 < 342; ++i2) {
            for (i4 = i2; i4 < 5; ++i4) {
                for (i6 = 1; i6 < 1; ++i6) {
                    double d1=1.22224;
                    i7 = (int)(((i6 + i5) & (i6 - i2)) * (by * (Test.instanceCount--)));
                    i5 += (int)Test.instanceCount;
                    lArr[i2 - 1] >>= ((++by) * (i2 - (i2 - by)));
                    switch (((i4 % 8) * 5) + 4) {
                    case 14:
                        Test.instanceCount *= (long)(((long)(Test.fFld - i6) >> (i4 * 1519)) + ((i5++) *
                            (--Test.fFld)));
                        Test.instanceCount -= ((lArr[i2 + 1] / ((i7--) | 1)) - Test.iArrFld[i2 + 1][i2]);
                        vMeth1(i4);
                        switch ((((i7 >>> 1) % 8) * 5) + 55) {
                        case 75:
                            by -= (byte)i7;
                            if (b1) break;
                            Test.instanceCount = i4;
                            break;
                        case 81:
                        case 89:
                            Test.fFld += i6;
                            break;
                        case 60:
                            d1 = i4;
                        case 67:
                            if (b1) continue;
                            break;
                        case 65:
                        case 80:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 79:
                            by -= (byte)223;
                            break;
                        }
                        break;
                    case 27:
                        i5 -= i3;
                    case 11:
                        i3 += (i6 - i6);
                        break;
                    case 41:
                        Test.fArrFld[i2] = 32585;
                        break;
                    case 10:
                        i7 *= i2;
                        break;
                    case 13:
                        b1 = b1;
                        break;
                    case 25:
                        i3 *= (int)9094870786820381906L;
                        break;
                    case 5:
                        i3 += (5 + (i6 * i6));
                    }
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i1=-59, i21=4, i22=10, i23=64, i24=-11, i25=-92, i26=-48852;
        float f=-43.229F;
        byte by3=-19;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, -2426964637L);

        for (i = 10; 306 > i; i += 2) {
            Test.instanceCount += (((i * f) + i1) - i);
            vMeth();
            i1 = i21;
            by3 *= (byte)i;
            for (i22 = 169; i22 > 7; --i22) {
                switch ((i22 % 3) + 15) {
                case 15:
                case 16:
                    switch ((i % 1) + 27) {
                    case 27:
                        for (i24 = 1; i24 < 2; i24++) {
                            Test.instanceCount += (-5 + (i24 * i24));
                            dFld = i25;
                            switch (((i22 % 2) * 5) + 21) {
                            case 30:
                                i23 -= i21;
                                if (Test.bFld) break;
                                break;
                            case 22:
                                Test.iArrFld[i24][i - 1] <<= i22;
                                Test.fFld += i21;
                                i1 += (i24 + i23);
                                i23 *= i22;
                                break;
                            }
                            Test.instanceCount *= i22;
                            if (Test.bFld) continue;
                            lArr2 = lArrFld;
                            lArrFld[i22][i + 1] *= (long)f;
                            Test.instanceCount *= (long)-1.371F;
                            Test.instanceCount = 111;
                        }
                        Test.sFld = by3;
                        i26 = 1;
                        do {
                            i23 = (int)Test.instanceCount;
                            Test.iArrFld[i26][i - 1] -= i24;
                            Test.instanceCount = Test.sFld;
                            i1 -= 21656;
                        } while (++i26 < 2);
                        break;
                    }
                    break;
                case 17:
                    by3 <<= (byte)-25372;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
