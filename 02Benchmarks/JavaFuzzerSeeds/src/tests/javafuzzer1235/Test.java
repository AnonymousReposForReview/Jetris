package tests.javafuzzer1235;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:53:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-62985L;
    public double dFld=-42.43458;
    public static double dFld1=2.18643;
    public static float fFld=39.881F;
    public static short sFld=-25870;
    public long lFld=6675129297613084636L;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2() {

        int i12=-6532, i13=83, i14=6, i15=67, i16=-202, i17=-4, i18=131, iArr2[]=new int[N], iArr3[]=new int[N];

        FuzzerUtils.init(iArr2, -121);
        FuzzerUtils.init(iArr3, 206);

        Test.dFld1 += i12;
        for (i13 = 180; i13 > 8; i13--) {
            Test.instanceCount >>= Test.instanceCount;
            Test.fFld += (float)Test.dFld1;
            switch ((i13 % 1) + 91) {
            case 91:
                for (i15 = 1; i15 < 9; ++i15) {
                    iArr2 = iArr2;
                    Test.instanceCount *= i16;
                    for (i17 = 2; i17 > i15; i17 -= 2) {
                        iArr2[i13 + 1] += (int)Test.dFld1;
                        iArr3 = iArr2;
                        Test.fFld -= i12;
                        try {
                            iArr3[i15 - 1] = (i17 % i15);
                            i12 = (iArr3[i17] / -43619);
                            i16 = (i13 / i15);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount *= i18;
                        i18 += (((i17 * Test.sFld) + Test.instanceCount) - Test.instanceCount);
                    }
                }
            }
        }
        long meth_res = i12 + i13 + i14 + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(iArr3);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i7, double d) {

        int i8=28248, i9=4, i10=242, i11=-7, i19=-86, iArr1[]=new int[N];
        boolean b=true;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -8);
        FuzzerUtils.init(fArr, 30.29F);
        FuzzerUtils.init(lArr, -2600331675L);

        for (i8 = 395; i8 > 24; i8--) {
            for (i10 = 1; i10 < 5; i10++) {
                iArr1[i10 + 1] >>= (int)Test.instanceCount;
                i9 = i8;
                fArr[i10 - 1] *= (lArr[i10]++);
                fArr = (fArr = (fArr = (fArr = fArr)));
                try {
                    i11 = (223 % iArr1[i10]);
                    i7 = (i11 / iArr1[i10 + 1]);
                    i11 = (855390242 % i9);
                } catch (ArithmeticException a_e) {}
                if (b) break;
            }
            i7 = (++i9);
            i9 -= (int)(((Test.instanceCount + Test.instanceCount) - iMeth2()) - i9);
        }
        iArr1[(-12 >>> 1) % N] = -40034;
        i9 -= 201;
        i19 = 1;
        while (++i19 < 265) {
            i11 = i10;
            Test.dFld1 = Test.dFld1;
        }
        long meth_res = i7 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + (b ? 1 : 0) + i19 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i6) {

        int i20=8486, i21=-3, i22=-78, i23=3205, i24=-237, iArr[]=new int[N];
        float f=0.44F;
        long l=-34711L;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 17136);
        FuzzerUtils.init(bArr, false);

        iArr[(i6 >>> 1) % N] <<= 30;
        i6 = (int)(((i6 - Test.dFld1) * (Test.instanceCount * 24231)) * (i6 >>>= iMeth1(83, Test.dFld1)));
        Test.instanceCount -= i6;
        for (i20 = 185; 5 < i20; --i20) {
            Test.instanceCount += (-6 + (i20 * i20));
            i21 = i22;
            for (f = 1; f < 9; f++) {
                for (l = 1; l < 2; l++) {
                    byte by=125;
                    Test.instanceCount += (((l * by) + l) - i22);
                    by <<= (byte)i21;
                    iArr[i20 - 1] ^= i23;
                    bArr[(i23 >>> 1) % N] = b1;
                    Test.dFld1 += l;
                }
                if (b1) continue;
                Test.instanceCount += Test.instanceCount;
            }
        }
        long meth_res = i6 + i20 + i21 + i22 + Float.floatToIntBits(f) + i23 + l + i24 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=136, i1=-37, i2=227, i3=-125, i4=-78, i5=96, i25=60, i26=4941, i27=46833, i28=220, iArr4[]=new int[N];
        byte by1=-88;
        long l1=-173L, lArr1[]=new long[N];

        FuzzerUtils.init(iArr4, 1);
        FuzzerUtils.init(lArr1, -34590L);

        for (i = 7; i < 166; ++i) {
            for (i2 = i; i2 < 158; i2++) {
                for (i4 = 1; i4 < 1; ++i4) {
                    dFld += (Test.instanceCount - ((-(-74.105008 * (Test.instanceCount + 15584))) + iMeth(-3)));
                    Test.instanceCount = i4;
                    iArr4[i2 + 1] *= (int)Test.instanceCount;
                    by1 = (byte)211;
                    i5 -= i4;
                    i1 = i5;
                    i1 -= -181;
                    Test.fFld += 12;
                    iArr4[i2 + 1] %= (int)(Test.instanceCount | 1);
                    i5 ^= i3;
                }
            }
            Test.instanceCount += (((i * Test.fFld) + i2) - i2);
            iArr4[i] = i4;
            switch ((i % 2) + 108) {
            case 108:
                i5 += i2;
                break;
            case 109:
                i1 &= (int)Test.instanceCount;
            default:
                iArr4[i + 1] >>>= i2;
                for (i25 = 8; i25 < 158; ++i25) {
                    dFld = Test.fFld;
                    for (i27 = 1; 2 > i27; i27++) {
                        i28 += (i27 + Test.instanceCount);
                        i3 = -4311;
                        lFld += (-60515 + (i27 * i27));
                        i26 += (((i27 * i2) + i26) - i4);
                    }
                    lArr1[i] = i1;
                }
                l1 = 1;
                while ((l1 += 2) < 158) {
                    lFld -= 91;
                    i1 += (int)(l1 + Test.instanceCount);
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
