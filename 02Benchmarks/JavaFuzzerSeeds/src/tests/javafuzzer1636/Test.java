package tests.javafuzzer1636;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:33:04 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static boolean bFld=true;
    public short sFld=-32387;
    public double dFld=2.114412;
    public static float fFld=10.891F;
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -103.339F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(byte by1, int i3) {

        float f2=4.12F;
        int i4=11, i5=50, i6=-57039, i7=85, i8=-206, i9=-35225, i10=141;
        long lArr1[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr1, -901048728L);
        FuzzerUtils.init(dArr, -2.68343);

        i3 = -10;
        lArr1[(21805 >>> 1) % N] *= (long)f2;
        for (i4 = 14; i4 < 311; i4++) {
            i6 = 1;
            while (++i6 < 6) {
                i3 = -11;
                i3 >>= i3;
                i3 *= 181;
                i3 += (((i6 * i6) + i6) - i5);
            }
            dArr[i4] += i6;
            if (false) {
                for (i7 = 6; 1 < i7; i7--) {
                    i5 &= i6;
                }
                for (i9 = 1; i9 < 6; ++i9) {
                    i8 += (i9 + i8);
                    lArr1[i9] >>>= Test.instanceCount;
                }
            } else if (Test.bFld) {
                Test.instanceCount += i4;
            } else if (Test.bFld) {
                i3 -= 38120;
            } else {
                f2 += Test.instanceCount;
            }
        }
        long meth_res = by1 + i3 + Float.floatToIntBits(f2) + i4 + i5 + i6 + i7 + i8 + i9 + i10 +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f1, byte by) {

        long l=-49L, lArr2[][]=new long[N][N];
        double d=0.98419;
        int i11=-45164, i12=-2406, i13=63, i14=-141, i15=59049, i16=4107, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -43336);
        FuzzerUtils.init(lArr2, 4L);

        l = 1;
        do {
            if (d >= iMeth1(by, i11)) continue;
            for (i12 = 1; i12 < 5; i12++) {
                i13 = (int)l;
                i11 -= i11;
                i14 = 1;
                while (++i14 < 2) {
                    i11 = i14;
                    i11 += (((i14 * i12) + i13) - i11);
                    i13 -= i14;
                    switch ((int)(((l % 8) * 5) + 39)) {
                    case 66:
                        switch ((int)(((l % 4) * 5) + 100)) {
                        case 114:
                            Test.instanceCount = (long)d;
                            Test.instanceCount = 26882;
                            break;
                        case 113:
                            i13 = -8;
                            Test.instanceCount = by;
                            break;
                        case 111:
                            i11 += (i14 ^ i15);
                        case 105:
                            i13 += i14;
                            break;
                        default:
                            Test.instanceCount = i11;
                        }
                        break;
                    case 44:
                        iArr = iArr;
                        break;
                    case 64:
                        if (Test.bFld) continue;
                        break;
                    case 47:
                        lArr2[(int)(l - 1)][i14 + 1] += (long)f1;
                        break;
                    case 51:
                        iArr[i12 + 1] += (int)14.78309;
                        break;
                    case 68:
                        Test.instanceCount *= 206L;
                        break;
                    case 72:
                        Test.bFld = true;
                        break;
                    case 70:
                        i13 += i11;
                        break;
                    default:
                        i16 ^= (int)Test.instanceCount;
                    }
                }
            }
        } while (++l < 375);
        long meth_res = Float.floatToIntBits(f1) + by + l + Double.doubleToLongBits(d) + i11 + i12 + i13 + i14 + i15 +
            i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i2) {

        float f=2.49F;
        byte by2=-77;
        int i17=21479, i18=14933, i19=-189, i20=6, i21=102, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -3);

        i2 = (int)(((i2 + i2) - (-34844 - f)) + iMeth(1.236F, by2));
        iArr1[(i2 >>> 1) % N] += (int)Test.instanceCount;
        i17 -= i17;
        i17 = i2;
        for (i18 = 5; i18 < 388; i18++) {
            i19 = i19;
            i19 += i18;
            for (i20 = 1; 4 > i20; i20++) {
                Test.instanceCount += i2;
                if (Test.bFld) break;
                Test.bFld = Test.bFld;
                switch ((((i17 >>> 1) % 1) * 5) + 126) {
                case 127:
                    i19 -= (int)f;
                    break;
                default:
                    i21 += (int)3278L;
                }
                i17 = i17;
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f) + by2 + i17 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-8, i1=1, i22=-29418, i23=-18400, i24=12, i25=-1, i26=-130, iArr2[][]=new int[N][N];
        byte by3=27;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(iArr2, 79);

        for (i = 17; i < 376; i += 3) {
            i1 *= (int)(lArr[i - 1]--);
            lArr = lArr;
            switch (((i % 10) * 5) + 44) {
            case 71:
                vMeth(-8);
                for (i22 = 11; i22 < 211; ++i22) {
                    Test.instanceCount = i23;
                    sFld += (short)i22;
                    i23 -= 10;
                    for (i24 = 1; i24 < 2; i24++) {
                        Test.instanceCount >>>= i23;
                        Test.instanceCount -= i22;
                        switch (((i24 % 1) * 5) + 36) {
                        case 39:
                        default:
                            Test.fArrFld[i22 - 1] -= i1;
                            i1 = by3;
                            if (Test.bFld) {
                                i1 = (int)-1640175100L;
                                by3 = (byte)i24;
                                i23 += (i24 + Test.instanceCount);
                            }
                        }
                        dFld = Test.instanceCount;
                        iArr2[i24] = iArr2[i24 + 1];
                        sFld ^= (short)i;
                        i1 *= (int)Test.instanceCount;
                        sFld = (short)i23;
                        if (Test.bFld) {
                            lArr = FuzzerUtils.long1array(N, (long)-6479539730936343802L);
                        }
                        i23 += (4 + (i24 * i24));
                    }
                    Test.fFld += -9;
                    i1 -= -12129;
                    Test.instanceCount += i25;
                }
                break;
            case 94:
                i25 -= (int)211L;
                break;
            case 62:
                Test.instanceCount += (i * i);
                break;
            case 45:
                i23 += (i * i);
            case 66:
                if (Test.bFld) break;
            case 54:
                Test.fFld *= i23;
                break;
            case 55:
                i25 ^= i26;
                break;
            case 77:
                i26 += i25;
                break;
            case 80:
            case 49:
                i1 >>= i23;
                break;
            default:
                i25 *= (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
