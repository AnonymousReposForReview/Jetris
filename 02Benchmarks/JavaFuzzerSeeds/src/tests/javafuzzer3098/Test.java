package tests.javafuzzer3098;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:40:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-148L;
    public static int iFld=-31330;
    public static float fFld=-14.423F;
    public static volatile double dFld=45.24003;
    public static short sFld=-1689;
    public volatile boolean bFld=false;
    public int iArrFld[][]=new int[N][N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1, long l) {

        double d=1.29853;
        int i2=-205, i3=-53100;

        i1 = (int)d;
        for (i2 = 13; 330 > i2; i2++) {
            i1 += i3;
            i3 += (i2 - i3);
        }
        Test.iFld = (int)d;
        i3 *= (int)Test.instanceCount;
        i1 = 0;
        vMeth2_check_sum += i1 + l + Double.doubleToLongBits(d) + i2 + i3;
    }

    public static void vMeth1() {

        int i4=127, i5=-10, i6=216, i7=-15836, iArr[]=new int[N];
        long l1=-5464049523219415340L;
        byte by=-32;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-6909);
        FuzzerUtils.init(iArr, 11);

        Test.iFld = ((++Test.iFld) + Integer.reverseBytes(63433));
        vMeth2(Test.iFld, Test.instanceCount);
        Test.iFld = Test.iFld;
        Test.instanceCount *= Test.iFld;
        for (i4 = 1; i4 < 227; ++i4) {
            Test.instanceCount = -23961L;
            for (l1 = 1; l1 < 7; ++l1) {
                sArr[i4 + 1] -= (short)-14962;
            }
            i7 -= i5;
            i7 += (i4 - Test.iFld);
            by = (byte)i5;
            Test.instanceCount -= -240;
            Test.iFld += i4;
            Test.fFld /= ((long)(Test.fFld) | 1);
            i7 -= Test.iFld;
        }
        vMeth1_check_sum += i4 + i5 + l1 + i6 + i7 + by + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(short s, int i, float f) {

        int i9=202, i10=-60, i11=-243, i12=-28725, i13=4, i14=12, i15=-196, iArr1[]=new int[N];
        byte by1=-36;
        double d1=-57.96637;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5898538425383461544L);
        FuzzerUtils.init(iArr1, 96);

        vMeth1();
        i <<= (int)Test.instanceCount;
        for (i9 = 9; i9 < 174; i9++) {
            for (i11 = 1; i11 < 10; ++i11) {
                lArr = lArr;
                i10 += Test.iFld;
                try {
                    i10 = (i13 / -47825);
                    i = (i13 % -1541643326);
                    i10 = (i10 / -61289);
                } catch (ArithmeticException a_e) {}
                i12 >>= Test.iFld;
                iArr1[i11] <<= by1;
                d1 -= d1;
                Test.instanceCount += -17;
                for (i14 = 2; i14 > 1; --i14) {
                    i13 += i13;
                    f -= -55605;
                    Test.instanceCount = i13;
                }
            }
        }
        vMeth_check_sum += s + i + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 + i13 + by1 +
            Double.doubleToLongBits(d1) + i14 + i15 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i16=8, i17=-187, i18=13473, i19=-4, i20=-22681, i21=-41703, i22=53, i23=-204, i24=11, iArr2[]=new int[N];
        long l2=2L, lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr2, 143);
        FuzzerUtils.init(lArr1, -5628503930044186546L);

        vMeth((short)(-7142), Test.iFld, 0.280F);
        Test.instanceCount >>= Test.instanceCount;
        Test.iFld += Test.iFld;
        Test.iFld = Test.iFld;
        Test.instanceCount = (long)Test.dFld;
        for (i16 = 16; i16 < 307; i16++) {
            i17 += (int)106L;
            for (i18 = 1; i18 < 86; i18++) {
                Test.instanceCount = l2;
                for (i20 = 1; 2 > i20; ++i20) {
                    l2 *= i18;
                    i19 += i20;
                    try {
                        i17 = (i19 % 26397);
                        iArr2[i18 - 1] = (i18 / iArr2[i20]);
                        i17 = (i18 / i21);
                    } catch (ArithmeticException a_e) {}
                }
                for (i22 = 2; i22 > 1; --i22) {
                    iArr2[i16 - 1] = (int)Test.fFld;
                    try {
                        iArr2[i16 + 1] = (-1066 % iArr2[i18 - 1]);
                        i19 = (i20 % i19);
                        i19 = (iArr2[i16 - 1] % 55839);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount += (((i22 * l2) + i21) - Test.sFld);
                    Test.dFld *= i23;
                }
                i23 <<= (int)7604857108866223544L;
                Test.fFld += (float)112.31055;
                Test.iFld += 6;
                Test.instanceCount -= i18;
                i24 = 1;
                do {
                    lArr1[i24 + 1][i24 + 1] = 35970L;
                    i19 += (i24 * i24);
                    iArrFld = FuzzerUtils.int2array(N, (int)-7188);
                    Test.instanceCount += i24;
                    bFld = false;
                    iArr2[i18 - 1] *= (int)l2;
                    Test.fFld += i24;
                } while (++i24 < 2);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
