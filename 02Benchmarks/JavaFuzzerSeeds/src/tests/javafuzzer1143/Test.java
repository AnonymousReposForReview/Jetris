package tests.javafuzzer1143;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 15:43:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6672560327619847371L;
    public static volatile byte byFld=66;
    public static volatile int iFld=15285;
    public static short sFld=-2229;
    public static double dFld=-1.91313;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1, int i5) {

        int i6=-4, i7=195, i8=-5, i9=11718, iArr1[]=new int[N];
        double d=2.79186;
        float f2=31.679F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -203);
        FuzzerUtils.init(lArr, 3L);

        Test.instanceCount -= Test.byFld;
        for (i6 = 6; 189 > i6; i6++) {
            Test.instanceCount += (63 + (i6 * i6));
            for (i8 = i6; i8 < 9; ++i8) {
                iArr1[i6 - 1] -= i6;
                i7 = i8;
                lArr[i8 + 1] >>= Test.instanceCount;
                i7 *= (int)d;
                i5 -= (int)Test.instanceCount;
                i7 = 23114;
                i9 ^= i6;
                Test.instanceCount = i9;
                Test.instanceCount += (long)f2;
            }
            Test.instanceCount -= -46250;
            i7 += (17551 + (i6 * i6));
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i2, int i3, int i4) {

        float f=-81.646F, f3=-26.542F, f4=-2.805F;
        int i10=0, i11=10, i12=-31, i13=18742, iArr[]=new int[N];
        boolean b=true;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 56684);
        FuzzerUtils.init(byArr, (byte)-106);

        iArr[(i2 >>> 1) % N] = (int)(-17457 * Math.abs(--f));
        vMeth2(f3, i2);
        i2 = i2;
        i2 ^= i2;
        iArr[(-46840 >>> 1) % N] = -11;
        if (b) {
            for (f4 = 8; f4 < 203; f4++) {
                for (i11 = 1; i11 < 8; i11++) {
                    double d1=-85.40918;
                    i2 = i2;
                    i10 = i10;
                    Test.instanceCount = (long)d1;
                    Test.instanceCount += (((i11 * i2) + Test.instanceCount) - i3);
                    Test.instanceCount += (20629 + (i11 * i11));
                }
            }
            byArr = byArr;
        } else if (false) {
            Test.instanceCount *= i2;
        } else {
            i4 >>= i13;
        }
        vMeth1_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f3) +
            Float.floatToIntBits(f4) + i10 + i11 + i12 + (b ? 1 : 0) + i13 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth() {

        int i14=0, i15=-11;

        vMeth1(-212, 2886, Test.iFld);
        Test.iFld *= Test.iFld;
        for (i14 = 5; 181 > i14; ++i14) {
            Test.instanceCount = i15;
        }
        Test.instanceCount <<= i15;
        vMeth_check_sum += i14 + i15;
    }

    public void mainTest(String[] strArr1) {

        int i=11, i1=-164, i16=51298, i17=4165, i19=13, i20=30547, i21=35417, i22=161, i23=8, i24=-9, iArr2[]=new
            int[N], iArr3[]=new int[N];
        float f5=2.32F;
        boolean b1=false;

        FuzzerUtils.init(iArr2, 4);
        FuzzerUtils.init(iArr3, -8144);

        for (i = 11; 196 > i; i++) {
            vMeth();
            Test.sFld += (short)(i - Test.iFld);
            i16 = 1;
            do {
                i1 -= -5;
                Test.iFld <<= i;
                f5 += (-98L + (i16 * i16));
                b1 = b1;
                i1 >>>= (int)Test.instanceCount;
                Test.instanceCount = i;
                Test.iFld &= i1;
                i1 *= i16;
                i1 = (int)Test.instanceCount;
                i17 = 1;
                while (++i17 < 1) {
                    Test.instanceCount += (i17 ^ i);
                }
            } while (++i16 < 136);
        }
        for (int i18 : iArr2) {
            Test.instanceCount += i1;
            Test.dFld = -56742;
            Test.iFld += (int)Test.instanceCount;
        }
        b1 = b1;
        for (i19 = 15; i19 < 247; i19++) {
            Test.instanceCount += i1;
            Test.dFld += i20;
            for (i21 = 1; i21 < 108; i21++) {
                for (i23 = 1; i23 < 2; i23++) {
                    b1 = b1;
                    iArr3[i19] -= i24;
                    Test.iFld += (int)Test.instanceCount;
                    iArr3[i23] += i16;
                    lArrFld[i19 - 1] += (long)f5;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
