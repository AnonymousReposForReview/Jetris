package tests.javafuzzer2432;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:23:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3749254078L;
    public static double dFld=2.108150;
    public static byte byFld=-45;
    public int iFld=2;
    public volatile int iArrFld[]=new int[N];

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, int i9) {

        int i10=28613, i11=-3, i12=-87, i13=-9, iArr2[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, -3);
        FuzzerUtils.init(dArr, 84.62398);

        Test.dFld = i9;
        for (i10 = 7; i10 < 289; i10 += 2) {
            iArr2[i10 + 1] = (int)l;
            Test.byFld = (byte)i10;
            Test.instanceCount <<= 217102972L;
            i9 >>= i10;
        }
        i11 -= i10;
        i11 = i11;
        for (i12 = 9; i12 < 208; ++i12) {
            iArr2 = iArr2;
            i13 >>>= (int)1017621580L;
            dArr[i12] = i10;
            i9 += i12;
            Test.instanceCount ^= i9;
            iArr2[i12] -= (int)l;
        }
        long meth_res = l + i9 + i10 + i11 + i12 + i13 + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4) {

        int i5=-43226, i6=5281, i7=-16728, i8=33719, i14=9, i15=1343, iArr1[]=new int[N];
        float f1=-61.612F, fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -11);
        FuzzerUtils.init(fArr, 2.143F);

        i5 = 1;
        do {
            i6 = 1;
            do {
                i4 += (int)(f1 -= (iArr1[i6]++));
                for (i7 = i5; i7 < 1; ++i7) {
                    Test.dFld -= (Math.max(i7 + i8, iMeth(Test.instanceCount, 9)) - f1);
                    i8 += i6;
                    f1 = 70L;
                    Test.instanceCount += i7;
                    i8 *= (int)Test.instanceCount;
                }
            } while (++i6 < 8);
            Test.instanceCount += i5;
            f1 += i5;
            for (i14 = 1; i14 < 8; ++i14) {
                fArr[i5 + 1] = f1;
                i8 %= (int)(i6 | 1);
                Test.instanceCount *= Test.instanceCount;
            }
        } while (++i5 < 195);
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + i14 + i15 + FuzzerUtils.checkSum(iArr1)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public byte byMeth(float f, int i1, int i2) {

        double d=-19.95681;
        int i3=116, i16=10, i17=13, i18=36673;
        boolean b=false;
        short s=-14861;
        long l1=3819592039L;

        i1 *= ((++i2) + i1);
        for (d = 1; d < 257; ++d) {
            if (b) {
                vMeth(i3);
            }
        }
        Test.instanceCount += Test.instanceCount;
        for (i16 = 6; 303 > i16; ++i16) {
            if (b) continue;
            Test.byFld = (byte)8795;
            i17 += (int)6735215865379296096L;
            i18 += i16;
            i18 += (((i16 * i17) + f) - Test.instanceCount);
            iArrFld[i16 - 1] -= s;
        }
        i3 = (int)Test.instanceCount;
        i17 >>>= (int)l1;
        l1 = i3;
        long meth_res = Float.floatToIntBits(f) + i1 + i2 + Double.doubleToLongBits(d) + i3 + (b ? 1 : 0) + i16 + i17 +
            i18 + s + l1;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-3, i19=39, i20=11, i21=-3, i22=-171, i23=12, i24=-198, i25=98, i26=0, i27=241, iArr[]=new int[N];
        float f2=2.36F;
        short s1=22490;
        boolean b1=false;

        FuzzerUtils.init(iArr, 11);

        i = 1;
        do {
            iArr[i] += (int)((byMeth(f2, i, i) + i) - Test.dFld);
            iFld -= (int)f2;
            for (i19 = i; i19 < 152; ++i19) {
                i20 -= -31874;
                Test.dFld = i20;
                for (i21 = 1; i21 > 1; --i21) {
                    iArr[i21] -= (int)Test.instanceCount;
                }
                i22 = (int)3L;
                Test.instanceCount -= (long)Test.dFld;
                iArrFld[i19] >>= (int)Test.instanceCount;
                iFld += (((i19 * Test.instanceCount) + i19) - i20);
                iArr[i + 1] -= i23;
                Test.dFld = -1;
            }
            iArr[i + 1] -= (int)f2;
            i22 /= (int)(i23 | 1);
            for (i24 = 152; i24 > i; --i24) {
                for (i26 = 1; i26 < 1; ++i26) {
                    Test.instanceCount += (long)(67.666F + (i26 * i26));
                    i25 += iFld;
                    iFld = s1;
                    i25 += i26;
                    Test.instanceCount = Test.instanceCount;
                    if (b1) continue;
                }
                if (b1) {
                    iFld >>>= i25;
                } else if (true) {
                    iArr = iArr;
                } else if (true) {
                    if (b1) break;
                    iFld += i24;
                    iFld = i;
                } else {
                    i22 -= 9;
                }
            }
        } while (++i < 165);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
