package tests.javafuzzer2259;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:00:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static float fFld=0.537F;
    public double dFld=-111.77630;
    public volatile int iFld=10;
    public static boolean bArrFld[]=new boolean[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s1) {

        int i11=-14, i12=-2, i13=4, i14=25;
        boolean b=true;

        for (i11 = 12; i11 < 300; ++i11) {
            b = b;
            for (i13 = 1; i13 < 6; i13++) {
                s1 = (short)227;
                i12 *= 126;
                if (true) break;
            }
            i12 >>= (int)Test.instanceCount;
        }
        vMeth1_check_sum += s1 + i11 + i12 + (b ? 1 : 0) + i13 + i14;
    }

    public static boolean bMeth(int i8, long l2, long l3) {

        int i9=3, i10=-14, iArr1[]=new int[N];
        short s2=-4177;

        FuzzerUtils.init(iArr1, -76);

        for (i9 = 20; 338 > i9; i9 += 2) {
            boolean b1=false;
            vMeth1(s2);
            Test.instanceCount += i9;
            if (b1) {
                i10 <<= i10;
                if (true) {
                    switch ((i9 % 1) + 54) {
                    case 54:
                        i10 *= i9;
                        iArr1[i9] = 43;
                        s2 = (short)i9;
                        i10 = i10;
                    default:
                        i8 -= i9;
                        i10 += (((i9 * Test.instanceCount) + Test.fFld) - i9);
                    }
                    i10 -= i9;
                } else {
                    i8 -= i10;
                }
            }
        }
        long meth_res = i8 + l2 + l3 + i9 + i10 + s2 + FuzzerUtils.checkSum(iArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(int i, long l, long l1) {

        int i1=-97, i2=-5034, i3=6, i4=-135, i5=-21062, i6=-58, i7=0, iArr[]=new int[N];
        double d=0.7429;
        short s=-11398;
        float f=-2.91F;
        byte by=-42;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 59890L);
        FuzzerUtils.init(iArr, -29654);

        for (i1 = 7; i1 < 280; ++i1) {
            for (i3 = 1; i3 < 6; i3++) {
                for (d = 2; 1 < d; d -= 2) {
                    s -= (short)((++i2) * (i2++));
                    i4 += (int)((long)d ^ i2);
                    f += (float)d;
                    i = (int)(++l);
                    lArr[i1] = i1;
                }
                f *= iArr[i1];
                for (i6 = 1; i6 < 2; i6++) {
                    if (Test.bArrFld[i1 - 1] = bMeth(i6, l1, 24658L)) continue;
                }
                i4 += (i3 - i);
            }
            if (true) {
                Test.instanceCount = (long)1.285F;
            }
            by += (byte)(i1 ^ i1);
        }
        vMeth_check_sum += i + l + l1 + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + s +
            Float.floatToIntBits(f) + i6 + i7 + by + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-116, i16=-187, i17=28, i18=3, i19=-33879, i20=9, i21=5, i22=32;
        short s3=30105;
        float f1=-2.1014F, fArr[][]=new float[N][N];
        byte by1=-24;
        boolean b2=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, -48.706F);
        FuzzerUtils.init(dArr, -48.83768);

        vMeth(i15, 189L, Test.instanceCount);
        s3 = (short)Test.instanceCount;
        for (i16 = 13; i16 < 217; i16++) {
            Test.instanceCount = i16;
            i17 -= 52037;
            dFld = i16;
            Test.instanceCount -= i17;
            iArrFld[i16 + 1] = -38037;
            i15 += i15;
            for (f1 = 5; f1 < 123; ++f1) {
                i17 = by1;
                Test.instanceCount = (long)dFld;
                i15 = by1;
                i17 += (int)Test.instanceCount;
                i18 += (int)((long)f1 ^ Test.instanceCount);
                fArr[i16 + 1][(int)(f1)] = i16;
                dArr[i16 - 1] += dFld;
                for (i19 = 1; i19 < 2; i19 += 2) {
                    Test.instanceCount *= (long)dFld;
                    Test.instanceCount += (((i19 * i21) + i21) - Test.fFld);
                    Test.instanceCount += (((i19 * i20) + i20) - i16);
                    i17 += (((i19 * Test.instanceCount) + i22) - i18);
                    i18 -= i15;
                    if (b2) {
                        switch (((8 >>> 1) % 3) + 70) {
                        case 70:
                            iArrFld[i19 + 1] *= (int)Test.instanceCount;
                            i21 -= (int)dFld;
                            break;
                        case 71:
                            iFld = iFld;
                        case 72:
                            i18 *= (int)-1305833407L;
                            break;
                        default:
                            i20 = iFld;
                        }
                    } else {
                        if (false) break;
                    }
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
