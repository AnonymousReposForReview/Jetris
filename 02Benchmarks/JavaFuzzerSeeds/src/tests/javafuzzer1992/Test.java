package tests.javafuzzer1992;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:00:21 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-59784L;
    public long lFld=5L;
    public static volatile float fFld=58.805F;
    public static int iFld=73;
    public static volatile float fArrFld[]=new float[N];
    public static long lArrFld[]=new long[N];
    public static volatile double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, -43.26F);
        FuzzerUtils.init(Test.lArrFld, -2178629993L);
        FuzzerUtils.init(Test.dArrFld, -32.118159);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3) {

        int i4=-254, i5=50899, i6=8, i7=-40470, i8=-217, i9=-221, iArr[]=new int[N];
        boolean b=true;
        double d=-2.11064;
        long l2=-5079292130845052784L;

        FuzzerUtils.init(iArr, 128);

        Test.dArrFld[(12 >>> 1) % N] = Test.dArrFld[(i3 >>> 1) % N];
        i4 = 1;
        while (++i4 < 333) {
            if (b) break;
            if (b) {
                d -= 20402;
                if (b) {
                    for (l2 = 1; l2 < 5; ++l2) {
                        Test.fArrFld[(int)(l2 + 1)] = i5;
                    }
                    i5 = i5;
                    for (i6 = 1; i6 < 5; i6++) {
                        Test.dArrFld[i4] = Test.dArrFld[i4];
                        for (i8 = i6; i8 < 2; ++i8) {
                            b = b;
                            if (b) continue;
                            iArr[i6] *= Test.iFld;
                        }
                    }
                }
            } else if (b) {
                Test.iFld -= (int)Test.fFld;
            } else if (b) {
                Test.dArrFld[i4][i4] = Test.instanceCount;
            } else {
                if (b) continue;
            }
        }
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + Double.doubleToLongBits(d) + l2 + i5 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(long l1, int i2) {

        int i10=-9, i11=22628;

        Test.fFld = ((i2--) + Test.instanceCount);
        i2 *= (int)l1;
        i2 += (int)(((-(-(Test.instanceCount - i2))) * (i2 * 0)) - Test.instanceCount);
        vMeth1(Test.iFld);
        for (long l3 : Test.lArrFld) {
            for (i10 = 1; i10 < 4; i10 += 2) {
                double d1=-65.50158;
                switch (((i10 % 8) * 5) + 126) {
                case 142:
                    Test.iFld = i10;
                    break;
                case 127:
                    i2 += (i10 * i10);
                    i2 -= i11;
                    Test.fFld += i10;
                case 144:
                    Test.instanceCount *= -5430;
                    break;
                case 130:
                    d1 = 0.523F;
                    i2 *= (int)Test.fFld;
                    Test.iFld -= i2;
                    break;
                case 154:
                    i11 += (int)-2.417F;
                case 136:
                    Test.iFld *= (int)d1;
                    break;
                case 165:
                    l3 += i10;
                    break;
                case 131:
                    Test.lArrFld[i10] = Test.instanceCount;
                    break;
                }
            }
        }
        vMeth_check_sum += l1 + i2 + i10 + i11;
    }

    public float fMeth(long l) {

        int i12=14700, i13=65146, i14=-4, i15=136, i16=10, i17=-134, iArr1[]=new int[N];
        boolean b1=false;
        short s1=17560;
        byte by1=-81;

        FuzzerUtils.init(iArr1, -12);

        vMeth(l, Test.iFld);
        for (i12 = 5; i12 < 259; i12++) {
            iArr1[i12 + 1] -= (int)l;
            if (b1) continue;
            iArr1[i12] -= (int)Test.fFld;
            for (i14 = 1; i14 < 6; i14++) {
                lFld *= s1;
                for (i16 = i14; i16 < 2; ++i16) {
                    iArr1[i14] >>= by1;
                    i17 += (i16 * i16);
                    Test.lArrFld[i16 - 1] -= -9;
                    i15 = 13975;
                    i13 = i14;
                    i15 = i15;
                    Test.fFld = i16;
                }
            }
        }
        long meth_res = l + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + s1 + i16 + i17 + by1 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=218, i1=13, i18=-6, i19=2793, i20=-216, i21=38, i22=106, i23=-124, i24=12507, iArr2[]=new int[N];
        byte by=-104;
        short s=9211;
        double d2=0.41145;

        FuzzerUtils.init(iArr2, -107);

        for (i = 3; i < 340; i++) {
            Test.fArrFld[i] *= ((Test.lArrFld[i]++) * (by--));
            i1 -= (int)(i1 -= (int)((i1 + -61636) * lFld));
            i1 = (int)((--s) + (Test.fFld--));
        }
        i1 += ((i1--) * s);
        Test.fFld = fMeth(lFld);
        Test.iFld *= (int)lFld;
        i18 = 1;
        while (++i18 < 362) {
            iArr2[i18 - 1] *= (int)d2;
            i1 = (int)lFld;
            for (i19 = 2; 70 > i19; i19++) {
                d2 -= 2.721F;
                d2 *= lFld;
                iArr2[i18 + 1] -= (int)lFld;
                Test.lArrFld[(i >>> 1) % N] -= 14;
                for (i21 = 1; i21 < 2; i21++) {
                    Test.iFld = i22;
                    i22 = (int)Test.fFld;
                    i1 |= (int)-3099673442L;
                    lFld = i19;
                    Test.iFld ^= i19;
                    i1 += i21;
                    i20 -= (int)Test.instanceCount;
                }
                Test.iFld += (((i19 * i) + Test.instanceCount) - i21);
                Test.iFld = -7;
                Test.lArrFld[i19 - 1] >>= Test.instanceCount;
                i20 += i21;
                for (i23 = 1; i23 < 2; ++i23) {
                    iArr2[i23 - 1] *= 0;
                    i1 = (int)2.92791;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
