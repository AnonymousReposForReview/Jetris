package tests.javafuzzer106;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:26:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-131L;
    public static short sFld=8011;
    public byte byFld=-61;
    public int iFld=5;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -34662);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i, int i1) {

        byte by=0;
        int i2=-63412, i3=-36853, i4=-128, i5=10, i6=-7, iArr[]=new int[N];
        float f=-1.78F;
        boolean b=false;

        FuzzerUtils.init(iArr, 57714);

        by = (byte)i1;
        for (i2 = 1; 220 > i2; ++i2) {
            i3 += (i2 * i2);
            if (b) {
                for (i4 = i2; i4 < 7; i4++) {
                    i += (-14 + (i4 * i4));
                    i6 = 1;
                    do {
                        l *= i;
                    } while ((i6 -= 3) > 0);
                    Test.instanceCount = (long)f;
                    i1 >>= -63;
                    l -= i;
                }
            } else if (b) {
                i += i1;
                b = b;
            }
            try {
                i3 = (-97 / i5);
                i = (iArr[i2 - 1] % -37481);
                i = (i5 / -150);
            } catch (ArithmeticException a_e) {}
            if (i != 0) {
                vMeth2_check_sum += l + i + i1 + by + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + (b ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
        }
        vMeth2_check_sum += l + i + i1 + by + i2 + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i7=0, i8=-55, i9=114, i10=-3955, i11=13, i12=11;
        double d=0.70196;
        byte by1=-45;
        float f1=-85.716F;

        vMeth2(Test.instanceCount, i7, i8);
        i8 = 44;
        i9 = 371;
        do {
            switch ((i9 % 3) + 83) {
            case 83:
                i8 = i7;
                Test.sFld += (short)i7;
                i8 |= (int)Test.instanceCount;
                break;
            case 84:
                i8 -= (int)d;
                by1 -= (byte)i8;
                i7 = i7;
                i10 *= (int)Test.instanceCount;
            case 85:
                Test.iArrFld[i9 - 1] >>= 76;
                for (i11 = 1; i11 < 13; ++i11) {
                    f1 %= (Test.instanceCount | 1);
                    i10 = i12;
                }
                break;
            default:
                i12 <<= 4145;
            }
        } while ((i9 -= 3) > 0);
        vMeth1_check_sum += i7 + i8 + i9 + Double.doubleToLongBits(d) + by1 + i10 + i11 + i12 +
            Float.floatToIntBits(f1);
    }

    public void vMeth() {


        vMeth1();
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i13=-8, i15=8, i16=5, i17=-7, i18=-1, i19=24910;
        long l1=225L, lArr[]=new long[N];
        float f2=-57.73F;

        FuzzerUtils.init(lArr, -12L);

        vMeth();
        Test.iArrFld[(i13 >>> 1) % N] = (int)Test.instanceCount;
        Test.iArrFld[(220 >>> 1) % N] <<= (int)1830995285L;
        for (int i14 : Test.iArrFld) {
            Test.instanceCount += 13984;
            Test.sFld *= (short)-21924;
            Test.iArrFld[(i14 >>> 1) % N] = byFld;
            i15 = 1;
            while (++i15 < 63) {
                for (i16 = 1; i16 < 1; ++i16) {
                    lArr[i15] = l1;
                    i13 += (i16 * i16);
                    Test.instanceCount = i14;
                    i14 /= (int)(iFld | 1);
                    l1 = -2;
                }
                i17 -= Test.sFld;
                f2 *= Test.instanceCount;
                f2 += f2;
                iFld = (int)Test.instanceCount;
                for (i18 = 1; i18 > 1; i18 -= 2) {
                    Test.instanceCount += (((i18 * i17) + i18) - byFld);
                    i13 = i14;
                    i19 *= i18;
                }
            }
        }
        iFld = iFld;
        Test.iArrFld[(iFld >>> 1) % N] = (int)f2;
        Test.iArrFld[(i15 >>> 1) % N] <<= (int)35918L;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
