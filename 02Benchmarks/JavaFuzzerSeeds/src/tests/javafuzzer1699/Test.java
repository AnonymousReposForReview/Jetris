package tests.javafuzzer1699;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:56:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=198L;
    public int iFld=-130;
    public static volatile double dFld=57.92900;
    public static int iFld1=54355;
    public static boolean bFld=false;
    public static byte byFld=62;
    public long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)10812);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, double d1, int i3) {

        int i4=107, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -21468);

        iArr1[(i4 >>> 1) % N] = (int)Test.instanceCount;
        vMeth1_check_sum += l + Double.doubleToLongBits(d1) + i3 + i4 + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth() {

        float f2=68.228F;
        short s=22178, sArr[]=new short[N];
        int i5=-14883, i6=-178, i7=-239, i8=-17483, iArr2[]=new int[N];
        byte by1=116, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)119);
        FuzzerUtils.init(sArr, (short)-11315);
        FuzzerUtils.init(iArr2, 34858);

        for (byte by : byArr) {
            Test.dFld += f2;
        }
        switch ((((((int)(Test.iFld1 % (Test.instanceCount | 1))) >>> 1) % 1) * 5) + 12) {
        case 13:
            vMeth1(Test.instanceCount, Test.dFld, -14);
            Test.iFld1 >>= s;
            i5 = 1;
            while (++i5 < 178) {
                Test.iFld1 = i5;
                Test.iFld1 = (int)Test.dFld;
                byArr[i5] -= (byte)i5;
                for (i6 = 9; i6 > i5; --i6) {
                    sArr[i6] -= (short)f2;
                    i8 = 1;
                    do {
                        i7 = i7;
                        Test.iFld1 -= by1;
                        iArr2[i6] <<= i8;
                    } while (++i8 < 1);
                }
            }
            break;
        default:
            Test.instanceCount >>= 239;
        }
        long meth_res = Float.floatToIntBits(f2) + s + i5 + i6 + i7 + i8 + by1 + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, float f1) {

        double d=123.30744;
        int i2=-21725, i9=-5, i10=17408, i11=13888, i12=213, iArr3[]=new int[N];
        short s1=-2695;
        long lArr[]=new long[N], lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, -7414L);
        FuzzerUtils.init(lArr1, 45325L);
        FuzzerUtils.init(iArr3, 9313);
        FuzzerUtils.init(fArr, 1.240F);

        for (d = 316; d > 12; d--) {
            i2 = (int)(Test.instanceCount * iMeth());
            lArr[(int)(d)] >>= Test.instanceCount;
            Test.iFld1 *= i2;
        }
        for (i9 = 7; i9 < 308; ++i9) {
            i2 *= Test.iFld1;
            for (i11 = 5; i9 < i11; i11--) {
                Test.dFld -= i2;
                lArr1[i11 - 1] -= i11;
                switch ((i9 % 7) + 102) {
                case 102:
                    Test.iFld1 += i11;
                    if (Test.bFld) break;
                    Test.iFld1 -= 39016;
                    iArr3[i11 + 1] -= i2;
                    break;
                case 103:
                    i10 |= -6;
                    break;
                case 104:
                    fArr[i11] += i10;
                    break;
                case 105:
                    i10 -= i11;
                case 106:
                    Test.sArrFld[i11] -= (short)i12;
                    break;
                case 107:
                    i10 += (i11 - i11);
                    break;
                case 108:
                    s1 += (short)(i11 | Test.instanceCount);
                    break;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i2 + i9 +
            i10 + i11 + i12 + s1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr3) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i1=14922, i13=-12, i14=149, i15=-12, i16=0, i17=-9, i18=-15507, i19=-81, i20=49, iArr[]=new int[N];
        long l1=187L, l2=129L;
        short s2=-2111;
        float f4=101.645F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 64);
        FuzzerUtils.init(bArr, true);

        lArrFld[(iFld >>> 1) % N] = ((iArr[(iFld >>> 1) % N]++) - (iArr[(iFld >>> 1) % N]++));
        for (i = 5; 326 > i; ++i) {
            float f3=2.974F;
            vMeth(f3, f3);
            l1 += s2;
            Test.instanceCount -= l1;
            l1 >>>= iFld;
        }
        for (i13 = 5; i13 < 192; i13++) {
            Test.instanceCount = i;
            i14 += i13;
        }
        iFld *= Test.byFld;
        for (i15 = 7; i15 < 138; ++i15) {
            for (l2 = 7; l2 < 191; l2++) {
                Test.instanceCount = i18;
                f4 = i16;
                i19 = 2;
                do {
                    switch (((i15 % 1) * 5) + 114) {
                    case 116:
                        Test.instanceCount += i19;
                        Test.dFld += i1;
                        i18 *= 81;
                        break;
                    }
                    f4 -= Test.instanceCount;
                    s2 <<= (short)7;
                    Test.instanceCount -= 4271582243352675008L;
                    i18 = -22707;
                    i16 = (int)l2;
                    iArr[i15 + 1] = (int)l1;
                } while (--i19 > 0);
                i16 = i18;
                bArr[i15 - 1] = Test.bFld;
                i20 = 1;
                do {
                    i16 += i20;
                } while (++i20 < 2);
                s2 -= (short)l1;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
