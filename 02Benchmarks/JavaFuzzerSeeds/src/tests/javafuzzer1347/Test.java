package tests.javafuzzer1347;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:32:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4L;
    public volatile short sFld=7304;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i2, byte by) {


        i2 = (int)100L;
        i2 += i2;
        vMeth_check_sum += i2 + by;
    }

    public static int iMeth1() {

        int i3=-11, i4=251, i5=9, i6=0, i7=-14, i8=-28, i9=-223, iArr1[]=new int[N];
        byte by1=16;
        boolean b=false;

        FuzzerUtils.init(iArr1, 5);

        vMeth(i3, by1);
        for (i4 = 165; i4 > 4; --i4) {
            i3 += (i4 - Test.instanceCount);
            for (i6 = 1; i6 < 10; i6++) {
                i7 |= (int)Test.instanceCount;
                i5 = 66;
                i5 *= i3;
                iArr1[i6 + 1] *= 6;
                i7 %= 16;
                i5 = i3;
            }
            for (i8 = 1; 10 > i8; ++i8) {
                if (i9 != 0) {
                }
                b = b;
                Test.instanceCount >>= i8;
                if (b) break;
            }
        }
        long meth_res = i3 + by1 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f1, float f2) {

        int i1=-4, i10=-198, i11=3, i12=39, i13=11, i14=43968, iArr[]=new int[N];
        long l1=-8249662798563668116L;
        short s=-9402;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -47966);
        FuzzerUtils.init(dArr, 61.12207);

        iArr[(i1 >>> 1) % N] -= iMeth1();
        dArr[(13 >>> 1) % N] *= Test.instanceCount;
        for (i10 = 5; i10 < 130; i10++) {
            Test.instanceCount += (long)f1;
            i11 >>>= i10;
            Test.instanceCount = (long)f2;
            i12 = 1;
            do {
                for (i13 = i12; i13 < 1; ++i13) {
                    l1 += (i13 | i1);
                    i14 *= (int)l1;
                }
                Test.instanceCount >>= i13;
                i1 = i10;
                i14 ^= (int)l1;
                i1 += (i12 * s);
                i11 = (int)8032448531521427860L;
            } while (++i12 < 13);
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i1 + i10 + i11 + i12 + i13 + i14 + l1 + s
            + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=29395L, lArr[]=new long[N];
        int i=-4, i15=-248, i16=62041, i17=-4, i18=-1, i19=-14, i20=40772, i21=-13, i22=17825, i23=73, iArr2[]=new
            int[N];
        double d=-126.121579;
        float f=0.280F;
        byte by2=-50;

        FuzzerUtils.init(iArr2, 245);
        FuzzerUtils.init(lArr, -6L);

        for (l = 9; l < 257; ++l) {
            i -= i;
            i -= (int)(((-8113 * (d * f)) - (l - i)) - ((-1.130426 + (i - i)) + iMeth(f, f)));
        }
        switch ((((i >>> 1) % 5) * 5) + 50) {
        case 52:
            sFld = (short)i;
            for (i15 = 6; i15 < 205; i15++) {
                sFld -= (short)i16;
                for (i17 = 1; i17 < 126; i17 += 2) {
                    i = 9291;
                    iArr2 = iArr2;
                }
                for (i19 = 3; i19 < 126; i19++) {
                    for (i21 = 1; i21 < 2; i21++) {
                        boolean b1=true;
                        switch (((i15 >>> 1) % 2) + 113) {
                        case 113:
                            i22 = i17;
                            by2 *= (byte)d;
                            lArr[i21] = i15;
                            break;
                        case 114:
                            switch ((((i20 >>> 1) % 1) * 5) + 2) {
                            case 5:
                                Test.instanceCount = Test.instanceCount;
                                if (b1) break;
                                break;
                            default:
                                Test.instanceCount += -183;
                            }
                            i *= i15;
                            break;
                        default:
                            i22 += (int)d;
                            iArr2[i21] *= i17;
                        }
                        try {
                            i = (-1096898295 % i22);
                            i20 = (i17 / i15);
                            i20 = (201 % i16);
                        } catch (ArithmeticException a_e) {}
                        i = i15;
                        i22 >>= by2;
                        iArr2[i21] = -226;
                        i23 = i22;
                    }
                    i16 = i;
                    Test.instanceCount = i;
                }
            }
            break;
        case 75:
            i16 >>>= (int)Test.instanceCount;
        case 65:
            i20 = i23;
            break;
        case 53:
            iArr2[(-1 >>> 1) % N] += i20;
            break;
        case 51:
            iArr2 = iArr2;
            break;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
