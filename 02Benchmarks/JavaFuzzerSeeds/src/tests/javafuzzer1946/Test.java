package tests.javafuzzer1946;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:19:11 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-46L;
    public static float fFld=1.957F;
    public static byte byFld=-82;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -9.18042);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i3, float f) {

        int i4=47923, i5=-4, i6=-7, i7=161, i8=10, i9=-46320, iArr[]=new int[N];
        double d=34.58037;

        FuzzerUtils.init(iArr, -13);

        for (i4 = 16; i4 < 339; i4++) {
            switch ((i4 % 1) + 96) {
            case 96:
                i5 = i5;
                i5 -= (int)d;
                Test.instanceCount += (i4 ^ i3);
                break;
            }
            i3 = i5;
            for (i6 = 1; 5 > i6; i6 += 3) {
                i7 = i7;
                for (i8 = 5; i8 > i4; --i8) {
                    d += i4;
                    i9 += i8;
                    iArr[i6 - 1] = i6;
                    i5 -= i7;
                    f += (51.16F + (i8 * i8));
                    f += Test.instanceCount;
                }
            }
        }
        vMeth2_check_sum += i3 + Float.floatToIntBits(f) + i4 + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1, int i2) {

        int i10=-10, i11=172;
        boolean b=true;
        short sArr[]=new short[N];
        long lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(sArr, (short)-27617);
        FuzzerUtils.init(lArr, -3L);
        FuzzerUtils.init(byArr, (byte)-107);

        vMeth2(i1, Test.fFld);
        for (short s : sArr) {
            i1 += i1;
            s = (short)Test.instanceCount;
            Test.fFld *= s;
            Test.fFld = Test.fFld;
            for (i10 = 1; i10 < 4; ++i10) {
                if (b) break;
                Test.fFld -= -93;
                i1 >>= s;
                Test.instanceCount += (((i10 * Test.fFld) + s) - i2);
                i2 += (i10 * i10);
                lArr[i10 + 1] = Test.instanceCount;
                i1 *= i1;
                byArr[i10 + 1] *= (byte)i2;
            }
        }
        vMeth1_check_sum += i1 + i2 + i10 + i11 + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i, long l) {

        int i13=-129, i14=4, iArr1[]=new int[N];
        boolean b1=true;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr1, 47234);
        FuzzerUtils.init(fArr, -98.585F);

        vMeth1(i, i);
        for (int i12 : iArr1) {
            Test.instanceCount ^= -1L;
            l = i12;
            for (i13 = 4; i13 > 1; i13 -= 3) {
                int i15=-15856;
                l = i14;
                Test.fFld = i13;
                Test.instanceCount -= i15;
                i12 += 5882;
                fArr[i13 - 1][i13] *= -2.783F;
                fArr[i13][i13 - 1] += l;
                i14 = i12;
                if (b1) continue;
                i15 &= i12;
                if (i13 != 0) {
                    vMeth_check_sum += i + l + i13 + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
            }
        }
        vMeth_check_sum += i + l + i13 + i14 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=83, i17=6, i18=-9, i19=2, i20=4, i21=13, i22=-5;
        boolean b2=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 211L);

        vMeth(i16, Test.instanceCount);
        Test.dArrFld[(i16 >>> 1) % N] -= i16;
        i16 += (int)-2603860072L;
        for (i17 = 20; i17 < 333; i17++) {
            b2 = b2;
            Test.fFld += i18;
            for (i19 = 5; i19 < 80; i19++) {
                switch ((((i19 >>> 1) % 4) * 5) + 99) {
                case 104:
                    i18 <<= (int)Test.instanceCount;
                    Test.byFld = (byte)i17;
                case 109:
                    i20 += i18;
                    switch (((i19 % 1) * 5) + 118) {
                    case 119:
                        Test.fFld += (i19 * i19);
                        i18 *= (int)Test.instanceCount;
                        i20 = i16;
                        for (i21 = i17; i21 < 2; ++i21) {
                            switch ((((i16 >>> 1) % 1) * 5) + 47) {
                            case 51:
                                i16 += i21;
                                Test.instanceCount += (i21 * i21);
                                break;
                            default:
                                i22 = i21;
                                switch (((i17 % 5) * 5) + 108) {
                                case 114:
                                    Test.iArrFld[i19] >>= -233;
                                case 113:
                                    i22 += (((i21 * i17) + i17) - i19);
                                    b2 = b2;
                                    Test.fFld += i21;
                                    break;
                                case 130:
                                case 131:
                                    lArr1[i19] >>>= Test.instanceCount;
                                    break;
                                case 120:
                                    i20 += i21;
                                    i22 = i18;
                                    break;
                                }
                                Test.fFld += i21;
                            }
                        }
                        break;
                    }
                    Test.iArrFld[i19 + 1] <<= i21;
                    break;
                case 117:
                    Test.fFld -= Test.instanceCount;
                    break;
                case 114:
                    Test.iArrFld[(i16 >>> 1) % N] = i16;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
