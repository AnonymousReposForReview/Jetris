package tests.javafuzzer727;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:42:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-375019664L;
    public static short sFld=-19020;
    public int iFld=-49596;
    public volatile double dFld=2.75711;
    public static int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -63983);
        FuzzerUtils.init(Test.fArrFld, 0.133F);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i2, int i3) {

        int i4=1, i5=2;

        for (i4 = 18; i4 < 298; i4++) {
            Test.iArrFld[i4 - 1][i4] *= (int)-19679L;
            i3 = i4;
            Test.iArrFld[i4 + 1] = Test.iArrFld[i4 - 1];
        }
        l2 = i4;
        vMeth1_check_sum += l2 + i2 + i3 + i4 + i5;
    }

    public static void vMeth(int i1, long l1, float f) {

        int i6=147, i7=-8, i8=3759, iArr[]=new int[N];
        long l3=59729L, l4=14L;
        boolean b=false;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 86.5438);
        FuzzerUtils.init(iArr, -11);

        vMeth1(l1, i1, i1);
        for (i6 = 13; i6 < 397; i6++) {
            l3 = 1;
            while (++l3 < 4) {
                if (b) break;
                i7 += (int)(((l3 * i6) + f) - i6);
            }
            f -= Test.instanceCount;
            i7 = i6;
            i1 = (int)l3;
            switch (((i6 % 7) * 5) + 107) {
            case 140:
            case 133:
                Test.iArrFld = Test.iArrFld;
                break;
            case 118:
                for (l4 = 1; l4 < 4; ++l4) {
                    i8 = i1;
                    dArr[(int)(l4 + 1)][i6] -= i8;
                }
                if (b) break;
                break;
            case 115:
                f -= l3;
                break;
            case 124:
                i8 *= i1;
                break;
            case 134:
            case 121:
                Test.sFld += (short)(((i6 * i6) + i6) - l1);
            default:
                i8 += (i6 ^ (long)f);
            }
        }
        vMeth_check_sum += i1 + l1 + Float.floatToIntBits(f) + i6 + i7 + l3 + (b ? 1 : 0) + l4 + i8 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i, long l) {


        vMeth(64422, l, 66.461F);
        Test.fArrFld[(i >>> 1) % N] += Test.sFld;
        long meth_res = i + l;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i10=8, i11=251, i12=-39090, i13=-78, i14=-5536, i15=5872, i16=-51763, i17=51, i18=-46345, i19=156,
            i20=-7042;
        boolean b1=true;
        float f1=-43.263F;

        lMeth(iFld, -58866L);
        for (i10 = 392; i10 > 5; i10--) {
            i11 *= 63619;
            switch ((i10 % 2) + 111) {
            case 111:
                Test.instanceCount += (((i10 * i11) + i10) - i10);
            case 112:
                iFld = i10;
                iFld = iFld;
                break;
            }
            for (i12 = 3; 65 > i12; ++i12) {
                dFld -= Test.instanceCount;
                iFld = (int)15941L;
                i14 = 1;
                while (++i14 < 2) {
                    Test.instanceCount -= Test.sFld;
                    iFld >>= i11;
                    Test.instanceCount *= 988871854L;
                    b1 = b1;
                    if (b1) break;
                    if (true) break;
                    if (b1) continue;
                    dFld = i10;
                }
                i11 >>>= i14;
                for (i15 = 2; i15 > i10; --i15) {
                    Test.iArrFld[i12][i15 - 1] = i16;
                    f1 += 248690669L;
                }
            }
            iFld += i12;
            i13 += (i10 + Test.instanceCount);
            i16 -= -47159;
            for (i17 = 4; 65 > i17; i17++) {
                for (i19 = 1; i19 < 2; i19++) {
                    i18 += (i19 * i19);
                    i11 >>= (int)Test.instanceCount;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
