package tests.javafuzzer91;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:15:25 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=336598450L;
    public float fFld=0.509F;
    public static byte byFld=98;
    public static short sFld=18542;
    public static float fFld1=-1.349F;
    public int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 108.117356);
        FuzzerUtils.init(Test.iArrFld1, 181);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(float f2, int i8, int i9) {

        int i10=-197, i11=62648, i12=139, i13=165, i14=-246, i15=-89, i16=-5, i17=-61483, iArr[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)2779);
        FuzzerUtils.init(iArr, 32326);

        for (i10 = 11; i10 < 268; i10++) {
            if (i11 != 0) {
            }
            i12 = 1;
            while (++i12 < 6) {
                Test.instanceCount = Test.instanceCount;
            }
            for (i13 = 1; i13 < 6; i13++) {
                boolean b=true;
                Test.sFld -= (short)i9;
                i15 = 1;
                do {
                    Test.instanceCount |= 109;
                } while (++i15 < 2);
                i11 = i9;
                sArr[i13 - 1] >>= (short)53L;
                switch (((i10 % 1) * 5) + 16) {
                case 19:
                    if (b) continue;
                    for (i16 = 1; i16 < 2; i16++) {
                        i8 += (int)(-8115006436484735376L + (i16 * i16));
                        iArr[i13 + 1] &= i11;
                    }
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f1) {

        int i7=11;

        f1 += ((i7--) >>> iMeth(-104.645F, 192, i7));
        vMeth1_check_sum += Float.floatToIntBits(f1) + i7;
    }

    public static void vMeth() {

        int i4=14, i5=50791, i6=504, i18=-244, i19=63937, i20=-9;
        double d1=0.76380;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -123.710F);
        FuzzerUtils.init(lArr, -6212240921727440800L);

        i4 = (int)(((++i4) - (-346 - (i4 >>> i4))) + (Test.byFld + (--d1)));
        for (i5 = 1; 127 > i5; ++i5) {
            i6 += i5;
        }
        vMeth1(-25.414F);
        Test.instanceCount = Test.instanceCount;
        for (i18 = 3; i18 < 228; ++i18) {
            boolean b1=false;
            switch ((i18 * 5) + 25) {
            case 121:
                i19 += (i18 | i19);
                break;
            case 238:
                i4 -= i5;
            case 244:
                i20 = 1;
                while (++i20 < 7) {
                    Test.fFld1 += 50;
                    Test.dArrFld = FuzzerUtils.double1array(N, (double)0.118098);
                }
                Test.instanceCount *= Test.instanceCount;
                if (b1) continue;
                break;
            case 359:
                Test.byFld = (byte)Test.fFld1;
                break;
            case 337:
                i19 += (int)Test.fFld1;
            case 305:
                Test.iArrFld1[i18] -= (int)Test.instanceCount;
                break;
            case 342:
                Test.instanceCount -= -955230646L;
                break;
            case 77:
                i6 = (int)Test.instanceCount;
                break;
            case 274:
                i4 += i20;
                break;
            case 250:
                Test.iArrFld1 = Test.iArrFld1;
                break;
            case 158:
                Test.iArrFld1[i18 - 1] = (int)d1;
                break;
            case 360:
                i4 >>>= i5;
            case 273:
                i19 -= (int)Test.instanceCount;
                break;
            case 289:
                i19 = (int)d1;
                break;
            case 297:
                Test.instanceCount += (long)Test.fFld1;
                break;
            case 228:
                i4 >>= i19;
                break;
            case 247:
                Test.instanceCount *= i19;
                break;
            case 56:
                d1 += i19;
                break;
            case 236:
                Test.fFld1 -= Test.sFld;
                break;
            case 286:
                i4 += (((i18 * Test.fFld1) + i6) - Test.fFld1);
                break;
            case 169:
                fArr = FuzzerUtils.float1array(N, (float)15.216F);
                break;
            case 222:
                lArr[i18] *= i20;
            case 109:
                fArr[i18 - 1] *= Test.instanceCount;
            case 153:
            case 223:
                i19 |= i19;
            case 190:
                i4 ^= (int)Test.instanceCount;
                break;
            case 298:
                i4 = (int)1.127F;
                break;
            case 358:
                i6 += i20;
                break;
            case 40:
                Test.instanceCount = Test.instanceCount;
                break;
            case 39:
                i19 += (-6 + (i18 * i18));
                break;
            case 237:
                lArr[i18] = i20;
                break;
            case 316:
                Test.byFld += (byte)(i18 - i20);
                break;
            case 37:
                Test.iArrFld1[i18 + 1] <<= i6;
            case 210:
                Test.instanceCount <<= 79;
                break;
            case 255:
                i19 <<= i19;
            case 348:
                Test.iArrFld1[i18 + 1] >>= i5;
                break;
            case 328:
                i19 += (i18 | (long)Test.fFld1);
                break;
            case 230:
                i4 = -7;
                break;
            case 69:
                Test.fFld1 += (i18 + i20);
            case 243:
                Test.iArrFld1[i18 - 1] = i5;
                break;
            case 317:
                Test.instanceCount += Test.instanceCount;
                break;
            case 41:
                i6 += i20;
            case 319:
                lArr[i18] = i5;
            case 325:
                i4 = (int)Test.instanceCount;
                break;
            case 66:
            case 33:
                i6 -= i18;
                break;
            case 338:
                i19 += (int)(-2.329F + (i18 * i18));
                break;
            case 322:
                Test.instanceCount += i18;
                break;
            case 198:
            case 354:
                Test.instanceCount *= (long)d1;
                break;
            case 62:
                if (b1) continue;
            case 217:
                i4 = i5;
                break;
            case 309:
                Test.iArrFld1[i18 + 1] -= (int)Test.instanceCount;
            case 157:
                i6 += (int)d1;
                break;
            case 94:
                Test.iArrFld1[i18] += (int)Test.instanceCount;
            case 122:
                if (false) break;
                break;
            case 152:
            case 302:
                i6 += (int)d1;
                break;
            case 364:
                i4 |= i5;
                break;
            case 268:
                i19 = -184;
                break;
            case 48:
                Test.instanceCount -= i4;
                break;
            case 326:
                i19 >>= (int)179L;
                break;
            case 52:
                i4 <<= i5;
            case 263:
                i19 = i20;
                break;
            case 304:
                Test.iArrFld1[i18 + 1] = i20;
                break;
            case 259:
                lArr[i18] = i6;
                break;
            case 130:
                i4 = i4;
                break;
            case 102:
            case 218:
                i4 = (int)Test.instanceCount;
                break;
            case 246:
                Test.instanceCount = Test.instanceCount;
            default:
                i19 = i18;
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d1) + i5 + i6 + i18 + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=247, i1=129, i2=0, i3=-34317, i21=-14, i22=-32718, i23=-7;
        float f=81.926F;
        double d=12.113933;
        boolean b2=false;

        Test.instanceCount <<= (long)((iArrFld[(i >>> 1) % N]--) - fFld);
        for (f = 19; f < 374; ++f) {
            i2 = 1;
            while ((i2 += 3) < 71) {
                byte by=-12;
                if (((by + (-46075 + (i3 - d))) + (i--)) <= (((Test.instanceCount * i1) * iArrFld[i2 - 1]) - ((fFld +
                    i1) - (i3++)))) continue;
                iArrFld[i2 + 1] += iArrFld[i2];
                vMeth();
                fFld -= i1;
            }
            if (b2) continue;
            i1 = i2;
            i21 = 1;
            while (++i21 < 71) {
                Test.instanceCount = i2;
                b2 = b2;
                Test.fFld1 = Test.instanceCount;
                i22 = 1;
                while (++i22 < 1) {
                    iArrFld[i21 - 1] -= Test.sFld;
                    Test.fFld1 -= i;
                    d = f;
                    Test.instanceCount = i;
                }
                fFld += (i21 - fFld);
                i3 += (i21 * i21);
                i1 = i22;
                i23 = 1;
                do {
                    if (b2) {
                        iArrFld[(int)(f)] = (int)Test.instanceCount;
                    } else if (b2) {
                        switch ((int)((f % 10) + 67)) {
                        case 67:
                            if (b2) break;
                            Test.instanceCount *= (long)d;
                            i1 += (i23 | i22);
                            break;
                        case 68:
                            Test.fFld1 += (i23 * i23);
                            i1 >>= i;
                            break;
                        case 69:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 70:
                            i -= i21;
                        case 71:
                            Test.instanceCount += (i23 * i23);
                        case 72:
                            i3 *= i;
                            break;
                        case 73:
                            d += 4066903920300009990L;
                            break;
                        case 74:
                            i3 = (int)Test.instanceCount;
                        case 75:
                            i += (int)(-6595381016945819675L + (i23 * i23));
                        case 76:
                            Test.iArrFld1[i23 - 1] = (int)-103.38137;
                            break;
                        }
                    } else {
                        i1 = (int)d;
                    }
                } while (++i23 < 1);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
