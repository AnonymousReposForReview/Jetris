package tests.javafuzzer1124;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:54:55 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4667986951603724349L;
    public static short sFld=-31516;
    public static boolean bFld=false;
    public static byte byFld=116;
    public static double dFld=20.110744;
    public static float fArrFld[]=new float[N];
    public static byte byArrFld[]=new byte[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.942F);
        FuzzerUtils.init(Test.byArrFld, (byte)23);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f2) {

        int i8=229, i9=-1, i10=-2, i11=-66, i12=-6, i13=-9, i14=-54642, i15=36825, i16=-21287, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 95.265F);
        FuzzerUtils.init(iArr1, -154);

        for (i8 = 4; 228 > i8; ++i8) {
            f2 -= Test.instanceCount;
            i9 += (125 + (i8 * i8));
            for (i10 = 7; 1 < i10; --i10) {
                i12 = 1;
                do {
                    i11 <<= i12;
                    i11 = (int)Test.instanceCount;
                    Test.instanceCount += Test.instanceCount;
                } while (++i12 < 2);
            }
            for (i13 = 1; i13 < 7; ++i13) {
                double d1=0.31469;
                i11 = i14;
                i9 -= (int)d1;
                fArr[i8] = Test.sFld;
                for (i15 = 1; i15 < 2; i15++) {
                    iArr1 = iArr1;
                }
                if (true) break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i5, float f1) {

        int i6=-14, i7=-7, i17=-144, i18=6, i19=-94, i20=-12, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1479171144L);
        FuzzerUtils.init(iArr2, 6);

        for (i6 = 1; 219 > i6; i6++) {
            if (Test.bFld) {
                vMeth1(58.761F);
                for (i17 = 1; i17 < 7; i17++) {
                    lArr[i17 - 1] ^= Test.instanceCount;
                    if (i18 != 0) {
                        vMeth_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i17 + i18 + i19 + i20 +
                            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
                        return;
                    }
                    for (i19 = 1; i19 < 2; i19++) {
                        i7 = i17;
                        f1 -= i19;
                        f1 *= f1;
                        i7 += (i19 * i19);
                        if (i5 != 0) {
                            vMeth_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i17 + i18 + i19 + i20 +
                                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                    }
                    iArr2[i6 + 1] += (int)Test.instanceCount;
                    i5 -= i7;
                }
            } else if (Test.bFld) {
                lArr[i6 + 1] = i19;
            } else {
                i5 = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i5 + Float.floatToIntBits(f1) + i6 + i7 + i17 + i18 + i19 + i20 + FuzzerUtils.checkSum(lArr)
            + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth() {

        float f=-86.758F, f3=14.820F, fArr1[]=new float[N];
        int i2=32893, i3=-10, i4=-62581, i21=-202;
        double d=59.22952;
        long l=-2678078339L;

        FuzzerUtils.init(fArr1, 23.385F);

        f = 1;
        do {
            for (i2 = 1; i2 < 7; i2++) {
                for (d = 1; d < 2; ++d) {
                    i4 += (int)d;
                    vMeth(i3, f);
                    i3 = i2;
                    Test.instanceCount *= i2;
                    Test.sFld = (short)i21;
                    f3 = i21;
                }
                Test.instanceCount -= Test.instanceCount;
                i4 += i2;
                f3 = 0L;
                fArr1[(int)(f)] -= i21;
                Test.byFld = (byte)i21;
                i3 += (i2 ^ l);
            }
        } while (++f < 248);
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + Double.doubleToLongBits(d) + i4 + i21 +
            Float.floatToIntBits(f3) + l + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=124, i1=12, i22=1, i23=-8, i24=108, i25=1, i26=-45522, i27=13, i28=12, i29=-14, i30=10, i31=175,
            iArr[][]=new int[N][N];
        float f4=1.204F;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, 54196);
        FuzzerUtils.init(lArr1, -1564912942682327962L);

        for (i = 10; i < 257; i++) {
            iArr[i - 1][i - 1] = iMeth();
        }
        for (i22 = 2; i22 < 175; ++i22) {
            Test.instanceCount += i22;
        }
        i23 >>= i23;
        for (i24 = 4; 320 > i24; i24++) {
            for (i26 = 5; i26 < 80; i26++) {
                if (true) {
                    for (i28 = 2; i28 > 1; i28--) {
                        switch ((i26 % 6) + 91) {
                        case 91:
                            Test.byFld += (byte)(i28 - i26);
                            Test.instanceCount = i;
                            Test.dFld = 13;
                            Test.dFld += i30;
                            break;
                        case 92:
                            Test.instanceCount += (i28 ^ Test.instanceCount);
                            Test.fArrFld[i26 - 1] -= -8966291462742543967L;
                            Test.fArrFld[(43876 >>> 1) % N] += f4;
                            break;
                        case 93:
                            i30 = i27;
                        case 94:
                            i25 = i26;
                            break;
                        case 95:
                            Test.byArrFld[i24 + 1] = (byte)i27;
                            Test.instanceCount -= Test.instanceCount;
                            bArrFld[i26 + 1] = Test.bFld;
                            break;
                        case 96:
                            switch (((i24 % 9) * 5) + 2) {
                            case 20:
                                i25 += i29;
                                Test.instanceCount >>= i1;
                                break;
                            case 43:
                                f4 += -28590;
                                f4 = i25;
                                if (Test.bFld) continue;
                                break;
                            case 15:
                                i31 += 90;
                                lArr1[i24][i26 - 1] /= (Test.instanceCount | 1);
                                break;
                            case 34:
                                i29 *= (int)Test.instanceCount;
                            case 12:
                                i23 -= (int)f4;
                                break;
                            case 39:
                                i29 *= 2;
                                break;
                            case 28:
                                i25 += (int)Test.dFld;
                            case 18:
                                iArr[i24 + 1][i24] = i25;
                            case 4:
                                i23 += i28;
                                break;
                            default:
                                i30 = i31;
                            }
                        default:
                            i25 += i30;
                        }
                    }
                } else if (Test.bFld) {
                    i31 += (int)7074929861337557517L;
                } else if (Test.bFld) {
                    i25 <<= (int)Test.instanceCount;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
