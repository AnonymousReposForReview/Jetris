package tests.javafuzzer2311;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 12:02:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1565232452L;
    public static byte byFld=73;
    public static volatile int iFld=-46;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 70);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5) {

        float f4=73.618F;
        int i6=5, i7=222, i8=35, i9=53627, iArr1[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, 2);

        Test.instanceCount -= (long)f4;
        i5 >>= Test.byFld;
        iArr1 = iArr1;
        for (i6 = 17; i6 < 322; ++i6) {
            i7 = i6;
            for (i8 = 1; i8 < 5; ++i8) {
                Test.instanceCount += i7;
                i5 >>= i5;
                i7 -= 1596;
                i7 = 11;
                if (b) {
                    iArr1[i8] += (int)Test.instanceCount;
                    Test.instanceCount |= i7;
                    i9 = i6;
                }
                i5 = i5;
            }
        }
        vMeth1_check_sum += i5 + Float.floatToIntBits(f4) + i6 + i7 + i8 + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(long l, long l1, int i4) {

        int i10=213, i11=10, i12=250, i13=-102;
        float f5=-2.560F;
        boolean b1=true;

        if (b1) {
            vMeth1(i4);
        } else if (b1) {
            for (i10 = 15; i10 < 335; i10 += 3) {
                i4 += (int)Test.instanceCount;
                i4 *= i4;
                i11 += i10;
                i12 = 1;
                while (++i12 < 15) {
                    for (f5 = 1; f5 < 1; ++f5) {
                        i13 += 7;
                    }
                    i4 += 6;
                    i13 = (int)l1;
                    i4 += (i12 + i10);
                }
                i13 ^= 12051;
                i11 = i10;
                i11 = 13680;
            }
        } else {
            i11 *= (int)4189721022366828381L;
        }
        vMeth_check_sum += l + l1 + i4 + i10 + i11 + i12 + Float.floatToIntBits(f5) + i13 + (b1 ? 1 : 0);
    }

    public static long lMeth(float f2, int i3, float f3) {

        int i14=-136, i15=3, i16=-47149, i17=-251, i18=-10, i19=-92;
        float f6=0.64F;
        short s=-19428;

        vMeth(Test.instanceCount, Test.instanceCount, i3);
        i3 -= (int)1.45825;
        Test.iArrFld[(-241 >>> 1) % N][(i3 >>> 1) % N] = (int)Test.instanceCount;
        for (i14 = 6; i14 < 363; i14++) {
            for (i16 = 1; 5 > i16; i16++) {
                switch ((i14 % 2) + 2) {
                case 2:
                    f6 = 247;
                    i15 *= s;
                case 3:
                }
                for (i18 = 1; i18 < 2; i18++) {
                    i17 += i18;
                    i3 += (((i18 * i18) + Test.instanceCount) - i17);
                    i15 += (i18 * f3);
                    Test.iArrFld[i14 + 1][i16 + 1] >>= i18;
                    Test.instanceCount >>= i15;
                    f2 += s;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f2) + i3 + Float.floatToIntBits(f3) + i14 + i15 + i16 + i17 +
            Float.floatToIntBits(f6) + s + i18 + i19;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=48, i1=-51202, i2=65112, i20=12, i21=14, i22=-217, i23=212, iArr[]=new int[N];
        float f=-127.276F, f1=87.177F;
        byte by=54;
        short s1=13222;
        boolean b2=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -5);
        FuzzerUtils.init(dArr, -85.597);

        for (i = 11; 208 > i; i++) {
            for (f = 6; f < 127; ++f) {
                double d=0.5326;
                d *= ((i * (f1++)) + ((i2 * by) + (-26690 - (i - 21))));
                iArr[i] += (int)lMeth(f1, 12, f1);
                for (i20 = 1; i20 < 2; i20++) {
                    i21 = 64446;
                    i2 += (int)-7961169865642254652L;
                    i21 = (int)d;
                    s1 = (short)Test.instanceCount;
                    f1 += i;
                    i2 += (i20 | i2);
                }
                for (i22 = 1; i22 < 2; i22++) {
                    i23 = i;
                    i23 += i;
                    Test.iFld >>= i20;
                    d = i20;
                    i23 += (((i22 * i21) + i1) - i23);
                    Test.instanceCount = 6;
                    Test.instanceCount *= Test.instanceCount;
                }
                dArr[i + 1] = i;
                if (false) {
                    i23 += (int)f;
                    try {
                        Test.iArrFld[i + 1][(int)(f - 1)] = (i20 / -30508);
                        i2 = (i20 % Test.iFld);
                        i1 = (i20 / i22);
                    } catch (ArithmeticException a_e) {}
                    by += (byte)(45175 + (f * f));
                    d -= 218L;
                } else {
                    Test.instanceCount = i2;
                    if (b2) continue;
                    d = i1;
                }
                iArr[i - 1] = i2;
                f1 += (f * i22);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
