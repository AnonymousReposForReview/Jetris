package tests.javafuzzer2112;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:09:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static float fFld=72.836F;
    public static double dFld=0.86382;
    public int iFld=135;
    public short sFld=-25846;
    public byte byFld=-41;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i3, int i4, long l) {

        int i5=88, i6=6, i7=-8, i8=12, i9=239, i10=254, i11=13, i12=-177;
        float f=51.705F;
        short s=15286;

        for (i5 = 12; i5 < 279; ++i5) {
            f *= i5;
            i6 -= -11;
            for (i7 = 6; i7 > 1; i7--) {
                Test.instanceCount <<= i8;
                i6 -= (int)Test.instanceCount;
                i3 *= i4;
                Test.instanceCount += i8;
                for (i9 = 1; i9 < 2; i9++) {
                    i3 *= -18926;
                    i3 = i9;
                }
            }
            for (i11 = 1; i11 < 6; i11++) {
                Test.fFld = (float)Test.dFld;
                s = (short)i4;
            }
        }
        i6 -= (int)Test.fFld;
        long meth_res = i3 + i4 + l + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + i11 + i12 + s;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i2) {

        boolean b=true;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 6);

        i2 -= (int)lMeth(-2, -9, Test.instanceCount);
        iArr = iArr;
        b = false;
        vMeth1_check_sum += i2 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth() {


        vMeth1(iFld);
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=143, i1=1, i13=-6969, i14=-12488, iArr1[]=new int[N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, -6);

        i = 1;
        do {
            i1 = 1;
            do {
                vMeth();
                for (i13 = 1; 4 > i13; ++i13) {
                    switch (((2567 >>> 1) % 7) + 46) {
                    case 46:
                        iFld += (((i13 * iFld) + i1) - Test.instanceCount);
                        break;
                    case 47:
                        i14 += i;
                        break;
                    case 48:
                        if (b1) break;
                        if (false) {
                            i14 = i1;
                        } else if (true) {
                            Test.instanceCount += (((i13 * i13) + i) - i13);
                        } else if (b1) {
                            sFld += (short)i1;
                            iArr1[i13] >>>= i14;
                            if (b1) break;
                            if (b1) {
                                Test.instanceCount %= -14;
                            } else {
                                Test.instanceCount *= i1;
                                iFld = i14;
                                if (b1) {
                                    iArr1[i1 + 1] |= (int)-1073633354L;
                                    iArr1[i13] += i;
                                } else if (b1) {
                                    i14 += (int)(-18L + (i13 * i13));
                                    iFld += i13;
                                    i14 &= iFld;
                                    switch ((((i13 >>> 1) % 1) * 5) + 48) {
                                    case 50:
                                        i14 += i13;
                                        iFld = i1;
                                    default:
                                        Test.dFld += iFld;
                                    }
                                }
                                iArr1[i + 1] = iFld;
                            }
                        } else {
                            i14 >>= -133;
                        }
                        break;
                    case 49:
                        b1 = b1;
                        break;
                    case 50:
                        byFld = (byte)sFld;
                        break;
                    case 51:
                        iFld /= (int)(i | 1);
                        break;
                    case 52:
                        try {
                            i14 = (iFld % -54583);
                            i14 = (iFld % -58622);
                            i14 = (i13 / i13);
                        } catch (ArithmeticException a_e) {}
                        break;
                    }
                }
            } while ((i1 += 3) < 131);
        } while (++i < 192);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
