package tests.javafuzzer1939;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:17:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5129029942531661326L;
    public static float fFld=-65.882F;
    public static volatile byte byFld=-103;
    public static short sFld=7240;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 1.146F);
        FuzzerUtils.init(Test.iArrFld, 94);
        FuzzerUtils.init(Test.iArrFld1, 224);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        double d3=39.33812, dArr[]=new double[N];
        int i6=-3, i7=-9, i8=126, i9=0, i10=-20523, i11=-2252, i12=-149, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -169);
        FuzzerUtils.init(dArr, 1.40717);

        d3 = i6;
        Test.instanceCount <<= i6;
        i7 = 1;
        do {
            i6 = i7;
            iArr1 = iArr1;
        } while (++i7 < 345);
        i6 += -5;
        for (i8 = 8; 345 > i8; ++i8) {
            i10 = 1;
            while (++i10 < 5) {
                Test.instanceCount += i10;
                i9 = (int)Test.fFld;
                for (i11 = i8; i11 < 1; ++i11) {
                    Test.fArrFld = Test.fArrFld;
                }
                dArr[i10 - 1] -= i9;
                i12 <<= i10;
                Test.instanceCount %= (i12 | 1);
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d3) + i6 + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(double d1, double d2, int i3) {

        int i4=50980, i5=-2468, i13=21627, i14=-227, i15=-114, i16=25, i17=21169;

        for (i4 = 10; i4 < 367; i4++) {
            vMeth2();
            i3 = Test.byFld;
            for (i13 = i4; i13 < 5; i13++) {
                Test.iArrFld = FuzzerUtils.int1array(N, (int)48005);
                i5 -= i3;
                i5 += i13;
                i14 = i5;
            }
            d1 = Test.instanceCount;
            Test.instanceCount += (((i4 * Test.fFld) + Test.instanceCount) - i13);
            switch (((i4 % 2) * 5) + 95) {
            case 99:
                for (i15 = 5; i15 > 1; i15 -= 3) {
                    i17 = 1;
                    do {
                        d1 += Test.instanceCount;
                        i5 += (((i17 * i5) + i3) - i3);
                    } while (++i17 < 5);
                }
                break;
            case 96:
                Test.fFld -= i13;
                break;
            default:
                Test.instanceCount += i5;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i3 + i4 + i5 + i13 + i14 + i15
            + i16 + i17;
    }

    public static void vMeth(float f) {

        double d=-113.116559;
        int i2=230, i18=13, i19=30125, i20=-35754, i21=-6450, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 156);
        FuzzerUtils.init(lArr, -14L);

        Test.instanceCount *= (long)(--d);
        iArr[(i2 >>> 1) % N] = i2;
        vMeth1(41.35080, d, 128);
        switch ((((i2 >>> 1) % 10) * 5) + 5) {
        case 15:
            Test.fArrFld[(i2 >>> 1) % N] /= (i2 | 1);
            i2 <<= i2;
            for (i18 = 4; i18 < 239; ++i18) {
                i2 = 71;
                for (i20 = 1; i20 < 7; i20++) {
                    f += (i20 - i20);
                    i19 = Test.sFld;
                }
                i2 = i21;
            }
            Test.instanceCount = i2;
            break;
        case 40:
            i19 += (int)Test.instanceCount;
            break;
        case 7:
            Test.instanceCount >>= -8818213083690396789L;
            break;
        case 25:
        case 26:
            Test.instanceCount -= i20;
        case 12:
            Test.iArrFld = Test.iArrFld1;
            break;
        case 50:
            lArr[(-64775 >>> 1) % N] = Test.sFld;
        case 34:
        case 49:
            Test.instanceCount = (long)d;
            break;
        case 29:
            i19 >>= i18;
            break;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i2 + i18 + i19 + i20 + i21 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=100, i1=32, i22=-14, i23=-8, i24=-55, i25=16788, i26=-34503, i27=219, i28=-3, i29=-7, i30=47030,
            i31=18171, i32=-82, i33=36851;
        long l=-8785908425491320955L, lArr1[]=new long[N];
        float f1=80.61F;
        double d4=-75.35376;

        FuzzerUtils.init(lArr1, -880477754L);

        for (i = 8; i < 157; ++i) {
            vMeth(Test.fFld);
            i1 += (int)Test.instanceCount;
            for (i22 = 4; i22 < 168; i22++) {
                i23 += i;
                for (l = 1; 2 > l; l++) {
                    f1 /= ((long)(f1) | 1);
                    i1 += (int)(((l * i) + i23) - i25);
                    i1 += (int)(l * l);
                    i25 |= i;
                    i1 -= Test.sFld;
                    i25 = i24;
                }
                i1 = (int)-8439920944578573549L;
            }
            Test.iArrFld[i + 1] -= (int)f1;
            i23 += (i * i);
        }
        for (i26 = 7; i26 < 359; i26++) {
            i23 += i1;
        }
        i28 = 1;
        while (++i28 < 164) {
            for (i29 = 9; i29 < 153; ++i29) {
                Test.instanceCount = i23;
                Test.instanceCount &= l;
                Test.fFld += (i29 * i29);
                i25 = i;
            }
            for (d4 = 7; 153 > d4; ++d4) {
                i31 -= i30;
                lArr1[i28 + 1] -= 29;
                Test.instanceCount += (long)(d4 * d4);
            }
            for (i32 = 153; 4 < i32; i32--) {
                i23 += (63328 + (i32 * i32));
                Test.iArrFld1[i28 - 1] = (int)Test.instanceCount;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
