package tests.javafuzzer2980;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:26:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static double dFld=1.74221;
    public static float fFld=39.323F;
    public static byte byFld=108;
    public static short sFld=21432;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i5, long l1) {

        int i6=6, i7=-1379, i8=-10, i9=228, i10=-4, i11=-122, i12=-41, iArr1[]=new int[N];
        boolean b=true;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, -119.527F);
        FuzzerUtils.init(iArr1, -182);
        FuzzerUtils.init(lArr, 138L);

        for (i6 = 18; i6 < 366; ++i6) {
            l1 = 30584L;
            Test.fFld *= (float)Test.dFld;
        }
        fArr[(-1 >>> 1) % N] = i7;
        i8 = 130;
        while (--i8 > 0) {
            i7 = (int)Test.dFld;
            i7 += (166 + (i8 * i8));
            for (i9 = 12; i9 > 1; --i9) {
                iArr1[i8] = i5;
                lArr[i9 - 1] += i8;
                for (i11 = 1; i11 < 2; ++i11) {
                    b = b;
                    Test.fFld += (float)Test.dFld;
                    Test.fFld *= 1;
                }
                if (b) continue;
            }
        }
        long meth_res = i5 + l1 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(long l) {

        int i4=-50927, i13=63780, i14=185, i15=18009, i16=62212, i17=98, i18=-5, i19=-4, i20=52037, iArr[]=new int[N];
        double d=-44.104630, dArr[][]=new double[N][N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(dArr, 2.85450);
        FuzzerUtils.init(iArr, -24);
        FuzzerUtils.init(fArr1, 0.549F);

        Test.dFld = (((i4 - i4) * dArr[(-2 >>> 1) % N][(i4 >>> 1) % N]) + (--i4));
        iArr[(i4 >>> 1) % N] &= (int)lMeth(i4, l);
        for (i13 = 8; i13 < 138; i13 += 2) {
            d = 1;
            do {
                i4 *= i13;
                for (i15 = 1; 1 > i15; i15++) {
                    Test.byFld %= (byte)(i16 | 1);
                }
                fArr1[i13] = i16;
                Test.dFld -= i16;
                l -= i13;
                for (i17 = 1; i17 < 1; ++i17) {
                    i14 = (int)l;
                }
            } while (++d < 24);
            for (i19 = 24; i19 > 1; i19 -= 3) {
                try {
                    i16 = (59925 / i17);
                    iArr[i19] = (23855 / i18);
                    i16 = (i13 % i13);
                } catch (ArithmeticException a_e) {}
                Test.dFld = 83;
            }
        }
        vMeth1_check_sum += l + i4 + i13 + i14 + Double.doubleToLongBits(d) + i15 + i16 + i17 + i18 + i19 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth() {

        int i=10, i1=42046, i2=-30286, i3=-207, i21=35850, i22=-5161, i23=12, i24=0, iArr2[]=new int[N];
        short s=-29247, sArr[]=new short[N];
        boolean b1=false;

        FuzzerUtils.init(sArr, (short)-7594);
        FuzzerUtils.init(iArr2, -12);

        sArr[(i >>> 1) % N] += (short)i1;
        for (i2 = 5; i2 < 211; ++i2) {
            vMeth1(Test.instanceCount);
            s = (short)106.82303;
            if (b1) continue;
            switch (((i2 % 1) * 5) + 29) {
            case 34:
                Test.instanceCount += i1;
                i1 -= (int)Test.dFld;
                break;
            default:
                switch (((i2 >>> 1) % 2) + 24) {
                case 24:
                case 25:
                    iArr2[i2 + 1] = (int)Test.dFld;
                    Test.fFld += i2;
                    for (i21 = 1; i21 < 8; i21++) {
                        for (i23 = 1; 2 > i23; i23++) {
                            Test.instanceCount *= i;
                            if (i23 != 0) {
                                vMeth_check_sum += i + i1 + i2 + i3 + s + (b1 ? 1 : 0) + i21 + i22 + i23 + i24 +
                                    FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2);
                                return;
                            }
                        }
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + s + (b1 ? 1 : 0) + i21 + i22 + i23 + i24 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i25=22149, i26=42484, i27=39739, i28=-133, i29=-92, i30=95, i31=44035, i32=-196, i33=-36283;
        boolean b2=true;

        vMeth();
        for (i25 = 1; i25 < 197; i25++) {
            i26 += (int)Test.fFld;
            Test.iArrFld[i25][i25] >>= (int)Test.instanceCount;
            for (i27 = 128; i27 > 7; i27 -= 3) {
                for (i29 = i27; i29 < 4; ++i29) {
                    i30 = i25;
                    i28 <<= i30;
                    i28 += i25;
                    try {
                        i30 = (i27 % -237);
                        i30 = (Test.iArrFld[i27 - 1][i25 + 1] / i25);
                        i28 = (i27 % i29);
                    } catch (ArithmeticException a_e) {}
                    i26 += (i29 * i28);
                    try {
                        i30 = (i30 / i25);
                        i26 = (-685255047 % i29);
                        i28 = (-797385631 % i30);
                    } catch (ArithmeticException a_e) {}
                    switch ((i25 % 4) + 55) {
                    case 55:
                        Test.byFld >>= (byte)i25;
                        i30 = i28;
                        i30 *= i28;
                    case 56:
                        i28 += (int)102L;
                    case 57:
                        Test.iArrFld[i25 + 1][i27] |= -3;
                        Test.instanceCount += (((i29 * i25) + i27) - i28);
                        Test.iArrFld[i27 + 1][i27] >>= i30;
                        Test.instanceCount ^= i28;
                        break;
                    case 58:
                        i30 += (i29 * i29);
                        i28 = -47414;
                        Test.fFld = i29;
                        if (b2) break;
                        break;
                    }
                }
            }
            for (i31 = 7; i31 < 128; ++i31) {
                Test.sFld *= (short)i26;
                i33 = 1;
                while (++i33 < 2) {
                    i30 += (i33 + i28);
                    Test.instanceCount += i33;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
