package tests.javafuzzer2384;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:58:54 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-248L;
    public static int iFld=10;
    public float fFld=-69.531F;
    public volatile double dFld=-1.86078;
    public static byte byFld=-8;
    public int iFld1=205;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth1(int i1, int i2) {


        i1 &= -12;
        vMeth1_check_sum += i1 + i2;
    }

    public static long lMeth(int i7) {

        int i8=87;
        float f1=-95.376F, fArr[]=new float[N];
        double d=-7.47799;
        long l1=3927451005853983215L, lArr[]=new long[N];

        FuzzerUtils.init(fArr, 117.463F);
        FuzzerUtils.init(lArr, 7675763829619714493L);

        i7 *= i7;
        i8 = 1;
        while (++i8 < 256) {
            i7 += (i8 ^ i8);
            f1 = i8;
            fArr[i8] /= (i8 | 1);
            d = l1;
            lArr[i8] >>>= i7;
            i7 += (i8 * i8);
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + l1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i3, int i4, long l) {

        int i5=94, i6=6, i11=63033, i12=-38852, iArr1[]=new int[N];
        boolean b=true;
        float f2=0.179F;

        FuzzerUtils.init(iArr1, 5);

        for (i5 = 6; i5 < 196; i5++) {
            int i10=-45154;
            i4 <<= (int)(-(lMeth(i6) + 7L));
            i10 += -54;
            i11 = 1;
            while ((i11 += 3) < 8) {
                i12 = 1;
                while ((i12 += 2) < 4) {
                    double d1=-1.90357;
                    b = b;
                    i10 += (int)f2;
                    i6 += (i12 * i12);
                    i6 >>>= -27;
                    d1 %= (i6 | 1);
                    l += i10;
                    i10 = (int)f2;
                    i3 += (int)f2;
                    i6 >>= (int)l;
                }
                l <<= i4;
            }
        }
        long meth_res = i3 + i4 + l + i5 + i6 + i11 + i12 + (b ? 1 : 0) + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        float f=0.102F;
        long l2=-41146L;
        int i13=14, i14=2, i15=-69, iArr[]=new int[N];
        short s=-16924;
        double d2=-125.193;
        boolean b1=true;

        FuzzerUtils.init(iArr, -2);

        i = (int)((--i) + (f--));
        i <<= (int)((5 - (++iArr[(i >>> 1) % N])) - ((i * i) * (Test.instanceCount * -102L)));
        vMeth1(i, (iMeth(i, i, Test.instanceCount) + i) + Test.iFld);
        for (l2 = 12; l2 < 211; l2++) {
            Test.instanceCount += l2;
            Test.iFld += (int)l2;
            Test.instanceCount <<= -53322;
        }
        if (b1) {
            for (i14 = 268; i14 > 1; i14 -= 2) {
                s = (short)9082720169683046473L;
                iArr = FuzzerUtils.int1array(N, (int)-61173);
                switch (((14 >>> 1) % 9) + 42) {
                case 42:
                    i15 = i13;
                    break;
                case 43:
                    Test.instanceCount <<= l2;
                    iArr[i14 - 1] -= (int)f;
                    break;
                case 44:
                    Test.instanceCount = (long)1.72044;
                    break;
                case 45:
                case 46:
                    Test.instanceCount -= i13;
                    break;
                case 47:
                    i ^= i14;
                case 48:
                    i13 += (((i14 * Test.iFld) + i15) - i13);
                    break;
                case 49:
                    f += (((i14 * i13) + s) - l2);
                    break;
                case 50:
                    iArr[i14 - 1] = Test.iFld;
                    break;
                default:
                    i15 *= (int)d2;
                }
            }
        } else if (true) {
            i15 ^= (int)l2;
            vMeth_check_sum += i + Float.floatToIntBits(f) + l2 + i13 + i14 + i15 + s + Double.doubleToLongBits(d2) +
                (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
            return;
        } else {
            f = -9;
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + l2 + i13 + i14 + i15 + s + Double.doubleToLongBits(d2) + (b1 ?
            1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=7, i17=205, i18=-13, i19=182, i20=148, i21=-97, i22=126, i23=5, i24=-14, i25=104, iArr2[]=new int[N];
        long l3=-1905774173690606200L, l4=-3L;
        boolean b2=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -8996);
        FuzzerUtils.init(bArr, false);

        vMeth(5);
        fFld = Test.iFld;
        iArr2[(Test.iFld >>> 1) % N] *= (int)dFld;
        iArr2[(-5 >>> 1) % N] = Test.byFld;
        for (i16 = 282; i16 > 5; i16 -= 2) {
            i17 -= (int)fFld;
            l3 = 1;
            do {
                if (b2) break;
                i18 = 1;
                while (++i18 < 1) {
                    Test.instanceCount = 48764;
                }
                Test.instanceCount += -157;
                i17 = (int)Test.instanceCount;
            } while (++l3 < 182);
            i17 += (((i16 * l4) + Test.iFld) - Test.instanceCount);
        }
        i17 *= (int)fFld;
        Test.iFld += 9;
        for (i19 = 6; 283 > i19; i19++) {
            fFld += (i19 * i20);
        }
        i20 -= 1366;
        i17 += i18;
        Test.iFld = -59;
        for (i21 = 217; i21 > 12; i21 -= 3) {
            i20 /= (int)(i19 | 1);
        }
        switch ((((i17 >>> 1) % 3) * 5) + 59) {
        case 72:
            i20 = i17;
            for (i23 = 2; 288 > i23; i23++) {
                bArr[i23 + 1] = b2;
                Test.instanceCount >>= i19;
                i17 = Test.iFld;
            }
        case 66:
            Test.iFld >>= (int)l3;
            i24 *= i25;
            break;
        case 70:
            Test.iFld += iFld1;
            break;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
