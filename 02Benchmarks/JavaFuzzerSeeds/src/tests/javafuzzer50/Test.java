package tests.javafuzzer50;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:37:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=19L;
    public static short sFld=7516;
    public static float fFld=39.587F;
    public boolean bFld=true;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.12599);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static void vMeth1() {

        int i6=-2;

        Test.sFld -= (short)(i6++);
        vMeth1_check_sum += i6;
    }

    public static short sMeth(int i15) {

        int i16=-8248, i17=-10571, i18=8668, i19=199, i20=47103, iArr2[]=new int[N];
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr1, -120.302F);
        FuzzerUtils.init(iArr2, -10);

        Test.dArrFld[(i15 >>> 1) % N] *= Test.instanceCount;
        Test.instanceCount = 8124593402922233213L;
        i16 = 1;
        do {
            for (i17 = 1; i17 < 9; i17++) {
                i15 += (i17 * i17);
                fArr1[i17 + 1][i17] += Test.fFld;
                for (i19 = 1; 2 > i19; ++i19) {
                    iArr2[i16 + 1] -= (int)Test.fFld;
                    i15 >>= i20;
                    Test.instanceCount = i20;
                    iArr2[i16 + 1] += i20;
                    i15 >>= i17;
                    iArr2[i19] = -13;
                    i20 *= (int)Test.fFld;
                    i15 = (int)Test.instanceCount;
                }
            }
        } while (++i16 < 179);
        long meth_res = i15 + i16 + i17 + i18 + i19 + i20 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(iArr2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static double dMeth(float f1) {

        int i8=-6, i9=-13, i11=8, i12=60557, i13=112, i14=-27149, iArr1[]=new int[N];
        boolean b=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -10547);
        FuzzerUtils.init(dArr, 0.121347);

        switch ((((i8 = i8) >>> 1) % 7) + 104) {
        case 104:
            i8 = (i8 |= i8);
            i9 = 1;
            do {
                i8 += (i9 * i9);
                i8 += (((i9 * i9) + i8) - i9);
            } while (++i9 < 346);
            i8 <<= (((-i9) - (i8 += i8)) - (i8 = (Test.sFld - i9)));
        case 105:
            for (int i10 : iArr1) {
                for (i11 = 1; 4 > i11; i11++) {
                    for (i13 = 1; i13 < 2; ++i13) {
                        iArr1[i11 - 1] = i10;
                        if (b) {
                            i10 = (int)(i10 - ((Test.instanceCount - 103L) + (dArr[i11]++)));
                        } else if (b) {
                            i14 -= (int)(sMeth(133) + 2.60695);
                            try {
                                i8 = (-48 / i10);
                                i14 = (32 % i8);
                                i8 = (i12 % -115);
                            } catch (ArithmeticException a_e) {}
                        } else {
                            if (b) break;
                        }
                    }
                }
            }
            break;
        case 106:
            Test.instanceCount = -60492;
            break;
        case 107:
            i8 = i11;
        case 108:
            i12 *= (int)Test.instanceCount;
            break;
        case 109:
            Test.instanceCount <<= 46;
            break;
        case 110:
            b = true;
            break;
        }
        long meth_res = Float.floatToIntBits(f1) + i8 + i9 + i11 + i12 + i13 + i14 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i, int i1) {

        int i2=-185, i3=42257, i4=10508, i5=0, i7=163, iArr[][]=new int[N][N];
        float f=-2.475F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, -37209);
        FuzzerUtils.init(fArr, 59.892F);

        for (i2 = 24; i2 < 385; i2++) {
            for (i4 = 1; 5 > i4; ++i4) {
                i += (i4 * i4);
                vMeth1();
                i1 = (((++i5) - (++i5)) * Integer.reverseBytes(i2));
                i5 = ((-17597 + Math.max(-9912, i2)) * ((101 + (-60042 + (--i))) - iArr[i4 + 1][i2]));
                f = 1;
                do {
                    Test.sFld = (short)40283;
                } while (++f < 2);
                i7 = 1;
                while (++i7 < 2) {
                    Test.fFld = (fArr[i4 - 1]--);
                    try {
                        i5 = (iArr[i2][i7 + 1] / i1);
                        i1 = (iArr[i2][i7 - 1] % i5);
                        i3 = (iArr[i4 + 1][i2 + 1] / i5);
                    } catch (ArithmeticException a_e) {}
                    i3 >>= (int)(iArr[i2 - 1][i2] - dMeth(Test.fFld));
                    i1 += i;
                    i = (int)-10L;
                    i5 = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i7 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i21=-2881, i22=5653, i23=-140, i24=154, i25=11, i26=-36553, i27=-2, i28=1, i29=-161, iArr3[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3187531477478714366L);
        FuzzerUtils.init(iArr3, 45575);

        vMeth(i21, i21);
        for (i22 = 23; i22 < 376; ++i22) {
            if (bFld) continue;
            for (i24 = i22; i24 < 71; ++i24) {
                i23 = (int)Test.instanceCount;
                Test.instanceCount += i21;
                Test.instanceCount = i21;
                for (i26 = i22; i26 < 1; i26++) {
                    bFld = bFld;
                    Test.fFld = i25;
                    Test.instanceCount = 46;
                    if (bFld) continue;
                }
                i21 += i23;
                for (i28 = 1; i28 < 1; ++i28) {
                    lArr[i24 - 1] = i28;
                    iArr3[i28] -= (int)Test.instanceCount;
                    switch (((i24 % 7) * 5) + 40) {
                    case 52:
                        Test.instanceCount %= (Test.sFld | 1);
                        Test.instanceCount = i23;
                        bFld = false;
                        break;
                    case 65:
                        switch ((i22 % 2) + 84) {
                        case 84:
                            Test.fFld -= 1990;
                            i29 -= i28;
                            lArr[i28] = 4164984924L;
                            if (bFld) break;
                            break;
                        case 85:
                            switch (((i27 >>> 1) % 4) + 14) {
                            case 14:
                                i21 *= (int)Test.fFld;
                                break;
                            case 15:
                                i23 -= (int)-99.101875;
                                iArr3[i24 - 1] *= i29;
                                break;
                            case 16:
                                i21 += i28;
                                break;
                            case 17:
                                Test.instanceCount >>= i21;
                            }
                            break;
                        }
                        break;
                    case 69:
                        Test.instanceCount ^= 173L;
                        break;
                    case 42:
                        i25 += i28;
                    case 49:
                        i21 = i24;
                        break;
                    case 55:
                        Test.instanceCount *= i21;
                    case 43:
                        i25 = i25;
                        break;
                    default:
                        iArr3[i28 - 1] -= i21;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  sMeth ->  sMeth dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
