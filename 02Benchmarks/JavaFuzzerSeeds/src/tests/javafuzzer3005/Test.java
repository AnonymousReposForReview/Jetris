package tests.javafuzzer3005;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:44:10 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=171L;
    public static short sFld=-23989;
    public static boolean bFld=true;
    public volatile int iFld=-47433;
    public byte byFld=18;
    public int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];

    public static long sMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8) {

        float f1=28.522F;
        int i9=-57778, i10=-8166, i11=-15485, i12=-10;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3231366682L);

        f1 -= 3L;
        Test.instanceCount = i8;
        Test.instanceCount ^= i7;
        for (i9 = 15; i9 < 241; i9++) {
            f1 += (((i9 * i10) + i7) - Test.sFld);
            f1 = i8;
            i8 *= i9;
            Test.instanceCount <<= i7;
            f1 += i8;
            if (Test.bFld) {
                Test.bFld = Test.bFld;
                for (i11 = 1; 7 > i11; i11++) {
                    i7 = i7;
                }
                i12 = -222;
                i10 = i8;
            } else {
                lArr[i9 - 1] = Test.instanceCount;
            }
        }
        vMeth1_check_sum += i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, int i6, double d) {

        float f2=34.912F;
        int i13=-6814, i14=37, i15=-129;
        long l1=2072291713321120639L;
        double d1=2.58381;

        i6 = (int)Test.instanceCount;
        i6 *= i6;
        i6 = i6;
        vMeth1(i6, i6);
        i6 ^= (int)l;
        d += f2;
        i6 = (int)l;
        i13 = 1;
        while (++i13 < 222) {
            for (l1 = 1; 7 > l1; ++l1) {
                i14 += (int)(((l1 * i6) + Test.sFld) - i6);
            }
            i6 <<= i14;
            d -= i13;
        }
        for (d1 = 7; d1 < 183; ++d1) {
            Test.sFld |= (short)196;
        }
        vMeth_check_sum += l + i6 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i13 + l1 + i14 +
            Double.doubleToLongBits(d1) + i15;
    }

    public static short sMeth(int i2, int i3, float f) {

        byte by=-115;
        int i4=-59, i5=-91, i16=-41, i17=40814, iArr[]=new int[N];
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(iArr, -35058);
        FuzzerUtils.init(lArr1, -64335L);

        i2 -= (((i2--) * (i3 - i3)) + ((i2++) - (by += (byte)i2)));
        for (i4 = 9; i4 < 271; i4++) {
            vMeth(Test.instanceCount, -56712, -1.119309);
            iArr[i4 + 1] += i3;
            i5 = i2;
            i2 *= (int)Test.instanceCount;
        }
        i2 = (int)5015516837986639152L;
        i5 *= (int)2228825890L;
        for (i16 = 9; i16 < 345; ++i16) {
            i2 <<= i5;
            lArr1[i16][i16 - 1] -= 55305;
            i5 *= 200;
            lArr1[i16 - 1][i16 - 1] -= i3;
            i2 += (i16 * i16);
        }
        i2 = i5;
        long meth_res = i2 + i3 + Float.floatToIntBits(f) + by + i4 + i5 + i16 + i17 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr1);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-1, i1=2, i18=-32448, i19=532, i20=22;
        double d2=0.35297;
        byte byArr[]=new byte[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(byArr, (byte)29);
        FuzzerUtils.init(lArr2, -22591L);

        Test.instanceCount = (i++);
        i1 = 1;
        while (++i1 < 388) {
            float f3=0.411F;
            if (Test.bFld) {
                sMeth(i, i, f3);
            } else {
                i += 21688;
                switch ((((iFld >>> 1) % 1) * 5) + 110) {
                case 111:
                    if (Test.bFld) break;
                }
            }
            f3 += i;
            for (i18 = 4; i18 < 65; i18++) {
                if (Test.bFld) {
                    i20 = 1;
                    while (++i20 < 2) {
                        byArr = byArr;
                        iArrFld[i20 - 1] >>= 253;
                        Test.instanceCount -= Test.instanceCount;
                        try {
                            i19 = (i19 % 512140432);
                            i = (i / -149);
                            i19 = (i % -38518);
                        } catch (ArithmeticException a_e) {}
                        switch ((i1 % 7) + 88) {
                        case 88:
                            i19 -= (int)-194L;
                            i19 += Test.sFld;
                            iFld -= (int)Test.instanceCount;
                            byFld -= (byte)f3;
                            break;
                        case 89:
                            try {
                                iFld = (-18 / i18);
                                i19 = (iArrFld[i20] / 3221);
                                i19 = (iArrFld[i1 + 1] % iArrFld[i18]);
                            } catch (ArithmeticException a_e) {}
                            Test.instanceCount = iFld;
                            iFld -= (int)Test.instanceCount;
                            iFld *= (int)Test.instanceCount;
                            break;
                        case 90:
                            iArrFld = iArrFld;
                            switch (((i20 % 10) * 5) + 36) {
                            case 58:
                                switch (((i18 % 9) * 5) + 45) {
                                case 63:
                                    if (Test.bFld) continue;
                                    fArrFld[i18][i1 + 1] = 56029L;
                                    break;
                                case 78:
                                    Test.instanceCount += i20;
                                    break;
                                case 90:
                                    lArr2[i20 - 1] += Test.instanceCount;
                                case 66:
                                    Test.instanceCount = (long)d2;
                                    break;
                                case 74:
                                    lArr2[i20 + 1] *= Test.sFld;
                                case 75:
                                    f3 -= Test.instanceCount;
                                    break;
                                case 80:
                                    Test.sFld += (short)(i20 * i20);
                                    break;
                                case 58:
                                    Test.instanceCount = (long)d2;
                                    break;
                                case 57:
                                    Test.instanceCount = iFld;
                                    break;
                                default:
                                    Test.sFld = (short)i1;
                                }
                                break;
                            case 44:
                                i = (int)Test.instanceCount;
                            case 74:
                                Test.sFld -= (short)f3;
                                break;
                            case 84:
                                iFld += (int)f3;
                                break;
                            case 75:
                                Test.instanceCount += (i20 - i1);
                                break;
                            case 80:
                                iFld = 46349;
                                break;
                            case 39:
                                i += i18;
                                break;
                            case 71:
                                i = i;
                                break;
                            case 49:
                                i19 &= i20;
                                break;
                            case 62:
                                Test.instanceCount = iFld;
                                break;
                            }
                            break;
                        case 91:
                            iFld = i18;
                            break;
                        case 92:
                            d2 = i1;
                            break;
                        case 93:
                            iFld *= i19;
                            break;
                        case 94:
                            f3 += (i20 - Test.instanceCount);
                        default:
                            if (Test.bFld) break;
                        }
                    }
                } else {
                    if (Test.bFld) break;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  vMeth ->  vMeth sMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
