package tests.javafuzzer789;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:50:41 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=31773L;
    public static double dFld=-2.91200;
    public static short sFld=-5509;
    public static int iFld=187;
    public static boolean bFld=false;
    public long lFld=-5377433133450539304L;
    public static int iArrFld[]=new int[N];
    public static volatile float fArrFld[]=new float[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -108);
        FuzzerUtils.init(Test.fArrFld, 1.960F);
        FuzzerUtils.init(Test.iArrFld1, -79);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i9=27833, i10=-208, i11=-11, i12=-93, i13=-45527, iArr1[]=new int[N];
        float f=-8.962F;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(dArr, -1.19424);

        Test.instanceCount = i9;
        for (i10 = 9; i10 < 236; i10++) {
            for (i12 = 1; i12 < 7; ++i12) {
                Test.iArrFld[i10 + 1] += (int)f;
                i9 ^= -150;
                i13 /= (int)(i9 | 1);
                f += (i12 * i12);
                i11 += i12;
                i11 = 40565;
                iArr1[i12] = (int)2.322F;
                f = 4;
                dArr[i10] = -7;
                i11 = 57470;
            }
            Test.instanceCount ^= Test.instanceCount;
            Test.dFld *= Test.sFld;
        }
        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1() {

        int i7=-10, i8=5593, i14=-45031;
        boolean b=false;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, 7584148778433392148L);
        FuzzerUtils.init(fArr, 105.894F);

        for (i7 = 1; i7 < 180; i7++) {
            vMeth2();
            lArr1[i7 + 1] -= Test.instanceCount;
            fArr[i7 - 1] = Test.instanceCount;
            i8 = (int)41.360F;
            if (b) {
                i8 = i8;
                i14 = 1;
                while (++i14 < 9) {
                    i8 += i14;
                }
            } else if (b) {
                i8 = i14;
                Test.instanceCount += (((i7 * Test.instanceCount) + Test.instanceCount) - i14);
                i8 &= (int)Test.instanceCount;
                Test.instanceCount += i14;
            }
            i8 += (((i7 * i14) + i7) - i7);
            Test.iArrFld[i7 + 1] = i7;
        }
        vMeth1_check_sum += i7 + i8 + i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=8, i4=155, i5=-51082, i6=28, i15=6, i16=-10, iArr[]=new int[N];
        short s=-28604;
        long l=-1570667601L, lArr[]=new long[N];
        byte by=-6;
        float f1=-70.472F;

        FuzzerUtils.init(lArr, 1527408694L);
        FuzzerUtils.init(iArr, -3834);

        if (Test.bFld) {
            for (i3 = 4; i3 < 227; ++i3) {
                lArr[i3] = ((++i) + ((--iArr[i3 - 1]) - (++i)));
                for (i5 = 1; i5 < 7; i5++) {
                    i = i5;
                    i1 &= (s--);
                    vMeth1();
                    for (i15 = 1; i15 < 2; ++i15) {
                        Test.dFld = Test.instanceCount;
                    }
                    i2 >>= i4;
                    l = Test.instanceCount;
                    by *= (byte)Test.iFld;
                    by *= (byte)42566;
                }
                i1 += (((i3 * i5) + i15) - f1);
            }
            i6 = (int)f1;
        } else {
            i2 = (int)l;
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i6 + s + i15 + i16 + l + by + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        byte by1=-74;
        float f2=2.868F;
        int i17=-29163, i18=-41, i19=-4, i20=12, i21=112, i22=7, i23=-14201, i24=-1;
        long l1=-15464L;

        vMeth(Test.iFld, Test.iFld, Test.iFld);
        Test.iFld <<= by1;
        f2 /= (Test.iFld | 1);
        for (i17 = 7; 343 > i17; i17++) {
            Test.instanceCount += (i17 ^ (long)f2);
            i18 &= -35355;
            Test.iFld += (i17 * i18);
            Test.iFld = i17;
            for (i19 = 75; i19 > 4; i19--) {
                l1 += (-2 + (i19 * i19));
                i18 = i17;
                l1 >>= i17;
                Test.fArrFld[i19] = lFld;
                i20 += (int)Test.dFld;
                i18 -= i19;
                switch (((i17 >>> 1) % 5) + 29) {
                case 29:
                case 30:
                    i20 += i19;
                    for (i21 = i17; i21 < 2; i21++) {
                        Test.iArrFld[i19 - 1] = -12;
                        Test.bFld = false;
                    }
                    Test.iArrFld[i17] += i21;
                    break;
                case 31:
                case 32:
                    i22 += (int)(-117.226F + (i19 * i19));
                    i18 >>= (int)lFld;
                    lFld += i20;
                    by1 = by1;
                case 33:
                    try {
                        i20 = (121 % Test.iArrFld[i19]);
                        i18 = (i20 % 93);
                        Test.iArrFld[i19 - 1] = (i21 % -1587105721);
                    } catch (ArithmeticException a_e) {}
                    for (i23 = 2; i17 < i23; --i23) {
                        if (Test.bFld) {
                            by1 += (byte)2.107455;
                        } else if (Test.bFld) {
                            Test.bFld = Test.bFld;
                        } else {
                            Test.iArrFld1[i17 - 1] >>>= by1;
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
