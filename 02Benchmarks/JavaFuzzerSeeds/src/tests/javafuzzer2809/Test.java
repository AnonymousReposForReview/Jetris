package tests.javafuzzer2809;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:40:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-78L;
    public static boolean bFld=true;
    public static double dFld=45.119630;
    public static float fFld=-2.1013F;
    public long lFld=1352840329L;
    public static long lArrFld[]=new long[N];
    public static long lArrFld1[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -22819L);
        FuzzerUtils.init(Test.lArrFld1, -5882337989742215748L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i12, short s, float f) {

        int i13=-37627, i14=55758, i15=12, i16=-3105, iArr1[]=new int[N];
        long l2=-7260360866624400167L, l3=-38L;
        byte by1=46;

        FuzzerUtils.init(iArr1, 22);

        i13 = 194;
        do {
            i12 += (((i13 * s) + f) - i12);
            Test.instanceCount = i12;
            i12 += i12;
            if (Test.bFld) continue;
            for (i14 = 1; i14 < 16; i14++) {
                i15 >>= 25;
                for (l2 = 2; 1 < l2; l2--) {
                    iArr1[i14] /= (int)(s | 1);
                    f += by1;
                    l3 &= i16;
                    i12 >>= (int)l3;
                    iArr1[(int)(l2 - 1)] = i14;
                    Test.dFld += Test.dFld;
                    i16 = (int)-823397572L;
                }
            }
        } while ((i13 -= 2) > 0);
        vMeth2_check_sum += i12 + s + Float.floatToIntBits(f) + i13 + i14 + i15 + l2 + i16 + by1 + l3 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, int i3, long l1) {

        int i4=8, i5=-65141, i6=-10875, i7=-8, i8=109, i9=58645, i10=136, i11=-6, iArr[]=new int[N];
        byte by=-58;
        short s1=-21238;

        FuzzerUtils.init(iArr, 12);

        i3 = (int)(--l);
        i3 |= i3;
        for (i4 = 20; i4 < 351; ++i4) {
            for (i6 = 5; i6 > i4; --i6) {
                i7 *= 51116;
                iArr[i6 - 1] = (int)(((1.29389 * Test.instanceCount) + (-20 + Integer.reverseBytes(-9))) % ((--i7) |
                    1));
            }
            i5 += i4;
            for (i8 = 5; i8 > i4; i8--) {
                i7 += (i8 + l);
                switch ((i8 % 10) + 34) {
                case 34:
                case 35:
                    i3 = (int)Math.max(--l1, (i3 *= i8) - (i7 - i3));
                    for (i10 = 1; i10 < 1; i10++) {
                        if (i9 != 0) {
                            vMeth1_check_sum += l + i3 + l1 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + by + s1 +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        Test.lArrFld[i4 + 1] -= (i3 += i7);
                        i11 >>= -5;
                    }
                    break;
                case 36:
                    i3 = (int)(i6 % (((by - l1) | (--l)) | 1));
                case 37:
                    vMeth2(i4, s1, 2.657F);
                case 38:
                case 39:
                    i11 -= i5;
                case 40:
                    i5 -= (int)Test.instanceCount;
                    break;
                case 41:
                    i5 = i7;
                    break;
                case 42:
                    iArr[i8] >>= (int)l;
                case 43:
                    iArr[i4] = (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += l + i3 + l1 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + by + s1 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i1, int i2) {

        boolean b=true;
        int i17=34462, i18=-30622, i19=-13, i20=-3, i21=52125, i22=-184, i23=-2, iArr2[]=new int[N];
        short s2=-23674;
        byte byArr[]=new byte[N], byArr1[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-77);
        FuzzerUtils.init(byArr1, (byte)-101);
        FuzzerUtils.init(iArr2, -118);

        b = (b = ((Test.instanceCount + Test.instanceCount) == 65194));
        vMeth1(Test.instanceCount, i1, Test.instanceCount);
        byArr = byArr1;
        iArr2[(i2 >>> 1) % N] &= (int)Test.instanceCount;
        i2 |= i1;
        for (i17 = 7; i17 < 184; ++i17) {
            for (i19 = i17; i19 < 9; i19++) {
                i1 <<= -38;
                Test.dFld += Test.instanceCount;
                i2 += i19;
                for (i21 = 1; 1 < i21; --i21) {
                    Test.fFld = -37209;
                    i18 = i23;
                    i23 -= (int)Test.instanceCount;
                    s2 += (short)i21;
                }
            }
        }
        vMeth_check_sum += i1 + i2 + (b ? 1 : 0) + i17 + i18 + i19 + i20 + i21 + i22 + i23 + s2 +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=12, i24=-96, i25=152, i26=5, i27=-6, i28=5, i29=-107, i30=-7, iArr3[]=new int[N];
        byte by2=-109;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr3, 33);
        FuzzerUtils.init(fArr, 46.203F);

        i &= (int)(((i * Test.instanceCount) - Integer.reverseBytes(i)) * (Test.instanceCount--));
        vMeth(i, i);
        iArr3[(-168 >>> 1) % N] += i;
        for (i24 = 3; i24 < 228; i24 += 2) {
            for (i26 = 5; i26 < 224; i26++) {
                i25 += i27;
                iArr3[i24] -= (int)Test.instanceCount;
                if (Test.bFld) continue;
                i25 += (int)Test.instanceCount;
                iArr3[i24 + 1] = (int)Test.instanceCount;
                Test.instanceCount = i28;
                i = (int)Test.instanceCount;
                Test.dFld += Test.instanceCount;
                Test.dFld %= (i26 | 1);
                Test.instanceCount -= 4112225553L;
            }
            Test.instanceCount = i27;
            iArr3[i24] = by2;
            for (i29 = 1; i29 < 224; i29 += 2) {
                fArr[i24][i29 + 1] *= i27;
                switch (((i29 % 2) * 5) + 18) {
                case 21:
                    fArr[i24 + 1][i24 + 1] += -64;
                    i = (int)Test.instanceCount;
                    break;
                case 22:
                    Test.bFld = true;
                    Test.dFld = i28;
                    i *= i30;
                    Test.instanceCount += i29;
                    break;
                default:
                    Test.instanceCount += (((i29 * i27) + i30) - i27);
                }
                if (Test.bFld) {
                    i25 >>= 2;
                    Test.lArrFld1 = Test.lArrFld1;
                } else if (Test.bFld) {
                    lFld = lFld;
                } else if (true) {
                    i *= (int)Test.instanceCount;
                } else {
                    Test.instanceCount *= (long)Test.dFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
