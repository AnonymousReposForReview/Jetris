package tests.javafuzzer1037;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:06:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=17626142669895403L;
    public static int iFld=44;
    public static byte byFld=-66;
    public float fFld=0.110F;
    public boolean bFld=true;
    public static long lArrFld[]=new long[N];
    public static short sArrFld[][]=new short[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -15565L);
        FuzzerUtils.init(Test.sArrFld, (short)10891);
        FuzzerUtils.init(Test.iArrFld, 14705);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b) {

        int i4=-124, i5=17140, i6=3, i7=-43793, i8=0, i9=29235, i10=-227, i11=-40714, iArr1[]=new int[N];
        float f2=2.44F;
        short s3=-12929;

        FuzzerUtils.init(iArr1, 11);

        Test.iFld *= -5;
        for (i4 = 9; 393 > i4; i4++) {
            iArr1[i4] += i5;
            try {
                Test.iFld = (-54629 / iArr1[i4]);
                i6 = (i5 % i5);
                iArr1[i4 - 1] = (i4 % -214);
            } catch (ArithmeticException a_e) {}
            if (b) {
                vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) +
                    s3 + FuzzerUtils.checkSum(iArr1);
                return;
            } else if (b) {
                i5 -= 180;
            } else if (b) {
                Test.sArrFld[i4] = FuzzerUtils.short1array(N, (short)-11101);
                Test.iFld += i4;
                switch ((((i6 >>> 1) % 8) * 5) + 22) {
                case 47:
                case 23:
                    i6 += -100;
                case 59:
                    for (i7 = 1; i7 < 4; i7++) {
                        for (i9 = 1; i9 < 2; ++i9) {
                            float f1=-25.116F;
                            f1 += (((i9 * i7) + i7) - i11);
                        }
                        Test.byFld *= (byte)1;
                        if (b) continue;
                    }
                case 24:
                    iArr1[i4 + 1] += i11;
                    break;
                case 37:
                    i8 -= (int)Test.instanceCount;
                    break;
                case 57:
                    f2 = 44283L;
                case 26:
                    f2 -= f2;
                    break;
                case 46:
                    i10 += i11;
                    break;
                default:
                    i11 <<= s3;
                }
            } else {
                i8 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f2) + s3 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1, float f, int i2) {

        double d=-1.1547, d1=1.60931, d2=-32.71231;
        int i3=-80, i12=13777, i13=-6, i14=-231;
        short s2=-18530;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 103.366F);

        for (d = 13; d < 370; d++) {
            Test.instanceCount = (i1 % ((-(-20 * (Test.instanceCount -= s2))) | 1));
            vMeth1(true);
            d1 += i3;
            for (d2 = d; 5 > d2; ++d2) {
                Test.instanceCount = -70;
                for (i13 = 1; i13 < 1; ++i13) {
                    s2 -= (short)i2;
                    Test.lArrFld[(int)(d - 1)] = -7;
                    i3 = i1;
                    i3 <<= s2;
                    fArr[(int)(d + 1)][(int)(d2 + 1)] %= -5001;
                    d1 -= Test.instanceCount;
                    f += (i13 - s2);
                    i12 += (-48028 + (i13 * i13));
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d) + i3 + s2 +
            Double.doubleToLongBits(d1) + Double.doubleToLongBits(d2) + i12 + i13 + i14 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(long l, int i) {

        short s1=25324;
        int i15=-66, i16=41211, i17=0, i18=-57863, i19=187, i20=16670;
        double d3=0.66394;

        Test.lArrFld[(Test.iFld >>> 1) % N] >>= (((i - i) - (Test.iFld + Test.instanceCount)) - ((-12 - (-(--s1))) *
            (s1 - Test.iFld)));
        vMeth(i, fFld, Test.iFld);
        for (i15 = 1; i15 < 163; ++i15) {
            i += (i15 + Test.instanceCount);
            for (i17 = i15; i17 < 10; ++i17) {
                d3 += l;
                Test.iFld <<= Test.iFld;
                fFld += (i17 * i17);
                switch ((i17 % 2) + 48) {
                case 48:
                    for (i19 = 1; 1 > i19; ++i19) {
                        i18 -= (int)fFld;
                        Test.iArrFld[i17 - 1] = 6613;
                        i18 += (i19 - fFld);
                        Test.byFld = (byte)52051;
                        i20 -= (int)Test.instanceCount;
                    }
                    break;
                case 49:
                    l += (-7 + (i17 * i17));
                }
            }
        }
        long meth_res = l + i + s1 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d3) + i19 + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=-3724;
        float f3=2.541F;
        int i21=-29, i22=60, i23=-65480, i24=-228, i25=6, i26=-7, i27=6, i28=-4, i29=-28, i30=-41059, iArr[]=new int[N];
        double d4=-2.54387, dArr[]=new double[N];

        FuzzerUtils.init(iArr, 26837);
        FuzzerUtils.init(dArr, 2.26140);

        iArr[(Test.iFld >>> 1) % N] -= (s--);
        switch ((((Test.iFld++) >>> 1) % 6) + 80) {
        case 80:
            Test.iFld |= (int)(iMeth(-14L, Test.iFld) - 26963L);
            fFld += Test.iFld;
            Test.iFld -= (int)Test.instanceCount;
            break;
        case 81:
            iArr[(Test.iFld >>> 1) % N] &= (int)5085669020263477638L;
            Test.iFld = Test.iFld;
            f3 = Test.iFld;
            if (bFld) {
                for (i21 = 185; i21 > 11; --i21) {
                    Test.instanceCount += Test.instanceCount;
                    Test.instanceCount -= Test.iFld;
                }
                for (i23 = 233; i23 > 8; i23 -= 3) {
                    for (i25 = i23; i25 < 334; ++i25) {
                        i22 = (int)Test.instanceCount;
                        Test.instanceCount = Test.instanceCount;
                        i22 = (int)d4;
                        Test.iFld = Test.iFld;
                        i22 %= (int)(Test.byFld | 1);
                        switch (((i23 % 1) * 5) + 80) {
                        case 83:
                            for (i27 = i23; i27 < 1; ++i27) {
                                Test.instanceCount <<= i22;
                                if (bFld) continue;
                            }
                            break;
                        default:
                            switch (((i23 % 3) * 5) + 78) {
                            case 91:
                                i26 = i22;
                                f3 += (188 + (i25 * i25));
                                for (i29 = 1; i29 < 1; ++i29) {
                                    i30 *= i25;
                                    s <<= (short)i23;
                                    dArr = dArr;
                                }
                            case 79:
                                Test.instanceCount = s;
                                break;
                            case 86:
                                Test.instanceCount += 14;
                                break;
                            default:
                                d4 += 80;
                            }
                        }
                    }
                }
            } else if (true) {
                bFld = bFld;
            }
            break;
        case 82:
            i22 -= (int)Test.instanceCount;
            break;
        case 83:
            Test.iFld >>= 0;
            break;
        case 84:
            Test.iFld -= i24;
        case 85:
            f3 = -97;
            break;
        default:
            Test.lArrFld[(i25 >>> 1) % N] += -4863;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
