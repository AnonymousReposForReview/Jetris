package tests.javafuzzer1324;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:16:09 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=11L;
    public static byte byFld=92;
    public static boolean bFld=false;
    public static float fFld=0.251F;
    public double dFld=2.25936;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 37403);
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.lArrFld, 63561L);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i3=-31906, i4=9449, i5=135, i6=108, i7=-3, i8=-14;
        short s=-9335;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 94.60134);
        FuzzerUtils.init(lArr, -747959846L);

        for (i3 = 258; i3 > 2; i3--) {
            for (i5 = 6; i5 > i3; i5 -= 2) {
                for (i7 = 1; i7 < 1; i7++) {
                    float f=0.18F;
                    i4 *= (int)Test.instanceCount;
                    switch ((i5 % 5) + 122) {
                    case 122:
                        i6 += (((i7 * s) + Test.instanceCount) - Test.byFld);
                        dArr[i5] += i8;
                        f += i7;
                    case 123:
                        Test.bArrFld[i5 - 1] = Test.bFld;
                        if (true) break;
                        Test.instanceCount -= -186;
                        break;
                    case 124:
                        f -= i6;
                        i8 += (i7 ^ i6);
                        f += 191;
                        i8 -= 76;
                        break;
                    case 125:
                        i4 += (i7 ^ Test.instanceCount);
                        break;
                    case 126:
                        Test.instanceCount *= i3;
                        break;
                    default:
                        lArr[i5 - 1] <<= i5;
                    }
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + s + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static boolean bMeth(double d) {

        int i9=-55356, i10=42, i11=5, i12=-123, i13=-9;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 37.70661);

        vMeth1();
        i9 = 1;
        while (++i9 < 365) {
            for (i10 = i9; i10 < 5; ++i10) {
                i11 <<= (int)Test.instanceCount;
                for (i12 = 1; i12 < 1; i12++) {
                    i11 = i12;
                    Test.iArrFld[i9] = 0;
                    i13 = (int)Test.fFld;
                    Test.instanceCount -= i9;
                    i13 = (int)d;
                    d -= -174L;
                }
                i11 -= i10;
                Test.bFld = false;
                Test.instanceCount = i10;
                dArr1[i10] -= d;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth() {

        int i=210, i1=-1, i2=239, i14=121, i15=8;
        float f1=-1.934F;
        short s1=11611;

        i *= (int)Math.sqrt((Test.byFld - Test.instanceCount) * (Test.instanceCount * 1.574F));
        for (i1 = 10; 168 > i1; ++i1) {
            Test.instanceCount += Test.iArrFld[i1 - 1];
            if (bMeth(-118.74045)) break;
            i2 *= i2;
            for (i14 = i1; i14 < 10; ++i14) {
                i <<= i;
                i2 = 220;
                Test.lArrFld[i1] += Test.instanceCount;
                i2 += (((i14 * Test.instanceCount) + f1) - i1);
                i2 -= (int)Test.fFld;
                switch (((i14 % 2) * 5) + 101) {
                case 109:
                    i2 >>= -133;
                    break;
                case 102:
                    Test.instanceCount -= i1;
                default:
                    s1 = (short)i2;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i14 + i15 + Float.floatToIntBits(f1) + s1;
    }

    public void mainTest(String[] strArr1) {

        int i16=-3, i17=7, i18=2, i19=-5, i20=-5, i21=2;
        float f2=0.624F;
        short s2=11446;

        vMeth();
        i16 -= (int)dFld;
        Test.instanceCount = Test.instanceCount;
        Test.bFld = Test.bFld;
        f2 = 1;
        do {
            i16 = (int)Test.instanceCount;
            for (i17 = 88; i17 > 2; --i17) {
                i16 = i17;
                try {
                    i18 = (i17 / -61047);
                    i18 = (i17 / Test.iArrFld[i17 - 1]);
                    i18 = (-197 % Test.iArrFld[i17 + 1]);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += i16;
                Test.bFld = Test.bFld;
                switch (((i18 >>> 1) % 4) + 42) {
                case 42:
                    i18 += i17;
                    if (true) continue;
                    dFld -= 234;
                    break;
                case 43:
                case 44:
                    dFld += -14722;
                    for (i19 = i17; i19 < 2; i19++) {
                        switch (((i19 % 4) * 5) + 123) {
                        case 137:
                            i20 += (((i19 * i17) + f2) - Test.instanceCount);
                            i16 = (int)-9L;
                            switch ((((i18 >>> 1) % 1) * 5) + 34) {
                            case 38:
                                switch (((i19 % 9) * 5) + 46) {
                                case 68:
                                    dFld -= i18;
                                    break;
                                case 54:
                                    i16 += (int)dFld;
                                    dFld *= Test.byFld;
                                    i18 += (i19 * i18);
                                    Test.fFld -= i17;
                                    break;
                                case 59:
                                    if (false) {
                                        i21 *= 16858;
                                        Test.instanceCount += s2;
                                    } else {
                                        i20 += i19;
                                    }
                                    break;
                                case 63:
                                    s2 <<= (short)i21;
                                    break;
                                case 65:
                                    i21 = (int)Test.instanceCount;
                                    break;
                                case 88:
                                    Test.instanceCount = i17;
                                    break;
                                case 62:
                                    i16 >>= -61849;
                                    break;
                                case 56:
                                    i20 -= -14;
                                case 47:
                                    Test.instanceCount = i19;
                                    break;
                                }
                            default:
                                Test.lArrFld = Test.lArrFld;
                            }
                            break;
                        case 133:
                            s2 += (short)(((i19 * i18) + Test.instanceCount) - i21);
                            break;
                        case 129:
                            i18 <<= -26482;
                            break;
                        case 140:
                            Test.fFld = i20;
                        }
                    }
                    break;
                case 45:
                    Test.instanceCount >>= i17;
                    break;
                }
            }
        } while (++f2 < 286);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
