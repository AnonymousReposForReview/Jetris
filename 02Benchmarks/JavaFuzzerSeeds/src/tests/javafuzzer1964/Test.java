package tests.javafuzzer1964;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:41:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-102L;
    public static volatile float fFld=1.8F;
    public static boolean bFld=true;
    public static volatile int iFld=5;
    public static int iFld1=-2;
    public short sFld=2931;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -10);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth(int i9) {

        short s=13177;
        int i10=-41535, i11=-15, i12=-13, i13=-13, i14=-12, i15=-11;
        byte by=100;
        double d2=-89.29762, dArr[]=new double[N];
        boolean b1=true, b2=false, bArr[]=new boolean[N];
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, -50336L);
        FuzzerUtils.init(fArr, -16.486F);
        FuzzerUtils.init(dArr, -3.80907);
        FuzzerUtils.init(bArr, true);

        i9 <<= s;
        for (i10 = 3; i10 < 193; ++i10) {
            by += (byte)(135 + (i10 * i10));
            lArr[i10] >>>= i11;
            Test.iArrFld[i10 - 1] *= (int)1.122595;
            i9 *= i10;
            fArr[i10] = Test.instanceCount;
            for (i12 = i10; i12 < 8; i12++) {
                i9 = (int)Test.instanceCount;
                switch ((i12 * 5) + 79) {
                case 388:
                    Test.fFld += (11638L + (i12 * i12));
                    for (i14 = 1; i14 < 1; ++i14) {
                        i13 >>= i9;
                        Test.instanceCount = 0L;
                    }
                case 389:
                    Test.instanceCount = by;
                    break;
                case 373:
                    i9 %= (int)((long)(d2) | 1);
                    break;
                case 262:
                    Test.instanceCount &= i12;
                    break;
                case 104:
                    Test.fFld += i15;
                    break;
                case 174:
                    dArr[i10 + 1] = -50256;
                    break;
                case 258:
                    Test.iArrFld[i12] += i15;
                    break;
                case 198:
                case 166:
                    i15 = -226;
                case 327:
                    i15 = i13;
                    break;
                case 308:
                    fArr = fArr;
                    break;
                case 163:
                    fArr[i12 + 1] += (float)d2;
                    break;
                case 280:
                    try {
                        i11 = (i9 / 246);
                        Test.iArrFld[i12 + 1] = (i9 / i10);
                        i13 = (i12 % -107);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 424:
                    Test.iArrFld[i12] = by;
                    break;
                case 286:
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 316:
                case 121:
                    by = (byte)37839;
                    break;
                case 158:
                    i9 -= i11;
                    break;
                case 346:
                    i13 = (int)Test.instanceCount;
                    break;
                case 353:
                    Test.fFld *= Test.instanceCount;
                    break;
                case 150:
                    Test.instanceCount >>>= i12;
                    break;
                case 85:
                    if (Test.bFld) continue;
                    break;
                case 255:
                    Test.iArrFld[i10 + 1] = (int)Test.fFld;
                    break;
                case 185:
                case 274:
                    Test.instanceCount ^= 2;
                case 393:
                    i9 += (i12 * i12);
                case 268:
                    Test.instanceCount += (i12 - Test.instanceCount);
                    break;
                case 220:
                    try {
                        i15 = (i9 / -59887);
                        i9 = (i13 % 47773);
                        i9 = (i14 % i15);
                    } catch (ArithmeticException a_e) {}
                case 129:
                    Test.instanceCount += i12;
                    break;
                case 135:
                    Test.iArrFld[i12 - 1] += i10;
                    break;
                case 367:
                    i9 -= i13;
                case 359:
                case 400:
                case 126:
                    lArr[i10] -= -237;
                    break;
                case 99:
                case 225:
                case 329:
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-80);
                    break;
                case 136:
                    Test.instanceCount -= (long)-1.606F;
                case 342:
                    Test.iArrFld[i12] >>= i14;
                    break;
                case 244:
                    Test.fFld = (float)-65.95139;
                case 153:
                    i15 += (int)Test.instanceCount;
                    break;
                case 314:
                    i11 = by;
                case 291:
                    i11 |= i10;
                    break;
                case 241:
                    i9 = i14;
                    break;
                case 397:
                    Test.fFld += (((i12 * Test.instanceCount) + Test.fFld) - Test.fFld);
                    break;
                case 266:
                    i15 += i12;
                case 369:
                    Test.bFld = b1;
                    break;
                case 102:
                    i13 <<= (int)Test.instanceCount;
                    break;
                case 297:
                    bArr[i12] = b2;
                    break;
                case 201:
                    i11 += i12;
                    break;
                case 357:
                    d2 = i14;
                    break;
                case 423:
                    d2 = Test.instanceCount;
                    break;
                case 214:
                case 120:
                    Test.instanceCount = Test.instanceCount;
                case 350:
                    Test.instanceCount += (i12 * i12);
                    break;
                case 235:
                    Test.instanceCount = by;
                    break;
                case 172:
                    bArr[i12] = Test.bFld;
                    break;
                case 305:
                    i15 += (int)(209L + (i12 * i12));
                    break;
                case 352:
                    d2 = i14;
                case 419:
                case 271:
                    i9 = by;
                    break;
                case 401:
                    lArr[i10] <<= i10;
                    break;
                case 261:
                    if (i13 != 0) {
                        return ((int)(i9 + s + i10 + i11 + by + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) +
                            (b1 ? 1 : 0) + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr))) % 2 > 0;
                    }
                case 236:
                    Test.iArrFld[i12] = (int)Test.instanceCount;
                    break;
                case 368:
                    Test.iArrFld[i12] = i11;
                    break;
                case 83:
                    s += (short)(41143L + (i12 * i12));
                    break;
                case 169:
                case 252:
                    Test.instanceCount = -29179;
                    break;
                case 412:
                case 205:
                }
            }
        }
        long meth_res = i9 + s + i10 + i11 + by + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0) +
            (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth1(int i2, float f1) {

        int i3=-48247, i4=35, i5=3, i6=-7, i7=-8, i8=200, i16=6;
        boolean b=false;
        short sArr[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(sArr, (short)-16915);
        FuzzerUtils.init(lArr1, -3L);

        for (i3 = 11; i3 < 228; i3++) {
            for (i5 = i3; i5 < 7; ++i5) {
                i2 -= (int)((196 - (sArr[i5 + 1] = (short)f1)) * i3);
            }
            Test.iArrFld[i3] += (--Test.iArrFld[i3 + 1]);
            for (i7 = 7; i7 > i3; --i7) {
                switch (((i7 % 6) * 5) + 83) {
                case 100:
                    b = bMeth(-230);
                    i2 *= i5;
                    Test.iArrFld[i3] = (int)Test.instanceCount;
                    break;
                case 89:
                case 86:
                    Test.instanceCount += (((i7 * i2) + i5) - i5);
                    i6 >>>= -21898;
                    i16 += (24733 + (i7 * i7));
                    break;
                case 88:
                    Test.fFld = i5;
                    break;
                case 101:
                case 98:
                    i4 |= (int)14L;
                    lArr1[i7 - 1] = i16;
                    break;
                default:
                    i4 -= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i2 + Float.floatToIntBits(f1) + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i16 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i, double d) {

        double d1=-93.17598, d3=1.129974;
        int i1=-34861, i17=60057, i19=-53255, i20=8;
        float f=0.159F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -1L);

        i += (int)(Test.iArrFld[(i >>> 1) % N] - (Test.iArrFld[(i >>> 1) % N] + (i = (int)Test.instanceCount)));
        for (d1 = 326; d1 > 4; d1--) {
            i1 -= i1;
        }
        f = -14;
        vMeth1(i, Test.fFld);
        for (d3 = 2; d3 < 353; ++d3) {
            i -= i1;
            if (Test.bFld) {
                if (Test.bFld) {
                    Test.instanceCount = i;
                } else if (Test.bFld) {
                    Test.instanceCount >>= 40006;
                    i1 += (int)d;
                } else if (Test.bFld) {
                    for (i19 = 1; i19 < 5; i19 += 2) {
                        lArr2[i19] *= 124;
                    }
                    i >>>= (int)Test.instanceCount;
                }
            } else {
                i += i;
            }
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i1 + Float.floatToIntBits(f)
            + Double.doubleToLongBits(d3) + i17 + i19 + i20 + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i21=36301, i22=13, i23=7, i24=-24393, i25=14, i26=-240, i28=-14063, i29=0;
        long l=8273990835790380168L, lArr3[]=new long[N];
        byte by1=6;

        FuzzerUtils.init(lArr3, 15029L);

        vMeth(Test.iFld, -1.69135);
        Test.iFld -= (int)Test.fFld;
        i21 = 164;
        while ((i21 -= 2) > 0) {
            Test.bFld = false;
        }
        for (i22 = 7; i22 < 215; i22++) {
            for (l = 121; l > 5; --l) {
                for (i25 = 2; 1 < i25; i25 -= 2) {
                    int i27=217;
                    i24 += (int)Test.instanceCount;
                    Test.fFld += (((i25 * i24) + l) - Test.instanceCount);
                    Test.instanceCount -= i22;
                    lArr3[i25] >>= Test.iFld;
                    i24 >>= (int)Test.instanceCount;
                    by1 += (byte)(i25 * i25);
                    Test.iFld1 += i25;
                    switch ((((i21 >>> 1) % 2) * 5) + 37) {
                    case 45:
                        i23 *= i22;
                        sFld = (short)l;
                        Test.iFld1 += i25;
                        i27 >>= (int)Test.instanceCount;
                        break;
                    case 43:
                        Test.bFld = Test.bFld;
                        Test.iFld = 30;
                        Test.bFld = Test.bFld;
                        i27 = i21;
                        break;
                    default:
                        i26 = i26;
                    }
                    Test.iArrFld[(int)(l - 1)] += i22;
                }
            }
            for (i28 = 7; i28 < 121; ++i28) {
                i24 -= (int)11049L;
            }
            sFld = (short)i23;
            i24 = -127;
            i24 += (int)l;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
