package tests.javafuzzer1758;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:02:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-250L;
    public static float fFld=43.245F;
    public static volatile int iFld=25976;
    public static short sFld=-904;
    public static boolean bFld=true;
    public double dFld=27.83107;
    public static int iFld1=14;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static void vMeth1(int i) {


        Test.fFld += i;
        i = (int)Test.instanceCount;
        vMeth1_check_sum += i;
    }

    public static int iMeth1() {

        int i5=-1, i6=-180, i7=-22683, i8=-3146, i9=-35203;
        boolean b=false;

        Test.fFld -= i5;
        Test.lArrFld[(i5 >>> 1) % N] = Test.iFld;
        Test.instanceCount >>= 139;
        Test.instanceCount += i5;
        Test.fFld = Test.iFld;
        Test.iFld += (int)Test.instanceCount;
        Test.instanceCount <<= Test.iFld;
        i5 >>>= (int)Test.instanceCount;
        i5 += -11;
        for (i6 = 297; i6 > 12; --i6) {
            for (i8 = 6; i8 > i6; i8 -= 3) {
                switch ((i8 % 1) + 119) {
                case 119:
                    if (i6 != 0) {
                    }
                    break;
                default:
                    i9 += (i8 * i8);
                    if (b) break;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(long l2, short s, int i4) {

        double d=-44.17888;
        byte by=-57;
        int i10=-190, i11=-51, i12=-249, i13=-225, i14=43374, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 61087);

        i4 = (int)((iArr[(i4 >>> 1) % N] - i4) * (iMeth1() + -124.74F));
        d -= 147;
        s = by;
        Test.instanceCount += (long)d;
        Test.iFld += Test.iFld;
        for (i10 = 6; 336 > i10; ++i10) {
            i11 ^= Test.iFld;
            i12 = 1;
            do {
                iArr[i10 - 1] >>= i10;
                for (i13 = 1; i13 < 1; ++i13) {
                    i11 = (int)621L;
                    i14 <<= i11;
                    l2 += (i13 ^ i13);
                    Test.lArrFld[i13] += i12;
                    Test.iFld += (int)l2;
                }
            } while (++i12 < 5);
        }
        long meth_res = l2 + s + i4 + Double.doubleToLongBits(d) + by + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l) {

        int i1=83, i2=-82, i3=35809, i15=38104, i16=-30015;
        long l1=-8188027634307588050L;
        double d1=0.12639;

        l = l;
        vMeth1(--i1);
        Test.instanceCount = (((l1 * i1) * (i1 << -1175563408L)) + i1);
        for (i2 = 13; 240 > i2; i2 += 3) {
            l1 += iMeth(l, Test.sFld, i3);
            d1 = i1;
            Test.iFld = (int)d1;
            Test.fFld /= ((long)(d1) | 1);
            if (Test.bFld) break;
            Test.bFld = Test.bFld;
            Test.fFld += i2;
            i3 += (int)Test.fFld;
            for (i15 = 21; i15 > 1; i15 -= 3) {
                Test.fFld = i15;
                i1 += (((i15 * i15) + Test.fFld) - Test.fFld);
            }
        }
        vMeth_check_sum += l + i1 + l1 + i2 + i3 + Double.doubleToLongBits(d1) + i15 + i16;
    }

    public void mainTest(String[] strArr1) {

        int i17=45400, i18=151, i19=-232, i20=34014, i21=-53100, iArr1[]=new int[N];
        byte by1=-36;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -166);
        FuzzerUtils.init(sArr, (short)-12512);

        vMeth(-14L);
        Test.iFld += (int)Test.instanceCount;
        i17 = 1;
        while (++i17 < 223) {
            for (i18 = 113; i18 > 6; --i18) {
                Test.instanceCount += Test.iFld;
                for (i20 = 1; i20 < 2; ++i20) {
                    Test.iFld -= (int)Test.instanceCount;
                    iArr1[i17 - 1] += (int)Test.instanceCount;
                    Test.instanceCount -= i18;
                    Test.instanceCount = -9027581442805781471L;
                    iArr1[i18] = i21;
                    i19 >>= -5;
                    switch (((3 >>> 1) % 7) + 41) {
                    case 41:
                        i19 += 29740;
                        Test.iFld += i18;
                        Test.lArrFld[i18 + 1] += (long)dFld;
                        Test.iFld += i20;
                        break;
                    case 42:
                        by1 = (byte)2193488022325079383L;
                        break;
                    case 43:
                        iArr1[i17] = i21;
                        dFld += Test.instanceCount;
                        i21 = -47323;
                        Test.iFld = Test.sFld;
                    case 44:
                        switch ((i17 % 2) + 58) {
                        case 58:
                            Test.instanceCount += i20;
                            Test.iFld1 += (((i20 * i20) + Test.fFld) - i19);
                            break;
                        case 59:
                            Test.sFld += (short)i20;
                            sArr[i18 + 1] = (short)-39;
                            break;
                        default:
                            Test.iFld *= Test.iFld1;
                            if (Test.bFld) continue;
                        }
                        Test.sFld <<= (short)i19;
                        break;
                    case 45:
                        Test.fFld += 6;
                        break;
                    case 46:
                        Test.iFld1 = Test.iFld1;
                        break;
                    case 47:
                        Test.iFld1 += i17;
                        break;
                    default:
                        iArr1[i18 - 1] -= Test.iFld1;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
