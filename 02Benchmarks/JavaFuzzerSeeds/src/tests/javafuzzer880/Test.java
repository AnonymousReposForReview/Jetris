package tests.javafuzzer880;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:10:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3526595492L;
    public static boolean bFld=true;
    public static volatile float fFld=-2.495F;
    public byte byFld=-118;
    public int iFld=0;
    public volatile int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i=219, i1=-7251, i2=0, i3=-43520, i4=214, i5=-66, iArr[]=new int[N];
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -25193);
        FuzzerUtils.init(lArr, 125L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, -2.236);

        iArr[(i >>> 1) % N] >>= i;
        lArr[(-156 >>> 1) % N] -= i;
        for (i1 = 369; i1 > 22; --i1) {
            iArr[i1 - 1] <<= 1;
            i2 = (int)12L;
            for (i3 = 1; i3 < 5; i3++) {
                i >>>= i2;
                bArr[i3] = Test.bFld;
                i2 += (i3 * i3);
                dArr[i1] *= -51992;
                i4 = (int)Test.fFld;
                i5 = 2;
                do {
                    iArr[i1 + 1] = (int)Test.instanceCount;
                    try {
                        iArr[i3 - 1] = (214 / i4);
                        i = (iArr[i1 - 1] % i4);
                        i4 = (iArr[i5 - 1] % i1);
                    } catch (ArithmeticException a_e) {}
                    i2 += i;
                } while ((i5 -= 2) > 0);
            }
        }
        vMeth2_check_sum += i + i1 + i2 + i3 + i4 + i5 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(double d) {

        int i6=237, i7=13, i8=-23295, i9=32, i10=11933, iArr1[]=new int[N];
        short s=3754;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-43);
        FuzzerUtils.init(iArr1, 6);

        vMeth2();
        for (i6 = 1; i6 < 397; i6++) {
            switch ((i6 % 9) + 124) {
            case 124:
            case 125:
                i7 += (-4907 + (i6 * i6));
                i7 -= 0;
                break;
            case 126:
                i7 *= 81;
                break;
            case 127:
                i8 = 1;
                do {
                    byArr[i6] = (byte)-21;
                    d += i8;
                    i7 = i7;
                    for (i9 = 1; i9 < 1; ++i9) {
                        i10 &= (int)Test.instanceCount;
                        i7 <<= i6;
                        i7 <<= i10;
                        Test.instanceCount += i9;
                    }
                } while (++i8 < 4);
            case 128:
                d = 51;
                break;
            case 129:
                i7 = (int)Test.instanceCount;
                break;
            case 130:
                i10 += (i6 - i6);
                break;
            case 131:
                s *= (short)Test.instanceCount;
                break;
            case 132:
                Test.instanceCount -= i6;
                break;
            default:
                i7 += i9;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + i10 + s + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f) {

        double d1=-33.26309;
        int i12=4, i13=0, i14=63795, iArr2[]=new int[N];
        long l=-17766L;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 8330);
        FuzzerUtils.init(fArr, 1.250F);

        vMeth1(d1);
        i12 *= i12;
        Test.instanceCount += Test.instanceCount;
        for (i13 = 7; i13 < 356; i13++) {
            Test.instanceCount += i13;
            i12 += i13;
            iArr2[i13 - 1] -= i12;
            if (Test.bFld) continue;
            if (Test.bFld) {
                i12 = (int)l;
                fArr[i13 - 1] = i14;
            }
            d1 += f;
            f += i12;
            Test.instanceCount *= i12;
            f += i14;
        }
        vMeth_check_sum += Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i12 + i13 + i14 + l +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        long l1=1357341392086371962L, lArr1[]=new long[N];
        int i16=-211, i17=-215, i18=91, i19=1, i20=-35104, i21=-17, iArr3[][]=new int[N][N];
        double dArr1[][]=new double[N][N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(dArr1, -2.104161);
        FuzzerUtils.init(lArr1, 2790600684L);
        FuzzerUtils.init(iArr3, 31893);
        FuzzerUtils.init(sArr, (short)-10785);

        vMeth(Test.fFld);
        for (l1 = 11; l1 < 229; ++l1) {
            i16 -= (int)Test.fFld;
            byFld -= (byte)i16;
            dArr1[(int)(l1 + 1)][(int)(l1 - 1)] -= i16;
            i16 += i16;
        }
        for (i17 = 8; 325 > i17; ++i17) {
            i16 = i17;
            iArrFld[i17] = i16;
            lArr1[(i16 >>> 1) % N] = iFld;
            iArr3 = FuzzerUtils.int2array(N, (int)-25474);
            iArr3 = iArr3;
            for (i19 = 1; 79 > i19; i19++) {
                i21 = 1;
                do {
                    lArr1[i21 + 1] = (long)Test.fFld;
                    i20 += (int)Test.fFld;
                    switch ((i17 % 2) + 45) {
                    case 45:
                        sArr[i17 + 1][(i19 >>> 1) % N] <<= (short)-67;
                        break;
                    case 46:
                        switch (((iFld >>> 1) % 7) + 31) {
                        case 31:
                            i18 = iFld;
                            Test.instanceCount += i21;
                            Test.instanceCount += l1;
                            break;
                        case 32:
                            Test.instanceCount = l1;
                            break;
                        case 33:
                            i18 >>>= i16;
                            break;
                        case 34:
                            i18 >>>= -13;
                            break;
                        case 35:
                            Test.fFld = -14;
                            i16 *= 119;
                            break;
                        case 36:
                            i18 += -42913;
                            Test.instanceCount *= (long)Test.fFld;
                            if (Test.bFld) break;
                            break;
                        case 37:
                        }
                        break;
                    }
                } while ((i21 += 2) < 2);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
