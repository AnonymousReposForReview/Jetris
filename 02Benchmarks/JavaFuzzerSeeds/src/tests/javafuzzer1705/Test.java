package tests.javafuzzer1705;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:12:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static int iFld=-9;
    public volatile short sFld=25300;
    public static short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-18462);
        FuzzerUtils.init(Test.iArrFld, -174);
        FuzzerUtils.init(Test.dArrFld, -2.39467);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6, int i7, int i8) {

        int i9=-210, i10=0, i11=20, i12=-5648, i13=29034, i14=-23426, i15=8, i16=211;
        byte by=29;
        short s=-28184;
        float f2=2.551F;

        Test.instanceCount = i7;
        i8 <<= i7;
        for (i9 = 10; 182 > i9; ++i9) {
            i11 = 1;
            do {
                i10 += i11;
                Test.iArrFld[i11] += i11;
                by = (byte)s;
            } while (++i11 < 9);
            Test.iFld >>= Test.iFld;
            i10 += (((i9 * f2) + i9) - i6);
            i7 = Test.iFld;
        }
        for (i12 = 18; i12 < 397; i12 += 3) {
            for (i14 = i12; i14 < 12; ++i14) {
                int i17=56040;
                Test.iFld -= i16;
                i17 -= i10;
                i15 += i14;
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + by + s + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 +
            i16;
    }

    public static int iMeth(long l, int i2) {

        int i3=-158, i4=28187, i5=-143, i18=-33988;
        float f1=-94.569F, fArr[]=new float[N];
        double d=0.126217;

        FuzzerUtils.init(fArr, -14.683F);

        for (i3 = 9; i3 < 162; i3++) {
            i5 = 1;
            while (++i5 < 10) {
                Test.sArrFld[i5 - 1] = (short)(f1 - ((-29446 >>> l) + (Test.iArrFld[i5]++)));
                vMeth1(i3, i5, Test.iFld);
                i18 = 1;
                while ((i18 += 2) < 1) {
                    switch (((i4 >>> 1) % 10) + 85) {
                    case 85:
                        Test.iArrFld[i5] = i5;
                        i4 = (int)-203L;
                        Test.iArrFld[i18] += (int)f1;
                        break;
                    case 86:
                        i2 *= (int)Test.instanceCount;
                        break;
                    case 87:
                        fArr[i3 + 1] = i3;
                        f1 = i5;
                        Test.iFld -= (int)d;
                        if (true) break;
                        break;
                    case 88:
                        i2 -= (int)f1;
                        break;
                    case 89:
                        Test.dArrFld[i3] -= -1.486F;
                        break;
                    case 90:
                        Test.iFld += i18;
                        break;
                    case 91:
                        i2 <<= (int)Test.instanceCount;
                        break;
                    case 92:
                        i4 *= Test.iFld;
                        break;
                    case 93:
                        i4 = i18;
                        break;
                    case 94:
                        Test.instanceCount *= (long)1.870F;
                        break;
                    default:
                        fArr[i5 - 1] += Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = l + i2 + i3 + i4 + i5 + Float.floatToIntBits(f1) + i18 + Double.doubleToLongBits(d) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f, int i1) {

        int i19=-224, i20=170, i21=-33573, i22=-9, i23=4, i24=-96, i25=-31;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 2919002108L);

        i1 = (int)(iMeth(Test.instanceCount, i1) + 658742509516710822L);
        Test.iArrFld[(Test.iFld >>> 1) % N] *= i1;
        for (i19 = 5; i19 < 206; ++i19) {
            lArr[i19 - 1] = 2096558310L;
            Test.iArrFld[i19 - 1] = i20;
            for (i21 = 1; i21 < 8; i21++) {
                for (i23 = 1; 2 > i23; i23++) {
                    Test.iFld |= 58893;
                    f -= i19;
                    Test.instanceCount -= Test.instanceCount;
                    i20 += i23;
                }
                Test.iArrFld[i19 + 1] = i1;
            }
            i25 = 1;
            do {
                i1 = i23;
                Test.iArrFld[i25 - 1] = (int)Test.instanceCount;
            } while (++i25 < 8);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + i19 + i20 + i21 + i22 + i23 + i24 + i25 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i26=13673, i27=5, i28=4526, i29=0, i30=3693, i31=-51, i32=-14888, i33=1, i34=45248;
        float f3=-1.50F, fArr1[]=new float[N];
        byte by1=-50;
        double d1=-2.74032;

        FuzzerUtils.init(fArr1, -1.646F);

        i = 1;
        while (++i < 166) {
            vMeth(f3, i);
            Test.iFld -= Test.iFld;
            Test.iFld = (int)1.50095;
            Test.iFld -= (int)44297L;
            fArr1 = FuzzerUtils.float1array(N, (float)0.916F);
            Test.iArrFld[i] *= (int)Test.instanceCount;
            Test.iFld = (int)Test.instanceCount;
        }
        for (i26 = 2; i26 < 361; i26 += 2) {
            boolean b=false;
            if (b) continue;
            for (i28 = 6; i28 < 140; i28++) {
                by1 -= (byte)2L;
            }
            for (i30 = 3; 140 > i30; i30++) {
                sFld = (short)-12423;
                i31 += i30;
                Test.instanceCount += (218 + (i30 * i30));
                Test.iFld = i30;
                for (i32 = 1; i32 < 2; ++i32) {
                    fArr1[i32 + 1] *= i28;
                    i33 *= (int)Test.instanceCount;
                    sFld += (short)(((i32 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                }
            }
        }
        d1 *= i29;
        i27 = (int)d1;
        i34 = 1;
        do {
            if (false) continue;
            Test.instanceCount += i34;
            switch (((i31 >>> 1) % 2) + 115) {
            case 115:
                i33 = (int)Test.instanceCount;
                fArr1[i34] *= 18;
                Test.instanceCount -= Test.instanceCount;
                break;
            case 116:
                Test.instanceCount *= 7;
                break;
            default:
                fArr1[i34] = i26;
            }
        } while (++i34 < 375);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
