package tests.javafuzzer914;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:30:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5920622973213033344L;
    public float fFld=42.33F;
    public static double dFld=-2.117244;
    public byte byFld=119;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4, float f) {

        int i5=208, i6=-3, i7=-56427, i8=-56663;
        byte by=-1, byArr[]=new byte[N];
        float f1=31.1010F;
        boolean b=false;

        FuzzerUtils.init(byArr, (byte)-2);

        i3 >>= i4;
        i5 = 1;
        do {
            double d=0.16690;
            i4 = (int)d;
            i4 >>>= i5;
            Test.instanceCount <<= i4;
            f = -39685;
            by = (byte)i5;
            f += i3;
            for (f1 = 1; f1 < 7; f1++) {
                i6 += i3;
                if (b) {
                    i4 = -17557;
                    for (i7 = 1; i7 < 2; ++i7) {
                        f += (((i7 * i8) + i5) - Test.instanceCount);
                        i4 *= i3;
                    }
                } else {
                    i4 += i5;
                }
            }
        } while (++i5 < 238);
        long meth_res = i3 + i4 + Float.floatToIntBits(f) + i5 + by + Float.floatToIntBits(f1) + i6 + i7 + i8 + (b ? 1
            : 0) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        short s=15654;
        int i9=12;
        float f2=46.198F;

        s -= (short)iMeth(i9, i9, f2);
        Test.instanceCount = i9;
        i9 += i9;
        vMeth1_check_sum += s + i9 + Float.floatToIntBits(f2);
    }

    public static void vMeth(long l) {

        long l1=6339L;
        int i1=-5, i2=-12561, i10=-27413, i11=-219, iArr[]=new int[N];
        double d1=95.40851;
        float f3=0.26F;
        short s1=1798, sArr[]=new short[N];

        FuzzerUtils.init(iArr, 193);
        FuzzerUtils.init(sArr, (short)13135);

        for (l1 = 4; 222 > l1; ++l1) {
            l = iArr[(int)(l1 - 1)];
            sArr[(int)(l1)] -= (short)(iArr[(int)(l1 + 1)] - i1);
            i2 = 1;
            do {
                vMeth1();
                l -= -6;
                iArr[(int)(l1 - 1)] = i2;
                for (i10 = 1; i10 < 1; i10++) {
                    boolean b1=true;
                    i11 += (int)d1;
                    if (b1) continue;
                    f3 += -11;
                    i11 += (-233 + (i10 * i10));
                }
                iArr[(int)(l1 + 1)] -= 9116;
                s1 <<= (short)153L;
                if (true) continue;
            } while (++i2 < 7);
        }
        vMeth_check_sum += l + l1 + i1 + i2 + i10 + i11 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) + s1 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-12, i12=-3, i13=-59891, i14=23, i15=-2, iArr1[]=new int[N];
        boolean b2=true;
        short s2=14475;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9L);
        FuzzerUtils.init(iArr1, -10);

        i = 1;
        while (++i < 334) {
            vMeth(Test.instanceCount);
            for (i12 = 75; i12 > 2; i12--) {
                i13 = 49;
                i13 += i12;
                if (b2) break;
                if (b2) {
                    Test.instanceCount >>= i;
                    Test.instanceCount -= i12;
                } else if (b2) {
                    for (i14 = i; i14 < 2; i14++) {
                        fFld -= Test.instanceCount;
                        i15 += i13;
                        i15 -= i;
                        i13 += i14;
                        Test.instanceCount = i14;
                        switch (((-11 >>> 1) % 1) + 58) {
                        case 58:
                            if (true) continue;
                            i13 = i14;
                            switch (((i >>> 1) % 3) + 43) {
                            case 43:
                                Test.dFld = Test.instanceCount;
                                byFld = (byte)i13;
                                iArr1[i14 + 1] *= i14;
                                break;
                            case 44:
                                i15 += i14;
                                Test.instanceCount *= Test.instanceCount;
                            case 45:
                                iArr1[i14 + 1] = i;
                                break;
                            }
                            s2 = (short)12;
                            break;
                        }
                        i13 *= (int)fFld;
                        i13 ^= (int)Test.instanceCount;
                    }
                    i15 += (i12 + i13);
                    i13 -= i14;
                } else {
                    i15 += (233 + (i12 * i12));
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
