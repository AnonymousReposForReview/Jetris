package tests.javafuzzer3375;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:52:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-49L;
    public static float fFld=0.464F;
    public static double dFld=-37.4083;
    public static short sFld=15700;
    public byte byFld=98;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 24548);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, long l2, short s) {

        int i4=-44451, i5=-4, i6=10, i7=-8, i8=-11, i9=52151, i10=39867;
        byte by=-77;
        long l3=-4L;
        boolean b=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-10768);

        i4 = 128;
        do {
            sArr[(i3 >>> 1) % N] = (short)92L;
            Test.iArrFld[i4] >>= (int)Test.instanceCount;
            l2 >>= i4;
        } while ((i4 -= 3) > 0);
        for (i5 = 16; i5 < 304; i5++) {
            for (i7 = 1; i7 < 6; ++i7) {
                Test.fFld += i7;
                i8 += (((i7 * i4) + i3) - by);
                for (i9 = 1; 2 > i9; i9++) {
                    i10 <<= (int)Test.instanceCount;
                    i6 += (((i9 * l3) + by) - i6);
                    i8 += (int)Test.fFld;
                    b = b;
                    Test.dFld -= l3;
                    s = (short)i6;
                }
            }
        }
        vMeth1_check_sum += i3 + l2 + s + i4 + i5 + i6 + i7 + i8 + by + i9 + i10 + l3 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr);
    }

    public void vMeth(float f, int i1, long l1) {

        int i2=44293, i11=-16, i12=41, i13=3, i14=130, i15=-124, i16=-24326;
        boolean b1=true;

        i2 = 224;
        while ((i2 -= 2) > 0) {
            vMeth1(i1, 3L, (short)(22145));
            for (i11 = 1; i11 < 14; ++i11) {
                Test.sFld <<= (short)8;
                lArrFld[i11 + 1] -= i1;
                switch (((i1 >>> 1) % 2) + 121) {
                case 121:
                    lArrFld[i2 + 1] = (long)f;
                    break;
                case 122:
                    for (i13 = 1; i13 < 2; ++i13) {
                        l1 *= l1;
                        if (b1) {
                            i1 &= -43539;
                        }
                    }
                    l1 += (34467 + (i11 * i11));
                    for (i15 = 1; i15 < 2; ++i15) {
                        if (i13 != 0) {
                            vMeth_check_sum += Float.floatToIntBits(f) + i1 + l1 + i2 + i11 + i12 + i13 + i14 + (b1 ? 1
                                : 0) + i15 + i16;
                            return;
                        }
                        if (true) continue;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i1 + l1 + i2 + i11 + i12 + i13 + i14 + (b1 ? 1 : 0) + i15 + i16;
    }

    public int iMeth(long l) {

        float f1=-104.625F, fArr[]=new float[N];
        int i17=-61;
        boolean b2=true;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(byArr, (byte)-56);
        FuzzerUtils.init(fArr, 0.246F);

        vMeth(Test.fFld, -14, 176L);
        try {
            for (f1 = 6; (148 + 400) > f1; f1++) {
                byArr[(int)(f1 - 1)] = byArr[(int)(f1 + 1)];
                try {
                    i17 = (i17 % 31);
                    i17 = (i17 % i17);
                    i17 = (i17 % -186);
                } catch (ArithmeticException a_e) {}
                i17 += (int)(f1 + i17);
                fArr[(int)(f1 - 1)] /= (Test.instanceCount | 1);
                i17 <<= i17;
                i17 += (int)(((f1 * i17) + i17) - f1);
                b2 = b2;
                Test.dFld = Test.dFld;
                Test.iArrFld = Test.iArrFld;
            }
            Test.fFld = Test.fFld;
            Test.instanceCount = Test.instanceCount;
        }
        catch (ArrayIndexOutOfBoundsException exc1) {
            i17 += 29186;
        }
        long meth_res = l + Float.floatToIntBits(f1) + i17 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-166, i18=180, i19=111, i20=0, i21=-4570, i22=-14240, i23=-119, i24=-1, i25=62151, i26=5, i27=4;
        long l4=92L;
        double d=-1.25954;

        i /= (int)((iMeth(Test.instanceCount) * i) | 1);
        for (l4 = 15; 248 > l4; l4 += 2) {
            i18 += 13;
            Test.iArrFld[(int)(l4)] >>= 60;
            for (d = 7; d < 216; d += 2) {
                switch (((i >>> 1) % 1) + 61) {
                case 61:
                    Test.iArrFld[(int)(l4 - 1)] *= i18;
                    i18 >>= i19;
                    Test.sFld += (short)d;
                    for (i20 = 3; 1 < i20; i20 -= 2) {
                        i /= (int)((long)(Test.dFld) | 1);
                    }
                    break;
                }
                Test.instanceCount += -108;
                i18 += (int)(((d * i20) + byFld) - l4);
                Test.dFld += Test.dFld;
                i18 = i20;
                Test.iArrFld[(int)(d)] = (int)Test.instanceCount;
            }
        }
        Test.fFld = (float)d;
        Test.instanceCount |= i19;
        for (i22 = 4; i22 < 192; i22++) {
            for (i24 = i22; i24 < 133; ++i24) {
                i25 = i22;
                for (i26 = 1; i26 < 1; i26++) {
                    i18 ^= (int)Test.instanceCount;
                    i19 = (int)Test.dFld;
                    Test.fFld += (93 + (i26 * i26));
                    i18 -= (int)5L;
                    i27 += i26;
                }
                Test.dFld *= i21;
                Test.instanceCount = i24;
                i18 += i24;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
