package tests.javafuzzer1904;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:28:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-16837L;
    public static int iFld=-6;
    public static boolean bFld=true;
    public short sFld=-28854;
    public double dFld=18.109993;
    public static byte byFld=122;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3917611023359389339L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, short s) {

        int i6=94, i7=0, i8=-236, i9=23261, i10=-12, iArr1[]=new int[N];
        double d=-57.81358;
        byte by1=54;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 8);
        FuzzerUtils.init(lArr, 112L);

        i6 = 363;
        do {
            iArr1[i6] += Test.iFld;
            d *= 1;
            if (Test.bFld) {
                i5 = i6;
                for (i7 = 1; i7 < 5; ++i7) {
                    for (i9 = 1; i9 < 2; ++i9) {
                        i10 += (-19043 + (i9 * i9));
                        switch (((i6 % 2) * 5) + 113) {
                        case 119:
                            Test.instanceCount -= by1;
                            Test.iFld += (i9 | Test.instanceCount);
                            lArr = lArr;
                            break;
                        case 114:
                            Test.bFld = Test.bFld;
                            Test.iFld = i10;
                            iArr1[i7] -= i5;
                            break;
                        }
                    }
                }
            } else if (Test.bFld) {
                i5 = (int)-2.778F;
            }
        } while (--i6 > 0);
        vMeth2_check_sum += i5 + s + i6 + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + by1 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        short s1=19398;
        int i11=-13, i12=-2, i13=225, i14=-32141, i15=-46494, i16=-9, i17=-67, i18=26481;
        byte by2=-18;
        double d1=81.20981, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -69.62862);

        vMeth2(-157, s1);
        for (i11 = 318; i11 > 6; --i11) {
            by2 <<= (byte)i12;
        }
        Test.iFld *= (int)d1;
        dArr = dArr;
        by2 = (byte)i11;
        Test.iFld *= 13540;
        i12 = i12;
        Test.instanceCount = i11;
        for (i13 = 11; i13 < 242; i13++) {
            i12 += i13;
            for (i15 = i13; i15 < 7; i15++) {
                for (i17 = 1; i17 > 1; --i17) {
                    Test.bFld = Test.bFld;
                    by2 += (byte)i16;
                }
            }
        }
        vMeth1_check_sum += s1 + i11 + i12 + by2 + Double.doubleToLongBits(d1) + i13 + i14 + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth() {

        int i1=196, i2=-4, i3=-121, i4=-149, i19=56451, i20=59598, i21=-25176, i22=-35572, iArr[]=new int[N],
            iArr2[]=new int[N];
        byte by=57;
        float f=0.608F, fArr[]=new float[N];
        short s2=-7268;
        double d2=0.76821;
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(iArr, 189);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, 0.652F);
        FuzzerUtils.init(iArr2, 156);

        Test.iFld = (--Test.iFld);
        for (i1 = 239; i1 > 1; i1 -= 2) {
            if (Test.bFld = (-1.751F >= ((i2 = i1) * (by * Test.instanceCount)))) continue;
        }
        Test.instanceCount = ((iArr[(Test.iFld >>> 1) % N] - (-(-(Test.instanceCount - Test.instanceCount)))) -
            Test.instanceCount);
        iArr[(Test.iFld >>> 1) % N] += Math.min(i2, (-Test.iFld) / ((28871 + (112 * (--i2))) | 1));
        for (i3 = 12; 249 > i3; i3++) {
            switch ((i3 * 5) + 6) {
            case 85:
                Test.instanceCount += (i3 * i4);
                i4 -= (int)((iArr[i3 + 1] + (by--)) + ((i1 * i1) - (f + i4)));
                vMeth1();
                break;
            case 249:
                for (i19 = 1; i19 < 7; ++i19) {
                    i20 *= i4;
                    Test.iFld = Test.iFld;
                }
            case 121:
                i2 += (i3 - f);
                Test.instanceCount = i20;
                break;
            case 224:
                i21 >>>= i2;
                break;
            case 183:
                Test.instanceCount += Test.iFld;
            case 179:
                iArr[i3] <<= i21;
            case 30:
                f -= by;
                break;
            case 80:
                s2 -= by;
                break;
            case 62:
                f += (i3 * i3);
            case 68:
                try {
                    Test.iFld = (176 / i20);
                    i4 = (iArr[i3 + 1] / 955080533);
                    iArr[i3] = (975403344 / iArr[i3]);
                } catch (ArithmeticException a_e) {}
                break;
            case 136:
                Test.bFld = Test.bFld;
                break;
            case 106:
            case 261:
                s2 |= (short)i1;
            case 235:
                i22 >>>= s2;
            case 269:
                i4 = i2;
                break;
            case 201:
                bArr[i3][i3 - 1] = Test.bFld;
                break;
            case 112:
                i21 -= 67;
            case 322:
                f += i3;
                break;
            case 114:
                iArr[i3 - 1] <<= i22;
                break;
            case 195:
                d2 -= Test.iFld;
                break;
            case 304:
                iArr[i3 - 1] *= (int)Test.instanceCount;
                break;
            case 28:
                Test.instanceCount = (long)f;
            case 295:
                fArr[i3] *= (float)d2;
            case 101:
                if (i21 != 0) {
                    vMeth_check_sum += i1 + i2 + by + i3 + i4 + Float.floatToIntBits(f) + i19 + i20 + i21 + s2 + i22 +
                        Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                break;
            case 250:
                iArr[i3 - 1] >>= -15;
                break;
            case 25:
                i2 = i2;
                break;
            case 177:
                i22 >>>= i1;
            case 91:
            case 276:
                by = (byte)Test.instanceCount;
                break;
            case 203:
                i21 -= (int)-4L;
                break;
            case 257:
                Test.lArrFld = Test.lArrFld;
                break;
            case 29:
                i21 = 219;
            case 111:
                Test.iFld += i3;
                break;
            case 27:
                iArr[i3] = (int)Test.instanceCount;
                break;
            case 173:
                i4 += i3;
                break;
            case 88:
                i22 = 16027;
                break;
            case 118:
                i20 = (int)Test.instanceCount;
                break;
            case 137:
                i20 += -7;
                break;
            case 229:
                Test.instanceCount -= i22;
            case 155:
                i21 *= (int)Test.instanceCount;
                break;
            case 222:
                Test.instanceCount += i3;
                break;
            case 233:
                i4 += i3;
                break;
            case 226:
                Test.iFld <<= (int)Test.instanceCount;
                break;
            case 50:
                iArr[i3] ^= (int)-3650158538L;
                break;
            case 170:
                d2 *= 3484;
                break;
            case 40:
                iArr2[i3 - 1] *= i1;
            case 178:
                i2 *= (int)f;
            case 230:
                i2 >>= (int)Test.instanceCount;
            case 305:
                Test.lArrFld[i3] = -146;
            case 208:
                i21 = 5;
                break;
            case 265:
                Test.instanceCount += Test.instanceCount;
                break;
            case 234:
                i2 = (int)Test.instanceCount;
            case 341:
                i22 >>= (int)Test.instanceCount;
                break;
            case 37:
                i2 += (int)Test.instanceCount;
                break;
            case 205:
                d2 += i4;
                break;
            case 148:
                Test.instanceCount *= 94L;
                break;
            case 345:
                Test.iFld ^= -141;
                break;
            case 35:
                f += i3;
                break;
            case 105:
                Test.lArrFld[i3 - 1] *= i22;
            case 260:
            case 110:
                i4 *= i19;
            case 354:
                d2 *= i2;
                break;
            case 175:
                i20 += (i3 - i2);
                break;
            case 330:
                Test.instanceCount &= -246;
                break;
            case 353:
                i2 = i22;
                break;
            case 132:
                if (i21 != 0) {
                    vMeth_check_sum += i1 + i2 + by + i3 + i4 + Float.floatToIntBits(f) + i19 + i20 + i21 + s2 + i22 +
                        Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
                    return;
                }
                break;
            case 126:
                i22 = i1;
                break;
            case 252:
                i4 += i3;
            case 312:
                f = i1;
                break;
            case 87:
                Test.instanceCount = Test.instanceCount;
                break;
            default:
                Test.instanceCount >>>= -61326;
            }
        }
        vMeth_check_sum += i1 + i2 + by + i3 + i4 + Float.floatToIntBits(f) + i19 + i20 + i21 + s2 + i22 +
            Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i23=23390, i24=0, i25=9, i26=199;
        float f1=-2.26F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-26076);

        for (int i : iArrFld) {
            vMeth();
            iArrFld = FuzzerUtils.int1array(N, (int)0);
            if (true) {
                try {
                    i = (i / 14);
                    i = (i % -21038);
                    i = (139 / i);
                } catch (ArithmeticException a_e) {}
                for (i23 = 3; i23 < 63; i23++) {
                    Test.lArrFld[i23 + 1] -= 26353;
                    Test.iFld += (((i23 * i23) + i) - i24);
                    for (i25 = i23; i25 < 2; i25++) {
                        Test.iFld %= (int)(i26 | 1);
                        f1 = sFld;
                        Test.iFld = Test.iFld;
                        sArr[i23 - 1] *= (short)-9743;
                        switch ((i23 % 4) + 27) {
                        case 27:
                            i24 += (-13 + (i25 * i25));
                            Test.iFld -= (int)Test.instanceCount;
                            sFld = (short)Test.iFld;
                            break;
                        case 28:
                            Test.lArrFld[i23 - 1] = Test.iFld;
                            i += (134 + (i25 * i25));
                            break;
                        case 29:
                            i26 ^= i25;
                            i26 >>= i23;
                            Test.instanceCount += i23;
                            dFld *= Test.byFld;
                            break;
                        case 30:
                            f1 *= i24;
                            i26 -= (int)Test.instanceCount;
                            Test.instanceCount += i;
                            break;
                        }
                        Test.instanceCount -= (long)dFld;
                        i = (int)Test.instanceCount;
                        i24 += (int)dFld;
                        Test.byFld += (byte)(i25 * i25);
                    }
                }
            } else if (Test.bFld) {
                fArrFld[(i26 >>> 1) % N] -= Test.instanceCount;
            } else {
                i24 <<= -10;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
