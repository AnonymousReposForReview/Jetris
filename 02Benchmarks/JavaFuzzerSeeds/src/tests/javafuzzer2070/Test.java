package tests.javafuzzer2070;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:36:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8L;
    public static double dFld=0.41235;
    public static int iFld=-51934;
    public static short sFld=16779;
    public static boolean bFld=true;
    public byte byFld=-18;
    public long lFld=0L;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i4=-68, i5=191, i6=10, i7=-26148, i8=-174, i9=-222, i10=-252, i11=4, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -45);
        FuzzerUtils.init(lArr, 1987541328L);

        Test.dFld += Test.iFld;
        l -= -26233;
        for (i4 = 1; i4 < 168; i4++) {
            iArr1[i4] = Test.iFld;
            lArr[i4] = Test.sFld;
            Test.iFld >>= Test.iFld;
            lArr[i4 - 1] = Test.iFld;
        }
        for (i6 = 13; i6 < 240; ++i6) {
            i5 += i4;
            for (i8 = 1; i8 < 7; i8 += 2) {
                i9 += (i8 * i6);
                for (i10 = i6; i10 < 3; ++i10) {
                    lArr[i8 - 1] &= Test.iFld;
                    i11 = Test.sFld;
                    i7 += i9;
                }
            }
        }
        vMeth1_check_sum += l + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i3=-214, i12=-16473;

        Test.instanceCount = (i3 *= i3);
        vMeth1(Test.instanceCount);
        i12 *= i12;
        long meth_res = i3 + i12;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=5, i1=-105, i2=-14, i13=240, i14=-9, iArr[]=new int[N];
        double d=68.28861;
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(iArr, -222);
        FuzzerUtils.init(sArr, (short)-2167);

        for (i = 6; i < 244; ++i) {
            iArr[i] *= i1;
        }
        i2 = 136;
        while (--i2 > 0) {
            switch ((i2 % 4) + 7) {
            case 7:
                iMeth();
                switch (((i2 % 5) * 5) + 19) {
                case 20:
                    for (d = 1; d < 12; ++d) {
                        i14 = 1;
                        while ((i14 += 3) < 2) {
                            sArr[(Test.iFld >>> 1) % N] = FuzzerUtils.short1array(N, (short)-6980);
                            Test.bFld = Test.bFld;
                            Test.iFld += (((i14 * i13) + i1) - i1);
                            iArr[i14 - 1] -= -160;
                            Test.sFld = Test.sFld;
                        }
                        i13 += Test.sFld;
                        Test.sFld *= (short)Test.instanceCount;
                    }
                    break;
                case 30:
                    Test.instanceCount = Test.sFld;
                    break;
                case 24:
                    iArr[i2] *= Test.iFld;
                    break;
                case 25:
                    iArr[i2 + 1] = i2;
                case 27:
                }
            case 8:
                Test.iFld -= -171;
            case 9:
                i1 = i1;
                break;
            case 10:
                if (Test.bFld) continue;
            default:
                i13 *= i1;
            }
        }
        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + i13 + i14 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i15=-1, i16=-7, i17=2, i18=-53317, i19=124, i20=92, i21=-184, i22=40, iArr2[]=new int[N];
        float f=66.167F;
        short sArr1[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, 193);
        FuzzerUtils.init(sArr1, (short)3905);
        FuzzerUtils.init(lArr1, 7726660035709469041L);

        vMeth();
        Test.iFld = Test.iFld;
        i15 = 1;
        do {
            Test.iFld -= byFld;
        } while (++i15 < 176);
        i16 = 1;
        do {
            Test.iFld -= i16;
            Test.iFld >>= i15;
            Test.iFld *= 24150;
            iArr2[i16 + 1] = Test.iFld;
            for (i17 = 121; i17 > 2; --i17) {
                f = i18;
                switch ((((i17 >>> 1) % 8) * 5) + 11) {
                case 31:
                    sArr1[i17 + 1] >>>= (short)i18;
                    for (i19 = i16; 2 > i19; i19++) {
                        Test.instanceCount -= (long)-1.170F;
                        i18 += (i19 + i20);
                    }
                    i18 += (10 + (i17 * i17));
                    break;
                case 42:
                    f = i16;
                    f -= Test.instanceCount;
                    break;
                case 50:
                    Test.iFld += (((i17 * Test.instanceCount) + Test.instanceCount) - i17);
                    for (i21 = 1; 2 > i21; i21++) {
                        Test.instanceCount = i18;
                        i20 += (((i21 * i21) + Test.instanceCount) - f);
                        Test.instanceCount -= -43388;
                        Test.instanceCount += (((i21 * i17) + lFld) - Test.instanceCount);
                        i18 -= (int)f;
                        f = 0.678F;
                        lArr1 = lArr1;
                        Test.sFld *= (short)i15;
                        Test.iFld = (int)lFld;
                    }
                    break;
                case 35:
                    iArr2[i17] *= 49599;
                    break;
                case 19:
                    lFld <<= -3689;
                    break;
                case 18:
                    i22 -= (int)f;
                    break;
                case 46:
                    try {
                        Test.iFld = (i16 % 83);
                        Test.iFld = (iArr2[i16 + 1] % 123475713);
                        iArr2[i17 + 1] = (i18 % 11846);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 33:
                    i20 = i21;
                default:
                    i18 >>= Test.iFld;
                }
            }
        } while (++i16 < 208);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
