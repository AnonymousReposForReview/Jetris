package tests.javafuzzer1706;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 02:12:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7016494972758600650L;
    public static float fFld=-2.217F;
    public static double dFld=-1.59621;
    public static int iArrFld[]=new int[N];
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.byArrFld, (byte)-78);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        int i5=-10, i6=-5099, i7=88, i8=47826, i9=10, i10=-237;
        double d1=-2.115487;

        i4 *= (int)Test.instanceCount;
        for (i5 = 6; i5 < 335; ++i5) {
            for (i7 = 1; i7 < 5; i7++) {
                i4 = (int)13L;
                if (true) {
                    i8 = i4;
                    i6 = (int)Test.instanceCount;
                    i6 -= i3;
                    for (i9 = 1; i9 < 2; i9++) {
                        i10 = i7;
                        i4 += (int)d1;
                        i8 += i8;
                        Test.instanceCount += i9;
                        i8 += (i9 * i9);
                        i8 += (((i9 * Test.instanceCount) + i3) - Test.instanceCount);
                    }
                } else {
                    i4 -= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1);
    }

    public static void vMeth(float f) {

        int i2=237, i11=12, i12=-210, i13=-1, i14=-64944, i15=-64, i16=39;
        double d=29.130542;
        float f1=71.665F;

        Test.iArrFld[(i2 >>> 1) % N] = Math.abs((int)((Test.instanceCount >> i2) * i2));
        i2 = (int)d;
        vMeth1(i2, i2);
        for (i11 = 4; i11 < 163; ++i11) {
            f1 *= i12;
            for (i13 = i11; i13 < 10; ++i13) {
                boolean b=false;
                if (b) continue;
                Test.instanceCount = i2;
                i2 += i13;
                for (i15 = 1; 1 < i15; i15--) {
                    Test.instanceCount *= Test.instanceCount;
                    i14 += i2;
                    Test.instanceCount += (i15 + i13);
                    Test.instanceCount = Test.instanceCount;
                }
            }
        }
        i12 *= i15;
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d) + i11 + i12 +
            Float.floatToIntBits(f1) + i13 + i14 + i15 + i16;
    }

    public static int iMeth() {

        int i17=-24, i18=-7, i19=-13, i20=-235, i21=-8, i22=-74, i23=-6, i24=61338;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 11L);

        vMeth(Test.fFld);
        for (i17 = 351; i17 > 11; i17 -= 3) {
            Test.iArrFld[i17 + 1] -= (int)Test.dFld;
            Test.byArrFld[i17] = (byte)Test.instanceCount;
            Test.iArrFld[i17] *= i18;
            Test.fFld += -9;
            for (i19 = 1; i19 < 14; ++i19) {
                Test.instanceCount += i17;
                i18 <<= i20;
                Test.iArrFld[i17] = (int)Test.instanceCount;
            }
            for (i21 = 1; 14 > i21; i21++) {
                i18 *= i22;
                for (i23 = 1; i23 < 2; i23++) {
                    Test.instanceCount *= i19;
                }
                lArr = FuzzerUtils.long1array(N, (long)5L);
            }
        }
        long meth_res = i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=144, i1=131, i25=4, i26=44219, i27=-11835, i28=252, i29=-17084, i30=-234;
        short s=26083;
        boolean b1=true, bArr[]=new boolean[N];
        long l=3L, lArr1[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr1, 282446884L);

        for (i = 136; i > 4; i--) {
            bArr[i + 1] = ((i1 = iMeth()) != i1);
            i1 += i;
            Test.fFld += i1;
            Test.instanceCount = Test.instanceCount;
            for (i25 = 8; i25 < 190; i25++) {
                i1 += (((i25 * Test.instanceCount) + i26) - s);
                for (i27 = i; 2 > i27; ++i27) {
                    b1 = b1;
                    Test.instanceCount += i27;
                    Test.fFld += (86 + (i27 * i27));
                    b1 = b1;
                    lArr1[i25 + 1] = i25;
                    Test.iArrFld[i27] <<= i28;
                    Test.instanceCount += (((i27 * Test.fFld) + Test.instanceCount) - l);
                    l += l;
                    i26 = 7;
                    Test.iArrFld[i25] += (int)Test.fFld;
                }
                for (i29 = 2; i25 < i29; --i29) {
                    i30 = i27;
                    i30 += i29;
                    i1 += (((i29 * i28) + l) - i26);
                }
                i26 = (int)Test.instanceCount;
                i26 = 3;
                Test.fFld = i1;
                Test.fFld -= i29;
                Test.fFld += i25;
                i28 -= s;
                i30 += (((i25 * i25) + Test.instanceCount) - i28);
            }
        }
        Test.fFld = i25;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
