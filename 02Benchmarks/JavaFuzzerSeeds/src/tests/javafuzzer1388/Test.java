package tests.javafuzzer1388;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:34:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public volatile int iFld=-60;
    public static short sFld=-26612;
    public static boolean bFld=false;
    public static float fFld=-2.421F;
    public double dFld=2.8331;
    public static volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)22);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i5) {

        float f=-1.516F, f1=-41.809F;
        int i6=-12, i7=-26, i8=116, i9=42756, i10=-8, i11=3, i12=977, i13=-8, i14=-12;

        Test.instanceCount *= i5;
        for (f = 4; f < 179; f++) {
            Test.instanceCount -= -3500691576L;
            for (i7 = (int)(f); i7 < 9; ++i7) {
                f1 = i7;
            }
            i6 = i5;
            i6 = 9;
            for (i9 = 1; 9 > i9; i9++) {
                i6 *= i6;
                i8 = (int)33119L;
            }
            for (i11 = 1; i11 < 9; i11++) {
                Test.sFld -= (short)i9;
                for (i13 = 2; i13 > f; i13 -= 2) {
                    i6 = i12;
                    i12 = 232;
                }
            }
        }
        long meth_res = i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 +
            i13 + i14;
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i4, short s) {

        int i15=-21521, i16=-93, i17=22001, i18=22, i19=3, i20=10, i21=0, iArr[]=new int[N];
        double d1=0.55409, d2=1.98110, dArr[][]=new double[N][N];
        byte by=-112;

        FuzzerUtils.init(dArr, 2.15936);
        FuzzerUtils.init(iArr, -9);

        switch (((i4 >>> 1) % 3) + 78) {
        case 78:
            i4 -= (int)lMeth1(i4);
            for (i15 = 12; 355 > i15; i15++) {
                for (d1 = i15; d1 < 5; ++d1) {
                    for (i18 = 1; 1 > i18; i18++) {
                        i16 = (int)Test.instanceCount;
                        if (Test.bFld) continue;
                        i16 += (((i18 * i18) + by) - Test.instanceCount);
                    }
                    d2 = i4;
                    Test.instanceCount = -4201388192L;
                    for (i20 = 1; i20 < 1; ++i20) {
                        dArr[i15][(int)(d1 + 1)] *= i4;
                        i17 = (int)230L;
                        iArr[(int)(d1 + 1)] -= i4;
                        i19 += (((i20 * i15) + Test.fFld) - i15);
                    }
                }
            }
            break;
        case 79:
            Test.byArrFld[(i16 >>> 1) % N] = (byte)i15;
        case 80:
            Test.instanceCount *= i18;
            break;
        default:
            i21 = i20;
        }
        vMeth_check_sum += i4 + s + i15 + i16 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + by +
            Double.doubleToLongBits(d2) + i20 + i21 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i, double d, long l) {

        long l1=-30868L;
        int i1=14, i2=-193, i3=-188, i22=3, i23=126, i24=179;
        boolean b=true, bArr[]=new boolean[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr1, 120.49407);

        for (l1 = 5; l1 < 185; l1++) {
            b = ((b = bArr[(int)(l1 - 1)]) | bArr[(int)(l1)]);
            i <<= -5;
            for (i2 = (int)(l1); i2 < 9; ++i2) {
                vMeth(i1, Test.sFld);
                if (Test.bFld) break;
                for (i22 = 1; i22 < 1; i22++) {
                    l += l;
                    i24 = i1;
                    l = i24;
                    i += i22;
                    i3 += -11;
                    l = i2;
                    dArr1[i22 + 1] *= i22;
                    i24 = (int)Test.fFld;
                }
            }
        }
        long meth_res = i + Double.doubleToLongBits(d) + l + l1 + i1 + (b ? 1 : 0) + i2 + i3 + i22 + i23 + i24 +
            FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i25=79, i26=-5, i27=1, i28=34126, i29=-38402, i30=-12, iArr1[]=new int[N];
        float f2=2.458F;
        byte by1=94;
        double dArr2[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 7);
        FuzzerUtils.init(dArr2, 127.73285);
        FuzzerUtils.init(lArr, -7998240804889808682L);

        iFld = (int)(lMeth(iFld, dFld, Test.instanceCount) * 80.280F);
        iFld -= iFld;
        iFld *= iFld;
        iArr1 = iArr1;
        iFld |= -8;
        Test.instanceCount >>= iFld;
        for (i25 = 7; 233 > i25; i25++) {
            i26 -= (int)Test.instanceCount;
            Test.byArrFld[i25 - 1] >>= (byte)iFld;
            for (i27 = 2; 111 > i27; ++i27) {
                for (i29 = 1; i29 < 2; i29++) {
                    switch (((i27 >>> 1) % 3) + 82) {
                    case 82:
                        f2 = 3266L;
                        i28 <<= iFld;
                        i28 -= i27;
                        dArr2[i29] = i26;
                    case 83:
                        iArr1[i27] >>= (int)Test.instanceCount;
                        Test.instanceCount -= by1;
                        if (Test.bFld) break;
                        iArr1 = iArr1;
                        break;
                    case 84:
                        i28 *= i30;
                    default:
                        Test.instanceCount *= Test.instanceCount;
                    }
                    lArr = lArr;
                    Test.bFld = Test.bFld;
                    Test.instanceCount *= -129;
                    if (false) {
                        Test.instanceCount = Test.instanceCount;
                    } else if (Test.bFld) {
                        Test.sFld += (short)(i29 - Test.instanceCount);
                    }
                    if (Test.bFld) break;
                }
                try {
                    i30 = (i27 % -65);
                    iFld = (i27 / i25);
                    iFld = (-98 / iArr1[i27]);
                } catch (ArithmeticException a_e) {}
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
