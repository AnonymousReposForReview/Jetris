package tests.javafuzzer661;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:00 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=3967816909L;
    public static short sFld=7017;
    public static int iFld=-9;
    public volatile float fFld=123.95F;
    public byte byFld=-9;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static volatile boolean bArrFld[]=new boolean[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.452F);
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, -200);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i10=7, i11=-64924, i12=-72, i13=3, i14=0;
        float f1=53.190F;
        double d2=-95.67658, dArr[]=new double[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)17860);
        FuzzerUtils.init(dArr, -81.83982);

        for (i10 = 10; i10 < 333; i10++) {
            i11 += (((i10 * Test.sFld) + Test.instanceCount) - i10);
            for (i12 = i10; 5 > i12; ++i12) {
                byte by=-127;
                Test.instanceCount >>= i11;
                by = (byte)-104.188F;
                i13 -= (int)-116.77095;
                i11 = (int)f1;
                for (d2 = 1; d2 < 1; d2 += 3) {
                    i14 += (int)((long)d2 ^ Test.instanceCount);
                    Test.instanceCount += Test.instanceCount;
                    i11 += (int)4420355436083228922L;
                    sArr = sArr;
                    f1 -= by;
                    dArr[i10 + 1] += Test.sFld;
                    Test.fArrFld[i10 - 1] -= i10;
                }
            }
        }
        vMeth1_check_sum += i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + i14 +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l, double d1, int i9) {

        int i15=160, i16=112, i17=-59328, i18=3335, i19=217, i20=-10;
        byte by1=-47;
        boolean b1=false;

        vMeth1();
        i9 = (int)-2L;
        for (i15 = 19; i15 < 384; ++i15) {
            if (b1) {
                l = i9;
                for (i17 = i15; 5 > i17; i17++) {
                    l = i17;
                    i9 = -38;
                    switch ((i17 % 3) + 81) {
                    case 81:
                        i18 += (i17 * i16);
                        for (i19 = 1; i19 < 1; i19++) {
                            by1 += (byte)(i19 * i19);
                            i20 += (((i19 * i17) + i16) - i19);
                        }
                        i20 += (int)28.151F;
                    case 82:
                        d1 = i18;
                        break;
                    case 83:
                        d1 = i19;
                        break;
                    }
                }
                vMeth_check_sum += l + Double.doubleToLongBits(d1) + i9 + i15 + i16 + i17 + i18 + i19 + i20 + by1 + (b1
                    ? 1 : 0);
                return;
            } else if (true) {
                d1 = i16;
            } else {
                b1 = b1;
            }
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d1) + i9 + i15 + i16 + i17 + i18 + i19 + i20 + by1 + (b1 ? 1 :
            0);
    }

    public static long lMeth(int i1, int i2, int i3) {

        int i4=-27663, i5=1657, i6=27182, i7=-51463, i8=-228, i21=-39074, i22=-12837;
        float f=-77.760F;
        double d=53.95179, dArr1[]=new double[N];
        boolean b=true;

        FuzzerUtils.init(dArr1, -75.115917);

        try {
            for (i4 = 14; 244 > i4; i4++) {
                for (f = 1; f < 7; ++f) {
                    d -= (i5 + d);
                    for (i7 = 1; i7 < 2; i7++) {
                        i2 %= -9;
                        if (b = (b = ((f - 67) >= i5))) continue;
                        vMeth(Test.instanceCount, d, i1);
                        i8 += (-64132 + (i7 * i7));
                    }
                    Test.sFld -= (short)i8;
                    i1 = (int)f;
                    for (i21 = 1; i21 < 2; i21 += 3) {
                        i6 = (int)f;
                        i5 -= 14116;
                        Test.instanceCount <<= Test.instanceCount;
                    }
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i5 -= -7;
        }
        finally {
            i8 += 12;
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i6 + Double.doubleToLongBits(d) + i7 + i8 +
            (b ? 1 : 0) + i21 + i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-47206, i23=44186, i24=-28945, i25=29830, i26=34604, i27=7, i28=149, i29=-61233, i30=3, i31=26723,
            i32=-22011;

        i = (int)lMeth(i, i, -10);
        Test.iFld = i;
        i23 = 1;
        do {
            for (i24 = 190; i24 > 2; i24--) {
                i26 = 1;
                do {
                    Test.iFld += (((i26 * fFld) + i23) - Test.instanceCount);
                    Test.instanceCount += (((i26 * Test.sFld) + fFld) - i24);
                    i25 = i;
                    Test.bArrFld = Test.bArrFld;
                    byFld *= (byte)20421;
                    if (bFld) continue;
                    if (bFld) break;
                    i25 = i25;
                } while (++i26 < 2);
                i -= i23;
            }
            for (i27 = 5; i27 < 190; i27++) {
                i28 -= (int)fFld;
                for (i29 = i27; i29 < 2; ++i29) {
                    Test.iFld = 1;
                    try {
                        i30 = (52 / i29);
                        i28 = (-822464300 % i25);
                        i25 = (14329 % i27);
                    } catch (ArithmeticException a_e) {}
                    i25 = i25;
                    fFld -= Test.instanceCount;
                }
                for (i31 = i23; i31 < 2; ++i31) {
                    i += i25;
                    Test.iFld = (int)Test.instanceCount;
                    Test.iArrFld[i31][i31 + 1] >>= i28;
                }
                if (bFld) break;
                fFld = i31;
                fFld += i32;
                if (bFld) continue;
                Test.instanceCount *= i28;
            }
        } while (++i23 < 132);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
