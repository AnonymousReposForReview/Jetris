package tests.javafuzzer2347;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 13:04:22 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-48784L;
    public static float fFld=-92.393F;
    public double dFld=-2.67850;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, long l1) {

        int i2=10, i3=-9, i4=-6, i5=31, i6=205, i7=-22770, iArr[]=new int[N], iArr1[][]=new int[N][N];
        short s1=2311;
        byte by=10;

        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(iArr1, -40737);

        for (i2 = 14; 255 > i2; i2++) {
            for (i4 = 1; i4 < 7; ++i4) {
                Test.instanceCount &= i4;
                switch ((i2 % 8) + 124) {
                case 124:
                    i5 = 32427;
                case 125:
                    iArr[i4 - 1] = i5;
                    break;
                case 126:
                    i5 *= i4;
                    i3 ^= 156;
                    break;
                case 127:
                    s1 *= (short)-4L;
                    break;
                case 128:
                    for (i6 = 1; i6 < 2; i6++) {
                        by += (byte)144;
                        i7 >>= i5;
                        iArr[(i3 >>> 1) % N] += (int)Test.fFld;
                        try {
                            i5 = (i7 % -31512);
                            iArr[i2] = (22017 % iArr[i2]);
                            i3 = (993775384 % i3);
                        } catch (ArithmeticException a_e) {}
                        iArr1 = FuzzerUtils.int2array(N, (int)227);
                    }
                    break;
                case 129:
                case 130:
                case 131:
                    iArr = iArr1[i2];
                    break;
                }
            }
        }
        vMeth2_check_sum += l + l1 + i2 + i3 + i4 + i5 + s1 + i6 + i7 + by + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i1) {

        int i8=13, i9=41839, i10=36214;
        boolean b=false;
        byte by1=10;

        vMeth2(Test.instanceCount, Test.instanceCount);
        i8 = 1;
        do {
            Test.instanceCount *= Test.instanceCount;
            i1 <<= i8;
            if (b) continue;
        } while (++i8 < 268);
        for (i9 = 5; 352 > i9; ++i9) {
            i10 |= by1;
            i1 &= i8;
            i1 = i1;
        }
        vMeth1_check_sum += i1 + i8 + (b ? 1 : 0) + i9 + i10 + by1;
    }

    public static void vMeth(short s, double d, int i) {


        vMeth1(i);
        vMeth_check_sum += s + Double.doubleToLongBits(d) + i;
    }

    public void mainTest(String[] strArr1) {

        int i11=164;

        vMeth((short)(17811), dFld, i11);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
