package tests.javafuzzer2684;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:41:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1110808355L;
    public static short sFld=31873;
    public float fFld=-2.818F;
    public byte byFld=35;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public static int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 16269L);
        FuzzerUtils.init(Test.iArrFld, 61);
        FuzzerUtils.init(Test.iArrFld1, -7);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4, float f) {

        int i5=-64598, i6=-200, i7=6, i8=-18235, i9=21, i10=51, i11=38982, iArr[]=new int[N];
        double d1=-76.106164, d2=-50.6634;

        FuzzerUtils.init(iArr, 12);

        iArr[(39086 >>> 1) % N] -= i4;
        for (i5 = 164; i5 > 2; --i5) {
            Test.instanceCount = i3;
            d1 += i4;
        }
        for (i7 = 1; i7 < 252; i7++) {
            i6 >>= i3;
            i3 -= 46768;
            iArr[(i6 >>> 1) % N] = i8;
            for (d2 = 1; 6 > d2; d2++) {
                byte by=126;
                for (i10 = 1; i10 < 2; i10++) {
                    Test.lArrFld[i10] -= (long)d1;
                    Test.sFld -= (short)Test.instanceCount;
                }
                Test.instanceCount >>= 64938;
                iArr[i7 + 1] -= (int)Test.instanceCount;
                i3 = by;
            }
        }
        vMeth1_check_sum += i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 +
            Double.doubleToLongBits(d2) + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1, double d, int i2) {

        float f1=-61.546F;
        long l=-160L;
        byte by1=115;
        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 128);

        vMeth1(i2, i1, f1);
        iArr1[(i2 >>> 1) % N] = i2;
        f1 += Test.instanceCount;
        switch (((i2 >>> 1) % 1) + 8) {
        case 8:
            iArr1[(i2 >>> 1) % N] <<= i1;
        default:
            switch (((i2 >>> 1) % 9) + 6) {
            case 6:
                Test.instanceCount = Test.instanceCount;
                i2 >>= (int)Test.instanceCount;
                break;
            case 7:
                i2 -= i1;
                l = 1;
                while (++l < 165) {
                    Test.sFld += (short)7375L;
                    Test.sFld = (short)14;
                    i2 += 11;
                }
                by1 = (byte)i2;
                d = f1;
            case 8:
                i1 = Test.sFld;
            case 9:
                i2 *= (int)l;
                break;
            case 10:
            case 11:
                i1 -= i2;
                break;
            case 12:
                Test.sFld = by1;
                break;
            case 13:
                iArr1[(i1 >>> 1) % N] *= i1;
            case 14:
                iArr1[(i2 >>> 1) % N] += (int)f1;
                break;
            default:
                i1 -= (int)10L;
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + i2 + Float.floatToIntBits(f1) + l + by1 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i) {

        double d3=0.79725;
        int i12=-8045, i13=10, i14=-122, i15=195, i16=-9, i17=-6204;
        float f2=65.843F;

        i = Math.max(i--, -iMeth(i, d3, i));
        d3 -= i;
        i >>= i;
        Test.instanceCount += i;
        for (i12 = 13; i12 < 258; i12 += 3) {
            Test.iArrFld[i12] >>= (int)Test.instanceCount;
            i <<= 207;
            i13 += i13;
        }
        f2 += i;
        try {
            for (i14 = 5; 246 > i14; i14++) {
                for (i16 = 1; 7 > i16; ++i16) {
                    i13 -= i17;
                    Test.instanceCount = (long)f2;
                    i13 *= i15;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i17 <<= i14;
        }
        vMeth_check_sum += i + Double.doubleToLongBits(d3) + i12 + i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 +
            i17;
    }

    public void mainTest(String[] strArr1) {

        int i18=-6, i19=50656, i20=7, i21=6, i22=1805, i23=5;
        double d4=98.39379, d5=-1.69670;
        boolean b=true, bArr[]=new boolean[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 1.325F);
        FuzzerUtils.init(bArr, true);

        vMeth(i18);
        Test.iArrFld1 = Test.iArrFld1;
        for (i19 = 10; i19 < 224; ++i19) {
            i20 += (i19 * fFld);
            for (d4 = 7; d4 < 117; ++d4) {
                for (i22 = 2; 1 < i22; i22 -= 2) {
                    Test.instanceCount |= i22;
                    d5 += d5;
                    Test.instanceCount += i22;
                    switch ((int)((d4 % 7) + 95)) {
                    case 95:
                        Test.instanceCount += (i22 * i22);
                        break;
                    case 96:
                        d5 += d4;
                        Test.instanceCount += (((i22 * i23) + fFld) - i18);
                        break;
                    case 97:
                        fArr[i19][(int)(d4)] = Test.instanceCount;
                        byFld = (byte)-29398;
                        i23 += (((i22 * i23) + Test.instanceCount) - i22);
                        i23 -= (int)Test.instanceCount;
                        break;
                    case 98:
                        i18 -= i20;
                        i23 *= i21;
                        i21 += (int)fFld;
                        Test.iArrFld1[i19 - 1][(int)(d4)] = (int)-8L;
                        break;
                    case 99:
                        if (false) {
                            i23 <<= -14;
                            fArr[(int)(d4)] = fArr[i22 + 1];
                        } else if (b) {
                            bArr[i19 - 1] = b;
                            i23 = (int)Test.instanceCount;
                            d5 *= i21;
                            d5 += Test.instanceCount;
                        } else if (b) {
                        }
                        d5 += Test.instanceCount;
                        fFld -= 320044984L;
                        break;
                    case 100:
                        Test.instanceCount += (i22 * i22);
                        break;
                    case 101:
                        if (true) break;
                    default:
                        fFld += i19;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
