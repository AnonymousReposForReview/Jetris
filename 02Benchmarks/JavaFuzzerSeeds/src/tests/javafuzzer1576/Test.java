package tests.javafuzzer1576;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:13:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2921579977520619233L;
    public static float fFld=2.415F;
    public static double dFld=89.14727;
    public boolean bFld=true;
    public volatile float fArrFld[][]=new float[N][N];
    public byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i4, int i5, float f) {

        int i6=13, i7=14, i8=-20402, i9=54, i10=-48803, i11=-2;
        byte by=-108;
        double d=-88.117914;
        short s=25647;

        i4 = i5;
        for (i6 = 4; i6 < 254; ++i6) {
            i4 += i6;
            switch (((i6 % 2) * 5) + 76) {
            case 82:
                Test.instanceCount = Test.instanceCount;
                for (i8 = 1; i8 < 7; ++i8) {
                    Test.instanceCount = Test.instanceCount;
                    i5 += i8;
                    i9 += i8;
                    for (i10 = 1; i10 < 2; i10++) {
                        by = (byte)76;
                        if (false) {
                            f = (float)d;
                            Test.fFld -= Test.fFld;
                        }
                        i5 += i10;
                    }
                }
                break;
            case 84:
                i7 -= (int)Test.fFld;
                break;
            default:
                s += (short)(i6 - Test.instanceCount);
            }
        }
        long meth_res = i4 + i5 + Float.floatToIntBits(f) + i6 + i7 + i8 + i9 + i10 + i11 + by +
            Double.doubleToLongBits(d) + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i=4, i1=-7, i2=56, i3=-55451;
        boolean b=false;
        byte by1=15;
        double d1=52.28794;

        for (i = 330; i > 15; i--) {
            i1 += (int)(((i1 - -8930265253197397955L) - Math.abs(-4)) + i1);
            for (i2 = 1; 5 > i2; i2++) {
                Test.fFld += ((iMeth(i3, i2, -37.824F) * i) + i);
                Test.fFld = i2;
                if (b) continue;
                i3 += (i2 * i2);
                by1 -= (byte)Test.fFld;
            }
            i1 *= i1;
            if (b) break;
            i1 -= i1;
            i3 += i;
            i1 += (int)Test.instanceCount;
            Test.instanceCount = i1;
            d1 = i2;
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + by1 + Double.doubleToLongBits(d1);
    }

    public static void vMeth() {

        int i12=-36834, i13=31827, i14=-196, i15=-433, i16=-242, i17=-46547, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -7);

        vMeth1();
        for (i12 = 2; i12 < 172; i12 += 2) {
            byte by2=113;
            i13 += (((i12 * i12) + i12) - i13);
            for (i14 = 1; i14 < 18; i14++) {
                i15 += (int)Test.instanceCount;
                iArr = iArr;
                i13 -= i13;
            }
            Test.dFld = i15;
            i15 = i14;
            i13 &= by2;
            i15 = i14;
            for (i16 = 1; i16 < 18; i16++) {
                try {
                    i15 = (1662367985 / i16);
                    i15 = (iArr[i16] / 127);
                    iArr[i12] = (i12 / i13);
                } catch (ArithmeticException a_e) {}
            }
            i17 <<= i15;
        }
        i13 = i16;
        vMeth_check_sum += i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i18=-116, i19=9, i20=92, i21=1, i22=55944, i23=21248, iArr1[]=new int[N];
        long l=50957L;
        byte by3=104;
        short s1=8199, s2=10808;

        FuzzerUtils.init(iArr1, -49171);

        vMeth();
        for (i18 = 12; i18 < 335; ++i18) {
            i19 >>>= (int)Test.instanceCount;
            iArr1[i18] = -1682;
            for (l = 1; l < 78; l++) {
                i21 = (int)-2116328663872287501L;
                switch (((i18 % 7) * 5) + 108) {
                case 127:
                    i20 += (7 + (l * l));
                    for (i22 = 2; i22 > 1; i22--) {
                        switch ((int)(((l % 6) * 5) + 114)) {
                        case 138:
                            i21 += (((i22 * i21) + i22) - i20);
                            i19 = (int)Test.instanceCount;
                            i19 = (int)l;
                            break;
                        case 120:
                            i19 -= i22;
                        case 132:
                            i23 *= (int)l;
                            i21 = -6;
                            i20 = i19;
                            break;
                        case 122:
                            switch ((i22 % 5) + 65) {
                            case 65:
                                i20 += i19;
                                if (bFld) {
                                    i21 <<= -5;
                                    i23 <<= (int)l;
                                    if (false) break;
                                    switch ((int)((l % 6) + 95)) {
                                    case 95:
                                        i21 += i19;
                                        fArrFld[i22 + 1][i18 + 1] *= Test.instanceCount;
                                        break;
                                    case 96:
                                        Test.fFld += i22;
                                        i19 = i21;
                                        break;
                                    case 97:
                                        by3 -= (byte)Test.fFld;
                                        i20 *= (int)Test.dFld;
                                        break;
                                    case 98:
                                        i20 += (int)l;
                                        break;
                                    case 99:
                                        byArrFld[i18] ^= (byte)Test.instanceCount;
                                        break;
                                    case 100:
                                        Test.fFld = s1;
                                        break;
                                    }
                                }
                                break;
                            case 66:
                                if (bFld) break;
                                break;
                            case 67:
                                s1 = s1;
                                break;
                            case 68:
                                i20 -= (int)-122.208F;
                                break;
                            case 69:
                                Test.fFld += (((i22 * l) + i20) - i20);
                            default:
                                Test.instanceCount -= -1L;
                            }
                            break;
                        case 116:
                            Test.instanceCount += 50822;
                            break;
                        case 144:
                        }
                    }
                    break;
                case 117:
                    Test.dFld = i18;
                    break;
                case 124:
                    Test.fFld = i18;
                    break;
                case 130:
                    Test.instanceCount = -2;
                    break;
                case 135:
                    i19 >>>= (int)-13L;
                    break;
                case 141:
                    iArr1[i18 + 1] += i23;
                    break;
                case 142:
                    i21 += (int)l;
                default:
                    s2 += (short)i21;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
