package tests.javafuzzer497;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:41:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1632341313L;
    public static int iFld=-8336;
    public static float fFld=79.997F;
    public static double dFld=-42.80302;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];
    public volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -159);
        FuzzerUtils.init(Test.lArrFld, 13L);
    }

    public static long fMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i7=-8, i8=33424, i9=-13;

        Test.iFld |= (int)Test.instanceCount;
        for (i7 = 10; i7 < 274; i7++) {
            i9 = 6;
            while (--i9 > 0) {
                Test.iFld = (int)Test.instanceCount;
            }
        }
        Test.iFld = 56043;
        Test.instanceCount -= Test.iFld;
        long meth_res = i7 + i8 + i9;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(int i6) {

        int i10=-28388, i11=-12, i12=-64324, i13=48463, i14=230, i15=9, i16=115;

        Test.iFld = (int)(-(Float.intBitsToFloat(Test.iFld) + lMeth()));
        Test.instanceCount -= Test.iFld;
        for (i10 = 285; 9 < i10; --i10) {
            Test.instanceCount = i10;
            for (i12 = 1; i12 < 6; ++i12) {
                i11 += (((i12 * i11) + Test.instanceCount) - i10);
                for (i14 = 1; i14 < 2; i14++) {
                    Test.iArrFld[i12] += (int)Test.dFld;
                }
                Test.lArrFld[i12 + 1][i12] -= 88;
                i16 -= (int)Test.dFld;
            }
            i13 += (i10 - Test.fFld);
            i6 &= (int)Test.instanceCount;
            i6 += (int)1.114593;
            i11 <<= i14;
        }
        i6 *= i13;
        long meth_res = i6 + i10 + i11 + i12 + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static float fMeth() {

        double d=-1.109318;
        int i=-46402, i1=12165, i2=-5, i3=22, i4=-6, i5=9;

        Test.iFld >>= (int)(-((Test.iFld--) >>> (long)(Test.iFld * d)));
        for (i = 6; i < 163; ++i) {
            Test.instanceCount += (i * Test.fFld);
            Test.fFld += i;
            Test.fFld += Test.iFld;
            for (i2 = 10; i < i2; --i2) {
                i1 *= (int)(-d);
                for (i4 = 1; i4 < 1; i4++) {
                    try {
                        Test.iArrFld[i4] = (i5 / Test.iFld);
                        i3 = (Test.iArrFld[i2 + 1] % 1);
                        Test.iArrFld[i4] = (1593516208 % i4);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount -= ((i3--) + i5);
                    switch ((i % 2) + 53) {
                    case 53:
                        Test.instanceCount += (i5 * ((i + Test.instanceCount) + (Test.instanceCount * Test.iFld)));
                        Test.fFld += iMeth(Test.iFld);
                        break;
                    case 54:
                        Test.iArrFld = Test.iArrFld;
                        Test.fFld -= i2;
                        break;
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i4 + i5;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=98.964F;
        int i17=-65346, i18=-27417, i19=-1, i20=-13148, i21=-224, i22=-121, i23=-8, i24=-41753, i25=64599, i26=-5,
            i27=-12;
        double d1=-2.76555;
        short s=4587;

        f -= ((fMeth() + Test.iFld) - Test.iFld);
        for (i17 = 5; i17 < 134; i17++) {
            Test.iFld >>>= (int)Test.instanceCount;
        }
        for (i19 = 10; 315 > i19; ++i19) {
            for (i21 = 3; i21 < 82; i21++) {
                Test.instanceCount += 2;
                Test.iFld += (i21 | Test.instanceCount);
                i20 = i21;
                d1 = 1;
                while (++d1 < 2) {
                    Test.iFld = -61146;
                    s -= (short)Test.iFld;
                    i22 -= (int)Test.instanceCount;
                    Test.instanceCount = -26155;
                    Test.iArrFld[i21 - 1] >>= (int)2357094763120251335L;
                }
                if (true) break;
                i23 = 1;
                do {
                    i24 += (int)Test.instanceCount;
                    Test.lArrFld[i23][i21 + 1] = i18;
                    Test.lArrFld[i19 - 1] = Test.lArrFld[i21];
                } while (++i23 < 2);
                Test.fFld = f;
            }
            Test.dFld += i22;
            Test.iArrFld[i19 - 1] = (int)f;
            i25 = 1;
            while (++i25 < 82) {
                Test.instanceCount = i18;
                Test.iArrFld[i19] += i21;
                Test.fFld = -58;
            }
            for (i26 = i19; 82 > i26; i26++) {
                dArrFld[i26 - 1] = i21;
                i22 = i21;
                i18 = i17;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  iMeth ->  iMeth fMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
