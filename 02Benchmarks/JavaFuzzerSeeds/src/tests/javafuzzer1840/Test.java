package tests.javafuzzer1840;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:22:23 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-40579L;
    public static float fFld=1.813F;
    public static byte byFld=-10;
    public static short sArrFld[][]=new short[N][N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-13607);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, byte by, int i9) {

        int i10=-11331, i11=-231, i12=-5, i13=12, i14=-26099, i15=-58671, iArr[]=new int[N];
        float f1=69.592F;
        boolean b1=false;
        short s=-18428;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 126L);
        FuzzerUtils.init(iArr, -9);

        for (i10 = 18; i10 < 343; i10++) {
            double d1=2.95247;
            Test.instanceCount <<= i9;
            if (b1) {
                switch (((i9 >>> 1) % 1) + 11) {
                case 11:
                    switch ((((i10 >>> 1) % 6) * 5) + 37) {
                    case 60:
                        Test.instanceCount = i9;
                        for (f1 = 1; f1 < 5; f1++) {
                            Test.instanceCount *= Test.instanceCount;
                            i13 = 2;
                            do {
                                Test.instanceCount -= i12;
                                Test.fFld = i8;
                                lArr1[i10 + 1] |= i9;
                            } while (--i13 > 0);
                            for (i14 = 1; i14 < 2; ++i14) {
                                Test.fFld = by;
                                i12 = (int)Test.instanceCount;
                            }
                        }
                        break;
                    case 59:
                        i12 ^= i14;
                        break;
                    case 44:
                        iArr[i10 - 1] |= i8;
                    case 41:
                        if (b1) break;
                        break;
                    case 48:
                        Test.fFld -= (float)d1;
                        break;
                    case 61:
                        s = (short)-4442;
                        break;
                    }
                default:
                }
            }
        }
        vMeth2_check_sum += i8 + by + i9 + i10 + i11 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + (b1 ? 1 : 0)
            + s + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i, double d, int i1) {

        int i2=-28893, i3=-57045, i4=-15871, i5=-144, i6=-9, i7=-19363;
        float f=-113.95F;
        long l=10L, lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -14L);
        FuzzerUtils.init(dArr, 0.75583);

        i = (int)((-(i1 - Test.fFld)) + ((i << i) * Test.instanceCount));
        for (i2 = 9; i2 < 197; i2++) {
            i4 = 1;
            do {
                i3 -= i3;
            } while (++i4 < 8);
            lArr = (lArr = lArr);
            for (f = i2; 8 > f; f++) {
                for (i6 = 1; i6 < 1; ++i6) {
                    Test.instanceCount >>= i5;
                    l += (i6 * i6);
                    i -= Math.min((int)(-(d - i7)), Math.abs(i3) * i4);
                    vMeth2(i3, Test.byFld, i6);
                    i3 *= (int)Test.instanceCount;
                    dArr[i6] -= Test.byFld;
                    d = -8;
                    Test.sArrFld[(int)(f + 1)][i2] += (short)l;
                }
            }
        }
        vMeth1_check_sum += i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + Float.floatToIntBits(f) + i5 + i6 + i7
            + l + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void vMeth(boolean b) {

        int i16=-34393, i17=17725, i18=63629, i19=-16345, i20=1;
        double d2=-2.120042;
        short s1=31106;
        float fArr[]=new float[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(fArr, 1.778F);
        FuzzerUtils.init(lArr2, 955712341L);

        vMeth1(i16, d2, i16);
        i17 = 1;
        while (++i17 < 216) {
            for (i18 = 1; i18 < 7; i18++) {
                i16 = 23969;
                Test.byFld = (byte)Test.instanceCount;
            }
        }
        s1 >>>= (short)Test.instanceCount;
        for (float f2 : fArr) {
            i19 = i17;
            if (b) {
                Test.instanceCount >>>= -61085;
                f2 += (float)d2;
                Test.byFld -= (byte)i18;
                i20 = 1;
                do {
                    f2 += (i20 + i18);
                    lArr2[i20 + 1] += s1;
                } while (++i20 < 4);
            } else {
                i19 = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i16 + Double.doubleToLongBits(d2) + i17 + i18 + i19 + s1 + i20 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        boolean b2=false;
        int i21=-12, i22=58677, i23=-14, i24=131, i25=9317, i26=3;
        double d3=-100.26169, dArr1[]=new double[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(dArr1, -39.121282);
        FuzzerUtils.init(fArr1, 0.560F);

        vMeth(b2);
        i21 <<= i21;
        for (i22 = 18; i22 < 332; i22++) {
            for (i24 = 4; i24 < 80; ++i24) {
                i23 = (int)Test.instanceCount;
                i25 += (((i24 * Test.fFld) + Test.instanceCount) - i25);
                switch ((i24 % 10) + 54) {
                case 54:
                    d3 -= i23;
                    i26 = 1;
                    do {
                        i23 += i26;
                        switch (((i26 % 2) * 5) + 59) {
                        case 65:
                            dArr1[i26] -= -6703;
                            break;
                        case 60:
                            i21 = (int)Test.instanceCount;
                            break;
                        }
                        i21 *= i25;
                        switch ((i24 % 6) + 44) {
                        case 44:
                            fArr1 = fArr1;
                            i25 += (i26 - i26);
                            i21 = i26;
                            break;
                        case 45:
                            i25 = i22;
                            i25 ^= i21;
                            i21 >>= 14;
                            break;
                        case 46:
                            i25 += (-150 + (i26 * i26));
                            break;
                        case 47:
                            i23 <<= i22;
                            Test.instanceCount <<= i25;
                            Test.instanceCount *= i26;
                            i21 >>= i22;
                            break;
                        case 48:
                            i25 += (int)(8782367835810077939L + (i26 * i26));
                            Test.fFld = Test.fFld;
                            i25 += i24;
                        case 49:
                            i25 -= (int)204L;
                            break;
                        default:
                            Test.fFld -= i22;
                        }
                    } while (++i26 < 2);
                    break;
                case 55:
                    i25 += (i24 | i22);
                case 56:
                    iArrFld[i22] = (int)Test.instanceCount;
                case 57:
                    i21 = (int)Test.instanceCount;
                    break;
                case 58:
                    i25 -= i24;
                    break;
                case 59:
                    i25 += (((i24 * i22) + i24) - Test.fFld);
                case 60:
                case 61:
                    Test.instanceCount -= i22;
                    break;
                case 62:
                case 63:
                    i21 += (i24 * i24);
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
