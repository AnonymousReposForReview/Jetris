package tests.javafuzzer2439;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:38:51 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static double dFld=0.21215;
    public short sFld=3575;
    public volatile byte byFld=-66;
    public static float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -114.452F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i2=203, i3=-23, i4=-17258, i5=154, i6=-9, i7=9068, i8=6, i9=-13, iArr1[]=new int[N];
        short s=11875;
        float f=-120.458F;

        FuzzerUtils.init(iArr1, 2);

        for (i2 = 9; i2 < 199; i2++) {
            i3 = i3;
            for (i4 = 1; i4 < 8; ++i4) {
                i5 = 105;
                iArr1[i2 - 1] = i5;
                i3 -= 52767;
                iArr1[i4] = (int)Test.instanceCount;
            }
            s -= (short)i4;
            for (i6 = 8; i6 > 1; i6--) {
                if (i6 != 0) {
                    vMeth2_check_sum += i2 + i3 + i4 + i5 + s + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                for (i8 = 1; i8 < 2; i8++) {
                    Test.instanceCount += i6;
                    f = i6;
                    iArr1[i8 + 1] = (int)75.55658;
                    Test.fArrFld = Test.fArrFld;
                }
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + i5 + s + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l1) {

        int i10=3275, i11=-225, i12=11, i13=0, i14=41840, i15=40935, i16=-64185;
        float f1=-79.482F;
        boolean b=false;

        vMeth2();
        for (i10 = 6; i10 < 283; ++i10) {
            i11 >>= (int)Test.instanceCount;
            i12 += (i10 * i10);
        }
        if (b) {
            i11 = -97;
            i13 = 1;
            do {
                i12 += (i13 + Test.instanceCount);
                for (i14 = i13; i14 < 8; i14++) {
                    i11 += (int)(123.701F + (i14 * i14));
                    Test.instanceCount -= l1;
                }
                i12 += (((i13 * i15) + i11) - l1);
                i16 = 8;
                do {
                    i12 -= i10;
                    f1 += i12;
                } while ((i16 -= 3) > 0);
            } while (++i13 < 203);
            vMeth1_check_sum += l1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + (b ? 1 : 0);
            return;
        } else {
            i11 |= -191;
        }
        vMeth1_check_sum += l1 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) + (b ? 1 : 0);
    }

    public static void vMeth() {

        int i1=-46053, i17=55627, i18=4, i19=8, iArr[]=new int[N];
        long l=-4224916151636942338L, lArr[]=new long[N];
        short s1=12250;
        byte by=-61;

        FuzzerUtils.init(lArr, -43572L);
        FuzzerUtils.init(iArr, 176);

        lArr[(-6 >>> 1) % N] = (i1--);
        l = 1;
        do {
            iArr = (iArr = (iArr = (iArr = iArr)));
            Test.instanceCount += (l | i1);
            try {
                i1 = (i1 % -196);
                i1 = (-34054 % i1);
                i1 = (1047817372 % i1);
            } catch (ArithmeticException a_e) {}
            vMeth1(l);
            i1 += (int)l;
            Test.instanceCount += i1;
            for (i17 = 1; 6 > i17; i17++) {
                s1 -= (short)-4;
                switch ((int)((l % 6) + 46)) {
                case 46:
                    i1 += (i17 - l);
                    i1 = by;
                    i1 += i17;
                    break;
                case 47:
                    s1 += (short)i17;
                    break;
                case 48:
                    if (i1 != 0) {
                        vMeth_check_sum += i1 + l + i17 + i18 + s1 + by + i19 + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(iArr);
                        return;
                    }
                    break;
                case 49:
                    i19 %= (int)(i18 | 1);
                    break;
                case 50:
                    Test.dFld += -29856;
                    break;
                case 51:
                    i19 += 38147;
                    break;
                }
            }
        } while (++l < 289);
        vMeth_check_sum += i1 + l + i17 + i18 + s1 + by + i19 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=6014, i20=-13, i21=242, i22=-80, i23=176, i24=-157, i25=-181, i26=-39921, iArr2[]=new int[N];
        double d=-120.108689;
        float f2=65.709F;
        boolean b1=true;
        long l2=136L;

        FuzzerUtils.init(iArr2, 49842);

        i = 1;
        do {
            switch ((((((int)(d + i)) >>> 1) % 5) * 5) + 77) {
            case 99:
                vMeth();
                i20 = sFld;
                i20 <<= -3;
                break;
            case 87:
                for (i21 = i; 78 > i21; ++i21) {
                    f2 += Test.instanceCount;
                    for (i23 = 1; i23 < 1; i23++) {
                        Test.instanceCount -= sFld;
                        Test.dFld *= i;
                        i22 = i23;
                        i24 = i24;
                        if (b1) continue;
                    }
                    for (l2 = 1; l2 < 1; l2++) {
                        i20 >>= i25;
                        iArr2[(int)(l2 + 1)] = 140;
                        iArr2[i] -= (int)Test.dFld;
                        i25 += (int)(l2 * l2);
                        byFld *= (byte)i23;
                        Test.instanceCount -= i23;
                    }
                    if (b1) break;
                    i26 = 1;
                    do {
                        Test.instanceCount = i21;
                        lArrFld[i26] += (long)f2;
                        d += i24;
                        Test.instanceCount = l2;
                        i24 = i;
                    } while (++i26 < 1);
                }
                if (b1) {
                    i25 |= (int)Test.instanceCount;
                    i22 += i21;
                } else if (b1) {
                    if (b1) continue;
                } else {
                    f2 -= sFld;
                }
                break;
            case 80:
                i25 = i20;
                break;
            case 89:
                byFld = (byte)i;
                break;
            case 97:
                i20 += (i * i);
                break;
            }
        } while (++i < 322);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
