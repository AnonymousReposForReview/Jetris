package tests.javafuzzer1910;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:42:06 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-190L;
    public static float fFld=0.617F;
    public static double dFld=56.84582;
    public static boolean bFld=false;
    public static double dFld1=-2.22665;
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 15L);
        FuzzerUtils.init(Test.iArrFld, 9);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(boolean b, long l1, long l2) {

        int i6=30377, i7=-38598, i8=49, i9=-3891, i10=-2, i11=5, i12=24155, i13=14, iArr[]=new int[N];
        double d1=0.98939;

        FuzzerUtils.init(iArr, -189);

        for (i6 = 1; i6 < 135; i6++) {
            for (i8 = 1; 12 > i8; i8++) {
                iArr[i6 - 1] = (int)Test.fFld;
                i9 += (i8 | i9);
                l2 -= (long)Test.fFld;
                for (i10 = i6; i10 < 2; i10++) {
                    double d=101.94236;
                    iArr[i6 + 1] *= i11;
                    Test.lArrFld[i6 + 1] = (long)d;
                }
            }
            l1 += (-193 + (i6 * i6));
            iArr = FuzzerUtils.int1array(N, (int)0);
            for (i12 = 1; i12 < 12; ++i12) {
                i11 >>= 29544;
                iArr[i6 + 1] -= (int)d1;
                Test.instanceCount = i9;
                i7 = i12;
            }
        }
        long meth_res = (b ? 1 : 0) + l1 + l2 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1)
            + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, int i5) {

        int i14=-2, i15=-53588, i16=-8, i17=38199, i18=231, i19=-13;
        short s1=-25220;

        i5 = iMeth(true, Test.instanceCount, l);
        for (i14 = 157; i14 > 2; i14--) {
            i5 = i5;
            Test.dFld *= i14;
            for (i16 = 10; i16 > 1; i16 -= 2) {
                Test.fFld = i5;
                try {
                    i17 = (0 / i15);
                    i15 = (Test.iArrFld[i14] / -12545);
                    i17 = (i14 % i16);
                } catch (ArithmeticException a_e) {}
                Test.dFld += i14;
                for (i18 = 3; i18 > 1; i18--) {
                    i17 += (((i18 * Test.instanceCount) + Test.instanceCount) - s1);
                    switch ((i16 % 4) + 88) {
                    case 88:
                        try {
                            Test.iArrFld[i18] = (13754 / i16);
                            i5 = (5950 % i18);
                            i17 = (54931 / i19);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 89:
                        if (Test.bFld) continue;
                        i19 += (int)-20.124864;
                    case 90:
                        Test.iArrFld[i16 + 1] -= i14;
                    case 91:
                        i5 >>>= i16;
                        break;
                    }
                }
            }
        }
        long meth_res = l + i5 + i14 + i15 + i16 + i17 + i18 + i19 + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i2) {

        int i3=244, i4=93, i20=10, i21=52186, i22=-14, i23=-21, i24=11;
        short s2=7082;

        for (i3 = 6; i3 < 156; i3++) {
            i2 -= (int)lMeth(Test.instanceCount, i2);
            i2 -= i2;
            i2 = i2;
            for (i20 = 1; i20 < 11; ++i20) {
                if (true) continue;
                switch (((i20 % 2) * 5) + 59) {
                case 69:
                    i21 += (((i20 * Test.instanceCount) + i2) - Test.instanceCount);
                    i4 += (i20 - Test.instanceCount);
                    Test.iArrFld[i3] = -945;
                    break;
                case 65:
                    Test.instanceCount = i21;
                    for (i22 = 1; 2 > i22; ++i22) {
                        i2 += (i22 * Test.instanceCount);
                    }
                    s2 -= (short)Test.instanceCount;
                    s2 = (short)i21;
                    break;
                default:
                    i24 += (((i20 * Test.fFld) + i20) - Test.fFld);
                }
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + i20 + i21 + i22 + i23 + s2 + i24;
    }

    public void mainTest(String[] strArr1) {

        int i=-254, i1=-126, i25=65412, i26=25369, i27=8552, i28=-12, i29=-33489, i30=-10, i31=36183, i32=-14579,
            i33=134, i34=-18;
        float f=-50.386F;
        short s=-764;
        double d2=-11.16250, dArr[]=new double[N];
        byte by=93;

        FuzzerUtils.init(dArr, 105.62508);

        for (i = 6; 237 > i; ++i) {
            i1 += (int)f;
        }
        i1 = (s++);
        vMeth(200);
        i1 -= i;
        for (i25 = 17; i25 < 368; ++i25) {
            s = (short)Test.instanceCount;
            Test.iArrFld[i25] = 36331;
            i1 -= i25;
        }
        for (i27 = 10; 181 > i27; i27++) {
            i26 = (int)Test.instanceCount;
        }
        for (d2 = 4; 155 > d2; d2 += 3) {
            i26 -= -24;
            Test.iArrFld[(int)(d2)] = i28;
            Test.instanceCount = Test.instanceCount;
            i30 = 1;
            do {
                i29 = s;
            } while (++i30 < 281);
            by = (byte)i1;
            for (i31 = 7; 231 > i31; i31++) {
                for (i33 = i31; i33 < 3; i33++) {
                    Test.instanceCount = 49763;
                    Test.dFld1 -= -15;
                    i1 = i27;
                    dArr[i31 + 1] -= 12;
                    Test.dFld += s;
                }
                i34 += (i31 + i34);
                Test.fFld += (i31 - i31);
                Test.fFld = (float)d2;
                Test.lArrFld = Test.lArrFld;
                Test.instanceCount += i31;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
