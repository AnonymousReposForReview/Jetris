package tests.javafuzzer1558;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:56:36 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-23737L;
    public static boolean bFld=false;
    public byte byFld=-105;
    public static short sFld=25042;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 79);
        FuzzerUtils.init(Test.lArrFld, -4003596075L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i6) {

        int i7=13, i8=-118, i9=54, i10=12, i11=109, i12=-60, i13=2, iArr[]=new int[N];
        float f1=0.488F;

        FuzzerUtils.init(iArr, 28781);

        for (i7 = 5; i7 < 363; i7 += 2) {
            i9 = 1;
            do {
                try {
                    i8 = (i8 % i6);
                    iArr[i9 - 1] = (i8 / 451270970);
                    iArr[i9] = (33 / iArr[i7 - 1]);
                } catch (ArithmeticException a_e) {}
                f1 = Test.instanceCount;
                for (i10 = i7; i10 < 1; i10++) {
                    iArr[i10] = i8;
                    i6 = i7;
                    Test.instanceCount ^= i6;
                }
                Test.bFld = Test.bFld;
                for (i12 = 1; i12 < 1; i12++) {
                    iArr[i12 + 1] = i9;
                    i11 = i10;
                    i6 -= i9;
                }
                i8 -= (int)12L;
                i13 >>>= i6;
            } while (++i9 < 9);
        }
        vMeth2_check_sum += l + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i4=5, i5=-65112;

        for (i4 = 4; i4 < 157; ++i4) {
            vMeth2(Test.instanceCount, i5);
        }
        Test.instanceCount += 37440;
        vMeth1_check_sum += i4 + i5;
    }

    public static void vMeth(float f, int i) {

        int i1=6, i2=42902, i3=-54, i14=1544, i15=-2, i16=10, i17=-1545, iArr1[]=new int[N];
        byte by=56;
        short s=-22469;
        double d=2.975;
        long l1=22L;

        FuzzerUtils.init(iArr1, -3);

        for (i1 = 19; i1 < 329; ++i1) {
            i2 <<= (int)(((Test.instanceCount - Test.instanceCount) + (++by)) + (s = (short)(i >>> i2)));
        }
        for (d = 9; d < 282; d++) {
            vMeth1();
            iArr1[(int)(d)] = i;
            i <<= (int)Test.instanceCount;
        }
        Test.iArrFld[(i2 >>> 1) % N] |= (int)Test.instanceCount;
        i2 <<= (int)-7961831311044808435L;
        for (i14 = 13; i14 < 213; ++i14) {
            iArr1[i14 + 1] -= 73;
            Test.instanceCount = (long)f;
            i16 = 1;
            do {
                for (l1 = 1; l1 < 1; l1++) {
                    i15 += (int)l1;
                    i3 += i2;
                }
            } while (++i16 < 8);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + by + s + Double.doubleToLongBits(d) + i3 + i14 + i15
            + i16 + l1 + i17 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        float f2=-50.216F;
        int i18=11395, i19=67, i20=-10, i21=14, i22=-12, i23=4, i24=24787, i25=203, i26=-4;

        vMeth(f2, i18);
        f2 = Test.instanceCount;
        for (i19 = 330; i19 > 13; i19--) {
            i20 = byFld;
            for (i21 = 3; 79 > i21; i21++) {
                Test.instanceCount += (-2380238277L + (i21 * i21));
                i18 -= (int)Test.instanceCount;
                Test.instanceCount = (long)1.20F;
                i22 *= i20;
                Test.sFld += (short)(((i21 * i20) + i18) - i21);
                i22 += (((i21 * Test.instanceCount) + f2) - i18);
                switch (((i19 % 2) * 5) + 57) {
                case 67:
                case 62:
                    for (i23 = 1; i23 < 2; ++i23) {
                        i20 = i19;
                        i24 += (((i23 * Test.instanceCount) + i22) - byFld);
                        i20 = 69;
                        i18 = (int)Test.instanceCount;
                        Test.lArrFld[i21 - 1] += Test.instanceCount;
                        if (Test.bFld) continue;
                        Test.instanceCount -= i19;
                    }
                    Test.sFld += (short)i23;
                    for (i25 = 1; i25 < 2; ++i25) {
                        i26 += (-39190 + (i25 * i25));
                        Test.instanceCount = i21;
                        i22 += (int)(-17.824F + (i25 * i25));
                        Test.iArrFld[i25 + 1] >>= i25;
                        i26 += i25;
                        i22 += i25;
                    }
                    i24 += i24;
                    break;
                }
            }
            i22 += i22;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
