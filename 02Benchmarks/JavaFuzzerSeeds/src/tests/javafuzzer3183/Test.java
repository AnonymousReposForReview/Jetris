package tests.javafuzzer3183;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:29:28 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=181L;
    public float fFld=-1.589F;
    public static long lFld=63182909728516827L;
    public static float fFld1=1.479F;
    public volatile int iFld=-96;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -41.404F);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l1, boolean b1, int i6) {


        i6 *= (int)-8614004106940016310L;
        long meth_res = l1 + (b1 ? 1 : 0) + i6;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i4, int i5) {

        boolean b2=true;
        short s1=9008;
        int i7=15480, i8=44251;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.93576);

        Test.instanceCount &= (iMeth1(Test.instanceCount, b2, i4) + i5);
        switch ((((12319 >>> 1) % 5) * 5) + 54) {
        case 55:
            i4 -= s1;
            i4 = -41413;
            for (i7 = 14; 347 > i7; i7++) {
                Test.fFld1 = -131;
                i5 |= (int)Test.lFld;
                Test.instanceCount = i5;
                switch (((i7 % 6) * 5) + 115) {
                case 118:
                    i8 = (int)Test.fFld1;
                    Test.fFld1 = Test.fFld1;
                    break;
                case 142:
                    b2 = b2;
                case 127:
                    b2 = b2;
                case 143:
                    i5 >>>= i5;
                case 125:
                    i5 = (int)Test.lFld;
                    break;
                case 130:
                    i8 = 29310;
                default:
                }
            }
            break;
        case 56:
            i4 = (int)Test.instanceCount;
            break;
        case 74:
        case 71:
            dArr[(122 >>> 1) % N] -= i5;
            break;
        case 79:
            i8 += i5;
            break;
        }
        long meth_res = i4 + i5 + (b2 ? 1 : 0) + s1 + i7 + i8 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i1, short s, long l) {

        boolean b=false;
        int i2=25847, i3=-40549, i9=140, i10=-227, i11=-57, i12=178, iArr1[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 8L);
        FuzzerUtils.init(iArr1, -5);

        i1 = (int)((l -= (i1 + Test.lFld)) - (--i1));
        if (b) {
            s *= (short)i1;
            b = (i1 != ((-(Test.lFld--)) + (i1 * Test.fFld1)));
            for (i2 = 9; i2 < 317; ++i2) {
                i1 = (i3--);
                iMeth(i2, -5);
                for (i9 = 1; i9 < 5; ++i9) {
                    for (i11 = 1; i11 < 2; ++i11) {
                        if (b) {
                            i3 = (int)Test.lFld;
                        }
                        i12 += (((i11 * i3) + i11) - l);
                        lArr = lArr;
                        i3 += i11;
                        iArr1[i2 - 1] *= i10;
                    }
                }
            }
        } else if (b) {
            l = i12;
        } else if (b) {
            Test.fFld1 *= Test.lFld;
        }
        long meth_res = i1 + s + l + (b ? 1 : 0) + i2 + i3 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-2.80465;
        int i=58678, i13=13463, i14=5, i15=-14, iArr[]=new int[N];
        short s2=25814;
        long l2=1067446960932284330L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 0);
        FuzzerUtils.init(byArr, (byte)23);

        for (d = 18; 369 > d; d++) {
            iArr[(int)(d)] <<= (int)(((fFld * d) - (i - -1.86402)) - ((++Test.instanceCount) + (i + i)));
            fFld += (float)(d * d);
            switch ((int)(((d % 4) * 5) + 63)) {
            case 67:
                iArr[(int)(d + 1)] -= (int)(i * fFld);
                i <<= (int)lMeth(i, s2, Test.instanceCount);
                break;
            case 76:
                iFld += iFld;
                iArr[(int)(d - 1)] = (int)l2;
                iArr = iArr;
                break;
            case 80:
                i -= (int)10608L;
                iFld *= i;
                i13 = 64890;
                i13 += (int)(d - i13);
            case 72:
                i14 = 1;
                do {
                    i13 += (i14 * i14);
                    i += i14;
                    i &= (int)Test.instanceCount;
                    i += i;
                    i = i13;
                    i15 = 1;
                    do {
                        iArr[i14 + 1] >>= -21;
                        i += -72;
                        i13 += i14;
                        Test.fArrFld[(int)(d)] = i;
                        iArr[(int)(d)] = i;
                        i >>= iFld;
                    } while (++i15 < 1);
                    i += (5 + (i14 * i14));
                    iFld += (i14 * i14);
                } while (++i14 < 72);
                Test.instanceCount = Test.instanceCount;
            }
        }
        iFld = i15;

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
