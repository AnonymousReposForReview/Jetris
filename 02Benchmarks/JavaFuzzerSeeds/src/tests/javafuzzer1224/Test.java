package tests.javafuzzer1224;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:43:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-46539L;
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.9440);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(float f) {

        double d2=-27.47213, d4=-1.37349;
        int i9=50, i10=-213, i11=7, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 7);

        d2 += i9;
        for (double d3 : Test.dArrFld) {
            i9 += (int)Test.instanceCount;
            i10 = 1;
            while (++i10 < 4) {
                switch ((i10 % 1) + 77) {
                case 77:
                    i9 = i10;
                    iArr1[i10 - 1] -= i10;
                    for (d4 = 1; d4 < 1; ++d4) {
                        f += Test.instanceCount;
                        i11 += (int)(d4 - i10);
                        iArr1[i10 - 1] += i9;
                        f += (float)d4;
                        Test.instanceCount <<= i11;
                    }
                    i9 *= i9;
                    break;
                default:
                    iArr1[i10] = -13937;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d2) + i9 + i10 + Double.doubleToLongBits(d4)
            + i11 + FuzzerUtils.checkSum(iArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(boolean b, double d1) {

        int i3=222, i4=242, i5=5060, i6=-6, i7=-49450, i8=-51015, iArr[][]=new int[N][N];
        short s=22342;
        float f1=2.229F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -8784508057573105581L);
        FuzzerUtils.init(iArr, 6505);

        for (i3 = 2; 318 > i3; ++i3) {
            for (i5 = 5; 1 < i5; --i5) {
                for (i7 = 2; 1 < i7; i7 -= 3) {
                    i6 += (14 + (i7 * i7));
                    i6 += (int)(lArr1[i7] >>= ((i4++) - (-(i6 - s))));
                    i6 <<= iArr[i5][i5];
                    if (((fMeth(f1) * Test.instanceCount) + i8) != Test.instanceCount) break;
                    switch ((i7 % 2) + 95) {
                    case 95:
                        Test.instanceCount = Test.instanceCount;
                        switch ((i3 % 9) + 9) {
                        case 9:
                            i6 = (int)Test.instanceCount;
                            break;
                        case 10:
                            if (false) {
                                vMeth_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7 +
                                    i8 + s + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr1) +
                                    FuzzerUtils.checkSum(iArr);
                                return;
                            } else if (false) {
                                iArr[i3][i5] %= (int)4184482202L;
                                i4 += (0 + (i7 * i7));
                                i4 += (((i7 * i3) + i5) - i3);
                            } else {
                                i8 <<= i3;
                            }
                            break;
                        case 11:
                            f1 += Test.instanceCount;
                        case 12:
                            i6 -= (int)Test.instanceCount;
                        case 13:
                            i4 = i5;
                        case 14:
                            i8 += (i7 | Test.instanceCount);
                        case 15:
                            i8 &= i5;
                            break;
                        case 16:
                            i6 = (int)Test.instanceCount;
                        case 17:
                            i8 *= i4;
                            break;
                        default:
                            try {
                                i8 = (i7 / 99731375);
                                i6 = (-254 / i7);
                                i4 = (40602 / i3);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 96:
                        if (i6 != 0) {
                            vMeth_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7 + i8
                                + s + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr1) +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        break;
                    default:
                        f1 -= (float)d1;
                    }
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + Double.doubleToLongBits(d1) + i3 + i4 + i5 + i6 + i7 + i8 + s +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, int i) {

        int i1=6, i2=121, iArr2[]=new int[N];
        double d=2.50863;
        boolean b1=true;
        long l1=-3014687752L, lArr2[]=new long[N];

        FuzzerUtils.init(iArr2, -5);
        FuzzerUtils.init(lArr2, -1L);

        for (i1 = 4; i1 < 320; i1++) {
            d += (++i);
        }
        l += i2;
        vMeth(b1, d);
        if (b1) {
            for (int i12 : iArr2) {
                float f2=1.264F;
                int i13=15;
                i -= i12;
                l1 = 1;
                do {
                    d = i;
                    l += (l1 * l1);
                } while (++l1 < 4);
                f2 -= i;
                i12 += (int)d;
                i -= (int)74.64672;
                i2 += i13;
                lArr2[(i1 >>> 1) % N] = i12;
            }
        } else {
            iArr2 = FuzzerUtils.int1array(N, (int)-51);
        }
        long meth_res = l + i + i1 + i2 + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + l1 + FuzzerUtils.checkSum(iArr2)
            + FuzzerUtils.checkSum(lArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i15=-176, i16=46377, i17=-7, i18=2, i19=-19340, iArr3[]=new int[N];
        short s1=-24177;
        float f3=75.450F;
        double d5=-87.106012;
        boolean b2=true, bArr[]=new boolean[N];
        byte by=115;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 196L);
        FuzzerUtils.init(iArr3, 59326);
        FuzzerUtils.init(bArr, true);

        lArr[(33277 >>> 1) % N] -= iMeth(-216L, i15);
        i16 = 1;
        do {
            i15 += i16;
            for (i17 = 2; i17 < 75; ++i17) {
                if (true) break;
                switch ((i17 % 1) + 96) {
                case 96:
                    i15 += i17;
                    iArr3[i17] += i16;
                    i18 >>= (int)Test.instanceCount;
                    s1 += (short)(((i17 * i17) + Test.instanceCount) - Test.instanceCount);
                    break;
                default:
                    f3 = Test.instanceCount;
                }
                iArr3[i17 + 1] <<= i15;
                i18 = (int)d5;
                i19 = 1;
                do {
                    i18 = i16;
                    switch ((i19 % 2) + 98) {
                    case 98:
                        Test.instanceCount -= Test.instanceCount;
                        i18 *= -11;
                        break;
                    case 99:
                        i18 = i19;
                        switch ((i19 % 7) + 104) {
                        case 104:
                            i15 <<= -20851;
                            if (b2) continue;
                        case 105:
                            i18 = i17;
                            break;
                        case 106:
                            f3 += (((i19 * Test.instanceCount) + Test.instanceCount) - i15);
                            i15 = i19;
                            bArr[i17] = b2;
                            break;
                        case 107:
                            lArr[i17 - 1] += (long)2.970F;
                            by = (byte)i16;
                            break;
                        case 108:
                            i18 += i15;
                            break;
                        case 109:
                            i15 -= 40318;
                            break;
                        case 110:
                            if (true) continue;
                        }
                        break;
                    default:
                        iArr3[i16] = (int)540642901L;
                    }
                } while (++i19 < 2);
            }
        } while (++i16 < 335);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
