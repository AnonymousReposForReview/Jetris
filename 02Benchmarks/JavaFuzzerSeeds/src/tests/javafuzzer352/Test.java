package tests.javafuzzer352;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:37:21 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1787170808L;
    public double dFld=0.93257;
    public static short sFld=27355;
    public boolean bFld=false;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-52705, i6=192, i8=-43924, i9=202, i10=-19, i11=-251, i12=35, i13=110, iArr[]=new int[N];
        long l1=-8108371367967445928L, lArr[]=new long[N];
        boolean b=true;
        double d=-62.12360;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 49);
        FuzzerUtils.init(fArr, -1.230F);
        FuzzerUtils.init(lArr, -144L);

        i5 += -44610;
        i6 = 1;
        while (++i6 < 288) {
            iArr[i6] += (int)2.128783;
            i5 = i5;
            i5 -= i6;
            switch ((i6 % 4) + 54) {
            case 54:
                for (i8 = 1; i8 < 6; ++i8) {
                    l1 = 1;
                    while (++l1 < 2) {
                        i9 += (-253 + (l1 * l1));
                    }
                    b = false;
                }
                for (i10 = 1; 6 > i10; i10++) {
                    fArr[i10 + 1] /= (i11 | 1);
                    for (i12 = 1; i12 < 2; i12 += 2) {
                        Test.instanceCount += i13;
                        i13 <<= -60473;
                    }
                }
                break;
            case 55:
                i9 = i10;
                break;
            case 56:
                lArr[i6] >>= i10;
                break;
            case 57:
                iArr = iArr;
            default:
                iArr[i6] *= (int)d;
            }
        }
        vMeth1_check_sum += i5 + i6 + i8 + i9 + l1 + (b ? 1 : 0) + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i4) {

        int i14=-7, i15=123, i16=-12, i17=62202, iArr1[]=new int[N];
        boolean b1=true;
        float fArr1[][]=new float[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(fArr1, -1.394F);
        FuzzerUtils.init(lArr1, -3706148904L);
        FuzzerUtils.init(iArr1, -22054);

        vMeth1();
        fArr1[(i4 >>> 1) % N][(i4 >>> 1) % N] *= Test.sFld;
        Test.instanceCount += (long)-1.77388;
        lArr1[(i4 >>> 1) % N] = i4;
        for (i14 = 22; i14 < 397; i14++) {
            i4 = i14;
            iArr1 = iArr1;
        }
        Test.instanceCount = i15;
        switch ((((i4 >>> 1) % 2) * 5) + 51) {
        case 53:
            i4 += i4;
            for (i16 = 1; i16 < 323; i16++) {
                if (b1) {
                    i4 >>>= i16;
                }
                i15 += -134;
                Test.instanceCount = i14;
            }
        case 56:
            i15 = i17;
            break;
        default:
            iArr1[(i4 >>> 1) % N] = i4;
        }
        long meth_res = i4 + i14 + i15 + i16 + i17 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3, long l) {

        double d1=25.11521;
        int i18=-12, i19=39881, i20=-5, i21=-28, i22=-7, i23=1, i24=35, i25=-144, iArr2[]=new int[N];
        boolean b2=false;

        FuzzerUtils.init(iArr2, 62546);

        l = (long)(iMeth(124) - d1);
        for (i18 = 8; i18 < 144; i18++) {
            for (i20 = 1; i20 < 12; i20++) {
                iArr2 = iArr2;
                for (i22 = 2; 1 < i22; i22--) {
                    float f=2.418F;
                    Test.sFld <<= (short)i22;
                    if (b2) break;
                    iArr2[i22] *= i2;
                    if (b2) break;
                    d1 = f;
                    i19 <<= i3;
                    i2 += i20;
                }
            }
            for (i24 = 1; 12 > i24; i24++) {
                iArr2[i24] = (int)l;
                if (b2) continue;
            }
        }
        vMeth_check_sum += i2 + i3 + l + Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21 + i22 + i23 + (b2 ? 1 : 0)
            + i24 + i25 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=165, i26=1, i27=8, i28=62413, i29=-96, i30=-150, i31=-6, i32=-51668, iArr3[]=new int[N];
        byte by=98;
        short sArr[]=new short[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr3, 22557);
        FuzzerUtils.init(sArr, (short)-6521);
        FuzzerUtils.init(lArr2, 119L);

        i = 1;
        while (++i < 323) {
            int i1=5;
            if (i < ((long)((-(++dFld)) - i) ^ (i1--))) break;
        }
        vMeth(-8759, i, Test.instanceCount);
        Test.instanceCount -= (long)1.97014;
        Test.instanceCount += 5;
        Test.instanceCount = Test.instanceCount;
        iArr3[(28602 >>> 1) % N] = i;
        i26 *= (int)Test.instanceCount;
        iArr3[(14 >>> 1) % N] <<= i;
        i27 = 1;
        do {
            sArr[i27 - 1] ^= (short)Test.instanceCount;
            dFld = Test.instanceCount;
            i26 += (int)Test.instanceCount;
            for (i28 = i27; i28 < 160; i28++) {
                i30 = 1;
                do {
                    boolean b3=false;
                    b3 = b3;
                } while (++i30 < 1);
                for (i31 = 1; 1 > i31; i31++) {
                    i32 += 195;
                    switch (((i31 >>> 1) % 6) + 85) {
                    case 85:
                        iArr3[i27] = i31;
                        i32 >>= (int)Test.instanceCount;
                        i26 -= i28;
                        i29 -= i30;
                    case 86:
                        try {
                            i32 = (iArr3[i28] / i27);
                            i26 = (-159 % i30);
                            i26 = (63149 / iArr3[i28]);
                        } catch (ArithmeticException a_e) {}
                        i29 ^= i28;
                    case 87:
                        if (true) {
                            i26 *= i29;
                            if (bFld) continue;
                        }
                        i32 += (97 + (i31 * i31));
                        lArr2[i27 - 1] -= i26;
                        break;
                    case 88:
                        i32 *= i27;
                        break;
                    case 89:
                        Test.instanceCount += (i31 | by);
                        break;
                    case 90:
                        Test.instanceCount = (long)dFld;
                        break;
                    default:
                        Test.sFld -= (short)i29;
                    }
                }
            }
        } while (++i27 < 157);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
