package tests.javafuzzer3312;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:47:01 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=14L;
    public static float fFld=-68.59F;
    public static float fArrFld[][]=new float[N][N];
    public static long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 103.1011F);
        FuzzerUtils.init(Test.lArrFld, 437572234L);
        FuzzerUtils.init(Test.iArrFld, -9);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(long l) {

        int i7=98, i8=-12, i9=5, iArr[]=new int[N];
        double d1=1.105541;
        float f=2.892F;
        short s1=26764;

        FuzzerUtils.init(iArr, -48);

        for (i7 = 5; i7 < 354; ++i7) {
            i9 = 5;
            do {
                double d2=123.110869;
                iArr = iArr;
                i8 += i9;
                switch ((i9 % 3) + 24) {
                case 24:
                    l <<= i8;
                    d1 = 1;
                    do {
                        if (i8 != 0) {
                        }
                        i8 += (int)(d1 * d1);
                        iArr[i9] += (int)f;
                        l %= (i8 | 1);
                        i8 = i7;
                        s1 += (short)i7;
                        l += (long)(((d1 * i7) + f) - i9);
                    } while (++d1 < 1);
                    i8 += (((i9 * i7) + i7) - i7);
                    break;
                case 25:
                    d2 *= i9;
                    break;
                case 26:
                }
            } while (--i9 > 0);
        }
        long meth_res = l + i7 + i8 + i9 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + s1 +
            FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(boolean b) {

        int i6=-7, i10=-183, i11=-64078, i12=11, i13=24079, iArr1[]=new int[N];
        double d=29.25640, d3=-2.117349;
        short s=32383;
        long l1=5284025428994463337L, lArr[]=new long[N];
        byte by=-70;

        FuzzerUtils.init(lArr, 24408L);
        FuzzerUtils.init(iArr1, 14);

        i6 += (int)(((-Test.instanceCount) * (d * i6)) - s);
        lMeth(Test.instanceCount);
        Test.instanceCount = i6;
        i6 += 114;
        for (d3 = 3; 150 > d3; d3++) {
            for (i11 = 1; i11 < 11; ++i11) {
                for (l1 = (long)(d3); l1 < 2; l1++) {
                    Test.instanceCount += 142;
                    i12 += (int)(((l1 * i12) + Test.instanceCount) - Test.instanceCount);
                    by = (byte)i13;
                    lArr[(int)(d3)] = (long)Test.fFld;
                }
                switch ((((10 >>> 1) % 2) * 5) + 109) {
                case 116:
                    i13 -= i11;
                    break;
                case 115:
                    s = (short)i11;
                    i12 >>>= 52486;
                default:
                    iArr1[(int)(d3)] = i12;
                }
            }
        }
        vMeth_check_sum += (b ? 1 : 0) + i6 + Double.doubleToLongBits(d) + s + Double.doubleToLongBits(d3) + i10 + i11
            + i12 + l1 + i13 + by + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth(int i, int i1) {

        int i2=5, i3=-167, i4=-196, i5=14056, i14=249, i15=14, iArr2[]=new int[N];
        double d4=49.18684;
        long l2=-55424L;
        byte by1=69;

        FuzzerUtils.init(iArr2, 101);

        for (i2 = 7; i2 < 351; ++i2) {
            for (i4 = 1; i4 < 5; i4 += 2) {
                vMeth(true);
                Test.fArrFld[(i4 >>> 1) % N][i4 - 1] -= Test.instanceCount;
                for (d4 = 1; d4 < 3; ++d4) {
                    iArr2[i2 + 1] ^= 16979;
                    l2 += (long)d4;
                    Test.fArrFld[i4 + 1][i4 + 1] = 37722L;
                    iArr2[(int)(d4 + 1)] = by1;
                    Test.fFld -= i1;
                }
            }
            i1 -= (int)l2;
            i5 += i2;
            i15 = 1;
            while (++i15 < 5) {
                i3 = i1;
                iArr2[i15] += (int)Test.instanceCount;
            }
        }
        long meth_res = i + i1 + i2 + i3 + i4 + i5 + Double.doubleToLongBits(d4) + i14 + l2 + by1 + i15 +
            FuzzerUtils.checkSum(iArr2);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=162, i17=-46, i18=-31037, i19=202, i20=-7946, i21=226, i22=13, i23=150, i24=11;
        boolean b1=false;
        short s2=-4731;
        byte by2=-45;

        fMeth(i16, i16);
        b1 = b1;
        Test.lArrFld[(i16 >>> 1) % N] = i16;
        dArrFld[(i16 >>> 1) % N] += Test.fFld;
        for (i17 = 10; i17 < 326; ++i17) {
            for (i19 = 3; 80 > i19; ++i19) {
                for (i21 = 1; i21 < 2; ++i21) {
                    i16 *= i18;
                    switch (((-7 >>> 1) % 2) + 126) {
                    case 126:
                        i18 *= i20;
                        Test.lArrFld[i19] = Test.instanceCount;
                        i22 <<= i16;
                        Test.instanceCount += i18;
                        break;
                    case 127:
                        i20 -= i18;
                        break;
                    default:
                    }
                    i16 = i19;
                    Test.lArrFld[i21 + 1] = Test.instanceCount;
                    b1 = b1;
                    i16 += i21;
                }
                switch ((i19 % 5) + 41) {
                case 41:
                    i22 += i19;
                    Test.iArrFld[i19] >>= 207;
                    break;
                case 42:
                    i18 += (i19 | i22);
                case 43:
                    s2 -= (short)i18;
                    s2 *= (short)Test.instanceCount;
                    i18 -= i16;
                    for (i23 = 1; i23 < 2; ++i23) {
                        Test.fFld += Test.instanceCount;
                        if (b1) break;
                        try {
                            i24 = (39806 % i22);
                            Test.iArrFld[i19] = (10368 / i18);
                            i22 = (i22 % 898912706);
                        } catch (ArithmeticException a_e) {}
                    }
                    break;
                case 44:
                    if (b1) continue;
                    break;
                case 45:
                    i22 = i17;
                    break;
                default:
                    by2 += (byte)(i19 * Test.fFld);
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
