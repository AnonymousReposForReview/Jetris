package tests.javafuzzer2898;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:41:41 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2398439797295741519L;
    public static int iFld=232;
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9, int i10) {

        int i11=34138, i12=59148, i13=-12, i14=221;
        float f=-94.267F;
        byte by1=-121;
        short s=-27780;
        boolean b1=false;
        double dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr, 2.13682);
        FuzzerUtils.init(lArr, 91L);

        for (i11 = 16; i11 < 388; i11++) {
            i12 -= i9;
            i12 = i12;
            for (i13 = 1; i13 < 5; ++i13) {
                int i15=-58;
                dArr[i13 + 1] += i10;
                i8 -= i13;
                Test.iFld = i15;
                f = 1;
                while ((f += 2) < 2) {
                    if (i14 != 0) {
                        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + by1 + s +
                            (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    i15 += (int)f;
                    if (b1) {
                        i12 += (int)(((f * i8) + Test.iFld) - by1);
                        lArr[i11 + 1][i13 + 1] = i9;
                    } else if (b1) {
                        i15 -= s;
                        Test.instanceCount += Test.instanceCount;
                    }
                }
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + by1 + s + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static byte byMeth(int i7) {

        int i16=1, i17=14105, i18=17, i19=20624, i20=5697, i21=4;
        float f1=38.696F;
        long l=-2L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -5113430343605854672L);

        vMeth1(i7, i16, Test.iFld);
        for (i17 = 1; i17 < 198; i17++) {
            double d=64.97314;
            f1 += i16;
            Test.instanceCount = Test.iFld;
            Test.instanceCount += 2754;
            lArr1[i17 + 1] = (long)d;
            if (i7 != 0) {
            }
            for (i19 = 1; i19 < 8; ++i19) {
                for (l = i19; l < 2; l++) {
                    Test.instanceCount &= i19;
                    Test.bArrFld[i17] = false;
                    lArr1[(int)(l - 1)] = i17;
                }
                i16 = i21;
                i18 <<= 24898;
                i20 += i20;
            }
        }
        long meth_res = i7 + i16 + i17 + i18 + Float.floatToIntBits(f1) + i19 + i20 + l + i21 +
            FuzzerUtils.checkSum(lArr1);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth(byte by, int i) {

        int i1=-30343, i2=93, i3=12, i4=8415, i5=-162, i6=-11, iArr[]=new int[N];
        boolean b=false;
        short s1=31509, sArr[][]=new short[N][N];
        float f2=-16.471F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr, -54475);
        FuzzerUtils.init(sArr, (short)-8688);
        FuzzerUtils.init(lArr2, 0L);

        iArr[(-8 >>> 1) % N] = 0;
        for (i1 = 5; i1 < 143; i1++) {
            for (i3 = 1; i3 < 11; ++i3) {
                i4 += i3;
                for (i5 = 1; 2 > i5; ++i5) {
                    b = ((Test.instanceCount++) <= ((i2 + Test.instanceCount) + (i2--)));
                    iArr[i5 - 1] ^= (((i5 + i1) * byMeth(i3)) - s1);
                    iArr[i5 + 1] -= (int)Test.instanceCount;
                    sArr = sArr;
                    Test.instanceCount = 6;
                    Test.instanceCount *= -14;
                    lArr2[i5] = i;
                    i2 -= i4;
                }
                i4 = i2;
                f2 += i6;
            }
        }
        vMeth_check_sum += by + i + i1 + i2 + i3 + i4 + i5 + i6 + (b ? 1 : 0) + s1 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        byte by2=105;

        vMeth(by2, Test.iFld);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
