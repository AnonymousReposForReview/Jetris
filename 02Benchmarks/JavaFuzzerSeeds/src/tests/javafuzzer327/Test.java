package tests.javafuzzer327;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:00:28 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2143500915L;
    public static double dFld=-67.81738;
    public static boolean bFld=false;
    public static byte byFld=-64;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -54719);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        double d=54.23566, dArr[]=new double[N];
        int i5=-183, i7=-7, i8=-40, iArr[]=new int[N];
        short s=-25957, sArr[]=new short[N];
        long l=1891109651L;
        float f=-78.733F;

        FuzzerUtils.init(iArr, 46661);
        FuzzerUtils.init(dArr, -47.110820);
        FuzzerUtils.init(sArr, (short)-13026);

        for (d = 5; d < 279; ++d) {
            dArr[(int)(d)] -= i5;
            i5 += i5;
            i5 >>= i5;
            switch ((int)((d % 3) * 5)) {
            case 8:
                i5 = s;
                Test.instanceCount = i5;
            case 9:
                l = i5;
                if (Test.bFld) continue;
            case 12:
                i5 += (int)(192L + (d * d));
                i5 += i5;
                for (i7 = 6; i7 > 1; i7 -= 3) {
                    Test.instanceCount = i5;
                    i5 += i7;
                    i5 += (int)-317469161L;
                }
                break;
            default:
                sArr[(int)(d - 1)] = (short)f;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i5 + s + l + i7 + i8 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth() {

        int i3=159, i4=58461, i9=-180, i10=13, i11=0, iArr1[]=new int[N];
        byte by=51;
        short s1=7988;
        boolean bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, -62983);
        FuzzerUtils.init(lArr, -5986322682632086194L);

        for (i3 = 3; i3 < 261; i3++) {
            vMeth1();
            bArr[i3 + 1] = Test.bFld;
            Test.instanceCount %= (by | 1);
            i4 -= (int)Test.instanceCount;
            i4 = -125;
            i4 *= i3;
            switch ((i3 % 2) + 103) {
            case 103:
                i9 = 6;
                while (--i9 > 0) {
                    float f1=39.724F;
                    i4 = (int)f1;
                }
            case 104:
                if (true) {
                    for (i10 = 1; i10 < 6; i10++) {
                        iArr1[i3] = (int)Test.dFld;
                        Test.instanceCount += (i10 - i9);
                    }
                    lArr[i3 - 1] -= i10;
                } else {
                    i11 = i4;
                }
                break;
            default:
                i11 = s1;
            }
        }
        vMeth_check_sum += i3 + i4 + by + i9 + i10 + i11 + s1 + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i1, int i2) {

        float f2=1.137F;
        int i12=154, i13=3, i14=-38107, i15=-48945, i16=201, i17=-5, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 118);

        vMeth();
        f2 %= (Test.instanceCount | 1);
        i1 = i2;
        Test.bFld = Test.bFld;
        for (i12 = 3; i12 < 321; i12++) {
            i1 <<= (int)Test.instanceCount;
            for (i14 = i12; 5 > i14; ++i14) {
                i1 -= (int)f2;
                if (Test.bFld) continue;
                Test.byFld >>= (byte)i15;
            }
            i2 = i15;
            i16 = 1;
            while (++i16 < 5) {
                i17 = 1;
                while (++i17 < 1) {
                    i1 *= i13;
                    iArr2 = iArr2;
                }
            }
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f2) + i12 + i13 + i14 + i15 + i16 + i17 +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-61;
        float f3=-2.991F;

        Test.dFld = (Test.instanceCount - (i--));
        Test.instanceCount *= iMeth(i, i);
        f3 = 32176;
        Test.iArrFld[(i >>> 1) % N] -= i;
        i &= (int)Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
