package tests.javafuzzer3188;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 03:29:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-22626L;
    public volatile long lFld=-95006009L;
    public static float fFld=0.903F;
    public static long lFld1=-57L;
    public static boolean bFld=false;
    public byte byFld=-100;
    public double dArrFld[]=new double[N];
    public static int iArrFld[][]=new int[N][N];
    public long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.fArrFld, 10.582F);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i3=-191, i4=4472, i5=191;
        double d1=-27.115813;
        short s=23985;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -9L);

        for (i3 = 292; 2 < i3; --i3) {
            float f1=-1.30F;
            switch ((i3 % 2) + 21) {
            case 21:
                lArr[i3 - 1] = i3;
                Test.instanceCount = Test.instanceCount;
                break;
            case 22:
                i4 += (((i3 * Test.instanceCount) + Test.instanceCount) - i3);
                Test.iArrFld[i3] = Test.iArrFld[i3 - 1];
                break;
            default:
                i4 = i3;
                if (b) {
                    for (d1 = 1; d1 < 6; d1++) {
                        i4 = 58;
                        i4 -= (int)-1.75113;
                        Test.iArrFld[i3][(int)(d1 - 1)] *= 66;
                        i4 = (int)d1;
                        i5 += (int)(((d1 * s) + i4) - i4);
                        Test.iArrFld[i3 + 1][i3 - 1] = -14273;
                    }
                } else if (b) {
                    f1 += (float)d1;
                } else if (b) {
                    i5 = i3;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + Double.doubleToLongBits(d1) + i5 + s + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public static float fMeth(float f, long l, int i2) {

        int i6=-37, i7=0, i9=42254, i10=-225, i11=-111, i12=-12, i13=-41455, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -7482);

        f -= (Test.instanceCount * Math.abs(i2 + i2));
        vMeth();
        switch (((i2 >>> 1) % 3) + 98) {
        case 98:
            for (i6 = 12; i6 < 197; i6++) {
                try {
                    iArr[(-29746 >>> 1) % N] = (i6 / 144);
                    i2 = (i6 % Test.iArrFld[i6][i6]);
                    i2 = (86 % i7);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += (248 + (i6 * i6));
                if (i2 != 0) {
                }
                i7 |= i6;
                Test.instanceCount = 1945246819L;
            }
            for (i9 = 8; 129 > i9; ++i9) {
                Test.instanceCount += i9;
            }
            break;
        case 99:
            for (i11 = 6; i11 < 371; i11++) {
                Test.instanceCount = i7;
                Test.iArrFld[i11 - 1] = Test.iArrFld[i11];
                i10 += (((i11 * Test.instanceCount) + i10) - i13);
            }
            break;
        case 100:
            i7 += (int)l;
        }
        long meth_res = Float.floatToIntBits(f) + l + i2 + i6 + i7 + i9 + i10 + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(int i1) {

        double d=-1.84098, d2=-1.129454;
        float f2=0.540F;
        int i14=149, i15=43, i16=160, i17=55535, i18=11, i19=9;

        dArrFld[(i1 >>> 1) % N] -= ((Test.iArrFld[(i1 >>> 1) % N][(i1 >>> 1) % N] *= (i1 + i1)) + ((i1 + i1) * 106));
        d = 1;
        do {
            Test.instanceCount += (long)(-439 * ((-(--i1)) * fMeth(f2, lFld, i1)));
        } while (++d < 260);
        Test.fFld -= i1;
        lArrFld[(i1 >>> 1) % N] = i1;
        i1 *= i1;
        i1 = 247;
        i1 += i1;
        for (i14 = 1; 347 > i14; i14++) {
            for (i16 = 1; i16 < 5; ++i16) {
                lFld += (i16 * i16);
                for (i18 = 1; i18 < 2; ++i18) {
                    short s1=282;
                    Test.lFld1 -= lFld;
                    i17 &= 28;
                    d2 -= s1;
                }
            }
        }
        long meth_res = i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i18 + i19
            + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i20=-57772, i21=-221, i22=8, i23=57, i24=-2, i25=169, i26=-7, i27=60, i28=156;
        short s2=-16958;
        byte byArr[]=new byte[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(byArr, (byte)-84);
        FuzzerUtils.init(bArr, true);

        i = (int)(((Test.instanceCount--) + iMeth(i20)) - i21);
        i20 <<= -13;
        for (i22 = 12; 219 > i22; ++i22) {
            if (Test.bFld) continue;
            i24 = 1;
            do {
                Test.fArrFld[i24] -= i24;
                i23 = -29659;
                byArr[i22 + 1] &= (byte)Test.instanceCount;
                i21 >>>= (int)Test.instanceCount;
                Test.fFld = s2;
            } while (++i24 < 121);
            for (i25 = 6; i25 < 121; i25++) {
                for (i27 = 2; i27 > i25; i27 -= 3) {
                    switch ((i27 % 7) + 55) {
                    case 55:
                        Test.fFld *= lFld;
                        switch (((i22 % 8) * 5) + 116) {
                        case 121:
                            i26 >>= i26;
                            byFld += (byte)Test.instanceCount;
                            break;
                        case 131:
                            i23 *= i27;
                        case 140:
                            bArr[i25] = Test.bFld;
                        case 132:
                            i26 += (((i27 * i) + i25) - i28);
                            Test.iArrFld[i25][i25 - 1] %= (int)(byFld | 1);
                            break;
                        case 143:
                            Test.iArrFld[i22][i27] += (int)-58614L;
                            i26 -= (int)Test.instanceCount;
                            switch ((i25 % 8) + 94) {
                            case 94:
                                if (true) {
                                    Test.iArrFld[i27 - 1][i27 - 1] -= i25;
                                } else if (Test.bFld) {
                                    i23 = (int)10832L;
                                    i23 += i25;
                                } else if (true) {
                                    i26 |= (int)lFld;
                                    i21 += i27;
                                } else {
                                    if (Test.bFld) continue;
                                }
                                break;
                            case 95:
                                Test.lFld1 >>= Test.lFld1;
                                break;
                            case 96:
                                i21 *= byFld;
                                break;
                            case 97:
                                Test.fFld += i27;
                            case 98:
                                Test.iArrFld[i27 - 1][i25 - 1] += i25;
                                break;
                            case 99:
                                i += (int)52.637F;
                                break;
                            case 100:
                                i = i;
                            case 101:
                                i20 *= (int)Test.instanceCount;
                                break;
                            }
                        case 133:
                            i26 += (i27 * i27);
                            break;
                        case 124:
                        case 125:
                            lFld <<= i26;
                            break;
                        default:
                            Test.iArrFld[i25 + 1][i27] >>>= (int)Test.instanceCount;
                        }
                    case 56:
                        Test.fFld /= (i20 | 1);
                        break;
                    case 57:
                        Test.bFld = Test.bFld;
                        break;
                    case 58:
                        Test.fFld = i27;
                        break;
                    case 59:
                        i = -15743;
                        break;
                    case 60:
                        i26 *= i23;
                    case 61:
                        Test.fFld += 13;
                        break;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
