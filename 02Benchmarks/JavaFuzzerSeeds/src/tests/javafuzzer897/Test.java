package tests.javafuzzer897;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:24:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2166965629L;
    public static int iFld=36973;
    public static boolean bFld=true;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -10140L);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        long l1=-11L;
        int i3=-17723, i4=-1, i5=-9, i6=214, i7=-2660, i8=5, i9=-51337, iArr1[]=new int[N];
        byte by=-44, byArr[]=new byte[N];
        float f=116.614F;

        FuzzerUtils.init(iArr1, -33270);
        FuzzerUtils.init(byArr, (byte)-35);

        i2 = (int)l1;
        i3 = 1;
        while (++i3 < 318) {
            for (i4 = i3; 5 > i4; i4++) {
                i2 += i2;
                for (i6 = 1; i6 < 1; ++i6) {
                    i5 += (i6 * i2);
                    try {
                        i5 = (iArr1[i6 - 1] / 29593);
                        i5 = (2022327231 / i3);
                        i7 = (i3 % 174);
                    } catch (ArithmeticException a_e) {}
                    i5 *= i3;
                    byArr[i6 + 1] = (byte)l1;
                }
                i7 += i4;
                i5 += i4;
                for (i8 = 1; 1 > i8; ++i8) {
                    by = (byte)-107;
                }
                f = by;
                i9 += i4;
            }
        }
        vMeth1_check_sum += i2 + l1 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + by + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth() {

        int i10=-61910, i11=49301, i12=1;
        long l2=231L;
        float f1=1.297F;

        vMeth1(Test.iFld);
        i10 = 1;
        do {
            Test.instanceCount <<= i10;
            i11 = 1;
            while (++i11 < 4) {
                Test.iFld <<= i11;
                Test.iFld -= i11;
                for (l2 = 1; l2 < 1; l2++) {
                    i12 = i12;
                    Test.instanceCount = Test.instanceCount;
                    i12 *= (int)f1;
                    Test.lArrFld[(int)(l2)] += (long)-83.115292;
                }
                i12 = i10;
                Test.iFld = i10;
                Test.instanceCount %= (Test.instanceCount | 1);
                i12 = i12;
            }
        } while (++i10 < 384);
        vMeth_check_sum += i10 + i11 + l2 + i12 + Float.floatToIntBits(f1);
    }

    public static float fMeth(long l, int i) {

        int i1=-48845, i13=0, i14=11, i15=-82, i16=6;
        float f2=-83.415F;
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)21953);

        i1 = 1;
        while (++i1 < 375) {
            vMeth();
            Test.instanceCount -= -14;
            i -= Test.iFld;
        }
        l -= (long)f2;
        for (i13 = 2; 139 > i13; ++i13) {
            Test.iFld += (i13 + i13);
            i15 = 1;
            do {
                i16 = 1;
                while (--i16 > 0) {
                    i -= i1;
                    i += i16;
                    sArr[i16 + 1] >>>= (short)i16;
                    if (b) continue;
                    l = i14;
                    i14 >>= -18718;
                }
            } while (++i15 < 11);
        }
        long meth_res = l + i + i1 + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-110.5822;
        int i17=-8306, i18=11, i19=-219, i20=-9, i21=-103, i22=-17167, iArr[]=new int[N];
        float f3=-6.59F, fArr[]=new float[N];
        short s=-16328;
        byte by1=3;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr, -2.932F);

        iArr[(-179 >>> 1) % N] = (int)((d--) * fMeth(Test.instanceCount, 103));
        Test.instanceCount <<= Test.instanceCount;
        for (i17 = 18; 293 > i17; ++i17) {
            i19 = 1;
            while (++i19 < 91) {
                f3 += (i19 * i19);
                for (i20 = 1; i20 > i17; i20--) {
                    float f4=106.802F;
                    iArr[i20 - 1] = Test.iFld;
                    d *= i20;
                    f4 -= -14;
                    Test.bFld = Test.bFld;
                    f3 -= -5520;
                    i18 *= -1804;
                    Test.instanceCount += (((i20 * i21) + f3) - s);
                    iArr[i17 - 1] += i20;
                }
                f3 = Test.instanceCount;
                i18 += (((i19 * i21) + i21) - Test.iFld);
                bArr = bArr;
                Test.instanceCount = by1;
                if (false) {
                    iArr[i19 - 1] += (int)Test.instanceCount;
                }
                i22 = 1;
                while (++i22 < 1) {
                    i18 = (int)Test.instanceCount;
                    s += (short)Test.instanceCount;
                    switch ((i19 % 7) + 56) {
                    case 56:
                        i18 += (-77 + (i22 * i22));
                        switch (((i21 >>> 1) % 9) + 10) {
                        case 10:
                        case 11:
                            Test.lArrFld[i17] ^= i21;
                            fArr[i17 - 1] = i20;
                        case 12:
                            s += (short)i20;
                            break;
                        case 13:
                            f3 += (i22 * i21);
                            break;
                        case 14:
                        case 15:
                            i18 /= (int)-12.427;
                            break;
                        case 16:
                        case 17:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 18:
                            i21 = by1;
                            break;
                        }
                        break;
                    case 57:
                        iArr[i17 - 1] -= (int)Test.instanceCount;
                    case 58:
                    case 59:
                        Test.instanceCount += (i22 - i20);
                        break;
                    case 60:
                        Test.instanceCount += by1;
                        break;
                    case 61:
                        i18 = i20;
                        break;
                    case 62:
                        i21 += i22;
                        break;
                    default:
                        Test.iFld *= i19;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
