package tests.javafuzzer1815;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:39:49 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=10587L;
    public static boolean bFld=true;
    public static byte byFld=-29;
    public static long lFld=41340L;
    public short sFld=-20903;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -56497);
        FuzzerUtils.init(Test.lArrFld, -8L);
    }

    public static long vMeth_check_sum = 0;
    public static long byMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2) {


        Test.iArrFld = Test.iArrFld;
        vMeth1_check_sum += l2;
    }

    public static byte byMeth() {

        int i=1, i1=-45936, i2=-184, i3=-3;
        float f1=2.744F, f2=0.445F;
        double d=82.120087;
        short s=6590;
        boolean b=true;

        i += (int)((-1 - (i * i)) - ((Test.instanceCount - i) + -45236));
        for (i1 = 177; i1 > 11; --i1) {
            i2 = (int)(((i1 + Test.instanceCount) - (f1 - i2)) + -2061695634L);
            vMeth1(Test.instanceCount);
            if (Test.bFld) continue;
            try {
                Test.iArrFld[i1 + 1] = (i % i2);
                Test.iArrFld[i1] = (i / i2);
                i = (1345245788 / i2);
            } catch (ArithmeticException a_e) {}
        }
        Test.iArrFld[(6156 >>> 1) % N] = Test.byFld;
        Test.instanceCount = (long)d;
        switch (((i1 >>> 1) % 8) + 4) {
        case 4:
            Test.instanceCount %= (i2 | 1);
            i = i;
            break;
        case 5:
            for (f2 = 4; 180 > f2; f2++) {
                Test.instanceCount = 38529L;
                s /= (short)(i1 | 1);
                if (b) break;
            }
            break;
        case 6:
            i3 -= i2;
            break;
        case 7:
            i = (int)Test.instanceCount;
            break;
        case 8:
            b = false;
            break;
        case 9:
            i -= (int)Test.instanceCount;
            break;
        case 10:
            s += (short)i3;
            break;
        case 11:
            Test.instanceCount = Test.instanceCount;
            break;
        }
        long meth_res = i + i1 + i2 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + Float.floatToIntBits(f2)
            + i3 + s + (b ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void vMeth(long l, long l1) {

        float f=0.552F, f3=70.216F;
        int i4=-12, i5=62, i6=150, i7=-58673, i8=-19127, i9=-58;
        double d1=0.12495;

        f *= (byMeth() * f);
        Test.lArrFld[(-3359 >>> 1) % N] = i4;
        Test.lFld += i4;
        f *= i4;
        f -= (float)d1;
        for (i5 = 3; i5 < 173; i5++) {
            for (f3 = i5; 9 > f3; f3 += 2) {
                for (i8 = 1; 1 > i8; i8++) {
                    i4 -= (int)f3;
                    l1 -= (long)d1;
                    f *= l1;
                    switch ((i5 % 8) + 80) {
                    case 80:
                        i7 >>>= i6;
                        l1 -= -20470L;
                        sFld = (short)Test.instanceCount;
                    case 81:
                        i7 -= (int)f;
                        break;
                    case 82:
                        sFld = (short)i4;
                        break;
                    case 83:
                        Test.instanceCount -= i4;
                        break;
                    case 84:
                    case 85:
                        i6 <<= -204;
                        break;
                    case 86:
                        d1 -= -2.281F;
                        break;
                    case 87:
                        Test.lArrFld[i8] = i9;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += l + l1 + Float.floatToIntBits(f) + i4 + Double.doubleToLongBits(d1) + i5 + i6 +
            Float.floatToIntBits(f3) + i7 + i8 + i9;
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.instanceCount, 124L);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 byMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
