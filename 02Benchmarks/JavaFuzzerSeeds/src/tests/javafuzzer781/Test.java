package tests.javafuzzer781;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:42:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-20522L;
    public static short sFld=-16767;
    public static int iFld=-173;
    public static int iFld1=13;
    public float fFld=79.53F;
    public static byte byFld=-55;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i8, short s1, int i9) {

        float f2=51.293F;
        int i10=14, i11=224, i12=-182, i13=4, i14=233, i15=-1, iArr1[]=new int[N];
        byte by=-64;
        double d=18.16795;
        boolean b=true;

        FuzzerUtils.init(iArr1, -62941);

        f2 += 0.358F;
        for (i10 = 9; i10 < 275; i10++) {
            i8 -= 45559;
            i8 = by;
            iArr1[i10 - 1] = (int)Test.instanceCount;
            for (i12 = 6; 1 < i12; --i12) {
                d -= i10;
                f2 = by;
                for (i14 = 2; i14 > 1; --i14) {
                    b = b;
                    i15 = (int)Test.instanceCount;
                    if (b) break;
                    i13 = (int)Test.instanceCount;
                    iArr1[i10 - 1] = i10;
                    Test.instanceCount += (i14 ^ Test.instanceCount);
                }
            }
        }
        long meth_res = i8 + s1 + i9 + Float.floatToIntBits(f2) + i10 + i11 + by + i12 + i13 +
            Double.doubleToLongBits(d) + i14 + i15 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f1=0.492F, fArr[]=new float[N];
        int i2=-2894, i3=9, i4=0, i5=-51361, i6=-5, i7=0, i16=-1, iArr[]=new int[N];
        short s=31582;
        long l1=7L, lArr[]=new long[N];
        byte by1=-53;
        double d1=1.101540;

        FuzzerUtils.init(lArr, 13L);
        FuzzerUtils.init(fArr, -2.878F);
        FuzzerUtils.init(iArr, 9);

        f1 = 281;
        while ((f1 -= 3) > 0) {
            i2 = (int)(((s + i2) - (i3 + Test.instanceCount)) + ((s + i3) - (736209041L * Math.min(i2, i3))));
            Test.instanceCount -= (long)((Math.max(Test.instanceCount, Test.instanceCount) * (--i2)) +
                ((Test.instanceCount - 142) - (i2 - f1)));
            i3 += (int)(((f1 * i3) + Test.instanceCount) - i3);
            for (i4 = 1; 16 > i4; i4++) {
                Test.instanceCount = (long)(lArr[i4 - 1] + ((i5++) - fArr[(int)(f1)]));
            }
            for (i6 = 1; i6 < 16; ++i6) {
                iArr[(int)(f1 + 1)] -= iMeth1(i6, s, i4);
                i5 >>= -11;
                for (l1 = 1; l1 < 2; l1++) {
                    i16 += i4;
                    i5 += i6;
                    by1 += (byte)(((l1 * i4) + i7) - i6);
                    lArr[i6 - 1] = i16;
                    iArr[(int)(f1 - 1)] = (int)d1;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i2 + s + i3 + i4 + i5 + i6 + i7 + l1 + i16 + by1 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(long l) {

        int i18=24760, i19=2, i20=-6, i21=3012, iArr2[]=new int[N];
        double d2=25.61151;
        boolean b1=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 44585L);
        FuzzerUtils.init(iArr2, 161);

        vMeth();
        lArr1[(-33 >>> 1) % N] <<= Test.sFld;
        if (true) {
            Test.iFld = Test.iFld;
            l *= Test.iFld1;
            for (int i17 : iArr2) {
                i18 = (int)Test.instanceCount;
            }
            if (b1) {
                Test.iFld = i18;
                for (i19 = 16; i19 < 310; i19++) {
                    if (Test.iFld1 != 0) {
                    }
                    for (d2 = 1; 6 > d2; d2++) {
                        i20 += (-6 + (d2 * d2));
                        l += (long)(d2 * d2);
                        iArr2[i19 - 1] <<= Test.iFld;
                    }
                }
            } else {
                i18 = (int)Test.instanceCount;
            }
        } else if (b1) {
            fFld += -9L;
        }
        long meth_res = l + i18 + i19 + i20 + Double.doubleToLongBits(d2) + i21 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=-1106, i22=-10, i23=-21, i24=45, i25=3, i27=0, i28=239, i29=-64, i30=-39483, iArr3[][]=new
            int[N][N];
        float f=-2.731F;
        long l2=-1384231362L, l3=2874130714772535029L, l4=38583L;
        double d3=2.60650;
        boolean b2=true;

        FuzzerUtils.init(iArr3, 208);

        for (i = 15; i < 269; i++) {
            f -= iMeth(Test.instanceCount);
            for (i22 = 2; i22 < 99; ++i22) {
                Test.iFld1 -= Test.byFld;
                Test.iFld1 = -110;
                for (i24 = 1; i24 < 2; ++i24) {
                    int i26=7;
                    i26 += (i24 * i24);
                    iArr3[i][i24] -= (int)-15.28022;
                    i26 = i23;
                }
            }
            i23 -= (int)Test.instanceCount;
            i1 = i24;
            i25 >>= 154;
            for (l2 = 6; l2 < 99; ++l2) {
                l3 = 1;
                do {
                    i23 >>= i25;
                } while (++l3 < 2);
                iArr3[i][i - 1] += (int)-2.98340;
                d3 = Test.iFld1;
                Test.iFld += (int)(((l2 * i25) + i1) - i25);
                i23 = i24;
                b2 = b2;
                Test.byFld += (byte)(((l2 * i22) + Test.iFld1) - Test.instanceCount);
            }
            Test.instanceCount += i27;
            i28 = 1;
            while (++i28 < 99) {
                Test.iFld ^= (int)l4;
                if (false) continue;
                for (i29 = 1; i29 > 1; i29--) {
                    iArr3[i28][i - 1] = i23;
                    Test.iFld *= Test.byFld;
                    i27 = i;
                    l4 -= (long)f;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
