package tests.javafuzzer3460;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:37:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i2, int i3) {

        int i4=251, i5=4431, i6=3, i7=-3, i8=31208, i9=6, iArr[]=new int[N], iArr1[][]=new int[N][N];
        float f2=-31.781F, f3=-99.246F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 9L);
        FuzzerUtils.init(iArr, -42);
        FuzzerUtils.init(iArr1, 31534);

        for (i4 = 4; i4 < 271; ++i4) {
            for (i6 = 6; i6 > 1; i6 -= 2) {
                for (f2 = 1; 3 > f2; f2++) {
                    f3 *= i3;
                    lArr[(int)(f2)] *= l1;
                    i7 = i5;
                    i3 = i5;
                    l1 = -10;
                    i3 = (int)l1;
                    iArr[(int)(f2 - 1)] -= i4;
                }
                i9 = 3;
                do {
                    i2 = i8;
                    lArr[i4 - 1] <<= i9;
                    iArr1 = iArr1;
                    Test.instanceCount -= l1;
                } while (--i9 > 0);
            }
        }
        vMeth2_check_sum += l1 + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f2) + i8 + Float.floatToIntBits(f3)
            + i9 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(long l, int i1, float f1) {

        short s=-16585;
        double d=12.74048;
        int i10=45907, i11=8, iArr2[][]=new int[N][N];
        byte by=44, byArr[]=new byte[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 159L);
        FuzzerUtils.init(byArr, (byte)-62);
        FuzzerUtils.init(iArr2, 199);

        vMeth2(l, i1, i1);
        for (long l2 : lArr1) {
            Test.instanceCount *= (long)f1;
            if (i1 != 0) {
                vMeth1_check_sum += l + i1 + Float.floatToIntBits(f1) + s + Double.doubleToLongBits(d) + i10 + i11 + by
                    + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
                return;
            }
            i1 += s;
            f1 *= l;
            d += l;
        }
        byArr[(-3 >>> 1) % N] += (byte)i1;
        i1 = i1;
        f1 += i1;
        iArr2[(i1 >>> 1) % N][(-22139 >>> 1) % N] += i1;
        d -= i1;
        for (i10 = 1; i10 < 237; i10++) {
            iArr2[i10 + 1][i10] = by;
            f1 = i10;
        }
        vMeth1_check_sum += l + i1 + Float.floatToIntBits(f1) + s + Double.doubleToLongBits(d) + i10 + i11 + by +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(int i, float f) {

        float f4=-2.852F;
        int i12=-20, i13=-175, i14=189, i15=-38111, i16=-124, iArr3[]=new int[N];
        double d1=-18.49901;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(lArr2, -46781L);
        FuzzerUtils.init(iArr3, 13);

        vMeth1(12L, i, f);
        for (f4 = 11; f4 < 323; f4++) {
            i12 += (int)(f4 - i12);
            for (i13 = 5; 1 < i13; --i13) {
                i12 += (i13 * i13);
                d1 = 1;
                while (++d1 < 2) {
                    f *= Test.instanceCount;
                    i14 += i12;
                }
                for (i15 = 1; i15 < 2; i15++) {
                    Test.instanceCount -= -31;
                    lArr2[(int)(f4 + 1)][i13 + 1] += 112;
                    if (false) break;
                    try {
                        iArr3[i13 - 1] = (iArr3[i13 - 1] % i16);
                        i14 = (255 % i15);
                        iArr3[(int)(f4)] = (i % i15);
                    } catch (ArithmeticException a_e) {}
                    f *= Test.instanceCount;
                    f %= 51;
                }
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f) + Float.floatToIntBits(f4) + i12 + i13 + i14 +
            Double.doubleToLongBits(d1) + i15 + i16 + FuzzerUtils.checkSum(lArr2) + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i17=239, i18=-11, i19=89, i20=214, i21=-3, i22=-26179, iArr4[][]=new int[N][N];
        float f5=1.93F;
        boolean b=false;
        double d2=-2.52870, dArr[]=new double[N];
        long l3=1L, lArr3[]=new long[N];

        FuzzerUtils.init(iArr4, -21147);
        FuzzerUtils.init(dArr, -66.19557);
        FuzzerUtils.init(lArr3, -967039086288877222L);

        Test.instanceCount = (Test.instanceCount--);
        vMeth(i17, f5);
        iArr4[(i17 >>> 1) % N][(-44664 >>> 1) % N] -= i17;
        i17 = (int)Test.instanceCount;
        i18 = 1;
        do {
            i17 += (int)f5;
            iArr4[i18][i18 + 1] = i18;
            for (i19 = 7; i19 < 193; ++i19) {
                switch ((i18 % 3) + 119) {
                case 119:
                    for (i21 = 1; 2 > i21; i21++) {
                        short s1=29872;
                        i20 |= (int)-202L;
                        switch ((i21 % 4) + 95) {
                        case 95:
                            f5 += (((i21 * Test.instanceCount) + i18) - i18);
                            i20 >>= i22;
                            iArr4[i19 + 1][i19 + 1] -= i21;
                        case 96:
                            dArr[i21] += Test.instanceCount;
                            break;
                        case 97:
                            if (b) break;
                            break;
                        case 98:
                            i17 = s1;
                            s1 += (short)(12 + (i21 * i21));
                            lArr3[i19] -= i18;
                            i20 = (int)d2;
                        default:
                            i22 += (i21 * i19);
                            try {
                                i22 = (-79 % i18);
                                i17 = (i18 % 37384);
                                i20 = (iArr4[i21 - 1][i21] / -151);
                            } catch (ArithmeticException a_e) {}
                            i17 >>>= i17;
                        }
                        b = b;
                        f5 = Test.instanceCount;
                    }
                    i20 += (int)f5;
                    i22 += (i19 * i19);
                    i20 -= (int)Test.instanceCount;
                    break;
                case 120:
                    d2 -= i22;
                    break;
                case 121:
                    i20 = (int)l3;
                    break;
                }
            }
        } while (++i18 < 130);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
