package tests.javafuzzer3356;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:38:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=113L;
    public static float fFld=0.421F;
    public static short sFld=-23956;
    public static long lArrFld[][]=new long[N][N];
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -21164L);
        FuzzerUtils.init(Test.sArrFld, (short)-5410);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(byte by, float f1, float f2) {

        int i5=-16, i6=20, i7=46346, i8=-137, i9=-3910;
        double d=1.131032;

        for (i5 = 4; i5 < 173; ++i5) {
            by = (byte)56;
            i6 *= i6;
            for (d = i5; d < 9; ++d) {
                i7 += i5;
                f1 *= Test.instanceCount;
                i6 = (int)-42535L;
            }
        }
        for (i8 = 8; i8 < 190; ++i8) {
            i9 += i9;
        }
        Test.instanceCount = 18451;
        vMeth2_check_sum += by + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i5 + i6 +
            Double.doubleToLongBits(d) + i7 + i8 + i9;
    }

    public static void vMeth1(int i3, int i4, boolean b) {

        byte by1=-88;

        vMeth2(by1, 2.769F, Test.fFld);
        vMeth1_check_sum += i3 + i4 + (b ? 1 : 0) + by1;
    }

    public static void vMeth(int i, int i1, int i2) {

        float f=79.591F;
        boolean b1=false;
        int i10=50751, i11=-11173, i12=179, i13=129, i14=-51681, i15=-135;
        byte by2=-30;

        Test.lArrFld = Test.lArrFld;
        i1 += i2;
        i = (int)((f--) - -1956350338L);
        vMeth1(128, i2, b1);
        for (i10 = 10; i10 < 219; ++i10) {
            i2 &= 7512;
            Test.instanceCount += (i10 * i1);
            i += i1;
            i2 >>= by2;
            for (i12 = 1; 8 > i12; i12++) {
                i2 -= (int)Test.fFld;
            }
            switch ((((i11 >>> 1) % 2) * 5) + 17) {
            case 21:
                for (i14 = 1; i14 < 8; ++i14) {
                    i1 <<= (int)Test.instanceCount;
                    Test.sFld -= Test.sFld;
                }
                break;
            case 22:
                i1 -= (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i10 + i11 + by2 + i12 + i13 + i14 +
            i15;
    }

    public void mainTest(String[] strArr1) {

        int i16=-202;
        byte by3=99;

        vMeth(i16, i16, 94);
        by3 = (byte)-24.216F;
        Test.sArrFld[(i16 >>> 1) % N] += (short)i16;


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
