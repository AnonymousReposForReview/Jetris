package tests.javafuzzer2448;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:49:25 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-7L;
    public volatile byte byFld=-19;
    public static byte byFld1=-100;
    public static boolean bFld=true;
    public double dFld=0.48197;
    public short sFld=14743;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(float f, float f1) {

        int i3=-53830, i4=14662, i5=4, i6=4006, i7=12, iArr1[]=new int[N];
        boolean b=false;
        double dArr[]=new double[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 37361);
        FuzzerUtils.init(dArr, 2.24410);
        FuzzerUtils.init(fArr, -72.573F);

        iArr1[(i3 >>> 1) % N] = -45689;
        for (i4 = 373; i4 > 2; i4 -= 3) {
            double d=25.42599;
            int i8=-7;
            i3 += (-101 + (i4 * i4));
            b = b;
            Test.byFld1 = (byte)Test.instanceCount;
            i3 += i5;
            if (b) {
                for (i6 = 13; 1 < i6; i6 -= 2) {
                    i7 = (int)Test.instanceCount;
                    i7 += (i6 * i6);
                    f *= 1788018883L;
                    dArr = dArr;
                    iArr1 = iArr1;
                }
                fArr[i4] = (float)d;
                i3 -= 169;
            } else {
                i8 += (((i4 * i3) + i8) - i7);
            }
        }
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i3 + i4 + i5 + (b ? 1 : 0) + i6 + i7 +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1() {

        int i2=-7, i9=35363, i10=56212, i11=53530, i12=16186, iArr[]=new int[N];
        float f2=1.277F;
        double d1=0.519;

        FuzzerUtils.init(iArr, -52920);

        i2 = (i2++);
        iArr[(i2 >>> 1) % N] = (int)((-Test.instanceCount) + (Test.instanceCount--));
        i2 -= iMeth2(9.173F, f2);
        i9 = 1;
        do {
            for (i10 = 1; i10 < 5; i10 += 3) {
                Test.instanceCount -= Test.instanceCount;
                i12 = 1;
                while (++i12 < 5) {
                    i11 += (i12 * i12);
                    if (Test.bFld) continue;
                    Test.instanceCount += (i12 ^ i11);
                    f2 += (5 + (i12 * i12));
                    switch ((((i11 >>> 1) % 1) * 5) + 18) {
                    case 22:
                        f2 = (float)d1;
                        f2 += i9;
                        if (Test.bFld) continue;
                    }
                }
            }
        } while (++i9 < 338);
        long meth_res = i2 + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth(int i1) {

        float f3=0.72F;
        int i13=23851, i14=7, i15=-63270, i16=-24294, i17=49673, i18=-6, i19=51, iArr2[]=new int[N];
        short s=-12541;

        FuzzerUtils.init(iArr2, 14);

        byFld = (byte)Short.reverseBytes((short)(iMeth1() - f3));
        for (i13 = 6; i13 < 262; ++i13) {
            i15 = 1;
            while (++i15 < 6) {
                for (i16 = 1; 1 > i16; ++i16) {
                    i17 += (i16 * i15);
                }
                for (i18 = 1; i18 < 1; i18++) {
                    f3 += (i18 * i18);
                    i14 = -8;
                    Test.instanceCount += i13;
                    iArr2 = iArr2;
                    iArr2[i15] = 12;
                    Test.instanceCount *= i19;
                    i19 *= s;
                    Test.instanceCount = i17;
                    try {
                        i14 = (iArr2[i13 - 1] / iArr2[i18]);
                        i19 = (i19 / i13);
                        i14 = (iArr2[i18 - 1] / iArr2[i15 - 1]);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f3) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + s +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-142, i20=176, i21=-62671, i22=-10, i23=-27724, i24=-23320, i25=11187, i26=1, iArr3[]=new int[N];
        float f4=-34.112F;
        long l=3L;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr3, 13);

        i = 1;
        do {
            iMeth(i);
            if (Test.bFld) break;
            i20 += (i + f4);
            l = 86;
            do {
                f4 = (float)dFld;
                i20 -= i;
                i20 += (int)(l + Test.instanceCount);
                f4 -= i;
                for (i21 = 1; i21 < 1; ++i21) {
                    i22 += (i21 * i21);
                    f4 = i21;
                    i20 += i21;
                }
                for (i23 = (int)(l); i23 < 1; ++i23) {
                    f4 += (i23 * i23);
                    Test.instanceCount += i23;
                    i24 = i20;
                    i24 += (((i23 * l) + i) - Test.instanceCount);
                    f4 += (0.987F + (i23 * i23));
                    bArr[(int)(l - 1)] = Test.bFld;
                }
                for (i25 = 1; i25 < 1; i25++) {
                    iArr3 = iArr3;
                    i26 = 7;
                    switch ((((i25 >>> 1) % 4) * 5) + 40) {
                    case 50:
                        i26 = i23;
                        break;
                    case 46:
                        i22 -= (int)58790L;
                        i24 %= (int)(i22 | 1);
                        Test.instanceCount = byFld;
                        break;
                    case 55:
                        Test.instanceCount = l;
                        if (Test.bFld) break;
                        break;
                    case 45:
                        i20 += i25;
                        break;
                    default:
                        sFld -= (short)i21;
                    }
                }
            } while (--l > 0);
        } while (++i < 294);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
