package tests.javafuzzer2397;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:07:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=68L;
    public static float fFld=2.147F;
    public static short sFld=-31786;
    public static int iFld=-49;
    public static short sArrFld[]=new short[N];
    public static double dArrFld[]=new double[N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)2734);
        FuzzerUtils.init(Test.dArrFld, 112.40260);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(short s1, long l) {

        int i4=-6062, i5=-29, iArr1[]=new int[N];
        float f=0.580F;
        byte by1=-101;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, 154L);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, 1);

        lArr[(Test.iFld >>> 1) % N] -= (long)-1.522F;
        lArr[(-16509 >>> 1) % N] += Test.iFld;
        i4 = 1;
        while (++i4 < 297) {
            Test.iFld += -9;
            for (f = i4; f < 6; f++) {
                bArr[i4 - 1] = true;
                Test.iFld *= (int)l;
                i5 = -5151;
                i5 >>= -70;
            }
            Test.instanceCount += 16331;
            switch ((i4 % 4) + 24) {
            case 24:
                by1 += (byte)i4;
                Test.dArrFld[(Test.iFld >>> 1) % N] /= 6649L;
                i5 = i5;
            case 25:
            case 26:
                i5 -= i5;
            case 27:
                Test.iFld <<= Test.iFld;
                break;
            }
        }
        vMeth_check_sum += s1 + l + i4 + Float.floatToIntBits(f) + i5 + by1 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static float fMeth() {

        int i2=1091, i3=-50678, iArr[]=new int[N];
        byte by=26;
        boolean b=false, b1=true;

        FuzzerUtils.init(iArr, -3);

        if (b1) {
            for (i2 = 4; i2 < 336; ++i2) {
                switch (((((int)(Test.instanceCount * i2)) >>> 1) % 5) + 15) {
                case 15:
                    i3 += (-235 + (i2 * i2));
                    Test.instanceCount = (i3 + Math.min((int)(5.933 + iArr[i2 - 1]), i2 - by));
                    i3 += (i2 * i2);
                    Test.sFld += (short)(i2 | i3);
                    break;
                case 16:
                    b = b1;
                    Test.instanceCount -= (-((Test.instanceCount * Test.instanceCount) - iArr[i2]));
                    i3 = (i3++);
                    break;
                case 17:
                    vMeth(Test.sFld, Test.instanceCount);
                    Test.iFld += (int)Test.fFld;
                    break;
                case 18:
                    Test.instanceCount <<= i3;
                    iArr[i2] *= i2;
                case 19:
                    Test.fFld = Test.instanceCount;
                }
            }
        } else if (b) {
            by = (byte)Test.iFld;
        } else {
            i3 = i2;
        }
        long meth_res = i2 + i3 + by + (b ? 1 : 0) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public int iMeth(int i1) {


        i1 >>= (int)(fMeth() * Test.fFld);
        long meth_res = i1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-11, i7=-22673, i8=62140, i9=171, i10=-6884, i11=-35067, i12=73, i13=2723, i14=-192;
        double d=-122.68721;
        boolean b2=true;
        byte by2=100;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -8607001217206031899L);

        Test.fFld += (-((i / (i | 1)) - iMeth(i)));
        i7 = 1;
        do {
            Test.iFld -= (int)Test.fFld;
            Test.instanceCount = Test.iFld;
            for (i8 = 89; i8 > 3; i8--) {
                i -= Test.sFld;
                i10 = 1;
                do {
                    Test.instanceCount >>>= i9;
                    switch ((i10 % 3) + 18) {
                    case 18:
                        i11 /= 12708;
                        break;
                    case 19:
                    case 20:
                        lArr1 = lArr1;
                        Test.instanceCount += (i10 * i10);
                        i9 += i10;
                    default:
                        Test.sFld >>= (short)i10;
                        Test.fFld = i8;
                    }
                    i = (int)-1.10F;
                    i11 = 59952;
                    d -= d;
                    iArrFld = iArrFld;
                    i -= (int)Test.instanceCount;
                    b2 = b2;
                    Test.instanceCount = Test.sFld;
                    i11 <<= (int)Test.instanceCount;
                } while (++i10 < 2);
                lArr1[i8] = (long)Test.fFld;
                Test.fFld -= i8;
            }
        } while (++i7 < 284);
        i12 = 1;
        while (++i12 < 156) {
            Test.fFld += (((i12 * Test.iFld) + Test.iFld) - i11);
            for (i13 = i12; 161 > i13; i13++) {
                by2 >>= (byte)-79;
                iArrFld[i12] = (int)d;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
