package tests.javafuzzer3053;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:20:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-8042971354040973824L;
    public static volatile int iFld=63526;
    public static int iFld1=-6;
    public static volatile boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 2.751F);
        FuzzerUtils.init(Test.iArrFld, -224);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f1, float f2) {

        int i7=-60396, i8=-102, i9=-209, i10=162, iArr[]=new int[N];
        short s=-19843;
        double d=116.121498;

        FuzzerUtils.init(iArr, -1959);

        f1 = Test.iFld;
        Test.iFld -= -45796;
        for (i7 = 16; i7 < 311; i7++) {
            for (i9 = 1; i9 < 6; ++i9) {
                i8 *= i10;
                s = (short)i9;
                switch (((i7 % 2) * 5) + 121) {
                case 125:
                case 127:
                    Test.iFld += (i9 * i9);
                    iArr[i9 + 1] >>= s;
                    d = 1;
                    do {
                        iArr[(int)(d + 1)] -= (int)Test.instanceCount;
                        f1 -= s;
                        i10 += (int)(((d * i9) + f1) - f1);
                        i10 = Test.iFld;
                        Test.fArrFld[i9 + 1] -= (float)0.5461;
                    } while ((d += 2) < 2);
                    break;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 + s +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i2, byte by) {

        int i3=-5, i4=-59679, i5=-16695, i6=8367;
        float f3=91.208F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -50038L);

        for (i3 = 13; i3 < 282; ++i3) {
            for (i5 = 1; i5 < 6; ++i5) {
                i6 += (i5 - i4);
                if (i2 != 0) {
                }
                lArr[i5] = i2;
                Test.instanceCount += iMeth1(f3, -2.978F);
            }
        }
        i4 |= (int)-1623304131329999403L;
        long meth_res = i2 + by + i3 + i4 + i5 + i6 + Float.floatToIntBits(f3) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(long l) {

        byte by1=33;
        int i11=9, i12=53773, i13=10, i14=-42263, i15=-18447, i16=-63414;
        boolean b=false;
        short s1=1863;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 97L);

        Test.iFld += (int)lMeth(Test.iFld, by1);
        Test.iFld = 60847;
        for (i11 = 348; i11 > 17; --i11) {
            if (b) {
                i12 += Test.iFld;
            } else {
                s1 -= (short)-181;
                switch ((i11 % 9) + 76) {
                case 76:
                    Test.iFld *= i11;
                    i12 += i11;
                    Test.iArrFld[i11] >>= i12;
                    for (i13 = i11; 5 > i13; ++i13) {
                        i14 = i14;
                        for (i15 = 1; i15 < 1; ++i15) {
                            Test.iFld = Test.iFld;
                            s1 -= (short)Test.iFld;
                        }
                    }
                    break;
                case 77:
                    Test.iFld = (int)l;
                    break;
                case 78:
                case 79:
                    l -= s1;
                    break;
                case 80:
                    lArr1[i11] += -29446;
                    break;
                case 81:
                    i16 = i14;
                    break;
                case 82:
                    if (false) break;
                case 83:
                    i16 *= i12;
                    break;
                case 84:
                    Test.instanceCount ^= 59589;
                default:
                    b = b;
                }
            }
        }
        long meth_res = l + by1 + i11 + i12 + (b ? 1 : 0) + s1 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=5, i1=-252, i17=-24492, i18=3494, i19=-16, i20=-29889, i21=-5, i22=-12;
        float f=65.346F;
        byte by2=78;
        double d1=21.72861;

        for (i = 11; 220 > i; i += 2) {
            f -= iMeth(Test.instanceCount);
            try {
                Test.iArrFld[i + 1] = (23080 % Test.iFld);
                i1 = (i / i);
                Test.iFld = (i1 / 131);
            } catch (ArithmeticException a_e) {}
            i1 += (((i * i) + f) - Test.iFld1);
            i1 += (i ^ (long)f);
            Test.iFld1 *= 4233;
            for (i17 = 2; i17 < 241; i17++) {
                Test.bFld = true;
                if (Test.bFld) {
                    by2 += (byte)(((i17 * Test.iFld1) + i17) - i18);
                } else {
                    for (i19 = i; i19 < 2; ++i19) {
                        i20 = 232;
                        i20 += i1;
                        d1 *= Test.instanceCount;
                        Test.iFld = (int)Test.instanceCount;
                        Test.iFld1 *= i;
                        Test.instanceCount -= i;
                        Test.instanceCount += i19;
                        i18 += (i19 * i19);
                        if (Test.bFld) break;
                    }
                }
                for (i21 = 1; i21 < 2; i21++) {
                    if (Test.bFld) break;
                    Test.instanceCount = i18;
                    Test.iArrFld[i17] -= (int)Test.instanceCount;
                    Test.bFld = Test.bFld;
                    Test.instanceCount -= -2947567398L;
                    Test.instanceCount += i1;
                    if (true) {
                        by2 -= (byte)d1;
                        Test.iFld += (i21 - f);
                    } else if (Test.bFld) {
                        Test.iArrFld[i - 1] *= (int)d1;
                    } else {
                        Test.iFld += (((i21 * i) + Test.iFld) - i22);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
