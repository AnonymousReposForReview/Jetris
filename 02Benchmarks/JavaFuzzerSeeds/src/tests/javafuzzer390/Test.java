package tests.javafuzzer390;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:09:42 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-184L;
    public static long lFld=-1420868147L;
    public static float fFld=-125.915F;
    public static boolean bFld=true;
    public int iFld=0;
    public double dFld=125.19768;
    public static volatile short sFld=4682;
    public static volatile long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3911490664L);
        FuzzerUtils.init(Test.fArrFld, -19.654F);
        FuzzerUtils.init(Test.iArrFld, -181);
    }

    public static long dMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d1, int i4, float f) {

        int i5=9, i6=230, i7=-124, i8=185, i9=-4;
        boolean b=false;
        short s=-15457;
        byte by=-26;

        i4 -= i4;
        for (i5 = 10; i5 < 249; i5++) {
            if (b) {
                if (b) {
                    Test.lArrFld[i5] = 4;
                    i6 += (int)d1;
                    i4 <<= i6;
                }
                for (i7 = 1; i7 < 7; ++i7) {
                    i9 = 1;
                    while (++i9 < 2) {
                        Test.instanceCount >>= i8;
                        i8 += (i9 * i7);
                        Test.lFld >>= s;
                    }
                    Test.instanceCount = i8;
                    by = (byte)i8;
                    i6 /= (int)(i7 | 1);
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i4 + Float.floatToIntBits(f) + i5 + i6 + (b ? 1 : 0) + i7 + i8
            + i9 + s + by;
    }

    public static long lMeth(int i3, long l) {

        double d=0.86101;
        int i10=-10, i11=-11224;

        d -= Long.reverseBytes(i3 >> (-11 - (i3 * i3)));
        vMeth(d, i3, Test.fFld);
        Test.instanceCount %= (long)1.127192;
        for (i10 = 5; i10 < 380; ++i10) {
            i11 += -221;
            i11 += (int)(64313L + (i10 * i10));
            Test.lFld += -9;
            i3 += (i10 ^ i3);
            i3 -= (int)d;
        }
        Test.instanceCount <<= i10;
        for (float f1 : Test.fArrFld) {
            i11 += (int)l;
            if (Test.bFld) continue;
            i3 += i3;
            Test.lFld = i11;
        }
        long meth_res = i3 + l + Double.doubleToLongBits(d) + i10 + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static double dMeth(int i, int i1) {

        int i2=-40441, i12=10509, i13=14989, i14=238, i15=-20221, i16=3, i17=3, iArr[]=new int[N];
        long lArr[][]=new long[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(byArr, (byte)-111);
        FuzzerUtils.init(iArr, -1);

        i2 = 1;
        do {
            Test.lArrFld[i2 + 1] *= (long)(lMeth(i2, Test.instanceCount) + Test.fFld);
        } while (++i2 < 227);
        for (i12 = 5; i12 < 236; ++i12) {
            switch ((i12 % 3) + 116) {
            case 116:
                lArr = lArr;
                i1 += -68;
                i = i1;
                break;
            case 117:
                Test.instanceCount += i12;
                switch ((i12 % 7) + 70) {
                case 70:
                    i13 %= (int)(i | 1);
                    for (i14 = 7; i14 > 1; i14 -= 3) {
                        for (i16 = i12; i16 < 4; i16++) {
                            byArr[i14 - 1] <<= (byte)Test.instanceCount;
                            i17 = i14;
                            iArr[i14 + 1] = i12;
                        }
                    }
                    break;
                case 71:
                    if (false) continue;
                    break;
                case 72:
                    i17 += -13;
                    break;
                case 73:
                    lArr[i12][i12 - 1] = Test.instanceCount;
                    break;
                case 74:
                    Test.lFld |= 14350L;
                case 75:
                    i13 = i;
                case 76:
                    i1 += i15;
                    break;
                }
                break;
            case 118:
                i17 &= i1;
                break;
            }
        }
        long meth_res = i + i1 + i2 + i12 + i13 + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=-3, i19=10798, i20=7, i21=-173, i22=8, i23=-49, i24=5, i25=-3609, i26=-55853, i27=14, i28=-10,
            i29=-58670;

        dMeth(iFld, iFld);
        for (i18 = 4; i18 < 341; i18++) {
            dFld = iFld;
            iFld = iFld;
            for (i20 = 4; i20 < 75; ++i20) {
                iFld <<= iFld;
            }
            iFld = (int)146L;
            Test.lArrFld[i18 - 1] -= Test.instanceCount;
        }
        for (i22 = 15; i22 < 340; ++i22) {
            Test.fFld += -155;
            Test.fFld = -13;
            iFld = i23;
            iFld += (int)Test.lFld;
            i23 += i22;
            Test.instanceCount += Test.sFld;
            Test.lFld = (long)Test.fFld;
            iFld += (i22 ^ i22);
            i19 *= 61497;
            i21 = (int)Test.lFld;
        }
        for (i24 = 7; i24 < 172; i24++) {
            for (i26 = 2; 152 > i26; ++i26) {
                for (i28 = 1; i28 < 2; i28++) {
                    i21 += (((i28 * i18) + i29) - i19);
                    dFld -= Test.sFld;
                    i21 = -2;
                    i21 = (int)Test.instanceCount;
                    Test.iArrFld[i28] += (int)Test.instanceCount;
                    Test.fFld += i21;
                    Test.fFld += (float)dFld;
                }
            }
            i19 = (int)64.21131;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  lMeth ->  lMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
