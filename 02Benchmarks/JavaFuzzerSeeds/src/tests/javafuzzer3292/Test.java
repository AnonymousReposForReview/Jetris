package tests.javafuzzer3292;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:40:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-103L;
    public static float fFld=0.68F;
    public static int iFld=-55024;
    public static boolean bFld=false;
    public double dFld=-1.62212;
    public static byte byFld=73;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(boolean b, long l2) {

        int i3=-10, i4=-2, i5=-3, i6=84, iArr[]=new int[N];
        double d=-120.37902, dArr[][]=new double[N][N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 13);
        FuzzerUtils.init(dArr, -88.16884);
        FuzzerUtils.init(lArr1, -57482L);

        Test.iFld >>= (int)Test.instanceCount;
        i3 = 269;
        while ((i3 -= 2) > 0) {
            for (i4 = 1; i4 < 12; i4++) {
                Test.iFld += (i4 | i5);
                d -= Test.iFld;
                i6 = i5;
            }
            Test.iFld ^= (int)50211502L;
            Test.iFld *= i6;
            Test.instanceCount = i3;
            switch (((i3 % 3) * 5) + 72) {
            case 84:
                if (b) {
                    iArr[i3] = -36053;
                    Test.fFld += (i3 * i3);
                    dArr[i3 + 1][i3 - 1] += Test.iFld;
                    if (b) break;
                } else if (b) {
                    iArr[i3 - 1] = i5;
                } else {
                    Test.instanceCount += (long)-29.42560;
                }
                break;
            case 78:
                lArr1[i3 + 1] = i6;
            case 79:
                i6 &= i3;
                break;
            }
        }
        long meth_res = (b ? 1 : 0) + l2 + i3 + i4 + i5 + Double.doubleToLongBits(d) + i6 + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i1, int i2) {

        byte by=-102, byArr[]=new byte[N];
        short s=-601;
        int i7=0, i8=2, i9=-74, iArr1[]=new int[N];

        FuzzerUtils.init(byArr, (byte)-115);
        FuzzerUtils.init(iArr1, 11);

        i1 += (int)(((by += (byte)Test.fFld) + (++i1)) - (s - (179 - iMeth1(Test.bFld, Test.instanceCount))));
        i7 = 1;
        do {
            i2 = i1;
            byArr = byArr;
            i2 &= (int)Test.instanceCount;
            iArr1[i7 - 1] = i7;
            for (i8 = 1; i8 < 5; i8++) {
                iArr1[i7] *= (int)Test.instanceCount;
                Test.iFld = (int)Test.instanceCount;
                Test.instanceCount -= (long)Test.fFld;
                i9 *= (int)Test.instanceCount;
            }
            i2 >>= 11;
            iArr1[i7] += (int)Test.instanceCount;
            Test.fFld += Test.instanceCount;
            iArr1[i7 - 1] -= i7;
        } while (++i7 < 351);
        long meth_res = i1 + i2 + by + s + i7 + i8 + i9 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, long l1, int i) {

        short s1=-20610;
        int i10=13, i11=-35149, i12=-101, i13=102, i14=-12, iArr2[]=new int[N];
        double d1=-1.125441;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -163L);
        FuzzerUtils.init(iArr2, 7);

        i |= (int)(++lArr[(7 >>> 1) % N]);
        i = ((-iMeth(i, -62386)) + Test.iFld);
        i = Test.iFld;
        i = (int)l1;
        iArr2[(-24 >>> 1) % N] += (int)Test.instanceCount;
        s1 <<= (short)Test.instanceCount;
        l1 = Test.instanceCount;
        iArr2 = iArr2;
        for (i10 = 13; 372 > i10; i10++) {
            iArr2[i10 - 1] -= i10;
            for (i12 = 1; 5 > i12; i12++) {
                Test.fFld -= i;
                for (d1 = i10; d1 < 2; d1++) {
                    l1 += (long)(d1 + i10);
                }
                s1 -= (short)i11;
            }
        }
        vMeth_check_sum += l + l1 + i + s1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        double d2=1.17966;
        int i15=-113, i16=55913, i17=7, i18=-18918, i19=103, i20=15, i21=-252, iArr3[][]=new int[N][N];
        short s2=-32065;
        long lArr2[]=new long[N];

        FuzzerUtils.init(iArr3, 62166);
        FuzzerUtils.init(lArr2, -3860142108508286766L);

        vMeth(Test.instanceCount, Test.instanceCount, Test.iFld);
        dFld *= Test.iFld;
        for (d2 = 14; d2 < 314; d2++) {
            Test.instanceCount = i15;
            if (Test.bFld) break;
            i15 += (int)(d2 + Test.instanceCount);
            Test.instanceCount += (long)d2;
            i15 *= (int)Test.instanceCount;
            Test.iFld = i15;
            iArr3[(int)(d2)][(int)(d2)] = Test.iFld;
            Test.iFld = i15;
            for (i16 = 4; i16 < 84; ++i16) {
                i17 = 39173;
                switch (((i16 >>> 1) % 3) + 51) {
                case 51:
                    i17 -= s2;
                    for (i18 = 1; i18 < 2; i18++) {
                        iArr3[(int)(d2 + 1)][i16 + 1] += s2;
                        if (Test.bFld) {
                            i15 += 22892;
                            Test.fFld += i16;
                            Test.fFld += (i18 - i16);
                        }
                    }
                    i17 += i18;
                    lArr2[(int)(d2)] = i17;
                case 52:
                    Test.instanceCount = Test.iFld;
                    Test.instanceCount += i16;
                    Test.instanceCount /= (i19 | 1);
                    for (i20 = 1; i20 < 2; i20++) {
                        Test.iFld *= -44;
                        Test.instanceCount += (i20 | Test.instanceCount);
                    }
                    break;
                case 53:
                    Test.byFld = (byte)Test.instanceCount;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
