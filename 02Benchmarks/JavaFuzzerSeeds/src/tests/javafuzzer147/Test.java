package tests.javafuzzer147;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 23:03:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7277216032194607364L;
    public static double dFld=-101.79366;
    public static float fFld=49.921F;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 43.950F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-9610, i5=-56946, i6=56284, i7=-5, i8=-56677, i9=-90, i10=12, iArr[]=new int[N];
        short s=-4412;
        float f=0.432F;
        byte by=0;

        FuzzerUtils.init(iArr, -27555);

        i4 = i4;
        iArr[(i4 >>> 1) % N] = i4;
        i4 = (int)Test.instanceCount;
        for (i5 = 7; i5 < 358; i5++) {
            for (i7 = 1; i7 < 5; i7++) {
                i6 &= i6;
                if (true) break;
                i8 -= i4;
                i8 += i5;
                i4 -= i6;
                for (i9 = 1; i9 < 2; i9++) {
                    Test.instanceCount += (i9 * s);
                    f += f;
                    f = by;
                    i8 <<= (int)4394466173383841817L;
                }
            }
        }
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s + Float.floatToIntBits(f) + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i1=-57, i2=123, i3=-36, i11=-2, i12=10;
        short s1=-20371;
        double d=-59.49414, dArr[]=new double[N];
        float f1=-2.189F;

        FuzzerUtils.init(dArr, 0.95494);

        i1 += (int)(--dArr[(i1 >>> 1) % N]);
        for (i2 = 347; 8 < i2; i2--) {
            vMeth2();
            i1 += (((i2 * Test.instanceCount) + s1) - i2);
            for (i11 = 1; 5 > i11; i11++) {
                d += f1;
                Test.instanceCount -= i3;
                i3 = i11;
                i12 = i12;
                i12 >>>= -160;
                Test.instanceCount = (long)f1;
                Test.instanceCount <<= 225L;
            }
        }
        i12 -= i1;
        i12 -= (int)Test.instanceCount;
        i12 -= i12;
        vMeth1_check_sum += i1 + i2 + i3 + s1 + i11 + i12 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i, long l) {

        int i13=30283, i14=-90, i15=52030, i16=-8, i17=222, iArr1[]=new int[N];
        double d1=0.14299, dArr1[]=new double[N];
        short sArr[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr1, -100.6180);
        FuzzerUtils.init(sArr, (short)-32260);
        FuzzerUtils.init(lArr, -16517L);
        FuzzerUtils.init(iArr1, 4);

        vMeth1();
        for (i13 = 13; i13 < 339; ++i13) {
            dArr1[i13 - 1] = Test.instanceCount;
            i14 += (int)Test.instanceCount;
            for (d1 = 1; 5 > d1; d1++) {
                l -= i13;
                for (i16 = 1; i16 < 2; i16++) {
                    sArr[(int)(d1)] += (short)-55496L;
                    Test.dFld *= i;
                    switch ((int)((d1 % 1) + 28)) {
                    case 28:
                        Test.fArrFld[i16 - 1] += Test.instanceCount;
                        break;
                    default:
                        lArr = FuzzerUtils.long1array(N, (long)699219037368909240L);
                        if (i17 != 0) {
                            vMeth_check_sum += i + l + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(sArr) +
                                FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                    }
                    i15 = 38305;
                    iArr1[i16 - 1] -= i13;
                }
            }
        }
        vMeth_check_sum += i + l + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth(-178, Test.instanceCount);
        Test.fFld -= (float)Test.dFld;
        bArr = bArr;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
