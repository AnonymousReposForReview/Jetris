package tests.javafuzzer206;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:09:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-36994L;
    public static byte byFld=-88;
    public static float fFld=93.786F;
    public static boolean bFld=true;
    public int iFld=-244;
    public short sFld=24380;
    public static int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -25592);
        FuzzerUtils.init(Test.dArrFld, 0.99850);
        FuzzerUtils.init(Test.fArrFld, 2.229F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, int i5, int i6) {

        int i7=21643, i8=63005, i9=5, i10=-9, i11=-214, i12=42089, iArr[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -234);
        FuzzerUtils.init(fArr, 0.353F);

        i6 -= i6;
        for (i7 = 5; i7 < 319; i7++) {
            iArr[i7 + 1] -= (int)Test.fFld;
            i5 >>>= i5;
            for (i9 = 5; i9 > 1; i9--) {
                i10 = i7;
                i6 &= i5;
                if (Test.bFld) break;
                fArr[i9 + 1] *= Test.byFld;
                for (i11 = 1; i11 < 2; ++i11) {
                    i8 += (((i11 * i5) + i5) - i5);
                    Test.instanceCount += (i11 + Test.instanceCount);
                    if (true) break;
                    Test.fFld += i8;
                    i12 *= (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(short s, int i3) {

        int i14=121, i15=14, i16=-9, i17=-60337, i18=6, i19=197;

        vMeth1(i3, i3, i3);
        i3 += i3;
        Test.iArrFld[(i3 >>> 1) % N] = i3;
        Test.iArrFld[(i3 >>> 1) % N] *= (int)Test.instanceCount;
        for (int i13 : Test.iArrFld) {
            Test.dArrFld[(i3 >>> 1) % N] *= 9L;
            Test.bFld = Test.bFld;
        }
        for (i14 = 6; i14 < 165; ++i14) {
            for (i16 = 1; 10 > i16; ++i16) {
                i3 += i17;
                for (i18 = 1; i18 < 2; i18++) {
                    switch ((i18 % 2) + 13) {
                    case 13:
                        Test.iArrFld[i14 + 1] += i17;
                        Test.instanceCount = i14;
                        break;
                    case 14:
                        Test.iArrFld[i14 + 1] = i3;
                        break;
                    default:
                        i15 |= (int)Test.instanceCount;
                    }
                }
            }
        }
        vMeth_check_sum += s + i3 + i14 + i15 + i16 + i17 + i18 + i19;
    }

    public static int iMeth(long l, int i) {

        int i1=7, i2=8, i20=53941, i21=6;
        short s1=5254;
        long l2=55200L, lArr[]=new long[N];
        double d=-1.77371;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 0L);

        i += Math.abs(Integer.reverseBytes(Test.byFld - i));
        for (i1 = 11; i1 < 262; ++i1) {
            i >>>= (--Test.byFld);
            vMeth(s1, 179);
            i2 = (int)Test.instanceCount;
            bArr[i1 - 1] = Test.bFld;
            Test.dArrFld[i1 + 1] = l;
        }
        i = i;
        switch (((i2 >>> 1) % 9) + 69) {
        case 69:
            for (long l1 : lArr) {
                for (i20 = 1; i20 < 4; i20++) {
                    Test.fArrFld[i20 - 1] -= i2;
                    l2 = 1;
                    do {
                        i2 += (int)(((l2 * i) + i1) - s1);
                        Test.iArrFld[i20 - 1] = (int)Test.fFld;
                    } while (++l2 < 2);
                }
            }
            break;
        case 70:
            i2 += i;
            break;
        case 71:
            l = 35575;
            break;
        case 72:
            Test.fFld = -13;
            break;
        case 73:
            i21 += i2;
        case 74:
            i -= (int)d;
            break;
        case 75:
            i += i;
        case 76:
            lArr[(i20 >>> 1) % N] += i21;
            break;
        case 77:
            lArr[(i2 >>> 1) % N] >>= i;
            break;
        default:
            i = 5;
        }
        long meth_res = l + i + i1 + i2 + s1 + i20 + i21 + l2 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(bArr)
            + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=0.535F, f1=-37.118F;
        int i23=-57613, i24=6780, i25=0, i26=-13453, i27=5, i28=166, i29=-1, i30=-26531;
        double d1=-88.8428;

        Test.instanceCount >>= (long)(((++f) + iMeth(Test.instanceCount, iFld)) - iFld);
        iFld = iFld;
        Test.instanceCount *= 237;
        if (Test.bFld) {
            sFld >>= (short)6;
        } else if (false) {
            iFld -= iFld;
            for (i23 = 10; i23 < 261; i23++) {
                i24 += (int)d1;
                Test.fFld += i23;
                i25 *= -55149;
                Test.instanceCount >>= 4;
                sArrFld[i23] >>>= (short)iFld;
            }
            Test.fFld += (float)d1;
            for (i26 = 8; i26 < 154; i26++) {
                Test.byFld += (byte)(i26 - i26);
                i28 = 172;
                while (--i28 > 0) {
                    Test.instanceCount |= i23;
                    switch ((i26 % 7) + 46) {
                    case 46:
                        iFld >>= 58902;
                        Test.fFld += i28;
                    case 47:
                        Test.instanceCount = (long)f1;
                        i25 = (int)Test.instanceCount;
                        f = i23;
                        break;
                    case 48:
                        Test.instanceCount += i28;
                        d1 -= i28;
                        d1 = i25;
                        Test.iArrFld[i28 + 1] = iFld;
                        break;
                    case 49:
                        for (i29 = 1; i29 < 1; ++i29) {
                            Test.instanceCount >>= iFld;
                            Test.iArrFld[i28 - 1] *= i23;
                        }
                        break;
                    case 50:
                    case 51:
                        iFld += (i28 - i26);
                        break;
                    case 52:
                        Test.instanceCount = -1;
                    default:
                        Test.iArrFld[i28] = i23;
                    }
                }
            }
        } else {
            i25 -= sFld;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
