package tests.javafuzzer1894;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:27:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=28597L;
    public double dFld=1.32366;
    public static boolean bFld=true;
    public static int iFld=11;
    public static volatile float fFld=1.680F;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -29.874F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d) {

        int i3=-29230, i4=51390, i5=-121, i6=10, i7=42820, i8=-30690, i9=11;
        short s=7332;
        boolean b=true;

        for (i3 = 5; i3 < 326; i3++) {
            if (true) {
                for (i5 = 1; 5 > i5; ++i5) {
                    i4 *= (int)Test.instanceCount;
                    i6 += (i5 + Test.instanceCount);
                    s += (short)i5;
                }
                Test.instanceCount -= 6898628066440115392L;
                i6 = (int)d;
                for (i7 = i3; i7 < 5; i7++) {
                    i9 = 1;
                    do {
                        Test.instanceCount = (long)1.662F;
                        if (b) continue;
                        if (b) break;
                        Test.instanceCount = (long)d;
                        i8 += (((i9 * i3) + i6) - i5);
                    } while (++i9 < 1);
                }
            } else {
                Test.instanceCount >>= i3;
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + s + i7 + i8 + i9 + (b ? 1 : 0);
    }

    public static void vMeth(int i1) {

        int i2=46253, i10=-39580, i11=-6, i12=181, i13=118, i14=5, iArr[][]=new int[N][N];
        long l1=4226990369L;
        float f=-118.992F, f1=110.333F;
        double d1=2.48352, dArr[]=new double[N];
        short s1=-14908;

        FuzzerUtils.init(iArr, -1);
        FuzzerUtils.init(dArr, 27.86794);

        i2 = 1;
        while (++i2 < 155) {
            byte by=38;
            l1 = (long)f;
            vMeth1(d1);
            f += (i2 + by);
            for (i10 = i2; i10 < 10; i10++) {
                i1 >>= i11;
                i1 = i2;
            }
            i11 = i1;
            for (i12 = 1; i12 < 10; ++i12) {
                for (f1 = 1; f1 < 2; f1++) {
                    iArr[i2 + 1][i12 + 1] *= (int)d1;
                    switch (((i11 >>> 1) % 9) + 7) {
                    case 7:
                        f = i14;
                        l1 *= i12;
                        f -= i13;
                        break;
                    case 8:
                        l1 -= 24027;
                        break;
                    case 9:
                        i1 = i1;
                        break;
                    case 10:
                        d1 += i2;
                    case 11:
                        dArr[i2 - 1] -= i1;
                        break;
                    case 12:
                        l1 *= (long)f1;
                        break;
                    case 13:
                        i1 += i1;
                        break;
                    case 14:
                        s1 = (short)-1134;
                        break;
                    case 15:
                        Test.bFld = Test.bFld;
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + l1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13
            + Float.floatToIntBits(f1) + i14 + s1 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth(long l) {

        int i15=-131, i16=-18695, i17=-4, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 6);

        vMeth(i15);
        i15 = i15;
        for (i16 = 4; i16 < 219; ++i16) {
            i17 ^= i17;
            i17 += (i16 * i16);
            iArr1[i16 - 1] >>= (int)1002751286689099117L;
        }
        long meth_res = l + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=9, i18=99, i19=10, i20=57437, i21=-140, i22=-77, i23=-13, i24=-70, i25=-8, i26=-31;
        short s2=-12144;
        double d2=57.126102;
        byte by1=34;
        boolean bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -234L);

        dFld *= (--i);
        i -= (int)(i - (iMeth(Test.instanceCount) * Test.instanceCount));
        i *= i;
        bArr[(i >>> 1) % N] = Test.bFld;
        for (i18 = 17; i18 < 315; ++i18) {
            for (i20 = 2; i20 < 84; i20 += 3) {
                Test.bFld = Test.bFld;
                if (Test.bFld) {
                    i19 += (i20 | Test.instanceCount);
                    lArr[i18 - 1] -= i20;
                    i22 = 1;
                    while (++i22 < 4) {
                        Test.iFld = s2;
                        i21 *= (int)Test.instanceCount;
                    }
                    for (d2 = 1; d2 < 4; d2++) {
                        switch (((i18 % 8) * 5) + 27) {
                        case 50:
                            switch (((i20 % 2) * 5) + 29) {
                            case 32:
                                Test.iFld += (7 + (d2 * d2));
                                i = i21;
                                Test.instanceCount >>>= i21;
                                break;
                            case 36:
                                Test.instanceCount <<= Test.instanceCount;
                                switch (((Test.iFld >>> 1) % 8) + 54) {
                                case 54:
                                    dFld = -1924348095L;
                                    Test.fFld = Test.fFld;
                                    if (Test.bFld) break;
                                    Test.iFld >>= -27933;
                                    break;
                                case 55:
                                    Test.iFld -= Test.iFld;
                                    break;
                                case 56:
                                    i += (int)((long)d2 | (long)Test.fFld);
                                    Test.fFld -= i19;
                                    break;
                                case 57:
                                    i19 = 1;
                                    break;
                                case 58:
                                    by1 = (byte)-13L;
                                    break;
                                case 59:
                                    Test.instanceCount *= i22;
                                    break;
                                case 60:
                                case 61:
                                    i24 = Test.iFld;
                                    break;
                                default:
                                    Test.fFld = i19;
                                }
                                break;
                            default:
                                i23 = i23;
                            }
                        case 33:
                            Test.fArrFld[(int)(d2)] += Test.iFld;
                            break;
                        case 60:
                            i24 >>= i19;
                            break;
                        case 45:
                            Test.fFld = i22;
                        case 58:
                            Test.instanceCount = i24;
                            break;
                        case 41:
                            i25 += i18;
                            break;
                        case 64:
                            by1 <<= (byte)i26;
                            break;
                        case 47:
                            Test.instanceCount += i21;
                            break;
                        default:
                            s2 += (short)(d2 - i19);
                        }
                    }
                } else if (Test.bFld) {
                    i21 += (i20 - i);
                } else if (Test.bFld) {
                    s2 += (short)(i20 * i20);
                } else {
                    dFld = Test.instanceCount;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
