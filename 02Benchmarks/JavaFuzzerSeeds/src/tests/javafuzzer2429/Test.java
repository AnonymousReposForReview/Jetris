package tests.javafuzzer2429;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:23:30 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3120626887L;
    public byte byFld=13;
    public static byte byFld1=22;
    public static double dFld=-2.112416;
    public int iFld=82;
    public static boolean bFld=true;
    public int iFld1=215;

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i4, int i5, long l1) {

        int i6=12, i7=-24415, i8=-62937, i9=0, i10=45, i11=7, i12=-1, iArr[]=new int[N];
        float f3=86.540F;

        FuzzerUtils.init(iArr, 58259);

        for (i6 = 9; i6 < 151; ++i6) {
            i7 = i7;
            i4 = (int)254L;
            Test.instanceCount >>= i8;
            l1 += (((i6 * i7) + i7) - i4);
            i4 += (i6 - i6);
            if (i6 != 0) {
                vMeth_check_sum += i4 + i5 + l1 + i6 + i7 + i8 + Float.floatToIntBits(f3) + i9 + i10 + i11 + i12 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
        }
        iArr[(i6 >>> 1) % N] += (int)f3;
        Test.byFld1 *= (byte)i5;
        Test.instanceCount += Test.instanceCount;
        l1 = i5;
        for (i9 = 2; 213 > i9; i9++) {
            for (i11 = 1; i11 < 8; i11++) {
                i8 *= (int)Test.dFld;
                i10 += (i11 ^ l1);
            }
        }
        vMeth_check_sum += i4 + i5 + l1 + i6 + i7 + i8 + Float.floatToIntBits(f3) + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i1=-5, i2=-59014, i3=120, i13=-9, iArr1[]=new int[N];
        float f1=-84.72F, f2=102.594F;

        FuzzerUtils.init(iArr1, -33513);

        for (i1 = 23; i1 < 376; ++i1) {
            i2 = i2;
            Test.instanceCount -= 11;
            for (f1 = 1; f1 < 5; ++f1) {
                i3 = (i1 + i3);
                f2 += f1;
                vMeth(i1, i2, Test.instanceCount);
                i2 += (int)f1;
                i13 = 2;
                while ((i13 -= 3) > 0) {
                    iArr1[i1 + 1] = i1;
                    Test.instanceCount += (i13 * i13);
                    f2 -= 2979015413L;
                    iArr1[i1 - 1] -= i1;
                    f2 = i13;
                    if (false) continue;
                }
            }
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f1) + i3 + Float.floatToIntBits(f2) + i13 +
            FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(long l, int i) {

        float f=-11.140F;
        int i14=-38816, i15=-7, i16=46622, iArr2[]=new int[N];
        long l2=-7L;

        FuzzerUtils.init(iArr2, 84);

        f += (((i * 175) - (i / (Test.instanceCount | 1))) + iMeth());
        i *= (int)Test.dFld;
        for (i14 = 1; i14 < 206; ++i14) {
            Test.instanceCount += i14;
            l *= i14;
            for (l2 = 1; l2 < 8; ++l2) {
                iArr2[i14 - 1] *= (int)f;
                i15 <<= i15;
                Test.dFld = 127;
                i15 *= i15;
                i16 -= (int)Test.instanceCount;
                i15 <<= i15;
                Test.dFld -= i16;
                i -= i16;
                iArr2[(int)(l2 + 1)] = (int)l2;
            }
        }
        long meth_res = l + i + Float.floatToIntBits(f) + i14 + i15 + l2 + i16 + FuzzerUtils.checkSum(iArr2);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-73, i19=-147, i20=-61835, i21=171, i22=-40627, i23=-223, iArr3[]=new int[N];
        short s=-23304;
        float f4=2.798F;
        long l3=-5413619155027077940L;

        FuzzerUtils.init(iArr3, -7);

        byFld *= (byte)dMeth(Test.instanceCount, iFld);
        Test.bFld = Test.bFld;
        iFld -= (int)Test.instanceCount;
        Test.instanceCount = iFld;
        iFld -= 65384;
        iFld ^= (int)4920549012053338257L;
        i17 = 1;
        do {
            iFld -= (int)Test.instanceCount;
        } while (++i17 < 134);
        i19 = 1;
        do {
            for (i20 = 169; 7 < i20; --i20) {
                Test.instanceCount *= i20;
                i21 >>= 1;
                Test.instanceCount = Test.instanceCount;
                Test.instanceCount += (i20 - s);
                iFld = i20;
                Test.instanceCount = i20;
                iFld += (int)Test.instanceCount;
                i21 += 38882;
                for (i22 = 1; i22 < 2; ++i22) {
                    int i24=5;
                    switch (((i19 % 1) * 5) + 39) {
                    case 41:
                        switch ((i19 % 9) + 39) {
                        case 39:
                            iArr3[i20 - 1] >>>= s;
                            iArr3[i19 - 1] = (int)Test.instanceCount;
                            i23 += (i22 * i22);
                            s += (short)f4;
                            break;
                        case 40:
                            i23 += (-2 + (i22 * i22));
                            l3 = l3;
                            f4 = i24;
                            break;
                        case 41:
                            i23 = (int)l3;
                            l3 += (((i22 * i24) + i23) - iFld);
                            break;
                        case 42:
                            i23 -= (int)Test.instanceCount;
                            break;
                        case 43:
                            iFld1 = i24;
                            break;
                        case 44:
                            i21 |= i22;
                            break;
                        case 45:
                            iFld1 -= i21;
                        case 46:
                            f4 *= iFld1;
                            break;
                        case 47:
                            iArr3[i20 - 1] = i19;
                            break;
                        }
                    default:
                        iFld1 += (i22 - i22);
                    }
                }
            }
        } while (++i19 < 148);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
