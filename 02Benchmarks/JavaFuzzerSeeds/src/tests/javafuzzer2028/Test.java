package tests.javafuzzer2028;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 07:43:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1872246145L;
    public static volatile double dFld=9.28825;
    public static float fFld=0.898F;
    public volatile int iFld=31667;
    public byte byFld=8;
    public static int iArrFld[][]=new int[N][N];
    public float fArrFld[]=new float[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i3=-3, i4=-52787, i5=38504, i6=-11618, i7=105, i8=-1, i9=114, i10=-136;
        float f=0.55F;

        i3 = i3;
        Test.iArrFld[(i3 >>> 1) % N][(1 >>> 1) % N] >>= i3;
        for (i4 = 5; i4 < 183; i4++) {
            i5 = (int)25385L;
            Test.iArrFld[i4 - 1][i4] >>= i5;
            Test.instanceCount *= i5;
            i5 -= i5;
        }
        for (i6 = 14; i6 < 296; i6 += 2) {
            for (i8 = i6; i8 < 11; ++i8) {
                Test.dFld += Test.fFld;
                Test.iArrFld[i8 + 1][i6 + 1] += (int)Test.instanceCount;
            }
            for (f = 1; f < 11; ++f) {
                Test.fFld += (f * f);
            }
            Test.instanceCount += 29480;
        }
        i7 -= (int)Test.fFld;
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i1, long l1, int i2) {

        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -87.105864);

        i1 -= (int)lMeth();
        i2 = i2;
        dArr[(i1 >>> 1) % N] -= i1;
        Test.instanceCount = Test.instanceCount;
        i2 = i1;
        vMeth1_check_sum += i1 + l1 + i2 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i, long l) {

        float f1=0.649F;
        int i11=62812, i12=-171, i13=-7;
        boolean b=false;

        vMeth1(i, l, i);
        for (f1 = 380; f1 > 19; f1--) {
            l += (long)(f1 + i);
            if (b) break;
            if (i != 0) {
                vMeth_check_sum += i + l + Float.floatToIntBits(f1) + i11 + (b ? 1 : 0) + i12 + i13;
                return;
            }
            i += i;
            i *= i;
            i11 = (int)Test.instanceCount;
            if (true) {
                for (i12 = 1; i12 < 5; ++i12) {
                    l = (long)Test.dFld;
                }
                Test.fFld = i12;
                Test.fFld -= 1.28F;
                if (b) break;
            } else if (b) {
            } else {
                i = (int)-94.7342;
            }
        }
        vMeth_check_sum += i + l + Float.floatToIntBits(f1) + i11 + (b ? 1 : 0) + i12 + i13;
    }

    public void mainTest(String[] strArr1) {

        int i14=13, i15=-8, i16=0, i17=216, i18=106, i19=9, i20=224, i21=-10, i22=12, i23=-214, i24=4;
        boolean b1=true;
        float f2=-1.189F;

        vMeth(-45954, 110169407L);
        i14 -= i14;
        for (i15 = 390; 4 < i15; --i15) {
            for (i17 = i15; i17 < 65; i17++) {
                i14 &= 19;
                for (i19 = i17; i19 < 1; ++i19) {
                    short s=31346;
                    b1 = true;
                    i16 += i19;
                    iFld *= (int)Test.fFld;
                    s = (short)i16;
                    Test.instanceCount += i16;
                    fArrFld[i17 + 1] = i17;
                }
                Test.instanceCount >>= Test.instanceCount;
            }
            fArrFld[i15] = i14;
        }
        i16 = i16;
        for (i21 = 10; i21 < 323; i21++) {
            iFld += (int)Test.instanceCount;
            if (b1) {
                i23 = 1;
                while (++i23 < 80) {
                    if (b1) continue;
                    i20 += i23;
                    for (f2 = 1; f2 < 1; f2++) {
                        switch (((i21 % 1) * 5) + 68) {
                        case 70:
                            i22 += (int)(3690660811L + (f2 * f2));
                            if (b1) {
                                i18 += (int)(((f2 * Test.fFld) + iFld) - byFld);
                                lArrFld[(int)(f2)][i21 - 1] -= i23;
                                Test.instanceCount = Test.instanceCount;
                                i20 <<= i20;
                            } else {
                                iFld -= (int)Test.instanceCount;
                            }
                        }
                    }
                }
            } else if (b1) {
                Test.fFld -= -83;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
