package tests.javafuzzer355;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:45:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static float fFld=-1.979F;
    public static short sFld=15304;
    public static boolean bFld=true;
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, 20872);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, int i7) {

        int i8=44922, i9=5, i10=-180, i11=-50454, iArr[]=new int[N];
        byte by1=-49;
        double dArr[]=new double[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(dArr, -2.67453);
        FuzzerUtils.init(lArr, -8L);
        FuzzerUtils.init(iArr, -200);

        for (double d : dArr) {
            Test.instanceCount -= (long)d;
            switch (((i7 >>> 1) % 4) + 126) {
            case 126:
                i7 -= (int)Test.instanceCount;
                break;
            case 127:
                i8 = 4;
                while (--i8 > 0) {
                    switch ((i8 % 1) + 30) {
                    case 30:
                        Test.fFld += 14025L;
                    default:
                        for (i9 = 1; i9 > 1; i9 -= 2) {
                            lArr[i8][i9] = -1;
                            i10 += (55629 + (i9 * i9));
                        }
                        i10 += i8;
                        i7 += by1;
                        i11 = 1;
                        do {
                            Test.sFld = (short)i6;
                            i7 = (int)2535533875L;
                        } while (++i11 < 1);
                    }
                }
                break;
            case 128:
                iArr[(i7 >>> 1) % N] = (int)Test.instanceCount;
                break;
            case 129:
                Test.bArrFld[(i6 >>> 1) % N] = Test.bFld;
            default:
                by1 = (byte)i11;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + i9 + i10 + by1 + i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i5) {


        vMeth2(i5, i5);
        vMeth1_check_sum += i5;
    }

    public void vMeth(int i4, long l) {


        vMeth1(i4);
        vMeth_check_sum += i4 + l;
    }

    public void mainTest(String[] strArr1) {

        int i=-14641, i1=-50221, i2=234, i3=-131, i12=-9, i13=131;
        byte by=-40;
        double d1=48.63598;

        i = 1;
        while (++i < 235) {
            for (i1 = 2; 107 > i1; ++i1) {
                i2 = (int)(by = (byte)(i2 = (int)(Test.instanceCount * i)));
                switch (((i % 4) * 5) + 90) {
                case 99:
                    switch (((Math.abs(i1) >>> 1) % 1) + 19) {
                    case 19:
                        i2 += (int)(--Test.instanceCount);
                        i3 += (((i1 * Test.instanceCount) + i2) - i);
                        vMeth(i2, Test.instanceCount);
                        Test.instanceCount = i1;
                        break;
                    default:
                        i12 = 1;
                        while ((i12 += 3) < 2) {
                            Test.instanceCount = -3334;
                            Test.bArrFld[i12 + 1] = false;
                            i2 &= (int)2062323641L;
                        }
                        switch (((i1 % 2) * 5) + 44) {
                        case 45:
                            i2 += (i1 * i1);
                            break;
                        case 48:
                            switch ((i % 6) + 50) {
                            case 50:
                                if (Test.bFld) break;
                                i3 ^= -6;
                                break;
                            case 51:
                                i3 ^= 197;
                                break;
                            case 52:
                                Test.bArrFld[i + 1] = Test.bFld;
                                i2 = (int)11.148F;
                                for (d1 = 1; d1 < 2; d1++) {
                                    Test.sFld += (short)i3;
                                }
                                break;
                            case 53:
                                i13 = i;
                                i2 = i;
                                i3 = i3;
                                break;
                            case 54:
                                Test.fFld += i1;
                                Test.bFld = false;
                                break;
                            case 55:
                                Test.iArrFld[i + 1] -= (int)d1;
                                i13 -= (int)Test.instanceCount;
                            }
                            break;
                        }
                    }
                case 110:
                case 96:
                    Test.instanceCount += (((i1 * i2) + Test.instanceCount) - i3);
                    break;
                case 92:
                    Test.instanceCount -= i12;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
