package tests.javafuzzer1937;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:17:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-14L;
    public static short sFld=16583;
    public static int iFld=-141;
    public static boolean bFld=true;
    public byte byFld=-16;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 22347L);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i7, int i8, long l1) {

        int i9=31, i10=10, i11=-88, i12=163, i13=0, i14=49382, i15=-33793;
        double d3=-2.35041;
        long l2=-5455606469712790685L;
        float f1=-38.819F;

        i8 <<= i7;
        i7 -= i7;
        for (i9 = 16; i9 < 310; i9++) {
            d3 -= 24117;
            i7 -= i10;
            i7 /= (int)(i9 | 1);
            i8 = (int)l1;
            if (i7 != 0) {
                vMeth1_check_sum += i7 + i8 + l1 + i9 + i10 + Double.doubleToLongBits(d3) + l2 + i11 +
                    Float.floatToIntBits(f1) + i12 + i13 + i14 + i15;
                return;
            }
        }
        for (l2 = 1; l2 < 134; ++l2) {
            f1 -= (float)d3;
            for (i12 = 1; i12 < 12; i12++) {
                for (i14 = i12; i14 < 2; ++i14) {
                    Test.instanceCount += (i14 * i14);
                    i11 *= i15;
                    l1 += 8612254432505447226L;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + l1 + i9 + i10 + Double.doubleToLongBits(d3) + l2 + i11 + Float.floatToIntBits(f1)
            + i12 + i13 + i14 + i15;
    }

    public static long lMeth(double d1, int i5) {

        double d2=-109.37767;
        int i6=174, i16=-59405, i17=8, i18=43994, i19=62160, iArr1[]=new int[N];
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 210939516L);
        FuzzerUtils.init(iArr1, -249);

        if (b) {
            for (d2 = 4; d2 < 128; ++d2) {
                Test.instanceCount <<= i5;
                lArr1 = (lArr1 = (lArr1 = (lArr1 = lArr1)));
                iArr1[(int)(d2 + 1)] = (int)(++d1);
                Test.instanceCount += (long)(d2 * i5);
                vMeth1(i5, i5, Test.instanceCount);
                for (i16 = 1; 13 > i16; ++i16) {
                    if (b) break;
                    iArr1[i16] = -6;
                    Test.instanceCount >>>= 808;
                    for (i18 = i16; 2 > i18; ++i18) {
                        if (b) {
                            i19 += i16;
                        } else if (b) {
                            i19 = (int)Test.instanceCount;
                        } else if (b) {
                            Test.sFld = (short)i16;
                        } else {
                            i19 += (int)-64413L;
                        }
                    }
                }
            }
        } else {
            i5 += (int)1.238F;
        }
        long meth_res = Double.doubleToLongBits(d1) + i5 + Double.doubleToLongBits(d2) + i6 + i16 + i17 + (b ? 1 : 0) +
            i18 + i19 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(long l, int i, int i1) {

        double d=57.66011;
        int i2=-242, i3=104, i4=13, i20=184, iArr[]=new int[N];
        float f=0.463F;
        long l4=247L, lArr[]=new long[N];
        byte by=90;

        FuzzerUtils.init(iArr, -110);
        FuzzerUtils.init(lArr, -25410L);

        i += (i % (((3 + i) + (++i1)) | 1));
        for (d = 4; 151 > d; d++) {
            for (i3 = 1; i3 < 11; ++i3) {
                iArr[i3 + 1] = 1;
                f -= i1;
                lArr[(int)(d + 1)] &= (lMeth(d, i) * i4);
                i4 = i;
            }
            i2 += i3;
            i4 >>= Test.sFld;
            for (l4 = 1; l4 < 11; l4++) {
                i1 += i4;
                i4 -= (int)f;
                Test.sFld += by;
                f -= f;
                i = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += l + i + i1 + Double.doubleToLongBits(d) + i2 + i3 + i4 + Float.floatToIntBits(f) + l4 + i20
            + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i21=38603, i22=-50789, i23=-191, i24=248, i25=-34, i26=-14, iArr2[]=new int[N];
        double d4=-2.7389, d5=-39.66848;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr2, -12);
        FuzzerUtils.init(sArr, (short)-20660);

        vMeth(Test.instanceCount, i21, 5980);
        Test.lArrFld[(i21 >>> 1) % N] = -50910L;
        i22 = 1;
        do {
            for (d4 = 1; d4 < 136; ++d4) {
                d5 -= Test.instanceCount;
                for (i24 = 1; 2 > i24; i24++) {
                    i21 &= Test.sFld;
                    iArr2[(int)(d4)] |= i21;
                    i23 = i25;
                    i23 -= 168;
                    switch (((i24 % 1) * 5) + 45) {
                    case 48:
                        i23 -= i21;
                        i25 += i23;
                        i21 = Test.iFld;
                        i25 *= (int)1.133F;
                        break;
                    default:
                        i21 = i25;
                        i23 = (int)Test.instanceCount;
                    }
                    i26 = i25;
                }
                i26 += i22;
                if (Test.bFld) break;
                Test.instanceCount = i25;
                switch (((i22 % 2) * 5) + 14) {
                case 18:
                    iArr2[i22] *= (int)Test.instanceCount;
                    iArr2[(int)(d4)] = i22;
                    break;
                case 22:
                    Test.instanceCount = i26;
                    byFld += (byte)d4;
                default:
                    sArr[(int)(d4)] = (short)i21;
                }
                Test.instanceCount += (long)d4;
                Test.instanceCount += (long)(d4 * d4);
                iArr2[(int)(d4)] = i21;
            }
        } while (++i22 < 185);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
