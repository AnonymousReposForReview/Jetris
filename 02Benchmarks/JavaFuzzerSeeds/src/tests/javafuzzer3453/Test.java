package tests.javafuzzer3453;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 08:36:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7L;
    public static byte byFld=-120;
    public static int iFld=41150;
    public static double dFld=0.118148;
    public static int iArrFld[]=new int[N];
    public static volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -41321);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;

    public static boolean bMeth() {

        int i3=-11, i4=14, i5=207, i6=-45833, i7=-142, i8=-9, i9=3, i10=-6;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5L);

        Test.byFld ^= (byte)Test.iFld;
        for (i3 = 18; i3 < 379; i3++) {
            Test.instanceCount *= Test.iFld;
            i4 = i3;
            Test.instanceCount /= (i3 | 1);
            Test.iFld <<= i4;
            Test.iFld = (int)Test.instanceCount;
            Test.iFld = Test.iFld;
        }
        for (i5 = 5; 134 > i5; ++i5) {
            i4 <<= (int)Test.instanceCount;
            Test.iFld += i5;
            for (i7 = 1; i7 < 12; ++i7) {
                for (i9 = i5; i9 < 2; i9++) {
                    lArr = lArr;
                }
                i4 = i6;
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(lArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static float fMeth(long l, long l1, int i2) {

        int i11=-6, i12=115, i13=-2, i14=-95, i15=47;
        long l2=11L;
        boolean b=true;
        short s=11363;

        i2 <<= Test.iArrFld[(i2 >>> 1) % N];
        Test.bArrFld[(221 >>> 1) % N] = bMeth();
        for (i11 = 125; i11 > 3; i11 -= 2) {
            for (l2 = 1; l2 < 25; l2++) {
                for (i14 = 1; i14 < 2; ++i14) {
                    i12 += i11;
                    Test.iArrFld[i14 + 1] += (int)Test.instanceCount;
                    i12 = (int)Test.dFld;
                    switch ((i14 % 9) + 48) {
                    case 48:
                        Test.iFld *= i11;
                        i13 = (int)l;
                        Test.instanceCount += (((i14 * i15) + i2) - i12);
                        if (b) break;
                        break;
                    case 49:
                        i12 = -40;
                        try {
                            Test.iArrFld[i14 - 1] = (i15 / i14);
                            i12 = (i13 / i11);
                            i15 = (i14 / Test.iFld);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 50:
                        Test.byFld = (byte)l1;
                        break;
                    case 51:
                        Test.iFld = (int)l1;
                        break;
                    case 52:
                        Test.iFld <<= i11;
                        break;
                    case 53:
                    case 54:
                        i13 *= Test.byFld;
                        break;
                    case 55:
                    case 56:
                        s = (short)l;
                        break;
                    }
                }
            }
        }
        long meth_res = l + l1 + i2 + i11 + i12 + l2 + i13 + i14 + i15 + (b ? 1 : 0) + s;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth() {


        fMeth(Test.instanceCount, Test.instanceCount, Test.iFld);
        vMeth_check_sum += 0;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=176, i16=3, i17=-244, i18=-87, i19=31599, i20=-4, iArr[]=new int[N];
        float f=0.376F, f1=72.22F;
        short s1=-30457;
        boolean b1=false;

        FuzzerUtils.init(iArr, 122);

        if (b1) {
            for (i = 323; i > 5; i--) {
                iArr[i + 1] = (int)16.57529;
                i1 += (--i1);
                vMeth();
                f += (i + s1);
                Test.iFld += i;
                if (b1) continue;
                Test.instanceCount -= Test.iFld;
            }
            for (i16 = 23; i16 < 397; i16++) {
                Test.byFld ^= (byte)i17;
                i1 -= Test.iFld;
                for (f1 = 2; 67 > f1; ++f1) {
                    Test.iFld -= Test.byFld;
                    for (i19 = 1; i19 < 2; ++i19) {
                        switch ((int)(((f1 % 9) * 5) + 43)) {
                        case 78:
                        case 67:
                            i17 ^= -55187;
                            f += (((i19 * s1) + s1) - f1);
                            if (b1) break;
                            break;
                        case 52:
                            i20 += (int)(-122L + (i19 * i19));
                            s1 -= (short)i;
                            i17 = i17;
                            Test.byFld |= Test.byFld;
                        case 60:
                            i17 -= -52783;
                            break;
                        case 61:
                            iArr[i16 - 1] -= 89;
                            try {
                                i17 = (-882009707 / iArr[i19]);
                                i18 = (Test.iFld / iArr[(int)(f1)]);
                                i20 = (Test.iArrFld[i19 + 1] % i20);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 49:
                            i1 -= (int)-2.80411;
                            Test.instanceCount *= (long)f;
                            i17 += (((i19 * Test.iFld) + i16) - Test.byFld);
                            break;
                        case 79:
                            i18 = Test.byFld;
                            break;
                        case 48:
                            if (b1) break;
                            break;
                        case 46:
                        }
                    }
                }
            }
        } else {
            Test.instanceCount += (long)1.303F;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  bMeth ->  bMeth fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
