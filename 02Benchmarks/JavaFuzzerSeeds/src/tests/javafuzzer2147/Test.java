package tests.javafuzzer2147;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:22:39 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=9L;
    public static volatile double dFld=-1.107688;
    public static boolean bFld=true;
    public static volatile int iFld=-4416;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -9L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, long l1) {

        long l2=-41198L;
        byte by=123;
        float f1=-16.733F, fArr1[][]=new float[N][N];
        int i9=52217;

        FuzzerUtils.init(fArr1, -77.832F);

        l2 = 1;
        while (++l2 < 287) {
            i8 -= i8;
            i8 *= (int)l1;
            fArr1[(int)(l2 - 1)][(int)(l2)] += i8;
            if (Test.bFld) {
                i8 += (int)(((l2 * by) + f1) - i8);
            } else {
                i8 = (int)2.542F;
                f1 *= 10;
                i9 = 1;
                do {
                    i8 += (i9 + i8);
                    Test.dFld -= i9;
                    switch ((int)(((l2 % 2) * 5) + 47)) {
                    case 51:
                        i8 ^= i8;
                        l1 = Test.instanceCount;
                        if (false) break;
                        break;
                    case 49:
                        l1 >>>= Test.instanceCount;
                        break;
                    default:
                        i8 -= i8;
                    }
                } while (++i9 < 6);
            }
        }
        vMeth2_check_sum += i8 + l1 + l2 + by + Float.floatToIntBits(f1) + i9 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth1(int i3) {

        int i4=56053, i5=12, i6=-216, i7=-147, iArr[]=new int[N];
        long l=-4L;
        boolean b=true;
        short s=-1426;
        float f2=-13.78F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.767F);
        FuzzerUtils.init(iArr, 227);

        fArr = (fArr = (fArr = (fArr = fArr)));
        for (i4 = 12; i4 < 222; ++i4) {
            i3 = (int)l;
            for (i6 = 1; i6 < 8; ++i6) {
                i7 += (i6 ^ i6);
                b = b;
                switch ((i6 % 3) + 82) {
                case 82:
                    l += i6;
                    break;
                case 83:
                    l += (((i6 * i7) + i4) - s);
                    Test.dFld = (Test.instanceCount++);
                    switch ((((i3++) >>> 1) % 9) * 5) {
                    case 39:
                        i7 %= 4;
                        break;
                    case 27:
                        vMeth2(i4, Test.instanceCount);
                        i5 = (int)95L;
                        f2 = f2;
                        break;
                    case 4:
                        Test.dFld *= i7;
                        break;
                    case 42:
                    case 16:
                        i7 = i6;
                        break;
                    case 22:
                        i7 *= (int)l;
                        break;
                    case 45:
                        i3 = i3;
                    case 26:
                        i7 += (int)l;
                        break;
                    case 8:
                        iArr[i4] += i4;
                    default:
                        Test.dFld = i3;
                    }
                    break;
                case 84:
                    l = i3;
                    break;
                default:
                    i3 /= (int)(s | 1);
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + l + i6 + i7 + (b ? 1 : 0) + s + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i, int i1, int i2) {

        float f=-42.979F;
        long l3=11L, l4=34791L, lArr[]=new long[N];
        int i10=-50790, i11=-1700, i12=-88;

        FuzzerUtils.init(lArr, 130L);

        Test.instanceCount /= ((long)(f) | 1);
        vMeth1(i);
        for (l3 = 391; l3 > 21; --l3) {
            try {
                i10 = (i % i2);
                i10 = (i2 % -118);
                i1 = (i2 % i10);
            } catch (ArithmeticException a_e) {}
            lArr[(int)(l3)] >>= i;
            Test.dFld = i1;
            for (i11 = 1; i11 < 5; i11 += 3) {
                Test.instanceCount += 224L;
                l4 = 1;
                do {
                    i10 = (int)l4;
                    i10 -= -9;
                    i %= (int)(i12 | 1);
                    i1 += i;
                    Test.bFld = Test.bFld;
                    if (Test.bFld) break;
                } while (++l4 < 5);
            }
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + l3 + i10 + i11 + i12 + l4 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        long l5=-4L;
        int i13=178, i14=129, i15=6, i16=-13, i17=-14, i18=-220, i19=-35275, iArr1[]=new int[N];
        float f3=-108.126F;
        byte by1=-87;
        short s1=-6002;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -26460);
        FuzzerUtils.init(dArr, 1.80177);

        vMeth(62624, Test.iFld, Test.iFld);
        l5 = 1;
        do {
            i13 = 1;
            do {
                Test.lArrFld[(int)(l5)] >>= l5;
                Test.instanceCount = 13907;
                Test.instanceCount += (i13 | (long)f3);
                f3 -= -12;
                for (i14 = 1; 1 > i14; i14++) {
                    if (Test.bFld) break;
                    by1 *= (byte)f3;
                    iArr1[i14] -= i13;
                }
                Test.iFld = -17859;
                i15 = (int)Test.instanceCount;
            } while (++i13 < 67);
            Test.instanceCount += i15;
            switch (((146 >>> 1) % 2) + 116) {
            case 116:
                Test.instanceCount += l5;
                s1 += (short)(l5 * l5);
                i15 >>= s1;
                break;
            case 117:
                for (i16 = 1; i16 < 67; ++i16) {
                    for (i18 = 1; i18 < 2; i18++) {
                        Test.instanceCount += i18;
                        Test.instanceCount &= Test.iFld;
                        if (Test.bFld) {
                            Test.instanceCount -= i17;
                            dArr[i16] = i19;
                            Test.iFld = i14;
                        } else if (Test.bFld) {
                            i17 += i17;
                            s1 <<= (short)i13;
                            i19 >>= i19;
                            by1 >>>= (byte)i15;
                        } else if (Test.bFld) {
                            if (false) break;
                        }
                    }
                }
            default:
                if (true) break;
            }
        } while (++l5 < 376);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
