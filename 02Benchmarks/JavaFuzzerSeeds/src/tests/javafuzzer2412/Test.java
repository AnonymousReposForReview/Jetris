package tests.javafuzzer2412;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:21:35 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static int iFld=11;
    public static byte byFld=55;
    public static float fFld=-8.201F;
    public boolean bFld=true;
    public short sFld=15202;
    public long lArrFld[]=new long[N];

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i, int i1) {

        float f1=0.137F, fArr[]=new float[N];
        int i2=23, i4=-8, i5=-1, i6=-42069, i7=11, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(fArr, -2.318F);

        iArr[(i >>> 1) % N] |= i1;
        f1 -= i;
        i2 = 1;
        while (++i2 < 207) {
            int i3=-14;
            iArr[i2] = i1;
            fArr[i2 - 1] -= i3;
            f1 *= i1;
        }
        for (i4 = 9; 210 > i4; i4++) {
            i1 -= -174;
        }
        for (i6 = 6; i6 < 150; ++i6) {
            f1 -= 14;
            b = b;
            Test.iFld = i6;
            i7 *= i1;
            i = i4;
            if (Test.iFld != 0) {
                vMeth1_check_sum += i + i1 + Float.floatToIntBits(f1) + i2 + i4 + i5 + i6 + i7 + (b ? 1 : 0) +
                    FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
        }
        vMeth1_check_sum += i + i1 + Float.floatToIntBits(f1) + i2 + i4 + i5 + i6 + i7 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {

        double d=-2.52133, d1=-1.45087;
        int i8=62, i9=-13, i10=131, i11=-8, i12=27001, i13=-29830, i14=161;
        float f2=0.379F, fArr1[]=new float[N];
        byte by=71;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr1, 1.29F);
        FuzzerUtils.init(lArr, -14L);

        vMeth1(-44, -45856);
        Test.iFld = Test.iFld;
        for (d = 337; d > 19; --d) {
            i8 += (int)d;
            for (i9 = 1; i9 < 5; ++i9) {
                Test.instanceCount *= i9;
                f2 *= i10;
                for (i11 = 2; i11 > i9; --i11) {
                    fArr1[i11] -= i11;
                    d1 -= i11;
                    by <<= (byte)i11;
                    i8 = Test.iFld;
                }
            }
            for (i13 = 1; 5 > i13; i13++) {
                f2 *= i10;
                lArr[(int)(d)] = i10;
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 + i12 +
            Double.doubleToLongBits(d1) + by + i13 + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        short s=-27757;

        vMeth();
        Test.iFld -= Test.iFld;
        Test.byFld = (byte)Test.iFld;
        Test.iFld = (int)Test.fFld;
        Test.instanceCount -= s;
        Test.iFld += Test.iFld;
        long meth_res = s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=1.683F;
        double d2=-122.79739, d3=0.9106;
        int i15=31982, i16=30021, i17=-13, i18=128, i19=-168, i20=9, i21=-31996, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, 13);

        lArrFld[(-13 >>> 1) % N] |= Test.iFld;
        Test.instanceCount = (long)((f - iMeth()) + 149);
        d2 = 1;
        do {
            for (i15 = 6; 111 > i15; i15++) {
                for (i17 = (int)(d2); i17 < 2; i17++) {
                    Test.iFld = (int)Test.instanceCount;
                    Test.fFld = Test.instanceCount;
                }
                if (bFld) break;
            }
            if (bFld) {
                Test.instanceCount = i17;
                i18 = (int)1218947600L;
                Test.instanceCount = 199;
            } else if (true) {
                if (true) {
                    for (i19 = 2; i19 < 111; i19++) {
                        for (d3 = 1; d3 < 2; d3 += 2) {
                            Test.instanceCount -= sFld;
                            iArr1[i19 - 1] -= (int)2.61900;
                            iArr1 = iArr1;
                            Test.instanceCount = i15;
                            i20 |= i15;
                            Test.fFld += (float)(d3 + Test.iFld);
                            f = i19;
                            Test.instanceCount += (long)Test.fFld;
                            iArr1[(int)(d3)] *= (int)Test.instanceCount;
                            Test.byFld += (byte)(d3 + i16);
                        }
                        iArr1[i19 + 1] += Test.iFld;
                        Test.instanceCount += -5;
                        Test.instanceCount *= Test.instanceCount;
                        Test.iFld += (57361 + (i19 * i19));
                        sFld += (short)(((i19 * i20) + Test.instanceCount) - f);
                    }
                }
            }
        } while (++d2 < 227);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
