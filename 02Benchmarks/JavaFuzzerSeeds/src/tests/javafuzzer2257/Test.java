package tests.javafuzzer2257;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:00:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3501708551L;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1) {

        int i10=0, i11=-202, i12=-70, i13=158, i14=-56340, i15=-7;
        float f1=0.449F;
        boolean b=false;

        l += i10;
        i10 = i10;
        i11 = 1;
        do {
            for (i12 = 1; i12 < 8; ++i12) {
                f1 += 4;
                i14 = 1;
                while (++i14 < 2) {
                    if (false) {
                        i10 += (((i14 * i15) + Test.instanceCount) - f1);
                        i10 += (i14 | i14);
                        i15 = i14;
                        f1 += i14;
                    } else if (b) {
                        if (b) {
                            i10 = (int)Test.instanceCount;
                        } else {
                            f1 -= i12;
                        }
                        i15 -= i13;
                    } else if (b) {
                        f1 = l;
                    } else {
                        i10 -= i10;
                    }
                }
            }
        } while (++i11 < 209);
        vMeth1_check_sum += l + l1 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + (b ? 1 : 0);
    }

    public static int iMeth(int i4, int i5, int i6) {

        int i7=12, i8=11, i16=-35, i17=11, i18=9, i19=213, i20=192, i21=-251, iArr[]=new int[N];
        float f=25.466F;
        boolean b1=true;

        FuzzerUtils.init(iArr, 186);

        for (i7 = 8; i7 < 267; ++i7) {
            Test.instanceCount += (i7 - f);
        }
        f -= i6;
        vMeth1(Test.instanceCount, Test.instanceCount);
        Test.instanceCount = i8;
        i4 += (int)Test.instanceCount;
        for (i16 = 7; i16 < 305; i16 += 3) {
            for (i18 = 1; i18 < 16; i18++) {
                i4 -= (int)Test.instanceCount;
                for (i20 = 1; i20 < 2; ++i20) {
                    i5 *= i7;
                    if (b1) {
                        if (true) break;
                    } else if (b1) {
                        i8 = (int)Test.instanceCount;
                        i5 += (int)Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + i16 + i17 + i18 + i19 + i20 + i21 + (b1 ? 1
            : 0) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=100, i1=166, i2=49268, i3=-23309, i22=6, i23=30031, i24=12;
        byte by=87;
        float f2=1.785F, fArr[]=new float[N];
        double d=1.127627;
        short s=25977;
        boolean b2=true;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(fArr, -2.877F);
        FuzzerUtils.init(lArr, -3219551372689095629L);

        if (b2) {
            for (i = 15; i < 384; ++i) {
                for (i2 = 1; i2 < 5; i2++) {
                    i1 *= (int)((iMeth(i2, i3, -212) * i3) + Test.instanceCount);
                    i3 += i2;
                }
                try {
                    i3 = (Test.iArrFld[i + 1] / i3);
                    i3 = (i1 % i);
                    i3 = (-63430 % Test.iArrFld[i]);
                } catch (ArithmeticException a_e) {}
                for (i22 = 5; i22 > i; i22 -= 2) {
                    i24 = 1;
                    do {
                        i23 = by;
                        fArr[i22 - 1] = f2;
                        Test.instanceCount += (151L + (i24 * i24));
                        switch ((((-86 >>> 1) % 5) * 5) + 24) {
                        case 44:
                        case 47:
                            d = i23;
                            break;
                        case 39:
                            i23 += (i24 * i24);
                            s *= (short)f2;
                            break;
                        case 45:
                            lArr[i24 + 1][i24 - 1] = i22;
                            break;
                        case 38:
                            Test.instanceCount -= i;
                        }
                    } while (--i24 > 0);
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i22 + i23 + i24 + by + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d) + s + (b2 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i25=0, i26=-42846, i27=-177, i28=-47109, i29=11, i30=-230, i31=165, i32=-126, i33=-17;
        float f3=110.177F, f4=19.174F, fArr1[]=new float[N];
        double d1=-2.78697, dArr[]=new double[N];
        short s1=-5947;
        boolean b3=true;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(fArr1, -98.324F);
        FuzzerUtils.init(dArr, -88.48948);
        FuzzerUtils.init(lArr1, -1981269524L);

        vMeth();
        Test.instanceCount *= Test.instanceCount;
        fArr1[(-12 >>> 1) % N] -= Test.instanceCount;
        dArr[(-6 >>> 1) % N] -= i25;
        for (i26 = 17; i26 < 297; i26++) {
            Test.instanceCount >>= 20232;
            i25 /= (int)(i27 | 1);
            i25 -= i25;
            i25 -= (int)Test.instanceCount;
            i25 += (((i26 * i26) + f3) - Test.instanceCount);
            Test.iArrFld[i26] = i26;
            i25 *= i26;
            Test.instanceCount += (((i26 * i27) + i25) - i26);
        }
        lArr1[(i26 >>> 1) % N][(i26 >>> 1) % N] *= i27;
        i28 = 1;
        while (++i28 < 125) {
            Test.instanceCount += (i28 ^ Test.instanceCount);
            Test.iArrFld[i28] *= i27;
            i27 &= -10;
            Test.instanceCount += i28;
            for (d1 = 3; d1 < 201; d1++) {
                i29 = (int)Test.instanceCount;
                Test.instanceCount += (long)(d1 * d1);
                for (i30 = 2; i30 > d1; i30 -= 2) {
                    s1 = (short)i32;
                    i31 += (i30 * i29);
                    i29 ^= (int)Test.instanceCount;
                }
                i29 -= (int)Test.instanceCount;
            }
            for (f4 = i28; f4 < 201; f4++) {
                Test.instanceCount = i25;
                if (b3) break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
