package tests.javafuzzer1212;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:35:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public int iFld=-230;
    public static volatile int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 223);
        FuzzerUtils.init(Test.lArrFld, 73L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth(int i, int i1, boolean b) {

        short s=3331;
        int i2=-77, i3=-43319, i4=52162;
        double d=109.67211;
        float f=-61.247F;

        s = (short)i;
        for (i2 = 13; i2 < 305; ++i2) {
            i4 = 1;
            do {
                i ^= (int)((-(Test.instanceCount * Test.instanceCount)) * ((i3 - i3) * (d * i2)));
                Test.instanceCount *= (long)(f += (i1++));
            } while (++i4 < 6);
        }
        long meth_res = i + i1 + (b ? 1 : 0) + s + i2 + i3 + i4 + Double.doubleToLongBits(d) + Float.floatToIntBits(f);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth2(int i10, int i11) {

        int i12=-4, i13=147, i14=5, i15=-42117;
        float f1=0.589F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)19556);

        i12 = 1;
        while (++i12 < 146) {
            i11 += (i12 ^ (long)f1);
            Test.iArrFld[i12] *= i11;
        }
        Test.lArrFld[(i10 >>> 1) % N] = (long)f1;
        sArr[(i10 >>> 1) % N] = (short)i12;
        for (i13 = 17; i13 < 359; i13++) {
            i10 -= -198;
            Test.instanceCount = i14;
            f1 -= f1;
        }
        i15 = 1;
        do {
            Test.instanceCount += i15;
            Test.instanceCount += (i15 - i15);
            i10 = i14;
            i10 = i13;
        } while (++i15 < 354);
        i11 = i15;
        long meth_res = i10 + i11 + i12 + Float.floatToIntBits(f1) + i13 + i14 + i15 + FuzzerUtils.checkSum(sArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1() {

        int i16=-57311, i17=-13, i18=-237, i19=-47276, i20=0, i21=-189;
        float f2=0.23F;
        long l3=13L, l4=-1473875284L;

        Test.instanceCount -= (long)(iMeth2(i16, 24028) / ((long)(f2) | 1));
        i17 = 1;
        do {
            i16 = i16;
        } while (++i17 < 173);
        l3 = 1;
        while (++l3 < 147) {
            for (i18 = 1; i18 < 11; ++i18) {
                i20 = 1;
                do {
                    f2 += (6 + (i20 * i20));
                    Test.instanceCount *= i19;
                    Test.iArrFld = Test.iArrFld;
                    i19 <<= (int)Test.instanceCount;
                    i19 = i16;
                } while (++i20 < 2);
                i16 += i18;
                for (l4 = 2; l4 > 1; --l4) {
                    i16 -= i19;
                    i19 -= (int)l4;
                }
            }
        }
        long meth_res = i16 + Float.floatToIntBits(f2) + i17 + l3 + i18 + i19 + i20 + l4 + i21;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i8, int i9, long l1) {

        float f3=0.188F, f4=32.126F;
        int i22=150, i23=6, i24=-156, i25=248, i26=207, i27=69;
        short s1=-22229;

        i8 += iMeth1();
        l1 = l1;
        i8 = i9;
        for (f3 = 278; f3 > 14; f3--) {
            f4 *= i8;
            l1 += (-13L + (f3 * f3));
            i23 = 1;
            while (++i23 < 6) {
                i22 = i8;
                i22 += i8;
            }
            for (i24 = 1; i24 < 6; ++i24) {
                s1 = (short)i22;
                l1 = l1;
            }
        }
        for (i26 = 5; i26 < 121; i26 += 2) {
            i25 += (i26 ^ l1);
            i27 -= (int)l1;
        }
        vMeth_check_sum += i8 + i9 + l1 + Float.floatToIntBits(f3) + i22 + Float.floatToIntBits(f4) + i23 + i24 + i25 +
            s1 + i26 + i27;
    }

    public void mainTest(String[] strArr1) {

        int i5=48430, i6=40, i7=-7;
        long l=9L;
        byte by=-86;

        iFld = Integer.reverseBytes(iMeth((int)(iFld + 72L), iFld - iFld, iFld == iFld));
        for (i5 = 1; 177 > i5; i5++) {
            i6 >>= iFld;
        }
        for (l = 14; l < 321; l++) {
            vMeth(32873, i7, l);
        }
        i6 = (int)l;
        i7 <<= i5;
        iFld *= by;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
