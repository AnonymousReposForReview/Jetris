package tests.javafuzzer362;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 02:50:25 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5262263123958882279L;
    public static volatile short sFld=-22809;
    public static float fFld=0.890F;
    public static boolean bFld=true;
    public static byte byFld=14;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s) {

        float f1=-58.785F;
        int i4=-12, i5=-9, i6=-241, i7=-5, i8=47, i9=12, i10=-88, i11=0, iArr1[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr1, -3);

        s *= (short)f1;
        for (i4 = 11; i4 < 380; i4++) {
            for (i6 = i4; i6 < 5; i6++) {
                switch ((i6 % 2) + 72) {
                case 72:
                    if (i6 != 0) {
                        vMeth1_check_sum += s + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + (b
                            ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i5 = (int)Test.instanceCount;
                case 73:
                    Test.instanceCount /= (s | 1);
                    for (i8 = 1; i8 < 1; ++i8) {
                        i7 *= i6;
                    }
                    for (i10 = 1; i10 < 1; ++i10) {
                        switch ((i6 % 6) + 92) {
                        case 92:
                            i9 += (i10 * i10);
                            i5 >>= -224;
                            i5 += (i10 - Test.instanceCount);
                            break;
                        case 93:
                            i9 = (int)Test.instanceCount;
                            break;
                        case 94:
                            iArr1[(i6 >>> 1) % N] >>= i4;
                        case 95:
                        case 96:
                            iArr1[i4 - 1] >>= (int)Test.instanceCount;
                            break;
                        case 97:
                            if (b) continue;
                        }
                    }
                    break;
                default:
                    i11 = (int)Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += s + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, int i2) {

        double d=0.12810, d1=-1.21605, d2=0.12378;
        int i3=-176, i12=-10, i13=-48555, i14=-253, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 17656);

        try {
            for (d = 6; d < 330; ++d) {
                vMeth1(Test.sFld);
            }
            Test.fFld -= Test.instanceCount;
            i1 *= i3;
        }
        catch (UserDefinedExceptionTest exc2) {
            i3 >>= (int)-4117464737L;
            for (d1 = 4; 398 > d1; ++d1) {
                d2 = 1;
                while (++d2 < 4) {
                    iArr2 = iArr2;
                    for (i13 = 1; i13 < 1; i13++) {
                        Test.sFld = (short)i14;
                        i1 -= i13;
                        i1 += i13;
                        if (Test.bFld) break;
                        i14 -= (int)d2;
                    }
                }
            }
        }
        catch (NullPointerException exc3) {
            iArr2[(i3 >>> 1) % N] = (int)Test.instanceCount;
        }
        long meth_res = i1 + i2 + Double.doubleToLongBits(d) + i3 + Double.doubleToLongBits(d1) + i12 +
            Double.doubleToLongBits(d2) + i13 + i14 + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f) {

        int i16=-6, i17=-8, i18=-14, i19=-4, i20=108, i21=10;
        boolean bArr[][]=new boolean[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr, -64.27454);

        iMeth(i16, i16);
        bArr[(201 >>> 1) % N][(-6 >>> 1) % N] = Test.bFld;
        for (i17 = 15; 312 > i17; i17++) {
            i16 = Test.byFld;
            for (i19 = 1; i19 < 6; i19 += 3) {
                Test.fFld *= Test.instanceCount;
                Test.fFld = i20;
                i16 = i17;
            }
            i21 = 6;
            while ((i21 -= 3) > 0) {
                dArr[i17 + 1] /= (i17 | 1);
                i20 -= i19;
                f *= 13;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i16 + i17 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(bArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i22=-15815, i23=-204, i24=-54, i25=-1, i26=74, i27=3, i28=-43719, i29=-31070, iArr[]=new int[N];
        double d3=49.105373;
        long l=76L, lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 23872);
        FuzzerUtils.init(lArr, -6L);
        FuzzerUtils.init(fArr, -2.822F);

        for (int i : iArr) {
            vMeth(Test.fFld);
            for (i22 = 2; i22 < 63; ++i22) {
                for (i24 = 1; 2 > i24; ++i24) {
                    i23 = (int)Test.instanceCount;
                    iArr[i24 + 1] = (int)Test.instanceCount;
                    if (Test.bFld) continue;
                }
                Test.instanceCount = i;
                i26 = 1;
                while (++i26 < 2) {
                    Test.sFld = (short)Test.instanceCount;
                    Test.instanceCount += i25;
                    d3 = i25;
                    Test.sFld += (short)i26;
                    i <<= -6417;
                    Test.byFld -= (byte)i25;
                }
                lArr[i22 - 1] = -246;
                i27 = 1;
                while (++i27 < 2) {
                    iArr[i22] += -19840;
                    i25 -= 21394;
                }
            }
            d3 = i24;
            i28 = 1;
            do {
                i = i23;
                Test.instanceCount -= -3973023919330684218L;
                switch ((i28 % 6) + 7) {
                case 7:
                    i29 = 1;
                    do {
                        if (Test.bFld) break;
                        l += (long)95.63896;
                        i23 += (int)1.745;
                        Test.sFld = (short)179;
                    } while (++i29 < 1);
                    fArr[i28 + 1] = i23;
                case 8:
                    i25 = i25;
                case 9:
                    i = (int)d3;
                case 10:
                    i25 = i27;
                    break;
                case 11:
                    iArr[i28 + 1] = i26;
                    break;
                case 12:
                    if (Test.bFld) continue;
                    break;
                default:
                    i23 = i22;
                }
            } while (++i28 < 63);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
