package tests.javafuzzer2950;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 23:41:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=57L;
    public static volatile byte byFld=74;
    public static float fFld=1.958F;
    public short sFld=24204;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 133);
        FuzzerUtils.init(Test.lArrFld, -2182205831L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i3=-2720, i4=10, iArr[]=new int[N];
        double d=-1.4454;
        long l1=1L, lArr[]=new long[N];
        float f=-77.587F;
        short s=-5068;

        FuzzerUtils.init(iArr, 60823);
        FuzzerUtils.init(lArr, -47L);

        iArr[(i3 >>> 1) % N] >>= i3;
        iArr[(i3 >>> 1) % N] = i3;
        iArr[(i3 >>> 1) % N] &= i3;
        i3 <<= Test.byFld;
        i3 += i3;
        i4 = 1;
        while (++i4 < 304) {
            i3 += i3;
            i3 = i3;
            i3 -= (int)d;
            l1 = 5;
            do {
                i3 <<= i3;
                i3 += (int)(l1 | Test.instanceCount);
            } while (--l1 > 0);
            lArr[i4 + 1] *= (long)f;
            s -= (short)l;
        }
        l += l;
        vMeth2_check_sum += l + i3 + i4 + Double.doubleToLongBits(d) + l1 + Float.floatToIntBits(f) + s +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        int i2=5, i5=243, i6=-27471, i7=212, i8=52882, i9=212;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 10.642F);

        i2 -= i2;
        i2 -= i2;
        vMeth2(-15L);
        fArr[(i2 >>> 1) % N] = i2;
        i5 = 1;
        while (++i5 < 236) {
            Test.iArrFld[i5 + 1] = -45562;
            i2 = (int)Test.instanceCount;
        }
        i2 = (int)Test.instanceCount;
        for (i6 = 320; i6 > 18; i6--) {
            for (i8 = 1; i8 < 5; ++i8) {
                Test.lArrFld[i6 - 1] += Test.instanceCount;
                Test.instanceCount += (i8 ^ i6);
                Test.instanceCount += i5;
                Test.instanceCount += (i8 * i8);
                if (true) break;
            }
        }
        vMeth1_check_sum += i2 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth(int i1) {

        int i10=-57739, i11=0, i12=1, i13=48;
        double d1=6.101460;

        i1 = 172;
        vMeth1();
        Test.byFld += (byte)Test.instanceCount;
        Test.fFld -= Test.instanceCount;
        i10 = 1;
        do {
            Test.iArrFld[i10 + 1] <<= i1;
            i11 = 12;
            while (--i11 > 0) {
                i1 -= (int)-35.379F;
                Test.iArrFld[i10 - 1] = i1;
                Test.lArrFld = Test.lArrFld;
                for (i12 = 1; 1 > i12; i12++) {
                    i1 = i12;
                    i13 <<= i13;
                    Test.instanceCount -= (long)d1;
                    i13 = i1;
                }
            }
        } while (++i10 < 133);
        vMeth_check_sum += i1 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1);
    }

    public void mainTest(String[] strArr1) {

        int i=-14, i14=64433, i15=-33438, i16=-234, i17=-5, i18=11, i19=135, i20=174, i21=57690, i22=216, i23=6,
            i24=-6, i25=8;
        float f1=-125.818F;
        boolean b=true;
        double d2=-2.119547, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 113.61587);

        i = Test.byFld;
        vMeth(i);
        for (i14 = 11; i14 < 177; i14++) {
            for (i16 = i14; 151 > i16; i16++) {
                for (i18 = 1; i18 < 1; i18++) {
                    i19 >>= (int)Test.instanceCount;
                    i19 %= (int)(i16 | 1);
                    Test.instanceCount = sFld;
                    i19 = i15;
                }
                if (b) {
                    for (f1 = 1; f1 < 1; f1++) {
                        Test.lArrFld[(int)(f1)] = i18;
                        i19 >>= i17;
                        i20 += (int)f1;
                        Test.instanceCount >>>= i17;
                        Test.instanceCount = 11L;
                    }
                } else if (false) {
                    for (i21 = i14; 1 > i21; ++i21) {
                        i20 += (i21 + i);
                        Test.instanceCount |= -160;
                        dArr[i14 - 1] = i16;
                    }
                }
                i20 += (((i16 * Test.instanceCount) + Test.byFld) - i18);
                for (d2 = 1; d2 < 1; d2++) {
                    Test.instanceCount -= 5;
                    Test.instanceCount -= i16;
                }
                for (i24 = 1; i24 < 1; ++i24) {
                    i23 = (int)30611L;
                    Test.fFld -= i23;
                    i19 = (int)f1;
                }
                Test.iArrFld[i14 - 1] &= sFld;
                Test.iArrFld[i16] = (int)Test.instanceCount;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
