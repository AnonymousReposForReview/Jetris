package tests.javafuzzer1113;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:32:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=8402584508749528967L;
    public static int iFld=-31195;
    public volatile byte byFld=-89;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4) {

        float f=-1.195F, fArr[]=new float[N];
        int i5=-4, i6=0, i7=-186, i8=-134, i9=49024, iArr[]=new int[N];
        byte by=13;

        FuzzerUtils.init(fArr, 1.548F);
        FuzzerUtils.init(iArr, -3);

        Test.instanceCount *= i4;
        i4 = (int)f;
        i4 = (int)Test.instanceCount;
        i4 <<= (int)Test.instanceCount;
        for (i5 = 1; i5 < 295; ++i5) {
            boolean b=false;
            if (true) {
                for (i7 = 1; 6 > i7; i7++) {
                    i8 *= i4;
                    i8 -= (int)8931416678824118768L;
                    Test.iFld += -13;
                    fArr[(10 >>> 1) % N] -= -25103;
                    Test.instanceCount = i7;
                    Test.iFld += (i7 ^ Test.instanceCount);
                }
                i4 += (i5 | i6);
            } else if (b) {
                iArr[i5] = i4;
            } else if (b) {
                i8 *= i9;
            } else {
                by = (byte)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth() {

        int i2=141, i3=2410, i10=13, i11=-192;
        double d=-1.47240;
        byte by1=-27;

        for (i2 = 9; i2 < 196; i2++) {
            i3 += (int)Test.instanceCount;
            vMeth1(6);
            Test.iArrFld[i2 - 1] >>= -51;
            i3 = (int)d;
            for (i10 = i2; i10 < 9; ++i10) {
                float f1=-56.559F;
                f1 += (i10 - f1);
                Test.instanceCount = i11;
                i11 -= -62071;
                by1 = (byte)d;
            }
        }
        long meth_res = i2 + i3 + Double.doubleToLongBits(d) + i10 + i11 + by1;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i, int i1) {


        fMeth();
        vMeth_check_sum += i + i1;
    }

    public void mainTest(String[] strArr1) {

        int i12=128, i13=38446, i14=44590, i15=-149, i16=37928, i17=10, i18=-57560, i19=13, i20=42238, i21=165,
            iArr1[]=new int[N];
        long l=2386737661L;
        float f2=0.688F;
        boolean b1=false;

        FuzzerUtils.init(iArr1, -13);

        vMeth(Test.iFld, Test.iFld);
        for (i12 = 1; i12 < 125; i12++) {
            switch (((56758 >>> 1) % 10) + 26) {
            case 26:
                Test.iFld <<= 14;
                for (i14 = 9; i14 < 202; i14++) {
                    Test.instanceCount = i14;
                }
                break;
            case 27:
                Test.iArrFld[i12] -= (int)Test.instanceCount;
                for (l = 202; l > 3; l--) {
                    f2 += (((l * i15) + i14) - i16);
                    i13 -= i12;
                    if (false) {
                        if (b1) break;
                        Test.iArrFld[i12 + 1] = i12;
                    } else if (false) {
                        i16 = i13;
                        for (i17 = 2; i17 > 1; --i17) {
                            byFld -= (byte)i18;
                            i16 = Test.iFld;
                            i16 *= -9;
                            Test.iArrFld[(int)(l + 1)] *= i14;
                        }
                        i15 -= i14;
                        i13 = Test.iFld;
                    } else if (b1) {
                        for (i19 = i12; i19 < 2; ++i19) {
                            f2 += (((i19 * i16) + i18) - i16);
                            Test.iArrFld[(int)(l)] += (int)Test.instanceCount;
                            f2 -= byFld;
                            i18 += i12;
                        }
                    }
                    b1 = false;
                    i21 = 1;
                    do {
                        Test.iArrFld[i21] = i17;
                        i15 += (int)f2;
                    } while (++i21 < 2);
                }
                break;
            case 28:
                Test.instanceCount += (i12 - i12);
                break;
            case 29:
                i15 = Test.iFld;
                break;
            case 30:
            case 31:
                i18 += (i12 + l);
                break;
            case 32:
                Test.iArrFld = iArr1;
                break;
            case 33:
                Test.iFld = 49942;
            case 34:
            case 35:
                Test.iFld &= i14;
                break;
            default:
                i13 += (i12 | i17);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
