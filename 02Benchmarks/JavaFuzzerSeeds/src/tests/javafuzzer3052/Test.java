package tests.javafuzzer3052;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:20:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-221L;
    public static float fFld=2.936F;
    public volatile boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];
    public static volatile boolean bArrFld[]=new boolean[N];
    public int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 26458L);
        FuzzerUtils.init(Test.iArrFld, 13);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, int i11, long l1) {

        int i12=-158, i13=-116, i14=-8, i15=-196, i16=188, i17=0, iArr1[][]=new int[N][N];
        double d=-1.125030;
        short s=-3380, sArr[]=new short[N];

        FuzzerUtils.init(iArr1, -34292);
        FuzzerUtils.init(sArr, (short)-26547);

        for (i12 = 1; i12 < 243; ++i12) {
            for (i14 = 1; 7 > i14; i14++) {
                i15 = i14;
                iArr1[i12][i14] += i15;
                d -= i15;
                for (i16 = 1; i16 < 2; i16++) {
                    i13 >>= s;
                    i13 += (i16 - Test.instanceCount);
                    sArr[i16 - 1] = (short)-1.26F;
                    i15 = i13;
                    i15 += (i16 - i11);
                    d = d;
                    Test.fFld = i14;
                    Test.fFld += -53;
                    i15 *= i16;
                }
            }
        }
        long meth_res = l + i11 + l1 + i12 + i13 + i14 + i15 + Double.doubleToLongBits(d) + i16 + i17 + s +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth(int i7) {

        int i8=32307, i9=-24971, i10=126, i18=-52801, i19=-10;
        short s1=18819;

        for (i8 = 367; i8 > 7; i8 -= 2) {
            i10 = 1;
            do {
                i9 >>= (int)(fMeth(Test.instanceCount, i7, Test.instanceCount) - 52377);
                i7 = i8;
                Test.lArrFld[i10] &= i9;
                Test.lArrFld[i10 - 1] += i10;
                Test.instanceCount &= i8;
                i9 = (int)Test.instanceCount;
                switch (((i10 % 5) * 5) + 111) {
                case 113:
                    Test.iArrFld[i10 - 1][i10 + 1] <<= -13;
                    for (i18 = i8; i18 < 1; i18 += 3) {
                        i7 = i19;
                    }
                    i9 = i19;
                    Test.instanceCount <<= s1;
                    break;
                case 120:
                    Test.iArrFld[i8 + 1][i8] = -190;
                    break;
                case 134:
                    Test.iArrFld[i8][i10] >>= i19;
                    break;
                case 129:
                    Test.lArrFld[i10] -= i19;
                    break;
                case 133:
                    i19 -= i10;
                }
            } while (++i10 < 9);
        }
        long meth_res = i7 + i8 + i9 + i10 + i18 + i19 + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i4=-9, i5=41508, i20=-38321, i21=-209, iArr[]=new int[N];
        byte by=-76, byArr[]=new byte[N];
        double d1=-63.62164;
        boolean b=true;

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(byArr, (byte)68);

        for (i4 = 7; i4 < 295; ++i4) {
            if (b) {
                switch ((i4 % 1) + 115) {
                case 115:
                    if (iMeth(i4) < -28937) break;
                    i5 += (i4 * Test.fFld);
                    for (i20 = 1; i20 < 6; i20 += 2) {
                        iArr[i4] <<= -42887;
                        i21 = by;
                        i5 -= i5;
                        Test.fFld -= i5;
                        Test.instanceCount += (9L + (i20 * i20));
                    }
                    by -= (byte)i20;
                    break;
                default:
                    iArr[i4] *= (int)d1;
                }
                by = (byte)i20;
                if (b) continue;
            } else if (false) {
                Test.instanceCount += i4;
            } else {
                byArr[i4 + 1] = (byte)i21;
            }
        }
        vMeth_check_sum += i4 + i5 + i20 + i21 + by + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=4, i1=-52229, i2=-1, i3=-230, i22=-3, i23=148, i24=2, i25=-10, i26=-14, i27=0, i28=-3;
        byte by1=63;
        float f=0.643F, fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 210L);
        FuzzerUtils.init(fArr, 88.739F);

        for (i = 9; i < 172; i++) {
            switch (((i % 8) * 5) + 55) {
            case 91:
                for (i2 = 9; i2 < 154; i2++) {
                    i1 >>= (int)lArr[i2 + 1];
                    lArr[i - 1] = i2;
                    i1 += i2;
                    vMeth();
                    for (i22 = 1; i22 < 2; ++i22) {
                        i3 = i23;
                        i3 <<= by1;
                        if (bFld) continue;
                        Test.bArrFld[i] = true;
                        i23 += (((i22 * i) + Test.fFld) - i2);
                    }
                    i3 = i23;
                    Test.instanceCount += i3;
                    Test.fFld *= Test.instanceCount;
                }
                for (f = 1; f < 154; ++f) {
                    i23 += (39832 + (f * f));
                    fArr[(int)(f - 1)] += Test.instanceCount;
                    for (i25 = 2; i25 > 1; --i25) {
                        i1 = (int)-357911615506542205L;
                        i1 += i25;
                    }
                    for (i27 = 1; i27 < 2; i27++) {
                        i26 += i26;
                        i1 ^= i28;
                        i23 = i28;
                        Test.instanceCount = i27;
                        try {
                            i24 = (iArrFld1[i] % 533151692);
                            i26 = (-174 / Test.iArrFld[i][(i2 >>> 1) % N]);
                            Test.iArrFld[i27 + 1][i] = (i25 % Test.iArrFld[i + 1][i]);
                        } catch (ArithmeticException a_e) {}
                        i23 = i28;
                    }
                    i26 = by1;
                }
            case 95:
                i1 += (i + i22);
                break;
            case 71:
                i23 |= i28;
            case 65:
                Test.instanceCount = i27;
                break;
            case 60:
                if (bFld) continue;
            case 63:
                Test.instanceCount = Test.instanceCount;
                break;
            case 58:
                i28 -= i25;
                break;
            case 73:
                Test.iArrFld[i][i - 1] = 53102;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
