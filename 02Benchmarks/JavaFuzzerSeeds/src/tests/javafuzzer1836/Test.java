package tests.javafuzzer1836;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 04:12:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=217L;
    public static float fFld=2.967F;
    public static volatile short sFld=-1933;
    public static boolean bFld=true;
    public static double dFld=111.48007;
    public static long lFld=-9L;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3) {

        int i4=10, i5=-62475, i6=-87, i7=-6;
        double d=1.3317, d1=3.50466;
        float f1=100.775F;

        Test.iArrFld[(i3 >>> 1) % N] = -28;
        for (i4 = 14; i4 < 238; ++i4) {
            d *= Test.instanceCount;
        }
        i5 -= i3;
        Test.instanceCount <<= -35525;
        i3 /= (int)(i4 | 1);
        Test.instanceCount *= 37505;
        d1 = 262;
        do {
            for (i6 = (int)(d1); i6 < 6; ++i6) {
                i7 += (i6 ^ (long)f1);
                i5 += i4;
                try {
                    Test.iArrFld[i6] = (-38044 % Test.iArrFld[(int)(d1 + 1)]);
                    i7 = (178 % Test.iArrFld[(int)(d1 - 1)]);
                    i5 = (i3 / i4);
                } catch (ArithmeticException a_e) {}
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-3);
                i5 -= (int)14011L;
                if (i3 != 0) {
                }
            }
        } while (--d1 > 0);
        long meth_res = i3 + i4 + i5 + Double.doubleToLongBits(d) + Double.doubleToLongBits(d1) + i6 + i7 +
            Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(float f) {

        int i=-61566, i1=-7, i2=-11, i8=-149, i9=-19;
        short s=20344;
        boolean b=true;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, 43731L);
        FuzzerUtils.init(fArr, 120.671F);

        i = (int)(lArr[(i >>> 1) % N] + fArr[(i >>> 1) % N]);
        for (i1 = 1; i1 < 211; i1++) {
            s = (short)iMeth(i2);
            if (b) {
                for (i8 = 8; i8 > 1; i8--) {
                    Test.instanceCount = i8;
                    i2 = -4;
                    if (b) break;
                    Test.instanceCount = i8;
                    fArr[i1 + 1] -= i1;
                }
                vMeth1_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + s + i8 + i9 + (b ? 1 : 0) +
                    FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            } else if (false) {
                i += (-249 + (i1 * i1));
                i += (((i1 * f) + i1) - Test.instanceCount);
                i *= i2;
                f *= i1;
            } else {
                Test.iArrFld[i1] >>>= 3;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + s + i8 + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(long l) {

        int i10=62060, i11=-211, i12=-2, i13=-230;
        double d2=13.109945;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)31462);

        vMeth1(Test.fFld);
        for (i10 = 7; i10 < 315; i10++) {
            Test.sFld = (short)i10;
        }
        sArr[(i10 >>> 1) % N] -= (short)d2;
        if (Test.bFld) {
            i11 += (int)d2;
            i12 = 1;
            do {
                i11 = i10;
                Test.fFld = i10;
                l -= i11;
                i13 = 1;
                do {
                    if (Test.bFld) break;
                    Test.iArrFld[i13 + 1] = i11;
                    i11 = i10;
                    i11 += i13;
                } while (++i13 < 9);
            } while (++i12 < 186);
        } else {
        }
        vMeth_check_sum += l + i10 + i11 + Double.doubleToLongBits(d2) + i12 + i13 + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i14=-108, i15=-9, i16=-5087, i17=-2, i18=-12721, i19=-59326, i20=209, i21=7, i22=71;
        byte by=83;
        double d3=0.79382;
        long l1=1L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -93486442L);

        vMeth(1630012241L);
        Test.instanceCount = i14;
        Test.iArrFld[(-12 >>> 1) % N] = (int)-18.194F;
        for (i15 = 144; i15 > 7; --i15) {
            for (i17 = 5; i17 < 183; i17++) {
                i14 += (i17 * i14);
                switch ((i17 % 6) + 44) {
                case 44:
                    i18 = -216;
                    Test.instanceCount -= i16;
                    Test.instanceCount += (-22242 + (i17 * i17));
                case 45:
                    i18 -= i16;
                    fArrFld[i17 - 1] -= Test.fFld;
                    Test.bFld = Test.bFld;
                case 46:
                case 47:
                    i14 += (int)Test.fFld;
                    break;
                case 48:
                    Test.instanceCount = by;
                    for (d3 = 1; 2 > d3; d3++) {
                        Test.dFld = Test.instanceCount;
                        Test.instanceCount >>= i16;
                        l1 = i18;
                        Test.instanceCount += (long)(d3 * d3);
                    }
                    Test.iArrFld[i15] = -170;
                    for (i20 = 1; i20 < 2; ++i20) {
                        Test.fFld += Test.instanceCount;
                    }
                    break;
                case 49:
                    i22 += (((i17 * Test.lFld) + i22) - l1);
                    i19 = i14;
                    if (Test.bFld) {
                        if (Test.bFld) break;
                        lArr1[i17 + 1] += i14;
                        Test.iArrFld[i15] >>= i22;
                    }
                    i14 = -21;
                    break;
                default:
                    Test.instanceCount *= (long)Test.fFld;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
