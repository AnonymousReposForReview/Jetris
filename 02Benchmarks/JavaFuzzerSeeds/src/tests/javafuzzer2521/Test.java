package tests.javafuzzer2521;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:13:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1883521330793617900L;
    public static volatile float fFld=0.507F;
    public static boolean bFld=false;
    public short sFld=8397;
    public static int iArrFld[][]=new int[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -6);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i7, long l1) {

        long l2=1445L, lArr[]=new long[N];
        int i8=128, i9=1, i10=-9, i11=5, i12=43102, i13=126, i14=14461;
        double d1=110.100093;

        FuzzerUtils.init(lArr, -1L);

        l1 >>= i7;
        lArr[(i7 >>> 1) % N] += i7;
        try {
            Test.iArrFld[(i7 >>> 1) % N][(-57369 >>> 1) % N] &= i7;
            for (l2 = 12; l2 < 252; l2++) {
                l1 %= (l2 | 1);
                if (Test.bFld) continue;
                d1 -= l1;
            }
            for (i9 = 10; 247 > i9; ++i9) {
                i10 |= i7;
                for (i11 = i9; i11 < 7; i11++) {
                    i7 -= (int)-774092770L;
                    for (i13 = 1; i13 < 1; i13++) {
                        if (Test.bFld) continue;
                        i14 -= (int)Test.instanceCount;
                    }
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            l1 = Test.instanceCount;
        }
        long meth_res = i7 + l1 + l2 + i8 + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i3=13791, i4=158, i5=10, i6=-32767, i15=5;
        byte by=-40, by1=20;
        double d=-2.32321, dArr[]=new double[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 84.201F);
        FuzzerUtils.init(dArr, 1.2172);

        for (i3 = 21; i3 < 338; i3++) {
            i4 -= (int)(--fArr[i3 - 1]);
            for (i5 = 1; i5 < 5; i5++) {
                by = (byte)(Math.max((int)(Test.instanceCount - by1), (int)(Test.instanceCount * i6)) + (d++));
                switch (((((-(--i6)) >>> 1) % 8) * 5) + 71) {
                case 108:
                    Test.fFld = (iMeth1(-19, Test.instanceCount) + i6);
                    i4 = i5;
                    i15 = 1;
                    do {
                        i4 += i15;
                        by1 *= (byte)i3;
                        i6 -= (int)Test.instanceCount;
                        dArr[i5 + 1] = Test.fFld;
                        Test.iArrFld[i5 - 1][i5 - 1] = (int)2.78161;
                        i4 = (int)Test.instanceCount;
                        Test.instanceCount += (((i15 * i6) + Test.instanceCount) - i5);
                    } while (++i15 < 2);
                case 82:
                    Test.iArrFld[i5][i5] -= 62;
                    break;
                case 88:
                    i6 -= (int)6754L;
                case 73:
                    i6 <<= i3;
                case 78:
                    i6 += i5;
                    break;
                case 95:
                    i6 += (i5 ^ i3);
                    break;
                case 72:
                    i6 *= i5;
                case 103:
                    Test.fFld *= i5;
                    break;
                default:
                    dArr[i5 - 1] = 37;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + by + by1 + Double.doubleToLongBits(d) + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public long lMeth() {

        float f=63.371F;
        int i2=-5, i16=-10, i17=-12;
        byte by2=-21;

        for (f = 8; f < 338; f++) {
            i2 &= iMeth();
            i2 += i2;
            switch ((int)(((f % 7) * 5) + 52)) {
            case 77:
                i16 = 1;
                while (++i16 < 5) {
                    double d2=0.30129;
                    d2 -= i2;
                    Test.instanceCount += i16;
                    Test.iArrFld[i16 - 1] = Test.iArrFld[i16];
                    try {
                        i2 = (-1216457833 / i16);
                        i2 = (i2 / i16);
                        Test.iArrFld[(int)(f)][i16] = (Test.iArrFld[(int)(f)][(int)(f - 1)] / i2);
                    } catch (ArithmeticException a_e) {}
                }
                if (Test.bFld) {
                    switch ((int)((f % 6) + 101)) {
                    case 101:
                        Test.iArrFld[(int)(f)][(int)(f + 1)] = (int)Test.fFld;
                        Test.instanceCount += i16;
                        break;
                    case 102:
                    case 103:
                        Test.iArrFld[(int)(f + 1)][(int)(f)] = (int)Test.instanceCount;
                        Test.iArrFld[(int)(f)][(int)(f)] = i2;
                    case 104:
                        Test.instanceCount &= -46243L;
                        break;
                    case 105:
                        i2 += (int)(((f * i2) + i2) - sFld);
                    case 106:
                        if (Test.bFld) continue;
                        break;
                    }
                }
                break;
            case 82:
                Test.iArrFld[(int)(f)][(int)(f - 1)] *= 0;
                break;
            case 64:
                Test.iArrFld[(int)(f)][(int)(f - 1)] *= i2;
                break;
            case 68:
                i2 |= i2;
                break;
            case 80:
                Test.iArrFld[(int)(f - 1)][(int)(f)] -= (int)2.906F;
                break;
            case 71:
                by2 >>= (byte)i17;
            case 58:
                by2 = (byte)i16;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i2 + i16 + by2 + i17;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-7749979448903010822L;
        boolean b=true, bArr[]=new boolean[N];
        int i=-4810, i1=74, i18=12, i19=-8, i20=218, i21=-55852;
        double d3=97.130014;
        byte by3=20;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(fArr1, 88.228F);

        l = 1;
        while (++l < 258) {
            if (b) break;
            if (b) {
                for (i = 97; i > 5; --i) {
                    i1 = (int)(Math.max(i1++, i1) - lMeth());
                    i1 += (-59 + (i * i));
                    bArr = bArr;
                    Test.iArrFld[(int)(l)][(int)(l + 1)] = (int)l;
                }
            } else {
                d3 *= Test.fFld;
            }
            i1 = (int)Test.instanceCount;
            if (false) break;
            if (true) continue;
            Test.instanceCount += i1;
            i1 >>>= i;
            switch ((((i1 >>> 1) % 6) * 5) + 5) {
            case 22:
                Test.instanceCount &= i1;
                i1 *= i1;
                i1 -= (int)1.57297;
                i1 >>>= i;
            case 35:
                fArr1[(int)(l)][(int)(l)] *= -30268;
                by3 += (byte)(l - by3);
                i1 = i1;
                i1 <<= i;
                break;
            case 15:
                i1 += by3;
            case 31:
                for (i18 = 4; 97 > i18; ++i18) {
                    for (i20 = 1; i20 < 2; ++i20) {
                        lArrFld = lArrFld;
                        lArrFld[(int)(l + 1)] = 217;
                        i21 = (int)l;
                    }
                    d3 *= Test.instanceCount;
                }
                break;
            case 7:
                i1 -= (int)Test.fFld;
                break;
            case 12:
                Test.iArrFld[(i21 >>> 1) % N][(int)(l - 1)] = 88;
                break;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
