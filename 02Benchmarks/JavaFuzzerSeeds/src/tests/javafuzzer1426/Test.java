package tests.javafuzzer1426;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 20:14:36 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1134340997L;
    public static float fFld=-39.855F;
    public static volatile short sFld=-26930;
    public static volatile double dFld=35.116434;
    public static int iFld=-2830;

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l) {

        int i3=13, i4=3, i5=3, iArr[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -18160L);
        FuzzerUtils.init(iArr, -9);

        for (long l1 : lArr) {
            for (i3 = 4; i3 > 1; i3 -= 3) {
                i5 = 1;
                while (++i5 < 4) {
                    byte by1=-5;
                    short s=14288;
                    switch (((i3 % 1) * 5) + 8) {
                    case 12:
                        Test.fFld += i5;
                        i4 <<= i3;
                        i4 += 0;
                        break;
                    default:
                        iArr[i3 + 1] %= (int)(i4 | 1);
                    }
                    switch ((i5 % 1) + 80) {
                    case 80:
                        lArr[i5] -= i4;
                        l1 += i5;
                        i4 = by1;
                        break;
                    default:
                        i4 = -2455;
                    }
                    s += (short)17.119605;
                }
                Test.instanceCount /= (i3 | 1);
            }
        }
        vMeth1_check_sum += l + i3 + i4 + i5 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth() {

        int i6=-115, i7=241, i8=24367, i9=-37312, i10=82, i11=9;
        byte by2=-64;
        boolean b=false;
        short s1=-7582;

        vMeth1(Test.instanceCount);
        Test.instanceCount = i6;
        for (i7 = 3; i7 < 294; ++i7) {
            Test.fFld += by2;
            i9 = 1;
            while (++i9 < 6) {
                if (b) continue;
                for (i10 = 1; i10 < 1; i10++) {
                    Test.instanceCount &= -119;
                    i8 += (((i10 * i9) + Test.instanceCount) - i7);
                    i8 += (((i10 * i11) + Test.fFld) - Test.instanceCount);
                    if (b) {
                        i11 = i6;
                        s1 += (short)i10;
                        if (i11 != 0) {
                        }
                        Test.fFld -= i6;
                    } else {
                        Test.fFld = 5;
                    }
                }
            }
        }
        long meth_res = i6 + i7 + i8 + by2 + i9 + (b ? 1 : 0) + i10 + i11 + s1;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i=14, i1=-11, i2=-13, i12=-243, i13=-2, i14=1, i15=-41715;
        byte by=9;
        boolean b1=false;
        double d=0.89557, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.125067);

        for (i = 7; i < 124; ++i) {
            dArr[i] = Math.abs(++i1);
            Test.fFld -= Test.fFld;
            i2 = 1;
            do {
                by -= (byte)(lMeth() + i1);
                if (b1) continue;
                by ^= (byte)i1;
                Test.instanceCount = Test.sFld;
                for (i12 = 1; i12 < 1; i12++) {
                    i1 = i;
                    i13 = i12;
                    switch (((i1 >>> 1) % 7) + 109) {
                    case 109:
                        Test.instanceCount += (i12 * i12);
                        Test.instanceCount += i;
                        i14 += (int)d;
                        break;
                    case 110:
                        Test.sFld = (short)i15;
                        break;
                    case 111:
                        i1 = Test.sFld;
                    case 112:
                        Test.instanceCount += (((i12 * i14) + i14) - Test.fFld);
                    case 113:
                        i13 = -7;
                    case 114:
                        i15 += i12;
                        break;
                    case 115:
                        i13 += (((i12 * i) + Test.fFld) - i);
                        break;
                    }
                }
            } while (++i2 < 13);
        }
        vMeth_check_sum += i + i1 + i2 + by + (b1 ? 1 : 0) + i12 + i13 + i14 + Double.doubleToLongBits(d) + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i16=-8, i17=10, i18=174, i19=5, i20=11, i21=2, i22=147, i23=-51, i24=-7, i25=149, i26=-62397, iArr1[]=new
            int[N];
        boolean b2=false;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr1, -14174);
        FuzzerUtils.init(byArr, (byte)-105);

        vMeth();
        i16 -= i16;
        Test.dFld = i16;
        i16 |= i16;
        for (i17 = 2; i17 < 264; ++i17) {
            for (i19 = 96; i19 > 3; i19--) {
                Test.sFld >>= (short)-11;
                Test.dFld /= (i18 | 1);
                Test.dFld += Test.instanceCount;
                i16 = -7;
                for (i21 = 1; i21 < 2; ++i21) {
                    Test.fFld = i21;
                    i16 += 23083;
                    if (b2) break;
                    i16 += (i21 - i20);
                }
                Test.iFld = -84;
            }
            Test.iFld -= i21;
            Test.dFld *= Test.sFld;
            iArr1[i17 + 1] *= (int)Test.fFld;
            Test.instanceCount = Test.instanceCount;
            iArr1[i17 - 1] = -220;
            Test.iFld += (i17 * i17);
            for (i23 = 4; 96 > i23; i23++) {
                try {
                    i16 = (iArr1[i23 + 1] % -213);
                    i22 = (i20 / 57753);
                    i18 = (Test.iFld / iArr1[i17 + 1]);
                } catch (ArithmeticException a_e) {}
                i18 = (int)-4L;
            }
            for (i25 = 6; 96 > i25; i25++) {
                byArr[i25] += (byte)Test.fFld;
                i20 = i18;
                byArr[i17] -= (byte)Test.instanceCount;
                Test.iFld *= 6259;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
