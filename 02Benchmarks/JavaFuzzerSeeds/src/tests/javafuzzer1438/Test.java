package tests.javafuzzer1438;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 20:43:57 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static float fFld=-2.463F;
    public static byte byFld=-29;
    public static double dFld=0.20558;
    public static boolean bFld=false;
    public static byte byFld1=99;
    public static short sFld=-13335;
    public static boolean bArrFld[]=new boolean[N];
    public int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i5, double d) {

        int i6=16141, i7=5, i8=3, i9=52542, i10=-51, iArr[]=new int[N];
        boolean b=false;
        long lArr[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(lArr, -216L);
        FuzzerUtils.init(dArr1, 90.100195);
        FuzzerUtils.init(iArr, 30501);

        for (i6 = 396; i6 > 5; i6 -= 2) {
            i5 += i7;
            i7 += (int)-2429277579L;
            if (b) {
                i8 = 1;
                do {
                    lArr[i6] &= -18754;
                    i5 -= i6;
                    i7 = i7;
                    if (b) continue;
                    Test.fFld += i8;
                    switch ((i8 % 9) + 19) {
                    case 19:
                        for (i9 = i8; i9 < 1; ++i9) {
                            i5 = Test.byFld;
                            l += i9;
                            i10 = (int)d;
                        }
                        break;
                    case 20:
                        i7 = (int)l;
                        break;
                    case 21:
                        d += i8;
                    case 22:
                        Test.instanceCount = i5;
                        break;
                    case 23:
                        i5 += (((i8 * i6) + i10) - i8);
                    case 24:
                        i5 += (i8 - Test.instanceCount);
                        break;
                    case 25:
                        dArr1 = dArr1;
                        break;
                    case 26:
                        iArr[i6 + 1] -= i9;
                        break;
                    case 27:
                        iArr[i8 - 1] *= i10;
                        break;
                    }
                } while (++i8 < 8);
                vMeth1_check_sum += l + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 +
                    FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) +
                    FuzzerUtils.checkSum(iArr);
                return;
            } else if (false) {
                i5 += (i6 ^ Test.instanceCount);
            } else if (b) {
                try {
                    i5 = (182 / i6);
                    i7 = (-54 % i6);
                    i7 = (-1369694660 / i5);
                } catch (ArithmeticException a_e) {}
            } else {
                if (b) continue;
            }
        }
        vMeth1_check_sum += l + i5 + Double.doubleToLongBits(d) + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1, int i2, int i3) {

        int i4=248, i11=-125, i12=21637, i14=-66, i15=-63135, i16=-1, iArr1[][]=new int[N][N];
        boolean b1=true;

        FuzzerUtils.init(iArr1, 10);

        i4 = 1;
        do {
            vMeth1(Test.instanceCount, i3, Test.dFld);
            iArr1 = FuzzerUtils.int2array(N, (int)-17214);
            iArr1[i4 + 1] = iArr1[i4 + 1];
            for (i11 = 7; i11 > i4; i11 -= 2) {
                int i13=-8;
                Test.instanceCount = 72;
                i3 = i13;
            }
            i14 = 1;
            do {
                for (i15 = 1; 1 > i15; ++i15) {
                    i12 *= -61513;
                    iArr1[i4 - 1][i15] -= (int)Test.dFld;
                    Test.instanceCount += (long)Test.dFld;
                    Test.instanceCount *= Test.instanceCount;
                    Test.bArrFld[i4 + 1] = b1;
                    iArr1[i4][i15 + 1] = i15;
                }
            } while (++i14 < 7);
        } while (++i4 < 239);
        long meth_res = i1 + i2 + i3 + i4 + i11 + i12 + i14 + i15 + i16 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-5, i17=64, i18=-63292, i19=-13, i20=61175, i21=2, iArr2[]=new int[N];
        short s=-28312, sArr[]=new short[N];
        double dArr[]=new double[N];
        float fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 2.117024);
        FuzzerUtils.init(fArr, -12.800F);
        FuzzerUtils.init(iArr2, 127);
        FuzzerUtils.init(lArr1, 54931L);
        FuzzerUtils.init(sArr, (short)1970);

        Test.instanceCount -= (long)(((dArr[(i >>> 1) % N]--) - s) + (Math.max(i, i) << i));
        i = (iMeth(i, i, i) * -183);
        for (i17 = 9; i17 < 300; ++i17) {
            fArr[i17 - 1] *= 485307872589295817L;
            i = i;
            switch ((i17 % 9) + 16) {
            case 16:
                iArr2[i17 + 1] = s;
                for (i19 = 1; i19 < 6; ++i19) {
                    i21 = 1;
                    while (++i21 < 2) {
                        i18 = i18;
                        Test.dFld = i;
                        switch (i19 + 66) {
                        case 66:
                            lArr1[i17 - 1] += 6;
                            dArr[i21] *= i17;
                            break;
                        case 67:
                            if (Test.bFld) break;
                            break;
                        case 68:
                            Test.instanceCount += i21;
                            break;
                        case 69:
                            fArr = fArr;
                        case 70:
                            Test.instanceCount *= i21;
                            break;
                        case 71:
                            if (i != 0) {
                                vMeth_check_sum += i + s + i17 + i18 + i19 + i20 + i21 +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2) +
                                    FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(sArr);
                                return;
                            }
                        case 72:
                            iArr2[i17 + 1] -= i21;
                            break;
                        case 73:
                        case 74:
                            if (true) break;
                            break;
                        case 75:
                            i += (((i21 * i20) + Test.fFld) - Test.fFld);
                            break;
                        case 76:
                            i += (13 + (i21 * i21));
                            break;
                        case 77:
                            i20 += i19;
                            break;
                        case 78:
                            i20 >>>= (int)Test.instanceCount;
                        case 79:
                            Test.instanceCount &= i17;
                            break;
                        case 80:
                        case 81:
                            Test.fFld += (i21 + i);
                        case 82:
                            Test.instanceCount += i18;
                            break;
                        case 83:
                            sArr[i17] >>>= (short)i18;
                            break;
                        case 84:
                            Test.instanceCount += (((i21 * i20) + i21) - i19);
                            break;
                        case 85:
                        case 86:
                            if (i17 != 0) {
                                vMeth_check_sum += i + s + i17 + i18 + i19 + i20 + i21 +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2) +
                                    FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(sArr);
                                return;
                            }
                        case 87:
                            i18 <<= i17;
                            break;
                        case 88:
                            iArr2 = iArr2;
                            break;
                        case 89:
                            i20 = i18;
                        case 90:
                            Test.byFld = Test.byFld;
                            break;
                        case 91:
                            dArr[i19] -= Test.fFld;
                            break;
                        case 92:
                            Test.fFld *= 17;
                            break;
                        case 93:
                            iArr2[i17 + 1] <<= i21;
                        case 94:
                            Test.fFld += i21;
                            break;
                        case 95:
                            Test.instanceCount = 2379983118L;
                            break;
                        case 96:
                            i20 *= (int)Test.dFld;
                            break;
                        case 97:
                            i18 &= 4002;
                        case 98:
                            Test.instanceCount >>= i20;
                            break;
                        case 99:
                            try {
                                i = (i19 % 366489600);
                                iArr2[i19 - 1] = (i19 / i17);
                                i20 = (i20 % -10798);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 100:
                            s *= (short)-114;
                            break;
                        case 101:
                        case 102:
                            Test.instanceCount = (long)Test.fFld;
                            break;
                        case 103:
                            Test.instanceCount -= Test.instanceCount;
                            break;
                        case 104:
                            Test.dFld -= i;
                            break;
                        case 105:
                            Test.bFld = Test.bFld;
                            break;
                        case 106:
                            iArr2[i17 + 1] = i;
                            break;
                        case 107:
                            i18 += (12 + (i21 * i21));
                            break;
                        case 108:
                            i20 >>= i18;
                            break;
                        case 109:
                            i = -251;
                            break;
                        case 110:
                            i20 <<= i;
                            break;
                        case 111:
                            Test.instanceCount *= Test.byFld;
                            break;
                        case 112:
                            iArr2[i21] -= (int)Test.instanceCount;
                            break;
                        case 113:
                            Test.instanceCount = i21;
                            break;
                        case 114:
                            i20 >>= (int)-37072L;
                        case 115:
                            Test.instanceCount = i;
                            break;
                        case 116:
                            Test.fFld += (-247L + (i21 * i21));
                            break;
                        case 117:
                            Test.instanceCount ^= Test.instanceCount;
                            break;
                        case 118:
                            i20 += (int)(-137L + (i21 * i21));
                            break;
                        case 119:
                            lArr1[i17] -= i19;
                        case 120:
                            i18 *= i17;
                        case 121:
                            i20 = i17;
                            break;
                        case 122:
                            i20 -= (int)Test.fFld;
                            break;
                        case 123:
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 124:
                            Test.fFld = i19;
                        case 125:
                            i += (i21 | Test.instanceCount);
                            break;
                        case 126:
                            i += (int)-30480L;
                            break;
                        case 127:
                            Test.fFld -= -4;
                        case 128:
                            iArr2[i21 + 1] -= -100;
                            break;
                        case 129:
                            iArr2[i17 + 1] = i21;
                            break;
                        case 130:
                            Test.instanceCount += i21;
                        case 131:
                            Test.byFld = Test.byFld1;
                            break;
                        case 132:
                            i18 &= i21;
                            break;
                        case 133:
                            i20 += (i21 | i18);
                        case 134:
                            iArr2[i21] = i19;
                            break;
                        case 135:
                            Test.fFld = (float)Test.dFld;
                        default:
                            Test.byFld1 *= (byte)i17;
                        }
                    }
                }
                break;
            case 17:
                Test.instanceCount += i21;
                break;
            case 18:
                iArr2[i17 + 1] -= (int)Test.fFld;
            case 19:
                i20 += Test.byFld;
                break;
            case 20:
                i -= (int)Test.instanceCount;
                break;
            case 21:
                lArr1[i17 - 1] = i21;
                break;
            case 22:
                Test.instanceCount = (long)Test.dFld;
            case 23:
                iArr2[i17 - 1] += i19;
            case 24:
                i += i17;
                break;
            default:
                i = i19;
            }
        }
        vMeth_check_sum += i + s + i17 + i18 + i19 + i20 + i21 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr2) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {

        int i22=-43052, i23=25054, i24=2, i25=-14, i26=14, i27=-58143, i28=162, i29=-9438;
        float f=53.128F;

        vMeth();
        i22 <<= (int)Test.instanceCount;
        if (Test.bFld) {
            i23 = 125;
            do {
                i24 = 1;
                while (++i24 < 140) {
                    Test.byFld1 *= (byte)i22;
                    i22 >>= i23;
                    for (i25 = 1; 5 > i25; ++i25) {
                        try {
                            i26 = (iArrFld[i25] % i26);
                            i26 = (i24 / iArrFld[i25 - 1]);
                            i22 = (59759 / i24);
                        } catch (ArithmeticException a_e) {}
                        Test.fFld += i25;
                    }
                    i27 = 5;
                    while (--i27 > 0) {
                        i26 = -9;
                        if (Test.bFld) break;
                        Test.instanceCount -= (long)38.172F;
                        i26 += i27;
                        Test.instanceCount *= i26;
                        i22 = Test.sFld;
                    }
                    for (i28 = 1; i28 < 5; ++i28) {
                        i26 <<= Test.byFld1;
                        i22 += (int)f;
                        iArrFld[i23 - 1] = i25;
                        i29 <<= i24;
                        iArrFld[i28] = i25;
                        i29 |= i24;
                        Test.instanceCount *= (long)1.150F;
                    }
                    lArrFld[i23] = i22;
                    i29 += (((i24 * i26) + Test.instanceCount) - Test.instanceCount);
                    Test.sFld = (short)Test.instanceCount;
                }
                i26 += i22;
                f = Test.instanceCount;
            } while ((i23 -= 3) > 0);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
