package tests.javafuzzer2649;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:59:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3176357989L;
    public int iFld=244;
    public static float fFld=2.166F;
    public static double dFld=-38.23869;
    public static byte byFld=104;
    public boolean bFld=false;
    public static volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 207);
        FuzzerUtils.init(Test.lArrFld, 201L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(double d) {

        int i1=88, i2=-6, i3=221, i4=28310, i5=-8;
        boolean b1=false;
        byte by=-112;

        for (i1 = 6; i1 < 184; i1++) {
            i2 >>= i1;
            Test.instanceCount -= i1;
            switch ((i1 % 2) + 86) {
            case 86:
                try {
                    i2 = (-86 / i2);
                    Test.iArrFld[i1 - 1] = (i2 / 75);
                    i2 = (i1 / 1059372114);
                } catch (ArithmeticException a_e) {}
                i2 = i2;
                break;
            case 87:
                if (b1) continue;
                break;
            }
            Test.fFld *= i3;
            i2 += i1;
            by = (byte)i2;
            i3 -= i2;
            Test.fFld += (i1 * i1);
            for (i4 = 1; i4 < 9; i4++) {
                Test.iArrFld[i1 - 1] = -10;
                Test.instanceCount += i4;
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + i1 + i2 + (b1 ? 1 : 0) + i3 + by + i4 + i5;
    }

    public static void vMeth1(long l, int i, boolean b) {

        long l1=-1295215739500163224L;
        int i6=-189, i7=7, i8=-1, i9=176, i10=-83;
        byte by1=27;
        short s=5599;

        vMeth2(Test.dFld);
        for (l1 = 2; l1 < 195; l1++) {
            Test.lArrFld[(int)(l1)] = (long)Test.dFld;
            i *= i6;
            for (i7 = 1; 8 > i7; ++i7) {
                for (i9 = i7; i9 < 2; ++i9) {
                    switch ((i7 % 5) + 127) {
                    case 127:
                        i10 -= (int)Test.dFld;
                        switch ((i9 % 3) + 73) {
                        case 73:
                            switch (((i7 % 6) * 5) + 8) {
                            case 13:
                                by1 += (byte)Test.fFld;
                                i10 <<= -14;
                                Test.iArrFld[i9 + 1] -= i;
                                break;
                            case 33:
                                Test.dFld -= i7;
                                i8 = 6;
                                break;
                            case 35:
                                i10 = i9;
                                break;
                            case 12:
                                Test.instanceCount <<= Test.instanceCount;
                                break;
                            case 31:
                                Test.fFld %= ((long)(Test.fFld) | 1);
                                break;
                            case 25:
                                i6 |= (int)l;
                                break;
                            default:
                                l += s;
                            }
                            break;
                        case 74:
                            Test.iArrFld[(int)(l1 + 1)] += i7;
                            break;
                        case 75:
                            i += 8;
                        default:
                            i8 *= -77;
                        }
                        break;
                    case 128:
                        Test.fFld = i6;
                        break;
                    case 129:
                        Test.instanceCount += (-30356 + (i9 * i9));
                    case 130:
                        Test.instanceCount *= l;
                        break;
                    case 131:
                        i8 += (((i9 * Test.instanceCount) + i7) - i7);
                        break;
                    }
                }
            }
        }
        vMeth1_check_sum += l + i + (b ? 1 : 0) + l1 + i6 + i7 + i8 + i9 + i10 + by1 + s;
    }

    public static void vMeth() {

        int i11=13136, iArr[]=new int[N];
        boolean b2=true;

        FuzzerUtils.init(iArr, -91);

        vMeth1(Test.instanceCount, i11, b2);
        Test.iArrFld = FuzzerUtils.int1array(N, (int)-12);
        Test.instanceCount = Test.instanceCount;
        i11 = Test.byFld;
        iArr[(i11 >>> 1) % N] *= -69;
        vMeth_check_sum += i11 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i12=160, i13=4, i14=62109, i15=36, i16=108, i17=186, i18=-189, i19=4, i20=222;
        short s1=-15564;
        float fArr[]=new float[N];
        boolean bArr[]=new boolean[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(fArr, -12.581F);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr, 38.121287);

        Test.instanceCount += (++iFld);
        vMeth();
        Test.iArrFld[(iFld >>> 1) % N] <<= iFld;
        for (i12 = 336; i12 > 13; --i12) {
            iFld += i12;
        }
        i13 <<= (int)Test.instanceCount;
        iFld >>= iFld;
        for (i14 = 8; i14 < 200; i14++) {
            Test.lArrFld[i14] *= i13;
            i16 = 1;
            do {
                Test.fFld = (float)0.33175;
                Test.instanceCount -= 1;
            } while (++i16 < 131);
            i13 &= i13;
            switch ((((i12 >>> 1) % 8) * 5) + 40) {
            case 77:
                for (i17 = 4; i17 < 131; i17++) {
                    s1 = (short)-8;
                    fArr[i17 - 1] += i12;
                    switch ((i17 % 2) + 66) {
                    case 66:
                        Test.instanceCount = Test.instanceCount;
                        i15 = (int)Test.instanceCount;
                        i15 = i16;
                        i18 *= (int)Test.dFld;
                        break;
                    case 67:
                        Test.fFld -= -10L;
                        Test.iArrFld[i14 - 1] += 2618;
                        for (i19 = 1; i19 < 2; i19++) {
                            Test.fFld -= Test.instanceCount;
                        }
                    default:
                        Test.iArrFld[i17 - 1] -= iFld;
                        Test.instanceCount >>= i15;
                    }
                    bArr[i14 - 1] = bFld;
                    iFld ^= i14;
                }
            case 68:
                Test.dFld -= i15;
                break;
            case 50:
                Test.instanceCount = Test.instanceCount;
                break;
            case 56:
                Test.fFld *= Test.instanceCount;
                break;
            case 58:
                bArr = bArr;
                break;
            case 60:
                dArr[i14 - 1] *= i14;
                break;
            case 48:
                iFld += (((i14 * Test.fFld) + i15) - i14);
            case 74:
                Test.instanceCount = i20;
                break;
            default:
                i13 += (i14 | i18);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
