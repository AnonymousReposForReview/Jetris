package tests.javafuzzer122;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:45:43 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=664545837L;
    public static volatile byte byFld=76;
    public static volatile int iFld=11;
    public double dFld=75.34697;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.456F);
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.lArrFld, 18853L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, long l2) {

        int i7=-12, i8=-7, i9=-10, i10=-12, i11=64, iArr[]=new int[N];
        float f=1.218F;
        short s=30336;
        boolean bArr[]=new boolean[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr, -39);
        FuzzerUtils.init(lArr1, 694L);

        i7 = 193;
        do {
            i8 += i9;
            switch ((i7 % 10) + 119) {
            case 119:
                for (i10 = 1; i10 < 8; i10++) {
                    bArr[i10 + 1] = false;
                    Test.byFld -= (byte)-3613513167L;
                    Test.instanceCount >>>= l2;
                    iArr[i10] += i9;
                    i11 -= (int)Test.instanceCount;
                    i11 += (((i10 * i9) + l1) - Test.byFld);
                    lArr1[i7] = i8;
                }
                Test.byFld = (byte)i11;
                break;
            case 120:
                f = i9;
                try {
                    i11 = (159 / iArr[i7]);
                    i9 = (i9 / -180);
                    i8 = (30698 % i9);
                } catch (ArithmeticException a_e) {}
                break;
            case 121:
                Test.fArrFld[i7 + 1] -= s;
            case 122:
                i8 += i7;
                break;
            case 123:
                i8 += i11;
                break;
            case 124:
                iArr[i7 - 1] = i8;
            case 125:
            case 126:
                i9 += (i7 + f);
                break;
            case 127:
                iArr[i7] = (int)-102.866F;
                break;
            case 128:
            default:
                l1 += (i7 * i7);
            }
        } while (--i7 > 0);
        long meth_res = l1 + l2 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) + s + FuzzerUtils.checkSum(bArr) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i12=161, i13=-192, i14=-14, i15=2, i16=-144, i17=99, i18=1, i19=-166;
        float f1=-10.691F;
        short s1=31791;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 3905415676L);

        Test.byFld = (byte)iMeth(Test.instanceCount, Test.instanceCount);
        for (i12 = 18; i12 < 368; i12++) {
            Test.iArrFld[i12] -= i12;
            for (i14 = 1; 5 > i14; i14++) {
                Test.instanceCount *= -14;
                for (i16 = 2; 1 < i16; --i16) {
                    i17 = i16;
                }
                Test.lArrFld[i14] = i16;
                Test.lArrFld[i12 - 1] += i15;
                i13 += (((i14 * f1) + i13) - i12);
                for (i18 = 2; i18 > i14; i18 -= 2) {
                    lArr2[i18 + 1] >>= Test.instanceCount;
                    i17 ^= i19;
                    s1 += (short)i13;
                    i17 += (((i18 * i13) + Test.instanceCount) - i15);
                }
            }
        }
        vMeth1_check_sum += i12 + i13 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) + i18 + i19 + s1 +
            FuzzerUtils.checkSum(lArr2);
    }

    public static void vMeth(int i6, long l) {


        vMeth1();
        vMeth_check_sum += i6 + l;
    }

    public void mainTest(String[] strArr1) {

        int i=14805, i1=47159, i2=50824, i3=1, i4=-61127, i5=-10139;
        float f2=0.425F;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 8L);

        lArr = (lArr = (lArr = (lArr = lArr)));
        for (i = 6; i < 260; ++i) {
            for (i2 = 6; 99 > i2; i2++) {
                for (i4 = 1; i4 < 2; ++i4) {
                    short s2=-25983;
                    vMeth(i5, Test.instanceCount);
                    switch ((((i5 >>> 1) % 8) * 5) + 41) {
                    case 61:
                        Test.instanceCount >>= i3;
                        i3 = i2;
                        Test.instanceCount += (i4 - i5);
                        break;
                    case 52:
                        s2 = (short)i1;
                        i3 <<= (int)Test.instanceCount;
                        break;
                    case 59:
                        Test.fArrFld[i + 1] += i;
                        Test.instanceCount += i5;
                        Test.instanceCount = i5;
                        break;
                    case 45:
                        i3 <<= i3;
                        i1 += (((i4 * i2) + i5) - i1);
                        break;
                    case 53:
                        i3 <<= i2;
                        break;
                    case 60:
                        Test.instanceCount >>= Test.instanceCount;
                        s2 += s2;
                        i1 += i4;
                        break;
                    case 54:
                        i5 += i3;
                        i1 >>>= (int)-39L;
                        i1 -= i3;
                        f2 = f2;
                    case 81:
                        Test.lArrFld[i] >>= i5;
                        i3 *= i;
                        Test.iArrFld = Test.iArrFld;
                        Test.iFld *= (int)dFld;
                        break;
                    default:
                        i3 += i4;
                        Test.instanceCount = (long)-98.1002F;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
