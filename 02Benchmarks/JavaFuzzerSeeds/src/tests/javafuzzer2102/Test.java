package tests.javafuzzer2102;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:08:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public boolean bFld=true;
    public long lArrFld[][]=new long[N][N];

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vSmallMeth(long l, int i, long l1) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -5);

        iArr[(-11 >>> 1) % N] >>= (int)Test.instanceCount;
        vSmallMeth_check_sum += l + i + l1 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d) {

        int i5=124;

        i5 += i5;
        vMeth_check_sum += Double.doubleToLongBits(d) + i5;
    }

    public static int iMeth1(int i2, int i3, long l2) {

        int i4=179, i6=-48, i7=10;
        double d1=21.44242, d2=105.122911;
        float f=-95.919F;
        short s=-9712;

        i4 = 1;
        while (++i4 < 159) {
            vMeth(d1);
            for (i6 = 1; 10 > i6; i6++) {
                d2 = 1;
                while ((d2 += 2) < 2) {
                    l2 += 38536;
                    l2 += (long)(d2 * d2);
                    i2 -= (int)Test.instanceCount;
                    l2 *= i2;
                    i3 += (27236 + (d2 * d2));
                    Test.instanceCount = -133;
                    i7 = (int)l2;
                    i2 += (int)d2;
                    f = i2;
                }
                f += i6;
            }
            l2 += (i4 - s);
        }
        long meth_res = i2 + i3 + l2 + i4 + Double.doubleToLongBits(d1) + i6 + i7 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f) + s;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i8=-43978;

        vSmallMeth(Test.instanceCount--, Math.max(-(114 + iMeth1(i8, i8, Test.instanceCount)), -51897),
            Test.instanceCount);
        i8 >>>= (int)Test.instanceCount;
        long meth_res = i8;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i1=16502, i9=-10, i10=2, i11=-37194, i12=36723, i13=-219, i14=-14, i15=-50659, i16=58041, i17=34617, i18=2,
            i19=226, i20=-54670, iArr1[]=new int[N];
        long l3=6247939300581055451L;
        double d3=-69.30226;
        float f1=-1.735F;
        short s1=27408;

        FuzzerUtils.init(iArr1, -2);

        for (int smallinvoc=0; smallinvoc<247; smallinvoc++) vSmallMeth(iArr1[(i1 >>> 1) % N] + (++iArr1[(i1 >>> 1) %
            N]), (int)(iMeth() - Test.instanceCount), Test.instanceCount);
        i1 |= i1;
        for (i9 = 16; i9 < 284; i9 += 3) {
            i1 &= i1;
            iArr1[i9 - 1] -= i9;
        }
        i1 += i9;
        for (i11 = 2; i11 < 220; i11++) {
            for (i13 = i11; i13 < 115; ++i13) {
                i1 -= i13;
                i12 = (int)Test.instanceCount;
            }
        }
        i15 = 194;
        do {
            i16 *= 17697;
            if (bFld) break;
        } while ((i15 -= 3) > 0);
        i17 = 1;
        do {
            lArrFld[i17 - 1][i17 + 1] = i11;
            if (bFld) {
                for (l3 = 3; l3 < 104; l3++) {
                    for (i19 = i17; i19 < 2; ++i19) {
                        bFld = bFld;
                    }
                    switch ((int)((l3 % 1) + 50)) {
                    case 50:
                        Test.instanceCount += -52;
                        break;
                    default:
                        d3 -= f1;
                        i18 = i16;
                        Test.instanceCount *= Test.instanceCount;
                    }
                    Test.instanceCount = s1;
                }
            } else {
                d3 += Test.instanceCount;
                iArr1[i17 - 1] <<= (int)l3;
                i10 *= i1;
            }
            i1 = (int)l3;
            f1 -= 185;
        } while (++i17 < 242);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test iMeth
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
