package tests.javafuzzer1525;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:10:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static double dFld=9.14381;
    public static boolean bFld=true;
    public float fFld=99.170F;
    public static int iArrFld[][]=new int[N][N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 115);
        FuzzerUtils.init(Test.fArrFld, -53.713F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i4, short s) {

        int i5=-49913, i6=-58421, i7=14, i8=12, i9=183, i10=16169, iArr1[][]=new int[N][N];
        float f1=0.968F, fArr[]=new float[N];
        byte by1=-19;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, -1.66795);
        FuzzerUtils.init(fArr, -42.884F);
        FuzzerUtils.init(lArr, -2101770940L);
        FuzzerUtils.init(iArr1, -4);

        Test.iArrFld = Test.iArrFld;
        for (i5 = 4; i5 < 165; ++i5) {
            switch ((i5 % 9) + 61) {
            case 61:
                dArr[i5 + 1] = Test.instanceCount;
                i6 <<= i5;
                for (i7 = 1; 10 > i7; ++i7) {
                    i6 |= i4;
                    for (i9 = 1; 2 > i9; i9++) {
                        fArr[i9 + 1] += -30113;
                        switch ((i7 % 2) + 109) {
                        case 109:
                            i10 += i9;
                            if (Test.bFld) {
                                Test.instanceCount += (64318 + (i9 * i9));
                                lArr[i9 - 1] <<= Test.instanceCount;
                                try {
                                    i10 = (i5 % 1969377586);
                                    i8 = (i6 % 48);
                                    i8 = (i5 / 22306);
                                } catch (ArithmeticException a_e) {}
                            } else if (Test.bFld) {
                                Test.dFld = Test.instanceCount;
                            } else {
                                iArr1[i7 + 1][i5] *= (int)Test.dFld;
                            }
                            break;
                        case 110:
                            iArr1[i7 - 1][i7] -= (int)f1;
                            break;
                        default:
                            i8 += (-14 + (i9 * i9));
                        }
                    }
                }
                break;
            case 62:
                i4 = i4;
                break;
            case 63:
                i8 ^= i8;
                break;
            case 64:
                Test.instanceCount = i10;
            case 65:
                try {
                    i6 = (i4 / 217);
                    i6 = (i8 % i8);
                    i10 = (-1653698355 / i9);
                } catch (ArithmeticException a_e) {}
            case 66:
                i8 += (int)f1;
                break;
            case 67:
                Test.iArrFld[i5 + 1][i5 + 1] *= (int)Test.instanceCount;
            case 68:
                i10 = (int)Test.instanceCount;
                break;
            case 69:
                by1 *= (byte)Test.instanceCount;
                break;
            default:
                if (Test.bFld) break;
            }
        }
        long meth_res = i4 + s + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + by1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f, int i3) {

        short s1=7466;
        int i11=-9, i12=63146, i14=63400, i15=5, i16=120, iArr2[]=new int[N];
        float f2=0.101F;

        FuzzerUtils.init(iArr2, 28417);

        i3 ^= (int)(lMeth(-2475, s1) + i3);
        for (i11 = 13; i11 < 253; ++i11) {
            i3 = i3;
            Test.instanceCount = Test.instanceCount;
            for (i14 = 1; i14 < 7; ++i14) {
                Test.instanceCount -= 1;
                for (f2 = 1; 2 > f2; ++f2) {
                    i12 += (-8 + (f2 * f2));
                    Test.instanceCount *= 0;
                    i15 = i12;
                    i12 += i11;
                    Test.instanceCount = Test.instanceCount;
                    Test.dFld += Test.dFld;
                }
                i12 += s1;
                i15 += (((i14 * i3) + Test.instanceCount) - Test.instanceCount);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i3 + s1 + i11 + i12 + i14 + i15 + Float.floatToIntBits(f2) + i16 +
            FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth(int i1, byte by, int i2) {

        int i18=-2, i19=94, i20=12, i21=-3, iArr3[]=new int[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(iArr3, -164);
        FuzzerUtils.init(sArr, (short)-3037);

        vMeth(fFld, 25982);
        for (int i17 : iArr3) {
            Test.bFld = false;
            fFld -= i1;
            i17 <<= (int)Test.instanceCount;
            switch (((i2 >>> 1) % 1) + 126) {
            case 126:
                sArr[(i17 >>> 1) % N][(i17 >>> 1) % N] *= (short)Test.instanceCount;
                for (i18 = 1; i18 < 4; i18++) {
                    for (i20 = 2; i20 > 1; i20--) {
                        i21 >>= (int)Test.instanceCount;
                        iArr3[i20 + 1] = i20;
                        Test.instanceCount >>= i19;
                    }
                    fFld += i17;
                    i17 >>= i18;
                }
                Test.iArrFld[(i1 >>> 1) % N][(237 >>> 1) % N] += (int)2L;
                break;
            default:
                i1 = (int)-3780362871L;
            }
        }
        long meth_res = i1 + by + i2 + i18 + i19 + i20 + i21 + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-63925, i22=102, i23=-2, i24=0, i25=72, i26=-25888, i27=55, iArr[]=new int[N];
        byte by2=-117;
        long l=10L, l1=2L, lArr1[]=new long[N];
        float fArr1[][]=new float[N][N];
        short sArr1[][]=new short[N][N];
        double dArr1[]=new double[N];
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(iArr, -33);
        FuzzerUtils.init(lArr1, -4481548551861861561L);
        FuzzerUtils.init(fArr1, 9.40F);
        FuzzerUtils.init(sArr1, (short)-9778);
        FuzzerUtils.init(dArr1, 55.36892);
        FuzzerUtils.init(bArr, true);

        i ^= ((iArr[(i >>> 1) % N]--) << iMeth(i, by2, i));
        lArr1[(i >>> 1) % N] -= 4628890797774996037L;
        i = (int)Test.instanceCount;
        l = 1;
        while (++l < 333) {
            Test.iArrFld[(int)(l)][(int)(l + 1)] += (int)fFld;
            for (i22 = 4; i22 < 76; ++i22) {
                Test.instanceCount = Test.instanceCount;
                i >>= i;
            }
            i -= i22;
            for (i24 = 2; i24 < 76; ++i24) {
                fFld += (((i24 * fFld) + fFld) - i22);
                lArr1 = lArr1;
                i23 *= (int)fFld;
                fFld += i22;
            }
            l1 = 1;
            while (++l1 < 76) {
                Test.instanceCount /= 11356L;
                switch (((-113 >>> 1) % 8) + 1) {
                case 1:
                    switch ((int)((l1 % 4) + 17)) {
                    case 17:
                        for (i26 = 1; i26 < 1; ++i26) {
                            fFld *= i26;
                            i = by2;
                            switch ((int)((l1 % 1) + 123)) {
                            case 123:
                                if (Test.bFld) break;
                                switch ((int)((l1 % 5) + 113)) {
                                case 113:
                                case 114:
                                    Test.instanceCount += (long)fFld;
                                    fArr1 = fArr1;
                                    Test.iArrFld[(int)(l - 1)][(int)(l)] -= i27;
                                    sArr1[(int)(l + 1)][i26] = (short)l;
                                    break;
                                case 115:
                                    Test.instanceCount += (((i26 * Test.instanceCount) + i25) - i27);
                                    dArr1 = dArr1;
                                    break;
                                case 116:
                                    i27 *= i24;
                                case 117:
                                    i27 = i22;
                                    break;
                                default:
                                    if (Test.bFld) break;
                                }
                            }
                        }
                        break;
                    case 18:
                        lArr1[(int)(l1 + 1)] /= (i23 | 1);
                    case 19:
                        Test.instanceCount = 5;
                    case 20:
                        Test.instanceCount -= -2650323284858461382L;
                        break;
                    default:
                        Test.instanceCount += 1664866331L;
                    }
                    break;
                case 2:
                    Test.instanceCount = (long)94.297F;
                    break;
                case 3:
                    i23 = i24;
                case 4:
                    i23 += (int)(-104L + (l1 * l1));
                    break;
                case 5:
                    Test.instanceCount <<= i26;
                    break;
                case 6:
                    Test.dFld += -76;
                case 7:
                    bArr[(int)(l)] = bArr[(int)(l1 + 1)];
                    break;
                case 8:
                    Test.instanceCount = (long)Test.dFld;
                    break;
                default:
                    by2 -= (byte)i26;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
