package tests.javafuzzer2734;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:33:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-130L;
    public static short sFld=5864;
    public static float fFld=46.644F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -14);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static float fMeth(int i1, int i2, int i3) {


        i3 |= (++i2);
        i3 = i1;
        Test.iArrFld = (Test.iArrFld = (Test.iArrFld = Test.iArrFld));
        long meth_res = i1 + i2 + i3;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i9) {

        double d1=0.88270;
        int i10=36965, i11=-143, i12=212, i13=28011, i14=67, i15=-1, i16=-5, i17=4;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 1630409640L);

        d1 -= -191;
        Test.iArrFld[(39 >>> 1) % N] = (int)Test.instanceCount;
        for (i10 = 13; i10 < 371; ++i10) {
            for (i12 = i10; i12 < 5; i12++) {
                i11 += (int)d1;
                i9 += (i12 ^ i9);
                if (i11 != 0) {
                    vMeth1_check_sum += i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
                        i17 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr);
                    return;
                }
            }
            i13 += (i10 | i12);
            i9 = (int)d1;
            if (b) {
                for (i14 = 1; i14 < 5; ++i14) {
                    for (i16 = i10; i16 < 2; ++i16) {
                        i9 += (i16 ^ i11);
                        i15 &= (int)Test.instanceCount;
                    }
                }
                i13 += i9;
            } else if (b) {
                if (b) continue;
            }
        }
        vMeth1_check_sum += i9 + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (b ? 1 :
            0) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {

        int i7=-19588, i8=3, i18=0, i19=30040, i20=23722;
        byte by1=96;

        for (i7 = 8; i7 < 281; ++i7) {
            vMeth1(i8);
            i8 += (int)(6477958891431323249L + (i7 * i7));
            i18 *= i18;
            for (i19 = 1; i19 < 6; ++i19) {
                Test.instanceCount >>= i18;
                by1 -= (byte)i8;
                Test.instanceCount = Test.sFld;
                switch ((i19 % 4) + 81) {
                case 81:
                    Test.instanceCount *= Test.instanceCount;
                    if (true) break;
                    i18 += (i19 ^ i7);
                    i8 = i8;
                    break;
                case 82:
                    Test.instanceCount = i20;
                    break;
                case 83:
                    Test.iArrFld[i7 + 1] = (int)Test.instanceCount;
                case 84:
                    i20 += (i19 - Test.instanceCount);
                }
            }
        }
        long meth_res = i7 + i8 + i18 + i19 + i20 + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i5, float f) {

        int i6=1, i21=-8, i22=-139;
        double d2=-55.102394;
        float f1=71.344F;

        i6 = 1;
        do {
            Test.instanceCount -= iMeth();
            i5 += (i6 | i6);
            for (i21 = i6; i21 < 11; i21++) {
                Test.instanceCount -= Test.sFld;
            }
            if (i22 != 0) {
                vMeth_check_sum += i5 + Float.floatToIntBits(f) + i6 + i21 + i22 + Double.doubleToLongBits(d2) +
                    Float.floatToIntBits(f1);
                return;
            }
            i5 += (int)d2;
            switch ((i6 % 2) + 104) {
            case 104:
                Test.iArrFld[i6] = i6;
                break;
            case 105:
                f *= -2;
                if (i21 != 0) {
                    vMeth_check_sum += i5 + Float.floatToIntBits(f) + i6 + i21 + i22 + Double.doubleToLongBits(d2) +
                        Float.floatToIntBits(f1);
                    return;
                }
                break;
            }
            i22 = 91;
            i5 += 187;
            i22 += i6;
            f1 = f;
        } while (++i6 < 149);
        vMeth_check_sum += i5 + Float.floatToIntBits(f) + i6 + i21 + i22 + Double.doubleToLongBits(d2) +
            Float.floatToIntBits(f1);
    }

    public void mainTest(String[] strArr1) {

        int i=-13, i4=241, i23=-36203, i24=-16975, i25=-232, i26=21034, i27=-3, i28=122, i29=-3, i30=-20688, i31=45,
            i32=47045;
        byte by=-38;
        double d=-2.3161, d3=-48.15776, dArr[]=new double[N];
        boolean b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(dArr, -1.122454);
        FuzzerUtils.init(fArr, 34.261F);

        Test.iArrFld[(i >>> 1) % N] += (int)(i * fMeth(--i, i4 - by, Math.max(-133, i)));
        i &= i4;
        d %= (i | 1);
        vMeth(i4, Test.fFld);
        for (i23 = 2; 144 > i23; ++i23) {
            dArr[i23] = i24;
        }
        for (i25 = 12; i25 < 264; ++i25) {
            Test.fFld += i26;
            d -= Test.fFld;
            for (i27 = 5; i27 < 100; ++i27) {
                Test.instanceCount = Test.instanceCount;
                Test.instanceCount += -6357279808623429789L;
                b1 = b1;
                i24 += (i27 | i28);
                Test.fFld = 1.489F;
                i4 = (int)-1.98948;
                i24 >>= (int)Test.instanceCount;
            }
            i28 = i24;
            i &= i27;
            i29 = -48957;
            i26 |= i;
        }
        Test.iArrFld[(-4 >>> 1) % N] += i26;
        Test.instanceCount = Test.instanceCount;
        dArr[(i23 >>> 1) % N] *= i29;
        for (d3 = 8; d3 < 148; ++d3) {
            i31 = 1;
            do {
                i24 += i30;
                i32 = 1;
                while (++i32 < 1) {
                    fArr[i31] *= i30;
                }
                i += (((i31 * i23) + i32) - i23);
            } while (++i31 < 179);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
