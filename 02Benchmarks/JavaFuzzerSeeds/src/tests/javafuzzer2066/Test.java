package tests.javafuzzer2066;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:36:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-36L;
    public static float fFld=-19.812F;
    public static volatile int iFld=13685;
    public boolean bFld=false;

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;

    public static long lMeth1(int i2, int i3, int i4) {

        int i5=-13, i6=0, i7=10129, i8=-12621, iArr1[]=new int[N];
        long l=1L;
        double d1=-34.56622;
        byte by=-84;

        FuzzerUtils.init(iArr1, -28810);

        i2 *= (int)Test.instanceCount;
        i2 = (int)Test.instanceCount;
        for (i5 = 4; 220 > i5; ++i5) {
            i3 = (int)l;
            for (i7 = i5; i7 < 7; ++i7) {
                d1 *= by;
                iArr1[i5 - 1] -= (int)Test.instanceCount;
                i4 *= i2;
                iArr1[i7 + 1] *= i3;
                i6 += i4;
                l += i7;
                Test.fFld = i5;
                i6 += (int)l;
                i8 |= i7;
                i2 += (i7 ^ i4);
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + l + i7 + i8 + Double.doubleToLongBits(d1) + by +
            FuzzerUtils.checkSum(iArr1);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i1) {

        int i9=231, i10=126, i11=1, i12=6, i13=9, i14=154, i15=11, iArr2[]=new int[N];
        byte by1=21;
        boolean b=false;

        FuzzerUtils.init(iArr2, 180);

        i1 ^= (int)lMeth1(i1, i1, i1);
        for (i9 = 9; i9 < 294; ++i9) {
            for (i11 = 1; i11 < 6; i11 += 2) {
                Test.fFld = i11;
                for (i13 = i9; i13 < 3; i13++) {
                    Test.instanceCount -= i1;
                    iArr2[i11 - 1] <<= i14;
                    Test.instanceCount += (i13 + i12);
                }
                i12 *= (int)Test.instanceCount;
                i14 >>= by1;
                i10 += (-2 + (i11 * i11));
                i15 = 1;
                do {
                    if (b) continue;
                    i10 += i15;
                } while ((i15 += 2) < 3);
            }
            iArr2[(i10 >>> 1) % N] += i15;
        }
        long meth_res = i1 + i9 + i10 + i11 + i12 + i13 + i14 + by1 + i15 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        double d=-47.56682;
        int i17=-6, i18=7, i19=-4, i20=26, i21=-4, i22=62557, iArr3[]=new int[N], iArr4[][]=new int[N][N];
        short s=-26896;
        float f=96.113F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr3, 11);
        FuzzerUtils.init(lArr, 12L);
        FuzzerUtils.init(iArr4, -29);

        d = lMeth(Test.iFld);
        for (int i16 : iArr3) {
            try {
                i16 = (Test.iFld / 598307478);
                i17 = (i17 / Test.iFld);
                i17 = (-386139346 / i16);
            } catch (ArithmeticException a_e) {}
            Test.iFld += Test.iFld;
        }
        i18 = 1;
        while (++i18 < 154) {
            iArr3[i18 - 1] -= (int)Test.instanceCount;
            i17 = s;
        }
        iArr3 = iArr3;
        Test.fFld -= i18;
        i19 >>>= (int)Test.instanceCount;
        for (f = 18; f < 389; ++f) {
            for (i21 = (int)(f); i21 < 5; ++i21) {
                iArr4 = FuzzerUtils.int2array(N, (int)99);
                Test.iFld += i17;
                i19 = 13;
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i17 + i18 + s + i19 + Float.floatToIntBits(f) + i20 + i21 + i22 +
            FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr4);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=30, i23=19748, i24=36085, i25=-3, i26=222, i27=237, iArr[]=new int[N];
        double d2=-2.13725;
        short s1=-14199;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, -9737);
        FuzzerUtils.init(lArr1, -26953L);

        iArr[(i >>> 1) % N] <<= (int)(-2.835F + iMeth());
        iArr[(Test.iFld >>> 1) % N] = i;
        iArr[(Test.iFld >>> 1) % N] <<= (int)Test.instanceCount;
        i23 = 1;
        do {
            for (i24 = 93; i24 > 1; --i24) {
                i26 = 1;
                while (++i26 < 2) {
                    boolean b1=false;
                    i25 += (-6 + (i26 * i26));
                    Test.iFld = i24;
                    i25 -= (int)Test.instanceCount;
                    i25 -= (int)Test.instanceCount;
                    switch (((i >>> 1) % 9) + 112) {
                    case 112:
                        if (b1) {
                            Test.fFld = -14966;
                            i27 = 12;
                            lArr1[i26] *= (long)d2;
                            switch (((i26 % 2) * 5) + 60) {
                            case 67:
                                if (bFld) break;
                                break;
                            case 64:
                                i += i23;
                                Test.iFld = (int)Test.instanceCount;
                                Test.fFld += (-186 + (i26 * i26));
                                break;
                            }
                        } else if (bFld) {
                            i25 %= (int)-19448L;
                            Test.fFld *= i27;
                        }
                    case 113:
                        i = i;
                        i = (int)44L;
                        if (b1) break;
                        break;
                    case 114:
                    case 115:
                        Test.iFld += (i26 ^ s1);
                        s1 = (short)41;
                        Test.instanceCount -= -16;
                        break;
                    case 116:
                        d2 += Test.fFld;
                        i27 -= i24;
                        break;
                    case 117:
                        i25 += 3172;
                    case 118:
                    case 119:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 120:
                        bFld = b1;
                        break;
                    }
                }
            }
        } while (++i23 < 271);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
