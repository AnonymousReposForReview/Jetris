package tests.javafuzzer3237;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 04:23:31 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-54L;
    public static double dFld=-12.82470;
    public static short sFld=-12402;
    public static int iFld=72;

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b1, int i10, short s) {

        int i12=-24869, i13=171, i14=52653, iArr1[]=new int[N];
        float f1=66.857F;

        FuzzerUtils.init(iArr1, 244);

        i10 >>= (int)Test.instanceCount;
        Test.instanceCount = i10;
        for (int i11 : iArr1) {
            for (i12 = 1; i12 < 4; ++i12) {
                i13 += (int)f1;
                if (b1) continue;
                switch (((i12 % 2) * 5) + 91) {
                case 98:
                    Test.instanceCount |= i10;
                    i14 = 1;
                    do {
                        iArr1[i14] = i14;
                        f1 -= i12;
                        i11 <<= -34535;
                        b1 = false;
                        if (i14 != 0) {
                            vMeth1_check_sum += (b1 ? 1 : 0) + i10 + s + i12 + i13 + Float.floatToIntBits(f1) + i14 +
                                FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                        Test.instanceCount <<= -15674;
                    } while (++i14 < 2);
                case 94:
                default:
                    i11 -= i10;
                }
            }
        }
        vMeth1_check_sum += (b1 ? 1 : 0) + i10 + s + i12 + i13 + Float.floatToIntBits(f1) + i14 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(byte by1, byte by2) {

        boolean b2=false;
        int i15=-5675, i16=-51, i17=104, i18=-21517, i19=80, i20=41712, i21=-250, iArr2[][]=new int[N][N];
        float f2=-98.654F;
        long l=4L;

        FuzzerUtils.init(iArr2, -64285);

        vMeth1(b2, i15, (short)(26060));
        i15 *= i15;
        for (i16 = 19; i16 < 366; i16++) {
            switch (((i15 >>> 1) % 7) + 30) {
            case 30:
                i15 += (int)f2;
                for (i18 = 1; i18 < 5; ++i18) {
                    i19 = (int)Test.instanceCount;
                    iArr2[i18][i16 + 1] *= (int)1.595F;
                }
                Test.instanceCount = Test.instanceCount;
            case 31:
                for (i20 = 5; i20 > 1; i20 -= 3) {
                    i17 += i20;
                    i19 = (int)Test.instanceCount;
                    l = 1;
                    while (++l < 5) {
                        i15 += (int)l;
                        i15 = i18;
                    }
                }
                break;
            case 32:
                i17 += i18;
                break;
            case 33:
                i17 -= (int)l;
                break;
            case 34:
                Test.instanceCount += (((i16 * i15) + i15) - Test.instanceCount);
                break;
            case 35:
                if (true) continue;
            case 36:
                b2 = b2;
                break;
            }
        }
        vMeth_check_sum += by1 + by2 + (b2 ? 1 : 0) + i15 + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 + i20 +
            i21 + l + FuzzerUtils.checkSum(iArr2);
    }

    public static double dMeth(int i6) {

        int i7=-243, i8=0, i9=94, i22=232, i23=12, iArr3[]=new int[N];
        byte by3=-74;
        float f3=2.756F;
        short s1=-15627;

        FuzzerUtils.init(iArr3, 99);

        for (i7 = 18; i7 < 307; ++i7) {
            i9 = 1;
            while (++i9 < 6) {
                vMeth(by3, by3);
                for (i22 = 1; i22 < 1; ++i22) {
                    switch ((((i6 >>> 1) % 2) * 5) + 86) {
                    case 91:
                        i6 -= (int)-1506449611L;
                        break;
                    case 94:
                    }
                    i23 += (30 + (i22 * i22));
                    iArr3 = iArr3;
                    i8 >>= (int)8756255465983954321L;
                    Test.dFld += f3;
                    i8 <<= s1;
                    f3 += (((i22 * i22) + f3) - i6);
                    i6 = -4;
                    Test.instanceCount = i23;
                }
                s1 -= (short)i6;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + by3 + i22 + i23 + Float.floatToIntBits(f3) + s1 +
            FuzzerUtils.checkSum(iArr3);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=219, i1=-233, i2=-190, i3=6, i4=3, i5=-196, iArr[]=new int[N];
        float f=0.24F;
        boolean b=false;
        byte by=119, byArr[]=new byte[N];
        long l1=6080281605005565972L, lArr[]=new long[N];

        FuzzerUtils.init(iArr, -8);
        FuzzerUtils.init(byArr, (byte)123);
        FuzzerUtils.init(lArr, -1148194650L);

        for (i = 5; i < 213; ++i) {
            for (i2 = 3; i2 < 121; ++i2) {
                i3 = (int)(i1 * (Test.instanceCount = i2));
                iArr[i - 1] = (iArr[i - 1]++);
                i1 += (((i2 * i) + f) - i1);
                switch (((i % 7) * 5) + 85) {
                case 116:
                    byArr = (byArr = (byArr = (byArr = byArr)));
                    if (b && b) break;
                    for (i4 = 1; 2 > i4; i4++) {
                        i1 += ((by++) - i1);
                        switch (((i3 >>> 1) % 2) + 51) {
                        case 51:
                            Test.instanceCount += (i4 | i3);
                        case 52:
                            Test.instanceCount += (long)dMeth(34754);
                            Test.dFld = i3;
                            iArr = iArr;
                            break;
                        default:
                            lArr[i4 - 1] = i3;
                            if (b) continue;
                            i1 += (i4 * i4);
                            i3 += (int)Test.instanceCount;
                        }
                        lArr[i4] *= (long)f;
                        l1 += 200;
                        i5 *= i2;
                        iArr[i2] = (int)Test.instanceCount;
                    }
                    if (b) continue;
                    break;
                case 95:
                    iArr[i + 1] = (int)Test.instanceCount;
                    iArr[i - 1] += i2;
                    Test.sFld -= (short)-13083L;
                    Test.iFld += Test.iFld;
                    break;
                case 102:
                    Test.dFld -= Test.iFld;
                    Test.iFld = (int)13L;
                    break;
                case 103:
                    iArr[i2] -= (int)f;
                    break;
                case 118:
                    Test.iFld = i2;
                    break;
                case 87:
                    i3 = i3;
                case 112:
                    i3 += i5;
                    break;
                default:
                    iArr = FuzzerUtils.int1array(N, (int)23672);
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
