package tests.javafuzzer1377;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:09:12 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1037921245008479099L;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -5990);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long sMeth_check_sum = 0;

    public static short sMeth(short s, int i4, long l) {

        int i5=-99, i6=-8864, i7=3, i8=-562, i9=-31070, i10=-215, i11=-252, i12=1, i13=-19441, i14=-231, i15=161;
        boolean b=true;
        float f=-2.988F;
        double d2=125.78872;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)49);

        for (i5 = 5; i5 < 151; i5++) {
            for (i7 = 1; 11 > i7; ++i7) {
                l -= i4;
            }
        }
        i9 = 1;
        while (++i9 < 148) {
            i6 -= -16509;
            for (i10 = 1; i10 < 11; ++i10) {
                for (i12 = 1; i12 < 2; ++i12) {
                    if (b) continue;
                }
                i6 += (((i10 * i12) + i10) - f);
                l = i12;
            }
            switch (((i5 >>> 1) % 8) + 80) {
            case 80:
                for (i14 = 1; i14 < 11; ++i14) {
                    b = false;
                    i6 = i10;
                    i4 += (i14 * i6);
                }
                break;
            case 81:
                i8 *= (int)f;
                break;
            case 82:
                i4 *= i9;
            case 83:
                if (b) continue;
                break;
            case 84:
                d2 = Test.instanceCount;
                break;
            case 85:
                i4 *= i6;
                break;
            case 86:
                if (false) break;
                break;
            case 87:
                byArr[i9] &= (byte)i10;
                break;
            default:
                f += i9;
            }
        }
        long meth_res = s + i4 + l + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
            Float.floatToIntBits(f) + i14 + i15 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(byArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth1() {

        double d=0.130968;
        int i3=-5, i16=26862, i17=-7, i18=26231, iArr[]=new int[N];
        short s1=-31725;
        float f1=-1.389F;
        boolean b1=true;

        FuzzerUtils.init(iArr, 29248);

        for (d = 18; d < 354; ++d) {
            double d1=87.75461;
            d1 = (sMeth(s1, i3, 8274419945942442952L) + i3);
            for (i16 = 1; i16 < 5; i16++) {
                i17 = i17;
                f1 -= i16;
                b1 = b1;
                d1 -= i16;
                Test.instanceCount += (long)-116.867F;
                i3 += i16;
                i3 += (i16 - Test.instanceCount);
            }
            iArr[(int)(d)] -= i16;
            i3 >>= i16;
            i3 = i3;
            i18 = (int)Test.instanceCount;
            i18 = i3;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + s1 + i16 + i17 + Float.floatToIntBits(f1) + (b1 ? 1 : 0)
            + i18 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=-52776, i19=-215, i20=-54986, i21=37699, i22=61;
        long l1=196L;

        i2 <<= (i2++);
        vMeth1();
        i2 <<= i19;
        i20 = 1;
        while (++i20 < 127) {
            i2 += i20;
            i21 = 1;
            do {
                long l2=-5808951011700288813L;
                Test.instanceCount >>= l1;
                l2 = -14270;
                i22 = 1;
                while (++i22 < 1) {
                    Test.iArrFld[i21 + 1] = i22;
                    i2 -= i20;
                    Test.iArrFld[i22 + 1] ^= (int)l2;
                    i19 = (int)l1;
                    i2 += (-50435 + (i22 * i22));
                    i19 -= i22;
                }
            } while (++i21 < 12);
        }
        vMeth_check_sum += i2 + i19 + i20 + i21 + l1 + i22;
    }

    public void mainTest(String[] strArr1) {

        int i=-11402, i1=-22094, i23=4538, i24=-19, i25=-234, i26=-192, i27=2, i28=-7;
        float f2=-2.134F;
        short s2=-17626;
        byte by=-119;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 1.8904);
        FuzzerUtils.init(lArr, -4972780061733159623L);

        for (i = 11; i < 228; ++i) {
            vMeth();
            i1 *= i;
            for (f2 = 3; f2 < 116; f2 += 3) {
                i23 *= (int)Test.instanceCount;
                s2 += (short)Test.instanceCount;
                i24 = 1;
                while (++i24 < 4) {
                    float f3=2.524F;
                    i1 += (((i24 * i24) + i) - i23);
                    by <<= (byte)176;
                    dArr[i24 - 1] += f2;
                    i23 <<= 56044;
                    i23 += i24;
                    f3 = i24;
                    f3 = i;
                    Test.iArrFld[i24 - 1] += (int)f2;
                }
                for (i25 = (int)(f2); i25 < 4; i25 += 3) {
                    i23 += (50 + (i25 * i25));
                    Test.instanceCount *= i27;
                }
                bFld = bFld;
                i27 += (int)(f2 + i24);
                i27 >>>= -3291;
            }
            switch (((i25 >>> 1) % 2) + 3) {
            case 3:
                if (false) continue;
                i27 *= i27;
            case 4:
                Test.instanceCount = -111;
                break;
            default:
                bFld = bFld;
                lArr[i] = i1;
            }
            i28 = 116;
            do {
                Test.instanceCount -= i1;
                Test.instanceCount >>= s2;
            } while ((i28 -= 2) > 0);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
