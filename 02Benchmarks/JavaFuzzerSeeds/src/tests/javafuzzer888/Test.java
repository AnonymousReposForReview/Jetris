package tests.javafuzzer888;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:18:42 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3974551503L;
    public float fFld=2.596F;
    public static boolean bFld=false;
    public volatile short sFld=-17003;
    public static double dFld=-2.13333;
    public static long lArrFld[]=new long[N];
    public volatile int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -5392967974361976879L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        long l2=-32716L;
        int i5=14, i6=-11, i7=-41866;
        short s=-31828;

        l2 = i5;
        for (i6 = 13; i6 < 342; i6++) {
            l1 %= (s | 1);
            i7 <<= 16;
        }
        vMeth1_check_sum += l1 + l2 + i5 + i6 + i7 + s;
    }

    public static void vMeth(long l, int i3) {

        int i4=35701, i8=19173, i9=-32503, iArr[]=new int[N];
        float f=-1.762F;
        double d=2.46473;
        short s1=-13831;

        FuzzerUtils.init(iArr, -2);

        i4 = 1;
        while (++i4 < 147) {
            Test.bFld = ((iArr[i4] = (i4 + i3)) > (f - i3));
            vMeth1(Test.instanceCount);
            Test.bFld = Test.bFld;
            i8 = 11;
            do {
                i9 = 1;
                while (++i9 < 1) {
                    iArr[i8] -= (int)d;
                    l += (i9 * i9);
                    i3 -= (int)f;
                    l = i9;
                    i3 += i9;
                    switch (((i3 >>> 1) % 2) + 44) {
                    case 44:
                        if (true) {
                            i3 = i8;
                        } else {
                            i3 -= i8;
                            vMeth_check_sum += l + i3 + i4 + Float.floatToIntBits(f) + i8 + i9 +
                                Double.doubleToLongBits(d) + s1 + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        break;
                    case 45:
                        i3 += s1;
                        break;
                    default:
                        i3 -= (int)f;
                    }
                }
            } while (--i8 > 0);
        }
        vMeth_check_sum += l + i3 + i4 + Float.floatToIntBits(f) + i8 + i9 + Double.doubleToLongBits(d) + s1 +
            FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i) {

        int i1=-34596, i2=37310, i10=-1, i11=3, iArr1[]=new int[N];
        byte by=-81, byArr[][]=new byte[N][N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, -12);
        FuzzerUtils.init(byArr, (byte)79);
        FuzzerUtils.init(dArr, 0.74081);

        for (i1 = 6; i1 < 191; i1++) {
            vMeth(Test.instanceCount, i);
            for (i10 = 1; i10 < 9; i10++) {
                switch ((((i >>> 1) % 9) * 5) + 77) {
                case 107:
                    i >>= i10;
                case 103:
                    i += i10;
                    i >>= i;
                    break;
                case 87:
                    if (Test.bFld) {
                        iArr1[i10 - 1] -= i2;
                        byArr[i1 + 1][i1 - 1] &= (byte)i2;
                        i11 = -177;
                    } else if (Test.bFld) {
                        Test.bFld = false;
                    } else {
                        i2 += (int)Test.instanceCount;
                    }
                    i11 += (int)(0.533F + (i10 * i10));
                    i11 *= (int)1.53865;
                    break;
                case 86:
                    Test.lArrFld[i10] &= i1;
                    break;
                case 81:
                    iArr1[i10] -= 35231;
                case 82:
                    dArr = dArr;
                    break;
                case 92:
                    by = (byte)137;
                    break;
                case 106:
                    Test.instanceCount = Test.instanceCount;
                case 88:
                    try {
                        iArr1[i10 + 1] = (i10 % 68);
                        i = (233 % i2);
                        i11 = (-50 / i1);
                    } catch (ArithmeticException a_e) {}
                    break;
                }
            }
        }
        long meth_res = i + i1 + i2 + i10 + i11 + by + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i12=62884, i13=102, i14=60458, i15=-25, i16=-36209, i17=-16768, i18=7, i19=-55;
        byte by1=33, byArr1[]=new byte[N];
        long l3=-2L;

        FuzzerUtils.init(byArr1, (byte)12);

        fFld *= lMeth(104);
        Test.bFld = Test.bFld;
        for (i12 = 130; i12 > 2; i12--) {
            for (i14 = i12; i14 < 196; ++i14) {
                switch (((i12 % 2) * 5) + 44) {
                case 47:
                    i15 += (i14 * i14);
                case 45:
                    fFld += -19485L;
                    for (i16 = 1; i16 < 1; i16++) {
                        try {
                            i13 = (i13 % i14);
                            i13 = (-242 / i17);
                            iArrFld[i16] = (i17 % i17);
                        } catch (ArithmeticException a_e) {}
                        i15 += (((i16 * i15) + Test.instanceCount) - i17);
                        Test.instanceCount = i15;
                        by1 += by1;
                        i13 += sFld;
                        switch (i14 + 16) {
                        case 16:
                            iArrFld[i16] >>>= i15;
                            i13 <<= i15;
                        case 17:
                            i15 += i16;
                            if (Test.bFld) {
                                Test.bFld = Test.bFld;
                            } else if (false) {
                                iArrFld[i12 - 1] = i13;
                                i15 = (int)Test.instanceCount;
                            } else {
                                sFld += (short)i16;
                            }
                            break;
                        case 18:
                            i15 &= i17;
                            fFld -= 10;
                            Test.instanceCount *= i15;
                            iArrFld[i14 + 1] -= i14;
                            break;
                        case 19:
                            if (Test.bFld) {
                                i15 += (i16 * i15);
                            }
                            iArrFld[i16] = i17;
                            fFld += i16;
                            break;
                        case 20:
                            i13 -= i15;
                            break;
                        case 21:
                            fArrFld[i16] -= i17;
                            break;
                        case 22:
                            Test.instanceCount = i16;
                        case 23:
                            Test.instanceCount = Test.instanceCount;
                        case 24:
                            i18 >>= i14;
                            break;
                        case 25:
                            Test.instanceCount = i15;
                            break;
                        case 26:
                            Test.instanceCount = i13;
                            break;
                        case 27:
                            i15 += i16;
                        case 28:
                            i17 <<= i18;
                            break;
                        case 29:
                            Test.instanceCount -= Test.instanceCount;
                        case 30:
                            Test.bFld = Test.bFld;
                        case 31:
                            i13 = i15;
                        case 32:
                            iArrFld[i14] >>= (int)Test.instanceCount;
                            break;
                        case 33:
                            iArrFld[i12] = i18;
                        case 34:
                            iArrFld[i12 - 1] ^= i18;
                            break;
                        case 35:
                            i13 = i13;
                        case 36:
                            Test.lArrFld[i14 - 1] >>= Test.instanceCount;
                            break;
                        case 37:
                            i15 += sFld;
                            break;
                        case 38:
                            iArrFld[i16 + 1] -= i15;
                            break;
                        case 39:
                            fFld += (i16 - i16);
                            break;
                        case 40:
                            fFld = Test.instanceCount;
                            break;
                        case 41:
                            i15 = i17;
                            break;
                        case 42:
                            Test.lArrFld[i14 - 1] = (long)fFld;
                            break;
                        case 43:
                        case 44:
                            i15 += (i16 | i18);
                            break;
                        case 45:
                            i18 >>= i15;
                            break;
                        case 46:
                            i13 = i13;
                            break;
                        case 47:
                        case 48:
                            byArr1[i12 + 1] >>>= (byte)57382;
                        case 49:
                            i13 -= i14;
                            break;
                        case 50:
                            i13 = (int)Test.instanceCount;
                        case 51:
                            i13 >>>= (int)Test.instanceCount;
                            break;
                        case 52:
                            iArrFld = iArrFld;
                            break;
                        case 53:
                            Test.instanceCount += i16;
                        case 54:
                            i15 -= i16;
                            break;
                        case 55:
                            i13 = by1;
                            break;
                        case 56:
                            iArrFld[i16 - 1] <<= i14;
                        case 57:
                            iArrFld[i16 - 1] ^= i12;
                        case 58:
                            Test.instanceCount += Test.instanceCount;
                            break;
                        case 59:
                            fArrFld = fArrFld;
                        case 60:
                            by1 += (byte)(i16 * i16);
                            break;
                        case 61:
                            l3 += (i16 * i16);
                            break;
                        case 62:
                            fArrFld[i12 - 1] += i12;
                            break;
                        case 63:
                            i15 = i17;
                            break;
                        case 64:
                            l3 += i16;
                        case 65:
                            fFld += i18;
                            break;
                        case 66:
                            i17 += by1;
                            break;
                        case 67:
                            i17 = (int)fFld;
                            break;
                        case 68:
                            i18 -= (int)fFld;
                            break;
                        case 69:
                            iArrFld[i16 - 1] = (int)-3130404823454333722L;
                        case 70:
                            i17 = i14;
                            break;
                        case 71:
                            Test.dFld = i13;
                            break;
                        case 72:
                            l3 += (i16 | i18);
                            break;
                        case 73:
                            iArrFld[i12 - 1] = i16;
                        case 74:
                            if (Test.bFld) continue;
                            break;
                        case 75:
                            iArrFld[i12 + 1] -= (int)l3;
                            break;
                        case 76:
                            Test.lArrFld[i12] = 44864;
                        case 77:
                            i18 = (int)l3;
                        case 78:
                            i15 *= -6;
                        case 79:
                            i15 = 2;
                        case 80:
                            fFld += (i16 + i13);
                            break;
                        case 81:
                            i17 -= i15;
                            break;
                        case 82:
                            i13 *= i19;
                            break;
                        case 83:
                            i17 = (int)fFld;
                            break;
                        case 84:
                            Test.instanceCount += (i16 | Test.instanceCount);
                            break;
                        case 85:
                            sFld = (short)Test.dFld;
                            break;
                        }
                    }
                    break;
                default:
                    i15 -= i16;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
