package tests.javafuzzer1591;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:24:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1L;
    public static boolean bFld=true;
    public static int iFld=-52760;
    public static float fFld=1.670F;
    public static volatile double dFld=-9.22476;
    public static volatile int iFld1=-8;
    public static double dArrFld[][]=new double[N][N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 61.124767);
        FuzzerUtils.init(Test.byArrFld, (byte)-28);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-10, i7=-176, i8=-9374, i9=-25124, i10=30, i11=238, i12=6, iArr1[]=new int[N], iArr2[]=new int[N];
        short s=31992;
        double d=-93.44402;
        float f2=46.377F, fArr[]=new float[N];
        byte by1=-72;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -186L);
        FuzzerUtils.init(iArr1, 91);
        FuzzerUtils.init(iArr2, 72);
        FuzzerUtils.init(fArr, 2.285F);

        Test.iFld -= (int)Test.instanceCount;
        Test.iFld = Test.iFld;
        for (i6 = 8; 255 > i6; i6++) {
            s += (short)(i6 | Test.instanceCount);
            for (i8 = i6; i8 < 7; i8++) {
                lArr[i6 - 1] -= i6;
                for (i10 = 1; i10 < 1; i10++) {
                    d += 21;
                    Test.iFld += (i10 + Test.instanceCount);
                    Test.instanceCount += i10;
                    switch ((i10 * 5) + 92) {
                    case 330:
                    case 437:
                        i7 -= Test.iFld;
                        iArr1[i6] += i7;
                        Test.iFld >>= i11;
                        Test.iFld *= i9;
                        break;
                    case 290:
                        iArr1[i10] >>= i8;
                    case 106:
                        if (i7 != 0) {
                            vMeth1_check_sum += i6 + i7 + s + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) +
                                Float.floatToIntBits(f2) + i12 + by1 + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                        break;
                    case 288:
                        Test.iFld += (i10 - i10);
                        break;
                    case 147:
                        d += Test.iFld;
                        break;
                    case 267:
                        i7 += (i10 + i10);
                    case 338:
                        if (i7 != 0) {
                            vMeth1_check_sum += i6 + i7 + s + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) +
                                Float.floatToIntBits(f2) + i12 + by1 + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2) +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                            return;
                        }
                        break;
                    case 263:
                        iArr1[i8] = i11;
                        break;
                    case 305:
                        f2 += (((i10 * f2) + Test.iFld) - i9);
                    case 361:
                        Test.instanceCount += i10;
                        break;
                    case 428:
                        i11 &= -19083;
                        break;
                    case 323:
                    case 419:
                        i7 = 73;
                        break;
                    case 134:
                        try {
                            iArr1[i10 - 1] = (iArr1[i8] % 11376);
                            i7 = (28382 / i7);
                            i11 = (i8 / i8);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 390:
                        Test.instanceCount -= i9;
                        break;
                    case 173:
                        i9 |= i11;
                    case 340:
                        try {
                            Test.iFld = (-165 / i11);
                            iArr2[i10] = (1175654175 / i8);
                            iArr2[i8] = (-103 / i8);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 151:
                        Test.instanceCount *= (long)d;
                        break;
                    case 210:
                        Test.bFld = Test.bFld;
                        break;
                    case 269:
                        fArr[i8 + 1] = f2;
                        break;
                    case 396:
                        i7 -= i6;
                        break;
                    case 161:
                        try {
                            i9 = (iArr2[i10] / i9);
                            iArr2[i8] = (i7 / -175);
                            i12 = (1869174509 % Test.iFld);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 185:
                        i7 = 2;
                        break;
                    case 227:
                        iArr1[i8] -= (int)-191L;
                        break;
                    case 241:
                        Test.instanceCount -= (long)d;
                        break;
                    case 413:
                        Test.dArrFld[i6][i8] = Test.instanceCount;
                        break;
                    case 195:
                        s >>>= (short)i9;
                        break;
                    case 170:
                        i7 *= (int)Test.instanceCount;
                        break;
                    case 393:
                        iArr1[i10] = -50;
                    case 409:
                        i7 = (int)-2.100648;
                        break;
                    case 343:
                        Test.instanceCount += (long)f2;
                        break;
                    case 332:
                        i11 += s;
                        break;
                    case 294:
                        i12 *= (int)d;
                        break;
                    case 184:
                        Test.instanceCount <<= by1;
                        break;
                    case 114:
                        i11 = i12;
                        break;
                    case 183:
                        Test.iFld += (i10 * f2);
                        break;
                    case 198:
                        i7 = Test.iFld;
                        break;
                    case 399:
                        Test.bFld = Test.bFld;
                    case 333:
                        Test.byArrFld = FuzzerUtils.byte1array(N, (byte)-45);
                        break;
                    case 181:
                        Test.dArrFld[i6 + 1][i6 - 1] *= 0;
                        break;
                    case 105:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 322:
                    case 424:
                        Test.fFld = 57274;
                        break;
                    case 213:
                        Test.dArrFld[i10 - 1][i8] = by1;
                        break;
                    case 261:
                        f2 = Test.instanceCount;
                        break;
                    case 120:
                        i9 <<= i8;
                        break;
                    case 179:
                        i11 += i10;
                    case 405:
                        i12 ^= (int)Test.instanceCount;
                        break;
                    case 408:
                        i9 = (int)Test.instanceCount;
                        break;
                    case 407:
                        i12 = -44;
                    case 180:
                        i7 ^= i6;
                    case 400:
                        Test.fFld += (float)0.56762;
                    case 259:
                    case 226:
                        i9 *= (int)Test.instanceCount;
                    case 163:
                        f2 = Test.instanceCount;
                        break;
                    case 336:
                        i11 = i6;
                        break;
                    case 285:
                        i7 >>>= i9;
                        break;
                    case 112:
                        Test.iFld += (((i10 * Test.instanceCount) + Test.instanceCount) - Test.iFld);
                    case 342:
                        i12 -= -33;
                        break;
                    case 101:
                        if (Test.bFld) break;
                    case 364:
                        Test.instanceCount |= i10;
                        break;
                    case 402:
                        i12 >>>= (int)Test.instanceCount;
                        break;
                    case 154:
                        i12 += (((i10 * Test.instanceCount) + Test.iFld) - i11);
                        break;
                    case 245:
                        i9 += (((i10 * by1) + Test.instanceCount) - i11);
                        break;
                    case 331:
                        i9 += i12;
                    case 398:
                        i11 += (i10 * i10);
                        break;
                    case 189:
                        by1 += (byte)9;
                        break;
                    case 232:
                        Test.instanceCount >>= i9;
                    case 395:
                        i12 += i10;
                    }
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + s + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) +
            i12 + by1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static boolean bMeth(long l1) {

        float f=-1.766F, f1=19.293F;
        int i5=10, i13=-153, i14=21010, iArr[]=new int[N];
        byte by=93;
        long l2=153L, lArr1[]=new long[N];
        double d1=2.95168;

        FuzzerUtils.init(iArr, -8);
        FuzzerUtils.init(lArr1, 30393L);

        Test.iFld *= (-(iArr[(58894 >>> 1) % N]--));
        f = (iArr[(Test.iFld >>> 1) % N] + (-f));
        for (f1 = 11; 216 > f1; f1++) {
            switch ((int)(((f1 % 4) * 5) + 78)) {
            case 91:
                if (true) {
                    by += (byte)(f1 * f1);
                    vMeth1();
                } else if (Test.bFld) {
                    for (l2 = (long)(f1); l2 < 8; l2++) {
                        l1 = -2;
                        Test.iFld += Test.iFld;
                        l1 += (((l2 * i13) + l2) - l2);
                        for (d1 = 1; d1 < 1; d1++) {
                            iArr = iArr;
                            i14 += i14;
                            Test.iFld -= i13;
                        }
                    }
                } else if (false) {
                    if (i13 != 0) {
                        return ((int)(l1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + by + l2 + i13 +
                            Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(iArr) +
                            FuzzerUtils.checkSum(lArr1))) % 2 > 0;
                    }
                } else {
                    i5 = -11;
                }
            case 87:
                i5 += (-74 + (f1 * f1));
            case 86:
                Test.bFld = Test.bFld;
                break;
            case 98:
                Test.iFld += (int)(f1 * f1);
                break;
            default:
                i5 = (int)d1;
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i5 + by + l2 + i13 +
            Double.doubleToLongBits(d1) + i14 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(int i2, long l, int i3) {

        int i4=-4640, i15=4, i16=-51569, i17=61, i18=-10, iArr3[]=new int[N];
        double d2=0.65975;
        short s1=31958;

        FuzzerUtils.init(iArr3, -21);

        i4 = 1;
        while (++i4 < 281) {
            Test.bFld = bMeth(Test.instanceCount);
            l -= l;
            for (i15 = 1; 6 > i15; ++i15) {
                i3 += (int)l;
                d2 += i15;
                iArr3[i4 + 1] += (int)Test.fFld;
                for (i17 = 1; 2 > i17; ++i17) {
                    Test.iFld = -26611;
                    d2 = Test.instanceCount;
                    d2 *= l;
                    i3 = (int)Test.instanceCount;
                    s1 = (short)Test.fFld;
                    if (Test.bFld) continue;
                    i2 += (i17 * Test.instanceCount);
                }
            }
        }
        vMeth_check_sum += i2 + l + i3 + i4 + i15 + i16 + Double.doubleToLongBits(d2) + i17 + i18 + s1 +
            FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=45, i1=137, i19=225, i20=13, i21=-61863, i22=59, iArr4[]=new int[N];
        long l4=8L, lArr2[]=new long[N];

        FuzzerUtils.init(iArr4, -52);
        FuzzerUtils.init(lArr2, -6L);

        for (i = 12; i < 296; i++) {
            vMeth(1, Test.instanceCount, -2);
            i19 = 1;
            do {
                iArr4 = iArr4;
                Test.iFld = -214;
            } while (++i19 < 89);
            l4 = 1;
            do {
                for (i20 = i; 1 > i20; i20++) {
                    Test.dArrFld[i20][(int)(l4 + 1)] *= i1;
                    Test.iFld += Test.iFld;
                    i21 += (i20 * i20);
                    Test.instanceCount ^= i19;
                    Test.instanceCount = (long)Test.dFld;
                    i1 *= (int)Test.instanceCount;
                    Test.fFld -= l4;
                    Test.iFld += (int)l4;
                }
                i21 = i21;
            } while (++l4 < 89);
            i1 *= i1;
            i1 *= (int)-126.811F;
        }
        Test.dArrFld[(Test.iFld >>> 1) % N][(i1 >>> 1) % N] *= Test.iFld1;
        Test.instanceCount = (long)Test.fFld;
        iArr4[(i >>> 1) % N] += (int)8L;
        Test.dFld = Test.iFld;
        iArr4[(i19 >>> 1) % N] *= (int)Test.instanceCount;
        Test.byArrFld[(Test.iFld1 >>> 1) % N] -= (byte)102;
        Test.instanceCount = (long)Test.fFld;
        for (long l5 : lArr2) {
            Test.instanceCount |= l4;
            i22 = 63;
            while ((i22 -= 2) > 0) {
                i1 = (int)l4;
                iArr4[i22 - 1] = i20;
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
