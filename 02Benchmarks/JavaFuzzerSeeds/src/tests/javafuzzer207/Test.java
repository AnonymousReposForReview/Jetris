package tests.javafuzzer207;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:09:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public int iFld=218;
    public float fFld=-59.295F;
    public static int iFld1=24190;
    public short sFld=-32408;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -68.514F);
        FuzzerUtils.init(Test.iArrFld, 96);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6, int i7) {

        float f1=-1.157F;
        long l2=1136958465L;
        int i8=-43418, i9=-208, i10=0, i11=131, i12=217, i13=-5;
        short s=-13408;

        i5 += (int)f1;
        for (l2 = 5; l2 < 160; ++l2) {
            for (i9 = 10; i9 > 1; --i9) {
                Test.instanceCount = i5;
                i5 = s;
                i5 += (i9 - f1);
            }
            Test.iFld1 <<= i7;
            Test.iFld1 += (int)(l2 * l2);
            i11 = 1;
            while (++i11 < 10) {
                for (i12 = 1; i12 < 1; i12++) {
                    i5 += i6;
                    i8 += (i12 * i12);
                    Test.instanceCount |= Test.instanceCount;
                    Test.fArrFld[i11] = 20023L;
                    i8 = i7;
                }
            }
        }
        vMeth2_check_sum += i5 + i6 + i7 + Float.floatToIntBits(f1) + l2 + i8 + i9 + i10 + s + i11 + i12 + i13;
    }

    public static void vMeth1(long l1) {

        int i3=-51343, i4=13, iArr[]=new int[N];
        float f=-115.102F, f2=85.536F;
        byte by=31;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(lArr, 415770677L);

        i3 = 165;
        do {
            i4 = i4;
            i4 >>= iArr[i3 - 1];
            f = 1;
            while (++f < 10) {
                lArr[(int)(f)] >>= i3;
                i4 = (--i4);
                vMeth2(Test.iFld1, i3, Test.iFld1);
            }
            Test.iFld1 += (i3 + Test.iFld1);
            Test.iFld1 = i4;
            i4 += i3;
            if (b1) {
                i4 *= i4;
                i4 *= i4;
                f2 = Test.iFld1;
                iArr[i3] += -62;
            } else if (b1) {
                by *= (byte)i4;
                vMeth1_check_sum += l1 + i3 + i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + by + (b1 ? 1 :
                    0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                return;
            }
        } while (--i3 > 0);
        vMeth1_check_sum += l1 + i3 + i4 + Float.floatToIntBits(f) + Float.floatToIntBits(f2) + by + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i1, long l, int i2) {

        byte by1=-116, byArr[]=new byte[N];
        int i14=8, i15=12, i16=-42386, i17=150;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, -94.980F);
        FuzzerUtils.init(byArr, (byte)-68);

        iFld = (int)(-13 - ((fFld + i2) - 7375409341848565419L));
        fFld -= (-fArr[(iFld >>> 1) % N][(-10563 >>> 1) % N]);
        vMeth1(Test.instanceCount);
        by1 = (byte)Test.instanceCount;
        for (byte by2 : byArr) {
            for (i14 = 1; 4 > i14; i14 += 2) {
                iFld /= (int)(i1 | 1);
                Test.instanceCount = i2;
                for (i16 = 4; 1 < i16; i16--) {
                    i17 = iFld;
                    fFld -= Test.iFld1;
                    i2 = i15;
                    Test.instanceCount += (i16 - i1);
                }
                iFld *= iFld;
                Test.iArrFld[i14 - 1] = i14;
            }
        }
        vMeth_check_sum += i1 + l + i2 + by1 + i14 + i15 + i16 + i17 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        int i=-15, i18=-22125, i19=60, i20=-54732, i21=0, i22=-1, i23=-11, i24=3, i25=199;
        byte by3=-99;
        double d=2.65719;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 50380501L);

        b = ((iFld++) < (Test.instanceCount + i));
        vMeth(iFld, Test.instanceCount, 57194);
        switch (((Test.iFld1 >>> 1) % 10) + 64) {
        case 64:
            i >>= Test.iFld1;
            sFld -= (short)Test.instanceCount;
            for (i18 = 11; 366 > i18; i18++) {
                Test.instanceCount *= i;
                Test.iFld1 += (3 + (i18 * i18));
                for (i20 = 2; i20 < 71; ++i20) {
                    i21 <<= (int)2260676274426332791L;
                    lArr1[i18 + 1] += (long)-118.764F;
                    fFld = -97;
                    iFld = -10;
                    i = i21;
                    Test.iFld1 += i19;
                    iFld >>= i21;
                    iFld = 0;
                }
                i22 = 1;
                while (++i22 < 71) {
                    Test.instanceCount = i20;
                }
                fFld += 16478;
                Test.instanceCount += (((i18 * iFld) + sFld) - by3);
            }
            break;
        case 65:
            fFld = i21;
            i21 += (int)d;
            i = (int)Test.instanceCount;
            break;
        case 66:
            Test.instanceCount = 156L;
            by3 >>= (byte)-77L;
            break;
        case 67:
            for (i23 = 10; i23 < 187; i23++) {
                Test.iArrFld[i23 - 1] = by3;
                Test.instanceCount = Test.instanceCount;
                Test.iArrFld[i23 + 1] <<= i22;
            }
            break;
        case 68:
            d += i22;
            break;
        case 69:
            Test.iFld1 = iFld;
        case 70:
            i25 = 158;
            break;
        case 71:
            i = i21;
        case 72:
            sFld *= (short)i21;
            break;
        case 73:
            Test.iFld1 = i22;
            break;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
