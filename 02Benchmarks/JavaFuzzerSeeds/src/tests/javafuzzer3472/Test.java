package tests.javafuzzer3472;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 09:05:04 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=608226466080802992L;
    public static double dFld=-1.37894;
    public static float fFld=0.659F;
    public static int iFld=5;
    public double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -198);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i3) {

        int i4=53080, i5=-34623, i6=63, i7=102, i8=-2505, iArr[]=new int[N];
        boolean b=true;
        short s=-22943;
        long l2=-172L, l3=-43964L;

        FuzzerUtils.init(iArr, 121);

        for (i4 = 14; i4 < 338; ++i4) {
            if (i5 != 0) {
                vMeth2_check_sum += l1 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + s + l2 + l3 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            for (i6 = 5; i6 > 1; i6 -= 3) {
                switch (((i4 % 9) * 5) + 117) {
                case 141:
                    i5 -= (int)Test.dFld;
                    l1 >>= l1;
                    break;
                case 136:
                    Test.fFld = i3;
                    i8 = 1;
                    while (++i8 < 5) {
                        if (b) {
                            i3 += i7;
                            i5 = (int)Test.fFld;
                        }
                        i3 = -10;
                        iArr[i8 + 1] -= (int)l1;
                        iArr = FuzzerUtils.int1array(N, (int)216);
                    }
                    break;
                case 132:
                    Test.fFld = i5;
                    break;
                case 139:
                    s = (short)l1;
                case 155:
                    i5 *= (int)l2;
                    break;
                case 126:
                case 148:
                    l3 &= -41411;
                case 133:
                case 124:
                    Test.dFld *= i4;
                    break;
                }
            }
        }
        vMeth2_check_sum += l1 + i3 + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + s + l2 + l3 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(long l, int i) {

        int i1=-22093, i2=-47928, i9=-43, i10=50776, i11=-162, i12=57609, i13=-14, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.918F);
        FuzzerUtils.init(iArr1, 8);

        for (i1 = 12; i1 < 210; i1++) {
            i2 += (int)(i2 - fArr[i1]);
            i = (int)(Test.instanceCount--);
            vMeth2(l, i2);
            for (i9 = i1; i9 < 8; i9 += 3) {
                iArr1 = FuzzerUtils.int1array(N, (int)-131);
                for (i11 = 1; i11 < 1; i11++) {
                    i = 234;
                    Test.instanceCount *= (long)-1.12304;
                    i10 = i2;
                    i2 -= (int)Test.fFld;
                    Test.fFld += (((i11 * i11) + i2) - i);
                    i13 = 13;
                    i2 <<= 48611;
                    i13 -= (int)59.323F;
                }
            }
        }
        vMeth1_check_sum += l + i + i1 + i2 + i9 + i10 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        byte by=-81;
        int i14=7313;

        by += (byte)(--Test.dFld);
        vMeth1(Test.instanceCount, i14);
        i14 -= i14;
        i14 = i14;
        vMeth_check_sum += by + i14;
    }

    public void mainTest(String[] strArr1) {

        int i15=-24685, i17=-8, i18=17738, i19=-1, i20=-326, i21=-9, i22=-121;
        boolean b1=false;
        float f=-106.9F;

        vMeth();
        Test.dFld = Test.iFld;
        i15 = 1;
        while (++i15 < 251) {
            dArrFld[i15] = Test.iFld;
            Test.iFld = -2;
            if (b1) continue;
        }
        for (int i16 : Test.iArrFld) {
            i16 >>>= i15;
            for (i17 = 1; i17 < 63; i17++) {
                for (i19 = 1; i19 < 2; i19++) {
                    try {
                        i18 = (i16 % -221);
                        i18 = (i18 % 9742);
                        i16 = (i17 % i15);
                    } catch (ArithmeticException a_e) {}
                    i20 -= i15;
                    Test.iFld += (int)(-4011053473L + (i19 * i19));
                    i16 |= (int)Test.instanceCount;
                    i16 &= i15;
                }
                for (f = 1; f < 2; f++) {
                    i16 *= (int)Test.instanceCount;
                    i22 *= (int)Test.dFld;
                    Test.iFld -= Test.iFld;
                    i16 += (int)f;
                    Test.iArrFld[(int)(f + 1)] = (int)49L;
                    i21 -= (int)f;
                    Test.iFld += (int)(f * f);
                    i22 ^= i17;
                    Test.iFld = i17;
                }
                i20 -= i21;
                Test.iArrFld[i17 - 1] -= i22;
                i22 = i19;
            }
            sArrFld[(i21 >>> 1) % N] = (short)i18;
            i16 *= (int)Test.dFld;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
