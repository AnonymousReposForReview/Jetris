package tests.javafuzzer709;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 08:14:13 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2402165310L;
    public static volatile float fFld=-113.798F;
    public static boolean bFld=false;
    public static short sFld=-2368;
    public int iFld=2;
    public static int iFld1=39936;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -131);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i1, long l1, int i2) {

        float f=26.808F;
        int i3=121, i4=-130, i5=2019, i6=-188, i7=198, iArr[]=new int[N];
        boolean b=false;
        byte by=-77;

        FuzzerUtils.init(iArr, -8);

        for (f = 17; f < 346; ++f) {
            i3 += (int)Test.instanceCount;
            for (i4 = 1; 5 > i4; i4++) {
                i5 += (i4 + l1);
                for (i6 = 2; i6 > 1; --i6) {
                    if (b) {
                        l1 -= 49133;
                        if (b) {
                            i3 += i5;
                            Test.fFld += l1;
                        } else if (b) {
                            i5 >>= -39560;
                        } else if (b) {
                        }
                    } else {
                        by += (byte)i6;
                        if (b) break;
                    }
                    iArr[i6 - 1] >>>= (int)l1;
                }
            }
            l1 += (long)f;
        }
        vMeth2_check_sum += i1 + l1 + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1() {

        int i=4, i8=-55236, i9=24, i10=254, i11=-814, i12=191, i13=-16096, i14=62123;
        boolean b1=true;
        byte by1=-17;
        double d1=-1.2713;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 6943170098074039923L);

        i = i;
        vMeth2(i, Test.instanceCount, 56);
        i = i;
        for (i8 = 5; i8 < 202; ++i8) {
            Test.bFld = b1;
            for (i10 = i8; i10 < 8; ++i10) {
                switch (((-9 >>> 1) % 10) + 24) {
                case 24:
                    Test.instanceCount <<= by1;
                    i11 = i10;
                    for (i12 = 1; i10 < i12; i12 -= 2) {
                        i13 += (((i12 * i10) + i8) - i14);
                        i14 += (int)(75.559F + (i12 * i12));
                        if (b1) continue;
                        Test.iArrFld[i12 + 1] += (int)Test.fFld;
                        Test.fFld += (i12 * i12);
                    }
                    break;
                case 25:
                    lArr[i10 + 1] = i8;
                case 26:
                    i9 ^= i13;
                    break;
                case 27:
                    if (i8 != 0) {
                        vMeth1_check_sum += i + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + by1 + i12 + i13 + i14 +
                            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    break;
                case 28:
                    Test.sFld |= (short)7L;
                    break;
                case 29:
                    i14 -= -14;
                    break;
                case 30:
                    b1 = Test.bFld;
                    break;
                case 31:
                case 32:
                    i += (i10 * i10);
                    break;
                case 33:
                    Test.instanceCount -= (long)d1;
                    break;
                }
            }
        }
        vMeth1_check_sum += i + i8 + i9 + (b1 ? 1 : 0) + i10 + i11 + by1 + i12 + i13 + i14 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l, double d) {


        vMeth1();
        vMeth_check_sum += l + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        double d2=-87.104399;
        int i15=59215, i16=65079, i17=-4, i18=47650, i19=-21482, i20=8, i21=44085, i22=-49856, i23=44118;

        vMeth(2353526255L, d2);
        iFld = iFld;
        if (Test.bFld) {
            iFld = (int)Test.instanceCount;
            for (i15 = 16; i15 < 263; ++i15) {
                for (i17 = 1; i17 < 102; ++i17) {
                    Test.iArrFld[i15 + 1] = (int)d2;
                    i16 += i18;
                    i18 >>= i16;
                    i19 = i16;
                    for (i20 = i17; i20 < 2; ++i20) {
                        i21 += i20;
                    }
                    i22 = 1;
                    while (++i22 < 2) {
                        switch ((((-51177 >>> 1) % 9) * 5) + 21) {
                        case 61:
                            i19 = i17;
                            switch ((i15 % 3) + 103) {
                            case 103:
                                d2 *= i16;
                            case 104:
                                iFld = (int)Test.instanceCount;
                                Test.fFld += i17;
                                i23 += (22544 + (i22 * i22));
                                i19 = (int)31.594F;
                                break;
                            case 105:
                                i21 += (i22 * Test.iFld1);
                                fArrFld[i15 + 1] *= Test.instanceCount;
                                i16 >>= -94;
                                Test.sFld += (short)i18;
                                break;
                            }
                            break;
                        case 60:
                            Test.iFld1 += (i22 - i17);
                            break;
                        case 22:
                            iFld += -14780;
                            Test.iFld1 >>= i19;
                            break;
                        case 41:
                            try {
                                i23 = (-36 % i19);
                                Test.iArrFld[i22 + 1] = (Test.iFld1 % 38017);
                                i16 = (-87 / i19);
                            } catch (ArithmeticException a_e) {}
                            i23 |= i19;
                            break;
                        case 30:
                            Test.instanceCount *= i15;
                            break;
                        case 29:
                            Test.iArrFld[i15 + 1] = i21;
                            break;
                        case 31:
                            Test.instanceCount = i19;
                        case 57:
                            Test.instanceCount += i21;
                            break;
                        case 47:
                        default:
                            i21 >>>= iFld;
                        }
                    }
                }
            }
        } else if (Test.bFld) {
            i16 *= i20;
        } else {
            Test.instanceCount -= i15;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
