package tests.javafuzzer2576;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:50:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1796450915L;
    public static int iFld=-5;
    public static boolean bFld=false;
    public byte byArrFld[]=new byte[N];
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i7=-21293, i8=98, i9=95, i10=-110, i11=-6, i12=180;
        float f1=-2.958F;

        Test.iFld *= -7;
        for (i7 = 17; i7 < 352; i7++) {
            Test.iFld += i7;
            i8 >>>= Test.iFld;
            for (i9 = 1; i9 < 5; i9++) {
                if (Test.bFld) {
                    Test.iFld = i9;
                    i10 >>= i9;
                    if (true) break;
                } else {
                    for (i11 = 1; i11 < 2; i11++) {
                        i8 = i12;
                        Test.instanceCount *= (long)f1;
                    }
                    i12 += (int)f1;
                    i12 *= i12;
                }
                i10 >>>= i9;
            }
        }
        vMeth2_check_sum += i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1);
    }

    public static void vMeth1(int i5, int i6) {

        boolean b=true;
        float f2=92.402F;
        int i13=27987, i14=61863, i15=-42, i16=-11, i17=5, iArr1[]=new int[N];
        byte by=28;

        FuzzerUtils.init(iArr1, 19);

        b = b;
        vMeth2();
        i5 = -17631;
        iArr1[(i6 >>> 1) % N] -= i6;
        f2 -= 51445L;
        for (i13 = 8; i13 < 234; ++i13) {
            i15 = 7;
            while (--i15 > 0) {
                iArr1[i15 + 1] -= i13;
                if (b) continue;
                Test.instanceCount >>= Test.iFld;
                for (i16 = 1; i16 < 1; ++i16) {
                    b = false;
                    i17 -= (int)-14.24353;
                    by -= (byte)Test.instanceCount;
                }
            }
            by = (byte)Test.iFld;
        }
        vMeth1_check_sum += i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + i17 + by +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(float f, int i, int i1) {

        int i2=83, i3=-8254, i4=-131, i19=-1, i20=6, iArr[]=new int[N];
        double d=-2.8983;
        byte by1=46, byArr[]=new byte[N];
        short s=-19889;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 5);
        FuzzerUtils.init(lArr, 520326310924378027L);
        FuzzerUtils.init(byArr, (byte)107);

        for (i2 = 9; 203 > i2; i2++) {
            int i18=8;
            Test.instanceCount += i2;
            iArr[i2 + 1] = (((-(i3--)) + i) - (Integer.reverseBytes(i) + (i - i4)));
            vMeth1(i2, -243);
            d *= f;
            lArr[i2 - 1] <<= i;
            switch ((((i2 >>> 1) % 2) * 5) + 14) {
            case 20:
                by1 -= (byte)Test.iFld;
                d += i18;
                for (i19 = 1; i19 < 8; ++i19) {
                    Test.instanceCount = i3;
                }
                break;
            case 23:
                switch (((i2 % 7) * 5) + 21) {
                case 53:
                    s += (short)i2;
                    byArr[i2 + 1] -= (byte)204;
                    if (false) break;
                case 36:
                    iArr[i2] = i;
                    break;
                case 32:
                case 30:
                    Test.iFld = s;
                case 54:
                    lArr[i2 - 1] = i3;
                    break;
                case 29:
                    i18 += (((i2 * s) + i4) - i2);
                case 25:
                    iArr[i2 - 1] = 216;
                    break;
                default:
                    Test.instanceCount >>= 27046;
                }
                break;
            default:
                i = i18;
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + by1 + i19 +
            i20 + s + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        float f3=84.317F, f4=2.91F;
        double d1=-1.127146, dArr[]=new double[N];
        int i21=-17413, i22=-236, i23=-32704, i24=9, iArr2[]=new int[N];
        short s1=-1162;
        byte by2=70;

        FuzzerUtils.init(iArr2, -13);
        FuzzerUtils.init(dArr, -1.40547);

        vMeth(f3, Test.iFld, Test.iFld);
        Test.iFld <<= Test.iFld;
        Test.iFld <<= -5;
        iArr2[(Test.iFld >>> 1) % N] = (int)Test.instanceCount;
        d1 += Test.instanceCount;
        i21 = 1;
        do {
            int i25=-79;
            s1 = (short)Test.iFld;
            Test.instanceCount -= i21;
            switch ((i21 % 8) + 20) {
            case 20:
                iArr2[i21] = (int)-1L;
                break;
            case 21:
                Test.instanceCount &= -50;
                for (i22 = 6; i22 < 97; ++i22) {
                    Test.instanceCount <<= Test.instanceCount;
                    Test.instanceCount = i22;
                    Test.iFld *= 7524;
                    i23 -= (int)Test.instanceCount;
                    i24 = 1;
                    do {
                        i23 <<= (int)Test.instanceCount;
                        Test.iFld <<= i21;
                        byArrFld[i24 - 1] ^= (byte)Test.iFld;
                        i23 >>= (int)Test.instanceCount;
                        Test.iFld -= Test.iFld;
                        switch (((i21 % 1) * 5) + 81) {
                        case 84:
                            lArrFld[i22 + 1] >>= Test.iFld;
                            Test.iFld = (int)Test.instanceCount;
                            i23 = i23;
                            iArr2[i22 - 1] -= s1;
                            break;
                        }
                        d1 += Test.instanceCount;
                        i23 += (int)-11L;
                        i23 &= i24;
                    } while (++i24 < 2);
                }
                break;
            case 22:
                i23 += (int)109.115738;
                break;
            case 23:
                i25 -= 52870;
                break;
            case 24:
                dArr[i21 + 1] += -14;
                break;
            case 25:
                by2 = (byte)-111;
                break;
            case 26:
                d1 += Test.iFld;
            case 27:
                s1 = (short)f4;
                break;
            }
        } while (++i21 < 260);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
