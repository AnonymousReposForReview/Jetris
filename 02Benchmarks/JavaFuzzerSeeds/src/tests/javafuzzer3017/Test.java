package tests.javafuzzer3017;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:46:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=849800816L;
    public static boolean bFld=false;
    public volatile double dFld=2.30973;
    public static volatile float fFld=14.998F;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13);
        FuzzerUtils.init(Test.byArrFld, (byte)111);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=-214, i6=208, i7=15, i8=-145, i9=-7, i10=-14, i11=1, i12=-42341;
        byte by1=-112;
        float f=-2.985F;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        for (i5 = 13; i5 < 379; i5++) {
            bArr[i5 - 1] = true;
        }
        i6 += i6;
        by1 *= (byte)i5;
        Test.instanceCount = Test.instanceCount;
        for (i7 = 5; i7 < 135; i7++) {
            double d1=-2.112899;
            d1 += i6;
            i8 -= (int)f;
            for (i9 = 1; 12 > i9; ++i9) {
                Test.instanceCount -= by1;
                i8 += (i9 * i9);
                f += (((i9 * i8) + by1) - i5);
                for (i11 = 1; i11 < 2; i11++) {
                    Test.iArrFld[i9 - 1] <<= 26995;
                    i6 -= i11;
                }
            }
        }
        vMeth1_check_sum += i5 + i6 + by1 + i7 + i8 + Float.floatToIntBits(f) + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(byte by, int i3) {

        double d=0.8839;
        int i4=-2, i13=-150, i14=0, i15=-51727;
        short s=20798;
        float f1=66.396F, fArr[]=new float[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 1040604616L);
        FuzzerUtils.init(fArr, 113.412F);

        for (d = 10; d < 316; d++) {
            vMeth1();
            lArr[(int)(d - 1)][(int)(d + 1)] >>= i3;
        }
        i13 = 1;
        while (++i13 < 380) {
            if (Test.bFld) continue;
            s = (short)Test.instanceCount;
            for (i14 = 4; i14 > 1; --i14) {
                by >>= (byte)i14;
                fArr[i14 - 1] = i4;
                i3 += (i14 ^ Test.instanceCount);
                Test.instanceCount &= i14;
                if (i4 != 0) {
                    vMeth_check_sum += by + i3 + Double.doubleToLongBits(d) + i4 + i13 + s + i14 + i15 +
                        Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                    return;
                }
                i3 -= 63;
                i3 *= (int)Test.instanceCount;
                i3 *= (int)f1;
            }
        }
        vMeth_check_sum += by + i3 + Double.doubleToLongBits(d) + i4 + i13 + s + i14 + i15 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth(long l, int i1) {

        int i2=25725, i16=134, i17=-26131, i18=-7;
        long l1=1584203706L;
        float f2=-102.563F;
        boolean bArr1[]=new boolean[N];

        FuzzerUtils.init(bArr1, false);

        i2 = 1;
        do {
            vMeth((byte)(86), -25027);
            if (Test.bFld) break;
            i1 = i1;
            i1 -= 1;
            for (l1 = i2; l1 < 11; l1++) {
                for (i17 = 1; i17 > 1; --i17) {
                    i16 = (int)l;
                    f2 -= 13;
                    i16 += i1;
                    bArr1[(int)(l1 + 1)] = Test.bFld;
                    Test.instanceCount += i17;
                    Test.bFld = Test.bFld;
                    if (Test.bFld) break;
                    i1 += (i17 - i18);
                }
            }
        } while (++i2 < 141);
        long meth_res = l + i1 + i2 + l1 + i16 + i17 + i18 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(bArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-5, i19=2, i20=-4, i21=-9, i22=-192, i24=193, i25=-123, i26=-36071, i27=4826;
        float f3=-2.646F, f4=0.86F, f5=-2.121F, f6=2.549F;
        byte by2=19;
        double d2=-49.74816, dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 0.10952);

        i = (int)((Test.iArrFld[(i >>> 1) % N]--) * (Test.instanceCount = iMeth(Test.instanceCount, i)));
        for (f3 = 20; f3 < 321; ++f3) {
            i20 = 1;
            do {
                i19 = by2;
                i19 += (i20 * i20);
            } while (++i20 < 84);
        }
        if (false) {
            for (i21 = 10; i21 < 366; ++i21) {
                i22 = -10;
                f4 -= (float)dFld;
                for (d2 = 71; d2 > 4; --d2) {
                    i24 += (int)((long)d2 | i);
                    for (f5 = 1; f5 < 2; ++f5) {
                        i19 = i24;
                        Test.iArrFld[i21 - 1] |= i19;
                        switch ((((-14 >>> 1) % 2) * 5) + 117) {
                        case 124:
                            dArr[(int)(d2 + 1)][(int)(d2 - 1)] -= Test.instanceCount;
                        case 122:
                            Test.fFld -= 11;
                            break;
                        }
                        Test.iArrFld[i21] -= by2;
                        i24 = i19;
                        Test.iArrFld[(int)(d2 - 1)] |= i22;
                        dFld -= i21;
                    }
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)12);
                    for (f6 = 1; f6 < 2; ++f6) {
                        Test.iArrFld[(int)(f6)] = i27;
                        i25 = i22;
                        Test.instanceCount += (long)(f6 - i19);
                        i19 += (int)(f6 - i21);
                        Test.bFld = Test.bFld;
                        Test.instanceCount += (long)f6;
                    }
                }
            }
            Test.instanceCount += Test.instanceCount;
        } else {
            Test.instanceCount = -10;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
