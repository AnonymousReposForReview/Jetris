package tests.javafuzzer1060;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 13:43:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2L;
    public static int iFld=156;
    public static short sFld=19842;
    public static volatile double dFld=-2.97347;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3, boolean b1) {

        int i4=251, i5=-168, i6=53522, i7=-1, iArr1[][]=new int[N][N];
        float f1=-1.708F;
        byte by1=-123;

        FuzzerUtils.init(iArr1, 7);

        i4 = 386;
        do {
            i3 = i2;
            Test.iFld += (((i4 * f1) + f1) - i4);
            i5 = 1;
            do {
                Test.instanceCount >>= i4;
                for (i6 = 1; i6 < 1; i6++) {
                    i2 += (int)Test.instanceCount;
                    if (i2 != 0) {
                        vMeth2_check_sum += i2 + i3 + (b1 ? 1 : 0) + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + by1
                            + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    f1 = -6;
                    Test.sFld *= (short)Test.instanceCount;
                    Test.iFld &= by1;
                }
                switch ((i4 % 2) + 1) {
                case 1:
                    f1 = (float)Test.dFld;
                case 2:
                default:
                    Test.sFld |= (short)-186;
                }
                iArr1[i4 + 1][i4] = i5;
            } while (++i5 < 4);
        } while (--i4 > 0);
        vMeth2_check_sum += i2 + i3 + (b1 ? 1 : 0) + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + by1 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(boolean b, byte by) {

        int i8=4, i9=6, i10=-4, i11=-11, i12=0, i13=5;
        float f2=-1.79F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 56.21709);

        vMeth2(Test.iFld, Test.iFld, b);
        dArr = dArr;
        Test.iFld = (int)Test.instanceCount;
        for (i8 = 5; i8 < 122; i8++) {
            Test.sFld ^= (short)Test.iFld;
            if (i9 != 0) {
                vMeth1_check_sum += (b ? 1 : 0) + by + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            }
            b = b;
            Test.instanceCount = Test.instanceCount;
            for (i10 = 1; i10 < 13; ++i10) {
                switch ((i8 % 2) + 31) {
                case 31:
                    for (i12 = 2; i12 > 1; --i12) {
                        if (b) break;
                        i11 += (int)(-5L + (i12 * i12));
                        i9 += (i12 * i12);
                        i13 += Test.iFld;
                    }
                    break;
                case 32:
                    i9 = Test.iFld;
                    break;
                default:
                    Test.instanceCount = (long)f2;
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + by + i8 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(int i, int i1, float f) {

        byte by2=-45;
        int i14=60645, i15=208, i16=11, i17=120, i18=0, i19=-54355;

        vMeth1(Test.bFld, by2);
        for (i14 = 18; 333 > i14; i14++) {
            Test.instanceCount += Test.sFld;
            i1 -= -7;
            i15 -= (int)Test.dFld;
            Test.iFld *= 30816;
            for (i16 = 1; i16 < 5; i16++) {
                f += (((i16 * Test.instanceCount) + i15) - f);
            }
            i1 += i14;
        }
        for (i18 = 7; i18 < 398; i18++) {
            Test.iArrFld[i18 + 1] = (int)Test.instanceCount;
        }
        Test.iArrFld[(i >>> 1) % N] = i14;
        i1 *= i14;
        vMeth_check_sum += i + i1 + Float.floatToIntBits(f) + by2 + i14 + i15 + i16 + i17 + i18 + i19;
    }

    public void mainTest(String[] strArr1) {

        float f3=2.1F, f4=19.1F;
        int i20=203, i21=5, i22=11, i23=1722, i24=45559, i25=-51, i26=-64090, iArr[][]=new int[N][N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(iArr, 54536);
        FuzzerUtils.init(dArr1, 1.68330);

        iArr[(237 >>> 1) % N][(Test.iFld >>> 1) % N] *= (int)(Test.instanceCount = Integer.reverseBytes(Test.iFld));
        vMeth(Test.iFld, Test.iFld, f3);
        Test.instanceCount <<= Test.iFld;
        Test.iFld >>= Test.iFld;
        Test.iFld = (int)Test.instanceCount;
        for (i20 = 7; i20 < 213; i20++) {
            if (Test.bFld) {
                switch ((i20 % 4) + 30) {
                case 30:
                    switch ((i20 % 1) + 99) {
                    case 99:
                        i21 <<= 6694;
                        for (i22 = 1; i22 < 122; i22++) {
                            i21 += i21;
                            Test.iFld = i22;
                            if (Test.bFld) break;
                        }
                        i23 -= i20;
                        i21 >>= Test.sFld;
                        break;
                    default:
                        lArrFld = lArrFld;
                        i23 = i21;
                        Test.dFld = i23;
                    }
                    for (f4 = 7; f4 < 122; ++f4) {
                        Test.iFld += (int)(((f4 * i24) + Test.iFld) - Test.iFld);
                        for (i25 = 1; i25 < 2; ++i25) {
                            short s=12039;
                            i21 *= (int)-5L;
                            f3 = Test.iFld;
                            i26 = 8;
                            switch ((((i21 >>> 1) % 2) * 5) + 107) {
                            case 111:
                                i26 *= i23;
                                f3 = Test.iFld;
                                break;
                            case 109:
                                dArr1[(int)(f4 - 1)] -= i22;
                                s -= (short)i26;
                                break;
                            }
                        }
                    }
                    break;
                case 31:
                    i21 = i23;
                    break;
                case 32:
                    i26 = -10;
                    break;
                case 33:
                    f3 *= -50.613F;
                }
            } else if (Test.bFld) {
                Test.instanceCount *= i26;
            } else {
                Test.instanceCount += i20;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
