package tests.javafuzzer1976;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 06:59:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=905745258L;
    public static float fFld=-91.860F;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static short sArrFld[]=new short[N];
    public static double dArrFld[][]=new double[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 67);
        FuzzerUtils.init(Test.fArrFld, -1.379F);
        FuzzerUtils.init(Test.sArrFld, (short)698);
        FuzzerUtils.init(Test.dArrFld, 0.14405);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth(int i, long l, int i1) {

        float f=2.793F;

        f = (((i1 + 13) + (l - -4.879F)) - Test.iArrFld[(i1 >>> 1) % N]);
        vMeth_check_sum += i + l + i1 + Float.floatToIntBits(f);
    }

    public static void vMeth1() {

        int i4=-2, i5=-204, i6=29565, i7=12, i8=-76, i9=-44;
        double d=72.31860;
        short s=-12449;

        for (i4 = 13; i4 < 282; i4++) {
            for (i6 = 1; i6 < 6; i6 += 2) {
                Test.instanceCount = i4;
                if (Test.bFld) {
                    Test.instanceCount += i6;
                    Test.iArrFld[i6] *= i6;
                    Test.iArrFld[i4 - 1] += -31003;
                    for (i8 = 1; 3 > i8; ++i8) {
                        switch (((-29 >>> 1) % 8) + 35) {
                        case 35:
                            i5 &= 9;
                            if (Test.bFld) break;
                            Test.instanceCount = (long)Test.fFld;
                            Test.iArrFld[i6 - 1] = i8;
                            break;
                        case 36:
                            Test.instanceCount >>>= Test.instanceCount;
                            if (true) continue;
                        case 37:
                            Test.sArrFld[i4 - 1] += (short)i9;
                            break;
                        case 38:
                            Test.fFld -= i7;
                        case 39:
                            Test.instanceCount += (209 + (i8 * i8));
                            break;
                        case 40:
                            Test.sArrFld[i6] <<= (short)-64;
                        case 41:
                            i5 -= (int)d;
                            break;
                        case 42:
                            s -= (short)i8;
                            break;
                        default:
                            i5 <<= i8;
                        }
                    }
                } else {
                    Test.bFld = true;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + s;
    }

    public static int iMeth() {

        int i10=60196, i11=-7044, i12=10;
        double d1=0.15433;
        float f1=-2.292F;

        Test.instanceCount += (long)Test.fArrFld[(-12 >>> 1) % N];
        vMeth1();
        for (i10 = 1; i10 < 140; ++i10) {
            i12 = 1;
            do {
                Test.dArrFld[i12 - 1][i10] = i12;
                Test.fArrFld[i12 + 1] += Test.instanceCount;
                if (Test.bFld) continue;
                i11 = 4;
                d1 -= Test.fFld;
                f1 = 1;
                do {
                    i11 += (int)(((f1 * Test.instanceCount) + i12) - i11);
                    i11 = -53153;
                    i11 -= i11;
                    i11 = 55;
                    i11 = i12;
                } while (++f1 < 3);
            } while ((i12 += 2) < 11);
        }
        long meth_res = i10 + i11 + i12 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i3) {

        byte by=-98;

        vMeth((int)(((i3 - i3) - (i3 - -1739466882L)) * (--i3)), (long)(Test.fFld * (by -= (byte)iMeth())), i3);
        long meth_res = i3 + by;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i2=-49925, i13=5, i14=64730, i15=-231, i16=-4, i17=35591, i18=-51962;
        double d2=45.83515, d3=0.79332, d4=-2.24117;
        short s1=-16927;
        byte by1=-71;

        vMeth((int)((--i2) - lMeth(i2)), -189L, 0);
        for (i13 = 11; i13 < 259; i13++) {
            for (d2 = 101; d2 > 2; --d2) {
                i16 = 2;
                do {
                    i2 -= (int)d2;
                    i15 *= -30729;
                    s1 += (short)i16;
                    i14 *= (int)-40.950F;
                    Test.iArrFld[(int)(d2 - 1)] -= i15;
                    i2 = (int)Test.instanceCount;
                    i14 *= i2;
                    i2 += (((i16 * s1) + i16) - i16);
                } while (--i16 > 0);
                d3 += Test.fFld;
                d3 *= Test.instanceCount;
                switch ((i13 % 8) + 84) {
                case 84:
                    Test.instanceCount *= (long)d3;
                    Test.instanceCount += (long)d2;
                    for (d4 = d2; d4 < 2; ++d4) {
                        i2 = (int)Test.instanceCount;
                        i17 += i14;
                        i14 -= 10;
                    }
                    break;
                case 85:
                    i15 += (int)(((d2 * i16) + Test.instanceCount) - Test.instanceCount);
                case 86:
                    i17 += (int)(-2240445700665168867L + (d2 * d2));
                    i18 = 1;
                    do {
                        i14 = i16;
                    } while (++i18 < 2);
                    Test.instanceCount = 82L;
                case 87:
                    Test.instanceCount >>>= i13;
                case 88:
                    i17 += (int)(d2 * d2);
                    by1 += (byte)(d2 + i17);
                    if (Test.bFld) continue;
                    break;
                case 89:
                    i2 = i2;
                    break;
                case 90:
                    i14 <<= 9852;
                    break;
                case 91:
                    Test.sArrFld[(int)(d2 + 1)] = (short)1.808F;
                    break;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
