package tests.javafuzzer1533;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:11:28 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-170L;
    public static boolean bFld=true;
    public static float fFld=16.830F;
    public static long lArrFld[]=new long[N];
    public static boolean bArrFld[][]=new boolean[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 163L);
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.iArrFld, 12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i3, int i4) {

        int i5=11, i6=179, i7=-13, i8=-13, iArr[]=new int[N];
        boolean b=true;
        double d=0.29502, d1=0.128019;
        float f=0.387F;

        FuzzerUtils.init(iArr, -18852);

        for (i5 = 8; i5 < 309; ++i5) {
            Test.instanceCount += (i5 * i5);
            Test.instanceCount += (i5 * i5);
            i7 = 5;
            while ((i7 -= 2) > 0) {
                if (b) break;
                switch ((((i7 >>> 1) % 1) * 5) + 58) {
                case 63:
                    switch ((i7 % 1) + 62) {
                    case 62:
                        iArr[i5 + 1] >>= (int)Test.instanceCount;
                        break;
                    }
                    if (b) {
                        i4 = (int)Test.instanceCount;
                        for (d = 1; d < 2; d++) {
                            d1 += f;
                            if (i3 != 0) {
                            }
                        }
                        i8 += i7;
                        i8 <<= i8;
                    } else if (b) {
                        d1 += i7;
                    } else {
                        i8 += (i7 + i7);
                    }
                    break;
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + Double.doubleToLongBits(d) + i8 +
            Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(int i2) {

        int i9=-27334, i10=-52479, i11=0, i12=16590, i13=25020;
        float f1=-2.472F;

        fMeth(12, i2);
        i2 >>>= 5966;
        i9 = 1;
        do {
            Test.instanceCount -= i2;
            if (false) continue;
        } while (++i9 < 236);
        for (i10 = 1; i10 < 124; ++i10) {
            if (Test.bFld) {
                Test.instanceCount += i10;
                i2 += (int)(-93.965F + (i10 * i10));
            } else if (Test.bFld) {
                for (i12 = i10; i12 < 13; ++i12) {
                    i2 += (int)2.93103;
                    i11 = (int)f1;
                    i13 += (i12 * i12);
                }
                i2 ^= i13;
            } else {
                if (false) break;
            }
        }
        vMeth1_check_sum += i2 + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f1);
    }

    public static void vMeth(long l, int i, int i1) {

        short s=22245;
        int i14=7, i15=158, i16=-16959, i17=19658, iArr1[]=new int[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.100998);
        FuzzerUtils.init(iArr1, -14);

        for (long l1 : Test.lArrFld) {
            dArr[(i1 >>> 1) % N] *= i1;
            vMeth1(60);
            s = (short)i;
            i += i;
            try {
                i = (-64622 % i1);
                i = (-578470133 % iArr1[(i1 >>> 1) % N]);
                iArr1[(i1 >>> 1) % N] = (i % iArr1[(i >>> 1) % N]);
            } catch (ArithmeticException a_e) {}
            for (i14 = 1; 4 > i14; i14++) {
                i15 -= (int)l;
                i >>= i14;
                Test.bArrFld[i14 - 1] = Test.bArrFld[i14];
            }
        }
        i15 += (int)Test.fFld;
        i1 = 188;
        for (i16 = 8; 140 > i16; ++i16) {
            if (Test.bFld) continue;
            iArr1[i16 + 1] = -234;
        }
        vMeth_check_sum += l + i + i1 + s + i14 + i15 + i16 + i17 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))
            + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i18=13, i19=217, i20=39242, i21=185, i22=8, i23=17115, i24=101, i25=-5;
        short s1=29946;
        byte by=-84;
        double d2=-120.2902;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -62.885F);

        if (Test.bFld) {
            vMeth(Test.instanceCount, i18, -9);
            i18 += (int)Test.instanceCount;
        } else if (Test.bFld) {
            for (i19 = 146; i19 > 5; i19--) {
                i20 += (i19 + i18);
                Test.instanceCount = 13;
                fArr[i19 - 1] -= Test.instanceCount;
                for (i21 = 1; i21 < 178; i21++) {
                    Test.iArrFld[i19] = (int)Test.instanceCount;
                    i18 += s1;
                    by -= (byte)i19;
                    for (i23 = 1; 2 > i23; i23++) {
                        Test.fFld = i18;
                        i18 += (((i23 * i20) + i20) - i23);
                        i24 *= (int)d2;
                        i20 *= (int)Test.instanceCount;
                        i22 <<= s1;
                        i24 += (i23 * i23);
                    }
                    Test.instanceCount %= (long)52.9076;
                    i22 <<= s1;
                    Test.fFld += (float)d2;
                }
                i25 = 1;
                do {
                    switch (((i23 >>> 1) % 3) + 105) {
                    case 105:
                        if (Test.bFld) {
                            i22 += i20;
                        } else {
                            Test.instanceCount += (i25 * i25);
                            Test.iArrFld[i19] = (int)1899577891948903496L;
                            Test.fFld += (57267 + (i25 * i25));
                            i20 += i25;
                        }
                        i22 *= (int)Test.fFld;
                        break;
                    case 106:
                        Test.fFld += i22;
                        break;
                    case 107:
                        Test.instanceCount <<= i21;
                    default:
                        fArr[i19 - 1] = 227L;
                    }
                } while (++i25 < 178);
            }
        } else {
            d2 *= s1;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
