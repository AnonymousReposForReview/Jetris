package tests.javafuzzer2575;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 16:50:17 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4284047902L;
    public static short sFld=-422;
    public static byte byFld=-85;
    public static double dFld=2.83549;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 88);
    }

    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i4=95, i5=-58415, i6=-204, i7=-4, i8=-29349;
        double d=0.55359, d1=2.117320;
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1450330956007538184L);

        Test.instanceCount = 245;
        i4 >>>= i4;
        i5 = 1;
        do {
            for (d = 1; d < 5; d++) {
                Test.instanceCount = 92;
                i4 += (int)d;
                if (b) break;
                b = b;
                for (i7 = (int)(d); 2 > i7; i7++) {
                    i8 += (((i7 * i5) + i8) - Test.instanceCount);
                    switch (((i8 >>> 1) % 8) + 25) {
                    case 25:
                        i6 += (((i7 * i5) + i5) - i4);
                        i4 = (int)Test.instanceCount;
                        break;
                    case 26:
                        Test.iArrFld = Test.iArrFld;
                        lArr[i7] += -220;
                    case 27:
                        Test.instanceCount += (i7 * i7);
                        break;
                    case 28:
                        d1 = i5;
                    case 29:
                        i8 += (60435 + (i7 * i7));
                    case 30:
                        i6 = (int)d1;
                        break;
                    case 31:
                        Test.iArrFld[i7 - 1] *= (int)Test.instanceCount;
                    case 32:
                        i4 = 172;
                        break;
                    }
                }
            }
        } while (++i5 < 327);
        vMeth_check_sum += i4 + i5 + Double.doubleToLongBits(d) + i6 + (b ? 1 : 0) + i7 + i8 +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(int i3, long l) {

        float f2=2.236F;
        int i9=127, i10=-195, i11=-9, i12=1386, i13=201, i14=14, i15=-34442, i16=105;
        byte by=-60;

        vMeth();
        f2 = Test.instanceCount;
        for (i9 = 8; i9 < 222; i9++) {
            i3 -= i10;
            Test.instanceCount = i10;
            i3 *= (int)l;
            i10 += (int)-4163281622L;
        }
        for (i11 = 14; i11 < 364; ++i11) {
            by += (byte)(i11 * i11);
            for (i13 = 5; i13 > 1; i13 -= 2) {
                f2 += (24945 + (i13 * i13));
                i10 = i3;
                for (i15 = 1; i15 < 3; ++i15) {
                    i3 += i15;
                    i16 += (((i15 * i11) + i9) - l);
                }
            }
        }
        long meth_res = i3 + l + Float.floatToIntBits(f2) + i9 + i10 + i11 + i12 + by + i13 + i14 + i15 + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public boolean bMeth(float f1, int i1, int i2) {

        int i17=-80, i18=1380, i19=131, i20=27924, i21=135;
        boolean b1=true, bArr[]=new boolean[N];
        short s=-19974;
        byte by1=43;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 1001714779L);
        FuzzerUtils.init(bArr, false);

        i2 -= iMeth(i2, Test.instanceCount);
        lArr1[(i2 >>> 1) % N] >>= Test.instanceCount;
        for (i17 = 10; i17 < 289; i17++) {
            i2 *= Test.sFld;
            f1 += Test.instanceCount;
            bArr[i17] = b1;
            if (b1) continue;
            if (b1) {
                for (i19 = 1; i19 < 6; i19 += 2) {
                    i18 += (i19 * i17);
                    i2 = i20;
                    s = (short)i20;
                    i18 += (i19 + by1);
                    i20 += (i19 - i2);
                    i18 >>= i21;
                }
            } else {
                Test.instanceCount -= (long)f1;
            }
        }
        long meth_res = Float.floatToIntBits(f1) + i1 + i2 + i17 + i18 + (b1 ? 1 : 0) + i19 + i20 + s + by1 + i21 +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(bArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        float f=-1.571F, fArr[]=new float[N];
        int i=-10729, i22=135, i23=44, i24=-14, i25=253, i26=-43190, i27=152, i28=3, i29=-190, i30=-1;
        boolean b3=true;
        long lArr2[]=new long[N];

        FuzzerUtils.init(fArr, -29.129F);
        FuzzerUtils.init(lArr2, 2L);

        for (f = 15; f < 281; f++) {
            if (b3) {
                bMeth(f, i, i);
                for (i22 = 3; i22 < 94; ++i22) {
                    for (i24 = 1; i24 < 2; ++i24) {
                        boolean b2=true;
                        i23 += (i24 ^ i25);
                        i = -54;
                        Test.instanceCount += i24;
                        Test.iArrFld[i24 + 1] /= (int)((long)(f) | 1);
                        i = i23;
                        if (b2) {
                            Test.instanceCount = Test.instanceCount;
                        } else {
                            fArr[(int)(f + 1)] = -220;
                            Test.instanceCount += Test.instanceCount;
                            i23 += (((i24 * i25) + i) - Test.byFld);
                            Test.iArrFld[(int)(f + 1)] -= (int)Test.instanceCount;
                        }
                    }
                }
            } else if (b3) {
                Test.instanceCount *= 3706;
                i25 = (int)Test.instanceCount;
                for (i26 = 4; 94 > i26; i26 += 3) {
                    Test.dFld = i25;
                    i27 = i24;
                    Test.instanceCount = i25;
                }
            }
            Test.iArrFld[(int)(f)] &= i27;
            i27 = i25;
        }
        Test.instanceCount *= -47857;
        for (i28 = 8; i28 < 205; ++i28) {
            switch (((i28 % 4) * 5) + 62) {
            case 68:
                i29 += -102;
                lArr2[i28] += i30;
                break;
            case 71:
                Test.instanceCount = i27;
                break;
            case 79:
                Test.iArrFld = FuzzerUtils.int1array(N, (int)10);
                break;
            case 72:
            default:
                try {
                    i = (i % -38475);
                    i27 = (-1903217314 / i);
                    Test.iArrFld[i28 - 1] = (Test.iArrFld[i28 - 1] % 237);
                } catch (ArithmeticException a_e) {}
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
