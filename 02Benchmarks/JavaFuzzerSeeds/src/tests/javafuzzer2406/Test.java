package tests.javafuzzer2406;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:17:57 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-43988L;
    public float fFld=1.547F;
    public volatile int iFld=-2;
    public static float fFld1=-2.977F;
    public static byte byFld=14;
    public static int iFld1=-177;
    public static volatile short sFld=-7017;
    public static byte byArrFld[]=new byte[N];
    public long lArrFld[]=new long[N];
    public int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)8);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(double d1) {

        int i8=-11440, i9=10, i10=251, i11=-18930, i12=-104, i13=199;
        short s2=-31367, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-5629);

        for (i8 = 185; i8 > 2; i8--) {
            for (i10 = 1; i10 < 9; ++i10) {
                for (i12 = 1; i12 < 2; ++i12) {
                    Test.fFld1 += i8;
                    switch (((i12 % 6) * 5) + 118) {
                    case 144:
                        i13 += (((i12 * i9) + i12) - i13);
                        Test.instanceCount += (7 + (i12 * i12));
                        Test.instanceCount += (((i12 * Test.instanceCount) + i9) - i13);
                        break;
                    case 136:
                        Test.instanceCount = s2;
                        Test.instanceCount >>= i13;
                        Test.instanceCount >>= 206;
                        i9 ^= i11;
                        break;
                    case 133:
                        Test.instanceCount += i10;
                    case 128:
                        sArr[i10 + 1] &= (short)i8;
                        break;
                    case 123:
                        Test.instanceCount -= i12;
                    case 130:
                    default:
                        Test.instanceCount += (((i12 * i12) + i13) - Test.fFld1);
                    }
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d1) + i8 + i9 + i10 + i11 + i12 + i13 + s2 + FuzzerUtils.checkSum(sArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i1) {

        float f=1.13F;
        int i2=-41900, i3=-64634, i4=-10, i5=202, i6=-5, i7=-198, i14=-42663, iArr[]=new int[N];
        short s1=-26869;
        double d=-113.8376;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(lArr, 12L);

        iArr[(i1 >>> 1) % N] = (int)(i1 -= (int)((i1 * 7897L) + (Test.instanceCount >> i1)));
        for (f = 2; f < 134; ++f) {
            iArr[(int)(f)] >>= (-((28 + (i1 - i1)) + (s1++)));
        }
        for (d = 5; d < 225; d++) {
            for (i4 = 1; i4 < 7; ++i4) {
                iArr = (iArr = (iArr = (iArr = iArr)));
                for (i6 = 1; i6 < 2; ++i6) {
                    iArr[(int)(d - 1)] = (++s1);
                    i5 = (int)lArr[(int)(d - 1)];
                    i7 = (int)(((i6 + d) + lArr[(int)(d)]) - iMeth2(d));
                    i5 -= (int)f;
                    i2 += i4;
                    i5 += (((i6 * Test.byFld) + i14) - i2);
                    Test.fFld1 += (i6 * i2);
                    if (b) continue;
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + i2 + s1 + Double.doubleToLongBits(d) + i3 + i4 + i5 + i6 + i7 +
            i14 + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i=54418, i15=-224, i16=3, i17=7, iArr1[][]=new int[N][N];
        short s=2472;
        long l=3796032621L;

        FuzzerUtils.init(iArr1, -11);

        i = (int)(-(Test.fFld1++));
        Test.byFld <<= (byte)(Short.reverseBytes((short)(s++)) - Math.min(iMeth1(113), 52336));
        Test.byArrFld[(i >>> 1) % N] = (byte)Test.instanceCount;
        for (l = 18; l < 335; l += 2) {
            i = (int)Test.instanceCount;
            for (i16 = 1; i16 < 10; i16++) {
                Test.fFld1 += i17;
                Test.fFld1 += i16;
                i += i;
                iArr1[i16][(int)(l + 1)] = i17;
                Test.fFld1 += s;
                Test.fFld1 = -61410;
                i15 >>= i;
            }
            i17 -= (int)1.544F;
            if (Test.iFld1 != 0) {
            }
        }
        long meth_res = i + s + l + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i18=-100, i19=11, i21=25935, i22=12, i23=50558, i24=-14641, i25=-125, i26=63, i27=-49876, iArr2[]=new
            int[N];
        double d2=2.43126, d3=2.36000;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, 10);
        FuzzerUtils.init(bArr, false);

        fFld = (iFld--);
        iMeth();
        for (i18 = 8; i18 < 129; ++i18) {
            lArrFld[i18] = Test.iFld1;
            Test.byFld += (byte)i19;
            for (d2 = 10; 207 > d2; d2++) {
                iFld -= i18;
                iArrFld = FuzzerUtils.int2array(N, (int)-30595);
                iArrFld[(int)(d2 - 1)][(int)(d2)] = i21;
                iArr2[i18 - 1] = Test.sFld;
                bArr[(int)(d2)] = b1;
                iArrFld[i18 + 1][i18 + 1] += i21;
                d3 = Test.instanceCount;
                i21 -= (int)Test.fFld1;
            }
            Test.instanceCount = Test.instanceCount;
            i19 += (int)Test.instanceCount;
        }
        for (i22 = 9; i22 < 209; i22++) {
            iArr2[i22 + 1] <<= i22;
            iFld = -113;
            Test.instanceCount += i22;
            switch (((Test.iFld1 >>> 1) % 1) + 46) {
            case 46:
                for (i24 = 5; i24 < 126; ++i24) {
                    for (i26 = 1; i26 < 2; i26++) {
                        Test.instanceCount += (i26 - i27);
                        iFld >>= i25;
                        switch ((i24 % 1) + 27) {
                        case 27:
                            i25 *= (int)1.602F;
                            break;
                        }
                        if (b1) continue;
                        Test.instanceCount &= Test.iFld1;
                        Test.instanceCount += i26;
                    }
                }
                break;
            default:
                iArr2[i22 + 1] *= 2822;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
