package tests.javafuzzer1241;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:07:00 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=56817L;
    public int iFld=-8;
    public static double dFld=0.96258;
    public static short sFld=-19134;
    public static volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 11666L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f1=110.862F;
        int i6=42759, i7=7755, i8=46109, iArr1[]=new int[N];
        short s=11904;
        long l1=-10L;
        double d1=-112.30003;

        FuzzerUtils.init(iArr1, -151);

        Test.instanceCount = Test.instanceCount;
        f1 -= Test.instanceCount;
        i6 += (int)Test.instanceCount;
        i7 = 1;
        while (++i7 < 253) {
            i6 += (((i7 * s) + i7) - Test.instanceCount);
            l1 = 1;
            while (++l1 < 6) {
                i6 = (int)f1;
                s = (short)2.113929;
            }
        }
        for (d1 = 6; d1 < 319; ++d1) {
            try {
                iArr1[(int)(d1)] = (i8 % -999765742);
                i6 = (iArr1[(int)(d1 - 1)] % 120);
                iArr1[(int)(d1)] = (i7 % iArr1[(int)(d1)]);
            } catch (ArithmeticException a_e) {}
            try {
                i8 = (i7 % -283850971);
                i6 = (i8 % i7);
                i6 = (i8 % -17);
            } catch (ArithmeticException a_e) {}
            iArr1[(int)(d1 - 1)] = (int)l1;
            Test.instanceCount >>= i6;
            i8 = (int)f1;
            Test.instanceCount += (long)((long)d1 ^ i7);
        }
        vMeth2_check_sum += Float.floatToIntBits(f1) + i6 + i7 + s + l1 + Double.doubleToLongBits(d1) + i8 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(double d, float f) {

        int i2=9387, i3=52064, i4=9, i5=64012, i9=116, i10=4, i11=19366, i12=-210, iArr[]=new int[N];
        short sArr[]=new short[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(sArr, (short)-4997);
        FuzzerUtils.init(iArr, 27038);
        FuzzerUtils.init(dArr, 13.40385);

        for (i2 = 385; 8 < i2; --i2) {
            for (i4 = 1; 4 > i4; i4++) {
                i3 *= sArr[i4 - 1];
                iArr[i4] &= i2;
                try {
                    iArr[i4] = (iArr[i2] / i4);
                    i3 = (i4 / 26365);
                    i5 = (i5 / i5);
                } catch (ArithmeticException a_e) {}
                iArr[i4 + 1] -= (i3 - ((i4 + i3) + i4));
            }
            vMeth2();
            i3 += (int)f;
            i3 += (((i2 * i2) + i4) - i2);
            for (i9 = 1; i9 < 4; ++i9) {
                f += (float)d;
                for (i11 = 1; i11 < 2; ++i11) {
                    i12 += i11;
                    iArr = FuzzerUtils.int1array(N, (int)8);
                    dArr = FuzzerUtils.double1array(N, (double)66.75125);
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i9 + i10 + i11 +
            i12 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l) {

        int i13=-213, i14=19104, i15=-25026, i16=4, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, 133);

        vMeth1(Test.dFld, 85.896F);
        for (i13 = 2; i13 < 247; ++i13) {
            iArr2[i13 - 1] <<= i13;
            for (i15 = 1; i15 < 7; i15++) {
                i16 = i13;
                switch (((i15 % 3) * 5) + 11) {
                case 19:
                    i16 = -182;
                    l = i15;
                    break;
                case 22:
                    Test.lArrFld[i13 + 1] -= (long)Test.dFld;
                    iArr2 = iArr2;
                    i14 -= i14;
                    i16 += i15;
                    break;
                case 16:
                    iArr2 = iArr2;
                    i16 += (int)-2.518F;
                    break;
                default:
                    i14 += i15;
                }
            }
        }
        vMeth_check_sum += l + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-10, i1=13, i17=-149, i18=-4, i19=-2, i20=-10, i21=-24988, i22=980, iArr3[]=new int[N];
        float f2=53.191F, f3=0.975F;
        double dArr1[][]=new double[N][N];

        FuzzerUtils.init(iArr3, -6);
        FuzzerUtils.init(dArr1, -84.45897);

        iFld *= (iFld++);
        if (true) {
            for (i = 9; i < 309; i++) {
                iFld *= ((i - Math.min(i1, iFld)) - (iFld++));
                Test.instanceCount ^= (i + Test.instanceCount);
                vMeth(Test.instanceCount);
                Test.sFld += (short)(-123 + (i * i));
            }
            iFld -= i1;
            f2 = 394;
            do {
                Test.instanceCount = i;
                for (i17 = 64; f2 < i17; i17 -= 3) {
                    iFld += 12;
                    for (i19 = 1; i19 < 1; ++i19) {
                        i18 += (i19 - Test.instanceCount);
                        iArr3[(int)(f2 - 1)] -= i19;
                        f3 = i;
                        iArr3[(int)(f2)] = i19;
                        dArr1[(int)(f2)][i17 + 1] += Test.instanceCount;
                        i20 = i1;
                        iFld -= (int)Test.instanceCount;
                        i20 *= (int)f3;
                        Test.instanceCount += i20;
                        iFld += (((i19 * i) + i18) - i17);
                    }
                    f3 += i19;
                    iArr3[(int)(f2)] <<= i20;
                    for (i21 = 1; i21 < 1; ++i21) {
                        iArr3[i17] += i21;
                        Test.instanceCount = 6054126337628221158L;
                        iFld = 8;
                        iFld += i19;
                    }
                }
            } while (--f2 > 0);
        } else {
            i18 -= (int)f3;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
