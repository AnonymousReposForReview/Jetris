package tests.javafuzzer1300;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 17:51:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3083386907589491840L;
    public volatile boolean bFld=false;
    public double dFld=-84.94233;
    public int iFld=-59797;
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 35857L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f, int i4) {


        Test.instanceCount >>= i4;
        long meth_res = Float.floatToIntBits(f) + i4;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l, int i3) {

        float f1=1.445F;
        int i5=-10, i6=14, i7=11707, i8=14, i9=-250, iArr[]=new int[N];
        double d1=-32.43144;
        boolean b1=false;

        FuzzerUtils.init(iArr, -140);

        i3 -= (int)Test.instanceCount;
        i3 -= ((iArr[(i3 >>> 1) % N]++) | iMeth1(f1, i3));
        i5 = 157;
        while (--i5 > 0) {
            for (i6 = 10; 1 < i6; i6 -= 3) {
                for (i8 = 4; 1 < i8; i8--) {
                    f1 -= i8;
                }
                d1 = i5;
                i7 += (int)l;
                if (b1) {
                    i9 = (int)-4615952867609765240L;
                    if (true) {
                        iArr[i6] ^= i8;
                    } else {
                        i3 -= i7;
                        i7 = i7;
                        i9 += i3;
                    }
                } else {
                    iArr[i5 + 1] -= i7;
                }
            }
        }
        vMeth_check_sum += l + i3 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d1) +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i, boolean b, double d) {

        int i1=232, i2=-2, i10=-245, i11=-7, i12=8, i13=12, i14=8, iArr1[]=new int[N];
        byte by=107;
        float f2=-1.814F;
        short s=-19837;

        FuzzerUtils.init(iArr1, 7);

        for (i1 = 5; i1 < 321; i1++) {
            d -= (((Test.instanceCount - i) * (i1 ^ i2)) + Math.max(9L, Test.instanceCount & by));
            vMeth(Test.instanceCount, i2);
        }
        i *= i2;
        f2 += f2;
        for (i10 = 4; i10 < 246; i10 += 3) {
            i11 = (int)Test.instanceCount;
            d = Test.instanceCount;
            for (i12 = 19; i12 > 1; --i12) {
                i = (int)Test.instanceCount;
                iArr1[i10 - 1] = -10;
                d = Test.instanceCount;
                i14 = 2;
                do {
                    s = (short)116.40292;
                    i = i2;
                } while (--i14 > 0);
            }
        }
        long meth_res = i + (b ? 1 : 0) + Double.doubleToLongBits(d) + i1 + i2 + by + Float.floatToIntBits(f2) + i10 +
            i11 + i12 + i13 + i14 + s + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {


        iMeth(-151, bFld, dFld);
        Test.lArrFld[(1 >>> 1) % N][(9 >>> 1) % N] += iFld;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
