package tests.javafuzzer966;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:14:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3756794005L;
    public static float fFld=0.865F;
    public short sFld=-21078;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -58262);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i9=-6, i10=-4, i11=33, i12=-3, i13=-39;
        short s1=17870, sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)28003);

        Test.instanceCount = 71;
        i9 = 1;
        while (++i9 < 347) {
            i10 *= 0;
        }
        for (i11 = 3; 165 > i11; ++i11) {
            i13 = 1;
            while ((i13 += 3) < 10) {
                i12 ^= 11;
                i10 += i13;
                i12 = i12;
                Test.fFld -= Test.instanceCount;
            }
            if (i9 != 0) {
            }
            sArr[i11] += (short)i13;
            Test.instanceCount = s1;
            i10 = i9;
            Test.instanceCount <<= 7;
            i12 = i9;
        }
        long meth_res = i9 + i10 + i11 + i12 + i13 + s1 + FuzzerUtils.checkSum(sArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i4=208, i5=40048, i6=25, i7=-12, i8=-245;
        short s=-8452;
        double dArr[]=new double[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, 112.81110);
        FuzzerUtils.init(lArr, -3165122852536758018L);

        i4 = 1;
        do {
            dArr[i4 - 1] += (--Test.instanceCount);
            lArr[i4 + 1] = i4;
            s += (short)i4;
            for (i5 = 1; 7 > i5; ++i5) {
                i6 += (int)Test.instanceCount;
                i6 -= (int)(-((Test.instanceCount | i5) * i4));
                for (i7 = i5; i7 < 2; i7++) {
                    Test.fFld += (((i7 * Test.instanceCount) + i8) - i8);
                    i8 <<= (int)5286374905508721721L;
                    try {
                        Test.iArrFld[i4] = (i8 / 212);
                        i8 = (i6 / 54);
                        Test.iArrFld[i5 + 1] = (i8 % i6);
                    } catch (ArithmeticException a_e) {}
                    s = (short)-15726;
                    Test.iArrFld[i7 - 1] = -26820;
                }
                i8 <<= (-(iMeth1() * i5));
                Test.iArrFld[i5] >>= i4;
            }
        } while (++i4 < 250);
        long meth_res = i4 + s + i5 + i6 + i7 + i8 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i) {

        int i1=-1, i2=173, i3=58089;
        boolean b=true;
        double d=-2.108155;

        for (i1 = 3; 290 > i1; i1++) {
            i3 = 1;
            do {
                Test.instanceCount = (Test.iArrFld[i3] = (i2 - (i1 + i)));
                fArrFld[i1] = ((Test.instanceCount--) * iMeth());
                switch ((i3 % 9) + 7) {
                case 7:
                    Test.fFld -= i;
                case 8:
                    Test.fFld = i3;
                    i2 += (i3 ^ i3);
                    break;
                case 9:
                    i <<= 7016;
                    i = (int)Test.fFld;
                    Test.iArrFld[i1 + 1] += (int)Test.fFld;
                    if (b) {
                        i >>= (int)Test.instanceCount;
                        i2 = (int)Test.instanceCount;
                        i >>= i1;
                    } else {
                        i = -136;
                    }
                    break;
                case 10:
                    i2 >>>= -28086;
                    break;
                case 11:
                    i += (i3 * i3);
                    break;
                case 12:
                    Test.iArrFld[i1 - 1] = (int)Test.instanceCount;
                    break;
                case 13:
                    i += (i3 * i3);
                    break;
                case 14:
                    Test.instanceCount *= i3;
                case 15:
                    d -= -22613;
                    break;
                }
            } while (++i3 < 6);
        }
        vMeth_check_sum += i + i1 + i2 + i3 + (b ? 1 : 0) + Double.doubleToLongBits(d);
    }

    public void mainTest(String[] strArr1) {

        int i14=-60653, i15=-577, i16=11, i17=7, i18=24018, i19=-31464, i20=-7, i21=-14, i22=140;
        byte by=-59;
        boolean b1=false;

        vMeth(i14);
        Test.iArrFld[(i14 >>> 1) % N] = i14;
        Test.instanceCount ^= i14;
        Test.fFld = i14;
        i14 = by;
        switch (((i14 >>> 1) % 2) + 94) {
        case 94:
            for (i15 = 297; i15 > 12; --i15) {
                i16 += i14;
                for (i17 = 4; i17 < 88; ++i17) {
                    Test.instanceCount += i17;
                    sFld += (short)(((i17 * i15) + Test.fFld) - sFld);
                    i18 += (((i17 * i14) + Test.instanceCount) - Test.fFld);
                    if (b1) {
                        by -= (byte)sFld;
                        for (i19 = 1; i19 < 2; i19++) {
                            Test.fFld -= -156;
                        }
                    } else {
                        if (b1) continue;
                        Test.fFld %= (by | 1);
                    }
                    for (i21 = i17; i21 < 2; i21++) {
                        Test.instanceCount += 106;
                        sFld >>= (short)-2311483328L;
                        switch (((i17 >>> 1) % 2) + 79) {
                        case 79:
                            Test.iArrFld[i17] -= (int)196L;
                            i18 ^= by;
                            i14 += (((i21 * i15) + i18) - i19);
                            i22 += -22386;
                            break;
                        case 80:
                            i20 = (int)Test.instanceCount;
                            i20 = i17;
                            if (b1) continue;
                            i14 *= i19;
                            break;
                        }
                    }
                }
            }
            break;
        case 95:
            Test.iArrFld[(i19 >>> 1) % N] = (int)Test.fFld;
            break;
        default:
            by *= (byte)Test.instanceCount;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
