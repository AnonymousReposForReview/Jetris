package tests.javafuzzer3033;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:04:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=178L;
    public static boolean bFld=true;
    public static float fFld=43.917F;
    public int iFld=-11;
    public static boolean bFld1=true;
    public static volatile double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 1.90320);
        FuzzerUtils.init(Test.iArrFld, 216);
        FuzzerUtils.init(Test.fArrFld, 21.387F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i4=-37317, i5=20021, i7=58036, i8=-137, i9=-7;
        short s=-32474;
        boolean b=false;
        float f1=1.820F;

        Test.dArrFld[(i4 >>> 1) % N] -= i4;
        if (b) {
            i5 = 1;
            while (++i5 < 346) {
                i4 += i5;
                i4 += i5;
                i7 = 1;
                do {
                    for (i8 = 1; i8 < 1; i8++) {
                        i4 |= s;
                        if (Test.bFld) {
                            i4 <<= i5;
                            vMeth2_check_sum += i4 + i5 + i7 + i8 + i9 + s + (b ? 1 : 0) + Float.floatToIntBits(f1);
                            return;
                        } else {
                            if (b) break;
                            Test.fArrFld[i7 + 1] *= 23181L;
                            i4 += (((i8 * f1) + i7) - i7);
                        }
                        Test.instanceCount = -50033;
                        Test.iArrFld[i7 - 1] = -37753;
                    }
                } while (++i7 < 5);
            }
        } else if (b) {
            i9 = i4;
        } else {
            i4 >>= i5;
        }
        vMeth2_check_sum += i4 + i5 + i7 + i8 + i9 + s + (b ? 1 : 0) + Float.floatToIntBits(f1);
    }

    public void vMeth1(long l1, int i1) {

        int i2=0, i3=-13, i10=5, i11=43640, i12=30, i13=-36948, i14=11, i15=5, i16=15, i17=78;
        float f2=-88.448F;
        long l2=2005930459L;

        for (i2 = 17; i2 < 302; i2++) {
            i1 %= (int)((((i1 - 201) - Math.max(i3, i2)) - Integer.reverseBytes(Integer.reverseBytes(i2))) | 1);
            vMeth2();
            for (f2 = 1; f2 < 6; f2++) {
                Test.fFld *= -8517178556106355414L;
            }
            Test.iArrFld[i2 + 1] = -3;
        }
        for (i11 = 10; 303 > i11; i11++) {
            for (i13 = 1; i13 < 6; i13++) {
                for (i15 = 1; 2 > i15; i15++) {
                    if (i2 != 0) {
                        vMeth1_check_sum += l1 + i1 + i2 + i3 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + i14
                            + i15 + i16 + l2 + i17;
                        return;
                    }
                    Test.instanceCount += 3050L;
                    Test.fFld += -12;
                }
                for (l2 = 2; 1 < l2; --l2) {
                    Test.instanceCount += (19 + (l2 * l2));
                    i12 += (int)(((l2 * i10) + i13) - f2);
                }
            }
        }
        vMeth1_check_sum += l1 + i1 + i2 + i3 + Float.floatToIntBits(f2) + i10 + i11 + i12 + i13 + i14 + i15 + i16 + l2
            + i17;
    }

    public void vMeth(long l, double d, float f) {

        int i18=7, i19=-2, i20=-14, i21=-63077;
        byte by=110;

        vMeth1(l, iFld);
        i18 = 1;
        while (++i18 < 278) {
            for (i19 = 6; 1 < i19; i19 -= 3) {
                f += (i19 * by);
                if (Test.bFld) {
                    i21 = 1;
                    do {
                        Test.instanceCount -= 2;
                        Test.iArrFld[i19 - 1] += (int)f;
                        Test.instanceCount = 96;
                        i20 = (int)f;
                        iFld = (int)Test.instanceCount;
                        switch ((i18 % 2) + 18) {
                        case 18:
                            i20 += (192 + (i21 * i21));
                            Test.fFld *= Test.fFld;
                            i20 += (12 + (i21 * i21));
                        case 19:
                            iFld -= iFld;
                            break;
                        }
                    } while (++i21 < 6);
                } else if (Test.bFld) {
                    Test.instanceCount <<= i20;
                } else {
                    if (Test.bFld) break;
                }
            }
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i18 + i19 + i20 + by + i21;
    }

    public void mainTest(String[] strArr1) {

        int i=14, i22=10, i23=36857, i24=-150, i25=-14, i26=-65, i27=14, i28=1, i29=66, i30=238;
        double d1=0.41480;
        byte by1=-124;
        short s1=-30323;

        i >>= ((i--) * i);
        vMeth(Test.instanceCount, d1, Test.fFld);
        for (i22 = 7; 134 > i22; i22++) {
            i23 &= i23;
            Test.iArrFld[i22] %= (int)(Test.instanceCount | 1);
            if (false) {
                for (i24 = 6; i24 < 197; i24++) {
                    i23 -= (int)-35.20427;
                    for (i26 = i22; i26 < 2; i26++) {
                        i27 += (i26 ^ Test.instanceCount);
                        iFld -= iFld;
                        iFld += iFld;
                        Test.instanceCount += Test.instanceCount;
                        iFld += i26;
                    }
                    if (false) {
                        i23 = (int)Test.instanceCount;
                        by1 = (byte)Test.instanceCount;
                    }
                    i27 += i24;
                    i28 = 1;
                    while (++i28 < 2) {
                        iFld = i25;
                        iFld *= i27;
                        Test.iArrFld[i24 + 1] *= 20914;
                        i25 >>>= i28;
                        Test.instanceCount -= i22;
                        i -= (int)Test.instanceCount;
                    }
                    Test.instanceCount += i24;
                }
                for (i29 = i22; i29 < 197; ++i29) {
                    long l3=186L;
                    l3 -= i27;
                    Test.bFld1 = Test.bFld;
                    s1 -= (short)l3;
                }
            } else if (Test.bFld1) {
                d1 = i27;
            } else if (true) {
                if (Test.bFld1) break;
            } else {
                iFld += i22;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
