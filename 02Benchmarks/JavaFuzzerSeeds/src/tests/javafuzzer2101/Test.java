package tests.javafuzzer2101;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 09:08:00 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static boolean bFld=false;
    public float fFld=0.149F;
    public byte byFld=-92;
    public long lFld=-7L;
    public int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    public static long dMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i6=37832, i7=39, i8=-9, i9=-5, i10=-13, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 15829);

        for (i6 = 12; i6 < 277; i6 += 3) {
            Test.instanceCount >>= i6;
            Test.bFld = Test.bFld;
            i7 >>= i7;
            iArr[i6 + 1] = i7;
            i7 -= i7;
            Test.instanceCount += i7;
            Test.instanceCount = 25;
            i7 >>>= (int)240L;
        }
        Test.instanceCount += i7;
        i8 = 1;
        do {
            for (i9 = 1; i9 < 6; i9++) {
                if (true) continue;
            }
            i10 += (int)-1.68010;
            i10 += (i8 + Test.instanceCount);
        } while (++i8 < 258);
        vMeth_check_sum += i6 + i7 + i8 + i9 + i10 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i3, long l, float f) {

        int i4=-11, i5=55509, iArr1[]=new int[N];
        byte by=-48;

        FuzzerUtils.init(iArr1, -4);

        for (i4 = 11; 244 > i4; ++i4) {
            vMeth();
            by = (byte)-31082L;
        }
        i5 |= (int)l;
        i5 >>>= i5;
        for (int i11 : iArr1) {
            i11 += -23085;
            iArr1[(i5 >>> 1) % N] = -63646;
            l -= i4;
            if (Test.bFld) continue;
            Test.bFld = Test.bFld;
        }
        long meth_res = i3 + l + Float.floatToIntBits(f) + i4 + i5 + by + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth() {

        int i1=13, i2=165, i12=0, i13=-8, i14=42756, i15=585, i16=-11, i17=-20270;
        float f1=-106.803F;
        byte by1=-77;

        if (Test.bFld) {
            for (i1 = 12; i1 < 327; ++i1) {
                if (Test.bFld) continue;
                iMeth(-27849, Test.instanceCount, f1);
                for (i12 = 1; i12 < 5; i12++) {
                    Test.instanceCount += (i12 * i12);
                }
                i13 -= (int)-214L;
                Test.bFld = Test.bFld;
                i13 = (int)10L;
            }
            for (i14 = 6; 242 > i14; i14++) {
                double d=0.49428;
                Test.instanceCount = by1;
                by1 += (byte)(i14 + i13);
                by1 = (byte)d;
                f1 = i14;
                i13 += i1;
            }
        } else {
            i16 += i17;
        }
        long meth_res = i1 + i2 + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + by1 + i16 + i17;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i18=26568, i19=-115, i20=-4083, i21=-137;
        long l1=618708794L;
        double d1=-2.95582;

        iArrFld[(i >>> 1) % N] -= (int)dMeth();
        i18 = 1;
        do {
            i19 = 129;
            while (--i19 > 0) {
                Test.instanceCount -= i;
                lArrFld[i19] += 10668;
                Test.bFld = Test.bFld;
                lArrFld = lArrFld;
                switch ((i18 % 8) + 60) {
                case 60:
                    i %= (int)(i | 1);
                    i >>= i19;
                    break;
                case 61:
                    i += (int)fFld;
                    i <<= i18;
                    break;
                case 62:
                    i = i18;
                    Test.instanceCount *= 25117;
                    i20 = 1;
                    do {
                        Test.instanceCount += (i20 * i20);
                        Test.instanceCount = Test.instanceCount;
                        byFld += (byte)(i20 - i19);
                    } while (++i20 < 1);
                    break;
                case 63:
                case 64:
                    switch (((i18 % 2) * 5) + 88) {
                    case 96:
                        if (Test.bFld) {
                            switch (((-10 >>> 1) % 8) + 93) {
                            case 93:
                                i = i;
                                lArrFld[i18 + 1] = Test.instanceCount;
                                i = i18;
                                break;
                            case 94:
                                iArrFld[i19 + 1] -= (int)fFld;
                                i = i19;
                                break;
                            case 95:
                                l1 = 1;
                                while (++l1 < 1) {
                                    Test.bFld = Test.bFld;
                                    i += (int)(((l1 * i18) + Test.instanceCount) - i19);
                                    i = i19;
                                }
                                break;
                            case 96:
                                lArrFld[i19 + 1] *= i18;
                                break;
                            case 97:
                                i = (int)lFld;
                            case 98:
                            case 99:
                                i = i19;
                                break;
                            case 100:
                                i += (((i19 * i19) + byFld) - i20);
                                break;
                            default:
                                d1 = i20;
                            }
                        }
                        break;
                    case 97:
                        if (false) continue;
                        break;
                    default:
                        i *= i19;
                    }
                    break;
                case 65:
                    fFld *= 13758;
                case 66:
                    lFld += byFld;
                    break;
                case 67:
                    i21 >>= i21;
                    break;
                }
            }
        } while (++i18 < 194);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  iMeth ->  iMeth dMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
