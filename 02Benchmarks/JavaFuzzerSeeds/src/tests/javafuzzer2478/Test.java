package tests.javafuzzer2478;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:16:08 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6866275066345701362L;
    public static volatile byte byFld=58;
    public static double dFld=0.126084;
    public static volatile short sFld=-18903;

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9, float f2, long l) {

        int i10=-26086, i11=-31954, i12=66, i13=7, i14=0, i15=245, iArr1[]=new int[N];
        long lArr2[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr1, 61986);
        FuzzerUtils.init(lArr2, 10612L);
        FuzzerUtils.init(fArr, 2.55F);

        iArr1[(-15196 >>> 1) % N] = -62028;
        i9 <<= (int)-153L;
        lArr2[(i9 >>> 1) % N] = i9;
        i9 -= (int)Test.instanceCount;
        f2 -= i9;
        for (i10 = 12; i10 < 263; ++i10) {
            i11 = -15;
            i9 += i10;
            for (i12 = 1; i12 < 6; i12++) {
                for (i14 = 1; i14 < 2; i14++) {
                    Test.instanceCount = i15;
                    try {
                        i11 = (iArr1[i10] / -15234);
                        i9 = (i15 % 61650);
                        i13 = (-162 / i13);
                    } catch (ArithmeticException a_e) {}
                    fArr[i10 + 1] += i10;
                    Test.instanceCount -= i12;
                    Test.instanceCount += i14;
                }
            }
        }
        long meth_res = i9 + Float.floatToIntBits(f2) + l + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i6, int i7) {

        float f=2.1016F, f1=-1.859F;
        int i8=-14, i16=8, i17=-243, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 55604);

        Test.instanceCount = i6;
        iArr[(i7 >>> 1) % N] -= (int)f;
        i6 = (int)(Test.instanceCount++);
        f1 = 1;
        while (++f1 < 167) {
            Test.byFld -= (byte)i6;
            i8 = 1;
            do {
                i6 <<= (iMeth(31836, -2.980F, Test.instanceCount) - i8);
                i6 += (63232 + (i8 * i8));
            } while (++i8 < 9);
            for (i16 = 1; i16 < 9; i16++) {
                Test.instanceCount = i17;
                iArr[i16] += i17;
                i6 = i7;
                i7 += i6;
                Test.instanceCount &= i8;
                iArr[i16] += i8;
            }
        }
        vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i8 + i16 + i17 +
            FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i1, int i2) {

        int i3=14, i4=-8740, i5=3841, i18=-8, i19=16669, i20=-5, iArr2[]=new int[N];
        float f3=-2.347F, f4=0.158F;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 88L);
        FuzzerUtils.init(iArr2, -46);

        i3 -= i2;
        i3 -= (int)(((-115.876 * i3) + (-1384203540660234196L ^ (++i3))) * (--lArr1[(i2 >>> 1) % N]));
        for (i4 = 9; i4 < 338; ++i4) {
            vMeth(-39440, i2);
            for (i18 = 1; i18 < 5; i18 += 2) {
                i3 = i2;
                i3 += (((i18 * i5) + i3) - i5);
                i1 += (i18 | (long)f3);
                if (b) {
                    i3 += i18;
                    i5 -= i5;
                    for (f4 = 3; f4 > 1; --f4) {
                        i5 = i19;
                        if (i18 != 0) {
                        }
                        Test.dFld %= 8;
                    }
                } else {
                    iArr2[i4 - 1] *= Test.sFld;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i5 + i18 + i19 + Float.floatToIntBits(f3) + Float.floatToIntBits(f4) + i20
            + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=254;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -33775L);

        lArr[(i >>> 1) % N] -= (lMeth(i, 53799) + i);



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
