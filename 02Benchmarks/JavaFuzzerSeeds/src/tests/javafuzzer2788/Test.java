package tests.javafuzzer2788;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:03:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=162L;
    public static float fFld=-56.159F;
    public short sFld=23299;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-117);
    }

    public static long sMeth_check_sum = 0;
    public static long sMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        float f1=1.305F, f2=1.651F;
        int i5=-168, i6=14, i7=-137, i8=47, i9=245, iArr2[]=new int[N];

        FuzzerUtils.init(iArr2, -140);

        f1 -= i5;
        for (i6 = 7; i6 < 179; i6++) {
            iArr2 = iArr2;
        }
        for (i8 = 11; i8 < 339; i8++) {
            f1 += (-14333L + (i8 * i8));
            f2 *= i5;
            i5 = i8;
            i7 >>= (int)-8L;
            Test.instanceCount += (((i8 * i7) + i6) - i9);
        }
        i9 = (int)131L;
        long meth_res = Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth1(float f, int i3, long l) {

        long l1=0L;
        int i10=-32776, i11=3, i12=199, i13=-31169, i14=213, iArr1[]=new int[N];
        double d=-86.115365;
        boolean b=false, bArr[]=new boolean[N];
        byte by1=-122;

        FuzzerUtils.init(iArr1, -10);
        FuzzerUtils.init(bArr, false);

        i3 = (-i3);
        for (int i4 : iArr1) {
            iMeth();
            i4 >>= (int)l;
            l1 -= i4;
            l += 53619L;
            if (i4 != 0) {
            }
            for (i10 = 4; i10 > 1; i10--) {
                for (d = 1; d < 2; d++) {
                    i11 = (int)-2946345346L;
                    switch (((i10 % 9) * 5) + 120) {
                    case 123:
                        bArr[(int)(d - 1)] = b;
                        i11 += (int)(d * i11);
                        break;
                    case 127:
                        i13 = by1;
                        break;
                    case 154:
                        if (b) continue;
                        break;
                    case 144:
                        i4 = i11;
                        break;
                    case 148:
                        Test.instanceCount += (long)(d * d);
                        break;
                    case 130:
                        l1 ^= l;
                    case 149:
                        f -= -122;
                    case 139:
                        iArr1[(int)(d)] -= i14;
                        break;
                    case 122:
                    }
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i3 + l + l1 + i10 + i11 + Double.doubleToLongBits(d) + i12 + (b ? 1 :
            0) + i13 + by1 + i14 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
        sMeth1_check_sum += meth_res;
        return (short)meth_res;
    }

    public static short sMeth() {

        int i1=-23472, i2=10, i15=61359;
        byte by=-13;
        double d1=2.59474, d2=0.82204;

        for (i1 = 6; i1 < 137; ++i1) {
            i2 *= (by = (byte)sMeth1(-34.432F, i2, 8L));
            i2 = i2;
            d1 = 12;
            do {
                Test.byArrFld[(int)(d1 + 1)] = (byte)i2;
                Test.instanceCount *= i2;
                Test.fFld = 205;
                i2 = i2;
                Test.instanceCount += (63 + (d1 * d1));
                switch ((int)((d1 % 2) + 96)) {
                case 96:
                    i15 = 1;
                    do {
                        i2 *= i1;
                        i2 = (int)Test.instanceCount;
                    } while (++i15 < 2);
                    i2 = i2;
                    break;
                case 97:
                    d2 += i2;
                    break;
                }
            } while ((d1 -= 2) > 0);
        }
        long meth_res = i1 + i2 + by + Double.doubleToLongBits(d1) + i15 + Double.doubleToLongBits(d2);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=123, i16=169, i17=-62, i18=232, i19=14, i20=4886, i21=-12, i22=254, i23=1, i24=236, iArr[]=new int[N];
        long l2=-6208939609304529301L, lArr[][]=new long[N][N], lArr1[][]=new long[N][N];
        double d3=0.68831, dArr[]=new double[N];
        byte by2=6;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 8);
        FuzzerUtils.init(lArr, 2L);
        FuzzerUtils.init(lArr1, 194L);
        FuzzerUtils.init(dArr, -72.11257);
        FuzzerUtils.init(fArr, -25.59F);

        i = ((iArr[(i >>> 1) % N] -= iArr[(10 >>> 1) % N]) * (iArr[(i >>> 1) % N] - sMeth()));
        Test.instanceCount += -57744;
        for (i16 = 7; i16 < 242; ++i16) {
            for (l2 = 6; l2 < 107; l2++) {
                for (i19 = 2; i19 > l2; i19 -= 2) {
                    sFld >>= (short)12929;
                    lArr[(int)(l2 + 1)][i16] = (long)d3;
                    Test.instanceCount += (long)2.711F;
                    iArr[i19] %= (int)(sFld | 1);
                    i -= (int)d3;
                    i17 ^= (int)Test.instanceCount;
                    iArr[i16] = i17;
                    lArr1[i19 - 1][i16 - 1] = -22;
                    Test.fFld = Test.fFld;
                    Test.instanceCount = i16;
                }
                iArr[(int)(l2)] = (int)-1.574F;
                iArr[i16 + 1] *= (int)l2;
                switch (((i >>> 1) % 2) + 45) {
                case 45:
                    for (i21 = 1; i21 < 2; i21++) {
                        dArr[i16 - 1] *= i16;
                        i += (((i21 * Test.fFld) + l2) - i22);
                        Test.instanceCount += (((i21 * Test.instanceCount) + i19) - Test.fFld);
                        by2 = (byte)sFld;
                        Test.instanceCount += i21;
                    }
                case 46:
                    fArr[(int)(l2)] *= i21;
                    break;
                }
                i22 = i19;
                for (i23 = 1; i23 < 2; i23++) {
                    d3 += -2568634387L;
                    try {
                        iArr[i16 - 1] = (iArr[(int)(l2 + 1)] / i22);
                        i24 = (i21 % iArr[i16 + 1]);
                        i = (53252 % i20);
                    } catch (ArithmeticException a_e) {}
                    i *= i16;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  sMeth1 ->  sMeth1 sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth1 sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
