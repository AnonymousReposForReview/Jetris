package tests.javafuzzer2831;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 21:02:38 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=18050L;
    public static byte byFld=44;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];
    public float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 26972);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i10, int i11) {

        int i12=-7, i13=25820, i14=-8, i15=32, i16=20, i17=29010, i18=224;
        boolean b=true;
        short s=28515;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 50.913F);

        for (float f1 : fArr1) {
            for (i12 = 1; i12 < 4; ++i12) {
                b = b;
                i10 += (int)f1;
            }
            s ^= (short)Test.instanceCount;
            i10 *= Test.byFld;
        }
        for (i14 = 3; 378 > i14; i14++) {
            i15 = i11;
            for (i16 = 5; 1 < i16; --i16) {
                try {
                    i10 = (i11 % -32574);
                    Test.iArrFld[i16] = (Test.iArrFld[i14] / -32298);
                    i15 = (Test.iArrFld[i16] / -20333);
                } catch (ArithmeticException a_e) {}
                if (b) continue;
                i15 ^= i13;
                i18 = 1;
                while (++i18 < 2) {
                    i11 <<= i15;
                    try {
                        i11 = (-87 % Test.iArrFld[i18]);
                        Test.iArrFld[i14] = (822769403 % i11);
                        i17 = (Test.iArrFld[i18] % i10);
                    } catch (ArithmeticException a_e) {}
                }
            }
        }
        long meth_res = i10 + i11 + i12 + i13 + (b ? 1 : 0) + s + i14 + i15 + i16 + i17 + i18 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(byte by) {

        int i3=-1, i4=16108, i5=-7, i6=-42521, i7=244, i8=9, i9=1, i19=-8, i20=-2, iArr[][]=new int[N][N];
        float f=49.595F, fArr[]=new float[N];
        short s1=-30539;
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -33);
        FuzzerUtils.init(dArr, 0.72443);
        FuzzerUtils.init(fArr, 5.252F);

        i3 = 201;
        do {
            iArr[i3 + 1][i3 - 1] = (i3 * Math.abs(--i4));
            if ((--dArr[i3 + 1]) == fArr[i3]) break;
            Test.instanceCount *= (long)fArr[i3];
        } while (--i3 > 0);
        for (i5 = 19; i5 < 386; ++i5) {
            f *= i7;
            for (i8 = 1; i8 < 5; ++i8) {
                i9 += (i6 - iMeth(i9, -13));
            }
            for (i19 = 1; i19 < 5; i19++) {
                i20 = 70;
                iArr[i19 - 1] = Test.iArrFld;
                i4 += (((i19 * i3) + i4) - s1);
            }
            i9 = i5;
            i7 += i19;
        }
        b1 = false;
        vMeth1_check_sum += by + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i19 + i20 + s1 + (b1 ? 1
            : 0) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth() {

        int i1=43, i2=-200, i21=242, i22=62571, i23=-223, i24=-9494;
        double d=2.80600, dArr1[][]=new double[N][N];
        float f2=-105.689F;
        boolean b2=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-20536);
        FuzzerUtils.init(dArr1, -2.35696);

        sArr[(i1 >>> 1) % N] *= (short)(((93 + i1) ^ (i1 * Test.instanceCount)) - (--Test.instanceCount));
        i2 = 1;
        while (++i2 < 362) {
            vMeth1((byte)(-102));
            for (i21 = 1; i21 < 5; i21++) {
                i1 += i22;
                i22 = (int)Test.instanceCount;
                i22 = (int)d;
                f2 += i21;
                i22 >>>= i2;
            }
            Test.bArrFld[i2 - 1] = b2;
            Test.iArrFld[i2] *= (int)Test.instanceCount;
            for (i23 = 1; 5 > i23; i23++) {
                i22 += (((i23 * Test.instanceCount) + i24) - i21);
                Test.iArrFld[i2] += i23;
                dArr1[i2 + 1][i23] = i24;
            }
        }
        vMeth_check_sum += i1 + i2 + i21 + i22 + Double.doubleToLongBits(d) + Float.floatToIntBits(f2) + (b2 ? 1 : 0) +
            i23 + i24 + FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i=123, i25=-64527, i26=3, i27=20939, i28=44207, i29=43, i30=5, i31=-190, i32=-7, i33=56398;
        double d1=-16.116910;
        float f3=116.290F;

        i -= (int)(Test.instanceCount--);
        i += (Test.byFld--);
        vMeth();
        Test.instanceCount = 18172;
        if (bFld) {
            for (i25 = 15; 299 > i25; ++i25) {
                i26 += i25;
                for (i27 = i25; 89 > i27; i27++) {
                    d1 = Test.instanceCount;
                    f3 = f3;
                    fArrFld[i27 + 1] *= i28;
                    i26 *= i25;
                    bFld = bFld;
                    Test.instanceCount = i;
                }
                if (bFld) {
                    i *= i29;
                    i28 -= i;
                    d1 = i28;
                }
                Test.iArrFld = Test.iArrFld;
                i29 = i30;
                lArrFld = lArrFld;
                i31 = 1;
                while (++i31 < 89) {
                    for (i32 = 1; i32 > 1; --i32) {
                        i += (int)(-1824919474L + (i32 * i32));
                        i >>>= (int)Test.instanceCount;
                        Test.iArrFld[i25 + 1] += (int)d1;
                        i = i33;
                        i26 -= i33;
                        i33 /= (int)(i26 | 1);
                        i28 <<= i30;
                    }
                }
            }
        } else if (true) {
            i28 = (int)2696287091L;
        } else if (true) {
            Test.instanceCount *= Test.instanceCount;
        } else {
            Test.iArrFld[(i28 >>> 1) % N] = -94;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
