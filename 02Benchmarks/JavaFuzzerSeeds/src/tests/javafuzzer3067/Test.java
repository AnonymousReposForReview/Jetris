package tests.javafuzzer3067;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:26:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=10L;
    public static double dFld=116.95437;
    public static volatile float fFld=101.175F;
    public boolean bFld=false;
    public volatile byte byArrFld[]=new byte[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(int i4, short s, int i5) {

        int i6=23, i7=10, i8=26516;
        float f1=75.230F;
        byte by=-80;
        boolean b=true;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, -57713L);
        FuzzerUtils.init(dArr, 24.120104);

        i6 = 1;
        while (++i6 < 393) {
            f1 %= (i6 | 1);
            i4 = -51;
            for (i7 = 1; i7 < 4; i7++) {
                Test.dFld = i6;
                i5 |= (int)Test.instanceCount;
                lArr[i6] += Test.instanceCount;
                switch ((((-12840 >>> 1) % 1) * 5) + 23) {
                case 28:
                    i8 *= i5;
                    dArr[i7 - 1] *= 145;
                    if (b) {
                        f1 *= -22.993F;
                        i8 = (int)Test.instanceCount;
                        by += (byte)i5;
                        i5 = (int)Test.instanceCount;
                    } else if (b) {
                        i8 += (i7 + i6);
                    } else {
                        i4 += (((i7 * i5) + Test.instanceCount) - i4);
                    }
                default:
                    Test.instanceCount += i7;
                }
            }
        }
        long meth_res = i4 + s + i5 + i6 + Float.floatToIntBits(f1) + i7 + i8 + by + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth1(float f, int i1) {

        int i2=-12, i3=184, i9=97, i10=-10, i11=13937, iArr[]=new int[N];
        boolean b1=false;
        byte by1=30;

        FuzzerUtils.init(iArr, -11);

        for (i2 = 2; i2 < 192; i2++) {
            short s1=2869;
            switch ((i2 % 8) + 77) {
            case 77:
                i3 *= (int)fMeth(i1, (short)(-28872), i1);
                break;
            case 78:
                Test.instanceCount += (i2 | i3);
                i1 = i3;
            case 79:
                Test.instanceCount ^= i3;
                break;
            case 80:
                f += (((i2 * Test.instanceCount) + s1) - Test.instanceCount);
            case 81:
                if (b1) break;
                iArr = iArr;
                for (i9 = 8; i9 > 1; i9 -= 3) {
                    i1 -= by1;
                    i10 <<= i11;
                    i3 = (int)Test.instanceCount;
                }
                f += 1273700251685106588L;
                break;
            case 82:
            case 83:
                if (b1) break;
            case 84:
                iArr[i2] = i9;
                break;
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i1 + i2 + i3 + (b1 ? 1 : 0) + i9 + i10 + by1 + i11 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d1) {

        int i12=-207, i13=-3, i14=13, i15=10023, i16=-13, i17=63947, iArr1[]=new int[N];
        float f2=-5.796F, f3=0.848F;
        short s2=-26066;
        boolean b2=false;

        FuzzerUtils.init(iArr1, 53359);

        vMeth1(Test.fFld, i12);
        for (f2 = 8; f2 < 283; ++f2) {
            i12 += s2;
            i12 <<= i13;
        }
        for (i14 = 5; i14 < 122; i14++) {
            i15 += (-20865 + (i14 * i14));
            Test.instanceCount += Test.instanceCount;
            i12 <<= i15;
        }
        i13 = i13;
        for (f3 = 10; 203 > f3; ++f3) {
            iArr1[(int)(f3)] -= i13;
            i17 = 1;
            do {
                b2 = b2;
                i15 *= (int)Test.instanceCount;
                if (i13 != 0) {
                    vMeth_check_sum += Double.doubleToLongBits(d1) + i12 + Float.floatToIntBits(f2) + i13 + s2 + i14 +
                        i15 + Float.floatToIntBits(f3) + i16 + i17 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
            } while (++i17 < 8);
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i12 + Float.floatToIntBits(f2) + i13 + s2 + i14 + i15 +
            Float.floatToIntBits(f3) + i16 + i17 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d=-47.36774, d2=-15.4986;
        int i=7, i18=-12, i19=46898, i20=-13, iArr2[]=new int[N];
        short s3=28987;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 130);
        FuzzerUtils.init(fArr, 1.847F);

        for (d = 197; d > 9; d -= 2) {
            i = i;
            vMeth(Test.dFld);
            if (bFld) {
                i -= i;
            } else {
                i18 = 1;
                while (++i18 < 266) {
                    for (d2 = 1; 1 > d2; d2++) {
                        i += (55 + (d2 * d2));
                        Test.fFld += (float)(((d2 * Test.instanceCount) + i19) - Test.instanceCount);
                        Test.instanceCount = (long)-1.126314;
                        i19 = 18835;
                        if (bFld) {
                            Test.instanceCount ^= i;
                        } else if (bFld) {
                            i19 = -4;
                            if (bFld) {
                                if (bFld) {
                                    Test.instanceCount <<= Test.instanceCount;
                                } else if (bFld) {
                                    byArrFld[i18 + 1] -= (byte)8;
                                    switch ((((i >>> 1) % 2) * 5) + 118) {
                                    case 125:
                                        i = s3;
                                        break;
                                    case 121:
                                        switch ((int)(((d % 3) * 5) + 46)) {
                                        case 59:
                                            i19 += (int)(d2 * s3);
                                            if (bFld) break;
                                            i = i;
                                            break;
                                        case 47:
                                            Test.dFld = i;
                                            break;
                                        case 48:
                                            i19 += -26316;
                                            i19 -= i20;
                                            break;
                                        }
                                        i19 = i18;
                                        break;
                                    default:
                                        Test.instanceCount = 6763824229440702505L;
                                        iArr2[(i19 >>> 1) % N] >>>= i19;
                                    }
                                } else if (bFld) {
                                    i19 -= (int)Test.instanceCount;
                                } else {
                                    i20 += (int)(((d2 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                                }
                            } else {
                                Test.instanceCount = Test.instanceCount;
                            }
                        } else {
                            fArr[(int)(d2 - 1)] *= i19;
                        }
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
