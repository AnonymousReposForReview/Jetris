package tests.javafuzzer1423;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 20:14:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=55910L;
    public static byte byFld=101;
    public static double dFld=2.103176;
    public static float fFld=0.630F;
    public volatile boolean bArrFld[]=new boolean[N];

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=5007, i6=37192, i7=34597, i8=-7336, i9=-98, i10=28414, i11=-1, iArr1[]=new int[N];
        float f=-1.233F;
        byte by=-48;
        short s=-9051;

        FuzzerUtils.init(iArr1, -6435);

        i5 = (int)Test.instanceCount;
        Test.instanceCount *= (long)f;
        i6 = 229;
        do {
            iArr1[i6] -= i6;
            i5 = i5;
            f %= (Test.instanceCount | 1);
            by += (byte)i6;
            for (i7 = 20; i7 > 1; i7 -= 3) {
                i8 >>>= i7;
                s = (short)i6;
                i9 = 1;
                do {
                    i8 = i6;
                } while ((i9 += 3) < 4);
                for (i10 = 1; i10 < 4; i10 += 3) {
                    i5 = (int)-126.962F;
                    i11 += i10;
                }
            }
        } while ((i6 -= 3) > 0);
        vMeth1_check_sum += i5 + Float.floatToIntBits(f) + i6 + by + i7 + i8 + s + i9 + i10 + i11 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        int i3=210, i4=203, i12=13328, i13=35692, i14=-3929, i15=60, i16=-22283;
        float f1=-2.599F;
        double d=-60.8845;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, false);

        for (i3 = 1; i3 < 375; ++i3) {
            vMeth1();
            i4 -= (int)1.53773;
            for (i12 = 1; 5 > i12; i12++) {
                bArr[i12 - 1] = true;
                switch ((i12 % 7) + 102) {
                case 102:
                    i4 <<= (int)Test.instanceCount;
                    break;
                case 103:
                    f1 *= Test.instanceCount;
                    for (i14 = 1; 2 > i14; i14++) {
                        i4 = i3;
                    }
                    break;
                case 104:
                    i15 = i4;
                    i15 *= (int)Test.instanceCount;
                    break;
                case 105:
                    d -= i16;
                    break;
                case 106:
                    Test.instanceCount += Test.instanceCount;
                    i4 += i3;
                    break;
                case 107:
                    i13 -= (int)Test.instanceCount;
                    break;
                case 108:
                    i15 += (((i12 * i13) + i15) - i14);
                    break;
                }
            }
        }
        vMeth_check_sum += i3 + i4 + i12 + i13 + Float.floatToIntBits(f1) + i14 + i15 + Double.doubleToLongBits(d) +
            i16 + FuzzerUtils.checkSum(bArr);
    }

    public static byte byMeth(int i1, long l, long l1) {

        int i2=-11, i17=-5, i18=0, i19=29601, i20=6, iArr2[]=new int[N];
        short s1=19899;

        FuzzerUtils.init(iArr2, -232);

        i2 = 188;
        while (--i2 > 0) {
            vMeth();
            l >>= i2;
            iArr2[i2 + 1] >>>= 13;
            i1 -= i1;
            for (i17 = 1; i17 < 8; i17++) {
                for (i19 = 2; i19 > 1; --i19) {
                    l1 += i19;
                    iArr2[i19 + 1] = -220;
                    switch (((i2 % 1) * 5) + 4) {
                    case 7:
                        s1 -= (short)i17;
                    default:
                        Test.byFld ^= (byte)i1;
                        i18 += (i19 | l1);
                        i1 >>= -41168;
                        Test.dFld = i20;
                    }
                }
            }
        }
        long meth_res = i1 + l + l1 + i2 + i17 + i18 + i19 + i20 + s1 + FuzzerUtils.checkSum(iArr2);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-19973, i21=12, i22=14688, i23=-202, i24=53, i25=0, i26=7, iArr[]=new int[N];
        boolean b=true;
        short s2=31672;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -45386);
        FuzzerUtils.init(lArr, -7895957730480267804L);
        FuzzerUtils.init(dArr, -1.36959);

        i = ((iArr[(i >>> 1) % N] - byMeth(i, Test.instanceCount, Test.instanceCount)) * -63);
        for (i21 = 388; i21 > 2; --i21) {
            lArr[i21 - 1] *= i;
            Test.instanceCount += (((i21 * Test.instanceCount) + i) - Test.fFld);
            for (i23 = i21; i23 < 65; ++i23) {
                iArr[i23 - 1] = i;
                i24 = i24;
                i24 -= i24;
                try {
                    i24 = (i24 % 184);
                    i = (i24 % iArr[i23]);
                    iArr[i21 - 1] = (i22 % 1754480492);
                } catch (ArithmeticException a_e) {}
                for (i25 = 1; i25 < 1; i25++) {
                    i22 += i25;
                    Test.dFld += i25;
                    Test.fFld += i23;
                    i24 -= (int)Test.fFld;
                    i22 *= Test.byFld;
                    i += (i25 | Test.instanceCount);
                    switch (((i21 % 2) * 5) + 118) {
                    case 124:
                        iArr[i25 + 1] -= (int)Test.fFld;
                        bArrFld = bArrFld;
                        Test.fFld += (-91.82F + (i25 * i25));
                        iArr[i23] = -8;
                        break;
                    case 122:
                        Test.fFld = -37;
                        i24 -= (int)Test.dFld;
                        if (b) continue;
                        break;
                    default:
                        dArr[i23] = Test.instanceCount;
                        Test.instanceCount = i23;
                        s2 += (short)(((i25 * i24) + Test.instanceCount) - i26);
                        iArr[i21] &= i24;
                    }
                    i22 = (int)Test.instanceCount;
                    Test.fFld -= 132;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
