package tests.javafuzzer669;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:32:41 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=1755949142L;
    public static volatile short sFld=18444;
    public static float fFld=101.579F;
    public volatile boolean bFld=false;
    public static double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 0.126494);
        FuzzerUtils.init(Test.byArrFld, (byte)-62);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, double d, int i6) {

        long l=-7680639503546042085L, l1=-178L;
        int i7=-11, i8=14, i9=-1, i10=-5, i11=49216, i12=-1;
        boolean b=false;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 18.868F);

        for (l = 13; l < 217; l++) {
            for (i8 = 1; i8 < 8; i8++) {
                i9 -= Test.sFld;
                Test.instanceCount = Test.instanceCount;
                for (i10 = 1; i10 < 2; i10++) {
                    byte by1=75;
                    float f=-1.239F;
                    by1 += (byte)(-17434 + (i10 * i10));
                    f += i6;
                    f += (((i10 * by1) + l) - i6);
                    i12 |= i12;
                    i12 -= 10055;
                    switch (((i10 >>> 1) % 7) + 86) {
                    case 86:
                        fArr[i10][i10 + 1] *= -141;
                        i5 = i12;
                        l1 += i10;
                        break;
                    case 87:
                        i11 = i8;
                        break;
                    case 88:
                    case 89:
                        i6 += i8;
                        break;
                    case 90:
                        b = b;
                    case 91:
                        l1 *= i9;
                    case 92:
                        if (b) continue;
                    }
                }
            }
        }
        vMeth1_check_sum += i5 + Double.doubleToLongBits(d) + i6 + l + i7 + i8 + i9 + i10 + i11 + i12 + l1 + (b ? 1 :
            0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i4) {

        double d1=0.80564;
        long l2=-6L, l3=-32914L;
        int i13=-9, i14=-9, i15=5, i16=-10, i17=-9, i18=31211, i19=7, i20=0, iArr[][]=new int[N][N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 12);
        FuzzerUtils.init(bArr, true);

        vMeth1(i4, d1, i4);
        for (l2 = 11; l2 < 279; l2++) {
            for (i14 = 1; i14 < 6; ++i14) {
                boolean b1=true;
                iArr[(int)(l2 - 1)][(int)(l2 + 1)] = (int)l2;
                bArr[i14] = b1;
                for (l3 = 1; 2 > l3; ++l3) {
                    Test.instanceCount += (l3 ^ i15);
                    Test.instanceCount -= -9;
                    i13 += (int)4113675648L;
                }
                if (b1) continue;
            }
        }
        for (double d2 : Test.dArrFld) {
            for (i17 = 4; i17 > 1; i17--) {
                for (i19 = 1; i19 < 2; i19++) {
                    float f1=108.695F;
                    i18 = (int)f1;
                    i20 <<= -41;
                }
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d1) + l2 + i13 + i14 + i15 + l3 + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public static float fMeth(int i2, byte by, int i3) {

        int i21=18068, i22=1575, i23=239, i24=1, i25=-135;
        double d3=-107.25936;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 36408L);

        switch ((((Integer.reverseBytes(i2) >>> 1) % 1) * 5) + 3) {
        case 6:
            i3 -= (int)((lArr[(i2 >>> 1) % N] >>>= (i2++)) - ((Test.instanceCount + Test.instanceCount) % -12));
            break;
        default:
            vMeth(i3);
        }
        for (i21 = 24; i21 < 397; ++i21) {
            i3 = Test.sFld;
            for (i23 = 5; 1 < i23; --i23) {
                d3 = i2;
                i25 = 1;
                while (++i25 < 2) {
                    i22 = (int)Test.fFld;
                    i3 -= (int)Test.instanceCount;
                    i2 <<= i22;
                    i22 = i24;
                    i2 += -20255;
                    d3 -= Test.instanceCount;
                    i24 &= Test.sFld;
                }
            }
        }
        long meth_res = i2 + by + i3 + i21 + i22 + i23 + i24 + Double.doubleToLongBits(d3) + i25 +
            FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=7, i1=168, i26=62242, i27=-16314, i28=14, i29=8;
        byte by2=93;
        double d4=2.3137;
        float fArr1[][]=new float[N][N];

        FuzzerUtils.init(fArr1, -1.763F);

        try {
            if (true) {
                i <<= (int)-2L;
                i1 = 1;
                do {
                    i -= (int)fMeth(i, by2, i1);
                    iArrFld[(-56 >>> 1) % N] >>= (int)Test.instanceCount;
                    Test.byArrFld[i1] = (byte)i1;
                    for (i26 = i1; i26 < 74; i26++) {
                        i28 = 1;
                        do {
                            i27 += (((i28 * Test.instanceCount) + i27) - Test.instanceCount);
                            fArr1[i26 - 1][i26] += Test.instanceCount;
                            switch ((i1 % 2) + 20) {
                            case 20:
                                iArrFld[i28 - 1] = Test.sFld;
                                i27 <<= i;
                                Test.fFld *= i;
                                break;
                            case 21:
                                i27 = i;
                                Test.instanceCount += (long)d4;
                                break;
                            default:
                                d4 -= 0.286F;
                                i27 = i26;
                                iArrFld[i26 - 1] = (int)Test.instanceCount;
                            }
                            d4 *= Test.instanceCount;
                            iArrFld[i26] += i1;
                            Test.fFld -= i26;
                            i29 /= (int)(i28 | 1);
                        } while (++i28 < 1);
                        switch (((i1 >>> 1) % 10) + 35) {
                        case 35:
                            Test.instanceCount = i1;
                        case 36:
                            i <<= -14452;
                            break;
                        case 37:
                            Test.fFld = Test.instanceCount;
                            i27 += (int)-3849150501L;
                            by2 += (byte)(212 + (i26 * i26));
                            break;
                        case 38:
                            Test.instanceCount += -3;
                            break;
                        case 39:
                            iArrFld[i26 + 1] >>= (int)Test.instanceCount;
                            break;
                        case 40:
                            i29 += i26;
                            break;
                        case 41:
                            i += (((i26 * Test.fFld) + i1) - i1);
                            break;
                        case 42:
                            if (false) continue;
                            break;
                        case 43:
                            Test.fFld %= (i26 | 1);
                        case 44:
                            Test.instanceCount -= Test.instanceCount;
                            break;
                        default:
                            Test.instanceCount ^= i27;
                        }
                    }
                } while (++i1 < 341);
            } else if (bFld) {
                i *= (int)27L;
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            i29 = i;
        }
        finally {
            iArrFld[(-196 >>> 1) % N] >>= i;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
