package tests.javafuzzer383;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 03:09:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=3;
    public static byte byFld=-95;
    public static float fFld=-97.375F;
    public double dFld=-21.63399;
    public static long lFld=285362503L;
    public boolean bFld=true;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -56357);
        FuzzerUtils.init(Test.lArrFld, -251L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth() {

        float f=-1.615F;
        int i5=117, i6=-9019, i7=-23434, i8=64407, i9=61271, i10=-54;

        f = Test.iFld;
        Test.lArrFld[(Test.iFld >>> 1) % N][(Test.iFld >>> 1) % N] -= (long)80.183F;
        Test.iArrFld[(Test.iFld >>> 1) % N] >>= Test.iFld;
        i5 = 1;
        do {
            Test.instanceCount = i5;
            for (i6 = i5; i6 < 6; i6++) {
                Test.instanceCount = 103;
                Test.instanceCount += (((i6 * i5) + Test.instanceCount) - i5);
                for (i8 = 1; 1 > i8; ++i8) {
                    i9 += i8;
                    i9 += i5;
                    i7 -= i8;
                    try {
                        Test.iArrFld[i5 + 1] = (i8 % 33);
                        i9 = (-63667 % i8);
                        i10 = (i9 % -171219460);
                    } catch (ArithmeticException a_e) {}
                    i9 += i8;
                    i7 = i10;
                }
            }
        } while (++i5 < 275);
        long meth_res = Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + i9 + i10;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(long l, int i2) {

        int i3=12, i4=-69, i11=52, i12=-129, i13=63003;
        double d=-2.117992;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -103.223F);

        i3 = 1;
        do {
            i4 = 1;
            while (++i4 < 8) {
                i2 = (++i2);
                i2 = (i2--);
                fMeth();
            }
            for (d = 1; d < 8; ++d) {
                i2 = 50;
                i11 = (int)Test.instanceCount;
                fArr[(int)(d)] = (float)-2.27353;
                Test.iFld += (int)((long)d ^ l);
                i2 += (int)(37802L + (d * d));
                Test.iArrFld[(int)(d)] = (int)l;
                for (i12 = 2; i12 > 1; i12 -= 3) {
                    Test.lArrFld[(int)(d)][(int)(d - 1)] >>= Test.iFld;
                    i11 = i3;
                }
            }
        } while (++i3 < 202);
        vMeth_check_sum += l + i2 + i3 + i4 + Double.doubleToLongBits(d) + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static int iMeth() {

        int i1=-2;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 5549808740019331792L);

        Test.instanceCount -= i1;
        i1 += (int)(--lArr[(i1 >>> 1) % N]);
        vMeth(Test.instanceCount, i1);
        long meth_res = i1 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=174, i15=12, i16=-5, i17=3361, i18=14222, i19=7, i20=-57199, i21=54;

        for (int i : Test.iArrFld) {
            short s=-13263;
            s += (short)iMeth();
            Test.byFld *= (byte)35891;
            i ^= (int)Test.instanceCount;
            i14 = (int)Test.instanceCount;
            Test.iFld = i;
        }
        Test.instanceCount -= i14;
        Test.iFld -= (int)Test.fFld;
        for (i15 = 9; 231 > i15; ++i15) {
            Test.iFld += i15;
            dFld -= 1.281F;
            Test.instanceCount += Test.instanceCount;
        }
        for (i17 = 235; i17 > 6; i17 -= 3) {
            i18 >>= i18;
            i14 += i17;
            i19 = 1;
            while (++i19 < 329) {
                Test.lFld += i19;
                Test.fFld *= i16;
                Test.lFld = 13;
                try {
                    i16 = (i16 / -968262715);
                    i16 = (i14 / Test.iArrFld[i17 + 1]);
                    i14 = (-735253991 / i16);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount = Test.lFld;
                Test.iArrFld[i19] += i15;
                for (i20 = i19; i20 < 1; i20++) {
                    switch ((i19 % 3) + 66) {
                    case 66:
                        Test.iArrFld = Test.iArrFld;
                        i21 = i14;
                    case 67:
                        Test.fFld -= Test.instanceCount;
                        i14 -= 192;
                        Test.iFld += i20;
                        break;
                    case 68:
                        bFld = bFld;
                    default:
                        i21 = i15;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
