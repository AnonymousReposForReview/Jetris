package tests.javafuzzer633;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:58:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=146L;
    public static int iFld=40429;
    public static float fFld=-87.63F;
    public static int iFld1=9;
    public int iFld2=30;
    public static byte byFld=-69;
    public static int iFld3=-1;
    public static double dFld=0.127809;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static int iMeth() {

        byte by=-3;

        by += (byte)(Test.iFld++);
        Test.fFld = Test.iFld;
        Test.iFld >>= Test.iFld;
        long meth_res = by;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth2(int i10) {

        int i11=-9;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 6144758424437522485L);

        lArr[(-15 >>> 1) % N] += i11;
        vMeth2_check_sum += i10 + i11 + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i8, short s1, int i9) {

        double d1=7.1843, d2=71.54280;
        int i12=-35426, i13=-27724, i14=2, i15=11, iArr1[]=new int[N];
        byte by1=121;

        FuzzerUtils.init(iArr1, -47774);

        i8 = (int)(((Test.fFld - 10) + d1) + (Test.iFld |= i9));
        vMeth2(Test.iFld);
        for (i12 = 166; i12 > 10; --i12) {
            i9 <<= (int)Test.instanceCount;
        }
        i8 += Test.iFld;
        d2 = 1;
        while (++d2 < 289) {
            try {
                i8 = (18970 % i8);
                i9 = (i9 / iArr1[(int)(d2)]);
                Test.iFld = (iArr1[(int)(d2)] % Test.iFld);
            } catch (ArithmeticException a_e) {}
            Test.fFld += s1;
            for (i14 = 1; i14 < 6; ++i14) {
                by1 -= (byte)Test.iFld;
                iArr1[(i13 >>> 1) % N] <<= i9;
                Test.iFld = i14;
                Test.iFld >>= 3;
                try {
                    Test.iArrFld[(int)(d2 + 1)] = (302544961 / i14);
                    i13 = (i15 % 38595);
                    i9 = (i9 % -254);
                } catch (ArithmeticException a_e) {}
                Test.instanceCount += (i14 | Test.iFld);
            }
        }
        vMeth1_check_sum += i8 + s1 + i9 + Double.doubleToLongBits(d1) + i12 + i13 + Double.doubleToLongBits(d2) + i14
            + i15 + by1 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2, int i3, int i4) {

        double d=0.111589, d3=-82.29245;
        int i5=2, i6=-26186, i7=-178, i16=-1, i17=-8, iArr[]=new int[N];
        short s2=5154;
        byte by2=-5;
        boolean b=true;

        FuzzerUtils.init(iArr, -9);

        for (d = 11; d < 329; d++) {
            for (i6 = 1; 5 > i6; ++i6) {
                iArr[(int)(d + 1)] += (((i7 * 6) * iMeth()) + i3);
                vMeth1(Test.iFld1, s2, Test.iFld1);
                if (b) {
                    for (i16 = 1; 2 > i16; ++i16) {
                        Test.instanceCount -= i17;
                        s2 = (short)-7205;
                        i3 = 13;
                        by2 = (byte)-44239;
                    }
                    vMeth_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + s2 + i16 + i17 + by2
                        + Double.doubleToLongBits(d3) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                    return;
                } else if (b) {
                    d3 = i3;
                } else {
                    i7 = Test.iFld1;
                    s2 = (short)i16;
                    i4 += (i6 - Test.iFld);
                }
                iArr[(int)(d)] = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + s2 + i16 + i17 + by2 +
            Double.doubleToLongBits(d3) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-31, i1=10175, i18=-6, i20=13, i21=118, i22=2, i23=-96;
        short s=-28523;
        long l=1564649589594819966L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -6903774015860681900L);

        for (i = 4; 315 > i; i++) {
            i1 >>= s;
            vMeth(iFld2, -246, 190);
        }
        lArr1[(i18 >>> 1) % N] &= i18;
        for (int i19 : Test.iArrFld) {
            Test.instanceCount = i;
            l = 1;
            do {
                Test.byFld >>= (byte)iFld2;
                for (i20 = 1; i20 > l; i20 -= 3) {
                    i21 = s;
                    Test.byFld = (byte)Test.iFld;
                    Test.instanceCount >>= -216;
                    Test.fFld += Test.iFld;
                    Test.instanceCount <<= i19;
                }
                switch ((int)((l % 2) + 25)) {
                case 25:
                    for (i22 = 1; i22 < 1; ++i22) {
                        try {
                            Test.iFld1 = (-895620375 / Test.iArrFld[i22 + 1]);
                            i1 = (i21 / iFld2);
                            Test.iFld = (Test.iFld3 / i22);
                        } catch (ArithmeticException a_e) {}
                        switch (((i19 >>> 1) % 5) + 33) {
                        case 33:
                            Test.instanceCount = 13946;
                            Test.instanceCount += (((i22 * i20) + i22) - i20);
                            Test.iFld3 = 4;
                            s = (short)i19;
                        case 34:
                            Test.dFld += Test.fFld;
                        case 35:
                            Test.iFld3 = (int)l;
                            Test.instanceCount += Test.iFld;
                            break;
                        case 36:
                            Test.iFld1 *= i18;
                            break;
                        case 37:
                            Test.fFld += (float)0.65909;
                            Test.instanceCount <<= Test.iFld;
                            Test.fFld = i;
                            i19 >>= s;
                            break;
                        }
                    }
                case 26:
                    i18 >>= (int)-52929L;
                default:
                    Test.instanceCount = i19;
                }
            } while (++l < 63);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
