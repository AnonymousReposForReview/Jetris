package tests.javafuzzer1785;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:20:20 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-213L;
    public int iFld=49340;
    public boolean bFld=true;
    public static byte byFld=122;
    public static int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];
    public static volatile long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -47);
        FuzzerUtils.init(Test.lArrFld, -9L);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(double d, int i) {

        boolean b=false, b1=true;
        float f1=-1.613F;

        b = b1;
        f1 = -136;
        i += i;
        vMeth_check_sum += Double.doubleToLongBits(d) + i + (b ? 1 : 0) + (b1 ? 1 : 0) + Float.floatToIntBits(f1);
    }

    public int iMeth1() {

        double d1=127.9790;
        int i1=231, i2=0, i3=29, i4=-8;
        byte by=102, byArr[]=new byte[N];
        long l=53239L, lArr[]=new long[N];
        float f2=110.116F;

        FuzzerUtils.init(lArr, 291130335L);
        FuzzerUtils.init(byArr, (byte)90);

        vMeth(d1, 134);
        iFld += (int)-64702L;
        lArr[(iFld >>> 1) % N] *= iFld;
        i1 = 1;
        do {
            Test.instanceCount += (((i1 * i1) + iFld) - by);
            for (l = 1; 9 > l; l++) {
                f2 = l;
                for (i3 = i1; i3 < 2; i3++) {
                    i2 *= by;
                    iFld += (((i3 * i4) + i1) - i4);
                    byArr[i3] = (byte)i2;
                    Test.instanceCount *= l;
                    i2 += (int)-146L;
                    iFld &= -209;
                    i4 += i1;
                }
            }
        } while (++i1 < 181);
        long meth_res = Double.doubleToLongBits(d1) + i1 + by + l + i2 + Float.floatToIntBits(f2) + i3 + i4 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i5=1, i6=28700, i7=-34302;
        float f3=2.324F, f4=0.0F;
        short s=16373;

        iFld *= (((iFld++) + (iFld - -10)) * iMeth1());
        Test.instanceCount = iFld;
        iFld = (int)-8L;
        for (i5 = 7; i5 < 216; ++i5) {
            iFld += (i5 ^ (long)f3);
            Test.instanceCount += (((i5 * s) + i5) - i6);
            i6 = (int)f3;
            if (bFld) {
                Test.iArrFld[(i6 >>> 1) % N] *= -1763;
                for (f4 = 1; f4 < 8; ++f4) {
                    iFld >>= i5;
                }
                i6 = iFld;
                iFld *= i6;
            } else {
                Test.iArrFld[i5] = Test.byFld;
                s = (short)42892;
            }
        }
        long meth_res = i5 + i6 + Float.floatToIntBits(f3) + s + Float.floatToIntBits(f4) + i7;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-102.74F;
        int i8=-53, i9=8, i11=188, i12=41825, i13=-334, i14=-13851, i15=60326, i16=235, i17=-5684, i18=6, i19=95;

        f = (iFld * (iMeth() - iFld));
        for (i8 = 6; i8 < 197; ++i8) {
            f = iFld;
            i9 += (int)Test.instanceCount;
        }
        for (i11 = 11; i11 < 262; ++i11) {
            i13 = 1;
            while (++i13 < 100) {
                i9 += (i13 * iFld);
                Test.instanceCount = i9;
                i9 *= i13;
                for (i14 = 1; i14 < 1; ++i14) {
                    i12 *= -4;
                    i15 = 161;
                    Test.iArrFld[i14] >>= i8;
                    i9 += (int)Test.instanceCount;
                }
                f = i8;
                for (i16 = 1; i16 < 1; ++i16) {
                    fArrFld[i16 + 1][i11 + 1] = i13;
                    i9 >>= i11;
                    f *= i14;
                    i12 = 52854;
                    Test.instanceCount = i14;
                }
            }
            f += (i11 * f);
            Test.iArrFld[i11 - 1] >>= (int)Test.instanceCount;
            i15 -= i13;
            switch (((i11 % 6) * 5) + 96) {
            case 108:
            case 122:
                bFld = bFld;
                break;
            case 97:
                for (i18 = 1; i18 < 100; i18++) {
                    Test.instanceCount += i19;
                    i9 = (int)37L;
                    i19 += (i18 + i15);
                }
                break;
            case 111:
                Test.lArrFld[i11 - 1][i11 - 1] %= (i19 | 1);
            case 99:
                f += (i11 - i8);
                break;
            case 114:
                Test.iArrFld[i11 - 1] += (int)34993L;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
