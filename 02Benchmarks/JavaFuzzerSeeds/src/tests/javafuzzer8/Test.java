package tests.javafuzzer8;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 20:59:40 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static long lFld=-8679965938501782484L;
    public static int iFld=-56639;
    public static byte byFld=9;
    public static boolean bFld=false;
    public static double dFld=2.14074;
    public volatile int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -58860L);
        FuzzerUtils.init(Test.iArrFld1, 11);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(short s1, long l) {

        int i3=-5, i4=-13052, i5=-91, i6=0, i7=4046, iArr[]=new int[N];
        double d1=-55.20877, d2=1.119097, dArr[]=new double[N];
        float f2=-86.962F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.747F);
        FuzzerUtils.init(iArr, 32839);
        FuzzerUtils.init(dArr, 31.33269);

        for (i3 = 12; 219 > i3; ++i3) {
            switch (i3 + 29) {
            case 29:
                l = Test.iFld;
                for (d1 = 1; d1 < 8; ++d1) {
                    i4 /= (int)(Test.byFld | 1);
                    Test.instanceCount += 1146;
                    for (i6 = 1; 2 > i6; i6++) {
                        i7 *= (int)f2;
                        fArr[i3] *= 0.79F;
                        i4 = (int)-35876L;
                        Test.iFld += (i6 | Test.instanceCount);
                        fArr[i3 - 1] = Test.instanceCount;
                        f2 -= i4;
                    }
                    l = (long)1.73978;
                    iArr = iArr;
                }
            case 30:
                d2 = i3;
                break;
            case 31:
                f2 += Test.instanceCount;
                break;
            case 32:
                f2 = i7;
                break;
            case 33:
                if (Test.bFld) break;
                break;
            case 34:
                Test.bFld = false;
                break;
            case 35:
                i5 += (80 + (i3 * i3));
            case 36:
            case 37:
                iArr = iArr;
                break;
            case 38:
                iArr[i3] += i6;
                break;
            case 39:
                Test.iFld *= Test.byFld;
                break;
            case 40:
                Test.lFld += (i3 - i5);
                break;
            case 41:
                i4 = (int)f2;
                break;
            case 42:
                i7 += (int)Test.instanceCount;
                break;
            case 43:
                Test.lFld >>= 9608;
            case 44:
                iArr[i3 - 1] = 24405;
            case 45:
            case 46:
                Test.lFld /= -18235;
                break;
            case 47:
                i5 /= (int)(Test.lFld | 1);
                break;
            case 48:
                f2 %= (i3 | 1);
                break;
            case 49:
                l >>= i4;
            case 50:
                Test.instanceCount += l;
            case 51:
                l += (i3 * i3);
                break;
            case 52:
                iArr[i3] = s1;
            case 53:
                Test.lArrFld[i3 - 1] *= 4;
                break;
            case 54:
                Test.instanceCount >>= -10;
                break;
            case 55:
                Test.lArrFld[(i7 >>> 1) % N] += Test.instanceCount;
                break;
            case 56:
                Test.instanceCount = (long)d1;
                break;
            case 57:
                i4 += (((i3 * i5) + f2) - Test.lFld);
                break;
            case 58:
                Test.instanceCount += i3;
                break;
            case 59:
                i4 |= i7;
                break;
            case 60:
                d2 = Test.lFld;
                break;
            case 61:
                i7 += i5;
                break;
            case 62:
                f2 += (i3 * i3);
                break;
            case 63:
                Test.iFld |= i7;
                break;
            case 64:
            case 65:
                dArr[i3] = s1;
                break;
            case 66:
                Test.lArrFld[i3] ^= i5;
                break;
            case 67:
                d2 = i5;
                break;
            case 68:
                f2 += (((i3 * i6) + i4) - i7);
                break;
            case 69:
                i4 += (((i3 * Test.iFld) + i3) - i6);
            case 70:
                Test.instanceCount *= Test.instanceCount;
                break;
            case 71:
                f2 = i5;
                break;
            case 72:
                i4 = 232;
                break;
            case 73:
                if (true) break;
            case 74:
                Test.lArrFld[i3 + 1] ^= i6;
            case 75:
                iArr[i3 - 1] += Test.byFld;
                break;
            case 76:
                Test.lArrFld[i3 + 1] = i4;
            case 77:
                fArr[i3] = f2;
                break;
            case 78:
                Test.iFld <<= i3;
                break;
            case 79:
                Test.lFld = i6;
                break;
            case 80:
                i5 -= Test.iFld;
            case 81:
            case 82:
                if (i6 != 0) {
                    vMeth_check_sum += s1 + l + i3 + i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 +
                        Float.floatToIntBits(f2) + Double.doubleToLongBits(d2) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
                break;
            case 83:
                i7 |= -196;
                break;
            case 84:
                i5 += (int)f2;
                break;
            case 85:
            case 86:
                i4 = s1;
                break;
            case 87:
                i5 |= i5;
                break;
            case 88:
                Test.bFld = true;
            case 89:
                iArr[i3] *= i5;
            case 90:
                i4 = (int)l;
                break;
            case 91:
                d2 = Test.lFld;
            case 92:
                i4 += i3;
                break;
            case 93:
                Test.lFld += (long)f2;
            case 94:
                iArr = iArr;
                break;
            case 95:
                if (Test.bFld) continue;
            case 96:
                f2 += (((i3 * i6) + f2) - l);
                break;
            case 97:
                Test.lFld -= (long)f2;
                break;
            case 98:
                try {
                    iArr[i3 - 1] = (26692 / i3);
                    i4 = (2006108436 / iArr[i3 - 1]);
                    i7 = (i7 % 24266);
                } catch (ArithmeticException a_e) {}
                break;
            }
        }
        vMeth_check_sum += s1 + l + i3 + i4 + Double.doubleToLongBits(d1) + i5 + i6 + i7 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth1(float f1) {

        short s2=-7947;
        int i10=-19737, i11=-32831, i12=-41009, i13=11, i14=-2;

        vMeth(s2, Test.lFld);
        Test.iFld -= (int)-23.181F;
        Test.lFld = Test.iFld;
        switch (((-35169 >>> 1) % 8) + 20) {
        case 20:
            Test.iFld /= (int)1.214F;
            i10 = 1;
            while (++i10 < 393) {
                Test.lFld += Test.instanceCount;
                Test.iArrFld1[i10] = (int)f1;
                Test.iFld -= Test.byFld;
                for (i11 = i10; 4 > i11; i11++) {
                    i12 += (i11 - Test.byFld);
                    for (i13 = 1; 1 > i13; ++i13) {
                        Test.iFld ^= i11;
                        Test.instanceCount += (-5 + (i13 * i13));
                        f1 *= 12;
                    }
                }
            }
            break;
        case 21:
            i14 = (int)Test.dFld;
        case 22:
            i14 = (int)Test.dFld;
            break;
        case 23:
            Test.iArrFld1[(i11 >>> 1) % N] += Test.byFld;
            break;
        case 24:
            i12 -= Test.iFld;
            break;
        case 25:
            Test.instanceCount -= s2;
        case 26:
            Test.instanceCount -= Test.instanceCount;
            break;
        case 27:
            i12 += i13;
            break;
        }
        long meth_res = Float.floatToIntBits(f1) + s2 + i10 + i11 + i12 + i13 + i14;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i2) {

        float f3=58.963F;
        int i15=-33111, i16=-121;
        short s3=-24591;

        i2 = (int)((--Test.lFld) * iMeth1(f3));
        Test.iArrFld1[(Test.iFld >>> 1) % N] -= Test.byFld;
        f3 = i2;
        for (i15 = 8; i15 < 265; ++i15) {
            i16 += (i15 ^ i2);
            i2 += (i15 ^ Test.lFld);
            Test.iArrFld1[i15 + 1] = 0;
            switch (((i15 % 10) * 5) + 66) {
            case 83:
                Test.instanceCount *= Test.instanceCount;
            case 92:
                Test.bFld = Test.bFld;
                break;
            case 89:
                i2 = -21;
                s3 -= Test.byFld;
                break;
            case 71:
            case 67:
                i16 = i15;
                f3 *= i15;
                Test.iFld -= i15;
                break;
            case 97:
                i2 &= Test.iFld;
            case 96:
                i16 = (int)Test.instanceCount;
                break;
            case 106:
                Test.lFld += (((i15 * i15) + f3) - i2);
                break;
            case 107:
                Test.iFld <<= Test.iFld;
                break;
            case 94:
                i16 ^= Test.iFld;
                break;
            }
        }
        long meth_res = i2 + Float.floatToIntBits(f3) + i15 + i16 + s3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-9858, i1=-6, i17=-55924, i18=0, i19=118, i20=0, i21=-12, i22=8, i23=-4717;
        double d=-118.125637;
        short s=20622;
        float f=-12.762F;
        long l1=173509861167442137L;

        i = 1;
        while (++i < 385) {
            i1 = Math.min((int)(d - (i1--)), (i1 - 58336) + (i & i1));
            i1 = (int)(i1 + Test.instanceCount);
            iArrFld[i] ^= (i1++);
            i1 *= (int)Long.reverseBytes(Math.min(--Test.instanceCount, s - Test.instanceCount));
            i1 = s;
            switch (((((i1 * i1) >>> 1) % 1) * 5) + 13) {
            case 14:
                i1 *= (int)(f = ((i1 + 18898) + i1));
                iArrFld[i - 1] *= (i1 = ((i1 = i1) + iMeth(Test.iFld)));
                for (i17 = 2; i17 < 65; i17++) {
                    d = i17;
                    i1 = (int)Test.instanceCount;
                    Test.lFld = s;
                }
                break;
            default:
                for (l1 = 1; l1 < 65; l1++) {
                    i18 = i18;
                    i19 *= s;
                    Test.iArrFld1[i - 1] = i19;
                    d /= ((long)(f) | 1);
                    i19 += Test.iFld;
                }
                Test.lFld *= 42725;
                for (i20 = 1; i20 < 65; ++i20) {
                    i21 = i17;
                    s *= (short)i21;
                    switch ((i20 % 2) + 102) {
                    case 102:
                        Test.iArrFld1[i20 - 1] += (int)d;
                        for (i22 = 1; i22 < 2; i22++) {
                            i1 += (int)l1;
                            i21 += (int)l1;
                            s = (short)i;
                            f = -1.283F;
                        }
                    case 103:
                        f = i20;
                        break;
                    default:
                        Test.lFld += (((i20 * Test.iFld) + i17) - Test.iFld);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
