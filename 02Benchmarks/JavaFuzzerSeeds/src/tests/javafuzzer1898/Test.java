package tests.javafuzzer1898;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 05:27:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6L;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -188);
        FuzzerUtils.init(Test.lArrFld, -3908344956722619997L);
        FuzzerUtils.init(Test.fArrFld, 127.613F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l3) {

        int i3=-197, i4=50528, i5=8, i6=47658;
        float f2=33.629F, f3=-65.557F, f4=-2.844F;
        double d1=1.48799;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-75);

        i3 = (int)6673539054634039942L;
        i4 = 1;
        do {
            if (i4 != 0) {
                vMeth2_check_sum += l3 + i3 + i4 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i5 +
                    Double.doubleToLongBits(d1) + Float.floatToIntBits(f4) + i6 + FuzzerUtils.checkSum(byArr);
                return;
            }
            l3 *= (long)f2;
            l3 -= i3;
            Test.iArrFld[i4] ^= 0;
            switch (((i3 >>> 1) % 2) + 81) {
            case 81:
                i3 += (i4 * i4);
                for (f3 = 1; f3 < 7; ++f3) {
                    i3 += (int)((long)f3 | i4);
                    d1 *= i5;
                    f4 = i3;
                    i6 = 1;
                    do {
                        Test.instanceCount += Test.instanceCount;
                        i3 += (int)(-73.806F + (i6 * i6));
                    } while ((i6 += 3) < 2);
                }
                break;
            case 82:
                Test.iArrFld[i4 + 1] *= i6;
            default:
                i3 += (i4 ^ l3);
            }
        } while (++i4 < 224);
        vMeth2_check_sum += l3 + i3 + i4 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i5 +
            Double.doubleToLongBits(d1) + Float.floatToIntBits(f4) + i6 + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth1(int i2, long l1, long l2) {

        float f5=0.577F;
        int i8=0, i9=-5, i10=-10, i11=-4, i12=4;
        double d2=-107.96002, dArr[]=new double[N];
        byte by1=-123;

        FuzzerUtils.init(dArr, 90.68813);

        vMeth2(l2);
        f5 = i2;
        i8 = 1;
        while (++i8 < 230) {
            for (i9 = 7; i9 > i8; --i9) {
                for (i11 = 1; 1 > i11; i11++) {
                    i12 -= (int)l2;
                    Test.fArrFld[i11 - 1] = -2711339706L;
                    d2 *= f5;
                    i2 = -65271;
                    Test.iArrFld[i8] -= i9;
                    l1 = -82;
                    if (i8 != 0) {
                        vMeth1_check_sum += i2 + l1 + l2 + Float.floatToIntBits(f5) + i8 + i9 + i10 + i11 + i12 +
                            Double.doubleToLongBits(d2) + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    Test.iArrFld = Test.iArrFld;
                }
                dArr[i9 + 1] += by1;
                Test.iArrFld[i8 - 1] = (int)l1;
            }
        }
        vMeth1_check_sum += i2 + l1 + l2 + Float.floatToIntBits(f5) + i8 + i9 + i10 + i11 + i12 +
            Double.doubleToLongBits(d2) + by1 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(long l, float f) {

        float f1=1.233F;
        double d=-106.5442;
        int i=-4, i1=-7, i13=-11, i14=13, i15=32530, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -22145);

        f1 = 1;
        do {
            l = (long)d;
            for (i = 7; i > 1; --i) {
                try {
                    i1 = (i % -1803470559);
                    iArr[(int)(f1 - 1)] = (i % i1);
                    i1 = (205 % i1);
                } catch (ArithmeticException a_e) {}
                vMeth1(i1, Test.instanceCount, Test.instanceCount);
                f += Test.instanceCount;
                i1 += i1;
                for (i13 = i; i13 < 2; i13++) {
                    try {
                        i15 = (i14 / i);
                        i15 = (-180 / i15);
                        iArr[i13] = (i15 / i13);
                    } catch (ArithmeticException a_e) {}
                    d = i1;
                    Test.instanceCount += (((i13 * i15) + Test.instanceCount) - i14);
                    i15 %= (int)(i14 | 1);
                    l = i15;
                    i14 = i14;
                    Test.iArrFld[(int)(f1)] = -3;
                }
            }
        } while (++f1 < 231);
        vMeth_check_sum += l + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i + i1
            + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=-14, i17=-59472, i18=6750, i19=-218, i20=5, i21=39, i22=51032, i23=-33475, i24=-52824, i25=-826;
        byte by2=0;
        double d3=-1.114090;

        vMeth(Test.instanceCount, -80.339F);
        Test.instanceCount = i16;
        i16 = 98;
        for (i17 = 1; i17 < 327; ++i17) {
            Test.instanceCount *= (long)1.500F;
            i16 -= by2;
            i19 = 1;
            while (++i19 < 77) {
                Test.lArrFld[i19 - 1] = i17;
                for (i20 = 1; i20 < 1; i20++) {
                    Test.instanceCount = (long)d3;
                    d3 = Test.instanceCount;
                    Test.lArrFld[i17 + 1] = i21;
                }
            }
            for (i22 = 2; i22 < 77; ++i22) {
                i21 = (int)106L;
                for (i24 = 1; i24 < 2; ++i24) {
                    i23 >>= i25;
                    i16 += i24;
                    Test.iArrFld[i17 + 1] = (int)Test.instanceCount;
                }
            }
            i18 += i24;
            Test.instanceCount += i17;
            Test.instanceCount -= i16;
        }
        Test.iArrFld[(69 >>> 1) % N] = i20;
        Test.iArrFld[(i18 >>> 1) % N] -= i19;
        i18 = -13;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
