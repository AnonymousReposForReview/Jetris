package tests.javafuzzer813;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:21:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=16519L;
    public static byte byFld=-30;
    public static float fFld=-59.759F;
    public static volatile boolean bFld=false;
    public int iFld=-12;
    public static int iArrFld[][]=new int[N][N];
    public static double dArrFld[]=new double[N];
    public float fArrFld[]=new float[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 61072);
        FuzzerUtils.init(Test.dArrFld, 0.23041);
        FuzzerUtils.init(Test.iArrFld1, -27865);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i4=-13162, i5=-10, i6=183, i7=-12, i8=5;
        boolean b=true;
        long l2=-3627888924487100300L, lArr[]=new long[N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr, 52183L);
        FuzzerUtils.init(byArr, (byte)-79);

        for (i4 = 4; 174 > i4; i4++) {
            long l1=8L;
            float f1=-1.781F;
            Test.instanceCount -= i5;
            Test.instanceCount -= l1;
            if (true) {
                for (i6 = 1; i6 < 9; i6++) {
                    i7 += i7;
                }
                Test.instanceCount = Test.instanceCount;
                vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + l2 + FuzzerUtils.checkSum(lArr) +
                    FuzzerUtils.checkSum(byArr);
                return;
            } else {
                f1 *= i5;
                i8 = (int)4945809583317998980L;
                if (b) break;
            }
            l2 *= i4;
            lArr[i4 - 1] = Test.instanceCount;
            f1 -= i7;
            byArr[i4 - 1] += (byte)-11;
            i8 += (i4 ^ Test.instanceCount);
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + l2 + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public static long lMeth(int i3, long l, double d1) {

        int i9=31673, i10=13585, i11=15402, i12=44649, i13=0;
        short s=20921;
        boolean b1=true;

        vMeth();
        switch (((i3 >>> 1) % 9) + 33) {
        case 33:
            Test.iArrFld[(i3 >>> 1) % N][(i3 >>> 1) % N] -= -116;
            break;
        case 34:
            for (i9 = 1; i9 < 143; ++i9) {
                i10 = i9;
                for (i11 = i9; i11 < 11; ++i11) {
                    i10 += (int)Test.instanceCount;
                    d1 *= 18958;
                    i13 = 1;
                    while (++i13 < 1) {
                        d1 += d1;
                        Test.fFld *= i10;
                        i10 -= i3;
                        s &= (short)53402;
                        i12 >>= i13;
                        b1 = b1;
                    }
                }
            }
            break;
        case 35:
            Test.instanceCount -= l;
            break;
        case 36:
            i10 = (int)d1;
            break;
        case 37:
            s <<= (short)Test.instanceCount;
            break;
        case 38:
            i12 *= i10;
        case 39:
            Test.dArrFld[(i12 >>> 1) % N] = 35117;
            break;
        case 40:
            Test.iArrFld[(-2 >>> 1) % N][(i13 >>> 1) % N] -= i11;
            break;
        case 41:
            Test.fFld -= i9;
            break;
        default:
            i3 = i12;
        }
        long meth_res = i3 + l + Double.doubleToLongBits(d1) + i9 + i10 + i11 + i12 + i13 + s + (b1 ? 1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f) {

        double d=1.62471;
        int i=-246, i1=-233, i2=-117, i14=58505, i15=38824, i16=-10123, iArr[]=new int[N];
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr, -6);
        FuzzerUtils.init(fArr, 2.475F);

        for (d = 12; d < 329; ++d) {
            i <<= i;
            f = iArr[(int)(d)];
            Test.instanceCount = (--i);
            switch ((int)(((d % 2) * 5) + 85)) {
            case 91:
                for (i1 = 1; i1 < 5; ++i1) {
                    fArr = (fArr = (fArr = (fArr = fArr)));
                    i2 = (int)(((-2 - (d - Test.byFld)) - (i--)) + lMeth(-9, Test.instanceCount, d));
                }
                for (i14 = 1; i14 < 5; i14++) {
                    Test.instanceCount = Test.byFld;
                    i += i15;
                    i16 = 1;
                    while (++i16 < 2) {
                        i2 = i;
                        f -= -2786;
                        i15 -= i;
                    }
                }
                break;
            case 90:
                i2 += (-3 + (d * d));
            default:
                Test.iArrFld[(int)(d)][(int)(d + 1)] *= i2;
            }
        }
        long meth_res = Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i + i1 + i2 + i14 + i15 + i16 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=11, i18=-7, i19=13, i20=-7224, i21=-6, i22=14;
        double d2=2.36368;
        short s1=21030;
        long l3=1153883955L, lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 4387L);

        iMeth(Test.fFld);
        if (true) {
            i17 <<= 33859;
            for (i18 = 16; i18 < 378; i18++) {
                switch (((i18 % 9) * 5) + 3) {
                case 48:
                    Test.instanceCount &= i18;
                    i17 += (((i18 * Test.instanceCount) + i18) - Test.byFld);
                    d2 += 57;
                    i17 *= (int)d2;
                    break;
                case 26:
                    fArrFld[i18 - 1] = i19;
                    for (i20 = 2; i20 < 70; i20 += 3) {
                        s1 <<= (short)i17;
                        Test.instanceCount <<= -11;
                        for (l3 = 1; 4 > l3; ++l3) {
                            i22 = -9;
                            switch ((int)(((l3 % 2) * 5) + 121)) {
                            case 122:
                                i21 -= i19;
                                switch ((i20 % 6) + 51) {
                                case 51:
                                    Test.byFld = (byte)l3;
                                    break;
                                case 52:
                                    Test.byFld += (byte)(((l3 * i22) + i19) - l3);
                                    Test.fFld += (float)d2;
                                    i22 &= i19;
                                    break;
                                case 53:
                                    i22 <<= i17;
                                    i19 += (int)d2;
                                    i21 <<= i22;
                                    break;
                                case 54:
                                    d2 += -53469;
                                    if (Test.bFld) break;
                                    fArrFld[i18 - 1] -= -2;
                                    break;
                                case 55:
                                    Test.bFld = true;
                                    Test.instanceCount = -241L;
                                    break;
                                case 56:
                                    Test.fFld = i21;
                                default:
                                    i22 = (int)-82.598F;
                                }
                                break;
                            case 127:
                                lArr1[i18 - 1] ^= -62279;
                                break;
                            }
                        }
                    }
                    break;
                case 19:
                    Test.byFld = (byte)129;
                case 36:
                    i22 = 52;
                    break;
                case 32:
                    Test.iArrFld[i18 + 1][i18 + 1] *= i18;
                    break;
                case 41:
                    i21 = (int)14L;
                    break;
                case 45:
                    lArr1[i18 - 1] = iFld;
                case 20:
                    i21 += (i18 * i18);
                case 9:
                    Test.instanceCount -= (long)-1.209F;
                    break;
                }
            }
        } else if (Test.bFld) {
            i19 |= i22;
        } else {
            s1 = (short)i17;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
