package tests.javafuzzer70;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:44:14 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6155L;
    public static float fFld=-2.695F;
    public static int iFld=139;
    public static int iFld1=39;
    public static short sFld=868;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i5=-94, i6=-1, i7=63614, i8=-183, i9=-10, iArr2[]=new int[N];
        double d2=-1.49663;
        byte by2=-61;

        FuzzerUtils.init(iArr2, 254);

        i5 = 1;
        while ((i5 += 2) < 224) {
            for (i6 = 1; i6 < 14; i6++) {
                Test.lArrFld = Test.lArrFld;
                Test.fFld += (i6 + Test.iFld1);
                Test.iFld1 %= (int)(i5 | 1);
                Test.instanceCount -= 5385;
                Test.fFld += i6;
            }
        }
        Test.instanceCount = -11;
        iArr2[(57329 >>> 1) % N] *= 24080;
        d2 = -5;
        i7 = Test.iFld;
        by2 %= (byte)-7L;
        for (i8 = 6; i8 < 367; ++i8) {
            i7 += (i8 * i8);
            iArr2[i8] -= (int)142L;
        }
        vMeth2_check_sum += i5 + i6 + i7 + Double.doubleToLongBits(d2) + by2 + i8 + i9 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth1(byte by1, int i4, long l) {

        short s1=23439;
        double d1=-127.37296;
        long l1=-2770285625L;
        int i10=10, i11=6, i12=-188, iArr1[][]=new int[N][N];
        boolean b=false;
        float f1=0.950F;

        FuzzerUtils.init(iArr1, 37505);

        Test.fFld = (l--);
        i4 &= (int)(i4 * ((s1 * i4) + (i4 * Test.fFld)));
        iArr1[(i4 >>> 1) % N][(i4 >>> 1) % N] *= (int)((d1++) + ((++Test.iFld) * (Test.iFld - Test.iFld)));
        vMeth2();
        for (l1 = 6; l1 < 241; l1++) {
            if (b) continue;
            for (i11 = (int)(l1); 7 > i11; ++i11) {
                iArr1[i11 - 1][(int)(l1)] = i11;
                f1 = 1;
                while (++f1 < 1) {
                    Test.lArrFld[(int)(l1)] += -26;
                    Test.instanceCount += (-13284L + (f1 * f1));
                    i10 = Test.iFld;
                    i12 >>= Test.iFld1;
                    i10 = (int)d1;
                    iArr1[(int)(f1)][(int)(f1 + 1)] = Test.iFld1;
                }
            }
        }
        vMeth1_check_sum += by1 + i4 + l + s1 + Double.doubleToLongBits(d1) + l1 + i10 + (b ? 1 : 0) + i11 + i12 +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, int i1, int i2) {

        double d=-127.118088, d3=-73.55872, dArr[]=new double[N];
        int i3=13, i13=19, i14=63080, i15=10, iArr[]=new int[N];
        byte by=82, byArr[]=new byte[N];
        short s=28343;
        float f=32.261F;
        boolean b1=false;

        FuzzerUtils.init(iArr, -8);
        FuzzerUtils.init(dArr, -82.33647);
        FuzzerUtils.init(byArr, (byte)68);

        for (d = 19; 384 > d; d++) {
            i += (int)d;
            by += (byte)((long)d | Test.instanceCount);
            s /= (short)((--iArr[(int)(d)]) | 1);
            i3 -= (int)((i - (f++)) - d);
            vMeth1(by, Test.iFld1, -1353552804909666087L);
        }
        i13 = 1;
        while (++i13 < 293) {
            for (i14 = i13; 6 > i14; ++i14) {
                Test.iFld1 += (int)116L;
                switch (i14 + 104) {
                case 104:
                    i2 <<= i2;
                    i3 += i14;
                case 105:
                    Test.instanceCount += Test.instanceCount;
                    i1 = -677;
                    i1 = Test.iFld1;
                case 106:
                case 107:
                    d3 -= Test.iFld;
                    break;
                case 108:
                    d3 *= -45;
                    break;
                case 109:
                    i1 >>= i2;
                    break;
                case 110:
                    if (b1) continue;
                case 111:
                    f += i;
                case 112:
                    d3 = 41034;
                case 113:
                    i = -49441;
                    break;
                case 114:
                    Test.fFld += ((long)i14 | (long)f);
                case 115:
                    d3 = i13;
                    break;
                case 116:
                case 117:
                    try {
                        Test.iFld1 = (-11 % iArr[i13 + 1]);
                        Test.iFld = (13994 % i2);
                        i = (115 % iArr[i14 + 1]);
                    } catch (ArithmeticException a_e) {}
                case 118:
                    if (b1) break;
                    break;
                case 119:
                    Test.instanceCount += i14;
                case 120:
                    Test.instanceCount -= Test.iFld1;
                    break;
                case 121:
                    i15 = 43;
                    break;
                case 122:
                case 123:
                    dArr[i13] -= Test.instanceCount;
                    break;
                case 124:
                    i1 -= s;
                    break;
                case 125:
                    d3 -= -5;
                    break;
                case 126:
                    f += Test.fFld;
                case 127:
                case 128:
                    iArr[i13] = (int)Test.instanceCount;
                case 129:
                    Test.instanceCount = i3;
                    break;
                case 130:
                    i15 -= (int)Test.instanceCount;
                    break;
                case 131:
                    i15 += i14;
                    break;
                case 132:
                    iArr[i13 - 1] = i13;
                    break;
                case 133:
                    Test.iFld1 += (((i14 * Test.iFld1) + Test.iFld1) - f);
                    break;
                case 134:
                    f += (252 + (i14 * i14));
                    break;
                case 135:
                case 136:
                    Test.lArrFld[i13] *= Test.instanceCount;
                    break;
                case 137:
                    Test.iFld1 += (int)Test.instanceCount;
                    break;
                case 138:
                    iArr[i13] *= i2;
                    break;
                case 139:
                    Test.iFld += -6776;
                    break;
                case 140:
                    Test.instanceCount -= -32436;
                    break;
                case 141:
                    Test.instanceCount >>= Test.iFld;
                    break;
                case 142:
                    if (b1) continue;
                    break;
                case 143:
                    i3 ^= (int)Test.instanceCount;
                    break;
                case 144:
                case 145:
                    iArr[i14 - 1] -= i14;
                    break;
                case 146:
                    iArr = iArr;
                    break;
                case 147:
                    i15 -= i15;
                    break;
                case 148:
                    Test.lArrFld[i13] >>= Test.iFld;
                    break;
                case 149:
                    byArr[i13 + 1] |= (byte)i1;
                    break;
                case 150:
                    Test.instanceCount += (long)d;
                    break;
                case 151:
                    if (i14 != 0) {
                        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + i3 + by + s +
                            Float.floatToIntBits(f) + i13 + i14 + i15 + Double.doubleToLongBits(d3) + (b1 ? 1 : 0) +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    break;
                case 152:
                    i1 += i14;
                case 153:
                    if (i1 != 0) {
                        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + i3 + by + s +
                            Float.floatToIntBits(f) + i13 + i14 + i15 + Double.doubleToLongBits(d3) + (b1 ? 1 : 0) +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    break;
                case 154:
                    Test.fFld = i2;
                    break;
                case 155:
                    Test.fFld += i3;
                    break;
                case 156:
                    Test.instanceCount >>= s;
                    break;
                case 157:
                    i3 = (int)Test.instanceCount;
                    break;
                case 158:
                    Test.fFld -= i2;
                    break;
                case 159:
                    i1 += (((i14 * i13) + s) - Test.instanceCount);
                    break;
                case 160:
                    Test.iFld += (i14 | i15);
                    break;
                case 161:
                    i3 = (int)Test.instanceCount;
                    break;
                case 162:
                    if (i != 0) {
                        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + i3 + by + s +
                            Float.floatToIntBits(f) + i13 + i14 + i15 + Double.doubleToLongBits(d3) + (b1 ? 1 : 0) +
                            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
                            FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    break;
                case 163:
                    Test.lArrFld[i14 - 1] = i;
                case 164:
                    i3 = (int)Test.instanceCount;
                case 165:
                case 166:
                    i3 = (int)d3;
                    break;
                case 167:
                    s = (short)i13;
                    break;
                case 168:
                    i >>= -51;
                case 169:
                case 170:
                    if (b1) continue;
                    break;
                case 171:
                    Test.fFld += (1.747F + (i14 * i14));
                    break;
                case 172:
                case 173:
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + Double.doubleToLongBits(d) + i3 + by + s + Float.floatToIntBits(f) + i13 + i14
            + i15 + Double.doubleToLongBits(d3) + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i16=151, i17=11, i18=42, i19=5, i20=-9, i21=-8, i22=-764, i23=2, i24=216, i25=-5, iArr3[]=new int[N];
        double d4=-36.109777, d5=-2.92739;
        boolean b2=false;

        FuzzerUtils.init(iArr3, -147);

        vMeth(Test.iFld, Test.iFld1, Test.iFld);
        Test.iFld <<= (int)-1697614315L;
        Test.lArrFld[(Test.iFld >>> 1) % N] >>= Test.iFld;
        for (i16 = 17; i16 < 323; ++i16) {
            Test.iFld |= i16;
            Test.iFld1 *= (int)Test.instanceCount;
            i17 += (i16 * i16);
            d4 = 1;
            do {
                Test.lArrFld[(int)(d4)] += Test.instanceCount;
                for (i18 = 1; 1 > i18; ++i18) {
                    Test.lArrFld[i18] /= 2;
                    i17 %= (int)(Test.sFld | 1);
                }
            } while (++d4 < 82);
        }
        for (i20 = 3; i20 < 122; i20++) {
            iArr3[i20] = 4;
            Test.instanceCount = (long)d4;
            b2 = b2;
            switch (((i20 % 7) * 5) + 124) {
            case 135:
                i22 = 1;
                do {
                    Test.fFld += 16835;
                    iArr3[i20 + 1] -= (int)27846L;
                    i17 /= 46;
                    i17 += i17;
                    i21 <<= -232;
                    for (i23 = 1; 1 > i23; i23 += 2) {
                        i24 += (int)Test.instanceCount;
                        iArr3[i20] = (int)Test.fFld;
                        i25 += (i23 | i24);
                        Test.instanceCount = 6;
                        Test.iFld = (int)Test.instanceCount;
                    }
                    Test.fFld -= i16;
                } while (++i22 < 211);
                break;
            case 156:
                if (b2) break;
                break;
            case 142:
                d5 -= Test.iFld;
                break;
            case 139:
                try {
                    iArr3[i20 - 1] = (Test.iFld % 58035);
                    Test.iFld = (i19 % 718050065);
                    i24 = (i16 % i21);
                } catch (ArithmeticException a_e) {}
                break;
            case 149:
                Test.fFld = Test.fFld;
                break;
            case 127:
                i25 = (int)d4;
                break;
            case 131:
                i24 += i20;
                break;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
