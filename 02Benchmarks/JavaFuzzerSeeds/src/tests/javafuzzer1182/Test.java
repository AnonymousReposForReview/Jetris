package tests.javafuzzer1182;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:10:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10595L;
    public static float fFld=1.393F;
    public static byte byFld=34;
    public static volatile short sFld=-10802;
    public static volatile boolean bFld=true;
    public static double dFld=0.87009;
    public static volatile int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static int iMeth1(long l1, int i1, float f) {

        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 0L);

        lArr = (lArr = (lArr = (lArr = lArr)));
        long meth_res = l1 + i1 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5) {

        double d1=-123.40655;
        int i7=-136;
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -40324L);

        for (int i6 : Test.iArrFld) {
            i5 <<= i5;
            if (b) {
                d1 += Test.fFld;
                i7 = 1;
                do {
                    if (b) continue;
                    switch (((i7 % 10) * 5) + 4) {
                    case 54:
                        Test.iArrFld[i7] -= i5;
                        break;
                    case 51:
                        i6 += (i7 | Test.instanceCount);
                        break;
                    case 26:
                        Test.fFld *= Test.fFld;
                    case 41:
                        Test.iArrFld[i7] -= -3;
                        i5 = (int)-1289718577L;
                        Test.byFld = (byte)i6;
                        break;
                    case 52:
                        i6 += (((i7 * Test.instanceCount) + i7) - i6);
                        Test.fFld += Test.fFld;
                        break;
                    case 5:
                        Test.iArrFld[i7] = (int)Test.instanceCount;
                        break;
                    case 35:
                    case 10:
                        Test.sFld -= (short)i7;
                        break;
                    case 36:
                        lArr1[i7 + 1] += i5;
                        break;
                    case 16:
                        Test.sFld <<= (short)i5;
                        break;
                    }
                } while (++i7 < 4);
            } else if (false) {
                i5 *= -8;
            } else {
                d1 += i7;
            }
        }
        long meth_res = i5 + Double.doubleToLongBits(d1) + i7 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        short s=-9217;
        int i4=219, i8=77, i9=55024, i10=-78, i11=-22958, i12=-2315, i13=5;
        double d=0.58462;

        s -= (short)(((i4 + d) - (-i4)) + Math.max(++Test.instanceCount, lMeth(i4)));
        Test.iArrFld[(i4 >>> 1) % N] = i4;
        i4 += (int)Test.fFld;
        for (i8 = 4; 368 > i8; i8++) {
            switch (((64189 >>> 1) % 2) + 121) {
            case 121:
                for (i10 = 1; i10 < 5; ++i10) {
                    i11 >>= i11;
                    i4 >>= i10;
                    i11 += (i10 * i10);
                    Test.iArrFld[i8 + 1] *= (int)Test.instanceCount;
                }
                for (i12 = 1; 5 > i12; ++i12) {
                    Test.instanceCount -= Test.byFld;
                }
                if (Test.bFld) {
                    Test.iArrFld[i8 + 1] -= i12;
                    i13 *= (int)d;
                } else if (Test.bFld) {
                    s %= (short)-5324;
                } else {
                    Test.fFld += (((i8 * i13) + Test.instanceCount) - Test.byFld);
                }
            case 122:
                d -= 51188;
            default:
                i4 = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += s + i4 + Double.doubleToLongBits(d) + i8 + i9 + i10 + i11 + i12 + i13;
    }

    public static int iMeth(long l) {

        int i=5, i2=-13, i3=-34058, i14=35235, i15=-54418, i16=-24323;
        float f1=-1.308F;
        double d2=20.57853;

        i = (int)(((i - i) - iMeth1(9077626961602533988L, i, f1)) + (Float.intBitsToFloat(i) + (f1 + i)));
        for (i2 = 3; i2 < 236; i2++) {
            vMeth();
            for (i14 = 1; 7 > i14; ++i14) {
                l *= i;
                Test.instanceCount += i14;
                try {
                    i3 = (i3 % -20541);
                    i15 = (i14 / Test.iArrFld[i14 - 1]);
                    Test.iArrFld[i2] = (-47432 % Test.iArrFld[i14]);
                } catch (ArithmeticException a_e) {}
                Test.byFld -= (byte)i15;
                if (i3 != 0) {
                }
                for (d2 = 1; d2 < 2; ++d2) {
                    i = (int)d2;
                    if (Test.bFld) {
                        Test.byFld += (byte)d2;
                        i3 += (int)d2;
                        i16 <<= 192;
                    } else {
                        Test.dFld += l;
                    }
                }
            }
        }
        long meth_res = l + i + Float.floatToIntBits(f1) + i2 + i3 + i14 + i15 + Double.doubleToLongBits(d2) + i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=200, i18=23339, i19=-2, i20=14861, i21=-58860, i22=-49649, i23=-3, i24=51748, i25=5, i26=-146;
        float f2=-110.367F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, 804890651L);

        iMeth(Test.instanceCount);
        Test.instanceCount += i17;
        for (f2 = 1; f2 < 210; f2++) {
            for (i19 = (int)(f2); i19 < 120; ++i19) {
                i18 >>= (int)Test.instanceCount;
            }
            i18 = i20;
            for (i21 = (int)(f2); 120 > i21; i21++) {
                i22 |= i20;
                Test.byFld = (byte)i19;
                Test.dFld += Test.fFld;
                Test.instanceCount += (8946 + (i21 * i21));
                Test.instanceCount *= i19;
                lArr2[i21 + 1] &= i21;
                for (i23 = 1; 1 < i23; i23 -= 3) {
                    sArrFld[i21] -= (short)i24;
                    Test.instanceCount += (((i23 * Test.instanceCount) + Test.instanceCount) - i23);
                    i22 = -3;
                    i20 += (i23 * i23);
                    i22 += (105 + (i23 * i23));
                    Test.instanceCount -= (long)Test.fFld;
                    i24 >>= i17;
                    Test.iArrFld[i23 + 1] *= i22;
                    i20 += -1;
                }
                lArr2 = lArr2;
                for (i25 = 1; i25 < 1; i25 += 2) {
                    i18 = i17;
                    Test.instanceCount += Test.instanceCount;
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)150);
                    i26 += (i25 ^ Test.instanceCount);
                    lArr2[i21 - 1] <<= Test.instanceCount;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
