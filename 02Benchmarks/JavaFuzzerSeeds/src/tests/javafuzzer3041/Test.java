package tests.javafuzzer3041;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:05:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3264523280387266691L;
    public static boolean bFld=false;
    public static short sFld=16793;
    public static volatile double dFld=2.49932;
    public int iFld=-9;
    public int iArrFld[]=new int[N];

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i, float f1, long l) {

        int i1=173, i2=10757, i3=32195, i4=8, iArr[]=new int[N];
        double d=67.120058;
        long l1=8246082413901155828L;
        byte by=124, byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 208);
        FuzzerUtils.init(byArr, (byte)-103);

        iArr[(i >>> 1) % N] = i;
        i -= i;
        for (i1 = 10; i1 < 206; i1++) {
            if (Test.bFld) {
                i = i;
                vMeth1_check_sum += i + Float.floatToIntBits(f1) + l + i1 + i2 + Double.doubleToLongBits(d) + l1 + i3 +
                    i4 + by + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
                return;
            } else if (Test.bFld) {
                i = i1;
            }
            d -= l1;
            byArr = byArr;
            i2 = i2;
            i2 += i2;
            for (i3 = i1; i3 < 8; ++i3) {
                i4 += (i3 | i1);
                i = i;
                i2 -= by;
                i = 13;
            }
        }
        vMeth1_check_sum += i + Float.floatToIntBits(f1) + l + i1 + i2 + Double.doubleToLongBits(d) + l1 + i3 + i4 + by
            + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth() {

        int i5=-38606, i6=-3, i7=-3, i8=-75, i9=10, i10=7, i11=12, i12=210, i13=59742, iArr1[]=new int[N];
        float f2=0.549F, f3=123.384F, fArr[]=new float[N];
        byte by1=123;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -23824);
        FuzzerUtils.init(fArr, 0.471F);
        FuzzerUtils.init(lArr, -11L);

        vMeth1(i5, f2, Test.instanceCount);
        f3 = 1;
        do {
            iArr1[(int)(f3)] *= 21322;
        } while (++f3 < 140);
        for (i6 = 4; i6 < 133; ++i6) {
            for (i8 = 1; i8 < 12; i8++) {
                double d1=0.78239;
                i9 += (int)d1;
            }
            fArr[i6 - 1] -= i8;
            i7 += (int)(-6L + (i6 * i6));
            for (i10 = i6; i10 < 12; ++i10) {
                lArr[i10] = Test.instanceCount;
                for (i12 = 1; 1 > i12; i12++) {
                    by1 /= (byte)(i10 | 1);
                    i7 += (i12 | i12);
                }
                if (Test.bFld) continue;
                i7 += (i10 | (long)f3);
            }
        }
        vMeth_check_sum += i5 + Float.floatToIntBits(f2) + Float.floatToIntBits(f3) + i6 + i7 + i8 + i9 + i10 + i11 +
            i12 + i13 + by1 + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static float fMeth(float f) {

        int i14=45492, i15=-39984, i16=53684, i17=-1211, i18=11, i19=10, iArr2[]=new int[N];
        byte by2=38;
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr2, 47755);
        FuzzerUtils.init(fArr1, -71.364F);

        vMeth();
        i14 >>>= -11;
        iArr2[(0 >>> 1) % N] = -9;
        for (i15 = 4; i15 < 353; i15++) {
            i16 += (i15 - i15);
            Test.sFld += (short)f;
            fArr1[i15 - 1] = i17;
            i17 += (((i15 * Test.instanceCount) + f) - i17);
        }
        Test.instanceCount = Test.sFld;
        Test.instanceCount %= ((long)(Test.dFld) | 1);
        for (i18 = 6; i18 < 153; i18++) {
            by2 = (byte)i16;
        }
        i14 -= (int)Test.instanceCount;
        i16 = i18;
        Test.instanceCount &= i14;
        long meth_res = Float.floatToIntBits(f) + i14 + i15 + i16 + i17 + i18 + i19 + by2 + FuzzerUtils.checkSum(iArr2)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f4=2.494F;
        int i20=0, i21=13, i22=-57400, i23=47974, i24=6, i25=12295, i26=-175, i27=7, i28=-909, i29=-60903, i30=-93,
            i31=12, i32=-7779, i33=-1, i34=-49, iArr3[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr3, -1);
        FuzzerUtils.init(lArr1, 34280L);

        Test.instanceCount -= (long)fMeth(f4);
        iFld -= iFld;
        for (i20 = 2; i20 < 142; i20++) {
            for (i22 = 2; i22 < 179; ++i22) {
                i23 = i21;
            }
        }
        for (i24 = 10; i24 < 325; ++i24) {
            try {
                i25 = (iArrFld[i24 + 1] % 51);
                i23 = (iArrFld[i24 + 1] % i20);
                iFld = (-195 / i23);
            } catch (ArithmeticException a_e) {}
            try {
                i21 = (i22 / i23);
                iArr3[i24] = (33186 % i20);
                i23 = (i22 % iArrFld[i24 + 1]);
            } catch (ArithmeticException a_e) {}
        }
        for (i26 = 16; i26 < 279; i26++) {
            i23 += i23;
        }
        i21 = i21;
        Test.bFld = Test.bFld;
        i21 -= (int)f4;
        i23 += (int)Test.instanceCount;
        lArr1[(i24 >>> 1) % N] += -48665;
        i21 -= iFld;
        for (i28 = 4; 261 > i28; ++i28) {
            if (Test.bFld) {
                i23 = i21;
                iFld *= (int)Test.instanceCount;
                i25 = (int)Test.instanceCount;
            } else {
                iFld <<= -20649;
                i30 = 1;
                while (++i30 < 98) {
                    for (i31 = i28; i31 < 1; i31++) {
                        lArr1[i31] -= 0L;
                        Test.instanceCount -= i25;
                        iArrFld[i31] -= i30;
                    }
                    for (i33 = 1; i33 < 1; i33++) {
                        iFld = 9;
                    }
                    i34 -= i26;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
