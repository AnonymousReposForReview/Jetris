package tests.javafuzzer1406;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 19:53:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static boolean bFld=true;
    public static float fFld=2.987F;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.979F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i8=2, i9=35, i10=0, i11=-4, i12=26, i13=7;
        double d=-2.121607, d1=-126.18834, dArr[]=new double[N];
        float f1=1.279F, fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(dArr, 28.62016);
        FuzzerUtils.init(fArr, 1.8F);
        FuzzerUtils.init(lArr1, 71L);

        Test.instanceCount *= Test.instanceCount;
        i8 = 200;
        do {
            i9 >>= (int)Test.instanceCount;
            for (d = 1; d < 8; ++d) {
                i9 >>= i10;
                Test.instanceCount -= i10;
                d1 += Test.instanceCount;
            }
            i10 += 5932;
            for (i11 = i8; i11 < 8; ++i11) {
                dArr[i11] *= -7L;
                switch (i11 % 1) {
                case 0:
                    i13 = 1;
                    do {
                        fArr[i13 - 1] = i13;
                        i12 += (int)Test.instanceCount;
                        f1 += -784;
                    } while (++i13 < 1);
                    break;
                default:
                    lArr1[i11 - 1] = -47284;
                }
            }
        } while (--i8 > 0);
        vMeth2_check_sum += i8 + i9 + Double.doubleToLongBits(d) + i10 + Double.doubleToLongBits(d1) + i11 + i12 + i13
            + Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(long l) {

        double d2=26.90980;
        int i14=14601, i15=-7, i16=-224, i17=9, i18=25, i19=-3, iArr[]=new int[N];
        short s=1651;
        byte by=-40;

        FuzzerUtils.init(iArr, 90);

        vMeth2();
        Test.instanceCount = -46;
        Test.instanceCount = (long)50.536F;
        l += (long)d2;
        iArr[(i14 >>> 1) % N] &= (int)Test.instanceCount;
        d2 *= i14;
        for (i15 = 21; i15 < 368; ++i15) {
            Test.fArrFld[i15 + 1] -= l;
            Test.instanceCount <<= i14;
            i17 -= s;
            for (i18 = 5; i18 > 1; i18 -= 2) {
                i16 = (int)4892710711623322302L;
                l += i18;
                by -= (byte)s;
                try {
                    iArr[i18 - 1] = (7168 / i17);
                    i14 = (i19 % iArr[i15 + 1]);
                    i17 = (-1232523592 % i15);
                } catch (ArithmeticException a_e) {}
            }
        }
        vMeth1_check_sum += l + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + s + i18 + i19 + by +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i6, int i7) {

        float f=0.675F;
        int i20=-19192, i21=15777, i22=-14, i23=-152;
        double d3=1.115987;
        byte by1=-43;

        i6 >>= (int)(i7 * ((i6 + Test.instanceCount) - (f - i6)));
        switch ((((i7 >>> 1) % 1) * 5) + 60) {
        case 65:
            vMeth1(Test.instanceCount);
            for (i20 = 9; 342 > i20; ++i20) {
                d3 = i7;
                i7 -= (int)-1.70523;
                for (i22 = 1; i22 < 5; ++i22) {
                    i6 += (int)Test.instanceCount;
                    switch (((i7 >>> 1) % 1) + 125) {
                    case 125:
                    }
                    i23 = (int)Test.instanceCount;
                    try {
                        i6 = (-124 / i7);
                        i23 = (i7 / i22);
                        i7 = (-157 % i20);
                    } catch (ArithmeticException a_e) {}
                    i21 -= 0;
                    Test.instanceCount -= by1;
                    i21 |= i6;
                    f = i7;
                }
            }
            break;
        default:
            i23 += i6;
        }
        vMeth_check_sum += i6 + i7 + Float.floatToIntBits(f) + i20 + i21 + Double.doubleToLongBits(d3) + i22 + i23 +
            by1;
    }

    public void mainTest(String[] strArr3) {

        int i=-11, i1=111, i2=0, i3=-39, i4=-61137, i5=-1, i24=-220, i25=5110, i26=-85, iArr1[]=new int[N], iArr2[]=new
            int[N];
        short s1=-18285;
        double d4=72.117766;
        boolean bArr[]=new boolean[N];
        long lArr2[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(iArr1, -14);
        FuzzerUtils.init(lArr2, -14L);
        FuzzerUtils.init(iArr2, -164);

        for (i = 11; i < 202; ++i) {
            i1 <<= (i1++);
            bArr[(i1 >>> 1) % N] = Test.bFld;
            for (i2 = i; i2 < 131; ++i2) {
                for (i4 = 1; i4 < 1; i4++) {
                    float f2=-36.314F;
                    byte by2=70;
                    i5 -= i1;
                    vMeth(219, i);
                    i1 = i;
                    f2 = i1;
                    i5 = i5;
                    i24 &= by2;
                    f2 += (((i4 * i5) + f2) - s1);
                }
                i5 <<= i4;
                iArr1 = FuzzerUtils.int1array(N, (int)209);
                for (i25 = 1; i25 < 1; ++i25) {
                    d4 -= Test.instanceCount;
                    if (false) {
                        Test.instanceCount *= (long)Test.fFld;
                        Test.instanceCount -= i5;
                    } else {
                        if (Test.bFld) {
                            i24 += (int)Test.instanceCount;
                            Test.fFld += Test.instanceCount;
                            Test.fArrFld[i2 - 1] *= i3;
                            Test.instanceCount = i5;
                        }
                        i5 += (((i25 * i3) + i24) - i2);
                        Test.instanceCount = i25;
                        i5 += (int)Test.instanceCount;
                    }
                    lArr2[i2 + 1] = 54228;
                    Test.fFld -= i26;
                    iArr2[i2 - 1] >>= -8636;
                }
            }
        }


    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
