package tests.javafuzzer75;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 21:49:34 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=23769L;
    public static volatile float fFld=-2.894F;
    public static boolean bFld=true;
    public static double dFld=-17.40670;
    public static volatile byte byFld=17;
    public short sFld=-19038;
    public static long lFld=-8L;
    public static int iArrFld[][]=new int[N][N];
    public static boolean bArrFld[][]=new boolean[N][N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -30580);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(long l, double d1) {

        int i7=-9, i8=-185, i9=118, i10=-9, i11=12, i12=94, i13=42, i14=-71, i15=12836;
        boolean b1=true;
        short s=-30233;
        long lArr1[][]=new long[N][N];
        byte byArr[]=new byte[N];

        FuzzerUtils.init(lArr1, 33945L);
        FuzzerUtils.init(byArr, (byte)14);

        for (i7 = 3; i7 < 226; ++i7) {
            b1 = b1;
            for (i9 = 7; i9 > 1; --i9) {
                if (b1) {
                    lArr1[i7 - 1][i7 - 1] = i7;
                    for (i11 = 1; i11 < 2; ++i11) {
                        i10 += (i11 * Test.fFld);
                    }
                    i10 += i9;
                } else if (b1) {
                    for (i13 = 2; i13 > i9; --i13) {
                        byArr = byArr;
                        if (true) continue;
                        i15 >>= -12;
                        i8 -= i8;
                        Test.fFld -= 10;
                        s ^= (short)19604L;
                    }
                }
            }
        }
        long meth_res = l + Double.doubleToLongBits(d1) + i7 + i8 + (b1 ? 1 : 0) + i9 + i10 + i11 + i12 + i13 + i14 +
            i15 + s + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1() {

        int i6=-241, i16=-16569, i17=-6, i18=-10, i19=-62895, i20=-133, i21=-52623;
        double d2=0.33329, dArr[][]=new double[N][N];
        boolean b2=true;
        long lArr[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(dArr, 1.27626);
        FuzzerUtils.init(lArr, -23275L);
        FuzzerUtils.init(fArr, 7.295F);

        i6 -= (int)(dArr[(i6 >>> 1) % N][(i6 >>> 1) % N]--);
        lArr[(i6 >>> 1) % N] += iMeth2(Test.instanceCount, d2);
        b2 = b2;
        fArr[(236 >>> 1) % N] = i6;
        Test.fFld = i6;
        for (i16 = 3; i16 < 327; i16++) {
            for (i18 = 1; 5 > i18; i18++) {
                i6 *= i18;
                if (b2) break;
                switch ((i18 % 10) + 83) {
                case 83:
                    i17 = i18;
                    for (i20 = i16; i20 < 2; ++i20) {
                        i17 = i21;
                        Test.iArrFld[i20 + 1][i18 - 1] += i17;
                        b2 = b2;
                    }
                    break;
                case 84:
                    i6 = 244;
                    break;
                case 85:
                    fArr[i18] -= i6;
                    break;
                case 86:
                    i17 = 228;
                    break;
                case 87:
                    if (false) break;
                    break;
                case 88:
                    Test.instanceCount += (i18 | Test.instanceCount);
                    break;
                case 89:
                    i17 += (i18 * Test.instanceCount);
                    break;
                case 90:
                    Test.instanceCount += i20;
                    break;
                case 91:
                    i21 = (int)Test.fFld;
                    break;
                case 92:
                    if (b2) break;
                    break;
                default:
                    i17 -= i21;
                }
            }
        }
        long meth_res = i6 + Double.doubleToLongBits(d2) + (b2 ? 1 : 0) + i16 + i17 + i18 + i19 + i20 + i21 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, int i2, boolean b) {

        int i3=-14, i4=0, i5=12, i22=-13;
        double d=-39.98524;

        i3 = 1;
        do {
            if (b) {
                i4 = 1;
                while (++i4 < 6) {
                    i2 += i4;
                    i2 ^= i2;
                    if (b = (-6 == i2)) break;
                    b = (b = ((Test.iArrFld[i4][i4 - 1] *= i3) <= (-209 - (-1622276776L >> (i2 - i4)))));
                    d = (d -= ((i3 * i2) - (f + i4)));
                    i5 = (int)Math.abs(--Test.instanceCount);
                    i2 -= iMeth1();
                    i5 = i4;
                    b = b;
                    i22 = 1;
                    while (++i22 < 1) {
                        i5 += (int)(2.404F + (i22 * i22));
                        i2 += (((i22 * i4) + Test.fFld) - i2);
                    }
                }
            } else if (b) {
                i2 = (int)Test.fFld;
            } else {
                i5 -= i5;
            }
        } while (++i3 < 269);
        long meth_res = Float.floatToIntBits(f) + i2 + (b ? 1 : 0) + i3 + i4 + Double.doubleToLongBits(d) + i5 + i22;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=95, i1=-17707, i24=34613, i25=-208, i26=11770, i27=35966, i28=-5, i29=4;
        long l1=-6L;

        for (i = 2; 252 > i; ++i) {
            int i23=-6;
            Test.instanceCount = ((i1++) * iMeth(Test.fFld, i1, Test.bFld));
            Test.iArrFld[i][i - 1] = (int)-2.717F;
            Test.bArrFld[i - 1][i + 1] = Test.bFld;
            Test.dFld -= i23;
            for (i24 = i; 101 > i24; ++i24) {
                i23 >>= i23;
                fArrFld[i24 - 1] = Test.instanceCount;
                i1 = (int)Test.instanceCount;
                Test.byFld *= (byte)Test.instanceCount;
                i23 *= i24;
                i25 -= i1;
                Test.fFld %= (i1 | 1);
                sFld += (short)(i24 * i24);
                i1 = i;
            }
            for (i26 = 4; i26 < 101; ++i26) {
                Test.lFld = Test.byFld;
                Test.fFld += (i26 * i26);
                fArrFld[i26] += (float)Test.dFld;
                for (i28 = 1; 2 > i28; ++i28) {
                    i25 = (int)Test.dFld;
                    i27 += (((i28 * i27) + Test.fFld) - Test.fFld);
                    i29 = i23;
                    l1 += (i28 | i24);
                    Test.lFld >>= i;
                    i29 = (int)Test.lFld;
                    Test.iArrFld[i28 - 1][i28 + 1] *= (int)Test.dFld;
                    i23 >>= i28;
                    Test.dFld -= -3L;
                }
                Test.lFld = i27;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
