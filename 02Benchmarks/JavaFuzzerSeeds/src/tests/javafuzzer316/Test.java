package tests.javafuzzer316;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:44:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3614441425L;
    public static boolean bFld=false;
    public static float fFld=23.109F;
    public static short sFld=-32143;
    public byte byFld=44;
    public static long lArrFld[]=new long[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -4L);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i1) {

        int i2=7, i3=50, i4=32003, i5=-37931, i6=-225, i7=60523, i8=-27826, iArr[]=new int[N];
        double d1=-2.129703;
        float f=-2.147F, fArr[]=new float[N];
        boolean b=true;
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr, -1.18F);
        FuzzerUtils.init(sArr, (short)9827);
        FuzzerUtils.init(iArr, 23);

        i2 = 1;
        while (++i2 < 247) {
            Test.instanceCount -= i2;
        }
        fArr[(i2 >>> 1) % N] += i2;
        sArr[(i2 >>> 1) % N] = (short)-44120;
        for (i3 = 365; 13 < i3; i3--) {
            i1 -= (int)Test.instanceCount;
        }
        try {
            fArr[(i3 >>> 1) % N] += i1;
            for (i5 = 1; i5 < 255; ++i5) {
                switch ((i5 % 2) + 123) {
                case 123:
                    Test.instanceCount = (long)d1;
                    d1 *= 57494;
                    for (i7 = 1; i7 < 6; i7++) {
                        i6 += i8;
                        iArr[i5] <<= (int)Test.instanceCount;
                    }
                    break;
                case 124:
                    iArr[i5] = (int)f;
                    break;
                default:
                    b = false;
                }
            }
        }
        catch (UserDefinedExceptionTest exc1) {
            iArr[(i7 >>> 1) % N] = i6;
        }
        vMeth1_check_sum += i1 + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 +
            Float.floatToIntBits(f) + (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i9=-155, i10=3, i11=157, i12=30154, iArr1[]=new int[N];
        float f1=0.961F, fArr1[]=new float[N];
        byte by=-37;
        short s=-21946;

        FuzzerUtils.init(iArr1, -1506);
        FuzzerUtils.init(fArr1, 0.305F);

        vMeth1(i9);
        f1 = 1;
        do {
            if (i9 != 0) {
                vMeth_check_sum += i9 + Float.floatToIntBits(f1) + by + i10 + i11 + i12 + s +
                    FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                return;
            }
            by = (byte)i9;
        } while (++f1 < 312);
        i9 -= (int)1.107F;
        for (i10 = 5; i10 < 369; i10++) {
            iArr1[i10] -= (int)Test.instanceCount;
            i9 -= i12;
            i11 = i9;
            by *= (byte)f1;
        }
        i11 >>>= (int)Test.instanceCount;
        fArr1[(-7 >>> 1) % N] %= 33685L;
        Test.bFld = true;
        Test.fFld += 65391L;
        Test.lArrFld[(i12 >>> 1) % N] ^= s;
        vMeth_check_sum += i9 + Float.floatToIntBits(f1) + by + i10 + i11 + i12 + s + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static float fMeth() {

        int i13=6, i14=-7, i15=26766, i16=-9886, iArr2[]=new int[N];
        byte byArr[]=new byte[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr2, -203);
        FuzzerUtils.init(byArr, (byte)19);
        FuzzerUtils.init(dArr, -2.98060);

        vMeth();
        Test.instanceCount *= i13;
        Test.instanceCount = -73;
        for (i14 = 10; i14 < 330; ++i14) {
            Test.instanceCount += (-63267 + (i14 * i14));
            Test.sFld += (short)(((i14 * Test.fFld) + i13) - Test.instanceCount);
            i16 = 1;
            while (++i16 < 5) {
                i15 *= (int)Test.fFld;
                i15 -= (int)17.94F;
                iArr2[i16 - 1] = -19825;
            }
            i15 = i15;
            if (Test.bFld) break;
        }
        i13 = (int)-115.204F;
        Test.fFld -= i15;
        dArr[(2 >>> 1) % N] = i14;
        long meth_res = i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-101.93804;
        int i=14798, i17=6, i18=-11, i19=217, i20=-51740, i21=76, i22=8, i23=-84;
        float f2=0.656F;
        long l=-4103160189L;

        d = 1;
        do {
            Test.instanceCount = i;
            i = (int)fMeth();
        } while (++d < 176);
        i = -29591;
        Test.instanceCount = Test.instanceCount;
        Test.instanceCount = i;
        i = i;
        for (f2 = 1; f2 < 268; f2++) {
            i = i;
            i -= (int)Test.instanceCount;
            i ^= (int)Test.instanceCount;
        }
        for (l = 7; l < 160; ++l) {
            for (i19 = 164; i19 > 10; --i19) {
                Test.lArrFld[i19] = -51026L;
                i *= i19;
                i17 |= i17;
            }
            Test.fFld = i18;
            Test.lArrFld[(int)(l - 1)] >>>= i20;
            Test.instanceCount = l;
            Test.instanceCount &= 38;
            i21 = 1;
            do {
                for (i22 = 1; i22 < 1; i22++) {
                    i >>>= i18;
                    i18 += (i22 + i22);
                    if (Test.bFld) break;
                    byFld += (byte)81.370F;
                    Test.lArrFld[i22 - 1] += l;
                }
                Test.bArrFld = Test.bArrFld;
                i += i21;
                i17 *= (int)-3035845752L;
            } while (++i21 < 164);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
class UserDefinedExceptionTest extends RuntimeException {
    public int field;
}

//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  fMeth ->  fMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
