package tests.javafuzzer322;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 01:49:56 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-836530712L;
    public boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static long lArrFld1[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 32121L);
        FuzzerUtils.init(Test.lArrFld1, 2447667398663976752L);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i5=4644, i6=5, i7=-53320, i8=0, i9=-18356, i10=-13, i11=122, i12=58250;
        float f1=69.762F;

        i5 = 1;
        while (++i5 < 269) {
            Test.instanceCount = i5;
            for (i6 = 1; i6 < 6; ++i6) {
                Test.instanceCount += i5;
            }
            Test.lArrFld[i5 - 1] = i7;
            i7 ^= i7;
        }
        for (i8 = 13; i8 < 324; i8++) {
            for (i10 = i8; 5 > i10; ++i10) {
                i7 = i10;
                i12 = 1;
                while (--i12 > 0) {
                    long l2=-6688965561310122544L;
                    i9 -= i5;
                    f1 *= i9;
                    i7 ^= i7;
                    Test.lArrFld1 = Test.lArrFld1;
                    i7 >>= (int)l2;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i2=-162, i3=4, i4=28281, i13=131, i14=61721, i15=52, i16=-15907;
        long l1=-3458534426L;
        float f=0.716F;
        double d1=0.90005;

        for (i2 = 2; i2 < 152; i2++) {
            for (l1 = 1; l1 < 11; l1++) {
                f = lMeth();
                switch ((i2 % 5) + 42) {
                case 42:
                    for (i13 = i2; i13 < 2; i13++) {
                        i4 = i13;
                    }
                    d1 *= -2840323028L;
                    i14 = 35161;
                    i14 -= i2;
                    break;
                case 43:
                    for (i15 = 1; i15 < 2; i15++) {
                        Test.instanceCount += i15;
                        i4 ^= (int)l1;
                        i14 = -2;
                        if (i16 != 0) {
                        }
                        i4 >>= (int)Test.instanceCount;
                    }
                    break;
                case 44:
                    Test.instanceCount = i14;
                    break;
                case 45:
                    i16 += i2;
                case 46:
                    Test.instanceCount >>= i4;
                    break;
                default:
                    Test.instanceCount += i4;
                }
            }
        }
        long meth_res = i2 + i3 + l1 + i4 + Float.floatToIntBits(f) + i13 + i14 + Double.doubleToLongBits(d1) + i15 +
            i16;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vSmallMeth(double d, long l, int i1) {

        float f2=-1.511F;

        l = Long.reverseBytes(iMeth() >> i1);
        i1 = (int)f2;
        vSmallMeth_check_sum += Double.doubleToLongBits(d) + l + i1 + Float.floatToIntBits(f2);
    }

    public void mainTest(String[] strArr1) {

        int i=47311, i17=205, i18=12, i19=9, i20=-218, i21=0, i22=-63326, i23=-3, i24=-52566, iArr[]=new int[N],
            iArr1[]=new int[N];
        double d2=124.44164;
        float f3=0.866F;
        short s=-30841;

        FuzzerUtils.init(iArr, -2);
        FuzzerUtils.init(iArr1, 71);

        i -= ((i--) + (++i));
        for (int smallinvoc=0; smallinvoc<307; smallinvoc++) vSmallMeth(d2, Test.instanceCount, 111);
        d2 = i;
        for (i17 = 2; i17 < 365; i17++) {
            i18 *= i;
            bFld = bFld;
            i18 += i17;
            i += (161 + (i17 * i17));
            i19 = 1;
            while (++i19 < 69) {
                for (i20 = 1; i20 < 1; ++i20) {
                    f3 = i22;
                    Test.instanceCount = s;
                    Test.instanceCount = -28;
                    i21 <<= 2;
                    i22 += i20;
                }
                iArr = iArr1;
                i21 = i17;
                for (i23 = 1; i23 < 1; ++i23) {
                    Test.instanceCount <<= s;
                    f3 -= Test.instanceCount;
                    i18 += s;
                    iArr1[i23 + 1] = i22;
                    Test.instanceCount = i21;
                    i18 += (((i23 * i20) + i) - f3);
                    i = (int)Test.instanceCount;
                    i24 += (int)3072521644L;
                }
                switch (((i17 % 1) * 5) + 58) {
                case 63:
                    i24 += (i19 - i24);
                    i22 += (i19 - f3);
                default:
                    Test.instanceCount += (((i19 * Test.instanceCount) + Test.instanceCount) - f3);
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  iMeth ->  iMeth vSmallMeth mainTest Test
//DEBUG  lMeth ->  lMeth iMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
