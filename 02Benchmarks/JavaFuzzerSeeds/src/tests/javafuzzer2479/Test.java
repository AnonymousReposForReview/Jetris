package tests.javafuzzer2479;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:22:13 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-241L;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i4) {

        int i5=-7629, i6=-79, i7=251, i8=-13, i9=-243, i10=-3, i11=47220, i12=-35;
        boolean b=true;
        float f1=-108.809F;
        long l=8L;

        i4 += i4;
        Test.instanceCount += 174;
        for (i5 = 15; i5 < 347; ++i5) {
            b = b;
            for (i7 = 1; i7 < 5; i7++) {
                i6 ^= i8;
            }
            f1 += (i5 * i8);
            for (i9 = 1; 5 > i9; i9++) {
                f1 = f1;
                f1 *= i4;
                l <<= l;
                for (i11 = 1; 2 > i11; ++i11) {
                    i8 <<= i7;
                    i12 <<= (int)l;
                    i12 = i7;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + (b ? 1 : 0) + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + l + i11 + i12;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        float f=85.144F, fArr[]=new float[N];
        double d=2.99053;
        int i13=-125, i14=172, i15=-45682, i16=4885, i17=-18232, i18=86, iArr[]=new int[N];
        long l1=88L;
        short s1=22533;

        FuzzerUtils.init(fArr, 0.588F);
        FuzzerUtils.init(iArr, 52693);

        f = (float)dMeth(i2);
        fArr[(i2 >>> 1) % N] = (float)d;
        i13 = 1;
        do {
            for (i14 = 5; i14 > 1; --i14) {
                i15 += (((i14 * i15) + Test.instanceCount) - Test.instanceCount);
            }
        } while (++i13 < 365);
        i15 *= i3;
        for (l1 = 15; l1 < 277; ++l1) {
            i3 += (int)(l1 * l1);
            switch (((i15 >>> 1) % 2) + 5) {
            case 5:
            case 6:
                i15 = i14;
                break;
            default:
                switch ((int)((l1 % 2) + 61)) {
                case 61:
                    i2 += s1;
                    for (i17 = 1; i17 < 6; ++i17) {
                        Test.instanceCount = i14;
                    }
                case 62:
                    Test.instanceCount &= i2;
                    break;
                default:
                    iArr = FuzzerUtils.int1array(N, (int)-145);
                }
            }
        }
        vMeth_check_sum += i2 + i3 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i13 + i14 + i15 + l1 + i16
            + s1 + i17 + i18 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i1, short s) {


        vMeth(i1, -114);
        long meth_res = i1 + s;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=11265, i19=3, i20=-53896, i21=35, i22=-58433, i23=-142, i24=41532, i25=-11, i26=-35, i27=69, i28=-6,
            iArr1[]=new int[N];
        short s2=-9150;
        byte by=-16;
        double d1=1.91986;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, 216);
        FuzzerUtils.init(lArr, 1337318802229842913L);

        Test.instanceCount = (Integer.reverseBytes(i + i) / (((-iMeth(i, s2)) * by) | 1));
        by = by;
        for (i19 = 8; i19 < 142; i19++) {
            s2 = (short)i19;
            iArr1[i19 + 1] *= (int)Test.instanceCount;
            for (i21 = 187; i21 > 11; i21--) {
                i20 += (int)36.88133;
                i20 |= (int)Test.instanceCount;
                iArr1[i19] = by;
            }
            iArr1 = FuzzerUtils.int1array(N, (int)-28);
            for (i23 = 9; i23 < 187; i23++) {
                i20 = 5;
                switch ((i19 % 2) + 96) {
                case 96:
                    iArr1[i23] -= (int)Test.instanceCount;
                case 97:
                    i24 += (i23 - Test.instanceCount);
                    i -= i19;
                    break;
                default:
                    d1 += Test.instanceCount;
                    i20 |= i20;
                }
                for (i25 = 1; i25 < 2; i25++) {
                    by += (byte)(i25 * i25);
                }
                lArr[i19 + 1] -= i24;
                i24 = i22;
                iArr1[i23 + 1] -= (int)Test.instanceCount;
                i24 -= i;
                i20 = i20;
            }
            if (b1) {
                i = i23;
                for (i27 = i19; i27 < 187; ++i27) {
                    i26 = i24;
                }
                try {
                    i22 = (i26 / 32219);
                    iArr1[i19 + 1] = (i25 / 68);
                    i = (14181 / i22);
                } catch (ArithmeticException a_e) {}
            } else if (b1) {
                i = (int)Test.instanceCount;
            } else {
                i += (int)-1276450420L;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
