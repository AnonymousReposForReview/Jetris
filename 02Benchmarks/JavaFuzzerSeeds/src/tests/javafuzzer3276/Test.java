package tests.javafuzzer3276;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 05:32:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public static boolean bFld=true;
    public double dFld=-9.100727;
    public static byte byFld=38;
    public static int iArrFld[]=new int[N];
    public static volatile long lArrFld[]=new long[N];
    public volatile boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 0);
        FuzzerUtils.init(Test.lArrFld, 25727L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i9) {

        short s=-30310, sArr[]=new short[N];
        double d1=0.9171;
        int i10=-25917, i11=158, i12=132, i13=-35922, i14=10, i15=4, i16=-39314;
        long l1=-59496L;
        boolean b=false;

        FuzzerUtils.init(sArr, (short)-12578);

        if (b) {
            Test.iArrFld[(96 >>> 1) % N] = s;
            d1 -= Test.instanceCount;
            for (i10 = 3; 340 > i10; ++i10) {
                i9 = i11;
                if (false) {
                    for (l1 = i10; 5 > l1; ++l1) {
                        sArr[i10] += (short)i12;
                        i13 = 1;
                        while (++i13 < 1) {
                            Test.lArrFld[i13] += i9;
                        }
                        i14 <<= (int)l1;
                        i15 = 1;
                        do {
                            i16 += i16;
                            i16 = i14;
                            Test.instanceCount *= (long)47.794F;
                        } while (--i15 > 0);
                    }
                } else {
                    i16 = (int)l;
                }
            }
        }
        vMeth1_check_sum += l + i9 + s + Double.doubleToLongBits(d1) + i10 + i11 + l1 + i12 + i13 + i14 + i15 + i16 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(sArr);
    }

    public static int iMeth() {

        int i5=7945, i6=1, i7=75, i8=-13, i17=6325, i18=-11;
        float f2=0.668F;
        double d2=-1.54318;

        for (i5 = 2; 169 > i5; ++i5) {
            Test.iArrFld[i5] = (int)Test.instanceCount;
            for (i7 = 9; i7 > 1; i7 -= 3) {
                vMeth1(-1L, i7);
                i8 -= i6;
                try {
                    i8 = (-177 / i5);
                    i8 = (Test.iArrFld[i7 - 1] / i6);
                    i6 = (i6 / Test.iArrFld[i7 - 1]);
                } catch (ArithmeticException a_e) {}
                f2 = -10911;
            }
            Test.iArrFld[i5] = i6;
            for (i17 = 1; 9 > i17; i17++) {
                f2 += -45.457F;
                Test.instanceCount *= -14;
                i18 += (i17 | (long)f2);
                if (Test.bFld) continue;
                Test.instanceCount -= i7;
                d2 *= d2;
            }
        }
        long meth_res = i5 + i6 + i7 + i8 + Float.floatToIntBits(f2) + i17 + i18 + Double.doubleToLongBits(d2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1, int i2, int i3) {

        double d=-51.87636;
        int i4=-27423, i19=-4, i20=8;
        float f1=31.513F, f3=2.821F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.887F);

        i1 -= (i1 - i1);
        switch (((((int)(12887 * (d -= i1))) >>> 1) % 4) + 41) {
        case 41:
            i4 = 155;
            do {
                f1 = iMeth();
                f3 = 1;
                do {
                    Test.iArrFld = Test.iArrFld;
                    i3 -= (int)1.3F;
                    Test.instanceCount <<= i3;
                    Test.instanceCount = i4;
                    i19 = 1;
                    while (++i19 < 1) {
                        if (Test.bFld) {
                            i3 ^= i20;
                        }
                    }
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)10);
                    Test.bFld = Test.bFld;
                    f1 = f1;
                } while (++f3 < 20);
            } while ((i4 -= 2) > 0);
        case 42:
            i1 = i20;
            break;
        case 43:
            i20 = i3;
        case 44:
            i2 -= 0;
            break;
        default:
            i2 = i19;
        }
        vMeth_check_sum += i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + Float.floatToIntBits(f1) +
            Float.floatToIntBits(f3) + i19 + i20 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-5, i22=28393, i23=-13, i24=43809, i25=154, i26=139, i27=201, i28=98;
        float f=-29.789F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -24.731F);

        Test.instanceCount = (long)(Test.instanceCount *= (long)((i + -14753) + (i * f)));
        vMeth(11, i, i);
        i22 = 1;
        while (++i22 < 267) {
            dFld += Test.instanceCount;
            fArr1[i22 - 1] += i;
            i = Test.byFld;
            switch ((((i22 >>> 1) % 5) * 5) + 104) {
            case 110:
                for (i23 = 1; 94 > i23; i23++) {
                    i = i24;
                    if (false) continue;
                    switch ((((-62634 >>> 1) % 2) * 5) + 87) {
                    case 89:
                        f *= i;
                        break;
                    case 96:
                    default:
                        i >>= -153;
                    }
                    i24 -= (int)-98.93428;
                    i += i24;
                    if (Test.bFld) break;
                    for (i25 = 1; i25 < 2; ++i25) {
                        i26 <<= i25;
                        f += (i25 * i25);
                        if (Test.bFld) break;
                        i24 += i25;
                        if (Test.bFld) continue;
                        Test.byFld = (byte)i25;
                        Test.instanceCount *= i24;
                    }
                    Test.iArrFld[i23 - 1] -= i23;
                }
                fArr1[i22] += -202;
                Test.iArrFld[i22 + 1] -= (int)f;
                for (i27 = 5; i27 < 94; ++i27) {
                    bArrFld[i27] = Test.bFld;
                    i26 = i26;
                }
            case 116:
                i26 -= (int)-2.104248;
            case 108:
                Test.instanceCount >>>= i24;
                break;
            case 125:
                i += i24;
                break;
            case 119:
                i28 += (int)(5L + (i22 * i22));
                break;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
