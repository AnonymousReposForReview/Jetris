package tests.javafuzzer2882;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:11:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-131L;
    public static boolean bFld=false;
    public static double dFld=10.54278;
    public static byte byFld=42;
    public static long lArrFld[][]=new long[N][N];
    public volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 2727788753L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i9, int i10) {

        short s=26675;
        int i11=-245, i12=36958, i13=153, i14=-5, i15=-57971, i16=1;
        double d1=-1.26513;
        float f2=2.881F;

        s ^= (short)Test.instanceCount;
        for (i11 = 10; 205 > i11; ++i11) {
            if (true) break;
            for (i13 = 1; i13 < 8; ++i13) {
                for (i15 = 2; i15 > 1; --i15) {
                    byte by=-43;
                    i9 = i14;
                    i9 >>= i12;
                    if (Test.bFld) continue;
                    i12 += (((i15 * by) + i12) - Test.instanceCount);
                    i16 *= i16;
                    i16 += i13;
                    d1 += d1;
                    if (false) continue;
                    if (Test.bFld) break;
                }
                f2 += Test.instanceCount;
            }
        }
        long meth_res = i9 + i10 + s + i11 + i12 + i13 + i14 + i15 + i16 + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        double d=1.38607;
        int i4=61646, i5=48661, i6=-62, i7=-1, i8=-9, i17=-244, i18=-15821, iArr[]=new int[N];
        float f1=-39.512F, fArr[][]=new float[N][N];
        short s1=-17329;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(fArr, 2.189F);
        FuzzerUtils.init(iArr, 126);
        FuzzerUtils.init(byArr, (byte)112);

        d = (i4++);
        for (i5 = 255; i5 > 7; i5--) {
            i4 += (i5 * i5);
            Test.instanceCount = (long)fArr[i5][i5 + 1];
            for (i7 = 1; i7 < 7; ++i7) {
                i8 -= i6;
            }
        }
        Test.instanceCount /= (((long)(((i7 + i5) * f1) + Math.abs(i5 + -159))) | 1);
        iArr[(29670 >>> 1) % N] = ((++byArr[(49475 >>> 1) % N]) * (--i8));
        i4 += (int)(((55920 - (0.505F + (-(i5 - i8)))) - (i7 - f1)) + d);
        Test.instanceCount *= ((iMeth(1429, 62) * i7) + -21304L);
        i4 *= i6;
        for (i17 = 10; 171 > i17; i17++) {
            i18 = i5;
            i8 >>>= -6;
            s1 = (short)82L;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + i8 + Float.floatToIntBits(f1) + i17 + i18
            + s1 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(byArr);
    }

    public void vMeth(int i1, float f) {

        int i2=135, i3=53594, i19=18844, i20=-9, i21=4, i22=-8, i23=216, i24=11;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 39.277F);

        for (i2 = 10; 229 > i2; i2++) {
            Test.lArrFld[i2][i2 + 1] = ((Test.lArrFld[i2 - 1][i2]++) - Math.min(i2 - i3, --Test.instanceCount));
        }
        vMeth1();
        for (i19 = 262; i19 > 2; i19 -= 3) {
            for (i21 = i19; i21 < 18; i21++) {
                if (Test.bFld) {
                    i22 -= i22;
                    i3 += i21;
                    fArr1[i19] += (float)Test.dFld;
                    Test.dFld += 7;
                } else if (Test.bFld) {
                    for (i23 = 1; i23 < 1; ++i23) {
                        iArrFld[i21] *= i20;
                        Test.instanceCount = i1;
                        iArrFld[i19] += i2;
                        i20 = (int)Test.instanceCount;
                    }
                } else if (Test.bFld) {
                    Test.instanceCount -= Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + i3 + i19 + i20 + i21 + i22 + i23 + i24 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {

        long l=-20196L, l1=-6122L;
        int i=11651, i25=230, i26=14, i27=-11;
        float f3=1.840F;
        boolean b=true;

        for (l = 14; l < 345; l++) {
            vMeth(-7, f3);
            switch (((i >>> 1) % 4) + 83) {
            case 83:
                i = (int)Test.instanceCount;
                l1 = 1;
                while (++l1 < 76) {
                    Test.instanceCount += (((l1 * i) + i) - i);
                    switch ((int)(((l1 % 3) * 5) + 31)) {
                    case 32:
                        Test.instanceCount = i;
                        i += (int)l1;
                        try {
                            i = (iArrFld[(int)(l)] / -1676492295);
                            i = (i % i);
                            i = (i / i);
                        } catch (ArithmeticException a_e) {}
                        try {
                            i = (i / i);
                            iArrFld[(int)(l)] = (i / i);
                            i = (i % 171);
                        } catch (ArithmeticException a_e) {}
                    case 35:
                        iArrFld[(int)(l1)] = i;
                        for (i25 = 1; i25 < 1; i25++) {
                            i -= i;
                            Test.bFld = b;
                            i -= i26;
                            if (b) break;
                            switch ((int)(((l1 % 1) * 5) + 125)) {
                            case 127:
                                i26 -= i25;
                                i += (int)f3;
                                break;
                            }
                        }
                        i27 = 1;
                        do {
                            i26 += i27;
                            i *= i27;
                            i26 = 42088;
                            Test.dFld -= Test.byFld;
                            f3 += (1594544737L + (i27 * i27));
                            Test.instanceCount = l;
                        } while (--i27 > 0);
                        i26 >>= i;
                        break;
                    case 40:
                        f3 += Test.instanceCount;
                        Test.instanceCount *= i;
                        break;
                    }
                }
                break;
            case 84:
                iArrFld[(int)(l - 1)] += Test.byFld;
                break;
            case 85:
                Test.instanceCount = -11787;
            case 86:
                Test.lArrFld[(int)(l + 1)][(int)(l + 1)] = (long)f3;
                break;
            default:
                i += (int)(l * l);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
