package tests.javafuzzer2786;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 20:03:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=74L;
    public int iFld=55;
    public static int iArrFld[][]=new int[N][N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -246);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i6) {

        int i7=6, i8=40925, i9=-191, i10=0, i11=-1, i12=-35881;
        short s=18272;
        double d=1.77434;
        byte byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-114);
        FuzzerUtils.init(lArr, 65097L);

        for (i7 = 1; i7 < 150; ++i7) {
            for (i9 = 1; i9 < 11; ++i9) {
                byte by=33;
                by += (byte)11;
                i6 += (i9 * i9);
                i8 -= i9;
                i10 >>= (int)Test.instanceCount;
                i8 ^= (int)2755578600L;
                for (i11 = 1; i11 < 2; i11++) {
                    byArr[i9 + 1] += (byte)Test.instanceCount;
                    i10 = s;
                    byArr[i7 - 1] = (byte)Test.instanceCount;
                    lArr[i7 - 1] = (long)d;
                    by = (byte)8753839585726789781L;
                    i10 = (int)Test.instanceCount;
                    i10 += i11;
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + i10 + i11 + i12 + s + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1, long l1) {

        int i2=-12481, i3=220, i4=-64081, i5=6, i13=-8, iArr[]=new int[N];
        float f=103.250F;
        byte by1=-17;
        long l2=-3580993827L;
        boolean b=false;

        FuzzerUtils.init(iArr, -31256);

        for (i2 = 152; i2 > 6; i2--) {
            for (i4 = 1; i4 < 11; ++i4) {
                f += i4;
                if (i5 != 0) {
                    vMeth_check_sum += i1 + l1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i13 + by1 + l2 + (b ? 1
                        : 0) + FuzzerUtils.checkSum(iArr);
                    return;
                }
                vMeth1(i5);
            }
            i13 = 1;
            do {
                by1 -= (byte)i3;
                i1 = i5;
                l2 = 1;
                while (--l2 > 0) {
                    if (b) break;
                    i1 += 211;
                    iArr = iArr;
                    f = l2;
                    i1 = i4;
                    Test.iArrFld = Test.iArrFld;
                }
            } while (++i13 < 11);
        }
        vMeth_check_sum += i1 + l1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f) + i13 + by1 + l2 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i, long l) {

        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 828414181L);

        vMeth(i, l);
        lArr1[(i >>> 1) % N] = 0;
        vSmallMeth_check_sum += i + l + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i14=4, i15=-19851, i16=-10, i17=-105, i18=-60967, i19=-14, i20=-9982, i21=-9, i22=-42973, i23=-6, i24=-45,
            i25=-62155, i26=29389, i27=6, i28=-6;
        byte by2=71;
        boolean b1=true;
        double d1=-75.87661;
        float f1=-2.613F;

        for (int smallinvoc=0; smallinvoc<393; smallinvoc++) vSmallMeth(i14, Test.instanceCount);
        by2 = (byte)i14;
        Test.instanceCount &= by2;
        for (i15 = 176; i15 > 5; --i15) {
            for (i17 = i15; i17 < 147; ++i17) {
                if (false) continue;
                for (i19 = 1; i19 < 1; ++i19) {
                    if (b1) continue;
                    Test.instanceCount &= Test.instanceCount;
                }
                sArrFld[i15 - 1] += (short)2L;
                i14 = i17;
            }
            i14 = (int)d1;
            for (i21 = 8; i21 < 147; i21 += 3) {
                b1 = false;
                if (b1) continue;
                Test.iArrFld[i21][i21] += (int)Test.instanceCount;
                i22 += (((i21 * Test.instanceCount) + f1) - iFld);
                d1 = -54;
            }
            i16 *= (int)-38.663F;
            i20 = -4;
            i18 += i15;
            iFld -= i15;
            Test.iArrFld = Test.iArrFld;
            i16 = 21404;
        }
        for (i23 = 7; i23 < 144; i23 += 2) {
            try {
                Test.iArrFld[i23 - 1][i23 + 1] = (Test.iArrFld[i23][i23] / i17);
                i16 = (i16 / i21);
                i20 = (iFld % -236);
            } catch (ArithmeticException a_e) {}
            for (i25 = i23; i25 < 368; ++i25) {
                for (i27 = i23; i27 < 1; i27++) {
                    i22 -= (int)Test.instanceCount;
                }
                Test.instanceCount += (5 + (i25 * i25));
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
