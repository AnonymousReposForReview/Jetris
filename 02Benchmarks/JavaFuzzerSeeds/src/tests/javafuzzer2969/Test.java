package tests.javafuzzer2969;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:02:33 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-500134532451453932L;
    public static volatile double dFld=-2.18072;
    public static boolean bFld=false;
    public static volatile float fFld=54.828F;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth() {

        int i2=-16;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.92F);

        i2 = (int)(((i2 * i2) - (i2 + 59769)) / (((long)(Math.min(i2, i2) * (--Test.dFld))) | 1));
        fArr[(-55 >>> 1) % N] -= Integer.reverseBytes(--i2);
        i2 = (i2--);
        vMeth_check_sum += i2 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(int i4) {

        int i5=-1, i6=8, i7=29218, i8=10003, i9=-55, iArr[][]=new int[N][N];
        float f=2.118F, f1=0.786F;
        short s=-10209;

        FuzzerUtils.init(iArr, -233);

        for (i5 = 11; i5 < 257; ++i5) {
            Test.bFld = Test.bFld;
            i4 += (int)Test.instanceCount;
        }
        iArr[(i5 >>> 1) % N][(i5 >>> 1) % N] += (int)(-(f += (i6 * i4)));
        f = i6;
        for (i7 = 201; 4 < i7; --i7) {
            i6 += i7;
            Test.instanceCount <<= (--i6);
            i6 = (int)(Test.instanceCount++);
            vMeth();
            s = (short)i5;
            if (Test.bFld) {
                for (f1 = 8; 1 < f1; f1--) {
                    try {
                        i4 = (iArr[(int)(f1 - 1)][(int)(f1 - 1)] % 92);
                        i6 = (-19394 / i9);
                        i4 = (-110 % i9);
                    } catch (ArithmeticException a_e) {}
                    Test.bFld = Test.bFld;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + s + Float.floatToIntBits(f1) + i9 +
            FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(long l, int i3) {

        short s1=-24922;

        vMeth();
        vMeth1(i3);
        s1 <<= (short)i3;
        long meth_res = l + i3 + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-52869, i1=225, i10=-7, i11=12, i12=-39070, iArr1[][]=new int[N][N];
        double d=-102.47062;
        byte by=-49;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -77);
        FuzzerUtils.init(lArr, 1L);

        i = (i++);
        i1 = 1;
        while (++i1 < 319) {
            d = 1;
            do {
                switch ((i1 % 5) + 40) {
                case 40:
                    i += (int)d;
                case 41:
                    vMeth();
                    i <<= iMeth(Test.instanceCount, i);
                    break;
                case 42:
                    i = i;
                    iArr1[(int)(d - 1)][i1 - 1] |= -4;
                    break;
                case 43:
                    Test.fFld -= i1;
                    switch ((int)(((d % 2) * 5) + 71)) {
                    case 74:
                        i10 = 1;
                        do {
                            Test.instanceCount -= (long)d;
                            i += by;
                        } while (++i10 < 1);
                        for (i11 = 1; 1 > i11; i11++) {
                            short s2=-30222;
                            i12 <<= i1;
                            i = (int)Test.instanceCount;
                            i12 >>= i10;
                            switch ((((i11 >>> 1) % 2) * 5) + 104) {
                            case 107:
                                if (Test.bFld) {
                                    lArr[i11 - 1] = Test.instanceCount;
                                    i = i12;
                                    Test.dFld += i11;
                                    i += 0;
                                } else {
                                    iArr1[i11][i1] = i1;
                                    i12 = i12;
                                }
                                i12 >>>= (int)Test.instanceCount;
                            case 111:
                                i |= i;
                                i <<= i;
                                iArr1[(int)(d)][(int)(d - 1)] *= (int)Test.instanceCount;
                                break;
                            default:
                                i *= s2;
                            }
                        }
                        break;
                    case 79:
                    default:
                        i += (int)(((d * i10) + i12) - by);
                    }
                    break;
                case 44:
                    i += (int)Test.fFld;
                    break;
                }
            } while (++d < 79);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest iMeth vMeth1
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
