package tests.javafuzzer2220;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 10:23:08 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=47325L;
    public static byte byFld=-2;
    public static int iFld=10;

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        float f=-92.2F;
        int i3=-14, i4=210, i5=-4, i6=-42841, i7=14, iArr1[]=new int[N];
        short s=15620;
        boolean b=true, bArr[]=new boolean[N];
        double d=-87.86270;

        FuzzerUtils.init(iArr1, -6);
        FuzzerUtils.init(bArr, false);

        f *= i2;
        for (i3 = 17; i3 < 287; i3++) {
            iArr1 = FuzzerUtils.int1array(N, (int)193);
            iArr1[i3] *= (int)294034195520796664L;
        }
        s += (short)-50.864F;
        i5 = 157;
        do {
            bArr[i5] = b;
            for (i6 = 1; i6 < 29; ++i6) {
                if (b) {
                    Test.instanceCount |= -25464;
                } else if (b) {
                    i7 += (int)f;
                    i4 = i7;
                    if (b) {
                        i7 = i3;
                        f *= (float)d;
                    }
                } else if (b) {
                    i7 = i5;
                }
            }
        } while ((i5 -= 3) > 0);
        vMeth1_check_sum += i2 + Float.floatToIntBits(f) + i3 + i4 + s + i5 + (b ? 1 : 0) + i6 + i7 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
    }

    public static int iMeth(int i1) {

        int i8=14, i9=-2, i10=1, i11=2, i12=0, i13=16662, iArr2[]=new int[N];
        boolean b1=false;
        double dArr[]=new double[N];
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(dArr, -1.82389);
        FuzzerUtils.init(iArr2, -13);
        FuzzerUtils.init(fArr, -1.720F);
        FuzzerUtils.init(lArr, -23077L);

        dArr = (dArr = dArr);
        vMeth1(i1);
        i8 = 1;
        while (++i8 < 161) {
            iArr2[i8 + 1] /= (int)(i8 | 1);
            for (i9 = i8; 10 > i9; i9++) {
                if (b1) {
                    for (i11 = 1; i11 < 1; ++i11) {
                        double d1=0.84588;
                        iArr2[i9] = i8;
                        i12 >>= i12;
                        Test.instanceCount += (i11 + i11);
                        fArr[i8 + 1] = Test.instanceCount;
                        iArr2[i9 + 1] += 3;
                        d1 %= ((long)(d1) | 1);
                    }
                    i13 += i13;
                    iArr2[i9 + 1] = i11;
                } else if (b1) {
                    i12 >>>= i11;
                } else if (b1) {
                    lArr[i9] *= 216;
                }
            }
        }
        long meth_res = i1 + i8 + i9 + i10 + i11 + i12 + i13 + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i=-10, i14=-11907, i15=-6, i16=-50633, i17=-35, i18=8, iArr[]=new int[N];
        boolean b2=true;
        float f1=-115.976F;
        byte by=39;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 1);
        FuzzerUtils.init(lArr1, -1339216902741234158L);

        Test.instanceCount += iArr[(i >>> 1) % N];
        iMeth(i);
        i14 = 1;
        do {
            lArr1[i14] += i;
            i += i14;
            i15 = 1;
            while (++i15 < 11) {
                i -= (int)-17L;
                i16 = 1;
                while (++i16 < 1) {
                    if (b2) continue;
                    i -= -4;
                }
                if (b2) break;
            }
            for (i17 = 1; i17 < 11; ++i17) {
                f1 -= 76;
                i18 <<= by;
                Test.instanceCount += (i17 + Test.instanceCount);
            }
        } while ((i14 += 2) < 274);
        vMeth_check_sum += i + i14 + i15 + i16 + (b2 ? 1 : 0) + i17 + i18 + Float.floatToIntBits(f1) + by +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i19=14, i20=-17510, i21=0, i22=1, i23=8, i24=187, iArr3[]=new int[N];
        float f2=-78.505F;
        boolean b3=true;
        long lArr2[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr3, -8);
        FuzzerUtils.init(lArr2, -1L);
        FuzzerUtils.init(sArr, (short)-21363);

        vMeth();
        if (b3) {
            for (i19 = 360; i19 > 10; --i19) {
                switch ((i19 % 7) + 16) {
                case 16:
                    i20 -= (int)137L;
                case 17:
                    for (i21 = 3; i21 < 72; i21++) {
                        double d2=2.27753;
                        d2 = Test.byFld;
                        i22 = -24148;
                        Test.iFld += (i21 * i21);
                        f2 -= Test.byFld;
                        i22 += (i21 + Test.iFld);
                        d2 += 0.113F;
                        for (i23 = 1; i23 < 2; ++i23) {
                            Test.instanceCount += (13 + (i23 * i23));
                            i20 = i20;
                            iArr3 = iArr3;
                            f2 += (((i23 * Test.instanceCount) + i24) - Test.instanceCount);
                            lArr2[i19 - 1] = i21;
                            sArr[i19] = (short)i23;
                            if (true) {
                                switch (((i19 % 8) * 5) + 78) {
                                case 89:
                                    i20 <<= (int)2740061927L;
                                    Test.iFld += i23;
                                    Test.iFld = i23;
                                    i20 = (int)d2;
                                case 106:
                                    d2 *= Test.instanceCount;
                                    i22 += (i23 + i24);
                                    break;
                                case 81:
                                    Test.instanceCount = i21;
                                    Test.iFld |= (int)Test.instanceCount;
                                    i24 += i23;
                                    break;
                                case 88:
                                    Test.byFld = (byte)f2;
                                    break;
                                case 104:
                                    Test.iFld += (i23 * i23);
                                    break;
                                case 101:
                                    i20 = (int)3L;
                                case 113:
                                    i24 *= (int)Test.instanceCount;
                                case 99:
                                    if (b3) break;
                                    break;
                                default:
                                    Test.instanceCount >>>= i21;
                                }
                            }
                        }
                    }
                    break;
                case 18:
                case 19:
                    Test.iFld += (((i19 * Test.iFld) + i21) - Test.instanceCount);
                    break;
                case 20:
                    iArr3[i19] = Test.byFld;
                    break;
                case 21:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 22:
                    b3 = b3;
                    break;
                default:
                    i22 += i19;
                }
            }
        } else if (b3) {
            Test.iFld ^= i24;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
