package tests.javafuzzer2774;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:57:32 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1067698648L;
    public static double dFld=-93.74534;
    public static long lArrFld[]=new long[N];
    public short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, 121L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i9) {

        short s1=11135;
        int i10=206, i11=-51, i12=-9, i13=46396, i14=-51460;
        float f4=0.589F, fArr[]=new float[N];
        boolean b1=true;

        FuzzerUtils.init(fArr, 77.334F);

        s1 = (short)i9;
        for (i10 = 3; 161 > i10; i10++) {
            for (i12 = 1; i12 < 10; i12++) {
                i14 = 1;
                do {
                    f4 += -14370;
                    i13 = (int)Test.instanceCount;
                    i11 %= (int)(i13 | 1);
                    if (b1) {
                        f4 *= Test.instanceCount;
                    }
                    Test.instanceCount >>= i9;
                    i9 <<= (int)8851204828952959523L;
                    i9 = i14;
                    if (b1) continue;
                    i13 += (((i14 * Test.instanceCount) + Test.instanceCount) - i9);
                } while (++i14 < 2);
                f4 += i10;
            }
        }
        long meth_res = i9 + s1 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f4) + (b1 ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(float f2, int i6, int i7) {

        int i15=-11, i16=3, i17=141, i18=-51465, iArr1[]=new int[N];
        double d1=1.17769;
        byte by=-63, byArr[]=new byte[N];

        FuzzerUtils.init(iArr1, 130);
        FuzzerUtils.init(byArr, (byte)-36);

        for (int i8 : iArr1) {
            i7 = (-Math.min(iMeth1(-45876), 180));
            for (i15 = 1; i15 < 4; ++i15) {
                for (i17 = i15; i17 < 2; i17++) {
                    i16 -= (int)d1;
                    Test.instanceCount = 7L;
                    f2 += (i17 * i17);
                    i16 -= i16;
                    Test.instanceCount = i16;
                }
                by += (byte)i18;
            }
            f2 *= -145L;
            Test.instanceCount = Test.instanceCount;
            byArr[(i7 >>> 1) % N] = (byte)-15438;
            iArr1[(i17 >>> 1) % N] = -24034;
            if (false) continue;
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + i6 + i7 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d1) +
            by + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(long l1, float f1) {

        int i19=-124, i20=104, i21=-13, i22=185, i23=10, i24=-224, i25=156, iArr2[]=new int[N];
        short s2=1033;

        FuzzerUtils.init(iArr2, 50772);

        vMeth(f1, i19, i19);
        Test.lArrFld[(i19 >>> 1) % N] = i19;
        for (i20 = 395; i20 > 14; i20 -= 2) {
            i19 = (int)f1;
            for (i22 = 1; i22 < 8; i22++) {
                f1 -= i23;
                i23 <<= i22;
                for (i24 = 1; i24 < 2; ++i24) {
                    switch (((i21 >>> 1) % 6) + 90) {
                    case 90:
                        iArr2 = iArr2;
                        i25 += (int)Test.dFld;
                        i25 += (int)(-1609669929756877394L + (i24 * i24));
                        break;
                    case 91:
                        l1 += (i24 * i25);
                        i23 += (((i24 * Test.instanceCount) + s2) - l1);
                        iArr2 = iArr2;
                        break;
                    case 92:
                        i19 = i19;
                    case 93:
                        f1 = i21;
                        break;
                    case 94:
                        i19 += i25;
                        break;
                    case 95:
                        l1 += i24;
                        break;
                    }
                }
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f1) + i19 + i20 + i21 + i22 + i23 + i24 + i25 + s2 +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-63396, i1=-96, i2=73, i3=73, i4=243, i5=25257, i26=-221, i27=-49301, iArr[][]=new int[N][N];
        double d=7.72532;
        float f=37.21F;
        short s=22409;
        boolean b=false, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, -3);
        FuzzerUtils.init(bArr, false);

        switch (((((i + i) >>> 1) % 2) * 5) + 60) {
        case 70:
            i = (int)(-Math.max(i + i, (long)(14L * (67.81474 * (i - i)))));
            i -= i;
            break;
        case 68:
            for (long l : Test.lArrFld) {
                i += (int)(((-(i++)) | Test.lArrFld[(i >>> 1) % N]) - (++d));
                iArr[(i >>> 1) % N][(i >>> 1) % N] += (int)f;
                i += (int)-3376031855L;
                s -= (short)10;
                i = i;
                for (i1 = 1; i1 < 63; i1++) {
                    i -= (iArr[i1 - 1][i1 - 1]++);
                }
                for (i3 = 3; i3 < 63; i3++) {
                    if (b) continue;
                    i5 = 1;
                    do {
                        byte by1=65;
                        Test.instanceCount = (Math.abs(Test.instanceCount = 37120) % (iMeth(Test.instanceCount, f) |
                            1));
                        Test.instanceCount = i2;
                        i += i5;
                        by1 *= (byte)i5;
                        sArrFld[i5 + 1][i5 + 1] <<= (short)i1;
                        i4 <<= 0;
                        iArr[i3][i3] *= i;
                        i4 += (((i5 * i1) + i5) - i);
                    } while (++i5 < 2);
                    for (i26 = 1; i26 < 2; ++i26) {
                        Test.instanceCount >>= l;
                        switch ((i3 % 7) + 106) {
                        case 106:
                            i4 += (int)13L;
                            break;
                        case 107:
                        case 108:
                            switch (((i5 >>> 1) % 1) + 121) {
                            case 121:
                                l += Test.instanceCount;
                                f -= f;
                                break;
                            default:
                                bArr[i3 - 1] = b;
                            }
                            break;
                        case 109:
                            i27 -= (int)Test.instanceCount;
                            break;
                        case 110:
                            iArr[(i27 >>> 1) % N][i26] = -193;
                            break;
                        case 111:
                            i4 += (6 + (i26 * i26));
                        case 112:
                            i27 <<= i26;
                            break;
                        }
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
