package tests.javafuzzer2728;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:23:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1490699020L;
    public static byte byFld=117;
    public static boolean bFld=false;
    public static volatile int iFld=65388;
    public static float fFld=-102.162F;
    public static int iFld1=187;
    public static short sFld=-2541;
    public static volatile long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 42626L);
        FuzzerUtils.init(Test.byArrFld, (byte)-77);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        float f=0.219F;
        int i8=5, i9=0, i10=-27, i12=-21, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 14);

        f = -1543173300879574737L;
        i8 = 1;
        do {
            Test.lArrFld[i8 - 1] = 92L;
        } while (++i8 < 378);
        for (i9 = 181; i9 > 9; i9 -= 3) {
            Test.instanceCount += (((i9 * i8) + i8) - Test.byFld);
            if (i10 != 0) {
                vMeth1_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + i12 + FuzzerUtils.checkSum(iArr);
                return;
            }
            Test.instanceCount = i10;
            f += i9;
            Test.instanceCount += i9;
            i10 = (int)Test.instanceCount;
        }
        if (Test.bFld) {
            Test.instanceCount += Test.byFld;
        } else {
            i12 = 1;
            while (++i12 < 354) {
                if (Test.bFld) continue;
                iArr[i12 + 1] = -140;
            }
            vMeth1_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + i12 + FuzzerUtils.checkSum(iArr);
            return;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + i12 + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i5, int i6, int i7) {


        vMeth1();
        long meth_res = i5 + i6 + i7;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, long l) {

        int i13=-94, i14=-6, i15=-4, i16=515, i17=151, i18=-7, i19=133, i20=-42, iArr1[][]=new int[N][N];
        double d=0.99587;

        FuzzerUtils.init(iArr1, -27);

        iMeth(Test.iFld, Test.iFld, i4);
        Test.lArrFld[(Test.iFld >>> 1) % N] >>= 42469L;
        Test.iFld <<= i4;
        for (long l1 : Test.lArrFld) {
            for (i13 = 1; 4 > i13; ++i13) {
                switch ((i13 % 2) + 101) {
                case 101:
                    for (i15 = i13; i15 < 2; i15++) {
                        Test.fFld += (i15 * i16);
                    }
                    for (i17 = i13; i17 < 2; i17++) {
                        l1 += i17;
                        i18 = i15;
                    }
                    break;
                case 102:
                    i16 -= (int)d;
                    for (i19 = 2; i19 > 1; i19--) {
                        Test.instanceCount += (i19 * i13);
                        iArr1[i13 - 1][i19] = 88;
                    }
                    break;
                }
            }
        }
        vMeth_check_sum += i4 + l + i13 + i14 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d) + i19 + i20 +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-59, i1=161, i2=-51, i3=5, i21=-13674, i22=-14, i23=-34947, i24=6, i25=-32, i26=6632, i27=41447,
            iArr2[]=new int[N];
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(dArr, 38.21452);
        FuzzerUtils.init(iArr2, -197);

        for (i = 11; i < 213; i++) {
            i1 += (int)(Test.instanceCount--);
            i1 -= (i1++);
            switch (((i % 2) * 5) + 80) {
            case 87:
            case 84:
                for (i2 = 5; i2 < 124; i2++) {
                    Test.instanceCount += (long)dArr[i + 1][i2 - 1];
                }
                vMeth(Test.iFld1, Test.instanceCount);
                i21 = 1;
                while (++i21 < 124) {
                    for (i22 = 1; i22 > i; i22--) {
                        i23 += (i22 + i22);
                        Test.iFld -= -247;
                    }
                    Test.fFld = i;
                    for (i24 = 1; i24 > 1; --i24) {
                        Test.instanceCount = Test.sFld;
                        Test.iFld >>= i;
                    }
                    iArr2[i21 - 1] += i23;
                    switch ((i21 % 8) + 55) {
                    case 55:
                        i23 = Test.iFld1;
                        break;
                    case 56:
                        Test.iFld1 = Test.byFld;
                        break;
                    case 57:
                        for (i26 = 1; i26 < 1; ++i26) {
                            double d1=0.323;
                            Test.fFld -= Test.iFld1;
                            iArr2[i21 - 1] = i;
                            i27 |= Test.sFld;
                            Test.instanceCount -= i27;
                            i23 -= i27;
                            d1 = Test.instanceCount;
                            Test.byArrFld[i + 1] >>>= (byte)i21;
                            Test.iFld1 += i1;
                            i3 *= i;
                            Test.iFld1 += i26;
                        }
                        break;
                    case 58:
                        i25 = (int)Test.instanceCount;
                    case 59:
                        i3 = (int)3666688519446282867L;
                    case 60:
                        i27 *= (int)Test.fFld;
                    case 61:
                        dArr[i][i21] = i2;
                        break;
                    case 62:
                        Test.instanceCount = Test.instanceCount;
                    default:
                        i27 %= (int)(i1 | 1);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
