package tests.javafuzzer2990;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:27:18 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=5192269070234229918L;

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long iMeth2_check_sum = 0;

    public static int iMeth2(int i3, int i4) {

        int i5=-6, i6=12, i7=10, i8=-142, i9=64531, i10=83, i11=-48, iArr1[]=new int[N];
        float f2=-80.465F;
        double d=0.97542;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 2545128856L);
        FuzzerUtils.init(iArr1, 51394);

        for (i5 = 1; 164 > i5; ++i5) {
            i4 -= (int)Test.instanceCount;
        }
        for (i7 = 3; 170 > i7; i7++) {
            float f1=-102.730F;
            lArr[i7 + 1][i7 - 1] = (long)f1;
            Test.instanceCount -= 6339512038616775377L;
            for (i9 = 1; i9 < 9; ++i9) {
                i3 <<= i3;
                for (f2 = 2; f2 > 1; f2 -= 3) {
                    i8 -= i6;
                    switch (((i7 % 3) * 5) + 94) {
                    case 96:
                        d *= i3;
                        i10 += (int)(-31235L + (f2 * f2));
                        break;
                    case 106:
                        i3 *= i3;
                        iArr1[i9] <<= -14;
                    case 103:
                        i3 = i8;
                        break;
                    default:
                        i4 = i7;
                    }
                }
            }
        }
        long meth_res = i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f2) + i11 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        iMeth2_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i2) {

        double d1=64.36329;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -1708826998L);

        i2 = iMeth2(i2, i2);
        lArr1[(i2 >>> 1) % N] -= (long)d1;
        long meth_res = i2 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(lArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(float f, int i, int i1) {

        byte by=125;
        double d2=61.30828;
        int i12=10313, iArr[]=new int[N];
        boolean b1=true;
        short s=28433;

        FuzzerUtils.init(iArr, -8);

        Test.instanceCount += ((--Test.instanceCount) - ((iArr[(i1 >>> 1) % N] *= (int)Test.instanceCount) -
            iMeth1(i)));
        by = (byte)i;
        for (d2 = 7; d2 < 292; ++d2) {
            i1 += (int)d2;
            i *= i;
            switch ((int)(((d2 % 3) * 5) + 51)) {
            case 60:
                i1 -= i12;
                break;
            case 52:
                if (b1) break;
                i1 += i;
                i = (int)Test.instanceCount;
            case 63:
                iArr[(int)(d2)] += s;
                Test.instanceCount -= i1;
                break;
            }
            iArr = iArr;
            i1 *= -2;
        }
        by = by;
        long meth_res = Float.floatToIntBits(f) + i + i1 + by + Double.doubleToLongBits(d2) + i12 + (b1 ? 1 : 0) + s +
            FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b=false;
        float f3=-2.894F;
        int i13=-125, i14=250, i15=-5886, i16=11, i17=71, i18=-214, i19=-5, i20=-13874, i21=-114, i22=215, iArr2[]=new
            int[N];
        short s1=12864, sArr[]=new short[N];
        double d3=2.72126;
        byte by1=-21;

        FuzzerUtils.init(iArr2, 12);
        FuzzerUtils.init(sArr, (short)26464);

        b = (iMeth(f3, i13, i13) <= f3);
        for (i14 = 12; 296 > i14; i14++) {
            b = b;
            for (i16 = 4; 89 > i16; ++i16) {
                f3 += s1;
                if (b) break;
            }
            for (d3 = 3; d3 < 89; ++d3) {
                iArr2[i14 - 1] -= 153;
                s1 += (short)(46 + (d3 * d3));
                for (i19 = 2; i19 > 1; i19--) {
                    double d4=-2.85949;
                    i13 >>>= i20;
                    by1 *= (byte)d3;
                    iArr2[i14 + 1] >>= by1;
                    Test.instanceCount &= i17;
                    i13 += -159;
                    d4 = i17;
                    f3 += i19;
                    Test.instanceCount = i18;
                    i18 >>>= (int)Test.instanceCount;
                    i15 += i19;
                }
                for (i21 = 1; i21 < 2; i21 += 2) {
                    i18 = i19;
                    i15 -= (int)d3;
                    f3 = i15;
                    sArr[(int)(d3 + 1)] &= (short)5907947165262314619L;
                    i18 += (i21 * i21);
                    i22 = 202;
                    Test.instanceCount -= 3323;
                    i13 *= -2;
                }
                Test.instanceCount -= i22;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  iMeth2 ->  iMeth2 iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
