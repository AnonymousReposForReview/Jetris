package tests.javafuzzer1690;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:44:37 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=41978L;
    public int iFld=-7565;
    public static long lFld=3646413761L;
    public static double dFld=0.5871;
    public static boolean bFld=false;
    public static volatile short sFld=17875;
    public static int iArrFld[]=new int[N];
    public volatile long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -9);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5, int i6) {

        int i7=57365, i8=-24084, i9=29715, i10=-5880;
        short s=32115;
        byte byArr[][]=new byte[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(byArr, (byte)66);
        FuzzerUtils.init(fArr, -2.135F);

        for (i7 = 1; i7 < 318; ++i7) {
            byArr[i7 - 1] = byArr[i7 - 1];
        }
        for (i9 = 10; i9 < 210; ++i9) {
            s += (short)(21673L + (i9 * i9));
            Test.dFld *= i8;
            i4 += (int)23.1613;
            if (Test.bFld) continue;
            if (Test.bFld) continue;
            i10 = i7;
            Test.instanceCount *= i5;
        }
        s += (short)Test.instanceCount;
        if (Test.bFld) {
            i6 >>= (int)Test.lFld;
        } else if (Test.bFld) {
        } else {
            Test.iArrFld[(-7 >>> 1) % N] = i9;
        }
        Test.iArrFld[(0 >>> 1) % N] = i6;
        vMeth2_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + i10 + s + FuzzerUtils.checkSum(byArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth1(float f, int i1, long l) {

        int i2=4, i3=-10;
        short s1=-5815;

        for (i2 = 15; 287 > i2; ++i2) {
            i3 += (((i2 * i2) + f) - i3);
        }
        vMeth2(i1, i1, i1);
        f -= i1;
        i3 -= s1;
        vMeth1_check_sum += Float.floatToIntBits(f) + i1 + l + i2 + i3 + s1;
    }

    public static void vMeth(int i) {

        float f2=-2.13F;
        short s2=28829;
        int i13=-30300, i14=-34, i15=121;
        byte by=-65;
        long l1=-21518L;

        vMeth1(f2, i, Test.instanceCount);
        Test.dFld += i;
        s2 ^= (short)i;
        i += 2;
        for (int i12 : Test.iArrFld) {
            i13 = 1;
            while (++i13 < 4) {
                for (i14 = 1; i14 < 1; ++i14) {
                    i += (i14 - i);
                    i15 <<= by;
                    i += (int)Test.lFld;
                    l1 += i14;
                    i15 = i14;
                    try {
                        i12 = (i / Test.iArrFld[i13 + 1]);
                        i = (i12 / 521277521);
                        i = (Test.iArrFld[i13] / 26640);
                    } catch (ArithmeticException a_e) {}
                    if (i13 != 0) {
                        vMeth_check_sum += i + Float.floatToIntBits(f2) + s2 + i13 + i14 + i15 + by + l1;
                        return;
                    }
                }
                i += (int)Test.dFld;
            }
        }
        vMeth_check_sum += i + Float.floatToIntBits(f2) + s2 + i13 + i14 + i15 + by + l1;
    }

    public void mainTest(String[] strArr1) {

        int i16=-3, i17=-9, i18=32, i19=198, i20=213, i21=23184, i22=109, i23=1;
        byte by1=93;
        float f3=2.199F;

        iFld -= (int)(Test.lFld * (iFld = Math.max(iFld, 1)));
        Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = FuzzerUtils.int1array(N, (int)-6))));
        vMeth(iFld);
        for (i16 = 15; i16 < 349; i16++) {
            for (i18 = 3; 75 > i18; ++i18) {
                by1 /= (byte)-24315;
                Test.lFld = 38815;
                lArrFld[i16 + 1] += -1;
                Test.lFld += (48406L + (i18 * i18));
                Test.instanceCount -= Test.sFld;
                iFld = i17;
                Test.instanceCount *= Test.instanceCount;
                Test.sFld += (short)i17;
            }
            Test.instanceCount <<= -237;
            i19 += (((i16 * i16) + i17) - Test.lFld);
            f3 += Test.instanceCount;
            i20 = 1;
            do {
                i21 <<= i17;
                i19 += i18;
                i17 += i20;
                Test.iArrFld[i20 + 1] = (int)f3;
                for (i22 = i20; i22 < 1; i22++) {
                    Test.instanceCount = i16;
                    Test.iArrFld = Test.iArrFld;
                    switch ((i20 % 1) + 106) {
                    case 106:
                        Test.iArrFld[i20 + 1] *= i18;
                        i17 = (int)Test.lFld;
                        iFld += iFld;
                        Test.dFld = i16;
                    default:
                        i19 >>= 41553;
                    }
                }
            } while (++i20 < 75);
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
