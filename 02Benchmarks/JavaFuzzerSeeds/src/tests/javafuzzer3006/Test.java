package tests.javafuzzer3006;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:44:59 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3409263309L;
    public float fFld=0.519F;
    public static boolean bFld=false;
    public int iFld=-4;
    public static double dFld=1.85270;
    public static long lFld=5671377187392028353L;
    public static byte byFld=-44;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 182);
    }

    public static long byMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i4) {

        int i5=-117, i6=6608, i7=8, i8=-8430, i9=-1;
        double d=-2.53374;
        float f=-2.95F;

        for (i5 = 313; i5 > 17; i5 -= 2) {
            Test.bFld = false;
            Test.iArrFld[i5 + 1] *= i4;
            i6 += (((i5 * i4) + i6) - Test.instanceCount);
            i7 = 1;
            do {
                Test.instanceCount = 16497;
                for (i8 = 1; i8 < 1; ++i8) {
                    i6 += i6;
                    d -= 0.98759;
                    i4 <<= i6;
                }
                Test.instanceCount += (long)d;
                i9 *= -92;
            } while (++i7 < 11);
            i4 = i7;
        }
        i9 = i9;
        Test.instanceCount += (long)f;
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + i9 + Double.doubleToLongBits(d) + Float.floatToIntBits(f);
    }

    public static long lMeth(int i3) {


        Test.instanceCount += i3;
        vMeth(i3);
        long meth_res = i3;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static byte byMeth(int i, int i1) {

        int i2=125, i10=-3519, i11=-35252, i12=13, i13=-49;
        long l=-5L;

        i2 = 324;
        while ((i2 -= 3) > 0) {
            Test.iArrFld[i2 - 1] = (int)lMeth(i2);
            i1 >>= -6;
            i1 = -40034;
            l = i;
        }
        for (i10 = 227; i10 > 4; i10--) {
            i11 -= i1;
        }
        if (Test.bFld) {
            for (i12 = 4; i12 < 248; i12++) {
                i += i12;
            }
        } else {
            i *= i11;
        }
        i11 *= (int)Test.instanceCount;
        Test.iArrFld[(i13 >>> 1) % N] = (int)l;
        l -= i12;
        i *= i2;
        long meth_res = i + i1 + i2 + l + i10 + i11 + i12 + i13;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i14=-11, i15=-211, i16=0, i17=138, i18=-65304, i19=-65465, i20=-51165;
        float f1=1.614F;

        fFld -= byMeth(iFld, iFld);
        for (i14 = 2; i14 < 301; ++i14) {
            Test.iArrFld = Test.iArrFld;
            for (i16 = 1; i16 < 84; i16++) {
                if (Test.bFld) continue;
                for (i18 = 1; i18 < 2; i18 += 2) {
                    Test.instanceCount = -77L;
                    fFld -= Test.instanceCount;
                    i19 += (int)Test.dFld;
                    i15 *= (int)Test.instanceCount;
                    i19 = i15;
                    i15 ^= i14;
                    if (Test.bFld) {
                        Test.instanceCount += i15;
                        i17 -= i16;
                        i15 = i15;
                    } else if (Test.bFld) {
                        Test.instanceCount = Test.instanceCount;
                    }
                    iFld += -222;
                    i17 += (29342 + (i18 * i18));
                }
                i15 -= i18;
                iFld ^= i14;
                Test.instanceCount = i17;
                for (f1 = i14; f1 < 2; ++f1) {
                    int i21=11;
                    if (Test.bFld) continue;
                    i20 = i19;
                    Test.iArrFld[(int)(f1 + 1)] += (int)Test.dFld;
                    i15 *= i17;
                    iFld = i21;
                    i20 = i21;
                    Test.lFld -= Test.byFld;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  lMeth ->  lMeth byMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
