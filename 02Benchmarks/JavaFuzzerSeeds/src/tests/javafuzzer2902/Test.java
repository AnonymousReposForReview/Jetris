package tests.javafuzzer2902;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 22:43:19 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=776434996L;
    public float fFld=-115.506F;
    public static double dFld=-1.61782;
    public static boolean bFld=true;
    public static float fFld1=1.109F;
    public static long lArrFld[]=new long[N];
    public static short sArrFld[]=new short[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 13L);
        FuzzerUtils.init(Test.sArrFld, (short)-8677);
        FuzzerUtils.init(Test.iArrFld, 50872);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public void vMeth1(long l) {

        int i4=11, iArr[][]=new int[N][N];

        FuzzerUtils.init(iArr, 13);

        iArr[(i4 >>> 1) % N] = iArr[(-207 >>> 1) % N];
        vMeth1_check_sum += l + i4 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth2(int i7, boolean b, long l1) {

        int i8=-11, i9=-59854, i10=-12, i11=-191, iArr2[]=new int[N];
        float f=0.613F;

        FuzzerUtils.init(iArr2, -60081);

        for (i8 = 243; i8 > 10; --i8) {
            i7 <<= i7;
            i7 -= 191;
            i7 = i9;
            if (b) {
                iArr2 = iArr2;
                switch (((i8 % 2) * 5) + 41) {
                case 44:
                    if (true) {
                        Test.dFld += i9;
                        for (i10 = 7; i10 > 1; i10 -= 2) {
                            l1 -= i7;
                            i11 += (i10 ^ i10);
                            iArr2[i10] >>= i7;
                            i11 += i9;
                            f += i9;
                        }
                    } else {
                        iArr2[i8 + 1] += i11;
                    }
                    break;
                case 51:
                    Test.lArrFld[i8] *= i10;
                    break;
                }
            } else {
                i7 += (int)(32.882F + (i8 * i8));
            }
        }
        vMeth2_check_sum += i7 + (b ? 1 : 0) + l1 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(iArr2);
    }

    public static long lMeth() {

        int i5=181, i6=31, i12=188, i13=-205, i14=-163, i15=2838, iArr3[]=new int[N];
        short s=-19664;

        FuzzerUtils.init(iArr3, 6);

        for (i5 = 10; i5 < 232; ++i5) {
            vMeth2(i6, Test.bFld, 0L);
            if (i5 != 0) {
            }
            iArr3[i5 + 1] -= (int)Test.instanceCount;
            s = (short)Test.instanceCount;
            i6 <<= (int)Test.instanceCount;
            for (i12 = i5; i12 < 7; i12++) {
                i6 += (int)(-3173387955L + (i12 * i12));
                for (i14 = 1; 1 > i14; ++i14) {
                    Test.instanceCount >>>= 54331L;
                    iArr3[i14] = (int)Test.instanceCount;
                    Test.instanceCount -= i12;
                    i6 >>= i6;
                    Test.instanceCount = i13;
                    Test.fFld1 += Test.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + s + i12 + i13 + i14 + i15 + FuzzerUtils.checkSum(iArr3);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth() {

        int i=-69, i1=12232, i2=-4, i3=68, i16=-20, iArr1[]=new int[N];
        float fArr[][]=new float[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 39.323F);
        FuzzerUtils.init(iArr1, 12224);
        FuzzerUtils.init(lArr, -2424828488L);

        for (i = 6; i < 127; ++i) {
            fFld -= (i1--);
        }
        for (i2 = 2; i2 < 365; i2++) {
            fArr[i2 - 1][i2 + 1] -= ((i1++) + i2);
            i1 = (int)Test.instanceCount;
            vMeth1(-iArr1[i2 - 1]);
            vMeth1(lArr[i2]--);
            i1 += iArr1[i2];
            lArr[i2] = lArr[i2 + 1];
            lMeth();
            i1 = (int)Test.instanceCount;
            i3 *= (int)Test.fFld1;
            i16 = 1;
            while (++i16 < 5) {
                lArr[i16] *= i;
                Test.dFld = i;
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i17=30, i18=-1, i19=-1, i20=0, i21=-8, i22=-53203, i23=11;
        byte by=-38;
        long l2=1863882806L;
        short s1=2497;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth();
        i17 = (int)Test.dFld;
        for (i18 = 7; i18 < 253; i18++) {
            i17 += (i18 * i18);
            for (i20 = 1; i20 < 102; ++i20) {
                Test.sArrFld[i20 - 1] += (short)i19;
                for (i22 = 1; i22 < 2; ++i22) {
                    i19 += -44728;
                    Test.iArrFld[i20] = (int)Test.instanceCount;
                    i17 >>= by;
                    fFld = i18;
                    Test.bFld = Test.bFld;
                    switch ((i22 % 2) + 61) {
                    case 61:
                        Test.iArrFld[i22 - 1] -= (int)7L;
                        Test.lArrFld = Test.lArrFld;
                        Test.instanceCount += i18;
                        i21 = i17;
                        break;
                    case 62:
                        Test.fFld1 += i21;
                        i17 += (((i22 * fFld) + i18) - i18);
                    default:
                        l2 += i22;
                        s1 >>= by;
                    }
                    switch ((((i23 >>> 1) % 5) * 5) + 70) {
                    case 78:
                        i17 *= s1;
                        i21 = i18;
                        bArr[i20 - 1] = Test.bFld;
                        break;
                    case 77:
                    case 76:
                        switch (((-3 >>> 1) % 2) + 65) {
                        case 65:
                            i21 += (((i22 * i23) + Test.instanceCount) - i19);
                            s1 <<= (short)i17;
                            i17 += (-128 + (i22 * i22));
                            i19 += (((i22 * Test.fFld1) + i19) - l2);
                            break;
                        case 66:
                            i23 -= (int)l2;
                            break;
                        }
                        break;
                    case 92:
                        Test.iArrFld[i20 + 1] *= (int)Test.instanceCount;
                        break;
                    case 85:
                        by *= (byte)-120;
                        break;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
