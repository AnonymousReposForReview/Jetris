package tests.javafuzzer2267;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:07:10 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=12L;
    public static int iFld=40;
    public static volatile short sFld=-29856;
    public static float fFld=-68.501F;
    public int iFld1=-43735;
    public float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -163);
        FuzzerUtils.init(Test.lArrFld, 3782280488813295213L);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, boolean b) {

        byte by=2;
        int i8=-253, i9=12, i10=-184, i11=0;

        Test.iArrFld[(Test.iFld >>> 1) % N] *= Test.iFld;
        Test.iFld -= Test.iFld;
        switch (((Test.iFld >>> 1) % 1) + 119) {
        case 119:
        }
        by >>= (byte)-65530;
        for (int i7 : Test.iArrFld) {
            for (i8 = 1; i8 < 4; i8++) {
                by = (byte)i9;
                Test.instanceCount >>= Test.instanceCount;
                for (i10 = i8; i10 < 2; i10++) {
                    i11 += (i10 * i10);
                    Test.iArrFld[i10 - 1] += (int)-39.658F;
                    Test.iFld += (i10 ^ i9);
                }
                i7 *= (int)-5522706398299572103L;
                i9 += Test.sFld;
            }
            i9 = (int)Test.instanceCount;
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + (b ? 1 : 0) + by + i8 + i9 + i10 + i11;
    }

    public static void vMeth(long l1, float f, long l2) {

        int i6=2, i12=-94, i13=-186;
        double d2=0.80592;
        boolean b1=false;
        long l3=543799091974040084L;

        Test.iArrFld[(i6 >>> 1) % N] = (++i6);
        vMeth1(d2, b1);
        i12 = 1;
        while ((i12 += 3) < 159) {
            i6 += (i12 * i12);
            Test.instanceCount >>= i6;
            Test.iFld = i12;
            i6 += Test.iFld;
            Test.iArrFld[i12] = i6;
            if (false) continue;
            switch ((i12 % 3) + 103) {
            case 103:
                for (l3 = 1; l3 < 29; ++l3) {
                    f += 54645;
                    if (i13 != 0) {
                        vMeth_check_sum += l1 + Float.floatToIntBits(f) + l2 + i6 + Double.doubleToLongBits(d2) + (b1 ?
                            1 : 0) + i12 + l3 + i13;
                        return;
                    }
                    Test.iFld += (int)(((l3 * Test.iFld) + l3) - i12);
                    i6 -= i12;
                }
                break;
            case 104:
                Test.instanceCount += (i12 * i12);
                break;
            case 105:
                d2 *= i6;
                break;
            default:
                Test.iArrFld[i12] *= (int)l1;
            }
        }
        vMeth_check_sum += l1 + Float.floatToIntBits(f) + l2 + i6 + Double.doubleToLongBits(d2) + (b1 ? 1 : 0) + i12 +
            l3 + i13;
    }

    public double dMeth(int i1) {

        int i2=12, i3=17935, i4=-7017, i5=48;
        long l=-64881L;
        float f1=-2.115F;
        double d3=2.61280, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.130288);

        for (i2 = 8; i2 < 227; ++i2) {
            for (l = 1; l < 7; l++) {
                switch ((int)(((l % 2) * 5) + 59)) {
                case 62:
                    i3 += (int)(l * Test.instanceCount);
                    i5 = 1;
                    while (++i5 < 2) {
                        dArr = (dArr = dArr);
                        i3 >>= i3;
                        switch ((i2 % 3) + 35) {
                        case 35:
                            fArrFld[(int)(l)] -= 3065200879L;
                            Test.instanceCount *= l;
                            Test.iArrFld[i5] >>>= i2;
                            break;
                        case 36:
                            vMeth(l, f1, Test.instanceCount);
                            break;
                        case 37:
                            i3 = i4;
                            i4 += i3;
                            break;
                        default:
                            i4 -= (int)d3;
                        }
                    }
                    break;
                case 67:
                    i1 += i3;
                    break;
                default:
                    Test.iFld >>= i2;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + l + i4 + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        double d=-36.108713;
        int i=1, i14=-12, i15=57555, i16=5, i17=-46039, i18=9, i19=120, i20=-37593, i21=-253, i22=12209, i23=-14,
            i24=-3, i25=5, i26=-5;
        boolean b2=true;
        long l5=0L, l6=11086L;

        for (d = 7; d < 231; ++d) {
            i = (int)((i++) - (dMeth(-40) + Test.fFld));
        }
        Test.instanceCount = i;
        for (i14 = 9; i14 < 155; ++i14) {
            if (b2) break;
            Test.iArrFld[i14 + 1] = i;
            i += (((i14 * i) + i14) - Test.iFld);
            Test.lArrFld = Test.lArrFld;
        }
        switch (((i15 >>> 1) % 2) + 85) {
        case 85:
            for (l5 = 245; l5 > 2; l5--) {
                Test.iArrFld = Test.iArrFld;
            }
            for (i17 = 4; 127 > i17; ++i17) {
                for (i19 = 4; i19 < 204; ++i19) {
                    Test.sFld = (short)Test.iFld;
                    Test.fFld += -49;
                    i18 *= 11;
                }
                Test.iFld = i17;
                Test.fFld += (-31426 + (i17 * i17));
            }
        case 86:
            Test.instanceCount /= (i19 | 1);
            for (i21 = 8; i21 < 173; ++i21) {
                for (i23 = 7; i23 < 152; i23++) {
                    Test.iArrFld[i21] /= (int)(i16 | 1);
                    i22 |= (int)l5;
                    bArrFld[i21] = b2;
                    for (i25 = 1; 2 > i25; ++i25) {
                        Test.fFld *= i20;
                        iFld1 = (int)9458L;
                        Test.iArrFld[i25] += i20;
                        Test.instanceCount = l6;
                        l6 = -21548;
                    }
                }
            }
        default:
            Test.iArrFld[(-4 >>> 1) % N] ^= Test.iFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
