package tests.javafuzzer963;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 12:13:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=40636L;
    public static volatile float fFld=1.107F;
    public static byte byFld=-29;
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 52.13118);
        FuzzerUtils.init(Test.iArrFld, -28);
        FuzzerUtils.init(Test.lArrFld, -3987223341985930889L);
        FuzzerUtils.init(Test.byArrFld, (byte)-51);
    }

    public static long vMeth_check_sum = 0;
    public static long bMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i3=153, i5=-11, i6=43659, iArr1[]=new int[N];
        byte by1=109;
        double d1=-1.28834, d2=0.66978;
        float f=101.162F;
        short s=28914;
        long l=7L, lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -25834);
        FuzzerUtils.init(lArr, 6L);

        iArr1[(i3 >>> 1) % N] = -106;
        by1 += (byte)Test.instanceCount;
        for (int i4 : iArr1) {
            d1 = 1;
            while (++d1 < 4) {
                boolean b1=false;
                i3 += (int)d1;
                f -= i4;
                i4 = i4;
                switch ((int)(d1 + 91)) {
                case 91:
                    i4 += (int)(((d1 * i3) + Test.instanceCount) - i3);
                    i3 += i4;
                    iArr1[(int)(d1 + 1)] >>= i4;
                    break;
                case 92:
                    i3 <<= (int)Test.instanceCount;
                    i4 *= (int)f;
                    i3 += (int)(d1 * d1);
                    break;
                case 93:
                    i3 = i4;
                case 94:
                    Test.instanceCount += (long)d1;
                    break;
                case 95:
                    i5 += (int)(((d1 * Test.instanceCount) + i5) - i5);
                    break;
                case 96:
                    if (true) break;
                    break;
                case 97:
                    i4 += (int)d1;
                case 98:
                    d2 -= Test.instanceCount;
                    break;
                case 99:
                    iArr1[(int)(d1 + 1)] = (int)1.83254;
                case 100:
                    f += (float)d1;
                    break;
                case 101:
                    lArr[(int)(d1 - 1)] -= 10;
                    break;
                case 102:
                    i4 <<= i5;
                    break;
                case 103:
                    Test.dArrFld[(int)(d1 - 1)] += s;
                    break;
                case 104:
                    i3 -= i5;
                    break;
                case 105:
                    f -= i3;
                    break;
                case 106:
                    if (b1) break;
                    break;
                case 107:
                    iArr1[(int)(d1 + 1)] = by1;
                    break;
                case 108:
                    iArr1[(int)(d1)] <<= (int)Test.instanceCount;
                    break;
                case 109:
                    f += (float)d1;
                case 110:
                    Test.instanceCount += (long)(((d1 * Test.instanceCount) + Test.instanceCount) - i4);
                    break;
                case 111:
                    Test.instanceCount += (long)((long)d1 ^ i5);
                    break;
                case 112:
                    Test.instanceCount = i5;
                    break;
                case 113:
                    Test.instanceCount -= (long)f;
                    break;
                case 114:
                    iArr1[(int)(d1 + 1)] = i5;
                case 115:
                    Test.dArrFld[(int)(d1 + 1)] += i3;
                case 116:
                    Test.instanceCount -= (long)-86.369F;
                    break;
                case 117:
                    iArr1[(int)(d1 + 1)] *= i3;
                    break;
                case 118:
                    i4 *= -5;
                    break;
                case 119:
                    i3 = i5;
                    break;
                case 120:
                    Test.instanceCount += (long)(((d1 * i5) + Test.instanceCount) - i4);
                    break;
                case 121:
                case 122:
                    d2 = 16.931F;
                    break;
                case 123:
                    d2 += l;
                    break;
                case 124:
                    Test.dArrFld = FuzzerUtils.double1array(N, (double)2.105033);
                case 125:
                    by1 = (byte)d2;
                    break;
                case 126:
                    i4 += (int)(d1 - l);
                    break;
                case 127:
                    f *= i5;
                    break;
                case 128:
                    i4 = i4;
                    break;
                case 129:
                    if (b1) break;
                    break;
                case 130:
                    Test.instanceCount = 11256;
                    break;
                case 131:
                    i5 += (int)(((d1 * i4) + f) - i5);
                    break;
                case 132:
                    i3 *= (int)l;
                    break;
                case 133:
                    i5 /= (int)(l | 1);
                    break;
                case 134:
                    i5 += s;
                    break;
                case 135:
                    i3 += (int)(((d1 * l) + i3) - i3);
                    break;
                case 136:
                    l = i4;
                    break;
                case 137:
                    s |= (short)-8572665451527351920L;
                    break;
                case 138:
                    i4 = i3;
                    break;
                case 139:
                    i5 = (int)-116L;
                    break;
                case 140:
                    i3 = i3;
                case 141:
                    s <<= (short)i5;
                    break;
                case 142:
                    f = 53796L;
                    break;
                case 143:
                    i3 += (int)(d1 * d1);
                    break;
                case 144:
                    by1 = (byte)-123.13192;
                case 145:
                    i3 += (int)d1;
                    break;
                case 146:
                    iArr1[(int)(d1)] += i3;
                    break;
                case 147:
                    try {
                        i3 = (iArr1[(int)(d1 - 1)] / 58760);
                        i5 = (i5 % i4);
                        i3 = (-102 % i5);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 148:
                    i3 = i5;
                    break;
                case 149:
                    i4 *= i4;
                    break;
                case 150:
                    i3 -= i5;
                    break;
                case 151:
                    i5 += (int)d2;
                    break;
                case 152:
                    s += (short)(((d1 * by1) + i5) - i5);
                case 153:
                    Test.instanceCount = 12;
                    break;
                case 154:
                    Test.instanceCount += (long)f;
                    break;
                case 155:
                    i3 = i4;
                    break;
                case 156:
                    iArr1[(int)(d1)] -= (int)d1;
                case 157:
                    i4 = i3;
                    break;
                case 158:
                    i4 += (int)d1;
                case 159:
                    by1 += (byte)(((d1 * f) + i4) - i6);
                    break;
                case 160:
                    i6 -= i3;
                    break;
                default:
                    lArr[(int)(d1)] >>= i6;
                }
            }
        }
        long meth_res = i3 + by1 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i5 +
            Double.doubleToLongBits(d2) + s + l + i6 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static boolean bMeth() {

        int i1=-6, i2=10, i7=106, i8=8, i9=40, i10=1, i11=-14;
        byte by2=58;
        float f1=2.864F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -3162103524L);

        for (i1 = 8; 151 > i1; i1++) {
            Test.instanceCount ^= (-((i2 * -638591064L) + iMeth()));
            for (i7 = 1; i7 < 11; i7++) {
                i2 -= i7;
                Test.instanceCount = (long)-104.53182;
            }
            switch (((i1 % 2) * 5) + 50) {
            case 53:
                Test.iArrFld[i1] &= by2;
                Test.instanceCount = -10;
                for (i9 = 1; i9 < 11; i9++) {
                    try {
                        Test.iArrFld[i1] = (i1 % -24360);
                        i2 = (-73 % i7);
                        i10 = (Test.iArrFld[i1] / i2);
                    } catch (ArithmeticException a_e) {}
                    i11 = 1;
                    while (++i11 < 2) {
                        i8 += -5046;
                        f1 += (i11 - f1);
                        lArr1[i1] = i8;
                        i8 += i11;
                    }
                }
                break;
            case 59:
                Test.iArrFld = Test.iArrFld;
                break;
            }
        }
        long meth_res = i1 + i2 + i7 + i8 + by2 + i9 + i10 + i11 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(lArr1);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public static void vMeth(byte by) {

        boolean b=false;
        int i12=-53124, i13=-13026, i14=-60;
        float f2=19.436F;
        double d3=0.128896;
        short s1=21079;

        b = bMeth();
        i12 = 1;
        do {
            Test.instanceCount += (i12 * i12);
            switch ((i12 % 2) + 113) {
            case 113:
                Test.lArrFld[i12] = i12;
                break;
            case 114:
                f2 = 1;
                do {
                    Test.fFld = i12;
                    Test.dArrFld[(int)(f2 + 1)] = d3;
                    by += (byte)(f2 * f2);
                } while (++f2 < 6);
                if (b) {
                    for (i13 = 1; 6 > i13; i13++) {
                        switch ((i12 % 9) + 81) {
                        case 81:
                            Test.iArrFld[i13] -= (int)53.940F;
                            Test.iArrFld[i12 + 1] <<= i13;
                            i14 += (i13 * i13);
                            break;
                        case 82:
                            Test.iArrFld[i13] = i14;
                            break;
                        case 83:
                            i14 = i13;
                        case 84:
                            Test.lArrFld[i13 - 1] -= i13;
                            break;
                        case 85:
                            Test.fFld = i14;
                            break;
                        case 86:
                            Test.fFld += 212;
                            break;
                        case 87:
                            Test.instanceCount *= i13;
                        case 88:
                            d3 = i12;
                            break;
                        case 89:
                            i14 = (int)d3;
                            break;
                        default:
                            i14 >>>= s1;
                        }
                    }
                } else {
                    if (b) break;
                }
                break;
            default:
                if (b) break;
            }
        } while (++i12 < 266);
        vMeth_check_sum += by + (b ? 1 : 0) + i12 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d3) + i13 + i14
            + s1;
    }

    public void mainTest(String[] strArr1) {

        double d=33.39544, d4=-1.67158;
        int i=-3, i15=-60, i16=2, i17=3, i18=7497, i19=9, i20=-45370, i21=27471, iArr[]=new int[N];
        short s2=-6505;
        boolean b2=false;
        float f3=83.318F;

        FuzzerUtils.init(iArr, 2);

        for (d = 9; 163 > d; d += 3) {
            i += (int)(((d * i) + i) - i);
            i = iArr[(int)(d + 1)];
            vMeth(Test.byFld);
            for (i15 = 8; 201 > i15; i15 += 2) {
                Test.instanceCount |= i16;
                for (i17 = 1; i17 < 6; ++i17) {
                    Test.byArrFld[(int)(d)] = (byte)i;
                    Test.fFld = Test.instanceCount;
                    iArr[i17] <<= (int)Test.instanceCount;
                }
                for (i19 = 1; 6 > i19; i19++) {
                    i16 += (i19 - i19);
                    if (true) {
                        Test.iArrFld[i19 + 1] -= i21;
                        i += i19;
                        s2 -= (short)-234;
                    } else if (b2) {
                        Test.instanceCount = (long)Test.fFld;
                        b2 = b2;
                        i18 = i16;
                    } else if (b2) {
                        i21 += i16;
                        Test.lArrFld[(int)(d + 1)] = Test.instanceCount;
                    } else {
                        d4 *= 13806L;
                    }
                    i20 <<= i;
                    Test.instanceCount += (((i19 * Test.instanceCount) + i20) - i19);
                    i20 += i19;
                    Test.instanceCount -= i18;
                    d4 += i19;
                    d4 += f3;
                    Test.byFld >>= (byte)i17;
                }
            }
            i += i20;
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  bMeth ->  bMeth vMeth mainTest
//DEBUG  iMeth ->  iMeth bMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
