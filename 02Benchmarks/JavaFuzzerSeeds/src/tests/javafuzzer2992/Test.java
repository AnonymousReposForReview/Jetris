package tests.javafuzzer2992;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 00:27:22 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=8533L;
    public float fFld=2.844F;
    public static volatile double dFld=0.72182;
    public static int iFld=98;
    public static int iFld1=-9;
    public static volatile int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 5);
        FuzzerUtils.init(Test.byArrFld, (byte)-109);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i5=176, i6=-132, i7=65324, i8=-64841, i9=1, i10=60522;
        byte by=-120;
        float f=1.1013F;
        short s1=6571;

        Test.dFld = Test.instanceCount;
        Test.iFld = Test.iFld;
        i5 = 1;
        while (++i5 < 320) {
            Test.iArrFld[i5] *= (int)Test.dFld;
            for (i6 = 1; i6 < 5; i6++) {
                Test.iFld -= by;
                i8 = 1;
                while (++i8 < 2) {
                    f -= Test.instanceCount;
                    s1 >>= (short)i6;
                }
                Test.iFld += Test.iFld;
                for (i9 = 1; i9 < 2; ++i9) {
                    i7 += (i9 + i8);
                    Test.instanceCount -= -19522;
                    Test.iFld >>= (int)Test.instanceCount;
                    i10 *= (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i5 + i6 + i7 + by + i8 + Float.floatToIntBits(f) + s1 + i9 + i10;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth1() {

        int i4=13, i11=-142, i12=3, i13=12, i14=-12, i15=-10;
        short s2=25760;
        byte by1=-20;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -47.462F);

        i4 -= (int)((Test.instanceCount += 55) + lMeth());
        for (i11 = 9; 394 > i11; ++i11) {
            i12 = (int)1.979F;
        }
        i13 = 1;
        while (++i13 < 359) {
            i12 -= i4;
            s2 = by1;
            s2 += (short)Test.instanceCount;
            i4 += i13;
            i4 += Test.iFld;
            if (i11 != 0) {
            }
        }
        for (i14 = 6; i14 < 223; i14++) {
            i4 |= i12;
            i15 += by1;
            s2 *= (short)Test.dFld;
            i4 += (int)Test.instanceCount;
        }
        long meth_res = i4 + i11 + i12 + i13 + s2 + by1 + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth(int i3, long l, long l1) {

        long l2=-10474L, lArr[]=new long[N];
        int i16=209, i17=-2, i18=0, i19=9, i20=14;
        float f2=-84.205F;
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)-11457);
        FuzzerUtils.init(lArr, 2062624484854557945L);

        sArr[(i3 >>> 1) % N] *= (short)iMeth1();
        if (true) {
            lArr[(i3 >>> 1) % N] <<= Test.instanceCount;
            for (l2 = 10; l2 < 364; l2 += 2) {
                if (b) {
                    Test.iFld += (int)(l2 + Test.iFld);
                    switch ((int)((l2 % 2) + 1)) {
                    case 1:
                        for (i17 = (int)(l2); i17 < 9; ++i17) {
                            lArr[(int)(l2 + 1)] = 6;
                            Test.iFld >>= (int)l1;
                            i16 -= (int)f2;
                            for (i19 = 1; i19 < 1; i19++) {
                                i18 = (int)1.2647;
                                l1 += i18;
                                lArr[i17] *= (long)55.66F;
                            }
                        }
                    case 2:
                        i16 &= (int)l2;
                        break;
                    }
                } else {
                    Test.byArrFld[(int)(l2 + 1)] >>= (byte)i19;
                }
            }
        } else if (false) {
            f2 *= i18;
        } else if (b) {
            f2 = i18;
        }
        long meth_res = i3 + l + l1 + l2 + i16 + i17 + i18 + Float.floatToIntBits(f2) + i19 + i20 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-59, i1=0, i2=121, i21=19783, i22=20568, iArr[]=new int[N];
        short s=-7619;
        double d=1.99868;
        long l3=4012981143L;
        boolean b1=false;
        byte by2=49;

        FuzzerUtils.init(iArr, 234);

        for (i = 1; i < 203; i++) {
            i2 = 124;
            while (--i2 > 0) {
                i1 = (int)((Test.instanceCount + (s + i2)) + (fFld * (iArr[i2]--)));
                i1 /= (int)((Math.max((long)(fFld + Test.instanceCount), Test.instanceCount) + (iMeth(-13,
                    Test.instanceCount, Test.instanceCount) - -11)) | 1);
                i1 -= (int)Test.dFld;
                fFld += (i2 * i2);
                iArr[i] -= i;
                fFld = i2;
                iArr[i] -= 5161;
                Test.instanceCount = 59799;
            }
            for (d = 3; 124 > d; ++d) {
                i21 += (int)((long)d | i2);
                Test.iFld <<= i1;
                switch ((int)(((d % 3) * 5) + 72)) {
                case 85:
                    i21 += (int)(d * d);
                    i21 = 135;
                    s >>>= (short)l3;
                    Test.iFld1 += (int)(d + i);
                case 87:
                    if (b1) break;
                    Test.iFld1 &= i2;
                case 74:
                    if (b1) break;
                    break;
                default:
                    i22 = 1;
                    while (++i22 < 2) {
                        fFld = Test.instanceCount;
                        Test.iFld1 <<= -136;
                        l3 -= (long)d;
                        i1 += (int)fFld;
                        i1 += by2;
                        if (b1) break;
                        if (b1) continue;
                        Test.instanceCount += i22;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
