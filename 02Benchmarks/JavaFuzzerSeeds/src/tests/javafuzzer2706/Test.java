package tests.javafuzzer2706;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 18:51:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3972843472431111925L;
    public static int iFld=103;
    public static volatile long lFld=5897191991658169083L;
    public static short sFld=-26348;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 9L);
        FuzzerUtils.init(Test.iArrFld, 20113);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5, int i6, int i7) {

        int i8=175, i9=11, i10=60835, i11=9, i12=4, i13=-144;
        boolean b=false;
        byte by=30;
        float f=-93.293F;
        double d=0.97376;

        for (i8 = 16; i8 < 281; i8++) {
            Test.instanceCount <<= -36413;
            for (i10 = 1; i10 < 6; ++i10) {
                for (i12 = 1; i12 < 2; i12++) {
                    b = b;
                    if (b) {
                        by += (byte)(((i12 * i7) + i8) - f);
                        Test.iArrFld[i8] += (int)d;
                    } else if (true) {
                        f += 24954;
                    }
                    Test.iFld = (int)d;
                    if (true) continue;
                    f += (i12 * Test.iFld);
                    f += (((i12 * i13) + Test.instanceCount) - i7);
                    Test.iFld = (int)Test.lFld;
                }
                Test.iFld >>= (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + by + Float.floatToIntBits(f)
            + Double.doubleToLongBits(d);
    }

    public static long lMeth(int i1, int i2) {

        int i3=7, i4=-2352, i14=4;
        float f1=35.565F;

        for (i3 = 7; i3 < 380; i3++) {
            i1 = (int)(((i1 - i3) * (Test.iFld++)) - Test.lArrFld[i3]);
            vMeth(i1, Test.iFld, 37159);
            i4 -= (int)-2.133F;
            Test.instanceCount += i3;
            Test.sFld += (short)(i3 ^ i4);
            i14 = 1;
            while (++i14 < 5) {
                i4 >>>= Test.iFld;
                switch (((i14 % 5) * 5) + 65) {
                case 87:
                    i2 += (54619 + (i14 * i14));
                    Test.instanceCount += i14;
                    i1 >>>= i1;
                    break;
                case 71:
                    i1 = i14;
                    break;
                case 86:
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 83:
                    i1 = (int)f1;
                    break;
                case 82:
                    f1 += i14;
                    break;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + i4 + i14 + Float.floatToIntBits(f1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public int iMeth(int i) {

        long l=-5L, l1=-36830L;
        float f2=1.722F;
        int i15=42433, i16=254, i17=56887, i18=34516, i19=54, i20=1039;
        double d1=-78.77785;

        lMeth(i, Test.iFld);
        l = l;
        Test.iArrFld[(160 >>> 1) % N] -= Test.iFld;
        for (f2 = 7; f2 < 178; f2++) {
            for (i16 = 1; i16 < 9; ++i16) {
                d1 = Test.instanceCount;
                d1 = i15;
                Test.lFld += (i16 | Test.instanceCount);
                switch (((-18221 >>> 1) % 2) + 97) {
                case 97:
                    for (i18 = 1; i18 < 2; ++i18) {
                        try {
                            i15 = (i % 248);
                            Test.iArrFld[i16 + 1] = (-806826220 % i);
                            Test.iArrFld[i18 + 1] = (648885949 % Test.iFld);
                        } catch (ArithmeticException a_e) {}
                        i19 += (i18 ^ i15);
                    }
                    for (l1 = 1; 2 > l1; l1++) {
                        Test.lFld |= 0;
                        i17 >>= (int)l1;
                    }
                    break;
                case 98:
                    i = i16;
                    break;
                }
            }
        }
        long meth_res = i + l + Float.floatToIntBits(f2) + i15 + i16 + i17 + Double.doubleToLongBits(d1) + i18 + i19 +
            l1 + i20;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {


        iMeth(Test.iFld);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
