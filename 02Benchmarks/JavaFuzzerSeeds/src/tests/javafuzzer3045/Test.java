package tests.javafuzzer3045;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 01:13:55 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=7062L;
    public static volatile byte byFld=29;
    public static float fFld=-2.256F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 137);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, int i4, int i5) {

        int i6=-6, i7=11, i8=-2, i9=43776, i10=3, i11=-41342;
        short s=19155;

        i6 = 1;
        while (++i6 < 153) {
            Test.instanceCount |= Test.instanceCount;
        }
        Test.iArrFld[(i4 >>> 1) % N] += -57205;
        for (i7 = 20; 370 > i7; ++i7) {
            f += (((i7 * i8) + i8) - i5);
            for (i9 = 1; i9 < 5; ++i9) {
                i11 = 1;
                while (++i11 < 2) {
                    boolean b=false;
                    Test.byFld <<= (byte)s;
                    i8 /= (int)(Test.byFld | 1);
                    i4 = Test.byFld;
                    b = false;
                    i8 += (((i11 * Test.instanceCount) + i9) - i4);
                    i8 += (((i11 * Test.instanceCount) + i6) - i8);
                    Test.iArrFld[i11 + 1] = i11;
                    i4 += 96;
                }
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + s;
    }

    public static void vMeth1(int i3) {

        int i12=-122, i13=-12, i14=36926, i15=7637, i16=-43204, i17=-5;
        boolean b1=true;

        vMeth2(Test.fFld, i3, i3);
        Test.instanceCount = i3;
        if (true) {
            Test.iArrFld[(-2 >>> 1) % N] = i3;
            Test.instanceCount += i3;
            for (i12 = 5; i12 < 132; ++i12) {
                b1 = b1;
                if (false) break;
                Test.byFld = (byte)i13;
                if (b1) continue;
                for (i14 = 1; i14 < 12; i14++) {
                    i13 = -3;
                    for (i16 = 1; i16 < 2; i16++) {
                        Test.instanceCount -= i16;
                    }
                    Test.instanceCount += (((i14 * i14) + i15) - i16);
                }
            }
        } else if (b1) {
            vMeth1_check_sum += i3 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + i16 + i17;
            return;
        } else {
            i17 *= (int)1.52795;
        }
        vMeth1_check_sum += i3 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + i16 + i17;
    }

    public static void vMeth(long l, int i2) {

        double d=84.63336;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -3987735124L);

        lArr[(-21105 >>> 1) % N] <<= (long)(((d + i2) - (-235L * d)) % (Math.max(Math.abs(i2), i2) | 1));
        vMeth1(i2);
        i2 -= i2;
        i2 += i2;
        vMeth_check_sum += l + i2 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-121, i1=3, i18=-39027, i19=2, i20=-14;
        short s1=-7278;
        boolean b2=true;
        double d1=1.98316;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 22685L);

        for (i = 17; i < 341; i++) {
            vMeth(Test.instanceCount, i1);
            i18 = 78;
            while (--i18 > 0) {
                for (i19 = 1; i19 < 1; ++i19) {
                    i20 = i19;
                    i20 = (int)Test.instanceCount;
                    switch (((i18 % 5) * 5) + 60) {
                    case 84:
                        i1 += i20;
                        break;
                    case 76:
                        Test.instanceCount = i18;
                        break;
                    case 62:
                        Test.fFld += (i19 * i19);
                        i1 += (i19 * i19);
                        lArr1[i19] += 1;
                        Test.instanceCount += (((i19 * Test.instanceCount) + Test.instanceCount) - i19);
                    case 78:
                        i20 = i19;
                        i1 /= (int)(i20 | 1);
                        i20 += i19;
                        break;
                    case 73:
                        Test.instanceCount -= i;
                        break;
                    }
                    Test.instanceCount *= i19;
                    i1 += (((i19 * i18) + i1) - i18);
                    i20 = i;
                    switch (((-11178 >>> 1) % 3) + 18) {
                    case 18:
                        i20 += i19;
                        s1 += (short)(i19 * i19);
                        Test.instanceCount += i;
                        Test.instanceCount *= (long)Test.fFld;
                        break;
                    case 19:
                        i20 += (i19 * i19);
                    case 20:
                        i20 *= (int)Test.fFld;
                        Test.fFld = 43857;
                        if (b2) continue;
                        lArr1[i19 + 1] += (long)d1;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
