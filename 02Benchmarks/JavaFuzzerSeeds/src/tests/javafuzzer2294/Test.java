package tests.javafuzzer2294;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 11:35:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4179059808L;
    public static float fFld=-71.697F;
    public static short sFld=-2875;
    public static int iFld=-23952;
    public static volatile boolean bFld=true;
    public static byte byFld=44;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i9) {

        int i10=20076, i11=-15276, i12=5, i13=14178, i14=57395, i15=-60447, iArr[]=new int[N];
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.386F);
        FuzzerUtils.init(iArr, 118);

        for (i10 = 14; i10 < 259; ++i10) {
            i9 = (int)Test.instanceCount;
            fArr[i10] = i11;
            if (i10 != 0) {
                vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + i14 + i15 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
                return;
            }
            for (i12 = 1; 7 > i12; i12++) {
                i11 = (int)Test.fFld;
                if (b) continue;
                i9 &= i11;
                i9 *= i13;
                Test.sFld = (short)i12;
                Test.sFld += (short)(((i12 * i13) + i12) - i9);
                for (i14 = i10; 2 > i14; ++i14) {
                    iArr[i14 - 1] = i14;
                    i15 = (int)26656L;
                    i15 += (i14 * Test.fFld);
                }
            }
        }
        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + i14 + i15 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth1() {


        vMeth2(Test.iFld);
        vMeth1_check_sum += 0;
    }

    public void vMeth(int i4, int i5, int i6) {

        int i7=41462, i8=44732, i16=0, i17=-9;
        double d=2.40361;
        byte by=83;

        for (i7 = 15; i7 < 248; i7++) {
            Test.instanceCount = (-(Test.instanceCount = Test.instanceCount));
            vMeth1();
            iArrFld[i7 - 1] |= i8;
            Test.instanceCount -= Test.instanceCount;
            if (Test.bFld) {
                if (Test.bFld) {
                    d = -54411;
                    by *= (byte)Test.sFld;
                    iArrFld[i7 - 1] >>= i4;
                    iArrFld = iArrFld;
                }
                for (i16 = i7; i16 < 7; i16++) {
                    iArrFld[i7 - 1] >>= -2;
                }
                i17 >>= i8;
            } else {
                Test.fFld -= i8;
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + i7 + i8 + Double.doubleToLongBits(d) + by + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=55340, i1=-65469, i2=-22861, i3=0, i18=177, i19=-13, i20=1762, i21=138, i22=60963, i23=-8, i24=78,
            i25=-202, i26=11;
        double d1=-126.115039;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 0.36F);

        for (i = 4; i < 242; ++i) {
            for (i2 = i; i2 < 106; i2++) {
                vMeth(i2, Test.iFld, -2);
            }
            for (i18 = 106; i18 > 6; i18 -= 3) {
                Test.sFld += (short)(i18 * i18);
                i1 = i1;
                d1 *= i18;
                for (i20 = 1; i20 < 4; i20++) {
                    Test.instanceCount = 67;
                    i21 += (((i20 * i) + i19) - Test.byFld);
                    i21 += i20;
                    i21 &= 10;
                    fArr1[(i1 >>> 1) % N] = Test.byFld;
                }
            }
            i22 = 1;
            while (++i22 < 106) {
                for (i23 = 1; i23 > i; i23--) {
                    fArr1[i23 + 1] = i19;
                    i3 <<= (int)-1309046771166139849L;
                    i1 <<= i21;
                    Test.fFld -= Test.instanceCount;
                    fArr1[i22 - 1] += i23;
                }
                i19 += i22;
                for (i25 = 1; 1 > i25; ++i25) {
                    i21 = i2;
                    fArr1 = fArr1;
                    i21 -= (int)261130143L;
                    i1 |= 5;
                    switch (((i22 % 3) * 5) + 95) {
                    case 104:
                        i19 -= i23;
                        Test.sFld = (short)i24;
                        Test.fFld += (i25 * i25);
                        break;
                    case 102:
                        iArrFld[i25 + 1] = -6;
                        break;
                    case 97:
                        iArrFld[i22 - 1] = i3;
                        break;
                    default:
                        i3 <<= i19;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
