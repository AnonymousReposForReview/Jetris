package tests.javafuzzer3226;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 04:17:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-46559L;
    public static byte byFld=-20;
    public static float fFld=78.99F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i9=-6;

        Test.iArrFld[(i9 >>> 1) % N] *= i9;
        vMeth2_check_sum += i9;
    }

    public static void vMeth1(long l1, float f) {

        float f1=2.191F;
        int i6=-53809, i7=-130, i8=13;

        for (f1 = 7; f1 < 199; ++f1) {
            for (i7 = 1; 8 > i7; ++i7) {
                Test.iArrFld[i7] -= (i6 + i8);
                switch ((((i8 >>> 1) % 3) * 5) + 119) {
                case 126:
                    f += ((++i8) + ((Test.byFld = (byte)-11L) * 0.801F));
                    vMeth2();
                    f -= f;
                    Test.iArrFld[(int)(f1 - 1)] >>= 162;
                    break;
                case 127:
                    l1 = (long)-50.929F;
                    i8 *= (int)Test.instanceCount;
                    Test.iArrFld[i7] -= (int)f1;
                    i8 += (i7 * i7);
                    break;
                case 124:
                    i6 += (int)f1;
                    Test.iArrFld[(int)(f1 - 1)] |= i6;
                    i8 <<= i7;
                    break;
                }
            }
        }
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + Float.floatToIntBits(f1) + i6 + i7 + i8;
    }

    public void vMeth(long l, int i2, int i3) {

        int i4=103, i5=173, i10=-180, i11=-1, i12=115, i13=3;
        float f2=-2.271F;
        double d1=67.49247, d2=115.72712;
        long lArr[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, -149L);
        FuzzerUtils.init(bArr, true);

        for (i4 = 5; i4 < 240; ++i4) {
            switch ((i4 % 8) + 99) {
            case 99:
                l ^= (--i5);
                if (i2 != 0) {
                    vMeth_check_sum += l + i2 + i3 + i4 + i5 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) +
                        i10 + i11 + Double.doubleToLongBits(d2) + i12 + i13 + FuzzerUtils.checkSum(lArr) +
                        FuzzerUtils.checkSum(bArr);
                    return;
                }
                break;
            case 100:
                vMeth1(l, f2);
                lArr[i4 + 1] <<= i4;
                break;
            case 101:
                i2 += i2;
                d1 = 7;
                while (--d1 > 0) {
                    Test.iArrFld[i4 - 1] >>>= i5;
                    for (i10 = 1; i10 < 1; i10++) {
                        boolean b=true;
                        d2 *= i12;
                        f2 %= ((long)(f2) | 1);
                        bArr[(int)(d1)] = b;
                        i13 += (int)-20.532F;
                        i5 += (i10 * i10);
                    }
                }
                break;
            case 102:
                Test.iArrFld[i4 + 1] *= (int)Test.instanceCount;
            case 103:
                i13 <<= i12;
                break;
            case 104:
                i2 *= i11;
            case 105:
                i11 -= -71;
                break;
            case 106:
                f2 -= i3;
                break;
            default:
                i13 = 1837;
            }
        }
        vMeth_check_sum += l + i2 + i3 + i4 + i5 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i10 + i11 +
            Double.doubleToLongBits(d2) + i12 + i13 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=163, i14=14, i15=84, i16=51565, i17=-57923, i18=-103, i19=-2, i20=-13, i21=-14610;
        double d=0.79792;
        long l2=-2574362482L, lArr1[]=new long[N];
        short s=-28138;

        FuzzerUtils.init(lArr1, -11507L);

        for (i = 4; 251 > i; i++) {
            i1 -= (int)(Math.abs(6) * ((i1++) - (-165L + (i1 /= (int)((long)(d) | 1)))));
            vMeth(Test.instanceCount, i1, i);
            i14 = 1;
            do {
                i1 += i1;
                Test.iArrFld[i14 - 1] = (int)l2;
                Test.byFld -= (byte)i;
                i1 &= -11;
                Test.iArrFld[i14] = i1;
                d = i;
                Test.instanceCount += 1;
                i1 += i14;
                Test.fFld += (i14 + i1);
                l2 *= (long)Test.fFld;
            } while (++i14 < 102);
            i1 *= 4345;
            Test.byFld += (byte)l2;
            for (i15 = 1; i15 < 102; i15++) {
                i1 ^= s;
            }
            i16 = s;
            l2 += l2;
        }
        s >>= (short)Test.instanceCount;
        i16 = (int)l2;
        for (i17 = 3; 202 > i17; i17++) {
            i19 = 1;
            while (++i19 < 126) {
                i1 += (((i19 * i15) + i19) - i);
                i1 += i18;
                i1 += i1;
                for (i20 = 1; i20 < 1; i20++) {
                    l2 = i20;
                }
                lArr1 = lArr1;
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
