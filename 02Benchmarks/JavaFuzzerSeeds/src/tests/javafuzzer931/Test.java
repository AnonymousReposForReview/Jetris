package tests.javafuzzer931;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 11:50:02 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-137L;
    public static volatile double dFld=-104.17308;
    public static int iFld=48016;
    public static volatile float fFld=-45.181F;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3427537410050254934L);
        FuzzerUtils.init(Test.dArrFld, 2.43570);
        FuzzerUtils.init(Test.iArrFld, 71);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static int iMeth(long l1, double d, int i1) {


        l1 >>>= (i1 + (i1 >>= (int)(i1 % ((long)(d) | 1))));
        long meth_res = l1 + Double.doubleToLongBits(d) + i1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i11=-13, i12=-2, i13=13, i14=248;

        Test.iFld *= Test.iFld;
        i11 = 1;
        while (++i11 < 259) {
            Test.instanceCount += (i11 - i11);
            i12 = 1;
            while (++i12 < 6) {
                if (i11 != 0) {
                    vMeth1_check_sum += i11 + i12 + i13 + i14;
                    return;
                }
                Test.iFld = Test.iFld;
                Test.iFld = i12;
                for (i13 = 1; i13 > i12; i13--) {
                    Test.fFld -= i13;
                    if (true) continue;
                    Test.lArrFld[i12] ^= 4758;
                    Test.instanceCount += (long)1.939F;
                    Test.iFld = -51596;
                }
            }
        }
        i14 += i12;
        Test.instanceCount = Test.iFld;
        vMeth1_check_sum += i11 + i12 + i13 + i14;
    }

    public static int iMeth1(int i7, int i8) {

        int i9=-48647, i10=-11, i15=121, i16=41484, i17=6, i18=-22, iArr[]=new int[N];
        boolean b1=false;

        FuzzerUtils.init(iArr, 32632);

        Test.lArrFld[(i7 >>> 1) % N] = (long)-121.141F;
        for (i9 = 5; i9 < 153; i9++) {
            i7 -= ((i7 = (--i10)) + (++i10));
            vMeth1();
            iArr[i9 + 1] += (int)Test.instanceCount;
            if (b1) {
                i7 += (i9 ^ Test.instanceCount);
            } else {
                i10 += i9;
            }
            for (i15 = 1; i15 < 11; i15++) {
                Test.instanceCount += (i15 - i10);
                for (i17 = 2; i17 > 1; i17--) {
                    Test.dArrFld[i17 - 1] -= Test.iFld;
                    Test.fFld -= i7;
                    Test.fFld += i15;
                }
            }
            Test.instanceCount += (-239L + (i9 * i9));
        }
        long meth_res = i7 + i8 + i9 + i10 + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(long l, boolean b, int i) {

        int i2=-3, i3=21, i4=182, i5=56008, i6=-155, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -41141);

        i -= (-iMeth(l, -9 * i, i++));
        i2 = 1;
        while (++i2 < 158) {
            for (i3 = i2; i3 < 10; ++i3) {
                l <<= (((i++) - iMeth(-112L, Test.dFld, -8)) >> i2);
                for (i5 = 1; i5 > 1; i5--) {
                    i6 += (i6 - iMeth1(i5, i2));
                    i6 = 105;
                    try {
                        i = (i6 / i4);
                        i6 = (i3 % -40889);
                        iArr1[i2 + 1] = (i2 % 11362);
                    } catch (ArithmeticException a_e) {}
                    Test.instanceCount = -232;
                    Test.iFld = i2;
                }
                iArr1 = iArr1;
            }
            Test.fFld = Test.instanceCount;
            i4 *= i6;
            l -= 9;
        }
        i6 -= (int)l;
        vMeth_check_sum += l + (b ? 1 : 0) + i + i2 + i3 + i4 + i5 + i6 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        boolean b2=false;
        int i19=-251, i20=203, i21=-4, i22=-254, i23=-80, i24=-5, i25=8, i26=-166, i27=-239, i28=-6, iArr2[][]=new
            int[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -2.36F);
        FuzzerUtils.init(iArr2, -1636);

        vMeth(Test.instanceCount, b2, Test.iFld);
        Test.iFld -= Test.iFld;
        for (i19 = 1; i19 < 134; i19++) {
            Test.lArrFld[i19 + 1] = i19;
            Test.fFld = i20;
        }
        Test.instanceCount = i19;
        Test.iArrFld[(-79 >>> 1) % N] -= (int)104.419F;
        i21 = 1;
        while (++i21 < 213) {
            fArr[i21 - 1] *= i20;
            for (i22 = 4; i22 < 118; i22++) {
                Test.iFld = Test.iFld;
                i23 += (i22 * i22);
                Test.iArrFld = Test.iArrFld;
                i24 = 1;
                while (++i24 < 2) {
                    Test.iFld = i19;
                }
                for (i25 = 1; i25 < 2; ++i25) {
                    Test.instanceCount *= i24;
                    Test.fFld *= i22;
                    Test.instanceCount >>= i25;
                    Test.instanceCount = i19;
                    Test.dFld += Test.dFld;
                    Test.instanceCount = i22;
                }
                Test.iFld += (((i22 * i22) + i21) - i23);
                Test.fFld = -1.860F;
                i23 *= (int)-2.401F;
                i20 /= (int)((long)(Test.fFld) | 1);
                for (i27 = 1; i27 < 2; ++i27) {
                    i20 -= (int)Test.fFld;
                    Test.iArrFld = Test.iArrFld;
                    iArr2 = iArr2;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
