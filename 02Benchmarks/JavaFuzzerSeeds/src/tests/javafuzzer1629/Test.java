package tests.javafuzzer1629;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:27:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7752281036724213810L;
    public volatile float fFld=-61.174F;
    public volatile boolean bFld=true;
    public static int iFld=-2;
    public static double dFld=0.29589;
    public long lArrFld[]=new long[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 113.42453);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public void vMeth(long l1, int i6, long l2) {

        int i7=-56036, i8=-22355, i9=-59151, i10=-92, iArr2[]=new int[N];
        short s=8845;
        double d=1.68287;

        FuzzerUtils.init(iArr2, 2079);

        i7 = 1;
        do {
            Test.dFld -= l2;
            s *= (short)i7;
            l2 += (long)Test.dFld;
            s += (short)Test.instanceCount;
        } while (++i7 < 168);
        Test.iFld = i6;
        i6 *= (int)fFld;
        lArrFld[(Test.iFld >>> 1) % N] += i7;
        Test.iFld = -12;
        iArr2[(Test.iFld >>> 1) % N] -= (int)998604796L;
        switch (((i8 >>> 1) % 5) + 62) {
        case 62:
        case 63:
            for (i9 = 10; i9 < 384; ++i9) {
                d = 5;
                do {
                    fFld += l2;
                    Test.iFld += i7;
                } while (--d > 0);
            }
        case 64:
            Test.dFld += s;
            break;
        case 65:
            Test.dFld = 42.847F;
            break;
        case 66:
            Test.dFld += -2.866F;
            break;
        default:
            fFld = l1;
        }
        vMeth_check_sum += l1 + i6 + l2 + i7 + s + i8 + i9 + i10 + Double.doubleToLongBits(d) +
            FuzzerUtils.checkSum(iArr2);
    }

    public int iMeth1() {


        vMeth(Test.instanceCount, Test.iFld, -137L);
        long meth_res = 0;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public int iMeth() {

        int i4=18806, i5=-22884, i11=-31477, i12=12, iArr1[]=new int[N];
        byte by=124;

        FuzzerUtils.init(iArr1, 169);

        bFld = ((Math.abs(fFld) - (Test.iFld++)) == 1.99478);
        for (int i3 : iArr1) {
            for (i4 = 1; i4 < 4; ++i4) {
                fFld += Test.iFld;
                if (bFld) {
                    lArrFld[i4 - 1] *= (i3 -= (iMeth1() + by));
                    if (bFld) continue;
                    Test.iFld |= i3;
                } else if (bFld) {
                    switch ((i4 % 2) + 110) {
                    case 110:
                        Test.iFld = by;
                        Test.iFld += 0;
                        for (i11 = 1; i11 < 2; ++i11) {
                            by = (byte)2252504037L;
                            if (i5 != 0) {
                            }
                            i12 = Test.iFld;
                        }
                    case 111:
                        by -= by;
                        break;
                    }
                }
            }
        }
        long meth_res = i4 + i5 + by + i11 + i12 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=14, i1=126, i2=170, i13=-13, i14=-78, i15=57212, i16=-62, i17=-197, iArr[]=new int[N];
        long l=-94L;
        short s1=-10954;

        FuzzerUtils.init(iArr, 252);

        for (i = 10; i < 241; ++i) {
            for (l = 2; l < 109; l++) {
                iArr[i + 1] += (int)fFld;
                iArr[i] -= (int)(i1 - ((i * l) + (i - fFld)));
                lArrFld[i] = (((i + i2) + (i1 = i)) - Math.max((int)(-(-(Test.instanceCount - i2))), iMeth()));
                switch ((int)((l % 3) + 59)) {
                case 59:
                    for (i13 = 2; 1 < i13; i13--) {
                        iArr[i13 + 1] += i13;
                        i14 -= Test.iFld;
                        i14 += i13;
                        lArrFld = lArrFld;
                        Test.iFld += (i13 + fFld);
                        i14 = i13;
                        Test.iFld *= s1;
                        lArrFld = FuzzerUtils.long1array(N, (long)0L);
                        Test.instanceCount >>= i2;
                        Test.dFld = Test.iFld;
                    }
                    Test.instanceCount *= 106;
                    lArrFld[(int)(l + 1)] -= 47013L;
                    break;
                case 60:
                    Test.iFld *= -34;
                    i2 -= i2;
                    iArr[i] = (int)30.81F;
                    break;
                case 61:
                    if (bFld) break;
                }
                i14 <<= i14;
                for (i15 = (int)(l); i15 < 2; i15++) {
                    Test.dFld = i2;
                    Test.dArrFld[i - 1] = 4;
                    fFld /= ((long)(Test.dFld) | 1);
                    i17 += (((i15 * l) + fFld) - i16);
                    Test.iFld = (int)l;
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth1 iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
