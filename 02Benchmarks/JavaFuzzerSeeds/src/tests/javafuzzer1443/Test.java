package tests.javafuzzer1443;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 20:49:09 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-6L;
    public static float fFld=0.117F;
    public static byte byFld=77;
    public static double dFld=-34.22141;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s) {

        boolean b=true;

        b = b;
        vMeth1_check_sum += s + (b ? 1 : 0);
    }

    public static long lMeth(int i8, int i9, int i10) {

        short s1=29543;
        int i11=-4, i12=2, i13=6, i14=8, i15=52, i16=61444, i17=2;
        float f=94.601F;
        boolean b1=false;

        i9 >>= i9;
        vMeth1(s1);
        for (i11 = 18; i11 < 356; ++i11) {
            if (true) {
                Test.fFld -= Test.fFld;
                i8 >>= i12;
            } else if (b1) {
                i12 += i11;
                for (i13 = 5; 1 < i13; i13--) {
                    for (f = 1; 2 > f; ++f) {
                        i12 += (int)(f * f);
                        i10 = (int)-3585535552L;
                    }
                    for (i16 = i13; i16 < 2; i16++) {
                        i14 += (((i16 * Test.instanceCount) + Test.byFld) - i14);
                    }
                    i9 += (int)-160L;
                    i17 -= -8;
                }
            } else {
                b1 = true;
            }
        }
        long meth_res = i8 + i9 + i10 + s1 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + i15 + i16 + i17 + (b1 ?
            1 : 0);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(long l1, int i3) {

        int i4=-19270, i5=-45321, i6=224, i7=-5;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 60413L);

        for (i4 = 137; i4 > 8; i4--) {
            l1 >>= (lArr[i4] + (Test.instanceCount + i5));
            for (i6 = i4; i6 < 12; i6++) {
                Test.instanceCount = l1;
                switch ((((i3 >>> 1) % 2) * 5) + 99) {
                case 101:
                    switch (((i4 % 10) * 5) + 67) {
                    case 103:
                        i5 >>>= (int)lMeth(i6, i5, -122);
                        if (b2) break;
                        i5 += (i6 | i6);
                    case 71:
                        i5 += (((i6 * i3) + Test.instanceCount) - i7);
                        if (b2) continue;
                        if (b2) {
                            i5 = (int)Test.fFld;
                            Test.instanceCount = i7;
                            i7 += i3;
                        } else if (b2) {
                            Test.byFld <<= (byte)i4;
                        } else {
                            try {
                                i3 = (-13918 / i7);
                                i5 = (56369 / i5);
                                i3 = (i7 % 167);
                            } catch (ArithmeticException a_e) {}
                            vMeth_check_sum += l1 + i3 + i4 + i5 + i6 + i7 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    case 80:
                        i5 = 166;
                        break;
                    case 77:
                    case 73:
                        i5 += (int)Test.fFld;
                        break;
                    case 96:
                        Test.fFld += (((i6 * i3) + l1) - l1);
                        break;
                    case 107:
                        i5 += (int)l1;
                        break;
                    case 116:
                    case 79:
                        i7 += (((i6 * i4) + i6) - Test.instanceCount);
                        break;
                    case 84:
                        Test.instanceCount -= i3;
                        break;
                    default:
                        Test.dFld *= 105;
                    }
                    break;
                case 109:
                    Test.fFld += Test.byFld;
                    break;
                }
            }
        }
        vMeth_check_sum += l1 + i3 + i4 + i5 + i6 + i7 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=111, i1=-219, i2=43651, i19=-9, i20=11, i21=-210, i22=-4;
        long l=-10L, l2=-48466L;
        short s2=-29019;
        boolean b3=false;

        i = 1;
        while (++i < 235) {
            i1 = 1;
            do {
                for (l = 1; l < 1; l++) {
                    vMeth(l, 177);
                    i2 += (int)(l * l);
                    i2 += (int)l;
                    Test.instanceCount = Test.instanceCount;
                    i2 += (int)(115L + (l * l));
                    i2 = i;
                }
                Test.dFld += Test.fFld;
                i2 *= i2;
            } while (++i1 < 107);
        }
        for (int i18 : Test.iArrFld) {
            if (b3) {
                Test.dFld = i1;
                i2 = (int)l2;
                for (i19 = 2; i19 < 63; ++i19) {
                    switch ((((i >>> 1) % 7) * 5) + 94) {
                    case 128:
                        Test.fFld *= i2;
                    case 117:
                        i18 += (-213 + (i19 * i19));
                        i2 = s2;
                        break;
                    case 112:
                        i2 += (i19 * i19);
                        break;
                    case 106:
                        Test.byFld = (byte)i20;
                        break;
                    case 115:
                        for (i21 = 1; i21 < 2; ++i21) {
                            Test.fFld /= ((long)(Test.fFld) | 1);
                            if (b3) {
                                if (b3) {
                                    Test.instanceCount += (168 + (i21 * i21));
                                    i20 += (i21 * i21);
                                    Test.instanceCount *= i;
                                    i22 -= (int)l2;
                                }
                            } else if (b3) {
                                if (b3) continue;
                            } else if (b3) {
                                l2 = i2;
                            } else {
                                i18 += i20;
                            }
                        }
                        break;
                    case 110:
                        i2 += (i19 - i);
                        break;
                    case 114:
                        Test.iArrFld[i19 - 1] += Test.byFld;
                        break;
                    }
                }
            } else {
                b3 = b3;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
