package tests.javafuzzer793;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 10:00:46 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=7L;
    public static int iFld=-56992;
    public short sFld=15382;
    public static volatile short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];
    public static long lArrFld1[][]=new long[N][N];
    public volatile int iArrFld[]=new int[N];
    public volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)-11859);
        FuzzerUtils.init(Test.lArrFld, 7014343714984361964L);
        FuzzerUtils.init(Test.lArrFld1, 9L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {

        int i10=-122, i11=11374, i12=11, i13=-8, i14=2436, iArr[][]=new int[N][N];
        short s2=22711;
        double d1=101.2777;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 11);
        FuzzerUtils.init(fArr, 12.480F);

        Test.lArrFld[(Test.iFld >>> 1) % N] += -14;
        Test.iFld = Test.iFld;
        for (i10 = 4; i10 < 156; ++i10) {
            Test.instanceCount = Test.instanceCount;
            iArr[i10][i10] = (int)Test.instanceCount;
            i12 = 1;
            while (++i12 < 10) {
                Test.iFld += (((i12 * s2) + i10) - Test.iFld);
                i11 = -1173;
                d1 = Test.instanceCount;
                Test.iFld = i11;
                for (i13 = 1; i13 < 1; i13++) {
                    boolean b=false;
                    b = b;
                    Test.iFld = i11;
                    i14 *= i11;
                    fArr[i13 - 1] *= i13;
                }
            }
        }
        long meth_res = i10 + i11 + i12 + s2 + Double.doubleToLongBits(d1) + i13 + i14 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i5, int i6, long l) {

        double d=-3.35013;
        short s=28108;
        long l1=-803674321L;
        int i7=-103, i8=42724, i9=-4747;

        d = Test.instanceCount;
        Test.instanceCount *= s;
        for (short s1 : Test.sArrFld) {
            i5 -= (int)(((Test.instanceCount + -9) * (l *= Test.instanceCount)) >> ((i5 * l) + Test.instanceCount));
            for (l1 = 1; l1 < 4; l1++) {
                switch ((int)((l1 % 3) + 62)) {
                case 62:
                    for (i8 = 2; i8 > l1; i8 -= 2) {
                        switch (((((-(++i6)) >>> 1) % 1) * 5) + 53) {
                        case 54:
                            i7 = (i8 - Math.max((int)(i8 - 1.486F), i7 + i9));
                        }
                        i7 -= (int)d;
                        i5 -= (iMeth1() % (i6 | 1));
                        switch ((int)((l1 % 5) + 70)) {
                        case 70:
                            Test.iFld += i8;
                            i5 = Test.iFld;
                            i9 = i6;
                            break;
                        case 71:
                            l &= -21946;
                            break;
                        case 72:
                            Test.instanceCount = -165;
                            break;
                        case 73:
                            Test.lArrFld1 = Test.lArrFld1;
                            break;
                        case 74:
                            d = i7;
                            break;
                        default:
                            Test.iFld = i7;
                        }
                    }
                    break;
                case 63:
                    d = i6;
                    break;
                case 64:
                    Test.iFld >>= i7;
                default:
                    l += i9;
                }
            }
        }
        vMeth_check_sum += i5 + i6 + l + Double.doubleToLongBits(d) + s + l1 + i7 + i8 + i9;
    }

    public static int iMeth(int i2) {

        int i3=138, i4=30, i15=4, i16=17590, iArr1[][]=new int[N][N];
        boolean b1=true, bArr[]=new boolean[N];
        float f1=0.84F;
        double d2=2.71455;

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(iArr1, 251);

        for (i3 = 5; i3 < 170; ++i3) {
            vMeth(i3, i4, 36756L);
            Test.iFld += i3;
            i2 += Test.iFld;
            bArr[i3 + 1] = b1;
            for (f1 = 1; f1 < 10; f1++) {
                for (d2 = i3; 2 > d2; d2++) {
                    Test.instanceCount = (long)-7.109350;
                    iArr1[i3][i3 - 1] >>= Test.iFld;
                    iArr1 = iArr1;
                    iArr1[(int)(f1)][(int)(f1 + 1)] *= i4;
                    iArr1[(int)(d2)][(int)(d2)] = i3;
                    Test.instanceCount -= 26003;
                    i16 &= Test.iFld;
                    Test.iFld = (int)Test.instanceCount;
                }
            }
        }
        long meth_res = i2 + i3 + i4 + (b1 ? 1 : 0) + Float.floatToIntBits(f1) + i15 + Double.doubleToLongBits(d2) +
            i16 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-172, i1=-62052, i17=35670, i18=-54582;
        float f=-116.891F, f2=96.703F;
        byte by=-113;
        double d3=-2.60042;

        for (i = 15; i < 382; ++i) {
            f += i;
            i1 += iMeth(Test.iFld);
            switch ((i % 1) + 35) {
            case 35:
                f = Test.instanceCount;
                Test.iFld = i;
                break;
            }
            Test.iFld += (-26 + (i * i));
            for (i17 = 69; i17 > 3; i17 -= 3) {
                sFld -= (short)i17;
                by = (byte)f;
                f2 = 1;
                do {
                    iArrFld[i17] += i1;
                    switch ((int)(((f2 % 1) * 5) + 50)) {
                    case 51:
                        f -= 37552;
                        break;
                    default:
                        switch (((-4171 >>> 1) % 10) + 105) {
                        case 105:
                            f += sFld;
                            Test.instanceCount += (5 + (f2 * f2));
                            i1 -= i;
                            Test.instanceCount -= -35725L;
                            break;
                        case 106:
                            i18 -= 55537;
                        case 107:
                            Test.iFld -= (int)2158907345L;
                            fArrFld[i17 - 1] = 25;
                            i1 -= (int)Test.instanceCount;
                            iArrFld[i + 1] = i;
                            break;
                        case 108:
                            i18 = i1;
                            i1 = i17;
                            i18 += (int)(((f2 * Test.instanceCount) + i17) - Test.instanceCount);
                            Test.iFld -= Test.iFld;
                        case 109:
                            i18 *= i;
                            iArrFld[i17 + 1] = (int)d3;
                        case 110:
                            d3 += 48702;
                        case 111:
                            i18 -= (int)Test.instanceCount;
                            break;
                        case 112:
                            i1 += i;
                            break;
                        case 113:
                            Test.iFld += (int)(f2 * i17);
                            break;
                        case 114:
                        default:
                            iArrFld[i + 1] = (int)f2;
                        }
                    }
                } while (++f2 < 4);
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
