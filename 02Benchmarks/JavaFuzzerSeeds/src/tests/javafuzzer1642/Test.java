package tests.javafuzzer1642;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 00:39:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-217L;
    public static int iFld=-10;
    public static float fFld=53.994F;
    public static int iFld1=-251;
    public double dFld=-1.45579;
    public static short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)12043);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-88;
        float f=2.59F;
        short s=-31192;

        Test.instanceCount = i4;
        f -= Test.instanceCount;
        s = (short)Test.instanceCount;
        i4 &= i4;
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + s;
    }

    public static void vMeth(int i3) {

        int i5=-10327, i6=-38435, i7=-214, i8=-87, i9=1, i10=238, iArr[]=new int[N];
        byte by3=-65, byArr[]=new byte[N];
        double d=0.109937;
        float f1=1.942F;
        short s1=18047;

        FuzzerUtils.init(iArr, -214);
        FuzzerUtils.init(byArr, (byte)-84);

        vMeth1();
        iArr[(3 >>> 1) % N] += 58046;
        for (i5 = 1; i5 < 314; ++i5) {
            for (i7 = 1; i7 < 5; ++i7) {
                for (i9 = 1; i9 < 2; i9++) {
                    iArr[i9 + 1] += by3;
                    i8 <<= i7;
                    i3 -= (int)d;
                    i10 += (int)101.60280;
                    i10 += i9;
                    Test.instanceCount = i7;
                    f1 += i9;
                }
                i6 = i6;
                i6 += (((i7 * i10) + i9) - s1);
                i3 = 10;
            }
        }
        vMeth_check_sum += i3 + i5 + i6 + i7 + i8 + i9 + i10 + by3 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + s1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
    }

    public static long lMeth(int i1, byte by, byte by1) {

        int i2=1, i11=12, i12=-59020, iArr1[]=new int[N];
        long l=-2224297919L;
        float f2=0.89F, fArr[]=new float[N];
        double d1=1.109209;
        boolean b=true;
        byte byArr1[]=new byte[N];

        FuzzerUtils.init(fArr, -126.1004F);
        FuzzerUtils.init(iArr1, -246);
        FuzzerUtils.init(byArr1, (byte)-110);

        i2 = 1;
        do {
            vMeth(i2);
            fArr[i2 - 1] = Test.iFld;
            iArr1[i2 + 1] = (int)-62355L;
            Test.instanceCount = 47257;
            i11 = 5;
            while (--i11 > 0) {
                for (l = 1; l < 1; l++) {
                    i12 |= (int)Test.instanceCount;
                }
                f2 += (float)d1;
                i12 += i2;
                b = false;
                i1 = (int)Test.instanceCount;
                iArr1[i2] = i1;
            }
            Test.instanceCount += (i2 * i2);
            byArr1[i2 + 1] = (byte)l;
        } while (++i2 < 342);
        long meth_res = i1 + by + by1 + i2 + i11 + l + i12 + Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) +
            (b ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(byArr1);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-12705, i13=-30339, i14=-64215, i15=35777, i16=-69, i17=-10599, i18=170, iArr2[]=new int[N];
        byte by4=-41;
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.74144);
        FuzzerUtils.init(iArr2, -11);

        i -= (int)(((-lMeth(i, by4, (byte)(62))) + i) + Test.fFld);
        for (double d2 : dArr) {
            Test.fFld -= -15616;
            switch (((i >>> 1) % 2) + 54) {
            case 54:
                i += (int)Test.instanceCount;
                break;
            case 55:
                if (b1) break;
                break;
            }
            by4 -= (byte)Test.instanceCount;
        }
        i13 = Test.iFld1;
        iArr2[(Test.iFld >>> 1) % N] = Test.iFld;
        iArr2 = iArr2;
        Test.iFld1 -= (int)dFld;
        if (false) {
            for (i14 = 13; 245 > i14; i14 += 2) {
                for (i16 = 13; i16 < 216; ++i16) {
                    i17 >>= (int)95L;
                    i17 = (int)5404572655934661631L;
                    Test.fFld = 96;
                    i17 &= i16;
                    i15 = i15;
                    Test.instanceCount += i16;
                    Test.fFld -= i14;
                }
                i -= (int)Test.instanceCount;
            }
            Test.instanceCount -= -22480;
            i13 *= Test.iFld;
            Test.fFld = Test.iFld1;
        } else {
            i18 = 1;
            do {
                i15 += (((i18 * i) + Test.instanceCount) - i18);
                i15 += (((i18 * i) + Test.instanceCount) - i);
                Test.sArrFld = Test.sArrFld;
                i -= -12;
            } while (++i18 < 249);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
