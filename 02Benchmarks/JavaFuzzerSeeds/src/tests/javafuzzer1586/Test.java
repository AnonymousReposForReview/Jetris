package tests.javafuzzer1586;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 23:23:51 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=194L;
    public static int iFld1=-32384;
    public static boolean bFld=true;
    public static float fFld=0.941F;
    public long lFld=55477L;
    public short sFld=-25316;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.fArrFld, 124.282F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long byMeth_check_sum = 0;

    public static byte byMeth() {

        int i4=-53746, i5=0, i6=217, i7=-212;
        byte by=-9;
        float f=-1.985F;
        boolean b=false;

        Test.iFld1 >>= Test.iFld1;
        for (i4 = 5; i4 < 134; ++i4) {
            double d=-57.14008;
            Test.iFld1 *= (int)Test.instanceCount;
            Test.iArrFld[i4 + 1] -= by;
            Test.iFld1 = -3;
            if (false) {
                switch ((i4 % 6) + 41) {
                case 41:
                    Test.iArrFld[i4 + 1] = i4;
                    for (i6 = 12; i6 > 1; i6 -= 2) {
                        i7 <<= i4;
                        switch (((i4 % 2) * 5) + 89) {
                        case 97:
                            switch ((i4 % 9) + 79) {
                            case 79:
                                by += (byte)i7;
                                Test.iArrFld[i6] = 78;
                                break;
                            case 80:
                            case 81:
                                i5 += i7;
                            case 82:
                                Test.iFld1 += (int)Test.instanceCount;
                            case 83:
                            case 84:
                                Test.iFld1 -= (int)Test.instanceCount;
                                break;
                            case 85:
                                f += (i6 * i6);
                            case 86:
                                Test.iArrFld[(i5 >>> 1) % N] = i4;
                                break;
                            case 87:
                                Test.iFld1 *= -12;
                                break;
                            default:
                                Test.instanceCount = Test.iFld1;
                            }
                            break;
                        case 96:
                            Test.iArrFld[i6 - 1] *= (int)f;
                        }
                    }
                    break;
                case 42:
                    i5 -= (int)Test.instanceCount;
                    break;
                case 43:
                    if (false) continue;
                    break;
                case 44:
                    try {
                        Test.iFld1 = (Test.iFld1 / Test.iArrFld[i4 + 1]);
                        Test.iArrFld[i4 - 1] = (i4 / -154);
                        Test.iArrFld[(i7 >>> 1) % N] = (i7 % i5);
                    } catch (ArithmeticException a_e) {}
                case 45:
                    i5 = (int)d;
                case 46:
                    Test.iArrFld[i4 + 1] = by;
                    break;
                default:
                    b = b;
                }
            } else if (b) {
                i5 += (i4 * i4);
            } else {
                Test.instanceCount = -11949;
            }
        }
        long meth_res = i4 + i5 + by + i6 + i7 + Float.floatToIntBits(f) + (b ? 1 : 0);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public static void vMeth1(short s, long l) {

        int i1=-39450, i2=25061, i3=-12, i8=-41989, i9=-22530, iArr[]=new int[N];
        double d1=0.39644;
        byte by1=-24, byArr[]=new byte[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, -112);
        FuzzerUtils.init(fArr, -1.654F);
        FuzzerUtils.init(byArr, (byte)77);

        if (Test.bFld) {
            iArr[(Test.iFld1 >>> 1) % N] = iArr[(Test.iFld1 >>> 1) % N];
        } else if (Test.bFld) {
            i1 = 1;
            do {
                for (i2 = 1; i2 < 5; ++i2) {
                    float f1=0.897F;
                    Test.instanceCount &= byMeth();
                    i3 += Test.iFld1;
                    f1 += Test.instanceCount;
                    switch ((((i1 >>> 1) % 8) * 5) + 109) {
                    case 111:
                        for (i8 = 1; i8 < 2; i8++) {
                            i3 += (i8 * i8);
                            i3 >>= i3;
                            fArr[i8 + 1] *= i3;
                            d1 += i1;
                            by1 &= (byte)Test.iFld1;
                            i9 = Test.iFld1;
                        }
                        break;
                    case 140:
                    case 120:
                        byArr[i2] -= (byte)d1;
                    case 112:
                        l = 153;
                        break;
                    case 116:
                        if (i9 != 0) {
                            vMeth1_check_sum += s + l + i1 + i2 + i3 + i8 + i9 + Double.doubleToLongBits(d1) + by1 +
                                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                FuzzerUtils.checkSum(byArr);
                            return;
                        }
                        break;
                    case 137:
                    case 124:
                        Test.iArrFld[i2 - 1] *= i1;
                        break;
                    case 133:
                        i3 += (i2 * i2);
                    default:
                        i9 *= 6956;
                    }
                }
            } while (++i1 < 310);
            vMeth1_check_sum += s + l + i1 + i2 + i3 + i8 + i9 + Double.doubleToLongBits(d1) + by1 +
                FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                FuzzerUtils.checkSum(byArr);
            return;
        }
        vMeth1_check_sum += s + l + i1 + i2 + i3 + i8 + i9 + Double.doubleToLongBits(d1) + by1 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(int i) {

        short s1=1291;
        int i10=-7, i11=-4, i12=233;
        long l1=5926484756508709707L;
        double d2=27.87949;

        vMeth1(s1, Test.instanceCount);
        i10 = 367;
        do {
            i = (int)l1;
            Test.fFld = i10;
            Test.fFld += i10;
            Test.fFld += (((i10 * i) + l1) - i);
            i = -25;
            for (i11 = 1; i11 < 5; i11++) {
                Test.fFld = (float)d2;
            }
        } while (--i10 > 0);
        vMeth_check_sum += i + s1 + i10 + l1 + i11 + i12 + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr3) {

        int i13=87, i14=1, i15=-36969, i16=2, i17=-1776, i18=-17619, i19=9, i20=-10;
        byte by3=114;
        long l2=234103278L;

        Test.iFld1 ^= Test.iFld1;
        vMeth(Test.iFld1);
        for (i13 = 376; i13 > 4; i13 -= 3) {
            i15 = 1;
            do {
                byte by2=18;
                Test.instanceCount >>= -2437699916260208600L;
                Test.iFld1 = by2;
            } while (++i15 < 202);
            Test.iFld1 += i13;
            for (i16 = 11; i16 < 202; ++i16) {
                double d3=-1.81186;
                i14 *= (int)d3;
                switch (((i17 >>> 1) % 4) + 103) {
                case 103:
                    i14 = (int)315680918L;
                    for (i18 = 2; 1 < i18; --i18) {
                        Test.iFld1 *= i14;
                        by3 <<= (byte)i19;
                        Test.instanceCount = lFld;
                        Test.bFld = true;
                        Test.iFld1 = i19;
                    }
                    i19 = sFld;
                    i19 &= i13;
                    break;
                case 104:
                    if (Test.bFld) {
                        Test.fArrFld[(i17 >>> 1) % N][i13 + 1] = i19;
                        Test.fFld += -2336908259L;
                    } else {
                        i17 = (int)Test.fFld;
                    }
                    Test.iFld1 += (i16 * i16);
                    for (l2 = i13; l2 < 2; l2++) {
                        i19 = (int)Test.instanceCount;
                    }
                    by3 >>= (byte)i14;
                    break;
                case 105:
                    lFld += i13;
                case 106:
                    Test.iFld1 -= (int)lFld;
                    Test.instanceCount += (long)d3;
                    break;
                }
            }
        }


    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  byMeth ->  byMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
