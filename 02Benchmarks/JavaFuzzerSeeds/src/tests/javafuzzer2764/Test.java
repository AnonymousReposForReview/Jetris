package tests.javafuzzer2764;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 19:51:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=30735L;
    public static byte byFld=93;
    public static double dFld=2.61248;
    public static volatile short sFld=17894;
    public static int iFld=-23009;
    public static volatile int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -28074);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth(int i1, int i2, int i3) {


        Test.instanceCount = Integer.reverseBytes(i2);
        long meth_res = i1 + i2 + i3;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth1(int i6, int i7, long l) {

        int i8=-220, i9=-4240, i10=-61520, i11=-43399, iArr[]=new int[N];
        double d1=-15.76150;
        boolean b=true;
        float f1=-19.508F;

        FuzzerUtils.init(iArr, 52705);

        for (i8 = 2; i8 < 152; i8++) {
            i10 = 1;
            while (++i10 < 11) {
                i9 *= i7;
                i11 = 1;
                do {
                    d1 *= -46.637F;
                    d1 *= d1;
                    i7 *= i6;
                    if (true) break;
                    b = false;
                    f1 = i7;
                    i6 += i10;
                    i9 ^= 10210;
                } while (++i11 < 1);
                iArr[i8 - 1] += 3;
                if (b) continue;
                i7 += i10;
            }
        }
        long meth_res = i6 + i7 + l + i8 + i9 + i10 + i11 + Double.doubleToLongBits(d1) + (b ? 1 : 0) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i4, int i5) {

        int i12=48304, i13=-133, i14=-208, i15=227, i16=51321, i17=-41888;
        long l1=-7L, lArr[]=new long[N];
        float f2=-14.367F;
        boolean b1=false, bArr[]=new boolean[N];

        FuzzerUtils.init(lArr, 7135164195731449179L);
        FuzzerUtils.init(bArr, true);

        i5 <<= (iMeth1(9, i4, 8L) % (i4 | 1));
        if (true) {
            lArr = lArr;
            i12 = 1;
            do {
                Test.byFld -= (byte)-41643;
                bArr[i12] = true;
                for (i13 = i12; i13 < 32; ++i13) {
                    for (l1 = i13; l1 < 1; l1++) {
                        Test.instanceCount = (long)f2;
                        Test.instanceCount = -63L;
                        Test.instanceCount -= 837870805158757616L;
                    }
                    i14 += i13;
                    for (i16 = 1; 1 > i16; i16++) {
                        Test.iArrFld[i13 + 1][i16 + 1] *= i13;
                        i17 -= i17;
                    }
                }
            } while ((i12 += 3) < 146);
        } else if (b1) {
            Test.dFld += f2;
        } else if (b1) {
            Test.dFld = i15;
        } else {
            i5 >>= i15;
        }
        vMeth1_check_sum += i4 + i5 + i12 + i13 + i14 + l1 + i15 + Float.floatToIntBits(f2) + i16 + i17 + (b1 ? 1 : 0)
            + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i=-12, i18=-113, i19=55, i20=47836, i21=-11, i22=3;
        float f=56.473F, fArr[]=new float[N];
        double d=44.17102;

        FuzzerUtils.init(fArr, 93.732F);

        i *= (int)(iMeth(i * i, -(i * -11), (int)(-(f * i))) - ((i - i) + (++d)));
        vMeth1(i, i);
        for (i18 = 12; i18 < 223; i18++) {
            f += ((long)i18 ^ (long)f);
        }
        i19 = i18;
        i = i18;
        Test.instanceCount += Test.instanceCount;
        i20 = 1;
        do {
            d = Test.instanceCount;
            i = (int)Test.instanceCount;
            i19 -= i20;
            Test.instanceCount -= Test.instanceCount;
            for (i21 = i20; 8 > i21; i21++) {
                fArr[i20] += i19;
                i += (int)d;
            }
        } while (++i20 < 191);
        vMeth_check_sum += i + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i18 + i19 + i20 + i21 + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i23=-10, i24=3, i25=252, i26=-43176, i27=170, i28=181, i29=-96, i30=-14, i31=-17841, i32=0, i33=-55149;
        float f3=0.818F;
        boolean b2=false;

        vMeth();
        i23 -= (int)Test.instanceCount;
        for (i24 = 11; i24 < 328; ++i24) {
            i23 <<= Test.sFld;
            Test.iFld += i24;
            Test.dFld = Test.instanceCount;
            for (i26 = 1; i26 < 79; ++i26) {
                Test.instanceCount += (((i26 * f3) + i26) - i23);
            }
            for (i28 = 1; i28 < 79; i28++) {
                i23 += i28;
                for (i30 = 2; i30 > 1; i30 -= 2) {
                    Test.iFld = (int)Test.instanceCount;
                    Test.iFld += (int)Test.instanceCount;
                    i25 -= Test.byFld;
                    Test.iFld <<= i25;
                    Test.dFld -= Test.dFld;
                    i25 -= (int)Test.dFld;
                    i27 -= i29;
                }
                Test.dFld -= f3;
            }
            i32 = 1;
            do {
                i27 >>= i28;
                i25 = (int)-111.530F;
                i23 += (i32 * i32);
            } while (++i32 < 79);
            i27 += (int)f3;
            i31 = i26;
            i33 = 1;
            while (++i33 < 79) {
                switch (((i33 % 6) * 5) + 25) {
                case 50:
                    Test.iFld -= i24;
                    i25 *= -51105;
                    break;
                case 37:
                    b2 = b2;
                case 42:
                    Test.iFld ^= i33;
                    break;
                case 48:
                    Test.instanceCount -= Test.instanceCount;
                    break;
                case 34:
                    Test.byFld = (byte)i30;
                    break;
                case 33:
                    Test.dFld *= i33;
                default:
                    Test.instanceCount = i30;
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
