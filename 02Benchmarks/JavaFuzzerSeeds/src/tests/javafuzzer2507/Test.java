package tests.javafuzzer2507;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 15:44:52 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1903L;
    public static volatile int iFld=-167;
    public static boolean bFld=false;
    public static volatile float fFld=-1.506F;

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3, float f) {

        int i4=-12, i5=-95, i6=17709, i7=37356, i8=13, i9=-45133, iArr2[]=new int[N];
        double d=-36.62430;
        short s=17088;

        FuzzerUtils.init(iArr2, 10);

        if (Test.bFld) {
            for (i4 = 1; i4 < 184; ++i4) {
                i2 ^= Test.iFld;
                Test.instanceCount += Test.iFld;
                iArr2[i4] += i5;
                Test.iFld += Test.iFld;
                i3 = -43414;
                for (i6 = i4; i6 < 9; i6++) {
                    i5 -= (int)d;
                    switch ((i4 % 1) + 95) {
                    case 95:
                        iArr2[i4] >>= (int)Test.instanceCount;
                        f += (((i6 * f) + i6) - s);
                        for (i8 = 1; i8 < 1; ++i8) {
                            Test.instanceCount = i4;
                            i5 += (int)Test.instanceCount;
                        }
                        break;
                    default:
                        f /= (i5 | 1);
                    }
                }
            }
        } else {
            Test.instanceCount += i6;
        }
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + s + i8
            + i9 + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth() {

        int iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -8);

        Test.iFld -= iArr1[(Test.iFld >>> 1) % N];
        vMeth1(Test.iFld, Test.iFld, Test.fFld);
        vMeth_check_sum += FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i1, byte by) {

        float f1=-1.198F;
        int i10=230, i11=-3, i12=-50455, i13=-49530;
        double d1=42.13577;

        vMeth();
        f1 = 1;
        do {
            Test.iFld *= (int)Test.instanceCount;
            for (i10 = 11; i10 > 1; i10--) {
                Test.instanceCount = Test.instanceCount;
                d1 *= Test.fFld;
                if (Test.bFld) break;
                Test.iFld *= i1;
                d1 -= 42442;
            }
        } while (++f1 < 148);
        for (i12 = 10; i12 < 185; i12++) {
            if (false) break;
            if (Test.bFld) {
                Test.bFld = Test.bFld;
                Test.iFld -= Test.iFld;
            } else if (Test.bFld) {
                Test.instanceCount += i12;
            }
        }
        long meth_res = i1 + by + Float.floatToIntBits(f1) + i10 + i11 + Double.doubleToLongBits(d1) + i12 + i13;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-234, iArr[]=new int[N];

        FuzzerUtils.init(iArr, 115);

        iArr[(i >>> 1) % N] = iMeth(Test.iFld, (byte)(66));
        Test.fFld *= Test.instanceCount;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
