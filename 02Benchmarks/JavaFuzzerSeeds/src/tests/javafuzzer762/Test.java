package tests.javafuzzer762;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:10:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5284684330208376605L;
    public int iFld=-13;
    public static volatile short sFld=-431;
    public static volatile int iFld1=-22;
    public static byte byArrFld[][]=new byte[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)24);
    }

    public static long sMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i3, float f, byte by) {

        int i4=-58450, i5=3, i6=5, i7=-3, i8=18, i9=-91, i10=-1, i11=-11, i12=-14, i13=-10, i14=220, i15=-162, i16=6311;
        boolean b=true;

        for (i4 = 7; i4 < 320; ++i4) {
            Test.instanceCount += i6;
        }
        for (i7 = 293; i7 > 1; i7 -= 3) {
            Test.instanceCount = -1795390887L;
            if (b) break;
            for (i9 = i7; i9 < 16; i9++) {
                for (i11 = 1; i11 < 1; i11++) {
                    i8 *= 16;
                    i3 += i11;
                }
            }
            i3 += i7;
            for (i13 = 1; i13 < 16; ++i13) {
                f += by;
                i15 = 50006;
                i16 >>= i4;
                Test.sFld += (short)(i13 ^ i3);
            }
        }
        vMeth_check_sum += i3 + Float.floatToIntBits(f) + by + i4 + i5 + i6 + i7 + i8 + (b ? 1 : 0) + i9 + i10 + i11 +
            i12 + i13 + i14 + i15 + i16;
    }

    public static int iMeth() {

        float f1=56.768F;
        byte by1=61;

        vMeth(Test.iFld1, f1, by1);
        long meth_res = Float.floatToIntBits(f1) + by1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static short sMeth(long l, int i) {

        int i1=-12, i2=19525, i17=10, i18=-4, i19=-1, i20=9429, iArr[]=new int[N];
        double d=0.103928;
        boolean b1=false, bArr[]=new boolean[N];
        float f2=7.752F;

        FuzzerUtils.init(iArr, -28892);
        FuzzerUtils.init(bArr, false);

        for (i1 = 11; i1 < 251; ++i1) {
            Test.instanceCount += iMeth();
            i += i2;
        }
        i *= (int)d;
        Test.iFld1 *= (int)Test.instanceCount;
        switch (((i >>> 1) % 8) + 91) {
        case 91:
            Test.byArrFld[(Test.iFld1 >>> 1) % N][(i2 >>> 1) % N] ^= (byte)-10460;
            for (i17 = 6; i17 < 223; i17++) {
                Test.sFld = (short)55388;
                iArr[i17 + 1] <<= (int)l;
                for (i19 = 1; i19 < 7; ++i19) {
                    i2 -= i17;
                }
                i20 += (int)(0.916F + (i17 * i17));
                i2 += (-34238 + (i17 * i17));
                bArr[i17 + 1] = false;
            }
            break;
        case 92:
            iArr[(i >>> 1) % N] -= (int)160L;
            break;
        case 93:
            l >>>= -8;
            break;
        case 94:
            b1 = b1;
            break;
        case 95:
            i2 += i20;
            break;
        case 96:
            i = (int)f2;
            break;
        case 97:
            i18 -= Test.sFld;
            break;
        case 98:
            d -= i2;
            break;
        }
        long meth_res = l + i + i1 + i2 + Double.doubleToLongBits(d) + i17 + i18 + i19 + i20 + (b1 ? 1 : 0) +
            Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l1=4670827950250966175L;
        double d1=44.3004;
        int i22=56679, i23=-194, i24=-47336, i25=47, i26=219, i27=-154, iArr1[]=new int[N];
        float f3=-57.143F, fArr[]=new float[N];
        boolean b2=false;

        FuzzerUtils.init(iArr1, 63);
        FuzzerUtils.init(fArr, 29.599F);

        iFld += (int)(sMeth(l1, iFld) + d1);
        for (long l2 : lArrFld) {
            i22 = 1;
            do {
                if (b2) {
                    iArr1[i22] *= i22;
                } else if (b2) {
                    i23 = 1;
                    do {
                        f3 += f3;
                        fArr[i23] *= iFld;
                        Test.iFld1 ^= 45021;
                        Test.iFld1 += (i23 ^ iFld);
                        Test.iFld1 = -3;
                        Test.sFld >>>= (short)i23;
                        Test.iFld1 -= iFld;
                        iArr1[i22 - 1] = i23;
                        Test.iFld1 |= iFld;
                        Test.iFld1 >>= Test.sFld;
                    } while (++i23 < 1);
                } else {
                    Test.sFld += (short)i22;
                    l2 &= i22;
                    b2 = b2;
                    Test.iFld1 += (i22 | l2);
                }
            } while (++i22 < 63);
        }
        i24 = 1;
        while (++i24 < 171) {
            iFld = (int)l1;
        }
        iFld = i24;
        iArr1[(Test.iFld1 >>> 1) % N] -= Test.iFld1;
        for (i25 = 7; 174 > i25; ++i25) {
            Test.iFld1 += i25;
            iFld -= i22;
            i27 = 1;
            do {
                iFld *= (int)d1;
                d1 = i24;
            } while (++i27 < 150);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  sMeth ->  sMeth mainTest
//DEBUG  iMeth ->  iMeth sMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth sMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
