package tests.javafuzzer1668;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 01:11:53 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-65L;
    public byte byFld=95;
    public static volatile short sFld=16720;
    public int iFld=-31241;
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)30);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        double d1=2.36093;
        int i6=7, i7=228, i8=14, i9=-144, iArr1[]=new int[N];
        float f1=-40.1008F, fArr[]=new float[N];

        FuzzerUtils.init(iArr1, -47);
        FuzzerUtils.init(fArr, 0.230F);

        iArr1 = iArr1;
        if (true) {
            for (d1 = 8; d1 < 237; ++d1) {
                fArr = FuzzerUtils.float1array(N, (float)1.781F);
                i7 = 1;
                do {
                    i6 += (i7 | i6);
                    i6 = i7;
                    for (i8 = 1; i8 < 1; ++i8) {
                        double d2=2.115481;
                        switch ((((i6 >>> 1) % 9) * 5) + 32) {
                        case 58:
                            i9 += (i8 + i6);
                            i6 >>= 59274;
                            break;
                        case 75:
                            i6 = (int)Test.instanceCount;
                            Test.byArrFld[(int)(d1)] -= (byte)-58;
                            i6 += i8;
                            Test.instanceCount += (long)d1;
                            break;
                        case 34:
                            Test.instanceCount += i8;
                            break;
                        case 40:
                            Test.instanceCount |= Test.instanceCount;
                        case 47:
                            f1 = 29;
                            break;
                        case 67:
                            iArr1[(int)(d1)] = (int)1.816F;
                            break;
                        case 72:
                            Test.instanceCount -= (long)f1;
                        case 62:
                            d2 = i7;
                        case 56:
                            i9 -= (int)Test.instanceCount;
                            break;
                        }
                    }
                } while (++i7 < 7);
            }
        } else if (false) {
            i9 -= (int)Test.instanceCount;
        } else {
            i6 = -225;
        }
        long meth_res = Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(byte by, int i3) {

        int i4=9, i5=12, i10=-8336, i11=-10, iArr[]=new int[N];
        float f2=1.946F;
        short s=26020;
        boolean b=true;

        FuzzerUtils.init(iArr, -17339);

        for (i4 = 2; i4 < 233; ++i4) {
            iArr[i4 - 1] = (int)(((3929787202021479625L * lMeth()) + Test.instanceCount) * i4);
            f2 *= -1.945F;
            Test.instanceCount &= 27834L;
            iArr[i4 - 1] >>= i3;
            if (b) {
                s -= (short)i5;
                vMeth_check_sum += by + i3 + i4 + i5 + Float.floatToIntBits(f2) + s + (b ? 1 : 0) + i10 + i11 +
                    FuzzerUtils.checkSum(iArr);
                return;
            } else {
                i5 >>= s;
                for (i10 = 1; i10 < 7; i10++) {
                    i3 >>= i4;
                    f2 = -161L;
                    by += (byte)-2156976457L;
                    f2 += Test.instanceCount;
                    f2 += i10;
                    i11 = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += by + i3 + i4 + i5 + Float.floatToIntBits(f2) + s + (b ? 1 : 0) + i10 + i11 +
            FuzzerUtils.checkSum(iArr);
    }

    public double dMeth(float f, long l1, int i1) {

        int i2=-33907, i12=38547, i13=51684, i14=213, iArr2[][]=new int[N][N];
        double d3=-52.91177, dArr[]=new double[N];

        FuzzerUtils.init(iArr2, 27942);
        FuzzerUtils.init(dArr, -2.81615);

        i2 = 1;
        while (++i2 < 231) {
            vMeth(byFld, i2);
            byFld = (byte)Test.instanceCount;
            iArr2[i2 - 1][i2 - 1] >>>= i2;
            i1 *= (int)f;
            for (i12 = 1; i12 < 7; ++i12) {
                dArr[i12] -= i2;
                i13 += (((i12 * Test.sFld) + i12) - byFld);
                i13 <<= i2;
                i13 += (((i12 * f) + i13) - i2);
                for (d3 = 1; 2 > d3; d3++) {
                    i13 = -14;
                    f -= i13;
                    i13 ^= i2;
                    i14 = (int)l1;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + l1 + i1 + i2 + i12 + i13 + Double.doubleToLongBits(d3) + i14 +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=-4006511173L, lArr[]=new long[N];
        double d=38.40123;
        int i=-69, i15=230, i16=-217, i17=10902, i18=-177, i19=5, i20=34, iArr3[]=new int[N];
        float f3=92.889F;

        FuzzerUtils.init(lArr, -863028763L);
        FuzzerUtils.init(iArr3, -5);

        l = 294;
        do {
            lArr[(int)(l)] += (long)(((-(d * i)) - (i + i)) + (i - dMeth(f3, l, i)));
            for (i15 = 2; 86 > i15; ++i15) {
                i16 = i;
                for (i17 = 1; i17 < 2; i17++) {
                    byFld *= (byte)i18;
                    Test.instanceCount >>>= i16;
                    i16 += (int)(15278L + (i17 * i17));
                    lArr[(int)(l)] = Test.instanceCount;
                }
                for (i19 = 2; i19 > 1; i19 -= 2) {
                    iArr3[i19] = i20;
                    switch ((i19 % 6) + 5) {
                    case 5:
                        i16 -= (int)109.123844;
                        iArr3[i19] *= (int)-23249L;
                        i = (int)Test.instanceCount;
                        iArr3 = iArr3;
                        break;
                    case 6:
                        f3 += i20;
                        i16 <<= i20;
                        break;
                    case 7:
                        i18 *= Test.sFld;
                        i20 >>= byFld;
                        break;
                    case 8:
                        i16 = (int)f3;
                        i18 = (int)l;
                        break;
                    case 9:
                        i16 = iFld;
                        i18 ^= -13900;
                    case 10:
                        Test.sFld += (short)iFld;
                        break;
                    default:
                        Test.instanceCount >>= i15;
                        switch (((i17 >>> 1) % 8) + 29) {
                        case 29:
                            Test.instanceCount += (14 + (i19 * i19));
                            break;
                        case 30:
                            Test.instanceCount += l;
                            break;
                        case 31:
                            Test.instanceCount >>= i20;
                            break;
                        case 32:
                            i18 = i17;
                            break;
                        case 33:
                            byFld = (byte)10;
                            break;
                        case 34:
                            i = (int)f3;
                        case 35:
                            i20 += i16;
                        case 36:
                            i16 += i19;
                        default:
                            Test.instanceCount += (i19 * i19);
                        }
                    }
                }
            }
        } while (--l > 0);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
