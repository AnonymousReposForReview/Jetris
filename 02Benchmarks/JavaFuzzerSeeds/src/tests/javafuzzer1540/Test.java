package tests.javafuzzer1540;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 22:25:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-31787L;
    public static int iFld=38278;
    public static byte byFld=120;
    public static long lFld=-2L;
    public static volatile int iArrFld[]=new int[N];
    public static double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];
    public static volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 10);
        FuzzerUtils.init(Test.dArrFld, 0.129183);
        FuzzerUtils.init(Test.lArrFld, -3550975914L);
        FuzzerUtils.init(Test.sArrFld, (short)-7411);
    }

    public static long lMeth_check_sum = 0;
    public static long lMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth() {

        int i5=12584, i6=-127, i7=-49, i8=-31900;
        double d1=-97.96813;
        boolean b=true;
        float f=15.549F;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)111);

        for (i5 = 13; i5 < 268; ++i5) {
            for (d1 = 1; d1 < 6; d1++) {
                i7 = i5;
                i7 += (int)d1;
                i8 = 1;
                do {
                    switch ((int)(((d1 % 10) * 5) + 68)) {
                    case 108:
                        i7 = i7;
                        byArr[i8] = (byte)Test.instanceCount;
                        break;
                    case 92:
                        Test.iArrFld[i5] <<= i7;
                        if (b) {
                            i6 += (211 + (i8 * i8));
                            i6 >>= (int)Test.instanceCount;
                        } else if (b) {
                            i6 += i8;
                            b = true;
                            f -= i5;
                        }
                    case 79:
                        Test.instanceCount -= (long)1.63509;
                        break;
                    case 113:
                        i7 += (i8 * i8);
                    case 102:
                    case 86:
                        i7 = i8;
                    case 105:
                        Test.instanceCount = -39L;
                    case 78:
                        i7 = i6;
                        break;
                    case 116:
                        if (i5 != 0) {
                            vMeth_check_sum += i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + (b ? 1 : 0) +
                                Float.floatToIntBits(f) + FuzzerUtils.checkSum(byArr);
                            return;
                        }
                    case 84:
                        i6 = (int)d1;
                    }
                } while (++i8 < 2);
            }
        }
        vMeth_check_sum += i5 + i6 + Double.doubleToLongBits(d1) + i7 + i8 + (b ? 1 : 0) + Float.floatToIntBits(f) +
            FuzzerUtils.checkSum(byArr);
    }

    public static long lMeth1(double d) {

        int i4=0, i9=-22537, i10=-14, i11=10677, i12=170;
        short s=1127, sArr[]=new short[N];
        byte by=-108;
        boolean b1=false;

        FuzzerUtils.init(sArr, (short)9836);

        i4 <<= Test.iArrFld[(i4 >>> 1) % N];
        Test.iArrFld = (Test.iArrFld = (Test.iArrFld = (Test.iArrFld = FuzzerUtils.int1array(N, (int)7))));
        Test.dArrFld = (Test.dArrFld = (Test.dArrFld = FuzzerUtils.double1array(N, (double)-114.107818)));
        vMeth();
        Test.instanceCount = -7;
        for (i9 = 17; i9 < 318; ++i9) {
            if (b1) {
                Test.lArrFld[i9 - 1] += Test.instanceCount;
                for (i11 = 1; 5 > i11; ++i11) {
                    switch ((i11 % 8) + 57) {
                    case 57:
                        Test.instanceCount *= i10;
                        Test.iFld = i12;
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 58:
                        sArr[i11 + 1] >>>= (short)i10;
                        i12 += s;
                        break;
                    case 59:
                        Test.instanceCount >>= -23;
                    case 60:
                        Test.instanceCount = by;
                    case 61:
                        by += (byte)(((i11 * Test.instanceCount) + Test.instanceCount) - i10);
                        break;
                    case 62:
                        i10 += Test.iFld;
                        break;
                    case 63:
                        Test.iFld += i10;
                        break;
                    case 64:
                        Test.instanceCount = i9;
                        break;
                    }
                }
            } else {
                Test.instanceCount += (i9 * i9);
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + i9 + i10 + i11 + i12 + s + by + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(sArr);
        lMeth1_check_sum += meth_res;
        return (long)meth_res;
    }

    public static long lMeth(int i1) {

        int i2=128, i3=56000, i13=3962, i14=47494, i15=-9, i16=-250, i17=4, i18=61906;
        double d2=2.29391;
        float f1=111.893F, fArr[]=new float[N];
        byte by1=122;
        short s1=9742;
        boolean b2=false;

        FuzzerUtils.init(fArr, 44.564F);

        for (i2 = 13; i2 < 314; i2++) {
            switch ((i2 * 5) + 49) {
            case 130:
                i3 -= (int)(Test.instanceCount++);
                break;
            case 131:
                i3 = (int)lMeth1(d2);
                break;
            case 278:
                Test.iArrFld[i2 - 1] = (int)-6670767712709669742L;
                for (i13 = 1; i13 < 5; ++i13) {
                    i1 = i2;
                    i3 += (int)Test.instanceCount;
                }
                for (i15 = 1; i15 < 5; ++i15) {
                    Test.iArrFld[i2 - 1] += i16;
                    Test.lArrFld[i15 + 1] -= i14;
                    f1 += i16;
                    for (i17 = 1; i17 < 2; i17++) {
                        i16 >>= (int)Test.instanceCount;
                        if (i17 != 0) {
                        }
                    }
                }
                break;
            case 71:
                Test.instanceCount = Test.instanceCount;
                break;
            case 87:
                Test.iArrFld = Test.iArrFld;
                break;
            case 280:
            case 72:
                Test.instanceCount = i13;
                break;
            case 156:
                d2 = by1;
            case 193:
                Test.iFld += (i2 * i2);
            case 270:
                i16 = i15;
                break;
            case 292:
                Test.iFld = -9743;
                break;
            case 313:
                Test.iArrFld[i2 - 1] -= Test.iFld;
                break;
            case 115:
                Test.iFld = i3;
                break;
            case 255:
                i16 += (((i2 * Test.instanceCount) + i1) - f1);
                break;
            case 217:
                i3 &= i18;
                break;
            case 194:
                i3 += Test.iFld;
                break;
            case 368:
                Test.instanceCount += (((i2 * by1) + by1) - i3);
                break;
            case 262:
                f1 -= -35840;
            case 58:
                d2 -= Test.instanceCount;
                break;
            case 393:
                i3 = (int)-5927049265805623296L;
                break;
            case 334:
                i1 *= i2;
                break;
            case 299:
                Test.instanceCount *= i14;
                break;
            case 388:
                s1 -= (short)i3;
                break;
            case 324:
                i16 = (int)d2;
            case 122:
                f1 *= i17;
                break;
            case 136:
            case 203:
                fArr[i2 - 1] -= Test.instanceCount;
            case 279:
                i16 += (i2 - i17);
            case 286:
                Test.instanceCount *= i3;
                break;
            case 378:
            case 246:
                i14 |= 59310;
                break;
            case 275:
                Test.dArrFld = Test.dArrFld;
                break;
            case 389:
                i16 += i2;
                break;
            case 361:
            case 298:
                b2 = b2;
                break;
            case 266:
                Test.instanceCount -= i3;
                break;
            case 100:
                i16 -= (int)f1;
                break;
            case 385:
                Test.instanceCount = i18;
            case 326:
                s1 >>= (short)i1;
                break;
            case 394:
                f1 -= Test.instanceCount;
                break;
            case 306:
                Test.iArrFld[i2] = i14;
                break;
            case 84:
                if (i15 != 0) {
                }
                break;
            case 272:
                try {
                    Test.iArrFld[i2] = (i2 / Test.iArrFld[i2 + 1]);
                    Test.iArrFld[i2 - 1] = (i16 / 1719);
                    i16 = (i15 % 1607509596);
                } catch (ArithmeticException a_e) {}
                break;
            case 371:
                Test.instanceCount += (((i2 * i17) + Test.instanceCount) - i17);
                break;
            case 67:
                i1 = i2;
            case 188:
                i14 *= i18;
                break;
            case 365:
                Test.instanceCount = i17;
                break;
            case 245:
                b2 = b2;
                break;
            case 254:
                b2 = b2;
                break;
            case 237:
                Test.lArrFld[i2 + 1] = Test.instanceCount;
                break;
            case 288:
                i14 = (int)Test.instanceCount;
                break;
            case 165:
                i3 = (int)d2;
                break;
            case 384:
                i18 += (i2 * i2);
                break;
            case 57:
                Test.iArrFld[i2 + 1] -= (int)Test.instanceCount;
                break;
            case 76:
                Test.iFld *= i18;
                break;
            case 168:
                by1 = (byte)i3;
            case 395:
                i16 += (((i2 * i13) + i15) - i3);
                break;
            case 392:
                Test.instanceCount = Test.instanceCount;
                break;
            case 370:
                Test.iFld &= i15;
                break;
            case 358:
                i18 /= 13;
            case 114:
                Test.iFld >>= Test.iFld;
            case 142:
                d2 = Test.instanceCount;
                break;
            case 381:
                if (b2) break;
            case 62:
                f1 += i13;
                break;
            case 295:
                i14 += (int)f1;
            case 60:
                i3 = i16;
                break;
            case 253:
                i14 = (int)d2;
                break;
            case 268:
                f1 += i18;
            case 167:
                Test.sArrFld[i2 - 1] *= (short)i16;
                break;
            case 106:
            default:
                Test.lArrFld[i2] = i17;
            }
        }
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i16 + Float.floatToIntBits(f1) +
            i17 + i18 + by1 + s1 + (b2 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=153, i19=-5, i20=-200;
        float f2=-59.134F, f3=0.466F;
        boolean b3=true;
        short s2=-12860;

        i = 1;
        do {
            Test.instanceCount -= (Test.iArrFld[i]++);
            Test.instanceCount = lMeth(i);
            f2 = 63;
            while (--f2 > 0) {
                Test.iFld = -63;
                try {
                    Test.iFld = (52030 % Test.iFld);
                    Test.iFld = (i % i);
                    Test.iFld = (i / Test.iFld);
                } catch (ArithmeticException a_e) {}
                if (b3) {
                    Test.byFld <<= (byte)23L;
                    Test.instanceCount += (long)f2;
                    if (b3) continue;
                } else if (b3) {
                    switch ((int)(((f2 % 1) * 5) + 84)) {
                    case 87:
                        if (true) break;
                        for (i19 = (int)(f2); i19 < 1; i19++) {
                            byte by2=121;
                            switch ((int)(((f2 % 8) * 5) + 80)) {
                            case 113:
                                Test.iFld = Test.iFld;
                            case 90:
                                try {
                                    Test.iArrFld[i19 + 1] = (Test.iFld / i19);
                                    Test.iFld = (Test.iArrFld[(int)(f2 - 1)] / -23432);
                                    Test.iArrFld[i19] = (123 % i19);
                                } catch (ArithmeticException a_e) {}
                                Test.instanceCount -= by2;
                                break;
                            case 82:
                                if (b3) {
                                    i20 += (i19 * i19);
                                    if (b3) continue;
                                    Test.iFld += (-61 + (i19 * i19));
                                } else if (b3) {
                                    s2 *= (short)f2;
                                } else if (b3) {
                                    switch (((i >>> 1) % 10) + 106) {
                                    case 106:
                                        Test.lFld = s2;
                                        Test.lFld = i19;
                                        Test.iArrFld = Test.iArrFld;
                                        Test.iFld = (int)Test.lFld;
                                        break;
                                    case 107:
                                        if (false) {
                                            Test.lFld -= i;
                                        }
                                        Test.instanceCount <<= i;
                                        break;
                                    case 108:
                                        Test.lArrFld[(int)(f2 + 1)] += (long)f2;
                                        break;
                                    case 109:
                                    case 110:
                                        Test.lFld >>= i19;
                                    case 111:
                                    case 112:
                                        Test.iFld += (((i19 * Test.byFld) + i19) - Test.lFld);
                                        break;
                                    case 113:
                                        Test.iArrFld[(int)(f2 - 1)] += (int)f2;
                                    case 114:
                                        Test.lFld += (-169 + (i19 * i19));
                                        break;
                                    case 115:
                                    }
                                }
                                break;
                            case 109:
                                Test.iFld += (((i19 * Test.instanceCount) + Test.lFld) - Test.instanceCount);
                            case 93:
                                i20 += i19;
                                break;
                            case 94:
                                f3 += Test.iFld;
                                break;
                            case 91:
                                Test.lFld <<= Test.instanceCount;
                                break;
                            case 84:
                                by2 &= (byte)i;
                                break;
                            }
                        }
                        break;
                    }
                }
            }
        } while (++i < 398);


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  lMeth1 ->  lMeth1 lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth1 lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
