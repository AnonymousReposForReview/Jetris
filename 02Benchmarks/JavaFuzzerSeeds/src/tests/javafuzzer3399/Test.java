package tests.javafuzzer3399;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:25:50 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-136L;
    public int iFld=-167;
    public static double dFld=96.11225;
    public static float fFld=44.471F;
    public long lFld=-517078073L;
    public long lArrFld[]=new long[N];
    public static short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)8435);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i8, int i9) {

        int i10=8, i11=9863, i12=5, i13=7815, i14=-38057, i15=-14, iArr1[]=new int[N];
        float f=-2.523F;

        FuzzerUtils.init(iArr1, 59);

        i10 = 1;
        while ((i10 += 2) < 252) {
            for (i11 = 12; i11 > 1; i11--) {
                for (i13 = 2; i13 > 1; --i13) {
                    boolean b1=false;
                    i12 += (((i13 * i9) + Test.instanceCount) - Test.instanceCount);
                    if (b1) break;
                    i14 += (((i13 * i10) + Test.instanceCount) - i13);
                    i9 >>= (int)Test.instanceCount;
                    try {
                        i14 = (6168 / i10);
                        iArr1[i13] = (i14 / 6990);
                        i12 = (iArr1[i11 - 1] / 180);
                    } catch (ArithmeticException a_e) {}
                    f += (3 + (i13 * i13));
                    i8 += (i13 | Test.instanceCount);
                    b1 = b1;
                    i14 += i13;
                }
                i15 = i12;
                i12 *= i11;
                i15 = (int)Test.instanceCount;
            }
        }
        vMeth1_check_sum += i8 + i9 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + i15 +
            FuzzerUtils.checkSum(iArr1);
    }

    public static long lMeth(boolean b, int i7) {

        int i16=25830, i17=17644, i18=51732, i19=-8, iArr2[][]=new int[N][N];
        long l1=4669448954742240793L, l2=-178L;
        double d=-2.3126;
        float f1=2.851F;

        FuzzerUtils.init(iArr2, -12);

        vMeth1(-13, i7);
        for (i16 = 1; i16 < 263; i16 += 2) {
            if (true) {
                for (l1 = 1; l1 < 12; l1++) {
                    for (l2 = 2; l2 > 1; l2 -= 2) {
                        i7 += (int)(l2 * l2);
                        d = f1;
                        Test.instanceCount += i19;
                        i7 += (int)f1;
                        i19 += (int)l2;
                        Test.instanceCount += (-64321 + (l2 * l2));
                        i17 += i16;
                    }
                    iArr2[i16] = iArr2[i16];
                }
            }
            i18 = (int)-103L;
            i19 += (i16 * i16);
        }
        long meth_res = (b ? 1 : 0) + i7 + i16 + i17 + l1 + i18 + l2 + i19 + Double.doubleToLongBits(d) +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(int i3) {

        long l=-1532617594L;
        int i4=231, i5=10, i6=159, iArr3[]=new int[N];
        byte by=60;
        short s=30403;

        FuzzerUtils.init(iArr3, 223);

        for (l = 6; 191 > l; ++l) {
            i5 = 1;
            do {
                i6 = 1;
                while (--i6 > 0) {
                    boolean b2=false;
                    i3 *= (int)(lMeth(b2, i5) * i6);
                    b2 = b2;
                    if (b2) {
                        i4 -= (int)Test.dFld;
                        by += (byte)Test.fFld;
                        i4 >>= i5;
                    } else {
                        i3 -= s;
                    }
                    iArr3[i6] <<= i4;
                }
                iArr3[i5] += i4;
                Test.fFld = i3;
                i4 >>= i5;
                iArr3[(int)(l - 1)] -= (int)l;
            } while (++i5 < 9);
        }
        vMeth_check_sum += i3 + l + i4 + i5 + i6 + by + s + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=7, i1=0, i2=54536, i20=-234, i21=-7, i22=12, iArr[]=new int[N];
        short s1=19157;
        byte by1=30;
        boolean b3=true;

        FuzzerUtils.init(iArr, 6);

        i = 1;
        while (++i < 324) {
            iArr = iArr;
            iFld += (i + Test.instanceCount);
            for (i1 = 2; i1 < 78; i1++) {
                i2 += (-9 + (i1 * i1));
            }
            iArr[i] <<= i2;
            vMeth(206);
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount += i;
            i20 = 1;
            do {
                for (i21 = 1; i21 < 1; i21++) {
                    i22 = i1;
                    switch ((((i >>> 1) % 8) * 5) + 110) {
                    case 127:
                        Test.instanceCount ^= Test.instanceCount;
                        s1 <<= (short)Test.instanceCount;
                        Test.dFld = iFld;
                        Test.fFld += (i21 * i21);
                        break;
                    case 132:
                        switch ((((i2 >>> 1) % 4) * 5) + 117) {
                        case 119:
                            iArr[(i1 >>> 1) % N] -= by1;
                            iArr[i21] += 12;
                            lArrFld[i - 1] = i20;
                            break;
                        case 128:
                            Test.instanceCount -= i21;
                            Test.instanceCount = i22;
                            Test.sArrFld[i21 + 1][i] += (short)iFld;
                            break;
                        case 134:
                            by1 *= (byte)i20;
                            Test.fFld = Test.instanceCount;
                            i2 |= i2;
                            break;
                        case 137:
                            i2 -= 186;
                            break;
                        }
                        Test.dFld *= 1;
                        break;
                    case 135:
                        iFld -= -62;
                    case 138:
                        Test.fFld = i;
                        break;
                    case 128:
                        by1 += (byte)(i21 * i21);
                        break;
                    case 118:
                        lFld = i;
                        break;
                    case 139:
                        if (b3) continue;
                    case 114:
                        i22 += i21;
                    default:
                        Test.fFld += iFld;
                    }
                }
            } while (++i20 < 78);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
