package tests.javafuzzer541;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:26:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=35688L;
    public static int iFld=-13;
    public static short sFld=-17660;
    public static boolean bFld=false;
    public int iFld1=35647;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -213);
        FuzzerUtils.init(Test.fArrFld, 0.518F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, byte by, int i9) {

        int i10=-62, i11=-46580, i12=-4, i13=-12, i14=-9, i15=-6, i16=226;
        float f2=0.404F;
        double d1=-106.48575, dArr[]=new double[N];

        FuzzerUtils.init(dArr, -88.126392);

        for (i10 = 10; i10 < 205; i10++) {
            l = Test.sFld;
            for (i12 = 8; i12 > 1; i12--) {
                Test.fArrFld[i10] -= l;
                Test.iFld += 51917;
                Test.instanceCount = (long)f2;
                Test.instanceCount += (i12 * i12);
            }
            i11 += (-16110 + (i10 * i10));
            dArr[i10 - 1] *= i11;
            dArr = dArr;
            l -= (long)d1;
        }
        Test.iArrFld[(i12 >>> 1) % N] *= i9;
        for (i14 = 9; i14 < 170; i14++) {
            i15 = 30074;
            i16 += -95;
        }
        vMeth2_check_sum += l + by + i9 + i10 + i11 + i12 + i13 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(d1) + i14 + i15 + i16 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i6, int i7, int i8) {

        byte by1=-107;
        int i17=-12, i18=215, i19=-6061, i20=-199, i21=-57551, i22=-36843;
        double d2=-52.124476;
        float f3=-1.963F;

        vMeth2(Test.instanceCount, by1, i17);
        Test.iFld += (int)Test.instanceCount;
        for (i18 = 387; i18 > 1; i18 -= 2) {
            i19 <<= i18;
            i19 -= 64;
        }
        i7 *= i17;
        for (d2 = 5; d2 < 139; d2 += 3) {
            Test.iArrFld = Test.iArrFld;
            Test.iArrFld = Test.iArrFld;
            i21 = 1;
            while (++i21 < 35) {
                for (f3 = 1; f3 < 1; f3++) {
                    Test.instanceCount -= i20;
                    i20 = -28571;
                    Test.sFld += (short)(f3 - i18);
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-11);
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + by1 + i17 + i18 + i19 + Double.doubleToLongBits(d2) + i20 + i21 +
            Float.floatToIntBits(f3) + i22;
    }

    public static void vMeth(double d, int i5) {

        int i23=8406, i24=-15, i25=4, i26=181, i28=54069, i29=-12, i30=40413;
        byte by2=115;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 120.110604);

        vMeth1(Test.iFld, Test.iFld, Test.iFld);
        for (i23 = 6; i23 < 159; i23 += 2) {
            dArr1 = dArr1;
        }
        for (i25 = 9; i25 < 395; ++i25) {
            i5 >>= i24;
            Test.iArrFld = FuzzerUtils.int1array(N, (int)21914);
            i26 = Test.iFld;
            Test.iFld -= i26;
            for (i28 = i25; i28 < 4; ++i28) {
                i29 += (i28 + by2);
                Test.sFld &= (short)i24;
                i30 = 1;
                do {
                    i29 >>>= i30;
                    i29 = i30;
                    Test.iFld += (i30 * i30);
                } while (++i30 < 1);
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i5 + i23 + i24 + i25 + i26 + i28 + i29 + by2 + i30 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        float f=-2.203F, f1=54.877F;
        int i=-7944, i1=30699, i2=24210, i3=188, i4=54447, i31=1;
        double d3=-36.84450;
        boolean bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -135L);

        Test.iFld += (int)(f + ((Test.iFld * Test.instanceCount) + (Test.instanceCount + 163)));
        f1 = 1;
        do {
            Test.instanceCount += Test.instanceCount;
        } while (++f1 < 379);
        if (Test.bFld) {
            for (i = 3; i < 146; ++i) {
                Test.iArrFld[i] >>= (int)(Test.instanceCount * (++Test.instanceCount));
                for (i2 = 6; i2 < 175; i2++) {
                    i4 = 2;
                    do {
                        i3 &= (-Test.iFld);
                        vMeth(-2.93992, i3);
                        i3 += (i4 | Test.iFld);
                        f += i;
                        Test.instanceCount *= 8;
                        i1 = (int)d3;
                        Test.iFld -= Test.iFld;
                        Test.instanceCount -= i1;
                        i3 = (int)Test.instanceCount;
                        f += (-42170 + (i4 * i4));
                    } while (--i4 > 0);
                    Test.instanceCount = Test.instanceCount;
                    Test.iFld += (i2 * Test.iFld);
                    if (Test.bFld) continue;
                    Test.instanceCount <<= i4;
                    iFld1 -= (int)Test.instanceCount;
                    i3 += (((i2 * i2) + iFld1) - i4);
                    Test.iFld += i2;
                    Test.iArrFld[i2] -= (int)f1;
                    Test.fArrFld[i - 1] *= f;
                }
                i31 = 1;
                while (++i31 < 175) {
                    bArr[i31 - 1] = Test.bFld;
                    sArrFld = FuzzerUtils.short2array(N, (short)-10981);
                }
            }
        } else {
            lArr = lArr;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
