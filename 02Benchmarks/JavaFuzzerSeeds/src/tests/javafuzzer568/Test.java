package tests.javafuzzer568;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:59:17 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=54L;
    public static double dFld=77.90618;
    public static byte byFld=-70;
    public static short sFld=3153;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 152);
        FuzzerUtils.init(Test.fArrFld, 92.604F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i6) {

        float f2=-1.667F;
        int i7=-6, i8=41, i9=-8;

        for (f2 = 6; f2 < 366; f2++) {
            i7 -= i6;
            i7 *= (int)f2;
            Test.iArrFld[(i6 >>> 1) % N] >>= (int)Test.instanceCount;
            i6 = i6;
            i6 -= (int)Test.instanceCount;
            i7 += (int)(((f2 * i7) + i7) - i6);
            i7 >>= -62337;
            i6 = i6;
        }
        Test.fArrFld[(i7 >>> 1) % N] -= i6;
        switch (((-12 >>> 1) % 2) + 22) {
        case 22:
            for (i8 = 1; i8 < 305; ++i8) {
                i9 = 18015;
                i6 -= (int)58351L;
                i9 -= 186;
            }
            break;
        case 23:
            Test.byFld = (byte)i7;
        default:
            i7 += 63;
        }
        long meth_res = i6 + Float.floatToIntBits(f2) + i7 + i8 + i9;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i1=58311, i2=9, i3=13, i4=123, i5=-244;
        float f1=0.511F;
        boolean b=true;

        for (int i : Test.iArrFld) {
            Test.fArrFld[(i >>> 1) % N] += (--Test.instanceCount);
            for (i1 = 1; i1 < 4; i1++) {
                for (i3 = i1; i3 < 2; ++i3) {
                    Test.iArrFld[i1] >>= Test.iArrFld[i3];
                    i2 += (((i3 * i3) + i4) - i1);
                }
                i5 = 1;
                do {
                    Test.instanceCount &= (long)((Test.iArrFld[i1 + 1] * 67.793F) - (f1--));
                    Test.dFld -= (((f1 % (i3 | 1)) * (i5 * f1)) - (Test.iArrFld[i5 - 1]++));
                    if (b) {
                        Test.iArrFld[i5 + 1] += Integer.reverseBytes(iMeth1(i3));
                        f1 -= i;
                        i *= (int)Test.dFld;
                    }
                    Test.dFld -= i2;
                    if (i1 != 0) {
                        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f1) + (b ? 1 : 0);
                        return;
                    }
                } while (++i5 < 2);
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i4 + i5 + Float.floatToIntBits(f1) + (b ? 1 : 0);
    }

    public static int iMeth(float f) {

        int i10=-3, i11=-10601, i12=191;
        short sArr[][]=new short[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr, (short)23811);
        FuzzerUtils.init(lArr, 2139916312L);

        vMeth();
        for (i10 = 6; i10 < 189; i10++) {
            long l=4L;
            i12 = 9;
            do {
                sArr[i12 + 1] = sArr[i12];
                Test.instanceCount >>>= Test.byFld;
                f *= -222;
            } while (--i12 > 0);
            i11 = i10;
            Test.dFld = Test.sFld;
            switch (((i10 >>> 1) % 2) + 68) {
            case 68:
                Test.iArrFld = Test.iArrFld;
                break;
            case 69:
                switch (((i12 >>> 1) % 2) + 19) {
                case 19:
                    f -= f;
                    break;
                case 20:
                }
                if (true) {
                    lArr[i10 - 1] += i12;
                    i11 = (int)Test.instanceCount;
                } else {
                    i11 *= (int)l;
                }
                break;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i10 + i11 + i12 + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i13=-2744, i15=54566, i16=-5, i18=3369, i19=59, i20=-10621, i21=4;
        boolean b1=false, bArr[]=new boolean[N];
        float f3=-127.841F;
        long lArr1[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr1, -15L);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 2.91117);

        iMeth(92.577F);
        i13 = 1;
        do {
            int i14=-6;
            byArrFld[i13] = (byte)i13;
            i14 = -114;
        } while (++i13 < 200);
        lArr1 = FuzzerUtils.long1array(N, (long)-12L);
        for (i15 = 12; i15 < 364; i15++) {
            Test.iArrFld[i15 - 1] >>>= i15;
            for (i18 = i15; i18 < 72; i18 += 2) {
                for (i20 = 1; i20 < 1; ++i20) {
                    i19 -= (int)Test.dFld;
                    bArr[(i21 >>> 1) % N] = b1;
                    i21 = (int)Test.instanceCount;
                    i21 += i16;
                    if (b1) {
                        i16 %= (int)(i13 | 1);
                    } else {
                        i16 = i18;
                        f3 += (((i20 * i15) + Test.instanceCount) - f3);
                        i16 = i16;
                    }
                    Test.dFld += i20;
                    if (false) {
                        if (b1) break;
                    } else if (true) {
                        i21 >>>= i13;
                        i21 >>= Test.sFld;
                        i21 += (83 + (i20 * i20));
                        Test.instanceCount += i20;
                    } else if (true) {
                        dArr[i20] = Test.instanceCount;
                        i19 = i13;
                    }
                    Test.fArrFld[i18] = Test.instanceCount;
                    i21 += 43580;
                }
                b1 = b1;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
