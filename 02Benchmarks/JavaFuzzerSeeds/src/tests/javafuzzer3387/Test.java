package tests.javafuzzer3387;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:13:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-195L;
    public static volatile byte byFld=80;
    public static float fFld=-89.445F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 14);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i7=-55875, i8=56, i9=51780, i10=14, i11=-1;
        double d1=0.103523;
        float f=6.784F;

        i7 = Test.byFld;
        for (i8 = 336; i8 > 13; i8--) {
            i7 += i9;
            Test.instanceCount -= Test.instanceCount;
            Test.instanceCount = 19335;
            i7 += (int)d1;
            f *= Test.instanceCount;
            i7 >>= -90;
            Test.instanceCount *= i9;
        }
        Test.byFld *= (byte)i7;
        for (i10 = 18; i10 < 288; ++i10) {
            i7 >>= i7;
            Test.instanceCount = i9;
            Test.instanceCount += i7;
        }
        Test.instanceCount += Test.instanceCount;
        long meth_res = i7 + i8 + i9 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + i10 + i11;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i, short s, double d) {

        int i1=-27900, i2=-23470, i3=-34862, i4=-12, i5=-50575, i6=12, i12=2;
        boolean b=true;
        float fArr[][]=new float[N][N];

        FuzzerUtils.init(fArr, 0.219F);

        for (i1 = 3; i1 < 345; ++i1) {
            i += (int)Test.instanceCount;
            if (b) {
                i >>= (int)(((-9 + fArr[i1 + 1][i1]) + Test.iArrFld[i1 - 1]) - Test.iArrFld[i1 - 1]);
            }
        }
        i3 = 1;
        while (++i3 < 338) {
            i4 = 1;
            do {
                i -= (int)Test.instanceCount;
            } while ((i4 += 3) < 5);
            for (i5 = 1; 5 > i5; i5++) {
                i6 += (int)Test.instanceCount;
                try {
                    i2 = (48281 % i4);
                    i = (i5 / i6);
                    i6 = (i5 % -17199);
                } catch (ArithmeticException a_e) {}
            }
            i += (i3 * i5);
            if (i3 != 0) {
                vMeth1_check_sum += i + s + Double.doubleToLongBits(d) + i1 + i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 +
                    i12 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
                return;
            }
            i += (int)(i1 * lMeth());
            i += (((i3 * i6) + i12) - Test.instanceCount);
            i12 += i3;
        }
        vMeth1_check_sum += i + s + Double.doubleToLongBits(d) + i1 + i2 + (b ? 1 : 0) + i3 + i4 + i5 + i6 + i12 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth() {

        int i13=71, i14=-57216, i15=-9, i16=-181, i17=10, i18=-41738;
        short s1=-9373;
        double d2=27.70848;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3L);

        vMeth1(i13, s1, d2);
        Test.iArrFld[(i13 >>> 1) % N] = i13;
        Test.iArrFld[(i13 >>> 1) % N] = i13;
        d2 = Test.instanceCount;
        for (i14 = 11; 370 > i14; i14++) {
            lArr[i14] += i15;
            for (i16 = 5; 1 < i16; i16 -= 2) {
                i18 = 1;
                while (++i18 < 3) {
                    switch (((i18 >>> 1) % 6) + 38) {
                    case 38:
                        i15 = Test.byFld;
                        i17 += (i18 | i18);
                        switch ((((i17 >>> 1) % 6) * 5) + 112) {
                        case 139:
                            Test.fFld = i15;
                            i15 += (((i18 * Test.instanceCount) + i18) - Test.fFld);
                            break;
                        case 136:
                            Test.instanceCount *= i14;
                            break;
                        case 142:
                            lArr[i14] = i13;
                        case 135:
                        case 128:
                            i13 *= -10995;
                            break;
                        case 118:
                        default:
                            i13 += (i18 ^ i16);
                        }
                        break;
                    case 39:
                        i13 += (i18 * i16);
                        break;
                    case 40:
                        i15 <<= i17;
                        break;
                    case 41:
                        Test.iArrFld[i16] = 0;
                        break;
                    case 42:
                        Test.byFld = (byte)i13;
                        break;
                    case 43:
                        i15 += (i18 ^ Test.instanceCount);
                    }
                }
            }
        }
        vMeth_check_sum += i13 + s1 + Double.doubleToLongBits(d2) + i14 + i15 + i16 + i17 + i18 +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-127, i20=-154, i21=-8, i22=145, i23=18543, i24=-22, i25=14, i26=252, i27=45, i28=12;
        double d3=1.21968;
        boolean b1=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 42066L);

        vMeth();
        for (i19 = 1; i19 < 240; i19++) {
            i21 = 1;
            do {
                for (i22 = 1; 1 > i22; i22++) {
                    i23 *= i21;
                    Test.fFld += i19;
                }
                d3 = i21;
                i23 -= i19;
                i20 &= (int)Test.instanceCount;
            } while (++i21 < 105);
            i23 = (int)Test.fFld;
            for (i24 = 2; i24 < 105; i24++) {
                i26 = 1;
                do {
                    Test.fFld -= i21;
                    i23 += (((i26 * i19) + i23) - i23);
                    switch ((i26 % 5) + 17) {
                    case 17:
                        Test.instanceCount = Test.byFld;
                        break;
                    case 18:
                    case 19:
                        i20 <<= (int)Test.instanceCount;
                        i20 >>= i19;
                        lArr1[i24] = 23258;
                        lArr1[i19 - 1] >>= i23;
                    case 20:
                    case 21:
                    }
                    Test.instanceCount >>= Test.instanceCount;
                    d3 -= i21;
                    Test.fFld -= Test.fFld;
                    i25 *= i25;
                    i23 = i22;
                    if (b1) continue;
                } while (++i26 < 2);
                for (i27 = 1; 2 > i27; i27++) {
                    Test.fFld = i24;
                    Test.fFld -= (float)d3;
                }
                i28 += (((i24 * Test.fFld) + i27) - i24);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
