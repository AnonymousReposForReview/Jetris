package tests.javafuzzer1317;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 18:10:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=140L;
    public int iFld=-22665;
    public byte byFld=-90;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1973777283L);
        FuzzerUtils.init(Test.iArrFld, -26);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth(int i7, float f1) {

        int i8=-47496, i9=6, i10=0, i11=-22369, i12=18659, i13=-13, i14=-237, i15=0, i16=3;
        double dArr[]=new double[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(dArr, -1.993);
        FuzzerUtils.init(fArr1, -1.514F);

        for (i8 = 5; 250 > i8; ++i8) {
            if (i8 != 0) {
            }
            for (i10 = 7; i10 > 1; i10 -= 3) {
                for (i12 = 1; i12 < 4; ++i12) {
                    i9 = (int)2484119042275756258L;
                    Test.iArrFld[i12 - 1] += -59;
                    Test.instanceCount += i12;
                    i13 -= i9;
                    i7 = i12;
                    i7 = (int)f1;
                }
                Test.iArrFld[i8 + 1] >>= -10;
                fArr1 = FuzzerUtils.float1array(N, (float)-115.793F);
                for (i14 = i8; i14 < 4; i14++) {
                    Test.lArrFld[i14 + 1] = 33684;
                    i16 = i13;
                }
            }
        }
        long meth_res = i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1(int i, short s) {

        int i1=-45, i2=253, i3=52, i4=128, i5=-18909, i6=13, iArr[]=new int[N];
        double d=-84.99304;
        long l=-9L;
        boolean b=false;
        float f=112.464F, fArr[]=new float[N];

        FuzzerUtils.init(iArr, -32479);
        FuzzerUtils.init(fArr, -71.759F);

        i -= (int)Test.instanceCount;
        i1 = 1;
        do {
            for (i2 = 1; i2 < 12; ++i2) {
                i3 = i2;
                s = (short)(d++);
                for (i4 = 1; i4 < 2; i4++) {
                    i += (int)Test.lArrFld[i1];
                    i3 *= (int)l;
                    switch (((((int)(4 - (i5 + Test.instanceCount))) >>> 1) % 10) + 103) {
                    case 103:
                        i5 += (-45 + (i4 * i4));
                        l = iArr[i1 + 1];
                    case 104:
                        Test.instanceCount -= (long)(fArr[i2] + -10285);
                        i3 += i4;
                        fArr[i4] = iArr[i2 - 1];
                    case 105:
                        b = (((Test.instanceCount / ((long)(f) | 1)) < (i2 - i4)) || ((i1 - i4) == Math.min(i4, i6)));
                        break;
                    case 106:
                    case 107:
                    case 108:
                        i5 = i5;
                        break;
                    case 109:
                        iArr[i2 + 1] *= (int)(iArr[i4] - lMeth(-13433, f));
                        break;
                    case 110:
                        i6 *= i6;
                    case 111:
                        if (b) break;
                        break;
                    case 112:
                        f += (((i4 * l) + l) - l);
                        break;
                    }
                }
            }
        } while (++i1 < 131);
        vMeth1_check_sum += i + s + i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + l + (b ? 1 : 0) +
            Float.floatToIntBits(f) + i6 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth() {

        int i17=-1, i18=-2;
        double d2=-66.31477;
        short s1=23823;

        vMeth1(-17456, (short)(4230));
        iFld += iFld;
        for (i17 = 11; i17 < 374; ++i17) {
            i18 += i17;
            Test.instanceCount *= 2;
            iFld <<= 163;
            d2 = iFld;
            Test.iArrFld[i17] = iFld;
            Test.instanceCount = i17;
            iFld -= iFld;
            i18 += s1;
        }
        iFld = iFld;
        i18 >>>= iFld;
        byFld |= (byte)Test.instanceCount;
        iFld += (int)Test.instanceCount;
        vMeth_check_sum += i17 + i18 + Double.doubleToLongBits(d2) + s1;
    }

    public void mainTest(String[] strArr1) {

        int i19=-1, i20=-11836, i21=38738, i22=5, i23=206, i24=-13, i25=152;
        double d3=59.62657, dArr1[]=new double[N];
        boolean b1=true;
        float f2=38.844F, f3=0.178F;

        FuzzerUtils.init(dArr1, -1.8218);

        vMeth();
        Test.instanceCount += iFld;
        for (i19 = 5; i19 < 272; ++i19) {
            i20 = i20;
            d3 -= d3;
            for (i21 = i19; i21 < 94; i21++) {
                i22 /= 53;
                for (i23 = 1; i23 < 1; i23++) {
                    Test.instanceCount += 55;
                    if (b1) continue;
                    i20 *= i22;
                }
                switch ((i21 % 2) + 53) {
                case 53:
                    byArrFld = byArrFld;
                    for (f2 = 1; f2 > 1; f2 -= 2) {
                        short s2=31841;
                        Test.instanceCount += (long)(f2 - f2);
                        iFld *= (int)Test.instanceCount;
                        i24 += (int)(((f2 * iFld) + Test.instanceCount) - s2);
                        i20 = i23;
                        iFld += (int)(((f2 * i19) + f2) - i23);
                        iFld -= (int)Test.instanceCount;
                        Test.instanceCount += (long)82.431F;
                        switch ((((i23 >>> 1) % 3) * 5) + 24) {
                        case 34:
                            i24 <<= (int)Test.instanceCount;
                            i24 = -11;
                            break;
                        case 30:
                            if (false) break;
                            break;
                        case 39:
                            Test.lArrFld[i21] += i22;
                            switch ((i19 % 9) + 48) {
                            case 48:
                                if (b1) {
                                    i25 <<= (int)Test.instanceCount;
                                    Test.instanceCount += (long)((long)f2 ^ i24);
                                } else if (true) {
                                } else {
                                    Test.iArrFld[i19 - 1] += i21;
                                }
                                break;
                            case 49:
                                Test.instanceCount ^= i22;
                            case 50:
                                f3 = i22;
                                break;
                            case 51:
                                f3 = Test.instanceCount;
                                break;
                            case 52:
                                i22 += (0 + (f2 * f2));
                                break;
                            case 53:
                                i24 = iFld;
                                break;
                            case 54:
                                dArr1[i21 + 1] = iFld;
                                break;
                            case 55:
                                i24 += (int)(f2 - Test.instanceCount);
                                break;
                            case 56:
                                i24 = s2;
                            default:
                                i24 = i22;
                            }
                            break;
                        }
                    }
                case 54:
                    i24 += (i21 * i19);
                    break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
