package tests.javafuzzer3409;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 07:36:44 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4856722600892240277L;
    public static float fFld=0.897F;
    public static byte byFld=-127;
    public static int iFld=8;
    public static float fArrFld[]=new float[N];
    public static volatile int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -14.374F);
        FuzzerUtils.init(Test.iArrFld, -101);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        long l=-3L, l1=-250L;
        int i5=-6, i6=0, i7=-11, i8=14, i9=-42206, i10=-8, iArr1[]=new int[N];
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.82175);
        FuzzerUtils.init(iArr1, -12);

        for (l = 9; l < 298; ++l) {
            if (b1) {
                dArr[(int)(l + 1)] = Test.fFld;
                i5 += (int)l;
                if (i5 != 0) {
                    vMeth1_check_sum += l + i5 + (b1 ? 1 : 0) + l1 + i6 + i7 + i8 + i9 + i10 +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test.fArrFld[(int)(l - 1)] = i5;
                vMeth1_check_sum += l + i5 + (b1 ? 1 : 0) + l1 + i6 + i7 + i8 + i9 + i10 +
                    Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
                return;
            }
            iArr1[(int)(l + 1)] = Test.byFld;
        }
        Test.instanceCount >>= 89L;
        switch ((((i5 >>> 1) % 2) * 5) + 109) {
        case 119:
            for (l1 = 332; l1 > 5; --l1) {
                for (i7 = 1; i7 < 5; ++i7) {
                    Test.fFld -= 60.113F;
                }
                for (i9 = 1; i9 < 5; i9 += 2) {
                    i10 = i6;
                    i5 += (((i9 * i7) + i7) - l1);
                }
            }
        case 112:
            i8 = i8;
            break;
        }
        vMeth1_check_sum += l + i5 + (b1 ? 1 : 0) + l1 + i6 + i7 + i8 + i9 + i10 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2, int i3, boolean b) {

        int i4=-201, i11=13, i12=194, i13=179, i14=15121, i15=5893, i16=-11981, iArr[]=new int[N];
        double d1=0.5757;
        long l2=378286075L;

        FuzzerUtils.init(iArr, 3);

        iArr[(i2 >>> 1) % N] = (int)(((Test.instanceCount * 0.32025) + (i3++)) - (-(i3 - i3)));
        i4 = 1;
        while (++i4 < 137) {
            vMeth1();
            i2 |= i4;
        }
        iArr[(i11 >>> 1) % N] -= 17277;
        for (i12 = 4; 184 > i12; ++i12) {
            Test.byFld += (byte)i12;
            i13 = (int)Test.instanceCount;
            i11 = (int)d1;
            for (i14 = i12; i14 < 9; ++i14) {
                i13 = (int)Test.instanceCount;
                for (l2 = 1; l2 > 1; l2 -= 2) {
                    Test.fFld = i14;
                    i16 += (int)(l2 * l2);
                    Test.byFld >>= (byte)i4;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + (b ? 1 : 0) + i4 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + l2
            + i16 + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(int i, int i1, double d) {

        float f=-24.940F;
        boolean b2=true;

        f += Test.instanceCount;
        vMeth(i1, i1, b2);
        vSmallMeth_check_sum += i + i1 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + (b2 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        double d2=1.55370;
        int i17=0, i18=-13664, i19=12, i20=-48061, i21=-234, i22=52312, i23=253, i24=1, i25=6, i26=14;
        boolean b3=true;
        byte by=117;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -7L);

        for (int smallinvoc=0; smallinvoc<317; smallinvoc++) vSmallMeth(-61455, 72, d2);
        Test.iFld = (int)1L;
        Test.fFld = Test.iFld;
        for (i17 = 16; 270 > i17; ++i17) {
            if (b3) {
                for (i19 = i17; 99 > i19; i19++) {
                    i18 *= i17;
                    i18 &= i17;
                    Test.iFld = i19;
                }
                i18 += (i17 * Test.fFld);
            }
            for (i21 = 6; i21 < 99; ++i21) {
                Test.iFld -= Test.iFld;
                d2 *= -14;
                d2 *= Test.instanceCount;
                by = (byte)i17;
                Test.iArrFld[i21 - 1] <<= i21;
                for (i23 = 1; i23 < 2; ++i23) {
                    Test.iArrFld[i23 + 1] *= (int)d2;
                    if (b3) break;
                    lArr[i21 + 1][i21 - 1] <<= Test.instanceCount;
                    i22 += (181 + (i23 * i23));
                    sArrFld[i17 + 1] >>= (short)i19;
                    Test.instanceCount *= i17;
                    Test.iFld = (int)Test.instanceCount;
                }
                Test.fArrFld[i21 - 1] += i21;
                i24 -= i23;
            }
            for (i25 = 2; i25 < 99; ++i25) {
                i24 >>= (int)Test.instanceCount;
                lArr[i17 - 1][i17] = (long)48.24306;
                by += (byte)(((i25 * Test.instanceCount) + i21) - i23);
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
