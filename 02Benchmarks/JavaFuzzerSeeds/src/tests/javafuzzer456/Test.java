package tests.javafuzzer456;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 04:06:21 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-6861683995191889409L;
    public short sFld=9488;
    public static float fFld=6.163F;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        int i4=-216, i5=-43750, i6=-177, i7=-41, i8=-29052, i9=39788, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -85);

        for (i4 = 4; i4 < 202; i4 += 3) {
            float f=0.565F;
            i5 = i4;
            f -= Test.instanceCount;
            if (i4 != 0) {
            }
            f *= i5;
            for (i6 = 1; 23 > i6; ++i6) {
                i5 *= i6;
                i7 -= (int)Test.instanceCount;
            }
            iArr1[i4 + 1] = (int)Test.instanceCount;
            i5 += i6;
            for (i8 = 23; i4 < i8; i8 -= 2) {
                i9 -= 43037;
                iArr1[i4 - 1] += i4;
                i7 = i6;
                Test.instanceCount -= i5;
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2) {

        int i3=4, i10=14, i11=-14, i12=49898, iArr2[]=new int[N];
        float f1=0.880F, fArr[]=new float[N];
        short s=-6693;
        byte by=124;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -12L);
        FuzzerUtils.init(fArr, -103.370F);
        FuzzerUtils.init(iArr2, 26187);

        i1 = i2;
        i3 = 274;
        do {
            i1 *= iMeth();
            f1 += f1;
            i10 = 1;
            while (++i10 < 17) {
                f1 *= i10;
                i11 = 1;
                do {
                    i2 -= i3;
                    f1 -= Test.instanceCount;
                    s ^= (short)i10;
                    switch ((i3 % 8) + 109) {
                    case 109:
                        i1 = -11311;
                        lArr[i10] = i1;
                        break;
                    case 110:
                        Test.instanceCount ^= -41807;
                        fArr[i10] -= i12;
                        break;
                    case 111:
                        iArr2[i11 + 1] += i2;
                    case 112:
                        i1 = i2;
                        break;
                    case 113:
                        i2 *= by;
                        break;
                    case 114:
                        iArr2 = FuzzerUtils.int1array(N, (int)101);
                        break;
                    case 115:
                        i12 <<= i3;
                        break;
                    case 116:
                        Test.instanceCount += (i11 - i1);
                        break;
                    }
                } while (++i11 < 1);
            }
        } while ((i3 -= 3) > 0);
        vMeth1_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f1) + i10 + i11 + s + i12 + by +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr2);
    }

    public void vMeth() {

        int i13=9, i14=-13, i15=14, i16=4, i17=-5784, i18=-4, iArr3[]=new int[N];
        double d=0.36906, d1=101.125538;
        long l=-32L;

        FuzzerUtils.init(iArr3, -42);

        vMeth1(5301, i13);
        for (i14 = 19; i14 < 334; i14++) {
            Test.instanceCount += (-34913L + (i14 * i14));
            Test.instanceCount ^= i14;
            i13 <<= 5;
            d = i15;
        }
        for (l = 1; l < 131; ++l) {
            Test.instanceCount = i14;
        }
        d1 = 1;
        do {
            i16 += (int)(((d1 * i16) + l) - i15);
            if (false) continue;
            for (i17 = 7; i17 > 1; i17--) {
                iArr3[(int)(d1 - 1)] &= (int)Test.instanceCount;
                iArr3[i17] -= (int)l;
                Test.instanceCount += i17;
            }
        } while (++d1 < 223);
        vMeth_check_sum += i13 + i14 + i15 + Double.doubleToLongBits(d) + l + i16 + Double.doubleToLongBits(d1) + i17 +
            i18 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {

        int i=30951, i19=-182, i20=-4, i21=-8, i22=-74, i23=-5365, i24=0, i25=-1, i26=-14, iArr[]=new int[N];
        long l1=-8L, lArr1[]=new long[N];
        double d2=61.42646, d3=47.34978, dArr[]=new double[N];
        byte by1=-46;
        boolean b=true, b1=true;

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(dArr, 110.87479);
        FuzzerUtils.init(lArr1, 1135292317L);

        iArr[(-32 >>> 1) % N] += (int)(((0.24522 + (45 + dArr[(i >>> 1) % N])) + -128) - i);
        vMeth();
        for (i19 = 10; 278 > i19; i19 += 3) {
            Test.instanceCount += i20;
            i20 += i19;
            l1 = 281;
            do {
                iArr[i19 - 1] = sFld;
                for (i21 = 3; 1 < i21; i21 -= 3) {
                    i22 += (((i21 * i) + i) - i);
                }
                i *= sFld;
                for (i23 = 1; i23 < 3; i23++) {
                    d2 -= i20;
                    Test.instanceCount = by1;
                    i20 -= i20;
                }
                for (i25 = (int)(l1); 3 > i25; ++i25) {
                    i22 = i24;
                }
                iArr[i19] <<= (int)Test.instanceCount;
                Test.fFld -= l1;
                Test.fFld -= sFld;
                Test.instanceCount += (51701L + (l1 * l1));
                Test.instanceCount -= (long)Test.fFld;
            } while ((l1 -= 3) > 0);
            d3 = 1;
            do {
                i += (int)d3;
                if (b) break;
                i += (-17774 + (d3 * d3));
                sFld += (short)-210;
                if (b1) {
                    Test.fFld *= i;
                    i26 -= -64755;
                    i22 = (int)l1;
                } else if (b) {
                    lArr1[(int)(d3)] *= (long)d3;
                } else {
                    iArr[(int)(d3 + 1)] -= 132;
                }
            } while (++d3 < 281);
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
