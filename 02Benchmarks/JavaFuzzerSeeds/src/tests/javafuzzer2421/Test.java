package tests.javafuzzer2421;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 14:22:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=5L;
    public static volatile boolean bFld=true;
    public static float fFld=2.1006F;
    public static int iFld=-21904;
    public short sFld=7325;
    public static volatile byte byFld=122;
    public static double dFld=44.36431;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i=-27271, i1=30167, i2=40, i3=8113, i4=7, i5=-108, i6=6631, iArr[]=new int[N];
        short s=25460;
        float fArr[][]=new float[N][N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(fArr, 0.510F);
        FuzzerUtils.init(lArr, -3336221132L);
        FuzzerUtils.init(iArr, 26630);

        for (i = 6; 130 > i; ++i) {
            fArr = fArr;
            lArr[i + 1][i + 1] = s;
            iArr[i] = i;
            Test.instanceCount += i1;
            for (i2 = 1; i2 < 13; i2++) {
                i1 *= i;
            }
            switch (((i2 >>> 1) % 2) + 5) {
            case 5:
                if (Test.bFld) break;
                Test.fFld += (-180 + (i * i));
                i4 = 1;
                while (++i4 < 13) {
                    Test.instanceCount = i2;
                    for (i5 = 1; i5 < 1; i5++) {
                        i1 &= (int)Test.instanceCount;
                        if (i5 != 0) {
                            vMeth2_check_sum += i + i1 + s + i2 + i3 + i4 + i5 + i6 +
                                Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                    }
                }
                break;
            case 6:
                Test.instanceCount *= i6;
            }
        }
        vMeth2_check_sum += i + i1 + s + i2 + i3 + i4 + i5 + i6 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public void vMeth1() {

        int i7=190, i8=-108, i9=-3, i10=-8, i11=119, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -32);

        vMeth2();
        i7 = 1;
        while (++i7 < 383) {
            Test.iFld += (((i7 * i7) + i7) - Test.fFld);
            iArr1[i7] = i7;
        }
        for (i8 = 9; i8 < 398; i8++) {
            Test.iFld += (i8 - Test.instanceCount);
            for (i10 = 1; i10 < 4; ++i10) {
                int i12=27;
                i11 -= (int)Test.instanceCount;
                switch ((i10 % 8) + 123) {
                case 123:
                    Test.instanceCount = i12;
                    i12 = Test.iFld;
                    break;
                case 124:
                case 125:
                    i12 = 88;
                    Test.bFld = Test.bFld;
                    Test.instanceCount += (i10 - Test.instanceCount);
                    break;
                case 126:
                    if (i11 != 0) {
                        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    break;
                case 127:
                    i12 += (-13387 + (i10 * i10));
                    break;
                case 128:
                    Test.iFld >>= i12;
                    break;
                case 129:
                    Test.iFld += -1;
                    break;
                case 130:
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public void vMeth() {

        int i13=206, i14=61708, i15=152, i16=4, i17=-223, i18=-113, iArr2[]=new int[N];
        double d=4.56305;

        FuzzerUtils.init(iArr2, 206);

        vMeth1();
        for (i13 = 6; i13 < 129; i13++) {
            switch ((i13 % 10) + 123) {
            case 123:
            case 124:
                Test.iFld = -122;
                sFld -= (short)-39157;
                Test.byFld = (byte)Test.iFld;
                for (i15 = i13; i15 < 13; i15++) {
                    iArr2[i15 + 1] = 3;
                }
                break;
            case 125:
                i16 += 421;
                Test.instanceCount = Test.byFld;
                break;
            case 126:
                switch ((i13 % 7) + 73) {
                case 73:
                    Test.instanceCount *= i13;
                    break;
                case 74:
                    for (i17 = 1; i17 < 13; ++i17) {
                        d = i18;
                        i14 *= i15;
                    }
                    break;
                case 75:
                    Test.instanceCount = -5668010113566230299L;
                case 76:
                    Test.instanceCount = i14;
                    break;
                case 77:
                    Test.instanceCount *= Test.instanceCount;
                    break;
                case 78:
                    i14 -= i13;
                case 79:
                    Test.instanceCount -= i15;
                    break;
                default:
                    i18 = Test.iFld;
                }
                break;
            case 127:
                d = i16;
                break;
            case 128:
                i14 >>= i17;
            case 129:
                Test.instanceCount = Test.instanceCount;
                break;
            case 130:
                Test.instanceCount <<= Test.instanceCount;
                break;
            case 131:
                d = i18;
                break;
            case 132:
                iArr2[i13 + 1] -= (int)d;
                break;
            default:
                i16 -= i18;
            }
        }
        vMeth_check_sum += i13 + i14 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i19=61632, i20=99, i21=55393, i22=3, i23=48, i24=-4, i25=101, i26=-145, i27=-184, i28=9046, i29=-7,
            i30=35588, i31=-61761, iArr3[]=new int[N];
        boolean b=false;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -8597719995616383615L);
        FuzzerUtils.init(iArr3, -8);

        vMeth();
        for (i19 = 20; i19 < 339; i19++) {
            Test.iFld = sFld;
            for (i21 = 79; i21 > 3; i21 -= 2) {
                for (i23 = 3; i23 > 1; i23--) {
                    i22 = (int)Test.instanceCount;
                    Test.dFld += i20;
                }
                iArr3[i21 - 1] *= i24;
                Test.instanceCount += i21;
                for (i25 = 1; 3 > i25; ++i25) {
                    Test.instanceCount += (i25 * Test.instanceCount);
                    Test.fFld += (float)Test.dFld;
                    Test.bFld = false;
                }
                i22 += Test.iFld;
                for (i27 = 1; i27 < 3; ++i27) {
                    Test.dFld = sFld;
                }
                for (i29 = 1; i29 < 3; ++i29) {
                    iArr3[i21] -= (int)Test.dFld;
                    switch ((i29 % 5) + 58) {
                    case 58:
                        lArr1[i19 + 1] = i31;
                        Test.bFld = Test.bFld;
                        i24 = (int)1.788F;
                        break;
                    case 59:
                        i28 = 14;
                        if (b) continue;
                        break;
                    case 60:
                        switch (((i29 % 2) * 5) + 123) {
                        case 128:
                            Test.instanceCount += (long)Test.dFld;
                            i26 = -9;
                            iArr3[i19] = i24;
                            break;
                        case 127:
                            i28 = i24;
                            i24 -= (int)Test.dFld;
                        default:
                            sFld = (short)Test.instanceCount;
                        }
                        break;
                    case 61:
                        Test.instanceCount = i25;
                    case 62:
                        Test.fFld = i29;
                    default:
                        iArr3[i29 - 1] += i20;
                    }
                }
            }
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
