package tests.javafuzzer653;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 07:26:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-249L;
    public static int iFld=52968;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 96);
        FuzzerUtils.init(Test.lArrFld, -5717083472791638070L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6, int i7) {

        int i8=202, i9=163, i10=12;
        float f1=80.233F;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)30710);

        switch (((i7 >>> 1) % 2) + 97) {
        case 97:
            i6 = (int)Test.instanceCount;
            Test.iFld = 177;
            break;
        case 98:
        default:
            for (i8 = 241; i8 > 8; --i8) {
                i10 = 1;
                while (++i10 < 7) {
                    Test.instanceCount = 57785;
                    sArr[i10] = (short)f1;
                    Test.lArrFld[i10] += i7;
                    i6 += (i10 | i9);
                    f1 = i7;
                    i9 = i10;
                    Test.iFld = i9;
                    i7 -= i10;
                }
                Test.iFld >>= i8;
                i6 = i10;
            }
        }
        long meth_res = i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f1) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth1(float f, int i) {

        int i1=51362, i2=246, i3=-194, i4=-34175, i5=-2, i11=188, i12=44394, i13=47;
        long l1=-158L;
        short s=-26341;

        for (i1 = 10; 344 > i1; i1++) {
            i2 -= (--i2);
            for (i3 = 1; i3 < 5; ++i3) {
                i5 = 1;
                do {
                    i2 += (i5 + l1);
                    try {
                        i = (i3 / Test.iFld);
                        Test.iFld = (Test.iArrFld[i5] % -57095);
                        i2 = (i4 % 201);
                    } catch (ArithmeticException a_e) {}
                    i2 = ((iMeth(i1, i5) >>> s) * i1);
                    Test.lArrFld[i3 + 1] /= 35123;
                } while (++i5 < 2);
                i11 = 1;
                do {
                    Test.iFld = (int)l1;
                } while (++i11 < 2);
                i2 >>= 92;
                for (i12 = 1; i12 < 2; i12++) {
                    i = (int)Test.instanceCount;
                    i4 *= i3;
                    Test.iArrFld[i12] = i2;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + i3 + i4 + i5 + l1 + s + i11 + i12 + i13;
    }

    public void vMeth(long l) {

        float f2=1.628F;
        int i14=-6716, i15=-13, i16=-64689, i17=10, i18=-136, i19=3778;
        short s1=-10847;

        vMeth1(f2, Test.iFld);
        for (i14 = 185; i14 > 4; --i14) {
            l = Test.iFld;
            f2 *= Test.iFld;
            for (i16 = 1; i16 < 9; i16++) {
                for (i18 = 1; 2 > i18; ++i18) {
                    i19 = -8;
                    switch (((i14 % 7) * 5) + 30) {
                    case 57:
                        Test.iArrFld[i18] += 11;
                        i17 *= (int)f2;
                        break;
                    case 37:
                        i19 += 227;
                        break;
                    case 40:
                        Test.iArrFld[i18 - 1] = i15;
                        Test.iArrFld[i14 - 1] >>= i19;
                        break;
                    case 31:
                        i19 = s1;
                        break;
                    case 47:
                        i15 += i18;
                        break;
                    case 33:
                        Test.iFld += i18;
                    case 60:
                        s1 = (short)17782;
                    }
                }
            }
        }
        vMeth_check_sum += l + Float.floatToIntBits(f2) + i14 + i15 + i16 + i17 + i18 + i19 + s1;
    }

    public void mainTest(String[] strArr1) {


        vMeth(Test.instanceCount);
        Test.instanceCount = Test.instanceCount;
        Test.iFld += -3;
        Test.iFld -= Test.iFld;



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
