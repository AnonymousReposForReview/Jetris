package tests.javafuzzer1218;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 16:41:39 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-5773L;
    public static long lFld=8L;
    public static double dFld=102.75055;
    public short sFld=10954;
    public static byte byArrFld[]=new byte[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)65);
        FuzzerUtils.init(Test.iArrFld, 0);
    }

    public static long vMeth_check_sum = 0;
    public static long sMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l, int i4, int i5) {

        int i6=56518, i7=-50436, i8=-38284, i9=168;
        float f=0.912F;
        byte by1=-47;
        double d=0.58391;
        short s1=-775;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 25L);

        lArr[(i5 >>> 1) % N][(i5 >>> 1) % N] = i4;
        for (i6 = 7; i6 < 320; ++i6) {
            i7 += (i6 | Test.lFld);
            i4 += (i6 * i6);
            i5 = (int)Test.instanceCount;
            Test.lFld += (long)f;
            Test.instanceCount = i4;
            Test.iArrFld[i6 - 1] += i7;
            switch (((i6 % 2) * 5) + 96) {
            case 98:
                switch (((-23530 >>> 1) % 4) + 5) {
                case 5:
                    for (i8 = i6; i8 < 5; i8++) {
                        Test.iArrFld = FuzzerUtils.int1array(N, (int)-14);
                        by1 <<= (byte)-14;
                    }
                    Test.iArrFld[i6 - 1] = i4;
                    i4 = i8;
                    break;
                case 6:
                    f += i9;
                    break;
                case 7:
                    d *= -203;
                    break;
                case 8:
                    s1 = (short)Test.lFld;
                default:
                    s1 /= (short)(i4 | 1);
                }
            case 103:
                i7 += -22147;
                break;
            }
        }
        long meth_res = l + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + by1 + Double.doubleToLongBits(d) +
            s1 + FuzzerUtils.checkSum(lArr);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static short sMeth(int i1) {

        int i2=4097, i3=-1, i10=244, i11=-42662, i12=205, i13=6, i14=-58358, iArr[]=new int[N];
        short s=-6493;
        boolean b=false;
        float f1=-91.427F;

        FuzzerUtils.init(iArr, 14);

        for (i2 = 3; i2 < 394; i2 += 3) {
            if (i1 != 0) {
            }
            s = (short)((iArr[i2 + 1] + (-Test.instanceCount)) * fMeth(Test.lFld, i3, i2));
            i10 = 12;
            do {
                i1 = i3;
            } while ((i10 -= 3) > 0);
            i1 = i2;
            for (i11 = i2; i11 < 12; ++i11) {
                Test.lFld += (i11 ^ i3);
                iArr[(i2 >>> 1) % N] |= i10;
                for (i13 = 1; i13 > 1; i13 -= 3) {
                    if (b) continue;
                }
                switch ((i11 % 2) + 107) {
                case 107:
                    Test.dFld *= f1;
                    Test.byArrFld[i11 - 1] *= (byte)i3;
                    break;
                case 108:
                    Test.dFld = -5;
                    break;
                }
            }
        }
        long meth_res = i1 + i2 + i3 + s + i10 + i11 + i12 + i13 + i14 + (b ? 1 : 0) + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr);
        sMeth_check_sum += meth_res;
        return (short)meth_res;
    }

    public static void vMeth(int i) {

        byte by=-95;
        int i16=63, i17=61264, i18=30622, i19=95;
        float f2=-29.137F;
        boolean b1=true;

        i = (by - (Test.byArrFld[(i >>> 1) % N] = (byte)Math.min(i, i)));
        Test.instanceCount += sMeth(-110);
        for (int i15 : Test.iArrFld) {
            Test.iArrFld[(i >>> 1) % N] = -101;
            for (i16 = 1; i16 < 4; ++i16) {
                if (i16 != 0) {
                    vMeth_check_sum += i + by + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 + (b1 ? 1 : 0);
                    return;
                }
                if (b1) {
                    f2 -= i17;
                    i17 = -239;
                    switch ((i16 % 2) + 43) {
                    case 43:
                        i17 <<= 119;
                        i >>= i16;
                        for (i18 = 1; i18 < 2; ++i18) {
                            i = (int)1619829067L;
                            i19 += (((i18 * by) + i18) - i18);
                        }
                        break;
                    case 44:
                        if (i19 != 0) {
                            vMeth_check_sum += i + by + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 + (b1 ? 1 : 0);
                            return;
                        }
                        break;
                    default:
                        i19 = 39994;
                    }
                } else if (true) {
                    by &= (byte)Test.instanceCount;
                } else {
                    i17 = i16;
                }
            }
        }
        vMeth_check_sum += i + by + i16 + i17 + Float.floatToIntBits(f2) + i18 + i19 + (b1 ? 1 : 0);
    }

    public void mainTest(String[] strArr1) {

        int i20=0, i21=29628, i22=6322, i23=137, i24=-7170, i25=-40240, i26=-4, i27=207;
        byte by2=-68;
        float f3=1.992F;

        vMeth(i20);
        for (i21 = 10; i21 < 397; i21++) {
            switch (((i21 % 4) * 5) + 109) {
            case 128:
                for (i23 = 2; i23 < 65; ++i23) {
                    for (i25 = 2; i25 > 1; i25 -= 3) {
                        Test.iArrFld[i21] = by2;
                        sFld = (short)8950331597230445659L;
                        i24 >>= i25;
                        switch ((i23 % 2) + 60) {
                        case 60:
                            try {
                                i26 = (i23 / i26);
                                i24 = (-28898 % i26);
                                Test.iArrFld[i25] = (i24 / 180);
                            } catch (ArithmeticException a_e) {}
                            i20 ^= i27;
                            switch (((i21 >>> 1) % 4) + 127) {
                            case 127:
                                i26 = 6;
                                f3 -= i25;
                                break;
                            case 128:
                                i22 -= i24;
                                i20 += (i25 * i21);
                                i20 += (i25 * i25);
                                i20 &= i21;
                                break;
                            case 129:
                                Test.iArrFld[i21 - 1] <<= i21;
                                i22 += (-232 + (i25 * i25));
                                switch (((i25 % 1) * 5) + 72) {
                                case 74:
                                    Test.iArrFld[i25 + 1] /= (int)(sFld | 1);
                                    Test.iArrFld[i23] += i24;
                                    i27 -= i23;
                                    i26 += i20;
                                    break;
                                }
                                break;
                            case 130:
                                Test.instanceCount = 1;
                                i27 += (-65352 + (i25 * i25));
                                break;
                            }
                            break;
                        case 61:
                            i26 = i22;
                            i22 >>= -61984;
                            break;
                        }
                    }
                    Test.iArrFld[i21 - 1] = i25;
                }
                break;
            case 125:
                Test.lFld >>= i26;
                break;
            case 124:
                Test.lFld -= i22;
                break;
            case 116:
                Test.dFld = Test.instanceCount;
                break;
            default:
                i27 += i22;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  sMeth ->  sMeth vMeth mainTest
//DEBUG  fMeth ->  fMeth sMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
