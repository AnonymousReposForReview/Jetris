package tests.javafuzzer2632;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 17:37:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=247L;
    public static double dFld=-1.125986;
    public int iFld=-8;
    public static float fFld=0.930F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 12);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, long l1) {

        int i9=9;
        byte by=-92;

        i9 >>= by;
        vMeth1_check_sum += l + l1 + i9 + by;
    }

    public static int iMeth(int i6, int i7, int i8) {

        int i10=-14, i11=-65344, i12=-53689, i13=9, i14=-12;
        float f=-75.228F, f1=-2.234F;
        boolean b=true;
        short s=27121;
        long lArr[]=new long[N];
        double dArr1[]=new double[N];

        FuzzerUtils.init(lArr, -32834L);
        FuzzerUtils.init(dArr1, -67.49536);

        vMeth1(189309566054165869L, Test.instanceCount);
        i6 -= i6;
        Test.instanceCount += i7;
        for (i10 = 14; i10 < 315; ++i10) {
            for (i12 = i10; i12 < 5; i12 += 3) {
                i14 = 1;
                do {
                    lArr[i14 - 1] <<= i12;
                } while (++i14 < 1);
                Test.iArrFld[i12] %= (int)(i10 | 1);
                switch (i12 + 70) {
                case 70:
                    i7 = (int)f;
                    break;
                case 71:
                    i11 += i7;
                    switch ((i10 % 2) + 32) {
                    case 32:
                        dArr1[i12 + 1] = i11;
                        f -= -136;
                        i8 = -7;
                        break;
                    case 33:
                        if (b) continue;
                    default:
                        Test.instanceCount -= i6;
                    }
                    break;
                case 72:
                    Test.instanceCount <<= i14;
                    break;
                case 73:
                    i8 = i10;
                case 74:
                    i6 = (int)f;
                    break;
                case 75:
                    Test.iArrFld = Test.iArrFld;
                    break;
                case 76:
                    i11 -= i14;
                    break;
                case 77:
                    i8 *= i13;
                    break;
                case 78:
                    i11 <<= i7;
                case 79:
                    b = b;
                    break;
                case 80:
                    i6 = (int)48L;
                    break;
                case 81:
                    i6 += (i12 ^ i8);
                case 82:
                case 83:
                    i13 -= (int)Test.instanceCount;
                    break;
                case 84:
                    i7 += i12;
                    break;
                case 85:
                    i8 = (int)Test.instanceCount;
                    break;
                case 86:
                    i11 += (((i12 * i7) + i7) - i6);
                    break;
                case 87:
                    i11 -= (int)f;
                    break;
                case 88:
                    i13 >>= 8;
                case 89:
                    i13 >>= 69;
                    break;
                case 90:
                    i6 += (((i12 * i12) + i13) - s);
                    break;
                case 91:
                    b = b;
                    break;
                case 92:
                    i11 += (int)Test.instanceCount;
                    break;
                case 93:
                    Test.iArrFld[i12] = i8;
                    break;
                case 94:
                    i6 += (int)(23L + (i12 * i12));
                    break;
                case 95:
                    if (b) break;
                    break;
                case 96:
                    i7 = (int)Test.dFld;
                    break;
                case 97:
                    f += (i12 * i8);
                    break;
                case 98:
                    i7 = 7726;
                    break;
                case 99:
                    i7 = i14;
                    break;
                case 100:
                    if (true) break;
                    break;
                case 101:
                    i6 -= i6;
                    break;
                case 102:
                    i6 += i10;
                    break;
                case 103:
                    f = i12;
                    break;
                case 104:
                    i8 = i7;
                    break;
                case 105:
                case 106:
                    b = b;
                    break;
                case 107:
                    i11 <<= i8;
                    break;
                case 108:
                    i8 += i12;
                    break;
                case 109:
                    i13 += (10 + (i12 * i12));
                    break;
                case 110:
                    f -= i6;
                    break;
                case 111:
                case 112:
                    i13 >>= i14;
                case 113:
                    Test.iArrFld[i12 + 1] <<= i8;
                    break;
                case 114:
                    f += (float)2.57579;
                case 115:
                    Test.instanceCount += i7;
                    break;
                case 116:
                    Test.instanceCount = i6;
                    break;
                case 117:
                    Test.iArrFld[i12 + 1] = (int)Test.dFld;
                    break;
                case 118:
                    Test.iArrFld[i12] *= i12;
                    break;
                case 119:
                    Test.instanceCount = s;
                    break;
                case 120:
                case 121:
                    i13 -= s;
                    break;
                case 122:
                    i13 -= i10;
                case 123:
                    i13 += -14;
                    break;
                case 124:
                    f += f1;
                case 125:
                    Test.instanceCount += (i12 * i11);
                    break;
                case 126:
                    f -= i11;
                case 127:
                    Test.iArrFld[i10 + 1] -= 131;
                case 128:
                    s += (short)(i12 - i7);
                case 129:
                case 130:
                    Test.instanceCount -= i8;
                    break;
                case 131:
                    i11 -= (int)f;
                    break;
                case 132:
                    f -= 0;
                case 133:
                    Test.iArrFld[i12] -= i7;
                case 134:
                    i11 += (46523 + (i12 * i12));
                    break;
                case 135:
                    Test.iArrFld[i12 - 1] = i12;
                    break;
                case 136:
                    i13 += 84;
                    break;
                case 137:
                case 138:
                    dArr1[i10] -= 83.104028;
                    break;
                case 139:
                    i7 /= (int)(Test.instanceCount | 1);
                    break;
                }
            }
        }
        long meth_res = i6 + i7 + i8 + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f) + (b ? 1 : 0) + s +
            Float.floatToIntBits(f1) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        int i5=60366, i15=-37677, i16=-5, iArr[]=new int[N];
        boolean b1=false;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, -3878);
        FuzzerUtils.init(dArr, -102.95198);

        for (int i4 : iArr) {
            i5 = 1;
            while (++i5 < 4) {
                i4 = (int)dArr[i5 + 1];
                i3 += (iMeth(i4, i2, i3) + i4);
                b1 = b1;
                i2 ^= (int)Test.instanceCount;
                for (i15 = 1; i15 < 1; i15++) {
                    i2 = i3;
                    Test.instanceCount += i2;
                    i16 <<= i16;
                    i4 -= i16;
                    i16 += i15;
                    iArr[i5 + 1] += -115;
                }
                i2 -= 35994;
                Test.instanceCount -= i16;
            }
        }
        vMeth_check_sum += i2 + i3 + i5 + (b1 ? 1 : 0) + i15 + i16 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=-2, i1=-5, i17=-13, i18=-107, i19=-218;
        double d=2.126120;
        short s1=9045;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -84.955F);

        for (i = 2; i < 246; i++) {
            i1 += (i ^ Test.instanceCount);
            vMeth(i, i);
            Test.iArrFld[i] <<= (int)Test.instanceCount;
            i1 += (i * Test.instanceCount);
            Test.dFld = iFld;
            for (d = 5; d < 103; d++) {
                for (i18 = 2; 1 < i18; i18 -= 2) {
                    iFld = iFld;
                    switch (((i1 >>> 1) % 10) + 107) {
                    case 107:
                        Test.instanceCount >>>= i;
                        Test.fFld *= i19;
                        i17 *= (int)Test.fFld;
                        break;
                    case 108:
                        i17 += (i18 * i18);
                        s1 = (short)Test.instanceCount;
                        break;
                    case 109:
                        Test.iArrFld[i18 + 1] >>= s1;
                        Test.instanceCount = i17;
                        break;
                    case 110:
                        Test.dFld += s1;
                        i17 += (((i18 * Test.fFld) + Test.instanceCount) - iFld);
                        fArr = fArr;
                        i1 += i18;
                        break;
                    case 111:
                        i17 += i;
                        Test.instanceCount <<= i1;
                        break;
                    case 112:
                        i19 *= i1;
                        iFld *= (int)Test.fFld;
                        i1 += i18;
                        Test.dFld *= Test.instanceCount;
                        break;
                    case 113:
                        Test.dFld = iFld;
                        iFld -= (int)Test.fFld;
                        break;
                    case 114:
                        Test.fFld -= i1;
                        break;
                    case 115:
                        Test.instanceCount = i;
                        break;
                    case 116:
                        i17 += i18;
                        break;
                    default:
                        Test.iArrFld[i18 - 1] *= (int)Test.fFld;
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
