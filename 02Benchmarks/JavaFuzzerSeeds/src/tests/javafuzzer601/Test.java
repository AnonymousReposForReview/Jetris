package tests.javafuzzer601;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:21:47 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=19140L;
    public static volatile double dFld=127.119401;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -55.932F);
        FuzzerUtils.init(Test.iArrFld, -2);
        FuzzerUtils.init(Test.byArrFld, (byte)54);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i8, float f1) {

        int i9=-12742, i10=4;
        double d=-11.105591;

        Test.instanceCount += Test.instanceCount;
        Test.fArrFld[(i8 >>> 1) % N] -= i8;
        for (i9 = 378; i9 > 3; i9--) {
            byte by=-88;
            switch (((i9 % 1) * 5) + 16) {
            case 17:
                by += by;
                break;
            }
            i8 += i8;
            f1 = i8;
            i10 -= i9;
            Test.instanceCount = (long)d;
        }
        i8 = i9;
        vMeth2_check_sum += i8 + Float.floatToIntBits(f1) + i9 + i10 + Double.doubleToLongBits(d);
    }

    public static void vMeth1() {

        int i4=-18865, i5=-87, i6=251, i7=30, i11=-21477, i12=8, iArr[][]=new int[N][N];
        float f=48.896F;
        long l=-3917927983989378220L;
        double d1=-88.58397, dArr[]=new double[N];
        boolean b=false;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)32036);
        FuzzerUtils.init(dArr, -26.88817);
        FuzzerUtils.init(iArr, -35695);

        sArr[(i4 >>> 1) % N] |= (short)(i4 >>>= (int)((f * i4) - (i4 + 88)));
        for (l = 19; l < 370; ++l) {
            for (i6 = 1; 5 > i6; ++i6) {
                vMeth2(i6, f);
                d1 -= f;
                dArr[(int)(l)] -= 230;
                Test.iArrFld[(int)(l + 1)] = i5;
                f -= i4;
                switch ((int)(((l % 4) * 5) + 123)) {
                case 126:
                    for (i11 = 1; i11 < 2; i11++) {
                        i5 *= (int)l;
                        Test.fArrFld[i11 - 1] = (float)d1;
                        Test.iArrFld[(int)(l + 1)] >>= i7;
                        if (b) continue;
                        iArr = FuzzerUtils.int2array(N, (int)158);
                    }
                    break;
                case 133:
                    f -= i5;
                    break;
                case 137:
                    d1 = l;
                case 124:
                    i5 = -145;
                    break;
                }
            }
        }
        vMeth1_check_sum += i4 + Float.floatToIntBits(f) + l + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i11 + i12 +
            (b ? 1 : 0) + FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {

        int i2=95, i3=31969, i13=194, i14=-27;
        short s=-12489, sArr1[]=new short[N];
        double d2=-1.29004;
        byte by1=-59, by2=-11;
        float f2=99.224F;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 49L);
        FuzzerUtils.init(sArr1, (short)29124);

        for (i2 = 4; 287 > i2; ++i2) {
            Test.fArrFld[i2] -= s;
            if (i2 != 0) {
                vMeth_check_sum += i2 + i3 + s + i13 + i14 + Double.doubleToLongBits(d2) + by1 +
                    Float.floatToIntBits(f2) + by2 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr1);
                return;
            }
            vMeth1();
            Test.instanceCount = Test.instanceCount;
            i3 = (int)-171L;
            Test.instanceCount += 5384L;
            for (i13 = 1; i13 < 6; i13++) {
                try {
                    i3 = (-36794 / i14);
                    Test.iArrFld[i2 - 1] = (19 % i14);
                    i3 = (-35493 / i3);
                } catch (ArithmeticException a_e) {}
                switch (i13 + 105) {
                case 105:
                    switch ((i2 % 6) + 35) {
                    case 35:
                        d2 = i13;
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += (((i13 * Test.instanceCount) + i14) - i2);
                        Test.instanceCount = i14;
                        break;
                    case 36:
                        i14 = (int)Test.instanceCount;
                        break;
                    case 37:
                        d2 *= i3;
                        break;
                    case 38:
                        i14 += i13;
                    case 39:
                        i3 = (int)Test.instanceCount;
                    case 40:
                        if (true) continue;
                        break;
                    default:
                        by1 = (byte)13;
                    }
                    break;
                case 106:
                    i14 += (i13 - Test.instanceCount);
                    break;
                case 107:
                    by1 = (byte)f2;
                case 108:
                    i14 = (int)Test.instanceCount;
                    break;
                case 109:
                    i14 += (((i13 * i14) + i14) - i14);
                    break;
                case 110:
                    i14 = i14;
                    break;
                case 111:
                    Test.instanceCount = 2947990789712899728L;
                    break;
                case 112:
                    i14 = (int)Test.instanceCount;
                    break;
                case 113:
                    Test.byArrFld = Test.byArrFld;
                    break;
                case 114:
                    i14 = i2;
                    break;
                case 115:
                    Test.iArrFld[i2 + 1] >>= i13;
                    break;
                case 116:
                    i3 += (((i13 * f2) + i13) - i3);
                    break;
                case 117:
                    i14 *= (int)Test.instanceCount;
                    break;
                case 118:
                    i3 *= (int)Test.instanceCount;
                case 119:
                    i14 >>= i2;
                    break;
                case 120:
                    Test.iArrFld[i13 - 1] += (int)f2;
                case 121:
                    i14 *= i2;
                    break;
                case 122:
                    i14 *= i2;
                    break;
                case 123:
                    f2 = i2;
                    break;
                case 124:
                    Test.instanceCount ^= 47254;
                    break;
                case 125:
                    i14 -= (int)Test.instanceCount;
                    break;
                case 126:
                    i3 += (((i13 * i13) + i2) - by2);
                    break;
                case 127:
                    Test.instanceCount = i13;
                    break;
                case 128:
                    by2 >>= (byte)i2;
                    break;
                case 129:
                    Test.iArrFld[i13] = i14;
                case 130:
                    i3 <<= i14;
                    break;
                case 131:
                    s ^= (short)i14;
                    break;
                case 132:
                    Test.instanceCount += (i13 - Test.instanceCount);
                    break;
                case 133:
                    i14 += (19969 + (i13 * i13));
                    break;
                case 134:
                    Test.iArrFld[i2 - 1] >>= -3062;
                    break;
                case 135:
                    i3 *= i2;
                    break;
                case 136:
                    Test.iArrFld[i2 + 1] = (int)f2;
                    break;
                case 137:
                    f2 *= i14;
                    break;
                case 138:
                    Test.instanceCount = i2;
                case 139:
                    lArr = lArr;
                case 140:
                    Test.iArrFld[i2 + 1] -= -2777;
                case 141:
                    i14 <<= i13;
                case 142:
                    Test.instanceCount += (i13 * i13);
                    break;
                case 143:
                    i14 = (int)d2;
                    break;
                case 144:
                    i3 += (i13 * i13);
                    break;
                case 145:
                    i3 += -56;
                    break;
                case 146:
                    Test.fArrFld[i13] += Test.instanceCount;
                    break;
                case 147:
                case 148:
                    i14 += (40884 + (i13 * i13));
                    break;
                case 149:
                    i14 = (int)Test.instanceCount;
                case 150:
                    i14 <<= (int)Test.instanceCount;
                    break;
                case 151:
                    Test.instanceCount = (long)57.75F;
                case 152:
                    Test.iArrFld[i2 - 1] = i14;
                    break;
                case 153:
                    i14 *= (int)f2;
                    break;
                case 154:
                    by1 = (byte)i3;
                    break;
                case 155:
                    sArr1[i2] *= (short)d2;
                    break;
                case 156:
                    Test.iArrFld[i2 + 1] -= i13;
                    break;
                case 157:
                    Test.instanceCount = i2;
                case 158:
                    i3 += (i13 ^ i13);
                    break;
                case 159:
                    lArr[i2] *= Test.instanceCount;
                    break;
                case 160:
                    i3 = -24686;
                    break;
                case 161:
                    i14 += i13;
                    break;
                case 162:
                    i14 += (int)Test.instanceCount;
                    break;
                case 163:
                    f2 += i13;
                    break;
                case 164:
                    f2 -= i2;
                    break;
                case 165:
                    d2 = -37.546F;
                    break;
                case 166:
                    Test.instanceCount += (((i13 * i3) + Test.instanceCount) - Test.instanceCount);
                    break;
                case 167:
                    Test.iArrFld[i2] <<= -136;
                    break;
                case 168:
                    s += (short)(i13 * i13);
                case 169:
                    Test.byArrFld[i2] -= (byte)d2;
                    break;
                case 170:
                    i3 += (int)Test.instanceCount;
                case 171:
                    i14 += (((i13 * i2) + i2) - i2);
                case 172:
                    try {
                        Test.iArrFld[i13] = (i3 % i14);
                        i14 = (i3 / i2);
                        i3 = (i13 % -137);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 173:
                    Test.instanceCount += by2;
                    break;
                case 174:
                    i14 *= 0;
                    break;
                }
            }
        }
        vMeth_check_sum += i2 + i3 + s + i13 + i14 + Double.doubleToLongBits(d2) + by1 + Float.floatToIntBits(f2) + by2
            + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=4, i1=0, i16=45858, i17=-1, i18=-10880, i19=-41075, i20=-21611;
        byte by3=-106;
        short s1=31700;
        float f3=2.703F;

        for (i = 18; i < 395; ++i) {
            i1 += (int)(-147L + (i * i));
            i1 &= i1;
            vMeth();
            Test.instanceCount -= i;
            if (bFld) {
                if (true) {
                    by3 = (byte)i1;
                } else if (bFld) {
                    Test.instanceCount = (long)Test.dFld;
                    Test.fArrFld[i + 1] += i1;
                    s1 ^= (short)i1;
                } else {
                    i1 += -16;
                    for (i16 = 4; i16 < 67; i16++) {
                        Test.instanceCount += i;
                        i17 += i1;
                        i1 -= (int)Test.instanceCount;
                    }
                    i17 -= i17;
                    for (i18 = i; 67 > i18; ++i18) {
                        f3 = i16;
                        i1 >>= (int)Test.instanceCount;
                        f3 = 12;
                        i1 <<= i16;
                    }
                }
                i20 = 1;
                do {
                    i17 = i1;
                    Test.instanceCount *= i1;
                    i19 = 11;
                    bFld = bFld;
                } while (++i20 < 67);
            } else {
                f3 -= f3;
                Test.iArrFld[i + 1] -= i18;
            }
            i17 &= i20;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
