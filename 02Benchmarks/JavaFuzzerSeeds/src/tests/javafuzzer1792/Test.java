package tests.javafuzzer1792;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 03:23:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2394172641L;
    public volatile short sFld=6663;
    public static short sFld1=13564;
    public static float fFld=2.408F;
    public volatile byte byFld=100;
    public static volatile int iArrFld[][]=new int[N][N];
    public static volatile float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -51265);
        FuzzerUtils.init(Test.fArrFld, 0.990F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, int i5) {

        int i6=35556, i7=-9, i8=18971, i9=163, i10=-2, i11=2, iArr1[]=new int[N];
        float f1=2.70F;

        FuzzerUtils.init(iArr1, -12);

        for (i6 = 269; i6 > 4; i6 -= 2) {
            i7 += (int)(-342000126L + (i6 * i6));
            for (i8 = i6; 12 > i8; i8++) {
                for (i10 = 1; i10 < 1; i10++) {
                    f1 += f1;
                    i9 += i11;
                    iArr1[i6 - 1] = i11;
                    i5 -= i5;
                    iArr1[i6 + 1] -= (int)Test.instanceCount;
                    i5 = (int)f1;
                }
                i11 += (((i8 * Test.sFld1) + i10) - i10);
                iArr1[i8 - 1] <<= i9;
                Test.instanceCount += (-55124 + (i8 * i8));
                i7 *= i9;
                iArr1[i8] = i7;
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + i5 + i6 + i7 + i8 + i9 + i10 + i11 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth() {

        float f=0.552F;
        int i=13, i1=0, i2=-11, i3=7, i4=-5, i12=-30442, i13=4, i14=-49, iArr[]=new int[N];
        short s=-24913;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -1143588432L);
        FuzzerUtils.init(iArr, -115);

        for (f = 15; f < 388; ++f) {
            for (i1 = (int)(f); i1 < 5; ++i1) {
                lArr[i1] = (((i2--) - (10 - i2)) + s);
                for (i3 = 1; i3 < 1; i3++) {
                    iArr[i1 - 1] ^= i4;
                }
            }
            i *= -235;
            lArr[(int)(f - 1)] &= (--i);
            vMeth1(false, i1);
            Test.fFld += (f * f);
            iArr[(int)(f + 1)] += i4;
            i = i1;
        }
        i12 = 1;
        while (++i12 < 278) {
            for (i13 = i12; 6 > i13; i13++) {
                if (true) continue;
            }
            i2 += (((i12 * i) + i) - i4);
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i + i1 + i2 + s + i3 + i4 + i12 + i13 + i14 +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth() {

        int i15=185;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 3L);

        vMeth();
        Test.fFld = i15;
        i15 *= -51;
        lArr1[(-131 >>> 1) % N] += i15;
        Test.instanceCount = i15;
        long meth_res = i15 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i16=55469, i17=-50149, i18=-5, i19=-55191, i20=64332, i21=58, i22=-9, i23=14, i24=2856, i25=-39855, i26=8,
            i27=-28005;
        double d=11.114480;
        long l=-1712054155L, lArr2[]=new long[N], lArr3[][]=new long[N][N];

        FuzzerUtils.init(lArr2, -3581470793L);
        FuzzerUtils.init(lArr3, 1L);

        sFld = (short)Math.abs(iMeth() * 11);
        for (i16 = 9; i16 < 147; i16++) {
            i17 = i16;
            for (i18 = 3; 182 > i18; i18++) {
                i20 = 1;
                do {
                    try {
                        i19 = (i19 % -8);
                        Test.iArrFld[i20][i20] = (46187 / i20);
                        i19 = (-40076 % i17);
                    } catch (ArithmeticException a_e) {}
                    i19 += (int)-120.97961;
                    Test.fFld = -3019344962856645561L;
                    i17 -= i18;
                } while (++i20 < 2);
                Test.instanceCount += (((i18 * Test.instanceCount) + byFld) - i20);
            }
            i19 += i16;
            Test.fArrFld[i16 + 1] = 181;
            i19 += (i16 * i16);
            Test.instanceCount >>= i19;
            d = i17;
        }
        i17 ^= (int)-44297L;
        Test.iArrFld[(65391 >>> 1) % N][(-1 >>> 1) % N] = i17;
        for (i21 = 5; 326 > i21; i21++) {
            lArr2[i21 - 1] -= i16;
            Test.fArrFld[i21] = i20;
            i19 += i16;
            for (i23 = i21; i23 < 78; ++i23) {
                i17 = i20;
            }
            i25 = 1;
            do {
                i22 = (int)l;
                i22 <<= i18;
                for (i26 = 1; 1 > i26; i26++) {
                    i19 = -11;
                    lArr3 = lArr3;
                    i24 = sFld;
                }
            } while (++i25 < 78);
        }



    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
