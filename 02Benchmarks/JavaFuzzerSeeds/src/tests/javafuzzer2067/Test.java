package tests.javafuzzer2067;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 31 08:36:09 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=187L;
    public short sFld=-2474;
    public static long lFld=-2217540874524360943L;
    public static float fFld=0.843F;
    public static boolean bFld=true;
    public static double dFld=2.86740;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -3597604656L);
        FuzzerUtils.init(Test.iArrFld, 117);
    }

    public static long dMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth() {

        byte by=-28;
        int i10=13, i11=3, i12=12, i13=3881, i14=-130, iArr[]=new int[N];
        short s=31837;
        double d2=-2.96307;

        FuzzerUtils.init(iArr, -26480);

        Test.lFld = by;
        iArr[(-2 >>> 1) % N] *= (int)1.2456;
        i10 += (int)Test.lFld;
        s = (short)249;
        for (d2 = 16; d2 < 289; ++d2) {
            i10 &= (int)Test.lFld;
            Test.fFld -= i12;
            Test.fFld = -16210;
            iArr[(int)(d2 - 1)] = s;
            for (i13 = 1; 6 > i13; ++i13) {
                Test.lFld *= (long)Test.fFld;
                i12 += i10;
                if (false) continue;
                i10 -= i10;
                if (i11 != 0) {
                }
            }
        }
        long meth_res = by + i10 + s + Double.doubleToLongBits(d2) + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(long l2) {

        int i9=-216, i15=10, i16=-62, i17=-3526, i18=5, iArr1[]=new int[N];
        double d3=107.113385, dArr[]=new double[N];

        FuzzerUtils.init(dArr, 1.62892);
        FuzzerUtils.init(iArr1, -55379);

        dArr[(i9 >>> 1) % N] *= iMeth();
        i15 = 1;
        do {
            iArr1[i15 + 1] <<= 4;
            i9 = (int)Test.fFld;
            i16 <<= i9;
            for (i17 = 1; i17 < 13; ++i17) {
                i9 += (i17 * i17);
                if (i15 != 0) {
                    vMeth_check_sum += l2 + i9 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d3) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                if (Test.bFld) break;
                i16 = -12;
                Test.fFld += (float)d3;
                Test.lFld += (i17 | i16);
            }
            i16 = 45204;
            iArr1[i15 - 1] *= 133;
            try {
                i16 = (i9 / i18);
                i16 = (51 % i15);
                i18 = (i15 / i18);
            } catch (ArithmeticException a_e) {}
        } while (++i15 < 122);
        vMeth_check_sum += l2 + i9 + i15 + i16 + i17 + i18 + Double.doubleToLongBits(d3) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public double dMeth(int i4, long l1, int i5) {

        double d=1.64942, d1=51.106832;
        int i6=-7, i7=7, i8=-14;

        i5 %= (int)(((long)(13 / (((long)((sFld + 9) + (--d))) | 1))) | 1);
        for (i6 = 216; i6 > 11; i6--) {
            for (d1 = 8; d1 > i6; --d1) {
                i4 -= (int)(Test.lArrFld[(int)(d1 + 1)]--);
                switch ((i6 % 8) + 56) {
                case 56:
                    vMeth(Test.instanceCount);
                    i4 -= (int)-12.22F;
                case 57:
                    Test.instanceCount += i7;
                    break;
                case 58:
                    sFld = sFld;
                    i8 += (int)(((d1 * i4) + l1) - sFld);
                    i4 = i8;
                    i8 += (int)(((d1 * Test.fFld) + Test.lFld) - i4);
                case 59:
                    i5 &= 19178;
                    Test.iArrFld[i6 - 1] = i4;
                    Test.instanceCount = i7;
                    break;
                case 60:
                    i4 += (int)d1;
                    break;
                case 61:
                    Test.instanceCount -= Test.instanceCount;
                    break;
                case 62:
                    i5 = i4;
                case 63:
                    Test.fFld = (float)d1;
                    break;
                }
            }
        }
        long meth_res = i4 + l1 + i5 + Double.doubleToLongBits(d) + i6 + i7 + Double.doubleToLongBits(d1) + i8;
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i1=-19757, i2=36411, i3=49904, i20=47984, i21=-67;
        float f=0.168F;
        long l=757792346L;
        double dArr1[]=new double[N];

        FuzzerUtils.init(dArr1, 29.98837);

        i = 1;
        do {
            switch (((((++i1) >>> 1) % 2) * 5) + 105) {
            case 112:
                f += (i - i1);
                l = 1;
                while (++l < 182) {
                    i1 += (int)(((l * i) + i) - i);
                    i1 += (int)(((l * i) + i) - f);
                    for (i2 = 1; i2 < 1; ++i2) {
                        i1 -= (int)Test.instanceCount;
                        i1 += (((i2 * i2) + Test.instanceCount) - i2);
                        Test.instanceCount += (long)dMeth(83, Test.instanceCount, i2);
                        f = f;
                        Test.iArrFld[i2 - 1] = 4483;
                        i1 *= i1;
                        Test.lFld = i1;
                        Test.iArrFld[i2 + 1] <<= 1;
                        f *= Test.lFld;
                    }
                }
                Test.instanceCount += i;
                dArr1 = dArr1;
            case 114:
                Test.dFld *= i2;
                i3 *= (int)Test.lFld;
                if (Test.bFld) continue;
                break;
            }
            Test.instanceCount *= -7;
            for (i20 = 5; i20 < 182; i20++) {
                i21 += (-147 + (i20 * i20));
                i21 = 59;
                Test.iArrFld[i20 + 1] = i2;
                Test.fFld += i20;
                sFld += (short)i20;
                Test.iArrFld[i + 1] = (int)3313767428L;
                Test.instanceCount /= (long)60.43F;
            }
        } while (++i < 138);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  dMeth ->  dMeth mainTest
//DEBUG  vMeth ->  vMeth dMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth dMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
