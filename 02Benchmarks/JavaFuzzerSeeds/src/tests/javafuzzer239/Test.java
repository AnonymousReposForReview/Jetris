package tests.javafuzzer239;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 00:44:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=6143967261342345535L;
    public static int iFld=25894;
    public static int iFld1=57947;
    public float fFld=-58.868F;
    public static boolean bFld=false;
    public static byte byFld=-73;
    public double dFld=-1.55526;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 211);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, int i4, byte by) {

        int i5=-204, i6=0, i7=-11, i8=129, i9=6, i10=9, iArr[]=new int[N];
        float f2=-78.188F;
        double d=1.82837;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 79);
        FuzzerUtils.init(lArr1, -223027366188995913L);

        for (i5 = 1; i5 < 239; ++i5) {
            Test.instanceCount = (long)f2;
            for (i7 = 1; i7 < 7; i7++) {
                boolean b=false;
                l += (long)(55.436F + (i7 * i7));
                i4 += (((i7 * Test.instanceCount) + i4) - f2);
                i8 -= (int)Test.instanceCount;
                switch ((i5 % 7) + 76) {
                case 76:
                    b = b;
                    for (i9 = 1; 2 > i9; ++i9) {
                        switch ((((i8 >>> 1) % 2) * 5) + 14) {
                        case 15:
                            if (b) continue;
                            i8 = i6;
                        case 24:
                            d %= (Test.instanceCount | 1);
                            iArr = iArr;
                            break;
                        default:
                            f2 += (((i9 * i6) + i5) - i10);
                        }
                    }
                case 77:
                    l += (i7 ^ Test.instanceCount);
                    break;
                case 78:
                    i8 = (int)l;
                    break;
                case 79:
                    iArr[i5 + 1] = 8;
                    break;
                case 80:
                case 81:
                case 82:
                    lArr1[i7] -= i7;
                }
            }
        }
        vMeth2_check_sum += l + i4 + by + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth1(int i1) {

        float f1=114.465F;
        int i2=-41911, i3=3, i11=4, i12=8, i13=14, i14=141;
        byte by1=0;
        boolean b1=false;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, 36149L);

        i1 &= i1;
        Test.iFld += (int)((--lArr[(11343 >>> 1) % N][(i1 >>> 1) % N]) + f1);
        for (i2 = 10; i2 < 176; ++i2) {
            switch (((i2 % 3) * 5) + 3) {
            case 9:
                vMeth2(Test.instanceCount, i2, (byte)(89));
                for (i11 = 1; i11 < 10; ++i11) {
                    for (i13 = 1; i13 < 2; i13++) {
                        Test.iArrFld[i2 + 1] = (int)Test.instanceCount;
                        by1 += (byte)Test.instanceCount;
                        i3 += i13;
                        switch ((i2 % 2) + 53) {
                        case 53:
                        case 54:
                            i1 *= -45788;
                            i1 = Test.iFld1;
                            break;
                        }
                        i12 *= -1347;
                        i1 -= -10283;
                    }
                }
                break;
            case 5:
                Test.iFld <<= 22796;
            case 18:
                Test.iFld = i14;
                break;
            default:
                if (b1) continue;
            }
        }
        vMeth1_check_sum += i1 + Float.floatToIntBits(f1) + i2 + i3 + i11 + i12 + i13 + i14 + by1 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(float f, int i) {

        int i15=197, i16=4, i17=2, i18=-127, i19=21, i20=-10;
        byte by2=8;

        vMeth1(i);
        i15 = 1;
        do {
            for (i16 = 1; 10 > i16; i16++) {
                Test.iFld = (int)Test.instanceCount;
                switch (((i16 % 2) * 5) + 119) {
                case 120:
                    i -= Test.iFld;
                    f *= i17;
                    i18 = (int)f;
                    break;
                case 123:
                    i17 = (int)-47614L;
                    Test.instanceCount += i16;
                    break;
                }
                i = (int)Test.instanceCount;
                Test.instanceCount -= (long)f;
            }
            for (i19 = 1; 10 > i19; i19++) {
                Test.instanceCount += (i19 * by2);
                by2 = (byte)i19;
            }
        } while (++i15 < 161);
        vMeth_check_sum += Float.floatToIntBits(f) + i + i15 + i16 + i17 + i18 + i19 + i20 + by2;
    }

    public void mainTest(String[] strArr1) {

        int i21=26815, i22=-1638, i23=-71, i24=0, i25=238, i26=38056, i27=-10, i28=-12, i29=40, i30=8773;
        short s=-28337;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 83.748F);

        vMeth(fFld, Test.iFld);
        i21 = 1;
        do {
            if (Test.bFld) continue;
            for (i22 = 106; i22 > 1; --i22) {
                Test.instanceCount = s;
                Test.iFld1 *= Test.iFld;
                fFld = -2.333F;
                fFld += i22;
                for (i24 = 1; i24 < 2; i24++) {
                    Test.iArrFld = Test.iArrFld;
                    Test.byFld += (byte)i24;
                }
                fFld += (i22 * i22);
                Test.byFld += (byte)6;
            }
            Test.iFld1 += Test.iFld1;
            i25 += (int)dFld;
            for (i26 = i21; i26 < 106; ++i26) {
                i23 += i26;
                Test.instanceCount = Test.instanceCount;
                fFld += i26;
                Test.iArrFld[i21] = i24;
            }
            i28 = 1;
            do {
                for (i29 = 1; 1 > i29; ++i29) {
                    fArr[i29 + 1] = fFld;
                    Test.iArrFld[i28] = i23;
                    Test.instanceCount = (long)dFld;
                    Test.byFld = (byte)Test.iFld1;
                    i30 = i29;
                    Test.instanceCount = 3705255329L;
                    fFld += i22;
                }
                i27 += (int)-1.853F;
            } while (++i28 < 106);
        } while (++i21 < 238);

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
