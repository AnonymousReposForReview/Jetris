package tests.javafuzzer755;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 09:10:24 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-24152L;
    public static int iFld=13;
    public static volatile float fFld=-72.67F;
    public static volatile boolean bFld=true;
    public static double dFld=39.91028;
    public int iArrFld[]=new int[N];

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(short s) {

        int i9=-8, i10=-17348, i11=21026, iArr1[][]=new int[N][N];
        double d=0.91592;

        FuzzerUtils.init(iArr1, 50);

        Test.instanceCount = Test.iFld;
        i9 = 1;
        while (++i9 < 316) {
            for (i10 = 1; i10 < 5; ++i10) {
                i11 = -5236;
                s = s;
                Test.iFld += (-8 + (i10 * i10));
                i11 = 1;
                d = 1;
                while (++d < 2) {
                    iArr1[i10 + 1] = FuzzerUtils.int1array(N, (int)-103);
                    if (false) {
                        i11 -= i11;
                        Test.iFld += (int)Test.fFld;
                        Test.instanceCount -= i10;
                        i11 += (int)(d + i9);
                    }
                    iArr1[i9 - 1][(int)(d + 1)] *= 52733;
                }
            }
        }
        long meth_res = s + i9 + i10 + i11 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static long lMeth(int i8) {

        short s1=-32481;
        int i12=238, i13=8096, i14=-4, i15=-5, i16=19, i17=41638, iArr2[]=new int[N];
        double d1=2.81395;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr2, -34688);
        FuzzerUtils.init(lArr, 1082894837279390520L);

        i8 &= 0;
        i8 += i8;
        if (Test.bFld) {
            Test.instanceCount = (long)dMeth(s1);
        } else if (true) {
            i12 = 1;
            while (++i12 < 273) {
                i8 >>= i12;
                for (i13 = 1; i13 < 6; i13++) {
                    switch ((i12 % 6) + 108) {
                    case 108:
                        Test.fFld += i13;
                        i8 += (((i13 * i14) + Test.iFld) - Test.iFld);
                        break;
                    case 109:
                        i14 = -65173;
                        for (i15 = 1; 2 > i15; ++i15) {
                            i8 -= (int)Test.fFld;
                            iArr2[i13] += i12;
                            try {
                                i14 = (iArr2[i13] % 90);
                                Test.iFld = (iArr2[i15 - 1] % i17);
                                i17 = (i12 / i15);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 110:
                        d1 -= i8;
                        break;
                    case 111:
                        i14 += (i13 + Test.instanceCount);
                        break;
                    case 112:
                        lArr[i12] = i12;
                        break;
                    case 113:
                        Test.instanceCount = i17;
                        break;
                    }
                }
            }
        }
        long meth_res = i8 + s1 + i12 + i13 + i14 + i15 + i16 + i17 + Double.doubleToLongBits(d1) +
            FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(long l, int i) {

        int i1=-121, i2=-64226, i3=-4, i4=-40968, i5=-115, i6=-247, i7=-13660, i18=9, i19=19, iArr[]=new int[N];
        byte by=91;

        FuzzerUtils.init(iArr, -14);

        for (i1 = 13; i1 < 318; ++i1) {
            for (i3 = 1; i3 < 5; i3++) {
                if (i3 != 0) {
                    vMeth_check_sum += l + i + i1 + i2 + i3 + i4 + i5 + i6 + by + i7 + i18 + i19 +
                        FuzzerUtils.checkSum(iArr);
                    return;
                }
                switch ((i1 % 3) + 112) {
                case 112:
                    for (i5 = i3; i5 < 2; i5++) {
                        i4 += (i5 + l);
                        i4 += i5;
                        iArr[i3 - 1] <<= ((i1 - (by + i5)) * (--iArr[i5]));
                        Test.instanceCount += (((i7 + -13922) - i2) * -136);
                        i = (int)(lMeth(i7) - l);
                        Test.iFld *= i4;
                        i7 -= (int)Test.fFld;
                    }
                    for (i18 = 1; 2 > i18; ++i18) {
                        iArr[i1 - 1] *= i3;
                        l = -132;
                    }
                    break;
                case 113:
                    i19 = (int)Test.instanceCount;
                    break;
                case 114:
                    i >>= -48346;
                    break;
                default:
                    i2 = (int)Test.instanceCount;
                }
            }
        }
        vMeth_check_sum += l + i + i1 + i2 + i3 + i4 + i5 + i6 + by + i7 + i18 + i19 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        byte by1=72;
        int i21=53515, i22=2, i23=-3, i24=1, i25=2, i26=14977, i27=-27, i28=-38998;
        double d2=0.22084, dArr[][]=new double[N][N];
        float f=2.721F;
        short s2=14742;
        long lArr1[]=new long[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(lArr1, 6254129387646418118L);
        FuzzerUtils.init(dArr, -20.107864);
        FuzzerUtils.init(bArr, true);

        vMeth(Test.instanceCount, Test.iFld);
        Test.instanceCount = Test.iFld;
        for (int i20 : iArrFld) {
            iArrFld[(i20 >>> 1) % N] = by1;
            iArrFld = FuzzerUtils.int1array(N, (int)-1);
            Test.instanceCount <<= 13;
        }
        for (i21 = 3; i21 < 133; ++i21) {
            for (d2 = 1; d2 < 193; d2++) {
                lArr1[i21 - 1] = (long)d2;
                for (i24 = i21; i24 < 2; i24++) {
                    Test.fFld += f;
                    i22 += (((i24 * i22) + s2) - i24);
                    Test.instanceCount /= (i25 | 1);
                    dArr[i24][(int)(d2)] += i24;
                    i22 >>= (int)Test.instanceCount;
                }
                i23 += (int)(((d2 * i21) + Test.instanceCount) - i23);
                bArr[i21 - 1] = Test.bFld;
                s2 += (short)((long)d2 ^ Test.instanceCount);
            }
            Test.iFld = (int)Test.instanceCount;
        }
        iArrFld[(i21 >>> 1) % N] += i25;
        switch (((-3 >>> 1) % 2) + 53) {
        case 53:
            i25 <<= i21;
            i26 = 247;
            do {
                Test.iFld -= i23;
                Test.dFld -= Test.instanceCount;
                f = -14;
                Test.iFld *= 141;
            } while (--i26 > 0);
            for (i27 = 187; i27 > 8; --i27) {
                iArrFld[i27] = (int)Test.fFld;
                i23 += i27;
            }
            break;
        case 54:
            i23 += 53524;
            break;
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  dMeth ->  dMeth lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
