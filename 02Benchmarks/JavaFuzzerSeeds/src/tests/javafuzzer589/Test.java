package tests.javafuzzer589;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 06:15:45 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3221796421L;
    public boolean bFld=true;
    public static float fFld=43.58F;
    public static double dFld=0.87493;
    public static byte byFld=124;
    public static byte byArrFld[]=new byte[N];
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte)-100);
        FuzzerUtils.init(Test.iArrFld1, 44766);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i9) {

        int i10=158, i11=172, i12=98, i13=80;
        double d=-1.74385;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -1.550F);

        for (i10 = 7; i10 < 155; ++i10) {
            if (b) {
                i11 += -237;
                for (i12 = 1; i12 < 11; ++i12) {
                    Test.instanceCount += (i12 * i12);
                    Test.instanceCount = 5L;
                    Test.iArrFld1[i12] >>= i12;
                    fArr[i12] = i9;
                    i13 += (i12 * Test.instanceCount);
                    d *= i11;
                    i9 -= i9;
                    i13 = (int)Test.instanceCount;
                }
            } else {
                Test.fFld -= i9;
            }
            i13 &= i10;
            d += i13;
        }
        vMeth1_check_sum += i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d) + (b ? 1 : 0) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public int iMeth(long l, float f, int i2) {

        int i3=-1, i4=222, i5=-29344, i6=-33, i7=77, i8=3130;
        long lArr[]=new long[N];
        double dArr[]=new double[N];

        FuzzerUtils.init(lArr, 7L);
        FuzzerUtils.init(dArr, -12.3611);

        Test.byArrFld = (Test.byArrFld = (Test.byArrFld = (Test.byArrFld = Test.byArrFld)));
        for (i3 = 358; i3 > 6; i3--) {
            f -= f;
        }
        for (i5 = 167; i5 > 5; --i5) {
            lArr[i5] -= ((27591 + (i2--)) * (i4++));
            for (i7 = i5; i7 < 10; i7++) {
                int i14=9;
                if (bFld) break;
                switch ((i5 % 10) + 7) {
                case 7:
                    f -= (float)(-dArr[i5]);
                    break;
                case 8:
                    i6 >>>= (int)(++Test.instanceCount);
                    break;
                case 9:
                    Test.byArrFld[i7 - 1] >>= (byte)(i6--);
                    break;
                case 10:
                    try {
                        i2 = (iArrFld[i7 - 1] / 163);
                        i8 = (9837 / i7);
                        i6 = (-10 % iArrFld[i5]);
                    } catch (ArithmeticException a_e) {}
                    i8 += (int)(--f);
                    l += i7;
                    break;
                case 11:
                    vMeth1(i6);
                    break;
                case 12:
                    i8 = (int)Test.instanceCount;
                case 13:
                    i8 += i7;
                    break;
                case 14:
                    i6 += 6;
                case 15:
                    try {
                        iArrFld[i5 + 1] = (47872 / i3);
                        i8 = (i6 % i7);
                        iArrFld[i7] = (i2 % i14);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 16:
                    i4 = i8;
                    break;
                }
            }
        }
        long meth_res = l + Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i1=5, i15=-1, i16=42361, i17=-157, i18=-32787, i19=-4, i20=9;
        short s=-29245;

        i1 = (iMeth(-174L, 60.498F, i1) + 57662);
        for (i15 = 4; 255 > i15; i15++) {
            if (true) continue;
            i16 = (int)-2342247542L;
            Test.instanceCount += (((i15 * i15) + Test.instanceCount) - Test.fFld);
            i16 = (int)Test.fFld;
            for (i17 = 1; i17 < 6; ++i17) {
                for (i19 = 1; i19 < 2; ++i19) {
                    switch ((i15 % 9) + 59) {
                    case 59:
                        i20 = i20;
                        i1 += i19;
                    case 60:
                        i20 = i19;
                        i1 = (int)Test.instanceCount;
                    case 61:
                        i1 = (int)Test.fFld;
                        i1 += (((i19 * i1) + i19) - s);
                        break;
                    case 62:
                        Test.dFld = i20;
                        break;
                    case 63:
                        Test.instanceCount = i20;
                        break;
                    case 64:
                        Test.fFld -= Test.fFld;
                        break;
                    case 65:
                        i20 += i17;
                        break;
                    case 66:
                        Test.instanceCount += (long)Test.fFld;
                        break;
                    case 67:
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i15 + i16 + i17 + i18 + i19 + i20 + s;
    }

    public void mainTest(String[] strArr1) {

        int i=2, i21=-161, i22=-12, i23=122, i24=-32896, i25=2, i26=3205, i27=43180, i28=-4;
        short s1=31555;

        i = (int)41.703F;
        vMeth();
        Test.byFld += (byte)Test.instanceCount;
        for (i21 = 2; i21 < 337; ++i21) {
            lArrFld[i21 - 1] = lArrFld[i21 - 1];
            i22 = i;
            i22 = i21;
            i22 = i22;
            i >>= (int)178L;
            Test.iArrFld1[i21] >>= 8620;
            i22 = i21;
        }
        i22 <<= (int)Test.instanceCount;
        for (i23 = 15; i23 < 373; ++i23) {
            for (i25 = 4; i25 < 70; ++i25) {
                i = (int)10.319F;
                Test.instanceCount = i;
                i24 = -14;
                Test.dFld = i23;
                for (i27 = 1; i27 < 2; i27++) {
                    Test.instanceCount = s1;
                    i22 = 26430;
                    if (false) {
                        i22 <<= Test.byFld;
                        switch (((i27 % 1) * 5) + 90) {
                        case 92:
                            Test.fFld = Test.instanceCount;
                        }
                        i28 *= -37593;
                    } else {
                        i22 -= (int)Test.instanceCount;
                    }
                    Test.fFld = i28;
                }
                i = i;
            }
            i26 = (int)Test.dFld;
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
