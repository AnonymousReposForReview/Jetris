package tests.javafuzzer1087;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 14:16:27 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-13L;
    public float fFld=-48.752F;
    public static int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static volatile int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 6);
        FuzzerUtils.init(Test.lArrFld, 117L);
        FuzzerUtils.init(Test.iArrFld1, -122);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i11, int i12, int i13) {


        i12 >>= i11;
        long meth_res = i11 + i12 + i13;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(long l, long l1) {

        int i7=6683, i8=54384, i9=12, i10=25424, i14=29359, i15=-4, i16=-18317, i17=196, i18=24734;
        float f1=-2.450F, f2=0.779F;
        long l2=63940L, l3=20815L;
        byte by=80;
        double d2=-2.41619;

        for (i7 = 8; i7 < 177; ++i7) {
            Test.iArrFld[i7] -= (int)Math.min(Test.instanceCount, Test.lArrFld[i7 - 1]);
        }
        i9 = 1;
        do {
            for (f1 = 8; f1 > 1; f1 -= 2) {
                f2 = (f2 = ((-64204L % ((3 ^ (i10 * -61435)) | 1)) - iMeth1(i8, -19426, 87)));
                for (l2 = 1; l2 < 3; l2++) {
                    i15 = (int)l2;
                }
                i15 -= (int)f1;
                by -= (byte)-3;
                d2 -= i8;
            }
            for (i16 = 1; i16 < 8; i16++) {
                for (l3 = 1; l3 < 2; ++l3) {
                    i18 *= 6;
                    d2 = i9;
                    i15 = by;
                }
            }
        } while (++i9 < 194);
        long meth_res = l + l1 + i7 + i8 + i9 + Float.floatToIntBits(f1) + i10 + Float.floatToIntBits(f2) + l2 + i14 +
            i15 + by + Double.doubleToLongBits(d2) + i16 + i17 + l3 + i18;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(float f, int i2) {

        double d=0.82501, d1=0.44671;
        short s=-31665;
        int i3=47370, i4=191, i5=28026, i6=9261;
        boolean b=false;

        if (b) {
            d *= ((s--) - s);
        } else if (b) {
            for (i3 = 382; 8 < i3; --i3) {
                i5 = 5;
                do {
                    for (d1 = i3; d1 < 1; d1++) {
                        f = lMeth(Test.instanceCount, Test.instanceCount);
                        i2 = i5;
                        i2 = i4;
                        if (b) break;
                        Test.lArrFld = Test.lArrFld;
                        switch ((i3 % 1) + 47) {
                        case 47:
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)147);
                            break;
                        default:
                            Test.instanceCount = i5;
                            Test.iArrFld[(int)(d1)] += i5;
                            i4 *= i2;
                        }
                    }
                } while (--i5 > 0);
            }
        } else if (b) {
            Test.iArrFld1 = Test.iArrFld1;
        } else {
            i2 = (int)f;
        }
        long meth_res = Float.floatToIntBits(f) + i2 + Double.doubleToLongBits(d) + s + i3 + i4 + i5 +
            Double.doubleToLongBits(d1) + i6 + (b ? 1 : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-34896, i1=-62234, i19=65288, i20=8, i21=-6, i22=-128, i23=128, i24=-8, i25=215;
        byte by1=34;
        boolean b1=false;
        short s1=22794;
        double d3=0.130711;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.375F);

        for (i = 10; 262 > i; i++) {
            i1 += iMeth(0.325F, i1);
            Test.iArrFld1[i + 1] = i1;
            fFld += i;
            i1 >>= 46731;
        }
        for (i19 = 6; i19 < 201; ++i19) {
            i20 = i20;
            for (i21 = 6; i21 < 129; i21++) {
                by1 = (byte)i1;
                i1 *= i20;
                switch (((137 >>> 1) % 10) + 56) {
                case 56:
                    i1 += (int)Test.instanceCount;
                    i1 <<= i19;
                    for (i23 = 1; i23 < 2; ++i23) {
                        Test.iArrFld1[i19 + 1] = i24;
                        by1 += (byte)(((i23 * i25) + i21) - i19);
                        i1 >>= i1;
                        i1 += (i23 * i23);
                        Test.lArrFld = Test.lArrFld;
                        if (b1) {
                            i1 += i22;
                            if (b1) break;
                            fArr[i19 - 1] = i23;
                            if (b1) continue;
                        } else {
                            i22 |= i22;
                            Test.instanceCount = i25;
                        }
                        i22 >>= i19;
                        i24 -= s1;
                        fFld += i20;
                    }
                    break;
                case 57:
                    Test.instanceCount += (i21 ^ Test.instanceCount);
                    break;
                case 58:
                    Test.iArrFld1[i19 - 1] -= i20;
                    break;
                case 59:
                    i1 <<= i24;
                    break;
                case 60:
                    i22 += i22;
                    break;
                case 61:
                    d3 %= (i24 | 1);
                    break;
                case 62:
                    Test.instanceCount = i21;
                    break;
                case 63:
                    i22 -= (int)d3;
                    break;
                case 64:
                    i20 += -11;
                    break;
                case 65:
                    Test.iArrFld[i19 + 1] = i22;
                    break;
                default:
                    if (b1) break;
                }
            }
        }

    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
