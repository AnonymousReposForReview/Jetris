package tests.javafuzzer522;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Wed Aug 30 05:11:58 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-11L;
    public static short sFld=20745;
    public static int iFld=-36222;
    public static byte byFld=-78;
    public static int iFld1=-18693;
    public double dFld=2.128896;
    public static boolean bFld=false;
    public static int iArrFld[]=new int[N];
    public volatile byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -12080);
    }

    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i4, byte by) {

        int i5=4, i6=-117, i7=-2, i8=-29568, i10=101;
        float f=-1.777F;
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -4317L);

        i4 = (int)Test.instanceCount;
        for (i5 = 4; 226 > i5; ++i5) {
            Test.instanceCount += (94 + (i5 * i5));
            by += (byte)Test.instanceCount;
            for (i7 = 1; i7 < 7; i7++) {
                i4 += (int)Test.instanceCount;
                Test.sFld = (short)f;
                Test.instanceCount += (((i7 * i7) + i6) - Test.instanceCount);
                if (i7 != 0) {
                    vMeth1_check_sum += i4 + by + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + (b ? 1 : 0) + i10 +
                        FuzzerUtils.checkSum(lArr);
                    return;
                }
            }
            b = b;
            i10 = 38;
            i4 += (i5 * i5);
        }
        f -= i5;
        vMeth1_check_sum += i4 + by + i5 + i6 + i7 + i8 + Float.floatToIntBits(f) + (b ? 1 : 0) + i10 +
            FuzzerUtils.checkSum(lArr);
    }

    public static float fMeth(int i3) {

        int i11=61892, i12=-29970, i13=4730, i14=62;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 0L);

        i3 = (int)-2580L;
        vMeth1(i3, (byte)(16));
        for (i11 = 16; i11 < 316; i11++) {
            Test.instanceCount = Test.instanceCount;
            for (i13 = 1; i13 < 6; i13++) {
                int i15=-3;
                i3 = (int)-115.63164;
                lArr1[i13] *= i11;
                i14 = i3;
                i14 += i13;
                i12 = (int)Test.instanceCount;
                switch (((i13 % 5) * 5) + 63) {
                case 77:
                    i3 -= (int)14L;
                    Test.sFld *= (short)10348;
                    i15 += 14;
                case 69:
                    i12 += (((i13 * i14) + i14) - i14);
                    break;
                case 66:
                    Test.iFld += i13;
                    break;
                case 85:
                    Test.instanceCount -= i13;
                    break;
                case 72:
                }
            }
        }
        long meth_res = i3 + i11 + i12 + i13 + i14 + FuzzerUtils.checkSum(lArr1);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static void vMeth(int i2) {

        float f1=1.104F;
        int i16=-74, i17=-176, i18=211;
        boolean b1=false;
        double d=89.33226;
        long lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -2211695169393506808L);

        fMeth(Test.iFld);
        f1 += Test.instanceCount;
        i16 = 1;
        do {
            Test.iFld += Test.byFld;
            Test.instanceCount = i16;
            Test.iArrFld[i16 - 1] *= 6;
        } while (++i16 < 258);
        for (long l1 : lArr2) {
            Test.instanceCount = 703852762137379260L;
            switch ((((Test.iFld >>> 1) % 10) * 5) + 76) {
            case 115:
                switch (((i2 >>> 1) % 1) + 66) {
                case 66:
                    f1 = 8301;
                    try {
                        i2 = (Test.iFld / i16);
                        i2 = (502543908 % Test.iFld1);
                        Test.iArrFld[(i17 >>> 1) % N] = (66 % Test.iFld);
                    } catch (ArithmeticException a_e) {}
                    Test.iArrFld = Test.iArrFld;
                    break;
                default:
                    Test.iArrFld[(i16 >>> 1) % N] *= Test.iFld1;
                }
                l1 *= Test.byFld;
                break;
            case 102:
                Test.iFld1 = (int)l1;
                break;
            case 83:
                f1 -= Test.instanceCount;
                break;
            case 88:
                Test.instanceCount -= -42667L;
            case 90:
                if (b1) continue;
                break;
            case 105:
                i17 >>= (int)Test.instanceCount;
                break;
            case 119:
                d += 246;
                break;
            case 79:
                l1 += l1;
                break;
            case 107:
                i18 += (int)Test.instanceCount;
                break;
            case 86:
                b1 = b1;
            }
        }
        vMeth_check_sum += i2 + Float.floatToIntBits(f1) + i16 + i17 + (b1 ? 1 : 0) + Double.doubleToLongBits(d) + i18
            + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=-49, i1=115, i19=1, i20=-4, i21=-191, i22=10, i23=167, i24=-202, i25=-14, i26=-59447, iArr[][]=new
            int[N][N];
        boolean b2=true;
        float f2=119.696F, f3=28.15F;

        FuzzerUtils.init(iArr, 41502);

        for (i = 159; 7 < i; --i) {
            Test.instanceCount >>= iArr[i - 1][i + 1];
            vMeth(Test.iFld1);
            Test.iFld1 *= Test.iFld;
            Test.iFld1 += (i * Test.iFld1);
            byArrFld[i + 1] &= (byte)2;
        }
        for (i19 = 6; i19 < 350; ++i19) {
            i1 >>= i20;
            if (b2) break;
            for (i21 = 73; i21 > 2; i21 -= 2) {
                Test.iFld -= (int)Test.instanceCount;
                i22 = Test.iFld;
                i1 += (i21 | Test.iFld);
                i20 = i;
            }
            iArr[i19 + 1][i19 + 1] = i19;
            i1 <<= Test.iFld;
            for (i23 = 1; 73 > i23; i23++) {
                Test.iArrFld[i19 + 1] = (int)dFld;
                if (Test.bFld) break;
                Test.instanceCount += (long)-73.158F;
                for (i25 = 2; i25 > 1; i25 -= 3) {
                    Test.sFld += (short)(((i25 * i21) + i1) - i24);
                    if (b2) {
                        f2 -= i25;
                        iArr[i23][i19 - 1] = Test.iFld1;
                        switch ((i23 % 1) + 36) {
                        case 36:
                            Test.instanceCount += Test.byFld;
                        default:
                            try {
                                i1 = (Test.iArrFld[i19 - 1] % i19);
                                Test.iFld = (i25 % iArr[i25 - 1][i19 - 1]);
                                i20 = (255279554 % i20);
                            } catch (ArithmeticException a_e) {}
                            i22 ^= 37315;
                            f3 *= -55;
                        }
                    } else {
                        i20 /= (int)(i20 | 1);
                    }
                }
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 fMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
