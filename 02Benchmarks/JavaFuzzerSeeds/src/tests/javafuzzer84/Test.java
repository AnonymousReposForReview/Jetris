package tests.javafuzzer84;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 29 22:07:38 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2759890480L;
    public static short sFld=-4541;
    public static double dFld=0.121782;
    public byte byFld=-122;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -7L);
        FuzzerUtils.init(Test.iArrFld, 108);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i6) {

        float f=-40.972F, f1=2.798F;
        int i7=-128, i8=80, i9=-2, iArr1[]=new int[N];
        boolean b=false;
        short s=-30078;
        long l=8540774426145336960L;

        FuzzerUtils.init(iArr1, 54146);

        for (f = 10; f < 370; f++) {
            for (i8 = 1; i8 < 5; i8++) {
                double d=0.39715;
                if (b) break;
                i6 ^= i6;
                i6 = i7;
                iArr1[i8 + 1] = i8;
                switch ((i8 % 8) + 96) {
                case 96:
                    s += (short)0;
                    l = 1;
                    while (++l < 2) {
                        iArr1 = FuzzerUtils.int1array(N, (int)-4);
                        i7 *= i6;
                    }
                    break;
                case 97:
                    d *= s;
                    i6 -= i8;
                    f1 -= -160;
                    break;
                case 98:
                    Test.lArrFld[i8][(int)(f - 1)] >>= i6;
                    break;
                case 99:
                    Test.instanceCount += i8;
                    break;
                case 100:
                    i6 += (i8 * i8);
                    break;
                case 101:
                    i9 /= (int)(Test.instanceCount | 1);
                    break;
                case 102:
                    Test.instanceCount = i8;
                    break;
                case 103:
                    b = true;
                    break;
                }
            }
        }
        long meth_res = i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + (b ? 1 : 0) + s + l + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i2=165, i3=-6334, i4=-4, i5=8, i10=-208, i11=31682, iArr2[]=new int[N];
        byte by=74;
        long l1=-6672642939506176584L;
        boolean b1=false;
        float f2=39.996F;

        FuzzerUtils.init(iArr2, 132);

        for (i2 = 8; 281 > i2; i2++) {
            for (i4 = 1; i4 < 6; ++i4) {
                i5 -= (iMeth1(i5) - by);
                for (l1 = 1; l1 < 2; l1 += 2) {
                    if (b1) break;
                    i10 -= (int)Test.instanceCount;
                    i5 = i10;
                    i3 += (int)l1;
                }
                Test.lArrFld[i2][i4] -= -44973;
                b1 = b1;
                i11 = 1;
                while (++i11 < 2) {
                    Test.sFld >>= (short)226;
                    Test.instanceCount = i4;
                }
                Test.instanceCount -= (long)f2;
                iArr2[i2 + 1] = i3;
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + by + l1 + i10 + (b1 ? 1 : 0) + i11 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        int i12=24021, i13=99, i14=1, i15=-86, i16=53, iArr[]=new int[N];
        byte by1=117, byArr[]=new byte[N];
        float f3=-31.194F, fArr[][]=new float[N][N];

        FuzzerUtils.init(iArr, -11);
        FuzzerUtils.init(fArr, 102.272F);
        FuzzerUtils.init(byArr, (byte)-56);

        i1 += (iArr[(i1 >>> 1) % N] + Math.min(iMeth(), i1));
        i1 = i1;
        i12 = 1;
        while (++i12 < 223) {
            i1 |= (int)Test.instanceCount;
            for (i13 = 7; i13 > 1; i13--) {
                i14 += i13;
                by1 -= (byte)f3;
                switch (((i1 >>> 1) % 7) + 82) {
                case 82:
                    i15 = 1;
                    do {
                        switch ((i13 % 4) + 108) {
                        case 108:
                        case 109:
                            switch (((i1 >>> 1) % 8) + 7) {
                            case 7:
                                switch (((i1 >>> 1) % 1) + 24) {
                                case 24:
                                    iArr[i13 - 1] |= -77;
                                    break;
                                }
                                iArr[i15 + 1] <<= i16;
                                break;
                            case 8:
                                i16 += i15;
                                break;
                            case 9:
                                Test.instanceCount += (i15 | Test.instanceCount);
                                break;
                            case 10:
                                fArr[i15][i12] = Test.instanceCount;
                                break;
                            case 11:
                                i1 += (((i15 * i15) + Test.instanceCount) - f3);
                                break;
                            case 12:
                                f3 -= f3;
                                break;
                            case 13:
                                Test.instanceCount += 188;
                                break;
                            case 14:
                                f3 %= (i14 | 1);
                                break;
                            default:
                                i1 = (int)-2150483753L;
                            }
                            break;
                        case 110:
                        case 111:
                            f3 *= i12;
                            break;
                        }
                    } while (++i15 < 2);
                case 83:
                    i1 = 121;
                    break;
                case 84:
                    i16 = (int)Test.dFld;
                    break;
                case 85:
                    f3 = i14;
                case 86:
                    i1 += (i13 ^ i16);
                case 87:
                    byArr[i12 - 1] = (byte)i16;
                    break;
                case 88:
                    f3 = i15;
                    break;
                default:
                    i1 -= (int)1.309F;
                }
            }
        }
        vMeth_check_sum += i1 + i12 + i13 + i14 + by1 + Float.floatToIntBits(f3) + i15 + i16 +
            FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-94, i17=1026, i18=218, i19=-14, i20=-14, i21=40608, i22=54, i23=-31394, i24=81, i25=19605;
        boolean b2=false;
        float f4=-1.248F, fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -97.770F);

        i = (i++);
        vMeth(i);
        i -= (int)4519401091359732406L;
        Test.iArrFld[(i >>> 1) % N] = Test.iArrFld[(i17 >>> 1) % N];
        b2 = false;
        Test.instanceCount *= i;
        Test.instanceCount *= (long)Test.dFld;
        for (i18 = 315; i18 > 15; i18--) {
            i17 += (i18 ^ Test.instanceCount);
            if (b2) {
                Test.lArrFld[i18 + 1][i18 - 1] <<= -7;
                Test.dFld = f4;
                i20 = 1;
                do {
                    for (i21 = 1; i21 < 1; i21++) {
                        Test.instanceCount = Test.instanceCount;
                        Test.instanceCount += Test.instanceCount;
                        fArr1[i20 + 1] += Test.sFld;
                        i19 <<= i22;
                        i19 *= i;
                        i22 = i22;
                    }
                    i19 += i23;
                    i = i17;
                    for (i24 = i18; i24 < 1; i24++) {
                        i19 &= i23;
                        Test.instanceCount |= Test.instanceCount;
                        i23 = (int)Test.instanceCount;
                        i += i24;
                        Test.iArrFld[i20 + 1][i18] += i25;
                        i >>= i18;
                        Test.sFld *= byFld;
                    }
                } while (++i20 < 84);
            } else if (b2) {
                i19 += (i18 + i25);
            } else {
                Test.iArrFld[i18 - 1][i18] *= i24;
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
