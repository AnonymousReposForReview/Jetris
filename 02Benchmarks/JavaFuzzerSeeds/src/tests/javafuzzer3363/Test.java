package tests.javafuzzer3363;
import utils.FuzzerUtils;
// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  1 06:45:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-63282L;
    public static int iFld=14;
    public static double dFld=-69.48638;
    public static byte byFld=95;
    public static float fFld=1.814F;
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -186L);
        FuzzerUtils.init(Test.fArrFld, 2.453F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, float f, long l2) {

        int i3=-15907, i4=46019, i5=11, i6=192;
        double d=2.12663;
        short s=12857;
        boolean b=true;

        f = i3;
        Test.lArrFld[(i3 >>> 1) % N] -= i3;
        for (d = 5; 165 > d; ++d) {
            for (i5 = 1; i5 < 10; i5++) {
                l2 += (((i5 * f) + l1) - Test.iFld);
                i4 -= (int)87.92177;
                Test.dFld += s;
                s += (short)i5;
                i4 += i6;
                l1 += i5;
            }
            i4 -= i3;
            switch ((((i6 >>> 1) % 8) * 5) + 95) {
            case 124:
                i6 = i3;
                break;
            case 111:
                if (b) continue;
                Test.byFld += (byte)-38192;
                break;
            case 102:
            case 128:
                i6 *= (int)l1;
                break;
            case 118:
                f += (float)(((d * i3) + i6) - f);
                break;
            case 98:
            case 131:
            case 129:
                i6 += (int)(d * d);
                break;
            }
        }
        long meth_res = l1 + Float.floatToIntBits(f) + l2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + s + (b ? 1
            : 0);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        long l3=532079271007538125L;
        float f1=-2.42F;
        int i7=-144, i8=64777, i9=-21323, i10=-53, i11=55454, i12=-206, iArr[]=new int[N];
        short s1=-4822;

        FuzzerUtils.init(iArr, 42822);

        Test.instanceCount += Math.min((-10 + iMeth(l3, f1, Test.instanceCount)) + Test.byFld, -192);
        Test.iFld = Test.iFld;
        for (i7 = 8; i7 < 226; i7++) {
            if (i8 != 0) {
                vMeth1_check_sum += l3 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + s1 + i11 + i12 +
                    FuzzerUtils.checkSum(iArr);
                return;
            }
            f1 += i7;
            for (i9 = 1; i9 < 7; i9++) {
                s1 += (short)i8;
                iArr = iArr;
                Test.iFld += (i9 * i9);
            }
            for (i11 = 7; i11 > 1; i11 -= 2) {
                i8 = i10;
                i8 += (i11 * i11);
                iArr[i11 - 1] = Test.iFld;
                f1 += 2123;
            }
            i8 = i10;
        }
        vMeth1_check_sum += l3 + Float.floatToIntBits(f1) + i7 + i8 + i9 + i10 + s1 + i11 + i12 +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(int i2, long l) {

        int i13=0, i14=31879, i15=-223, i16=-8, i17=-13181, i18=-9, i19=-136, i20=-35;
        boolean b1=false;

        vMeth1();
        Test.iFld = (int)Test.fFld;
        for (i13 = 15; i13 < 277; i13++) {
            if (b1) break;
            for (i15 = 1; i15 < 6; ++i15) {
                i2 -= (int)Test.dFld;
                for (i17 = 1; i17 < 2; i17++) {
                    i14 = -6523;
                    Test.instanceCount |= i2;
                    Test.fArrFld[i13] = l;
                    i14 *= i13;
                }
                i2 = -11;
                for (i19 = 1; i19 < 2; ++i19) {
                    if (b1) break;
                    i16 = 55;
                }
            }
        }
        vMeth_check_sum += i2 + l + i13 + i14 + (b1 ? 1 : 0) + i15 + i16 + i17 + i18 + i19 + i20;
    }

    public void mainTest(String[] strArr1) {

        int i=-126, i1=-8327, i21=-247, i22=1057, i23=9, i24=-103, i25=12, i26=-10, i27=58255;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, -1.63141);

        for (i = 1; i < 137; i += 3) {
            i1 += (i + Test.instanceCount);
            vMeth(i, Test.instanceCount);
            switch ((i % 1) + 100) {
            case 100:
                Test.dFld = Test.dFld;
                Test.instanceCount = i1;
                for (i21 = 8; i21 < 156; ++i21) {
                    Test.lArrFld[i + 1] = i22;
                    Test.instanceCount += (i21 * i21);
                }
                i23 = 184;
                do {
                    i22 = (int)Test.instanceCount;
                    Test.fFld += (i23 * i23);
                    for (i24 = 1; i24 < 4; ++i24) {
                        Test.instanceCount += i24;
                        Test.instanceCount <<= Test.instanceCount;
                        Test.iFld += i23;
                        i22 = Test.byFld;
                        i25 >>= i;
                        dArr[i24 + 1] = i23;
                        iArrFld[i23 - 1] -= i21;
                        iArrFld[i23 - 1] = i;
                    }
                    for (i26 = 1; i26 < 4; ++i26) {
                        i25 *= i;
                        Test.instanceCount *= i23;
                    }
                    Test.fFld = i23;
                    switch (((i >>> 1) % 1) + 103) {
                    case 103:
                        Test.instanceCount += -10;
                        i22 >>>= Test.byFld;
                        i22 += (i23 - Test.instanceCount);
                        break;
                    default:
                        Test.iFld -= (int)Test.instanceCount;
                    }
                } while (--i23 > 0);
                break;
            default:
                try {
                    i22 = (i25 % -55281);
                    iArrFld[i] = (i21 / -149);
                    Test.iFld = (i27 % 72);
                } catch (ArithmeticException a_e) {}
            }
        }


    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
